<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - uc65, a Mid-Level Language Compiler READY FOR USE!</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">uc65, a Mid-Level Language Compiler READY FOR USE!</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=10242">http://forums.nesdev.com/viewtopic.php?f=2&amp;t=10242</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>4</strong> of <strong>11</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>infiniteneslives</b> [ Thu Jul 11, 2013 2:22 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: uc65, a Mid-Level Language Compiler  for the cc65 Toolch</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Awesome to see such rapid progress with this qbradq, good work!  I'll be out of town next week and probably won't have much time to play around with it till I return, but this is pretty exciting.<br /><br /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">I can already see this language mixed up with both assembly and C in a big project :<br />- Time sensitive things : Assembly<br />- Medium sensitive things : This language<br />- Complicated logic not sensitive to timing : C</div><br />Except with C integration bankswitching becomes an issue again, although not necessarily depending on how you set things up I guess.<br /><br />Shiru, I don't believe there is any requirement for MMC3 if you can fit it in NROM you should be good I'd imagine.  From what I understand MMC3 choice is due to need/desire to support bankswitching with a similar sturcture to MMC3 as we were discussing in this <a href="http://forums.nesdev.com/viewtopic.php?f=9&amp;t=10202" class="postlink">thread</a>.  I'm curious as to your plans on this front though qbradq with various structures of bankswitching.  Does the current build support banking?  I don't see it on the project page.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Thu Jul 11, 2013 2:34 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: uc65, a Mid-Level Language Compiler  for the cc65 Toolch</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Do I need to get working on my math library again so that you can have 8-bit multiply, divide, square root, arctangent, and binary-to-decimal subroutines written in assembly language to use in your programs?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>qbradq</b> [ Thu Jul 11, 2013 5:04 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: uc65, a Mid-Level Language Compiler  for the cc65 Toolch</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Currently the rom statement allows you to place your code into any segment you wish. Using that you can implement banking on your own. Just make sure the banking happens in the fixed segment. There's no plan currently to do any sort of automated banking.<br /><br />The choice of MMC3 is because I have an MMC3 dev board thanks to INF <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /> To use this for NROM you just need to change the memory.cfg a bit. I think for release 0.4 I'll have an NROM configuration.<br /><br /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">Do I need to get working on my math library again so that you can have 8-bit multiply, divide, square root, arctangent, and binary-to-decimal subroutines written in assembly language to use in your programs?</div><br /><br />I would appreciate it, but it wouldn't fit the core language very well unless the routines supported n-byte arithmetic (or at least 32-bit). It would be useful as a subroutine library though.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Thu Jul 11, 2013 5:47 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: uc65, a Mid-Level Language Compiler  for the cc65 Toolch</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">qbradq wrote:</div><div class="quotecontent"><div class="quotetitle">tepples wrote:</div><div class="quotecontent">Do I need to get working on my math library again so that you can have 8-bit multiply, divide, square root, arctangent, and binary-to-decimal subroutines written in assembly language to use in your programs?</div><br />I would appreciate it, but it wouldn't fit the core language very well unless the routines supported n-byte arithmetic (or at least 32-bit). It would be useful as a subroutine library though.</div><br /><a href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=10270#p115017" class="postlink">The library</a> as I envision it would be useful even with only 16-bit arithmetic. Several quantities in Thwaite, where the library originated, use the same coordinate format as Balloon Fight and presumably a bunch of other NES games: 16-bit using 8.8 fixed point, where the high byte holds the pixel and the low byte the subpixel.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Thu Jul 11, 2013 9:08 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: uc65, a Mid-Level Language Compiler  for the cc65 Toolch</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Something I forgot to mention earlier: how about 24-bit data types?<br /><br />EDIT: Or is &quot;long&quot; a 24-bit type?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>infiniteneslives</b> [ Thu Jul 11, 2013 9:30 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: uc65, a Mid-Level Language Compiler  for the cc65 Toolch</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">thefox wrote:</div><div class="quotecontent">Something I forgot to mention earlier: how about 24-bit data types?<br /><br />EDIT: Or is &quot;long&quot; a 24-bit type?</div><br /><br />I believe so:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">Type name &nbsp; &nbsp;Byte Width &nbsp; &nbsp;Use<br />byte &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;1 &nbsp; &nbsp;unsigned integer<br />word &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;2 &nbsp; &nbsp;unsigned integer<br />long &nbsp; &nbsp;&nbsp; &nbsp; &nbsp;3 &nbsp; &nbsp;unsigned integer<br />dword &nbsp; &nbsp;&nbsp; &nbsp; 4 &nbsp; &nbsp;unsigned integer<br />address &nbsp; &nbsp;&nbsp; 2 &nbsp; &nbsp;memory address </div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Shiru</b> [ Thu Jul 11, 2013 11:11 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: uc65, a Mid-Level Language Compiler  for the cc65 Toolch</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />More questions, as I'm trying to get my head around this.<br /><br />What is the intended way to include constant arrays of data, like level maps? They needs to be larger than 256 entries. Another thing that is often needed is an array of pointers, like when I have level maps as separate arrays and want to make a list of them to access by index.<br /><br />Is the segments (banks) a must? What if I'll have more than 16K code or data to place into a segment, should I break them between segments manually, or there is/will be a way to put them linearly, if bankswitching is not needed?<br /><br />It is also unclear yet how to interact with the hardware, like NMI and pad polling. I guess that should be done in assembly code, but does it have to be inlined, or could it be done in a separate assembly file?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>qbradq</b> [ Fri Jul 12, 2013 4:14 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: uc65, a Mid-Level Language Compiler  for the cc65 Toolch</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />This is great feedback Shiru, thank you!<br /><br /><div class="quotetitle">Shiru wrote:</div><div class="quotecontent">More questions, as I'm trying to get my head around this.<br /><br />What is the intended way to include constant arrays of data, like level maps? They needs to be larger than 256 entries. Another thing that is often needed is an array of pointers, like when I have level maps as separate arrays and want to make a list of them to access by index.</div><br /><br />These needs will be addressed in the next release, 0.5. It will introduce structures, arrays of structures, tables (initialized arrays in ROM), and the address data type (pointer).<br /><br /><div class="quotetitle">Shiru wrote:</div><div class="quotecontent">Is the segments (banks) a must? What if I'll have more than 16K code or data to place into a segment, should I break them between segments manually, or there is/will be a way to put them linearly, if bankswitching is not needed?</div><br /><br />The segment sizes are 100% a function of the linker memory map. For NROM you'd just use a single 32KB ROM bank.<br /><br /><div class="quotetitle">Shiru wrote:</div><div class="quotecontent">It is also unclear yet how to interact with the hardware, like NMI and pad polling. I guess that should be done in assembly code, but does it have to be inlined, or could it be done in a separate assembly file?</div><br /><br />NMI is handled by the &quot;frame&quot; required subroutine. This subroutine is set as the NMI vector, and includes register push and pop code automatically. If you wanted to implement this vector in a separate assembly file, just export the label as &quot;frame&quot;.<br /><br />Pad polling can be done with the port data type. A port is basically an absolute memory reference, but it's intended purpose is to interact with hardware registers. I am working on an input example now.<br /><br />Currently you can't interact with code from other assembly files (or even other uc files). This will be addressed in release 0.6 with the import statement.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Movax12</b> [ Fri Jul 12, 2013 8:05 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: uc65, a Mid-Level Language Compiler  for the cc65 Toolch</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Suggestions: <br /><br />-If it doesn't exist, a signed integer type (for proper comparisons).<br />-The language should be able to define a mapper type and output the memory configuration for know mappers without the user having to understand how to make/edit ca65 config files.<br />-NMI routine should be definable in code. This is leaking into the realm of an API, not sure how far you want to go, but you could have something like:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">.proc NMI<br />&nbsp; &nbsp; inc frameCounter<br /><br />&nbsp; &nbsp; lda userNMIvector<br />&nbsp; &nbsp; ora userNMIvector + 1<br />&nbsp; &nbsp; beq exit<br />&nbsp; &nbsp; &nbsp; &nbsp; jsr doUserNMI<br />&nbsp; &nbsp; exit: <br />&nbsp; &nbsp; rti<br />&nbsp; &nbsp; <br />&nbsp; &nbsp; doUserNMI:<br />&nbsp; &nbsp; jmp (userNMIVector)<br />&nbsp; &nbsp; <br />.endproc<br /><br />; basic example:<br />; turn off NMI or do something to make sure this macro is not interrupted<br /><br />.macro setNMIRoutine addressImmediate<br />&nbsp; &nbsp; lda #&lt;addressImmediate<br />&nbsp; &nbsp; sta userNMIvector<br />&nbsp; &nbsp; lda #&gt;addressImmediate<br />&nbsp; &nbsp; sta userNMIvector + 1<br />.endmacro<br /><br /></div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>qbradq</b> [ Fri Jul 12, 2013 8:18 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: uc65, a Mid-Level Language Compiler  for the cc65 Toolch</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Signed integer types were deliberately left out because they do not fit the machine architecture. However there are comparison operators that handle the negative flag, namely &lt; 0, &lt;= 0, &gt; 0 and &gt;= 0. It is in the maybe pile though.<br /><br />As for automatic mapper handling, that's something I've put in the maybe pile. I'm going to see how it goes with having some pre-defined default memory maps.<br /><br />Finally, the NMI routine <em>is</em> definable in code, as well as the IRQ routine. The &quot;frame&quot; and &quot;interrupt&quot; subroutines are automatically placed in the respective vectors. Upon entry all registers are pushed onto the stack. All return statements (and the implied return at the end of the subroutine) generate code to restore the registers from the stack and RTI.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Fri Jul 12, 2013 8:23 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: uc65, a Mid-Level Language Compiler  for the cc65 Toolch</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">qbradq wrote:</div><div class="quotecontent">These needs will be addressed in the next release, 0.5. It will introduce structures, arrays of structures, tables (initialized arrays in ROM), and the address data type (pointer).</div><br />I think it might be wise to create a 24-bit <a href="https://en.wikipedia.org/wiki/Far_pointer" class="postlink">&quot;far pointer&quot; type</a> with the bank number in bits 23-16. This would allow easy manipulation of (address, bank number) pairs, and it'd cover an eventual extension to 65816.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">NMI is handled by the &quot;frame&quot; required subroutine. This subroutine is set as the NMI vector, and includes register push and pop code automatically. If you wanted to implement this vector in a separate assembly file, just export the label as &quot;frame&quot;.</div><br />I just wonder how clear the use of &quot;frame&quot; as the name of the NMI handler might be. It might also be useful to provide a default implementation of this required subroutine that just increments a variable on zero page, as seen in Lawn Mower and Thwaite.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Pad polling can be done with the port data type. A port is basically an absolute memory reference, but it's intended purpose is to interact with hardware registers.</div><br />So sort of like a volatile pointer in C?<br /><br />EDIT: As for the &quot;frame&quot; and &quot;interrupt&quot;, some coding styles use different NMI handlers for different parts of the game, with a JMP trampoline in RAM to switch among them. It might be wise to make a qualifier for subroutines that says &quot;this subroutine uses interrupt calling conventions, including callee-saved A/X/Y, no return value, and RTI instead of RTS.&quot;

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Movax12</b> [ Fri Jul 12, 2013 8:25 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: uc65, a Mid-Level Language Compiler  for the cc65 Toolch</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />If you wanted to be able to compare variables to other variables, you would need to know if a variable is signed to compare properly: <!-- m --><a class="postlink" href="http://www.6502.org/tutorials/compare_beyond.html#5">http://www.6502.org/tutorials/compare_beyond.html#5</a><!-- m --><br /><br />For the NMI thing, that just feels more high level to me, to have the ability to define your NMI in a statement. If you don't want to go that way it's cool.<br /><br />EDIT: link.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>slobu</b> [ Tue Jul 16, 2013 12:12 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: uc65, a Mid-Level Language Compiler  for the cc65 Toolch</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Holy cow!  I forget to lurk for a few days and this leaps into life!<br /><br />This project and infiniteneslives flash carts are pretty much the only way someone like me could possibly create their own NES game.  I'll be watching and attempting to get this working for myself <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /><br />I've mentioned this before, but, batari BASIC is something I wouldn't be shy about drawing inspiration from:<br /><!-- m --><a class="postlink" href="http://www.randomterrain.com/atari-2600-memories-batari-basic-commands.html">http://www.randomterrain.com/atari-2600 ... mands.html</a><!-- m --><br /><br />I especially enjoy how easy it is to deal with joystick input and sprite positioning<br /> if joy0left then player0x = player0x - 1<br /><br />Bitwise operations are also dead simple to use in bB.  Anything from picking individual bits from variables used as counters (i.e. if counter{4} then goto march) to defining single bits in a byte for use as boolean variables:  &quot;def isnekkid=attributes{0}&quot;

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Movax12</b> [ Tue Jul 16, 2013 7:14 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: uc65, a Mid-Level Language Compiler  for the cc65 Toolch</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I've mentioned this before, but, batari BASIC is something I wouldn't be shy about drawing inspiration from:<br /></div><br /><br />For comparision, In ca65hl:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">if buttons &amp; #BUTTON_A goto label<br /></div><br /><br />or<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">if buttons &amp; #BUTTON_A<br />;do stuff<br />endif<br /></div><br /><br />Bitwise stuff:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">setFlag foo, bit<br />clrFlag&nbsp; foo, bit<br /><br />if { flagSet foo, bit }<br />; do stuff<br />endif<br /></div><br /><br />How to the bit test is determined:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">.macro flagSet addr, bitnum<br />&nbsp; &nbsp; &nbsp; &nbsp; .if .not .blank(bitnum)<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; .if bitnum = 7<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; bit addr<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; set_flag_test N set<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; .elseif bitnum = 6<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; bit addr<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; set_flag_test V set<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; .else<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; lda addr<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; and #(1 .shl bitnum)<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; set_flag_test Z clear<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; .endif<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <br />&nbsp; &nbsp; &nbsp; &nbsp; .else ; no bitnum specified<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; bit addr<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; set_flag_test N set<br />&nbsp; &nbsp; &nbsp; &nbsp; .endif<br />&nbsp; &nbsp; .endmacro<br /></div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>qbradq</b> [ Wed Jul 24, 2013 4:48 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: uc65, a Mid-Level Language Compiler  for the cc65 Toolch</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Just wanted to let you folks know I'm not dead yet <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /> For the past two weeks I've been closing one project and opening another at work, so my workload is essentially doubled. I am looking forward to working on uc65 again within the next two weeks or so when things settle down.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>4</strong> of <strong>11</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>