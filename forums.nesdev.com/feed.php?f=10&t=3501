<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=10&amp;t=3501" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2007-09-24T09:41:21-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=10&amp;t=3501</id>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2007-09-24T09:41:21-07:00</updated>
<published>2007-09-24T09:41:21-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3501&amp;p=27187#p27187</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3501&amp;p=27187#p27187"/>
<title type="html"><![CDATA[interrupt vectors]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3501&amp;p=27187#p27187"><![CDATA[
In general a device asserting /IRQ must hold it until the program acknowledges it. Why doesn't the processor just latch it like /NMI? Because multiple devices could be connected to /IRQ and more than one could be asserting at once.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Mon Sep 24, 2007 9:41 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[doppelganger]]></name></author>
<updated>2007-09-22T21:32:19-07:00</updated>
<published>2007-09-22T21:32:19-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3501&amp;p=27173#p27173</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3501&amp;p=27173#p27173"/>
<title type="html"><![CDATA[interrupt vectors]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3501&amp;p=27173#p27173"><![CDATA[
The interrupt disable flag is set on the processor status register everytime an interrupt is allowed to occur.  It is reset to whatever it was set to originally upon reaching RTI.  It is also affected by the PLP instruction.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=119">doppelganger</a> — Sat Sep 22, 2007 9:32 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[sepi]]></name></author>
<updated>2007-07-26T01:49:14-07:00</updated>
<published>2007-07-26T01:49:14-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3501&amp;p=25983#p25983</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3501&amp;p=25983#p25983"/>
<title type="html"><![CDATA[interrupt vectors]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3501&amp;p=25983#p25983"><![CDATA[
Also, what if completing a interupt vector takes long enough to miss falling edge in /IRQ line?<br /><br />is the interrupt cleared on RTI or when the jump to the interrupt vector completed?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=61">sepi</a> — Thu Jul 26, 2007 1:49 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[atari2600a]]></name></author>
<updated>2007-07-25T23:42:13-07:00</updated>
<published>2007-07-25T23:42:13-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3501&amp;p=25982#p25982</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3501&amp;p=25982#p25982"/>
<title type="html"><![CDATA[interrupt vectors]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3501&amp;p=25982#p25982"><![CDATA[
the SEI instruction, I believe.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3367">atari2600a</a> — Wed Jul 25, 2007 11:42 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[sepi]]></name></author>
<updated>2007-07-25T21:39:28-07:00</updated>
<published>2007-07-25T21:39:28-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3501&amp;p=25977#p25977</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3501&amp;p=25977#p25977"/>
<title type="html"><![CDATA[interrupt vectors]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3501&amp;p=25977#p25977"><![CDATA[
Thanks for your help!<br /><br />Clearing bit 7 from $2000 disables execution of /NMI, but is there any way to prevent triggering of BRK/IRQ vector?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=61">sepi</a> — Wed Jul 25, 2007 9:39 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2007-07-24T18:13:06-07:00</updated>
<published>2007-07-24T18:13:06-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3501&amp;p=25955#p25955</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3501&amp;p=25955#p25955"/>
<title type="html"><![CDATA[interrupt vectors]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3501&amp;p=25955#p25955"><![CDATA[
Bankswitching $E000-$FFFF will affect which physical address in PRG ROM the CPU pulls the vectors from. Most mappers freeze $E000+ or $C000+ to the last bank to prevent this, but some have "32 KiB bankswitching" that allows $8000-$FFFF to be switched as a unit. This is useful if a game has multiple independent 32 KiB game engines, as the NMI and IRQ vectors can be pointed to a different handler for each bank, but it needs special care when one subroutine calls another subroutine in a different bank.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Tue Jul 24, 2007 6:13 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[doppelganger]]></name></author>
<updated>2007-07-24T10:19:52-07:00</updated>
<published>2007-07-24T10:19:52-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3501&amp;p=25948#p25948</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3501&amp;p=25948#p25948"/>
<title type="html"><![CDATA[interrupt vectors]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3501&amp;p=25948#p25948"><![CDATA[
Yes, the program counter (PC) gets loaded with the proper address at $fffa-$ffff, depending on the type of interrupt, sometime at the end of the actual cycle count used for the interrupt itself.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=119">doppelganger</a> — Tue Jul 24, 2007 10:19 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[atari2600a]]></name></author>
<updated>2007-07-24T02:26:06-07:00</updated>
<published>2007-07-24T02:26:06-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3501&amp;p=25946#p25946</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3501&amp;p=25946#p25946"/>
<title type="html"><![CDATA[interrupt vectors]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3501&amp;p=25946#p25946"><![CDATA[
To my knowledge they're read from $FFFA-FFFF each time.  I'm not an expert on 6502/2A0X though...<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3367">atari2600a</a> — Tue Jul 24, 2007 2:26 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[sepi]]></name></author>
<updated>2007-07-23T22:06:28-07:00</updated>
<published>2007-07-23T22:06:28-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3501&amp;p=25945#p25945</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3501&amp;p=25945#p25945"/>
<title type="html"><![CDATA[interrupt vectors]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3501&amp;p=25945#p25945"><![CDATA[
Hi!<br />I have question about interrupt vectors.<br /><br />Are interrupt vectors always fetched from $FFFA - FFFF ? or are they somehow cached in the CPU during the bootup cycle?<br /><br />- Sepi<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=61">sepi</a> — Mon Jul 23, 2007 10:06 pm</p><hr />
]]></content>
</entry>
</feed>