<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=2&amp;t=4043" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2012-05-02T19:28:11-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=2&amp;t=4043</id>
<entry>
<author><name><![CDATA[MottZilla]]></name></author>
<updated>2012-05-02T19:28:11-07:00</updated>
<published>2012-05-02T19:28:11-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4043&amp;p=93220#p93220</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4043&amp;p=93220#p93220"/>
<title type="html"><![CDATA[True behavior of $2003/$2004 or FCE Ultra eccentricity?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4043&amp;p=93220#p93220"><![CDATA[
<div class="quotetitle">kyuusaku wrote:</div><div class="quotecontent"><br />It is possible to DMA from PRG-ROM or RAM to CHR-RAM or VRAM (must be external VRAM) through a mapper. Depending on how it's constructed you don't even need to halt the CPU. It's not a cheap feature to add though since either a ton of I/O are required to multiplex two memories, or a FPGA with sufficient block RAM is required.<br /></div><br /><br />At that point maybe you should just throw a fast CPU, maybe a 6502 core if not something more modern, in the cartridge with some shared memory to do all your heavy processing and just use the stock cpu for what it must do like input reading and uploading PPU updates and setting up the PPU registers each frame. <br /><br />But at that point maybe you should be developing for a different system.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=1726">MottZilla</a> — Wed May 02, 2012 7:28 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2012-05-02T11:34:12-07:00</updated>
<published>2012-05-02T11:34:12-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4043&amp;p=93195#p93195</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4043&amp;p=93195#p93195"/>
<title type="html"><![CDATA[True behavior of $2003/$2004 or FCE Ultra eccentricity?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4043&amp;p=93195#p93195"><![CDATA[
That's basically what happens in the MMC5's EXRAM--- there is no such thing as DMA - but the RAM is shared between both buses.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Wed May 02, 2012 11:34 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[kyuusaku]]></name></author>
<updated>2012-05-02T11:21:59-07:00</updated>
<published>2012-05-02T11:21:59-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4043&amp;p=93194#p93194</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4043&amp;p=93194#p93194"/>
<title type="html"><![CDATA[True behavior of $2003/$2004 or FCE Ultra eccentricity?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4043&amp;p=93194#p93194"><![CDATA[
It is possible to DMA from PRG-ROM or RAM to CHR-RAM or VRAM (must be external VRAM) through a mapper. Depending on how it's constructed you don't even need to halt the CPU. It's not a cheap feature to add though since either a ton of I/O are required to multiplex two memories, or a FPGA with sufficient block RAM is required.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=20">kyuusaku</a> — Wed May 02, 2012 11:21 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2012-05-02T11:04:32-07:00</updated>
<published>2012-05-02T11:04:32-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4043&amp;p=93193#p93193</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4043&amp;p=93193#p93193"/>
<title type="html"><![CDATA[True behavior of $2003/$2004 or FCE Ultra eccentricity?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4043&amp;p=93193#p93193"><![CDATA[
<div class="quotetitle">tepples wrote:</div><div class="quotecontent"><br />Yeah, and if DMA supported $2007 as well as $2004, we would have had the equivalent of Blast Processing.<br /></div><br />Would it be possible to implement such a DMA in a mapper? I guess that the mapper can't halt the CPU, so is there a way to work around that?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Wed May 02, 2012 11:04 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[3gengames]]></name></author>
<updated>2012-05-02T09:31:11-07:00</updated>
<published>2012-05-02T09:31:11-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4043&amp;p=93188#p93188</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4043&amp;p=93188#p93188"/>
<title type="html"><![CDATA[True behavior of $2003/$2004 or FCE Ultra eccentricity?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4043&amp;p=93188#p93188"><![CDATA[
<div class="quotetitle">MottZilla wrote:</div><div class="quotecontent"><br />If they had supported $2007 with DMA though they would have needed to add even more registers and logic to define size of transfer and source, etc. And they were determined to keep costs down.<br /></div><br /><br />Yeah, but then when you had to add so many mappers to swap out graphics better, it probably really hurt in the end.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4311">3gengames</a> — Wed May 02, 2012 9:31 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[MottZilla]]></name></author>
<updated>2012-05-02T09:07:03-07:00</updated>
<published>2012-05-02T09:07:03-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4043&amp;p=93186#p93186</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4043&amp;p=93186#p93186"/>
<title type="html"><![CDATA[True behavior of $2003/$2004 or FCE Ultra eccentricity?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4043&amp;p=93186#p93186"><![CDATA[
If they had supported $2007 with DMA though they would have needed to add even more registers and logic to define size of transfer and source, etc. And they were determined to keep costs down.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=1726">MottZilla</a> — Wed May 02, 2012 9:07 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2012-05-02T07:52:50-07:00</updated>
<published>2012-05-02T07:52:50-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4043&amp;p=93185#p93185</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4043&amp;p=93185#p93185"/>
<title type="html"><![CDATA[True behavior of $2003/$2004 or FCE Ultra eccentricity?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4043&amp;p=93185#p93185"><![CDATA[
<div class="quotetitle">LoneKiltedNinja wrote:</div><div class="quotecontent"><br />keep your vblank timing in mind.  DMA is fast, but only as fast as the CPU's load/store instructions sans the retrieve-next-opcode subcycles.<br /></div><br />Yeah, and if DMA supported $2007 as well as $2004, we would have had the equivalent of Blast Processing. This means we wouldn't have needed to use retrieve-next-opcode subcycles when copying patterns to CHR RAM or rows and columns of tiles to the nametables, and there might not have been as much of a need for the sort of fine-grained CHR bankswitching seen in MMC3-class mappers. Nintendo realized this and made the Super NES's DMA more generic.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Wed May 02, 2012 7:52 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2012-05-02T05:42:32-07:00</updated>
<published>2012-05-02T05:42:32-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4043&amp;p=93180#p93180</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4043&amp;p=93180#p93180"/>
<title type="html"><![CDATA[True behavior of $2003/$2004 or FCE Ultra eccentricity?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4043&amp;p=93180#p93180"><![CDATA[
FCEU is definitely not accurate when it comes to sprites. In all versions I tried, not only $2003/$2004 had problems, but the whole sprite evaluation process appears to be broken. It seems that sprite emulation is pretty high-level in FCEU, and very different from the actual hardware.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Wed May 02, 2012 5:42 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[LoneKiltedNinja]]></name></author>
<updated>2012-05-01T19:44:40-07:00</updated>
<published>2012-05-01T19:44:40-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4043&amp;p=93170#p93170</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4043&amp;p=93170#p93170"/>
<title type="html"><![CDATA[True behavior of $2003/$2004 or FCE Ultra eccentricity?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4043&amp;p=93170#p93170"><![CDATA[
Another necrobump; only posting because I caught this issue in my own current project (more PowerGlovey goodness) and it tipped me off to what might be wrong, although I don't see evidence that the original poster accepted the given answer.<br /><br />So.<br /><br />On Nestopia, $2003 and $2004 behave precisely as naive-documented.  Write the address in sprite-memory that you want to get at to $2003, then write your data sequentially to $2004.  $2003 takes any old address, even unaligned addresses, and it's perfectly fine to jump straight to the desired sprite's Y coordinate and write that.<br /><br />On hardware... oof.  I haven't done thorough-thorough testing, but even when I reset $2003 every frame, I was getting not-wholly-deterministic behavior on sprites 0 and 1 when I jumped straight to the Y coordinate of sprite 1 and wrote 4 bytes in succession.   I've  also seen "sprite trails" from not resetting $2003 every frame and sprites 0/1 taking some function of the most recent data I wrote.<br /><br />I seem to have the most success when I only $2003-jump to addresses on a $08 boundary (the Y coordinate of even-numbered sprites).  $04 boundaries may be safe outside of sprites 0 and 1.  Heck, arbitrary addresses may be safe and I'm just being paranoid.  If you're developing on a system that you can't just quickly build and test against your target platform, you're going to have bigger problems than sprite indexing.<br /><br />Also, goes without saying, keep your vblank timing in mind.  DMA is fast, but only as fast as the CPU's load/store instructions sans the retrieve-next-opcode subcycles.  If you're DMAing and then manually editing more than a few sprites, you may run out of vblank.  Empirically, ~256 bytes is about what I've found I can change on a given frame without issues.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3570">LoneKiltedNinja</a> — Tue May 01, 2012 7:44 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Disch]]></name></author>
<updated>2008-04-13T06:38:08-07:00</updated>
<published>2008-04-13T06:38:08-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4043&amp;p=32676#p32676</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4043&amp;p=32676#p32676"/>
<title type="html"><![CDATA[True behavior of $2003/$2004 or FCE Ultra eccentricity?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4043&amp;p=32676#p32676"><![CDATA[
FCEU is really showing its age.  While it does have a very nice debugger, I wouldn't rely on the accuracy of its behavior.<br /><br />Everything you need to know:<br /><br /><br />- $2003 sets the OAM address<br /><br />- $2004 copies a byte to that address, then increments the address (on write)<br /><br />- $4014 simply writes to $2004 256 times<br /><br />- $2003 is changed constantly by the PPU during rendering.<br /><br />- Turning the PPU off mid-rendering will leave $2003 in a semi-random state (its state can actually be determined -- but for your purposes it'd be a garbage value)<br /><br />- After rendering, if the PPU is still on, $2003 finds its way back to a value of $00<br /><br />- Sprite 0 and sprite 1 have a quick where they don't necessarily use the first 8 bytes of OAM, but instead they use the bytes of OAM "pointed to" by $2003.  Example, if $2003=18, the sprite 0 will use OAM[$18-$1B] (same data as sprite 3) and sprite 1 will use OAM [$1C-1F] (same data as sprite 4), and OAM[$00-$07] goes completely unused.  Note for this behavior to be exploited, you'd need to set $2003 appropriately each frame because it gets reset by the PPU (or does it?  I'm still unsure about that).  At any rate, I wouldn't do this anyway and I'd just set $2003 to zero every frame.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=33">Disch</a> — Sun Apr 13, 2008 6:38 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2008-04-13T04:58:31-07:00</updated>
<published>2008-04-13T04:58:31-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4043&amp;p=32675#p32675</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4043&amp;p=32675#p32675"/>
<title type="html"><![CDATA[True behavior of $2003/$2004 or FCE Ultra eccentricity?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4043&amp;p=32675#p32675"><![CDATA[
<div class="quotetitle">tokumaru wrote:</div><div class="quotecontent"><br />The wiki doesn't explain much...<br /></div><br />There's not much to explain. What more is there to cover?<br /><div class="quotetitle">NesDevWiki wrote:</div><div class="quotecontent"><br />OAMADDR ($2003) <br />OAM address (write): Write the address of OAM you want to access here.<br /><br />OAMDATA ($2004)<br />OAM data port (r/w): Write OAM data here. Writes will increment OAMADDR; reads won't.<br /></div><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Sun Apr 13, 2008 4:58 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2008-04-13T01:56:31-07:00</updated>
<published>2008-04-13T01:56:31-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4043&amp;p=32674#p32674</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4043&amp;p=32674#p32674"/>
<title type="html"><![CDATA[True behavior of $2003/$2004 or FCE Ultra eccentricity?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4043&amp;p=32674#p32674"><![CDATA[
IIRC, "Super Cars" also depends on $2004 reads, in order to blank scanlines at the top of the screen. It doesn't look right in FCEUXD, but works in nintendulator and Nestopia.<br /><br />EDIT: The wiki doesn't explain much...<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Sun Apr 13, 2008 1:56 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2008-04-13T01:41:53-07:00</updated>
<published>2008-04-13T01:41:53-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4043&amp;p=32671#p32671</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4043&amp;p=32671#p32671"/>
<title type="html"><![CDATA[True behavior of $2003/$2004 or FCE Ultra eccentricity?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4043&amp;p=32671#p32671"><![CDATA[
Well, I don't know much about $2003 and $2004, as those are definitely the most obscure registers on the NES hardware even today. I just know FCEUltra isn't that accurate, so very likely it's a bug in the source, and Nintendulator and Nestopia are the 2 most accurate emulators arround, so its more likely they are right.<br /><br />Also, Micro Machines relies on $2004 reads during rendering, that's really obscure, and so. I don't know but maybe FCEUltra did something hackish to get this (unlicenced) game to work even if it breaks the real logic.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Sun Apr 13, 2008 1:41 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2008-04-13T01:38:27-07:00</updated>
<published>2008-04-13T01:38:27-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4043&amp;p=32670#p32670</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4043&amp;p=32670#p32670"/>
<title type="html"><![CDATA[True behavior of $2003/$2004 or FCE Ultra eccentricity?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4043&amp;p=32670#p32670"><![CDATA[
It's covered in the <a href="http://nesdevwiki.org/index.php/NES_PPU#OAMADDR_.28.242003.29" class="postlink">wiki</a>.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Sun Apr 13, 2008 1:38 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[carljr17]]></name></author>
<updated>2008-04-12T22:54:07-07:00</updated>
<published>2008-04-12T22:54:07-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4043&amp;p=32668#p32668</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4043&amp;p=32668#p32668"/>
<title type="html"><![CDATA[True behavior of $2003/$2004 or FCE Ultra eccentricity?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4043&amp;p=32668#p32668"><![CDATA[
What exactly is the behavior of $2003/$2004 on real NES hardware?  <br /><br />Any documentation that I've come across claims that you write the SPR-RAM address to $2003, and the byte you want to store to $2004.  Okay -- that seems REALLY straightforward.  But guess what?  Clearly not everyone agrees on it.<br /><br />Okay.  Here's the situation: <br /><br />I want to perform a DMA to SPR-RAM and then hide certain sprites by using $2003/$2004 and overwriting their Y-coordinates.  I'm not using my entire "local" SPR-RAM page for sprites, and need to hide the sprites which overlap my other data.<br /><br />Example:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">lda #0<br />sta $2003<br />sta $4014  ; SPR-RAM &lt;- $0000-$00FF<br /><br />ldx #$FF  ; used to hide sprites &#40;any value in $EF-$FF will do&#41;<br /><br />lda #35 * 4  ; sprite #35 @ Y-coordinate<br />sta $2003<br />stx $2004<br />.. &#40;etc., for each sprite I want to hide&#41;<br /></div><br /><br />I'm using FCE Ultra because it's the only emulator I've found that has reasonable debugging features.  However, the way it responds to writes to $2003 is bizarre.  I had to get into the source code to understand it, and here's the relevant portion:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">static DECLFW&#40;B2003&#41;<br />&#123;<br />                //printf&#40;&quot;$%04x:$%02x, %d, %d\n&quot;,A,V,timestamp,scanline&#41;;<br />                PPUGenLatch=V;<br />                PPU&#91;3&#93;=V;<br />                PPUSPL=V&amp;0x7;<br />&#125;<br /><br />static DECLFW&#40;B2004&#41;<br />&#123;<br />                //printf&#40;&quot;$%04x:$%02x, %d, %d\n&quot;,A,V,timestamp,scanline&#41;;<br />                //printf&#40;&quot;$%04x:$%02x, %d\n&quot;,X.PC,V,scanline&#41;;<br />                PPUGenLatch=V;<br />                if&#40;PPUSPL&gt;=8&#41;<br />                &#123;<br />                 if&#40;PPU&#91;3&#93;&gt;=8&#41;<br />                  SPRAM&#91;PPU&#91;3&#93;&#93;=V;<br />                &#125;<br />                else<br />                &#123;<br />                 //printf&#40;&quot;$%02x:$%02x\n&quot;,PPUSPL,V&#41;;<br />                 SPRAM&#91;PPUSPL&#93;=V;<br />                &#125;<br />                PPU&#91;3&#93;++;<br />                PPUSPL++;<br />&#125;<br /></div><br /><br />If I understand the above right, you can only position ($2003) and write to ($2004) the first eight locations of SPR-RAM, which corresponds to the first two sprites (sprites #0 &amp; #1).  If I want to write to any other sprite, I must first write to address 7 (sprite #1's X-coordinate), then "make my way" to the "true" address (unless the sprite is even numbered and I want to access the Y-coordinate, in which case I'm there).<br /><br />Example (doesn't work in FCE Ultra):<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">lda #$8C   ; &#40;= 35 * 4,address of sprite #35's Y-coordinate&#41;<br />sta $2003  ; PPU&#91;3&#93; = $8C, PPUSPL = $04<br /><br />stx $2004  ; SPRAM&#91;$04&#93; &lt;- $FF &#40;and not SPRAM&#91;$8C&#93; &lt;- $FF&#41;<br /></div><br /><br />So, the quickest way to get to the intended address would be to:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">lda #$87<br />sta $2003  ; PPU&#91;3&#93; = $87, PPUSPL = $07<br /><br />stx $2004  ; SPRAM&#91;$07&#93; &lt;- $FF &#40;trash sprite #1's Y-coordinate&#41;<br /><br />stx $2004  ; SPRAM&#91;$88&#93; &lt;- $FF &#40;trash sprite #34's Y-coordinate&#41;<br />stx $2004  ; SPRAM&#91;$89&#93; &lt;- $FF &#40;trash sprite #34's Tile Index&#41;<br />stx $2004  ; SPRAM&#91;$8A&#93; &lt;- $FF &#40;trash sprite #34's Attribute&#41;<br />stx $2004  ; SPRAM&#91;$8B&#93; &lt;- $FF &#40;trash sprite #34's X-coordinate&#41;<br /><br />stx $2004  ; finally, store out sprite #35's Y-coordinate<br /></div><br /><br />Obviously unacceptable.  So my question is, what happens on real hardware?  I looked at the source for two other emulators (Nintendulator &amp; Nestopia) and neither of them handle $2003 the way FCE Ultra does (they just accept the sprite address as is, as one would expect).  I'd try it myself, but I don't have any development hardware and it looks like the PowerPak from RetroZone is temporarily unavailable. <br /><br />Unfortunately, my project cannot move forward until I can resolve this.  Can someone please respond?<br /><br />Thanks in advance, Carl<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3509">carljr17</a> — Sat Apr 12, 2008 10:54 pm</p><hr />
]]></content>
</entry>
</feed>