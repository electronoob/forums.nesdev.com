<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - speed optimizations vs development time</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">speed optimizations vs development time</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=5&amp;t=7151">http://forums.nesdev.com/viewtopic.php?f=5&amp;t=7151</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>2</strong> of <strong>2</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>psycopathicteen</b> [ Thu Nov 25, 2010 10:56 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I think DKC has intentional slowdown everytime there are more than approx 32 16x16 sprite cells onscreen, due to DMA limits.  Never studied the code, but it is a possibility.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Thu Nov 25, 2010 11:53 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">psycopathicteen wrote:</div><div class="quotecontent">I think DKC has intentional slowdown everytime there are more than approx 32 16x16 sprite cells onscreen, due to DMA limits.</div>
<br />Yeah, that's 4 KiB, and I've been told the limit on NTSC is 7 KiB per frame. But it could have just started skipping frames of animation instead of changing the gameplay speed.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dwedit</b> [ Thu Nov 25, 2010 12:23 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Battletoads delayed the animation switching to the next frame when it was updating too many tiles (like what happens in 2 player mode.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>MottZilla</b> [ Thu Nov 25, 2010 12:52 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Well Battletoads (NTSC) is pretty well known for all sorts of clever tricks to get the most out of the NES. I guess on PAL it's less impressive with all the extra VBlank time.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>psycopathicteen</b> [ Thu Nov 25, 2010 12:59 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Now that we're on the subject of animation, how do "animation slots" work.  Most games don't have uniform sized sprites.  Smaller slots mean smaller objects/characters, but bigger slots mean less objects/characters onscreen.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Thu Nov 25, 2010 2:48 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />In fact aside of Battletoads, it was extremely uncommon to use such as "slot" system on the NES, as opposed to what is seen on other systems. The low ROM-&gt;VRAM bandwith is the reason for this.
<br />99% of games just have banks of graphics which are loaded once in a level, or that are switched as animations need to change, such as in SMB3, allowing for more a detailed main character and / or more main characters.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dwedit</b> [ Thu Nov 25, 2010 3:08 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />If I was designing a VRAM system, I'd use a cache system, where stuff gets loaded in and out as needed.
<br />If you need dynamically created graphics, mark something as locked so you can draw there, but it's still in the table.
<br />
<br />But I only like caching systems because I made a caching system for PocketNES GBAMP, and a caching system is my new hammer, so I'm looking for nails.  But I still think VRAM management makes a good nail.  Caching systems are good any time you have something smaller that's limited, and something less accessible that's big.
<br />
<br />A caching system for VRAM is nothing like a slot system, since slot systems tend to keep the locations of sprites fixed, so new graphics overwrite old graphics.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>MottZilla</b> [ Thu Nov 25, 2010 3:09 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />NES games that have very detailed animation going on are probably going to use CHR-ROM and if possible 1K CHR Banks. As Bregalad said you have too little time to use CHR-RAM and still update all the patterns you need to. Battletoads manages to pull off alot. But it is at the top of the pack. It pushes the limits probably. Most games work on a much slower pace only loading CHR-RAM between scenes. Or like 1943, it will slowly update CHR-RAM as you progress through the level so by the time you get to where new tiles are used they are loaded.
<br />
<br />Some NES games, like Crisis Force, use CHR-ROM 1K banking for some really neat effects that happen just because of changing the pattern data banked in. Like in the first level there is a vertical running trench that parallax scrolls. 
<br />
<br />On SNES with DMA you can probably afford to just DMA alot of patterns from ROM or WRAM banks $7E&amp;7F. But you'll still have limits. You just have to decide what works best for you and your game.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dwedit</b> [ Thu Nov 25, 2010 3:11 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Don't forget Nightmare on Elm Street.  It also uses a Battletoads-like system, even with 4-player support.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>psycopathicteen</b> [ Sat Nov 27, 2010 1:54 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Dwedit wrote:</div><div class="quotecontent">If I was designing a VRAM system, I'd use a cache system, where stuff gets loaded in and out as needed.<br />If you need dynamically created graphics, mark something as locked so you can draw there, but it's still in the table.<br /><br />But I only like caching systems because I made a caching system for PocketNES GBAMP, and a caching system is my new hammer, so I'm looking for nails.  But I still think VRAM management makes a good nail.  Caching systems are good any time you have something smaller that's limited, and something less accessible that's big.<br /><br />A caching system for VRAM is nothing like a slot system, since slot systems tend to keep the locations of sprites fixed, so new graphics overwrite old graphics.</div>
<br />
<br />How does that work?  That sounds really complicated.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dwedit</b> [ Sat Nov 27, 2010 4:01 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">psycopathicteen wrote:</div><div class="quotecontent">How does that work?  That sounds really complicated.</div>
<br />
<br />Fun thing is though that this algorithm was originally designed for page replacement for processor caches, or for paging for virtual memory, but it can be used in many different places too.
<br />
<br />So let's say it's just a way of having a huge number of "virtual" tile numbers from some expansive bank of ROM, and far less "physical" tile slots to put them in.
<br />You could do it for the background, so a background could be specified just using a wide range of virtual tile numbers, then they are loaded and unloaded as needed when they become physical tile numbers.
<br />Or you could do it for sprites too.
<br />
<br />Data structures used:
<br />* Mapping between virtual tile numbers =&gt; physical tile numbers.  A lookup or hash table works here, but pure lookup tables might be too big.  Needs to be fast, because there are a ton of lookups.
<br />* Mapping between physical tiles =&gt; virtual tile numbers.  It's so the you know for each physical tile which virtual tile is mapped in there.
<br />* Reference Count or "Locked" flag for physical tiles so you know which ones are in use, so they shouldn't be expired.
<br />* If you want, a "this was used recently" bit to indicate give a tile a second chance before it's replaced.
<br />* A cursor (just an integer) telling which tile gets replaced next.
<br />
<br />Operations:
<br />* The only real operations are Fetch, Lock/Increment reference, and Unlock/Decrement reference.
<br />* Fetch: You request a given tile, and it returns where it is, or replaces something so you can get it.  If you use the second chance bit, indicate that it gets a second chance.
<br />* Replace: Called from fetch.  Skip everything that's locked.  If it has a second chance, it loses that, and skip it.
<br />* Pre-Load: Maybe you want stuff to be in the cache even though it isn't currently being used yet.
<br />
<br />How to use it for backgrounds:
<br />* When tiles go in (exposing new area for scrolling), check if the tile is in the cache, increment it.
<br />* When tiles go out, decrement it.
<br />* For animated tiles, you have two choices, either animate the physical tiles and leave the virtual tiles constant, or change the virtual tiles on the map.
<br />
<br />How to use it for sprites:
<br />* Look up everything before you do any replacements, so you don't throw out actively used stuff.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>psycopathicteen</b> [ Sun Dec 12, 2010 5:10 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I just thought up a fairly simple slot-based animation system that would work well on the SNES.  Divide the sprite pattern table into 16 slots of 8 16x16 sprites.  Any enemy or objesct can look for 1 or several unused slot, use the slot, or retire the slot.  Slots can be used for real time animation updates for enemies as big as 32x64, or slots can be used to hold several needed animation frames for smaller characters and objects that are used within a specific area.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>2</strong> of <strong>2</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>