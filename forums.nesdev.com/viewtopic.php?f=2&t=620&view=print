<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Obtaining 11-bit pitch period only by calculation</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Obtaining 11-bit pitch period only by calculation</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=620">http://forums.nesdev.com/viewtopic.php?f=2&amp;t=620</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Sat Oct 01, 2005 1:44 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Obtaining 11-bit pitch period only by calculation</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Is it possible to calculate the 11-bit period only by calculation, I mean not use a table to found a period for a not, then add a constant to do vibrato/slide effects, because this isn't techically correct. I mean I should add/substract a value in function of the period itself. For example, if we remove a constant value to a period, the tune won't rise lineary, but it will rise slow, then faster. I wan't to be able to do it only by calculation, so it would rise lineary. Any ideas ? I think Just Breed does that, I dissasembled it's code once. I'll try to re-found it.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Disch</b> [ Sat Oct 01, 2005 3:30 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />No practical way really.  Converting from period to tone involves hefty division... and even after you get the tone you'd still have to scale it and convert it back to a period value.
<br />
<br />As for doing pitch bends/vibrattos, a simple yet effective way would be to add/subtract the period right shift a bunch to itself.  Something like:
<br />
<br />period += period &gt;&gt; 3;  // to bend downwards
<br />period -= period &gt;&gt; 4;  //to bend upwards
<br />
<br />It might take some tinkering but the concept should work.  This way as the periods get smaller... so does the value you add/subtract.  Which does a decent job of evening out the rate of the bends.
<br />
<br />In my example there I subtract a smaller number than I add... which you'll probably need to do in practice... since:
<br />
<br />period -= period &gt;&gt; 1; // will go 1 full octave up
<br />period += period &gt;&gt; 1; // will only go about 2/5th an octave down
<br />
<br />so like I said, it'll take some tinkering

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Sun Oct 02, 2005 12:46 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Yeah, so that the add/substract amount is relative to the period itself.
<br />However, this isn't very pratical to use, scince you have to read the older period. I mean have a main pitch value, then several add/substract relative value to the pitch, regardless of the pitch itself. This value would be composition of the bend pitch and vibratoes, and possibly detune value, etc....
<br />So that would be pratical to use from the main sound code, even if it may need some complicated calculation.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Sun Oct 02, 2005 10:05 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Here you are the crazy code I found in Just Breed.
<br />I understant pretty much the begining, but the end becomes very crazy. It uses the MMC5 multiplier once, but scince it multiplies by $40, it would be pretty simple to write a similar code for a normal mapper. I just didn't understand the actual algorithm behind that.
<br />Note that you enter with $4e=octave, and output with $4a = low 8 bits of period, $4b = high 3 bits of period. You enter with note in A, that is between $0 and $b (between C and B of the upper octave, for each semitune respectively).
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">GetPitch&nbsp; &nbsp;tay&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;;Y=Note; X=Channel<br />&nbsp; &nbsp;&nbsp; &nbsp;lda SndFineTuneBufferL,x<br />&nbsp; &nbsp;&nbsp; &nbsp;clc<br />&nbsp; &nbsp;&nbsp; &nbsp;adc SndPitchSlideBufferL,x<br />&nbsp; &nbsp;&nbsp; &nbsp;sta $4a<br />&nbsp; &nbsp;&nbsp; &nbsp;lda SndFineTuneBufferH,x<br />&nbsp; &nbsp;&nbsp; &nbsp;adc SndPitchSlideBuffer,x<br />&nbsp; &nbsp;&nbsp; &nbsp;sta $4b&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;;Setup fine tune &#40;detune+pitch slide index&#41;<br />&nbsp; &nbsp;&nbsp; &nbsp;lda VibratoPitchValue,x<br />&nbsp; &nbsp;&nbsp; &nbsp;sec<br />&nbsp; &nbsp;&nbsp; &nbsp;sbc #$80<br />&nbsp; &nbsp;&nbsp; &nbsp;bmi _vibNeg<br />&nbsp; &nbsp;&nbsp; &nbsp;clc<br />&nbsp; &nbsp;&nbsp; &nbsp;adc $4a<br />&nbsp; &nbsp;&nbsp; &nbsp;sta $4a&nbsp; &nbsp;&nbsp; &nbsp;;Add vibrato index to fine tune<br />&nbsp; &nbsp;&nbsp; &nbsp;lda #$0<br />&nbsp; &nbsp;&nbsp; &nbsp;adc $4b<br />&nbsp; &nbsp;&nbsp; &nbsp;jmp _vibPos<br />;--------------------<br />_vibNeg&nbsp; &nbsp;&nbsp; &nbsp;clc<br />&nbsp; &nbsp;&nbsp; &nbsp;adc $4a<br />&nbsp; &nbsp;&nbsp; &nbsp;sta $4a&nbsp; &nbsp;&nbsp; &nbsp;;Same as above, but decrease MSB if overflow instead of increase it<br />&nbsp; &nbsp;&nbsp; &nbsp;lda $4b<br />&nbsp; &nbsp;&nbsp; &nbsp;sbc #$0<br />_vibPos&nbsp; &nbsp;&nbsp; &nbsp;sta $4b<br />&nbsp; &nbsp;&nbsp; &nbsp;bmi $a8c8&nbsp; &nbsp;;Main detune calculated. Is that thing negative ?<br />&nbsp; &nbsp;&nbsp; &nbsp;lda $4a<br />&nbsp; &nbsp;&nbsp; &nbsp;asl a<br />&nbsp; &nbsp;&nbsp; &nbsp;rol $4b<br />&nbsp; &nbsp;&nbsp; &nbsp;asl a<br />&nbsp; &nbsp;&nbsp; &nbsp;rol $4b&nbsp; &nbsp;&nbsp; &nbsp;;Bit 6 and 7 of LSB goes in LSB &#40;?&#41;<br />&nbsp; &nbsp;&nbsp; &nbsp;lsr a<br />&nbsp; &nbsp;&nbsp; &nbsp;lsr a<br />&nbsp; &nbsp;&nbsp; &nbsp;sta $4a<br />&nbsp; &nbsp;&nbsp; &nbsp;jmp lbl_c8e5<br />;--------------------<br />lbl_a8c8:&nbsp; &nbsp;lda $4a<br />&nbsp; &nbsp;&nbsp; &nbsp;asl a<br />&nbsp; &nbsp;&nbsp; &nbsp;rol $4b&nbsp; &nbsp;&nbsp; &nbsp;;Same as above<br />&nbsp; &nbsp;&nbsp; &nbsp;asl a<br />&nbsp; &nbsp;&nbsp; &nbsp;rol $4b<br />&nbsp; &nbsp;&nbsp; &nbsp;lda $4a<br />&nbsp; &nbsp;&nbsp; &nbsp;and #$3f&nbsp; &nbsp;;Check if the LSB is zero &#40;apart of bit 6 and 7&#41;<br />&nbsp; &nbsp;&nbsp; &nbsp;beq lbl_a8da<br />&nbsp; &nbsp;&nbsp; &nbsp;inc $4b&nbsp; &nbsp;&nbsp; &nbsp;;If not, set the bits 6 and 7, and increase MSB<br />&nbsp; &nbsp;&nbsp; &nbsp;ora #$c0<br />lbl_a8da:&nbsp; &nbsp;sta $4a<br />&nbsp; &nbsp;&nbsp; &nbsp;bpl lbl_a8e5&nbsp; &nbsp;;The N flag is set by the lda $4a above or the inc $4b above, cant say much here<br />&nbsp; &nbsp;&nbsp; &nbsp;clc<br />&nbsp; &nbsp;&nbsp; &nbsp;adc #$40&nbsp; &nbsp;;Would that clear bit 6 and 7 ??<br />&nbsp; &nbsp;&nbsp; &nbsp;sta $4a&nbsp; &nbsp;<br />&nbsp; &nbsp;&nbsp; &nbsp;dec $4b&nbsp; &nbsp;&nbsp; &nbsp;;$4b equals main detune &#40;note&#41; and $4a fine detune<br /><br />lbl_a8e5:&nbsp; &nbsp;tya<br />&nbsp; &nbsp;&nbsp; &nbsp;clc&nbsp; &nbsp;&nbsp; &nbsp;;Y = Note<br />&nbsp; &nbsp;&nbsp; &nbsp;adc $4b&nbsp; &nbsp;&nbsp; &nbsp;;Check if the detune could go one octave below<br />&nbsp; &nbsp;&nbsp; &nbsp;bpl lbl_a8fa<br />&nbsp; &nbsp;&nbsp; &nbsp;dec $4e&nbsp; &nbsp;&nbsp; &nbsp;;If so decrease octave<br />&nbsp; &nbsp;&nbsp; &nbsp;clc<br />&nbsp; &nbsp;&nbsp; &nbsp;adc #$c&nbsp; &nbsp;&nbsp; &nbsp;;And correct the note in A<br />&nbsp; &nbsp;&nbsp; &nbsp;bpl lbl_a90c&nbsp; &nbsp;;Check if the detune is strong enough to get below a second octave<br />&nbsp; &nbsp;&nbsp; &nbsp;dec $4e<br />&nbsp; &nbsp;&nbsp; &nbsp;clc<br />&nbsp; &nbsp;&nbsp; &nbsp;adc #$c&nbsp; &nbsp;&nbsp; &nbsp;;If so correct it<br />&nbsp; &nbsp;&nbsp; &nbsp;jmp lbl_c90c<br />;--------------------<br />lbl_a8fa:&nbsp; &nbsp;cmp #$c<br />&nbsp; &nbsp;&nbsp; &nbsp;bcc lbl_a90c&nbsp; &nbsp;;Check if the detune could go one octave above<br />&nbsp; &nbsp;&nbsp; &nbsp;inc $4e<br />&nbsp; &nbsp;&nbsp; &nbsp;sec<br />&nbsp; &nbsp;&nbsp; &nbsp;sbc #$c<br />&nbsp; &nbsp;&nbsp; &nbsp;cmp #$c<br />&nbsp; &nbsp;&nbsp; &nbsp;bcc lbl_a90c&nbsp; &nbsp;;Check for a second octave up<br />&nbsp; &nbsp;&nbsp; &nbsp;inc $4e<br />&nbsp; &nbsp;&nbsp; &nbsp;sec<br />&nbsp; &nbsp;&nbsp; &nbsp;sbc #$c&nbsp; &nbsp;&nbsp; &nbsp;;Now A equals the correct note with the correct octave<br />lbl_a90c:&nbsp; &nbsp;sta $5206<br />&nbsp; &nbsp;&nbsp; &nbsp;sta $4f<br />&nbsp; &nbsp;&nbsp; &nbsp;lda #$40&nbsp; &nbsp;;Multiply note by $40<br />&nbsp; &nbsp;&nbsp; &nbsp;sta $5205<br />&nbsp; &nbsp;&nbsp; &nbsp;lda $4a<br />&nbsp; &nbsp;&nbsp; &nbsp;bmi $a92a&nbsp; &nbsp;;Check for the note before it's octave correction &#40;?&#41;<br />&nbsp; &nbsp;&nbsp; &nbsp;clc<br />&nbsp; &nbsp;&nbsp; &nbsp;adc $5205<br />lbl_a91e:&nbsp; &nbsp;sta $4a&nbsp; &nbsp;&nbsp; &nbsp;;Result is detune in bits 0-5 and note in bits 6-7<br />&nbsp; &nbsp;&nbsp; &nbsp;lda $5206<br />&nbsp; &nbsp;&nbsp; &nbsp;adc #$0<br />&nbsp; &nbsp;&nbsp; &nbsp;sta $4b&nbsp; &nbsp;&nbsp; &nbsp;;High bits of the note are here<br />&nbsp; &nbsp;&nbsp; &nbsp;jmp lbl_c937<br />;--------------------<br />lbl_a92a:&nbsp; &nbsp;clc<br />&nbsp; &nbsp;&nbsp; &nbsp;adc $5205&nbsp; &nbsp;;??<br />&nbsp; &nbsp;&nbsp; &nbsp;sta $4a<br />&nbsp; &nbsp;&nbsp; &nbsp;lda $5206<br />&nbsp; &nbsp;&nbsp; &nbsp;sbc #$0&nbsp; &nbsp;&nbsp; &nbsp;;??<br />lbl_a935:&nbsp; &nbsp;sta $4b<br /><br />&nbsp; &nbsp;&nbsp; &nbsp;lda $4a<br />&nbsp; &nbsp;&nbsp; &nbsp;clc<br />&nbsp; &nbsp;&nbsp; &nbsp;adc #$ab<br />&nbsp; &nbsp;&nbsp; &nbsp;sta $4a<br />&nbsp; &nbsp;&nbsp; &nbsp;lda $4b&nbsp; &nbsp;&nbsp; &nbsp;;Add main pitch to the pointer $c9ab<br />&nbsp; &nbsp;&nbsp; &nbsp;adc #$c9<br />&nbsp; &nbsp;&nbsp; &nbsp;sta $4b&nbsp; &nbsp;&nbsp; &nbsp;;$c9ab+$23a=<br />&nbsp; &nbsp;&nbsp; &nbsp;ldy #$0<br />&nbsp; &nbsp;&nbsp; &nbsp;ldy &#40;$4a&#41;,y&nbsp; &nbsp;;Load low tune<br />&nbsp; &nbsp;&nbsp; &nbsp;sta $4a<br />&nbsp; &nbsp;&nbsp; &nbsp;ldy $4f<br />&nbsp; &nbsp;&nbsp; &nbsp;lda $c99f,y&nbsp; &nbsp;;Load high tune in function of the note<br />lbl_a94f:&nbsp; &nbsp;sta $4b<br />lbl_a951:&nbsp; &nbsp;lda $c993,y<br />&nbsp; &nbsp;&nbsp; &nbsp;beq lbl_a95c&nbsp; &nbsp;;?<br />&nbsp; &nbsp;&nbsp; &nbsp;lda $4a<br />&nbsp; &nbsp;&nbsp; &nbsp;bpl lbl_a95c<br />&nbsp; &nbsp;&nbsp; &nbsp;dec $4b&nbsp; &nbsp;&nbsp; &nbsp;;Decrease low pitch if high pitch is negative<br />lbl_a95c:&nbsp; &nbsp;lda $4b<br />&nbsp; &nbsp;&nbsp; &nbsp;ldy $4e<br />&nbsp; &nbsp;&nbsp; &nbsp;beq lbl_a989&nbsp; &nbsp;;If octave is zero, the thing is completed<br />&nbsp; &nbsp;&nbsp; &nbsp;bmi $a98a<br />&nbsp; &nbsp;&nbsp; &nbsp;cpy #$5<br />&nbsp; &nbsp;&nbsp; &nbsp;bcs lbl_a973&nbsp; &nbsp;;Go elsewhere if octave above 5 &#40;for very high notes&#41;<br />lbl_a968:&nbsp; &nbsp;lsr a<br />&nbsp; &nbsp;&nbsp; &nbsp;ror $4a&nbsp; &nbsp;&nbsp; &nbsp;;Divide the period by 2 for each octave<br />&nbsp; &nbsp;&nbsp; &nbsp;dey<br />&nbsp; &nbsp;&nbsp; &nbsp;bne lbl_a968<br />&nbsp; &nbsp;&nbsp; &nbsp;sta $4b<br />&nbsp; &nbsp;&nbsp; &nbsp;jmp lbl_c989&nbsp; &nbsp;;Done !!<br />;--------------------<br />lbl_a973:&nbsp; &nbsp;sty $50&nbsp; &nbsp;&nbsp; &nbsp;;Octave higher than 5 &#40;probably used for sound effects&#41;<br />&nbsp; &nbsp;&nbsp; &nbsp;lda #$8<br />&nbsp; &nbsp;&nbsp; &nbsp;sec<br />&nbsp; &nbsp;&nbsp; &nbsp;sbc $50&nbsp; &nbsp;&nbsp; &nbsp;;8-Octave = a number between 1 and 3<br />&nbsp; &nbsp;&nbsp; &nbsp;tay<br />&nbsp; &nbsp;&nbsp; &nbsp;lda $4a<br />lbl_a97d:&nbsp; &nbsp;asl a<br />&nbsp; &nbsp;&nbsp; &nbsp;rol $4b&nbsp; &nbsp;&nbsp; &nbsp;;This will multiply the period by 2 for each octave<br />&nbsp; &nbsp;&nbsp; &nbsp;dey&nbsp; &nbsp;&nbsp; &nbsp;;In other word, the highest notes become the lowest &#40;?&#41;<br />&nbsp; &nbsp;&nbsp; &nbsp;bne lbl_a97d<br />&nbsp; &nbsp;&nbsp; &nbsp;lda $4b<br />&nbsp; &nbsp;&nbsp; &nbsp;sty $4b&nbsp; &nbsp;&nbsp; &nbsp;;0 overrides the high pitch<br />&nbsp; &nbsp;&nbsp; &nbsp;sta $4a&nbsp; &nbsp;&nbsp; &nbsp;;And the low pitch overrides the high pitch<br />lbl_a989:&nbsp; &nbsp;rts<br />;--------------------<br />lbl_a98a:&nbsp; &nbsp;asl $4a&nbsp; &nbsp;&nbsp; &nbsp;;If octave is negative, multiply period by 2<br />&nbsp; &nbsp;&nbsp; &nbsp;rol $4b<br />&nbsp; &nbsp;&nbsp; &nbsp;lda #$0&nbsp; &nbsp;&nbsp; &nbsp;;And re-set octave to zero<br />&nbsp; &nbsp;&nbsp; &nbsp;sta $4e<br />&nbsp; &nbsp;&nbsp; &nbsp;rts</div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Sun Oct 09, 2005 1:10 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Here you are, the exact formla is :
<br />freq = CPUFreq/Period+1
<br />freq(note)=2^(LowestCFreq*(FineTune+128*MainPitch)/128*12)*2^Octave
<br />so :
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">Period=CPUFreq/&#40;2^LowestCFreq*&#40;FineTune+128*MainPitch&#41;/128*12&#41;&#41;-1<br /></div>
<br />Where FineTune is between 0 and 127, Main Pitch is 0 for C, 1 for C#, etc... up to 11 for B
<br />I think that this can be done with a Table, but man, it would be large, even for one single octave. Is there any way this enormous calculation could be simplificated accurately ?
<br />Also, the minus 1 at the end is pretty confusing. Usually I just shifted the period to change octave, but the 1 additional cycle seems to make it not 100% accurate.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>