<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - wdc816cc bank number from long address?</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">wdc816cc bank number from long address?</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=12&amp;t=11568">http://forums.nesdev.com/viewtopic.php?f=12&amp;t=11568</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>dalton</b> [ Sat Aug 23, 2014 1:12 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>wdc816cc bank number from long address?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Hi,<br /><br />does anybody know if it's possible to get the bank number from a statically allocated address in wdc 816 c compiler? When I use the shift operator to get the bank number from the 8 high bits of the 24-bit address, then the compiler generate some 24-bit arithmetics code, even though the result of the operation is a constant which should be known at compile time.<br /><br />I know assemblers typically have a macro to get the bank number from symbols, but I would really like to do it in c.<br /><br />Cheers<br />Dalton

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>koitsu</b> [ Sat Aug 23, 2014 4:35 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: wdc816cc bank number from long address?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Did you check the documentation that comes with WDC816CC?  It should be in there.  If not, contact WDC -- they should be able to tell you how to do this.  I think you have to shift out the 32-bit calculated address from either the CODE, DATA, UDATA, or KDATA section names (defined per #pragma).  These are mentioned in the &quot;Pragma&quot; section of the doc, with a brief code example in &quot;Heap Functions&quot;.  It's not completely clear though, I'll tell you that, and it depends on what memory model you're using/have configured.<br /><br />Their assembler documentation (note I said ASSEMBLER DOCUMENTATION, meaning stuff you'd have to put in in-line assembly within C) indicates that you'd use <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">&gt;&gt;</tt> to get to the bank, however in their own code examples they don't even use this, they use <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">^</tt>, ex. <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">LDA #^_BEG_DATA</tt>, so I don't know what to tell you.  There's also mentioned of something called DBREG, which looks like it's a pseudo-op that tells the assembler what bank you're currently in (think of it as an assemble-time way of tracking B) so that instead of generating 24-bit (long) addresses it generates 16-bit addresses.  Search for &quot;This directive is used to indicate to the assembler the run-time value of the Data Bank register&quot;.<br /><br />Honestly you're better off just Emailing WDC and asking for some examples/clarification.<br /><br />If you're trying to do C programming on the SNES, I'd recommend just avoiding it and using assembly instead.  That's my own opinion though and you can totally disregard it if you want.<br /><br />References:<br /><br /><ul><li><a href="https://www.dropbox.com/s/p7yh1tru0b7r5ay/WDC%2065816%20Assembler_Linker%20Manual.pdf?dl=0" class="postlink">WDC 65816 Assembler/Linker Manual</a></li><li><a href="https://www.dropbox.com/s/85os8aftdbxpr6x/WDC%2065816%20Compiler%20Manual.pdf?dl=0" class="postlink">WDC 65816 Compiler Manual</a></li></ul>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>dalton</b> [ Sun Aug 24, 2014 12:41 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: wdc816cc bank number from long address?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Thank you for your reply!<br /><br />I've had very little luck contacting WDC before <img src="./images/smilies/icon_sad.gif" alt=":(" title="Sad" /> Even when I asked about purchasing software they did not reply.<br /><br />To be more specific about what I'm trying to do, I have this function which copies data to vram:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">#define L(x) ((uint8_t)((x)&amp;255))<br />#define H(x) ((uint8_t)((x)&gt;&gt;8))<br /><br />typedef signed char&nbsp; &nbsp; int8_t;<br />typedef unsigned char&nbsp; uint8_t;<br />typedef signed short&nbsp; &nbsp;int16_t;<br />typedef unsigned short uint16_t;<br /><br /><br />void vram_write(uint16_t dest, uint8_t src_bank, uint16_t src_addr, uint16_t size)<br />{<br />&nbsp; &nbsp;VMAIN = 0x80;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;// increment address after word has been written<br />&nbsp; &nbsp;VMADD = dest;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;// write to this address in vram<br /><br />&nbsp; &nbsp;DMAP0 = 0x01;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;// set DMA control register (1 word inc)<br /><br />&nbsp; &nbsp;BBAD0 = L((uint16_t)&amp;VMDATA);&nbsp; &nbsp;// set destination ($21xx xx -&gt; 0x18)<br /><br />&nbsp; &nbsp;A1B0 = src_bank;<br />&nbsp; &nbsp;A1T0 = src_addr;<br /><br />&nbsp; &nbsp;DAS0 = size;<br /><br />&nbsp; &nbsp;MDMAEN = 0x01;<br />}</div><br /><br />I'm looking for a way to calculate the src_bank argument, or even better to pass just a long pointer instead of of src_bank and src_addr.<br /><br />Perhaps a macro could be written that uses inline asm to split the long pointer into bank/addr and write registers A1B0 and A1T0?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>koitsu</b> [ Sun Aug 24, 2014 2:32 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: wdc816cc bank number from long address?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I don't know what to tell you.  The Compiler Manual seems pretty clear about what each of the memory models represent, and the section called &quot;Memory Management&quot; is what mentions the sections referred to as CODE, DATA, UDATA, and KDATA, as well as how the keywords <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">near</tt> and <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">far</tt> play a role in all of this.  I strongly recommend you read that section, as well as all the example code they provide.  Anything with a calculated 24-bit address (<tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">far</tt>) should be easy to obtain the bank -- you just <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">&gt;&gt; 16</tt> to shift off the lower 16 bits and what you're left with is the bank.  Also be sure to read the section titled &quot;Large Programs&quot;.<br /><br />The reason I mentioned <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">#pragma</tt> is because that appears to be how you can explicitly set a bank for certain types of sections (CODE, DATA, and UDATA).  There is a short example in the &quot;Heap Functions&quot; area that shows how they're using &quot;magic variables&quot; called <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">_END_UDATA</tt> and so on to obtain addresses of things -- it's these &quot;magic variables&quot; which are what you're effectively looking for.  It doesn't matter if you're using inline assembly or C, both methodologies are going to require that you refer to something that the assembler and/or compiler tracks internally -- that's just how it works, as I'm sure you know.  But if you wanted to try and use inline assembly, then you should look at the Assembler/Linker Manual, because that goes over all the internal variables the assembler has.<br /><br />You're probably going to have to spend a very long while playing with this and examining the full output of a listing generation, as well as a full assembly listing, to ensure everything is &quot;correct&quot;, especially considering the SNES's memory map -- you need to see exactly what the compiler and/or assembler are generating binary-wise to know if things are correct/what you expect.<br /><br />WDC's compiler really isn't directed at SNES stuff in general, and the example programs I've seen online of people trying to use it for SNES developer show nothing useful, e.g. very small programs that fit exclusively within bank $00 thus their entire program has that hard-coded into it.  Ten bucks if they wrote something &gt;32KBytes in size they'd be asking the same thing you are.<br /><br />I only know of 3 C compilers for the 65816: WDC's, ORCA/C (solely for the Apple IIGS), and Toshi Morita's LCC (which just generates assembly code intended for use with ORCA/M which is also solely for the Apple IIGS).  Your choices are extremely limited.  Considering WDC's product (<a href="http://forums.nesdev.com/viewtopic.php?f=12&amp;t=10336" class="postlink">last I read</a>) cost US$40, then I'd say you should start making some telephone calls to WDC instead of Email.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>ARM9</b> [ Sun Aug 24, 2014 4:24 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: wdc816cc bank number from long address?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I did some testing with wdc816cc a while back (hirom, using more than one bank, lorom was a pain in the side), you can check it out here <!-- m --><a class="postlink" href="https://github.com/ARM9/snes-c-template">https://github.com/ARM9/snes-c-template</a><!-- m --><br />If you want to use dma from C you can use this macro (lifted from snes-sdk I believe):<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">#define DMA_TYPE(chn,x) (*(unsigned int*)(0x4300 | ((chn) &lt;&lt; 4))) = (x)<br />#define DMA_ADDR(chn,x) (*(void**)(0x4302 | ((chn) &lt;&lt; 4))) = (x)<br />#define DMA_SIZE(chn,x) (*(unsigned int*)(0x4305 | ((chn) &lt;&lt; 4))) = (x)<br /><br />//chn: constant, channel number 0-7 (preferably use only one channel for all dma transfers to free up hdma channels)<br />#define dmaTransfer(type, addr, size) DMA_TYPE((0), (type)); \<br />&nbsp; &nbsp;&nbsp; &nbsp;DMA_ADDR((0), (addr)); \<br />&nbsp; &nbsp;&nbsp; &nbsp;DMA_SIZE((0), (size)); \<br />&nbsp; &nbsp;&nbsp; &nbsp;REG_MDMAEN = BIT(0);<br /></div><br />It optimizes fairly well so just throw it in functions for different dma types (vram, cgram etc) to avoid too many macro expansions.<br />For some reason it didn't want to optimize out the subtractions when I calculated the size of a binary insert in C, might want to look into that.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>dalton</b> [ Sun Aug 24, 2014 6:00 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: wdc816cc bank number from long address?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Well, my problem is not so much finding out where stuff is located (not yet, at least). But the thing is that I wish to avoid the over-complicated construct generated by the compiler in this situation.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp;far void *my_pointer;<br />&nbsp; &nbsp;unsigned char my_bank;<br /><br />&nbsp; &nbsp;my_pointer = (far void *)0x123456;<br />&nbsp; &nbsp;my_bank = (unsigned long)my_pointer &gt;&gt; 16;</div><br /><br />It's fairly obious from the code that 0x12 should be stored in my_bank, but the compiler generates a call to some library function called llsr. Not exactly optimal <img src="./images/smilies/icon_sad.gif" alt=":(" title="Sad" /><br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp;lda&nbsp; &nbsp;#$3456<br />&nbsp; &nbsp;sta&nbsp; &nbsp;&lt;L3+my_pointer_1<br />&nbsp; &nbsp;lda&nbsp; &nbsp;#$12<br />&nbsp; &nbsp;sta&nbsp; &nbsp;&lt;L3+my_pointer_1+2<br />&nbsp; &nbsp;pha<br />&nbsp; &nbsp;pei&nbsp; &nbsp;&lt;L3+my_pointer_1<br />&nbsp; &nbsp;dea<br />&nbsp; &nbsp;dea<br />&nbsp; &nbsp;xref&nbsp; &nbsp;__~llsr<br />&nbsp; &nbsp;jsr&nbsp; &nbsp;__~llsr<br />&nbsp; &nbsp;sta&nbsp; &nbsp;&lt;R0<br />&nbsp; &nbsp;stx&nbsp; &nbsp;&lt;R0+2<br />&nbsp; &nbsp;sep&nbsp; &nbsp;#$20<br />&nbsp; &nbsp;longa&nbsp; &nbsp;off<br />&nbsp; &nbsp;lda&nbsp; &nbsp;&lt;R0<br />&nbsp; &nbsp;sta&nbsp; &nbsp;&lt;L3+my_bank_1</div>

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>