<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - OAM rotation routine to reduce 9th sprite issues.</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">OAM rotation routine to reduce 9th sprite issues.</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=9301">http://forums.nesdev.com/viewtopic.php?f=2&amp;t=9301</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Zipper</b> [ Thu Sep 13, 2012 2:58 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>OAM rotation routine to reduce 9th sprite issues.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I am still waiting for my PowerPak flash cart to arrive. So I am unable to test my thoughts on real HW. But perhaps my idea is totally wrong and not possible in the first place.<br /><br />At the moment I am rewriting my default game functions library I have for Z80 to 6502. One aspect is a routine to reduce the effect of the 9th sprite issue by rotating the sprite attribute table. I have been searching and reading but didn't find any exact information of the behaviour of the involved registers. But I was hoping to have found a low-cost OAM rotate routine.<br /><br />My idea:<br />1- Use the OAMADDR register to set the offset to start writing. Each NMI the offset is increased with 5*4 bytes (5 sprites).<br />2- Use $4014 to copy the local OAM to the PPU OAM. <br /><br />Will this work?<br />Is OAMADDR of influence of the DMA copy process? <br />Will OAMADDR wrap around to the start of the PPU OAM?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Zipper</b> [ Thu Sep 13, 2012 3:46 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: OAM rotation routine to reduce 9th sprite issues.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Duh!<br /><br />I've overlooked this thread:  <!-- l --><a class="postlink-local" href="http://forums.nesdev.com/viewtopic.php?t=8057">viewtopic.php?t=8057</a><!-- l --><br /><br />Seems to be a workable implementation.   <img src="./images/smilies/icon_surprised.gif" alt=":o" title="Surprised" /><br />I'll try to test it on real HW asap.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Thu Sep 13, 2012 5:50 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: OAM rotation routine to reduce 9th sprite issues.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Honnestly, your best bet is to do the sprite rotation by software.<br /><br />Personally I went with the road of having my meta-sprite mazing routine copied in RAM and use self-modifying code to make the sprites &quot;forwards&quot; in a frame, &quot;backwards&quot; the next frame, and repeat. Because the code itself is automatically modified there's no need to constantly check anything and it doesn't hurt the performance of the sprite mazing routine, which is important because it is typically called a lot of times every frame.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Zipper</b> [ Thu Sep 13, 2012 6:06 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: OAM rotation routine to reduce 9th sprite issues.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Honnestly, your best bet is to do the sprite rotation by software.</div><br /><br />If the OAMADDR method works it would be much easier and faster then software OAM rotation. <br />I guess it won't work best for all purposes (Zelda like top down games).<br /><br />Your routine sounds quite interesting. Could you tell more about it?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Thu Sep 13, 2012 6:39 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: OAM rotation routine to reduce 9th sprite issues.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">Honnestly, your best bet is to do the sprite rotation by software.</div><br />I agree. Not many games have sprites hardcoded to specific OAM locations, due to game objects being constantly loaded, unloaded, moved and animated, all of which cause the data to change a lot, meaning there's little advantage in keeping objects mapped to the same OAM slots over time. The few games that do hardcode OAM positions are either pong-like games (with a fixed number of objects on screen) or newbie attempts at more complex games.<br /><br />AFAIK, the effect of OAMADDR on sprite DMAs is not that straightforward anyway. I seem to remember there's something weird going on with sprites 0 and 1 not being in order or something like that (I hope someone will clarify this). Personally, I wouldn't trust that rotating OAMADDR would successfully rotate all sprites, even if it appears to work in some circumstances. Even if it did, there would be disadvantages, like not being able to use sprite 0 hits (since &quot;random&quot; sprites would occupy the first OAM position each time).<br /><br />If you look at commercial games, you'll see that the majority of them regenerate the OAM table every frame (I honestly can't think of a single one that I have personally analyzed that doesn't). This is not only safer (since you don't have to rely on weird OAMADDR behavior) but it's also much more versatile, because you can implement the type of OAM cycling that best fits each game. You can even implement methods that will not break sprite layering in case the game's view needs depth.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>3gengames</b> [ Thu Sep 13, 2012 7:03 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: OAM rotation routine to reduce 9th sprite issues.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Sounds to me like the best way to go about it is a sprite system that has a window that reserves OAM slots for each object, and then puts the sprite data in there slot at different offsets each time so you keep the layering, sprite 0, etc in order.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Thu Sep 13, 2012 7:19 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: OAM rotation routine to reduce 9th sprite issues.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I guess it won't work best for all purposes (Zelda like top down games).<br /><br />Your routine sounds quite interesting. Could you tell more about it?</div><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">You can even implement methods that will not break sprite layering in case the game's view needs depth.</div><br />In fact my method does something like this.<br /><br />Because my work-in-progress game is a has Zelda-like top down graphics (but better graphics of course <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /> ), objects that are on the bottom needs to be displayed &quot;above&quot; the object that are on the top.<br /><br />Therefore my metasprite mazing routine will always maze the metasprites in a known order (high priority -&gt; low priority), sorted by the main engine. But the order for sprites behind the metasprite themselves is what will be rotated.<br />To switch between both routines, I could test a flag and jump to the desired routine, but this would be a waste of CPU time - instead I put the system RAM to good use, and copy my routine here. Somewhere near the end of my VBlank interrupt routine I alternate between both versions of the sprite mazing routine with a few EOR instructions (only one routine is stored in ROM and copied to RAM at startup, the switching is done by EOR-ing the bytes who needs to be changed with the appropriate value), and this does the trick.<br /><br />Basically the code is :<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp;ldy #$06<br />-&nbsp; &nbsp;ldx SetupSpriteTableIndexTbl.w,Y<br />&nbsp; &nbsp;lda SetupSpriteTableRAM.w,X<br />&nbsp; &nbsp;eor SetupSpriteTableXOR.w,Y<br />&nbsp; &nbsp;sta SetupSpriteTableRAM.w,X<br />&nbsp; &nbsp;dey<br />&nbsp; &nbsp;bpl -<br /><br />&#91;...&#93;<br />SetupSpriteTableIndexTbl&nbsp; &nbsp;;Index to bytes that should be changed in setup sprite routine<br />&nbsp; &nbsp;.db $0a, $0b, $0e, $70, $71, $6e, $6f<br /><br />SetupSpriteTableXOR<br />&nbsp; &nbsp;.db $85~$0a&nbsp; &nbsp;&nbsp; &nbsp;;Change from sta zero page to asl A opcode<br />&nbsp; &nbsp;.db SpriteCtr~$0a&nbsp; &nbsp;;Change argument to asl A opcode<br />&nbsp; &nbsp;.db $ea~$a8&nbsp; &nbsp;&nbsp; &nbsp;;Change nop to tay instruction<br />&nbsp; &nbsp;.db $ea~$a8&nbsp; &nbsp;&nbsp; &nbsp;;Change nop to tay instruction<br />&nbsp; &nbsp;.db $b0~$d0&nbsp; &nbsp;&nbsp; &nbsp;;Change from bne to bcs opcode<br />&nbsp; &nbsp;.db $c6~$e9&nbsp; &nbsp;&nbsp; &nbsp;;Change from dec to sbc immediate opcode<br />&nbsp; &nbsp;.db SpriteCtr~$08&nbsp; &nbsp;;Change argument of spc/dec instruction<br /></div><br /><br />SetupSpriteTableRAM is the routine that needs to be called. I can also call plain SetupSpriteTable in ROM to disable the cycling effect.<br /><br />I have written basically two metasprite mazing routines, one that copies individual sprites in the first -&gt; last order, and the other which does last -&gt; first order. Sprite layering in a single metasprite is unfortunately not possible (well it's possible but it will ficker), but layering of multiple metasprites works well.<br /><br />However I should probably improve it to use a different metasprite format that uses less bytes. Currently I use 4 bytes per single sprites in each metasprites, and it takes a lot of space in my little 32k ROM.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Thu Sep 13, 2012 7:27 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: OAM rotation routine to reduce 9th sprite issues.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">3gengames wrote:</div><div class="quotecontent">Sounds to me like the best way to go about it is a sprite system that has a window that reserves OAM slots for each object, and then puts the sprite data in there slot at different offsets each time so you keep the layering, sprite 0, etc in order.</div><br />I do something like that. Instead of cycling individual sprites I cycle entire objects. I just process the list of objects in &quot;random&quot; order each frame, so their graphics always end up on different slots, but the layering within each object is respected (this allows the layering of child objects, such as weapons the player carries). In addition to that, I have 2 global &quot;layers&quot;, the top one starts at OAM position 0 and goes up and the bottom one starts at position 63 and goes down. With this I can, for example, make sure that explosions will always be in front of the objects that are exploding.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Thu Sep 13, 2012 7:33 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: OAM rotation routine to reduce 9th sprite issues.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Toku : It's fun you do exactly the opposite of what I do - I cycle only the internals of the metasprite, and you only cycle the metasprites themselves, keeping their sprites in the same order.<br /><br />I think your solution is good for platforming games, and that my solution is good for top-down games.<br /><br />The &quot;ultimate&quot; solution would be to have a real priority system, have a buffer that holds all the sprites and their priorities, and then copy it to the actual shadow-OAM keeping the priorities intact, but with sprites of the same priority in a &quot;random&quot; order. This would most certainly be very slow unfortunately.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Thu Sep 13, 2012 7:58 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: OAM rotation routine to reduce 9th sprite issues.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">I think your solution is good for platforming games, and that my solution is good for top-down games.</div><br />True. They're very different scenarios.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">The &quot;ultimate&quot; solution would be to have a real priority system, have a buffer that holds all the sprites and their priorities, and then copy it to the actual shadow-OAM keeping the priorities intact, but with sprites of the same priority in a &quot;random&quot; order. This would most certainly be very slow unfortunately.</div><br />But even then, if many sprites of different depths are close to each other, the ones in the back will likely disappear because the frontmost ones will have higher priority. I honestly can't think of a solution that would fully respect the layering and not cause the sprites that are farther away to disappear completely in extreme situations.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Thu Sep 13, 2012 8:55 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: OAM rotation routine to reduce 9th sprite issues.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />One CPU-intensive solution would be to walk the display list, find groups of sprites that are overlapping, and sort entire groups from left to right and right to left in alternate frames.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Zipper</b> [ Thu Sep 13, 2012 10:01 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: OAM rotation routine to reduce 9th sprite issues.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />@Bregalad: so you are rotating inside the metasprite itself. Right? Not among the metasprites.<br />Btw what do you mean with 'mazing'. Is it some sort of technique or do you mean sorting?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Thu Sep 13, 2012 10:50 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: OAM rotation routine to reduce 9th sprite issues.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />As far as I can tell, &quot;mazing&quot; is a franglais word for translating the position and state of each game critter to several entries in OAM.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Zipper</b> [ Thu Sep 13, 2012 12:29 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: OAM rotation routine to reduce 9th sprite issues.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I did some little tests running on emulators but they give different (akward) results.<br />I have to wait for my powerpak to arrive to see the real effect and investigate more.<br /><br />I'd probably revert to my old method of rotation by processing my NPC-list (enemies/bullets etc) as it was a ring with a different offset each iteration. And write the meta sprites in that order to the shadow OAM.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Zipper</b> [ Tue Oct 02, 2012 12:02 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: OAM rotation routine to reduce 9th sprite issues.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />After a long long long wait I finally got my POWERPAK.<br /><br />I just did a quick test and conclude that the OAM rotation works on real HW (USA NES 01). The offset is taken into account and the writes wrap around.<br />But it still has to be seen how it could look in a game engine. Perhaps offsets of 5 or 6 sprites would improve the effects on screen. We'll have to see.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>