<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - 6502 Arithmetic</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">6502 Arithmetic</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=10&amp;t=1706">http://forums.nesdev.com/viewtopic.php?f=10&amp;t=1706</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>nineTENdo</b> [ Tue Jun 27, 2006 12:10 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>6502 Arithmetic</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Hello again,
<br />        Im working on the Sound test Demo by Snow Bro.  I came across some thing that i could have passed up but couldnt until i completly understood it.  heres the Code:
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">end_text:&nbsp; &nbsp;<br /><br />lda&nbsp; &nbsp; &nbsp;#$20&nbsp; &nbsp;&nbsp; &nbsp;<br />sta&nbsp; &nbsp; &nbsp;ADDR_HI<br />lda&nbsp; &nbsp; &nbsp;#$C0<br />sta&nbsp; &nbsp; &nbsp;ADDR_LO<br />ldy&nbsp; &nbsp; &nbsp;#$20&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <br />-<br />lda&nbsp; &nbsp; &nbsp;ADDR_HI<br />sta&nbsp; &nbsp; &nbsp;$2006<br />lda&nbsp; &nbsp; &nbsp;ADDR_LO<br />sta&nbsp; &nbsp; &nbsp;$2006<br />lda&nbsp; &nbsp; &nbsp;#$12&nbsp; &nbsp; ; &quot;R&quot;<br />sta&nbsp; &nbsp; &nbsp;$2007<br />lda&nbsp; &nbsp; &nbsp;#$05&nbsp; &nbsp; ; &quot;E&quot;<br />sta&nbsp; &nbsp; &nbsp;$2007<br />lda&nbsp; &nbsp; &nbsp;#$07&nbsp; &nbsp; ; &quot;G&quot;<br />sta&nbsp; &nbsp; &nbsp;$2007<br />lda&nbsp; &nbsp; &nbsp;#$00&nbsp; &nbsp; ; &quot; &quot;<br />sta&nbsp; &nbsp; &nbsp;$2007<br />sty&nbsp; &nbsp; &nbsp;$2007<br />lda&nbsp; &nbsp; &nbsp;#$2A&nbsp; &nbsp; ; &quot;:&quot;<br />sta&nbsp; &nbsp; &nbsp;$2007<br /><br />lda&nbsp; &nbsp; &nbsp;ADDR_LO<br />clc<br />adc&nbsp; &nbsp; &nbsp;#$40&nbsp; &nbsp;<br />sta&nbsp; &nbsp; &nbsp;ADDR_LO<br />bcc&nbsp; &nbsp; &nbsp;+<br />inc&nbsp; &nbsp; &nbsp;ADDR_HI&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;;&lt;-- This is what is nagging at my brain.<br />+<br />iny&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;<br />cpy&nbsp; &nbsp; &nbsp;#$24&nbsp; &nbsp;&nbsp; &nbsp;<br />bne&nbsp; &nbsp; &nbsp;-<br />rts</div>
<br />
<br />After reading this i came to find out that it setsup "REG :" at locations #$20C0,2100,2140,2180.  Each time the code loops it adds with a carry #$40 to low byte of 20CO until it stops at #$24.  
<br />
<br />What my Question is what is the INC ADDR_HI doing after the first loop? Because adding #$80 (Second loop adds #$40 again, i think)  to C0  would generate a carry not branching it and incrementing ADDR_HI (20) making 21 i think.  
<br />
<br />How can you increment to 21 while there still is a carry and a value of a 100 in the low byte.  Wouldnt that just add 21 + 100.  What happens to the low byte after not branching???
<br />
<br />Thanks in Advance,
<br />EL

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Quietust</b> [ Tue Jun 27, 2006 6:35 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />During the first loop, ADDR_LO gets incremented from $C0 to $00 (<em>and gets stored</em>), triggering a carry and incrementing ADDR_HI. During the subsequent loops, ADDR_LO gets incremented from $00 to $40, then $40 to $80, then $80 to $C0; <strong>none</strong> of these trigger carry (since carry only happens when crossing from $FF to $00), so the "INC ADDR_HI" gets skipped entirely.
<br />
<br />Carry is only determined based on the <em>immediate previous action</em>, not the cumulative changes to the register - it doesn't care that it started at $C0 during all 4 additions, just the <strong>first</strong> addition.
<br />
<br />On a side note, you <em>really</em> ought to understand this sort of stuff by now, given the amount of time you've been dealing with 6502 assembly. At the very least, you should be able to get this sort of information from formal documentation instead of relying on the rest of us here.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>nineTENdo</b> [ Tue Jun 27, 2006 8:56 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Well 6502 is not exacly childs play.  And the documentation is not exacly all shits and giggles.  All though i dont know where i would be if it wasnt there.  trust me ive gotten everybook i could get my hands on.  And there are still somethings i dont understand, like what the hell these ASL's do:
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">rast_init:&nbsp; &nbsp;LDX #$05&nbsp; &nbsp;<br />ri1:&nbsp; &nbsp;&nbsp; &nbsp;TXA<br />&nbsp; &nbsp;&nbsp; &nbsp;ASL A<br />&nbsp; &nbsp;&nbsp; &nbsp;ASL A<br />&nbsp; &nbsp;&nbsp; &nbsp;ASL A<br />&nbsp; &nbsp;&nbsp; &nbsp;STA rbars,x<br />&nbsp; &nbsp;&nbsp; &nbsp;DEX<br />&nbsp; &nbsp;&nbsp; &nbsp;BPL ri1</div>
<br />
<br />Yeah i know they divide but what exactly is going on here.  Ive never seen this stuff in the documentation.  If i had started with GBA development  by now i would have had a bunch of demos.  Cause C is easier.  But im stupid and love a challenge.  The biggest challenge right. now for me though is not filling up your Newbie Forum:) All the way aleast.
<br />
<br />Thanks anyways,
<br />EL

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Disch</b> [ Tue Jun 27, 2006 9:09 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">nineTENdo wrote:</div><div class="quotecontent">Yeah i know they divide</div>
<br />
<br />Not exactly.  ASL and LSR perform bitshifts.
<br />
<br />ASL shifts left, LSR shifts right.  The first time those ASLs in that code you pasted are run, it looks like A=$05
<br />
<br />So:
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">%00000101 = $05&nbsp; &nbsp;&lt;--&nbsp; A initially<br />%00001010 = $0A&nbsp; &nbsp;&lt;--&nbsp; A after first ASL<br />%00010100 = $14&nbsp; &nbsp;&lt;--&nbsp; A after second ASL<br />%00101000 = $28&nbsp; &nbsp;&lt;--&nbsp; A after third ASL<br /></div>
<br />
<br />As you can see left shifting does what the name implies, it shifts bits to the left.  This works out so that each left shift is kind of like a multiply by 2.  Therefore ASLing 3 times in a row like that code was doing is multiplying by 2*2*2  --- or multiplying by 8
<br />
<br />LSR does the opposite (shifts right).  Which sort of works out like a divide-by-two.
<br />
<br />
<br />And C isn't really any easier.  Programming fundamentals are pretty much the same with any language.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>