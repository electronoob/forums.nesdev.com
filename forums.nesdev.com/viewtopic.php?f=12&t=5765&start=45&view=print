<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - SPC data upload</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">SPC data upload</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=12&amp;t=5765">http://forums.nesdev.com/viewtopic.php?f=12&amp;t=5765</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>4</strong> of <strong>7</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>bunnyboy</b> [ Sat Feb 27, 2010 3:36 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Doing that search for free space to put loader code is a good idea.  I might try that if the $FF70 section is found to be used lots.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Sun Feb 28, 2010 11:36 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I typed up a nice <a href="http://wiki.nesdev.com/w/index.php/Blargg_SPC_Upload" class="postlink">Wiki page describing SPC uploading</a> using the code I posted yesterday. I added more explanation of the various patches.
<br />
<br />Now I'm running the code on a directory of 1200 SPC soundtracks, having it check for any that come up silent or don't start any new notes after the beginning (running on my SPC emulator of course). Should take a while.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>bunnyboy</b> [ Sun Feb 28, 2010 11:57 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Wiki page looks great.  Couple suggestions:
<br />
<br />-Link to .c file on your server is bad.  Can it be moved to the wiki?
<br />
<br />-Add DSP register addresses.  Yes they can be looked up elsewhere but would fit well in the table.
<br />
<br />-Explain F0/F1 a bit more.  I especially found almost no mention of the test register anywhere.
<br />
<br />-A bit confusing: "Since we write DSP registers first, this delay will be taken care of by the time it takes to load the 64K RAM."  If DSP regs are loaded first, the delay isn't from loading the RAM?  Again maybe it makes sense and I am just missing something.
<br />
<br />
<br />Can you also check your spc database for how many don't have the $FF70 space free, or don't have any FF strings?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Sun Feb 28, 2010 12:20 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Feel free to edit the improve the Wiki page (one reason I made it such), including uploading the .c file. I'm not sure how I can add to Anomie's documentation of $F0 anf $F1. He covers both fully. I clarified the EDL description, hopefully.
<br />
<br />Currently I have the big test log when it must use the echo buffer, and when even that isn't available and it must choose an arbitrary address. I can just write a separate scanner that goes over all the archives and checks the $FF70 space (<a href="http://code.google.com/p/file-extractor/" class="postlink">file-extractor</a> to the rescue), noting how many bytes are all $FF.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>mic_</b> [ Mon Mar 01, 2010 3:12 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Can you also check your spc database for how many don't have the $FF70 space free, or don't have any FF strings?</div>
<br />I found one right away; Bishoujo Senshi Sailormoon. It does have some FF and 00 strings at other locations, but they're rather short so I'm not sure if they're padding or actual data.
<br />
<br />EDIT: I found a few more:
<br />
<br />Donkey Kong Country 3
<br />Dracula X
<br />Gokujou Parodius
<br />Metal Morph (maybe)
<br />StarFox
<br />Star Ocean
<br />Super Punchout
<br />
<br />I tried these with my loader and none of them crash. None of them sound strange either, except maybe for the song I tried from Star Ocean (so-01.spc).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Mon Mar 01, 2010 6:30 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I just got a no-patch method working, where I execute the final code out of the four I/O registers (yes, it's as crazy as it sounds). The only modification to the SPC RAM is pushing three bytes (the final PSW and PC to jump to).
<br />
<br />After you've loaded the DSP registers and 64K RAM, you tell the bootloader to start executing $00F5. The SPC bootloader code reaches this point, where it acknowledges to the S-CPU, then jumps to $00F5:
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">MOV $F4,A&nbsp; &nbsp; &nbsp; &nbsp;; 4 send acknowledgement to S-CPU<br />MOV A,Y&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; 2<br />MOV X,A&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; 2<br />BNE Trans&nbsp; &nbsp; &nbsp; &nbsp;; 2<br />JMP &#91;$0000+X&#93;&nbsp; &nbsp;; 6 jump to $00F5</div>
<br />You have the S-CPU sit in a tight loop watching for acknowledgement. The moment that occurs, you write $2F $FE to the last two I/O registers. The SPC will be executing the NOP ad $00F5, then your new instruction, BRA *-2, a loop.
<br />
<br />Now you have the SPC running a two-byte loop at $00F6. You then load a one or two-byte instruction into $00F4 (pad it with a NOP if only one byte), then write $FC to the fourth I/O register. This will change the loop to BRA *-4, so it'll execute the instruction you just wrote, over and over. Delay a bit so it has time to execute, then write $FE to the fourth I/O register again to stop executing the other instruction. Repeat for each instruction you want to execute. When you're done, execute RETI, which will restore PSW from the stack, then do RET. Currently, I execute 18 instructions (36 bytes) via this method to do the final restoration.
<br />
<br />I tested the timing and it's very generous. I had the DRAM refresh delay (40 master clocks) occur at each timing for the S-CPU, and it doesn't bother it. I inserted delays at critical steps, and it took quite a bit to delay too much. The only critical part is getting it into the loop; when executing instructions, you just need to delay enough for it to execute at least once.
<br />
<br />I didn't test whether the SPC reading at the same time the S-CPU is writing to an I/O register causes problems. I've read that it might OR the two values. I reasoned that it can't XOR them, as that would break the bootloader. I analyzed the above and ORing wouldn't break it. The only place the SPC would be reading a byte while the S-CPU is writing is the branch offset at $00F7. That will be either $FE or $FC, which differ only at bit 1. ORing these two yields $FE, which is fine for it to read in that case.
<br />
<br />I'm still testing, but it's working pretty well. Sometimes songs don't play, but the same occurred for the old loader, so I'm not sure it has to do with this new method. I'll post more once I've banged on it more. I'm surprised I actually got this working.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>mic_</b> [ Mon Mar 01, 2010 8:02 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />High points for the absurd programming technique, even if it ends up fixing maybe a handful of games  <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Mon Mar 01, 2010 5:36 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />OK, after about 14 hours, I've got this working well. I wrote a version that runs entirely on the SNES from an UNPATCHED SPC. You give it a buffer with the 64K SPC data, a buffer with the 128 DSP registers, and a buffer with the first 64 bytes of the SPC header (they can all be in ROM). Then it uploads to the SPC-700 using this execute-from-I/O method.
<br />
<br />I've also got the I/O technique working perfectly to where it doesn't even execute an instruction more than once, so you can run PUSH A for example and not have it push more than one byte. This was just too interesting a technique to not attempt to make solid and reliable.
<br />
<br />One reason I wrote this SNES version is I figured bunnyboy might be able to use it in his SNES player (I'm assuming it runs on the S-CPU, and not something custom). Will post something tomorrow.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>bunnyboy</b> [ Mon Mar 01, 2010 8:05 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Bonus points for originality <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />  Are you still having the problems of songs sometimes not starting?  Any significant advantage to this method compared to just patching the .SPC?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>mic_</b> [ Tue Mar 02, 2010 5:29 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The reason why one of the songs from Star Ocean sounds a bit strange when I use my loader could be that it appears to use $FFC0..$FFFF as normal RAM. It has what appears to be actual data in that area, and that data does not match the IPL machine code sequence.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>mic_</b> [ Tue Mar 02, 2010 7:30 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I wrote a <a href="http://jiggawatt.org/badc0de/spcplayer.htm" class="postlink">brief article</a> about the experiences from writing my SPC loader, for all you peoples from the future (won't anybody think of the children?!)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>caitsith2</b> [ Tue Mar 02, 2010 11:27 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />mic_:  You may wish to include Terranigma in your test set. You will see why skipping the writing of FFC0-FFFF, and forcing register F1 to 8x is a bad idea.
<br />
<br />Oh, and FF70 in that games SPC driver is USED.  better implement a free space search algo, then use FF70 as a LAST resort.
<br />
<br />Write 00 to both KON and KOFF dsp registers,  and load the correct KON register in the bootloader.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>mic_</b> [ Tue Mar 02, 2010 1:48 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Ah, TCALL is evil. Won't be too hard to fix these problems though.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Tue Mar 02, 2010 3:16 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Here's source to the no-patching version, that runs on the SNES: <a href="http://blargg.parodius.com/temp/upload_spc_nopatch.zip" class="postlink">upload_spc_nopatch.zip</a>. It came out quite short. The main benefit is that you don't have to modify anything (except the three bytes pushed on the stack). This also means you don't have to search for space to put the final code (simple enough when running on a PC, but tedious if the patching code itself has to run on the SNES). So far I haven't found any problems with this, though I have no way of automating testing on the SNES.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>mic_</b> [ Thu Mar 04, 2010 7:43 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I've made some changes to my code so that e.g. Terranigma now works: <a href="http://jiggawatt.org/badc0de/spcplayer-1.2.zip" class="postlink">http://jiggawatt.org/badc0de/spcplayer-1.2.zip</a>
<br />
<br />The way it works now is like this:
<br />
<br />* Turn echo off in FLG, then init the rest of the DSP regs.
<br />
<br />* Upload a small routine at $0002 in SPC RAM which inits $00, $01, KON, KOF, sets up $f1 so that $ffc0..$ffff is normal RAM, recieves all data between $00f8..$ffff at two bytes per iteration, and finally branches to the init routine.
<br />
<br />* The init routine is placed at some address in SPC RAM which is determined in the following way:
<br />
<br />  # If EDL is non-zero, the address is set to ESA*$100 + $200. $200 is
<br />     added to avoid pages 0 and 1 in case ESA is 0.
<br />  # If EDL is zero the entire SPC RAM dump is scanned for a free chunk
<br />     of memory (one that contains a string of only FF or 00).
<br />  # If both of these fail, $ff70 is used as a last resort.
<br />
<br />* The init routine sets up the SPC registers, FLG, recieves all data between $0000..$00f1, and finally branches to the SPC entry point.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>4</strong> of <strong>7</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>