<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Specus, a Zeldroidvania Demo</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Specus, a Zeldroidvania Demo</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=22&amp;t=7765">http://forums.nesdev.com/viewtopic.php?f=22&amp;t=7765</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>qbradq</b> [ Thu May 19, 2011 1:43 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Specus, a Zeldroidvania Demo</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Hey all! I am back again with yet another iteration of my adventure game demo. I started over from scratch writing a two-way scrolling engine that supports both horizontal and vertical maps (one or the other, like Metroid).
<br />
<br />Right now all it does is load a map and let you scroll around it. But I'll tell you, that was a big challenge! Had it not been for TheFox's debugging extensions for Nintendulator I'd still be at it <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" />
<br />
<br />The next step is to implement a proper object system. Unfortunately I can't reuse most of the code from the NES Adventure Game demo because I need real 16-bit positioning.
<br />
<br />A couple technical points:
<br />
<br />The scrolling engine breaks up the name table updates over four frames, and updates a 16-pixel wide area during that time. That means this engine cannot handle scrolling faster than 4 pixels per frame (it actually can, and even sustain the speed for several seconds, but I digress). 
<br />
<br />The same code path is used for both horizontal and vertical maps. Branches are taken to handle the differences. I am not sure if this is the best approach, but it has worked out for me <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" />
<br />
<br />The thing I am most excited about is that the worst-case execution time for the scroll handler is 1569 cycles (not including the PPU updates in VBlank). That's only 5% of my frame! I think that will leave me plenty of head room for the object system.
<br />
<br />About the demo:
<br />
<br />The project page is <a href="https://sites.google.com/site/qbradq/projects-1/specus" class="postlink">here</a>
<br />
<br />Screenshot:
<br /><img src="https://sites.google.com/site/qbradq/_/rsrc/1305836570523/projects-1/specus/demo02.png" alt="Image" />
<br />
<br />Download Link: <a href="https://sites.google.com/site/qbradq/projects-1/specus/demo02.nes" class="postlink">iNES Format ROM</a>
<br />
<br />Switch maps with the Start button.
<br />Scroll with the Left and Right buttons (even on the vertical map).
<br />Hold down B to scroll 4 pixels per frame.
<br />Hold down A to scroll 6 pixels per frame and watch it break <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" />
<br />
<br />The thing that surprised me most about the scroller is how it handles scrolling too fast. Because it updates the extreme edges of the name tables, and due to how the "need to scroll" detection works, if you scroll too fast it will still handle things gracefully. You will eventually catch up to the scroll seam, but if you then slow down you can watch the updates progress off-screen. It's kinda neat to watch <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dwedit</b> [ Thu May 19, 2011 3:20 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />When I did my scroll engine, it handled up to 8 pixels per frame for both the X and Y directions.  It screwed up if you moved more than 8 pixels per frame.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Ian A</b> [ Thu May 19, 2011 8:15 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Nice!  I'm actually working on a similar style game, myself.
<br />
<br />I handled the updates differently, updating the nametables right before they roll on screen, so it's interesting to how yours handles scrolling too fast compared to mine.
<br />
<br />I'm looking forward to seeing how it comes out!

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>unregistered</b> [ Thu May 19, 2011 9:25 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />That is a long hallway, but it's lined with extra nice looking statues!   <img src="./images/smilies/icon_cool.gif" alt="8)" title="Cool" /> <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />  And just walking left without A or B takes you to the next room eventually... ....long hallway.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>qbradq</b> [ Fri May 20, 2011 5:33 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">unregistered wrote:</div><div class="quotecontent">That is a long hallway, but it's lined with extra nice looking statues!   <img src="./images/smilies/icon_cool.gif" alt="8)" title="Cool" /> <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />  And just walking left without A or B takes you to the next room eventually... ....long hallway.</div>
<br />
<br />The long hallway filled with statues you are seeing is a range clamp. You are scrolling into the negatives. When the scroller tries to read a collumn that is out of bounds it reads collumn 0, which happens to be a statue. You eventually wrap back around to the other side of the map <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" />
<br />
<br />In the game I won't let the screen scroll past the map edges. But the scrolling engine is not concerned with that, it only does what it is told.
<br />
<br />Thanks for the input ya'll! I will post again when you can run and jump around.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>cartlemmy</b> [ Fri May 20, 2011 8:22 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />YAY! I am even more interested in your project now.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dr. Floppy</b> [ Fri May 20, 2011 4:12 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Nice! An impressive demo (gotta love the <em>Zelda 2</em> influence), not to mention a really good reference for gauging scroll speed in general! Just by playing around with this, I was able to determine that 2 pixels-per-frame is the speed I consider "standard" in my mind's eye.
<br />
<br />(I gauged 2 ppf by taking advantage of the optical illusion triggered by activating 6 ppf in the Hallway of Statues.)
<br />
<br />
<br />Just curious- is there a reason you tackled the scroll engine before main character movement mechanics? (Or was that Demo1?) Also, was the 16-pixel-wide update area chosen for its simplicity or due to cycle limitations?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>qbradq</b> [ Fri May 20, 2011 5:04 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The first demo implemented everything but a scrolling engine. You can find it <a href="http://nesdev.com/bbs/viewtopic.php?t=7586" class="postlink">here</a>. Bolting a scrolling engine onto that program was not an option as it used 8-bit positions.
<br />
<br />I chose 16 pixel wide scroll updates due to simplicity. When the engine decides it needs to scroll to does the following actions on subsequent frames:
<br />
<br />1. Fetch map data from main RAM into a couple of buffers for use later.
<br />2. Generate the left-most column of tiles and stage them for the PPU udpate.
<br />3. Generate the right-most column of tiles and stage them for the PPU update.
<br />4. Update the attribute cache to reflect the new state, and copy it to the PPU staging buffer.
<br />
<br />Another approach is to roll steps 1-3 into one frame and step 4 into a different frame. I think that is what Metroid is doing.
<br />
<br />It was important for me to spread the CPU load over multiple frames to leave more room for collision detection. I know from experience that correct platformer collision detection (as in NOT what Castlevania uses) eats a lot of CPU time. I am hopeful I can squeeze in 45 degree slopes with 6 or 8 background-colliding objects, but that may not be feasible. Then there is enemy AI, object-to-object collision, object culling and spawning and a music engine that all need to run every frame.
<br />
<br />One complication I have noticed is that in my previous game I found 6 pixels per frame to be the best maximum falling speed. That poses a problem as it breaks my scroller. I can compensate for that by making sure the player cannot fall more than two screens at once.
<br />
<br />Yea, that might not work out so well. Anyway...

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Fri May 20, 2011 5:12 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Going down, down in an earlier round</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">qbradq wrote:</div><div class="quotecontent">One complication I have noticed is that in my previous game I found 6 pixels per frame to be the best maximum falling speed. That poses a problem as it breaks my scroller. I can compensate for that by making sure the player cannot fall more than two screens at once.</div>
<br />Or you can do what <a href="http://en.wikipedia.org/wiki/Bartman_Meets_Radioactive_Man" class="postlink">Bartman Meets Radioactive Man</a> does and assume that if the player falls past the camera, the player has probably fallen past the body's ability to land safely.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dr. Floppy</b> [ Fri May 20, 2011 9:10 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">qbradq wrote:</div><div class="quotecontent">I know from experience that correct platformer collision detection (as in NOT what Castlevania uses) eats a lot of CPU time.</div>
<br />
<br />Spasms... how much time, approximately?
<br />
<br />The handful of games I've played around with all seem to finish their MPL/rendering stuff by scanline 200 or sooner...

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Denine</b> [ Mon May 23, 2011 3:12 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Wow,very smooth!
<br />Congrats ;D
<br />Now, It's going to be interesting thing.
<br />I spoted a bug, though.
<br />When you scroll to the right while holding A button and then, you change direction to Left, nametables will be still updated like you are holding right button.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>qbradq</b> [ Tue May 24, 2011 5:35 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Dr. Floppy wrote:</div><div class="quotecontent"><div class="quotetitle">qbradq wrote:</div><div class="quotecontent">I know from experience that correct platformer collision detection (as in NOT what Castlevania uses) eats a lot of CPU time.</div><br /><br />Spasms... how much time, approximately?<br /><br />The handful of games I've played around with all seem to finish their MPL/rendering stuff by scanline 200 or sooner...</div><br /><br />I posted some numbers a while back but can't seem to find them. The player update was close to 6000 cycles due to input handling and complex animation. I think the base update (gravity, velocity and collision) worst-case was in the neighborhood of 1500 cycles. That does not sound so bad until you consider that you will probably want six or eight such objects on screen at once. And then there is object to object collision to think about.<br /><br /><div class="quotetitle">Denine wrote:</div><div class="quotecontent">Wow,very smooth! <br />Congrats ;D <br />Now, It's going to be interesting thing. <br />I spoted a bug, though. <br />When you scroll to the right while holding A button and then, you change direction to Left, nametables will be still updated like you are holding right button.</div>
<br />
<br />Yup, the scrolling breaks when you hit 88 miles per hour. Replace your flux capacitor and try again.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dr. Floppy</b> [ Wed May 25, 2011 3:44 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">qbradq wrote:</div><div class="quotecontent">I think the base update (gravity, velocity and collision) worst-case was in the neighborhood of 1500 cycles. That does not sound so bad until you consider that you will probably want six or eight such objects on screen at once. And then there is object to object collision to think about.</div>
<br />
<br />Thank you; this is very informative! (I shall count among my blessings my game taking place entirely underwater, where gravity is effectively absent.) 
<br />
<br />What's your preferred format for player-block collision detection?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>qbradq</b> [ Wed May 25, 2011 6:03 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />My perferred method is to find the left and right extents of the bounding box, then check the bounding flags for each tile along the bottom if moving down, or along the top if moving up. A similar method is used for latteral movement.
<br />
<br /> I use an in-RAM tile map that has the collision flags pre-calculated to speed things up.
<br />
<br />Just remeber the order of opperations:
<br />
<br />Apply Y velocity
<br />Do Y collisions
<br />Apply X velocity
<br />Do X collisions
<br />
<br />If you try to do both updates at once things go sideways on you.
<br />
<br />Good luck writting this piece in hex <img src="./images/smilies/icon_wink.gif" alt=";)" title="Wink" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dr. Floppy</b> [ Sat May 28, 2011 7:17 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">qbradq wrote:</div><div class="quotecontent">My preferred method is to find the left and right extents of the bounding box, then check the bounding flags for each tile along the bottom if moving down, or along the top if moving up. A similar method is used for lateral movement.<br /><br /> I use an in-RAM tile map that has the collision flags pre-calculated to speed things up.<br /><br />Just remember the order of operations:<br /><br />Apply Y velocity<br />Do Y collisions<br />Apply X velocity<br />Do X collisions<br /><br />If you try to do both updates at once things go sideways on you.<br /><br />Good luck writing this piece in hex <img src="./images/smilies/icon_wink.gif" alt=";)" title="Wink" /></div>
<br />
<br />Thank you much! Truth be told, I enjoy programming in hex... I must be a purist at heart. <img src="./images/smilies/icon_mrgreen.gif" alt=":mrgreen:" title="Mr. Green" /> 
<br />
<br />Is collision detection typically done on a 16x16-pixel "block" basis, or an 8x8-pixel tile basis?

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>