<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=12&amp;t=3231" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2007-04-17T09:34:14-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=12&amp;t=3231</id>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2007-04-17T09:34:14-07:00</updated>
<published>2007-04-17T09:34:14-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3231&amp;p=23280#p23280</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3231&amp;p=23280#p23280"/>
<title type="html"><![CDATA[SPC:  BRR &quot;loop&quot; bit confusion (and/or possible bu]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3231&amp;p=23280#p23280"><![CDATA[
Answer #1 : BRR filters #1, #2 and #3 relies on precedent state of the waveform to define next state of the waveform. Because samples are sucessible to start directly with filters #1, #2 or #3 I think most BRR converters commercial game companies had used in their developement, it automatically filled a blank block (using filter #0) to have a known point before actually playing the wave.<br />All samples begining with filter #0 would not need this at all, but it looks most games just place a blank block without asking any questions.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Tue Apr 17, 2007 9:34 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2007-04-17T09:17:46-07:00</updated>
<published>2007-04-17T09:17:46-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3231&amp;p=23276#p23276</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3231&amp;p=23276#p23276"/>
<title type="html"><![CDATA[SPC:  BRR &quot;loop&quot; bit confusion (and/or possible bu]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3231&amp;p=23276#p23276"><![CDATA[
The l bit is ignored when the e bit is clear. So a BRR block of nine zero bytes will play silence and then move on to the next block normally.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Tue Apr 17, 2007 9:17 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Disch]]></name></author>
<updated>2007-04-16T15:04:30-07:00</updated>
<published>2007-04-16T15:04:30-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3231&amp;p=23250#p23250</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3231&amp;p=23250#p23250"/>
<title type="html"><![CDATA[SPC:  BRR &quot;loop&quot; bit confusion (and/or possible bu]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3231&amp;p=23250#p23250"><![CDATA[
I'm using Anomie's apudsp.txt doc -- he only briefly touches on it:<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />If 'l' is clear, the voice goes into the Release state and the envelope goes to 0 immediately.<br /></div><br /><br />Seems simple enough at first glance.  However I'm running into several sound effects and even some samples used in music where the first block of a sample consists of 9 00s.  So what ends up happening:<br /><br />- voice is keyed on (enter Attack)<br />- instrument/sample is restarted<br />- first header byte is 00 ('l' bit clear) -- enter Release (and hold Envelope at 0)<br />- From what I can tell... the only way to get out of Release state is to key on again (enter attack) -- which of course just repeats this process.<br /><br />The end result is that any sound effect/music channel that uses these instruments is totally silent.<br /><br />This apparently has the biggest impact on Castlevania - Dracula X.  When I ignore the loop bit entirely, music and sound effects play normally.  When I impliment the loop bit as described, I hear absolutely nothing.<br /><br />Other noted areas where this happens:<br />- most/all music channels on the "second" overworld music in SMW  (first heard in the "Yoshi's Island 3" stage)<br />- The "yoshi sound" in SMW<br />- The whip sound effects in Super Castlevania 4<br /><br />--<br /><br />Now I'm not entirely convinced this is the whole story.  That problem aside, I have a few other problems in my SPC emulation either in the CPU (still!), in my volume and/or envelope handling, or in my sample decoding -- because even in games that DO play sound... the sound doesn't sound quite right (some samples are crackley, and some voices are much quieter than they should be, while others are crazy loud)<br /><br /><br />SO!  My questions are:<br /><br />1)  Do the samples in question really start with a zero'd out block?  Or is there some bug in my CPU/wherever that's causing the wrong sample or sample address to be loaded?<br /><br />2)  Does the loop flag really work as I'm implimenting?  Or is there some other condition to it?  (like... only look at it if 'e' is set?)<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=33">Disch</a> — Mon Apr 16, 2007 3:04 pm</p><hr />
]]></content>
</entry>
</feed>