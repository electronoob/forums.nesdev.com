<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Need instruction on how to save.</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Need instruction on how to save.</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=10&amp;t=11326">http://forums.nesdev.com/viewtopic.php?f=10&amp;t=11326</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>2</strong> of <strong>3</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Mon Jun 09, 2014 7:12 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Need instruction on how to save.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />NESASM:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">.inesprg 2 ; 16k PRG<br />.ineschr 1 ; 8k CHR<br />.inesmir 1 ; 0 = horizontal mirroring, 1 = vertical mirroring<br />.inesmap 0 ; 0 = NROM<br /></div><br /><br />CA65:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">.segment &quot;HEADER&quot;<br /><br />INES_MAPPER = 0 ; 0 = NROM<br />INES_MIRROR = 1 ; 0 = horizontal mirroring, 1 = vertical mirroring<br />INES_SRAM&nbsp; &nbsp;= 0 ; 1 = battery backed SRAM at $6000-7FFF<br /><br />.byte 'N', 'E', 'S', $1A ; ID<br />.byte $02 ; 16k PRG bank count<br />.byte $01 ; 8k CHR bank count<br />.byte INES_MIRROR | (INES_SRAM &lt;&lt; 1) | ((INES_MAPPER &amp; $f) &lt;&lt; 4)<br />.byte (INES_MAPPER &amp; %11110000)<br />.byte $0, $0, $0, $0, $0, $0, $0, $0 ; padding</div><br /><br />I don't think we need to write a whole new assembler just to explore the difference between these two pieces of code.<br /><br />Creating an iNES header with your assembler or with a hex editor is about the most trivial thing one can possibly do in NES programming. If a beginner can't get through this, especially since it can be solved by a CTRL-C, CTRL-V from the myriad of available examples, there may be no hope at all. There are many things that are difficult to learn about NES and 6502 programming, but this isn't one of them.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Quietust</b> [ Mon Jun 09, 2014 8:17 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Need instruction on how to save.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Of course, there's always the option of using a separate utility to combine the header, PRG, and CHR into a .NES file afterwards, which is what I do. This also tends to be useful if, for some reason, you intend to produce both .NES and .UNIF outputs.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Mon Jun 09, 2014 8:40 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Need instruction on how to save.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">3gengames wrote:</div><div class="quotecontent">Output NES ROMS</div><br />Every 6502 assembler I know of can do this.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">and include iNES 2.0+iNES 1 options right as assembler directives in clear text, for beginners.</div><br />So you feel the need to write whole new parsing/assembling/macro engines because of a mere 16 bytes (which in the absolute worst case can be written by hand) that go in the beginning of the ROM? OK.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Do you see NESASM3 templated around?</div><br />Yes, in the newbie tutorials most beginners use.<br /><br /><div class="quotetitle">rainwarrior wrote:</div><div class="quotecontent">CA65:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">.segment &quot;HEADER&quot;<br /><br />INES_MAPPER = 0 ; 0 = NROM<br />INES_MIRROR = 1 ; 0 = horizontal mirroring, 1 = vertical mirroring<br />INES_SRAM&nbsp; &nbsp;= 0 ; 1 = battery backed SRAM at $6000-7FFF<br /><br />.byte 'N', 'E', 'S', $1A ; ID<br />.byte $02 ; 16k PRG bank count<br />.byte $01 ; 8k CHR bank count<br />.byte INES_MIRROR | (INES_SRAM &lt;&lt; 1) | ((INES_MAPPER &amp; $f) &lt;&lt; 4)<br />.byte (INES_MAPPER &amp; %11110000)<br />.byte $0, $0, $0, $0, $0, $0, $0, $0 ; padding</div></div><br />Yes, headers can be created like this in practically any assembler. This is something you get done in the first 5 minutes of coding a game and never look at again during the remaining several months/years of development. Not really worth coding another buggy assembler, is it?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>raydempsey</b> [ Mon Jun 09, 2014 11:51 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Need instruction on how to save.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">rainwarrior wrote:</div><div class="quotecontent">NESASM:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">.inesprg 2 ; 16k PRG<br />.ineschr 1 ; 8k CHR<br />.inesmir 1 ; 0 = horizontal mirroring, 1 = vertical mirroring<br />.inesmap 0 ; 0 = NROM<br /></div><br /><br />CA65:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">.segment &quot;HEADER&quot;<br /><br />INES_MAPPER = 0 ; 0 = NROM<br />INES_MIRROR = 1 ; 0 = horizontal mirroring, 1 = vertical mirroring<br />INES_SRAM&nbsp; &nbsp;= 0 ; 1 = battery backed SRAM at $6000-7FFF<br /><br />.byte 'N', 'E', 'S', $1A ; ID<br />.byte $02 ; 16k PRG bank count<br />.byte $01 ; 8k CHR bank count<br />.byte INES_MIRROR | (INES_SRAM &lt;&lt; 1) | ((INES_MAPPER &amp; $f) &lt;&lt; 4)<br />.byte (INES_MAPPER &amp; %11110000)<br />.byte $0, $0, $0, $0, $0, $0, $0, $0 ; padding</div><br /><br />I don't think we need to write a whole new assembler just to explore the difference between these two pieces of code.<br /><br />Creating an iNES header with your assembler or with a hex editor is about the most trivial thing one can possibly do in NES programming. If a beginner can't get through this, especially since it can be solved by a CTRL-C, CTRL-V from the myriad of available examples, there may be no hope at all. There are many things that are difficult to learn about NES and 6502 programming, but this isn't one of them.</div><br /><br />Using NESASM3, the only change you have is .inesprg 2 instead of .inesprg 1 like I have it. When I changed it, the screen shows only grey. After other experimentation, it still doesn't allow me to write to $6000. So no, hope is not lost because I can't do this one thing. My game is up and running flawlessly besides this it just doesn't have the ability to save. I also tried .inesmir 3 instead of inesmir 1 like I have it. No change. Messed around with .inesmap too. So I'll ask the question again, what do I have to do to make it save?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Mon Jun 09, 2014 12:00 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Need instruction on how to save.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">raydempsey wrote:</div><div class="quotecontent">Using NESASM3, the only change you have is .inesprg 2 instead of .inesprg 1 like I have it<br /></div>Rainwarrior's example had nothing to do with your problem, and everything to do with 3gengames's comment.<br /><br />You should try <a href="http://forums.nesdev.com/viewtopic.php?p=129709#p129709" class="postlink">what zzo38 said</a> earlier in this thread.<br /><br />If it doesn't work, your only choices are to use a less awkward assembler than NESASM, or to manually edit the file after NESASM makes it.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Mon Jun 09, 2014 2:52 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Need instruction on how to save.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I apologize for getting dragged off topic. I lost sight of what the OP's question was.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Mon Jun 09, 2014 2:59 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Need instruction on how to save.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />So to sum up:<br /><ol style="list-style-type: decimal"><li>Make sure the battery bit is set in the header. How to do this varies based on which assembler you use, and there are holy wars on this BBS over which assembler is best. </li><li>You may have to write to the mapper to make save memory writable. </li><li>Anything you write to $6000-$7FFF will be restored next time you power on. </li><li>Stray writes during a power cycle may occasionally corrupt data, as will use of a cartridge for the first time. Use some sort of error detection, such as a modulo 256 sum or a CRC16, so that the game doesn't end up loading bad data. </li><li>Save RAM will add to the cost of replication of your game on a cartridge. </li><li>If you can pack your saved game into 32 to 64 bits, you can avoid this with passwords. </li></ol>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Mon Jun 09, 2014 3:05 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Need instruction on how to save.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Is RAM at $6000-7FFF with NROM universally supported by emulators?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Mon Jun 09, 2014 3:42 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Need instruction on how to save.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Any emulator that supports the Famicom keyboard should support at least 2048 bytes there, which <a href="http://bootgod.dyndns.org:7777/profile.php?id=3810" class="postlink">Family BASIC requires</a>.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>raydempsey</b> [ Mon Jun 09, 2014 5:33 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Need instruction on how to save.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Nerdy Nights explains how to enable WRAM using NESASM. I still don't quite understand. What I think is happening is the iNES header numbers are altered somehow, and then you have to write something 5 times to the PRG bank register, which I vaguely understand. If anyone could explain how to make this work by telling me what to change the iNES header to and what code to add, it would be much appreciated.<br /><br /><!-- m --><a class="postlink" href="http://www.nintendoage.com/forum/messageview.cfm?catid=22&amp;threadid=33260">http://www.nintendoage.com/forum/messag ... adid=33260</a><!-- m -->

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Mon Jun 09, 2014 5:45 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Need instruction on how to save.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Nerdy Nights is giving an example using the MMC1, which only matters to you if you're planning on using the MMC1.<br /><br />Otherwise, this quote is the relevant bit, and is what zzo38 had said to do:<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">To add a battery to the WRAM, set the .inesmir directive to 2 in the iNES header. Now read and write to the WRAM normally. When power is removed the RAM contents will remain. The emulator will create an 8KB .sav file for the WRAM, however some emulators will not do this unless you have done some WRAM access.</div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>raydempsey</b> [ Tue Jun 10, 2014 12:58 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Need instruction on how to save.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I tried simply switching inesmir to 2 but that did nothing. I believe it has something to do with writing to $8000 and $E000 but I don't know. I've tried a lot of things but it won't allow me to write to $6000.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Tue Jun 10, 2014 1:03 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Need instruction on how to save.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I promise you, the writes to $E000 and $8000 only are relevant if you're using the MMC1 (i.e. &quot;.inesmap 1&quot;).<br /><br />You really shouldn't have to use MMC1 to get an emulation of battery-backed RAM from $6000-$7FFF; what emulator are you testing with?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>zzo38</b> [ Tue Jun 10, 2014 4:20 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Need instruction on how to save.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">Eh? I don't see what's so ridiculous. Ridiculous is having to put markers every 8KB and losing code without warnings if you fail to do so.</div>Well, I have corrected this problem. You still need to specify that two adjacent banks should be joined together, but after you do that, it is not necessary to keep track of every 8K; it will do that automatically.<br /><br /><div class="quotetitle">3gengames wrote:</div><div class="quotecontent">Output NES ROMS and include iNES 2.0+iNES 1 options right as assembler directives in clear text, for beginners.</div>I have corrected this too. If you use any NES 2.0 exclusive commands, or you specify a mapper number exceeding 255, then it will create a NES 2.0 header.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">After that, it'll be able to do whatever anyone else wants to make it do.</div>Perhaps you can specify some examples? Some people pay have more use for some features than what other people prefer. I have implemented many features which is what I use; I find counted labels the least useful of them although most people seem to find counted labels to be the most useful of the features I have added.<br /><br />Use whatever assembler you prefer though; it is really a matter of preference.<br /><br /><div class="quotetitle">raydempsey wrote:</div><div class="quotecontent">Using NESASM3, the only change you have is .inesprg 2 instead of .inesprg 1 like I have it.</div>That changes the PRG ROM size, not the flags. You changed it from 16K to 32K, meaning that the 16K is no longer mirrored to the $C000-$FFFF area, therefore there is no reset vector and it will not work. Use .inesmir to set the flag.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">To add a battery to the WRAM, set the .inesmir directive to 2 in the iNES header.</div>Yes, this is how it is done. However, if you want vertical nametable mirroring (horizontal arrangement) then you need .inesmir to be set to 3 instead of 2; the relevant numbers are added together.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>raydempsey</b> [ Wed Jun 11, 2014 6:49 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Need instruction on how to save.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I still can't get saving to work. This is how I start my program: (compiled using NESASM)<br /><br />  .inesprg 1   ; 1x 16KB PRG code<br />  .ineschr 1   ; 1x  8KB CHR data<br />  .inesmap 0   ; mapper 0 = NROM, no bank swapping<br />  .inesmir 3   ; background mirroring<br /><br />  .bank 0<br />  .org $C000<br /><br />RESET:<br />  SEI          ; disable IRQs<br />  CLD          ; disable decimal mode<br />  LDX #$40<br />  STX $4017    ; disable APU frame IRQ<br />  LDX #$FF<br />  TXS          ; Set up stack<br />  INX          ; now X = 0<br />  STX $2000    ; disable NMI<br />  STX $2001    ; disable rendering<br />  STX $4010    ; disable DMC IRQs<br /><br />After this point, I have been trying to save values into $6000 and it won't respond. I believe I have this set up for MMC1 mapper which is sufficient for what I'm doing (not very familiar with mappers). How do I get it to save!?

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>2</strong> of <strong>3</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>