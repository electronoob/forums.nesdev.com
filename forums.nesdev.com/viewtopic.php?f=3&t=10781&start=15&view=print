<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Need next steps for NES emulator</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Need next steps for NES emulator</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=3&amp;t=10781">http://forums.nesdev.com/viewtopic.php?f=3&amp;t=10781</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>2</strong> of <strong>5</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>WedNESday</b> [ Fri Dec 27, 2013 10:22 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Need next steps for NES emulator</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />nestest.nes is quicker and easier on your brain than reading the Nintendulator log. Just do some basic PPU code to draw a Name Table and adding really quick and effective (not perfect but it'll do for now) Controller support is literally minutes.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>ArsonIzer</b> [ Fri Dec 27, 2013 12:43 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Need next steps for NES emulator</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">WedNESday wrote:</div><div class="quotecontent">Just do some basic PPU code to draw a Name Table and adding really quick and effective (not perfect but it'll do for now) Controller support is literally minutes.</div><br /><br />I don't know if that's a good idea if someone barely even has a 6502 core working. At least, it would drive me insane to have to wait that long before knowing how badly my CPU is broken.<br /><br />@codeblox, this is what I did: let your emulator read the nestest.log file line by line, and let your program compare all the registers, opcode, flags, etc, with the log every instruction. I.e. in pseudocode:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent"><br />file f = open_new_file(nestest.log);<br />string log_line;<br />while((log_line = f.read_next_line()) is not empty)<br />{<br />string my_line = &quot;A:&quot; + cpu.A + &quot; X:&quot; + cpu.X + &quot; Y:&quot; + cpu.Y + &quot; PC:&quot; + cpu.PC............. etc;<br />if(log_line doesn't contain cpu.A and cpu.X and cpu.Y and cpu.PC and cpu.SP .............. etc ) <br />{<br />print_error(&quot;Error, your code and nestest.log's code differ&quot;);<br />print_line(&quot;My line: &quot; + my_line);<br />print_line(&quot;nestest.log line: &quot; + log_line);<br />exit(1);<br />}<br />}<br /><br /></div><br /><br />Essentially what this will do is compare the status of your registers/flags/etc after every instruction with that of the nintendulator log, and whenever a dissimilarity is found in one of the registers/flags/etc, it will print an error with your (faulty) line (i.e. the line where it went wrong) + the nintendulator log line. Then you can quickly (manually) compare the 2 lines, and check which instruction messed it up. When you've done that, you simply check the instruction, fix it, and re-run the program. Eventually (if you don't have unofficial opcodes implemented) your emulator will crash (probably, don't know how it handles problems), and you'll have a &quot;decently&quot; working official 6502 core (I'm saying &quot;decently&quot; because nestest is not actually THAT reliable, but it will be sufficient to get your emu running some games).<br /><br />This is merely what I used when I started out and had just finished my 6502. The PPU was too hard for me to understand, so I created this quick piece of &quot;test&quot; code. It will probably take you about 15 - 30 minutes to do this, and several minutes to several hours to test (depending on how quickly you can determine what's wrong with your code).<br /><br />A couple of things to keep in mind:<br />1. Make sure you compare strings in the same format, i.e. nestest.log does something like this:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">C7F8&nbsp; 24 01&nbsp; &nbsp; &nbsp;BIT $01 = 40&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; A:40 X:00 Y:00 P:6D SP:FB CYC:256 SL:242</div><br /><br />so you have to make sure that you check it like this:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp;if (log_line contains &quot;A:&quot; + to_hex(cpu.A)....................) </div><br /><br />i.e. converting the actual accumulator decimal number to a 2 character hex string before checking, otherwise it will mess up from the first line.<br /><br />2. Note that this advise is coming from a newbie himself, i.e. it's a quick and dirty temporary implementation which might not suit you.<br /><br />I hope this somewhat helps.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Fri Dec 27, 2013 1:20 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Need next steps for NES emulator</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />What programming language are you using for your emulator? If it's Python, C, or something else I have installed, I might be able to cook up a parser for the log to allow easy comparison in your engine.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>WedNESday</b> [ Fri Dec 27, 2013 1:42 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Need next steps for NES emulator</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">ArsonIzer wrote:</div><div class="quotecontent"><div class="quotetitle">WedNESday wrote:</div><div class="quotecontent">Just do some basic PPU code to draw a Name Table and adding really quick and effective (not perfect but it'll do for now) Controller support is literally minutes.</div><br /><br />I don't know if that's a good idea if someone barely even has a 6502 core working. At least, it would drive me insane to have to wait that long before knowing how badly my CPU is broken.</div><br /><br />Setting up 2005/2006 writes, a little PPU memory map and rendering a Name Table with a fake palette is like 1 hours tops.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>ArsonIzer</b> [ Fri Dec 27, 2013 1:56 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Need next steps for NES emulator</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">WedNESday wrote:</div><div class="quotecontent">Setting up 2005/2006 writes, a little PPU memory map and rendering a Name Table with a fake palette is like 1 hours tops.</div><br /><br />Either you're MAJORLY underestimating the complexity of the PPU for those who don't know how it works, or you're WAY overestimating newbies' capabilities to understand something new like this. You have been working on this for 10 years, he barely has a working 6502 and he's struggling to get that running. Trust me, from my point of view (someone who does have kinda have a working one, but is still a beginner), if I had to rewrite my PPU for the 4th time or so, it would still take me several hours to just get nametables working. Imagine what he would have to go through. Not everyone has your level of knowledge and experience. That is, unless he's some kind of NES pro and I've missed that, but otherwise, my point stands.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>WedNESday</b> [ Fri Dec 27, 2013 4:06 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Need next steps for NES emulator</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">ArsonIzer wrote:</div><div class="quotecontent"><div class="quotetitle">WedNESday wrote:</div><div class="quotecontent">Setting up 2005/2006 writes, a little PPU memory map and rendering a Name Table with a fake palette is like 1 hours tops.</div><br /><br />Either you're MAJORLY underestimating the complexity of the PPU for those who don't know how it works, or you're WAY overestimating newbies' capabilities to understand something new like this. You have been working on this for 10 years, he barely has a working 6502 and he's struggling to get that running. Trust me, from my point of view (someone who does have kinda have a working one, but is still a beginner), if I had to rewrite my PPU for the 4th time or so, it would still take me several hours to just get nametables working. Imagine what he would have to go through. Not everyone has your level of knowledge and experience. That is, unless he's some kind of NES pro and I've missed that, but otherwise, my point stands.</div><br /><br />Original: This. <img src="./images/smilies/Mfr_icon_homebrew.png" alt=":beer:" title="Beer" /><br /><br />New: I still stand by my original post.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>codeblox</b> [ Fri Dec 27, 2013 6:35 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Need next steps for NES emulator</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I've gotta say, this is exciting. I ran a small sample of the nestest.nes file against my CPU and the opcodes appear to be doing their thing correctly. The registers might not be 100% but I can work this out.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent"><br />$C000: 4C(jmp) A:00 X:00 Y:00 P:00 SP:FD<br />$C5F5: A2(ldx) A:00 X:00 Y:00 P:02 SP:FD<br />$C5F7: 86(stx) A:00 X:00 Y:00 P:02 SP:FD<br />$C5F9: 86(stx) A:00 X:00 Y:00 P:02 SP:FD<br />$C5FB: 86(stx) A:00 X:00 Y:00 P:02 SP:FD<br />$C5FD: 20(jsr) A:00 X:00 Y:00 P:02 SP:FB<br />$C72D: EA(nop) A:00 X:00 Y:00 P:02 SP:FB<br />$C72E: 38(sec) A:00 X:00 Y:00 P:03 SP:FB<br />$C72F: B0(bcs) A:00 X:00 Y:00 P:03 SP:FB<br />$C735: EA(nop) A:00 X:00 Y:00 P:03 SP:FB<br />$C736: 18(clc) A:00 X:00 Y:00 P:02 SP:FB<br />$C737: B0(bcs) A:00 X:00 Y:00 P:02 SP:FB<br />$C739: 4C(jmp) A:00 X:00 Y:00 P:02 SP:FB<br />$C740: EA(nop) A:00 X:00 Y:00 P:02 SP:FB<br />$C741: 38(sec) A:00 X:00 Y:00 P:03 SP:FB<br />$C742: 90(bcc) A:00 X:00 Y:00 P:03 SP:FB<br />$C744: 4C(jmp) A:00 X:00 Y:00 P:03 SP:FB<br />$C74B: EA(nop) A:00 X:00 Y:00 P:03 SP:FB<br />$C74C: 18(clc) A:00 X:00 Y:00 P:02 SP:FB<br />$C74D: 90(bcc) A:00 X:00 Y:00 P:02 SP:FB<br />$C753: EA(nop) A:00 X:00 Y:00 P:02 SP:FB<br />$C754: A9(lda) A:00 X:00 Y:00 P:02 SP:FB<br />$C756: F0(beq) A:00 X:00 Y:00 P:02 SP:FB<br />$C75C: EA(nop) A:00 X:00 Y:00 P:02 SP:FB<br />$C75D: A9(lda) A:40 X:00 Y:00 P:02 SP:FB<br />$C75F: F0(beq) A:40 X:00 Y:00 P:02 SP:FB<br />$C764: A2(ldx) A:40 X:06 Y:00 P:02 SP:FB<br />$C766: 86(stx) A:40 X:06 Y:00 P:02 SP:FB<br />$C768: EA(nop) A:40 X:06 Y:00 P:02 SP:FB<br />$C769: A9(lda) A:40 X:06 Y:00 P:02 SP:FB<br />$C76B: D0(bne) A:40 X:06 Y:00 P:02 SP:FB<br />$C76D: A2(ldx) A:40 X:07 Y:00 P:02 SP:FB<br />$C76F: 86(stx) A:40 X:07 Y:00 P:02 SP:FB<br />$C771: EA(nop) A:40 X:07 Y:00 P:02 SP:FB<br />$C772: A9(lda) A:00 X:07 Y:00 P:02 SP:FB<br />$C774: D0(bne) A:00 X:07 Y:00 P:02 SP:FB<br />$C776: 4C(jmp) A:00 X:07 Y:00 P:02 SP:FB<br />$C77D: EA(nop) A:00 X:07 Y:00 P:02 SP:FB<br />$C77E: A9(lda) A:FF X:07 Y:00 P:82 SP:FB<br />$C780: 85(sta) A:FF X:07 Y:00 P:82 SP:FB<br />$C782: 24(bit) A:FF X:07 Y:00 P:C2 SP:FB<br />$C784: 70(bvs) A:FF X:07 Y:00 P:C2 SP:FB<br />$C78A: EA(nop) A:FF X:07 Y:00 P:C2 SP:FB<br />$C78B: 24(bit) A:FF X:07 Y:00 P:C2 SP:FB<br />$C78D: 50(bvc) A:FF X:07 Y:00 P:C2 SP:FB<br />$C78F: 4C(jmp) A:FF X:07 Y:00 P:C2 SP:FB<br />$C796: EA(nop) A:FF X:07 Y:00 P:C2 SP:FB<br />$C797: A9(lda) A:00 X:07 Y:00 P:C2 SP:FB<br />$C799: 85(sta) A:00 X:07 Y:00 P:C2 SP:FB<br />$C79B: 24(bit) A:00 X:07 Y:00 P:C2 SP:FB<br /><br /></div><br /><br /><br />There is one thing I'm npt sure about though. Right now I have this in a loop that eventually terminates. I believe it should be in a loop like the below:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent"><br />while(true)<br />{<br />&nbsp; &nbsp; fetch...<br />&nbsp; &nbsp; decode...<br />&nbsp; &nbsp; execute...<br />}<br /><br /></div><br /><br />How do I know when the program should terminate and break out of the loop though?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Fri Dec 27, 2013 6:45 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Need next steps for NES emulator</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Good job. Feel free to implement opcodes as far down through the log as you feel like.<br /><br />About the flags: Essentially <a href="http://wiki.nesdev.com/w/index.php/Status_flags" class="postlink">bits 5 and 4 don't matter</a> in a 6502 unless it's executing a PHP, BRK, /IRQ, or /NMI. If ((nintendulator_flags &amp; 0xCF) == (your_flags &amp; 0xCF)), then the flags match.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>codeblox</b> [ Fri Dec 27, 2013 6:58 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Need next steps for NES emulator</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I've got all of the &quot;official&quot; opcodes implemented and I could run the entire test suite however I'm not sure how it should eventually terminate. I edited my above post but probably after you had posted. How do I know when program execution should end?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Fri Dec 27, 2013 7:23 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Need next steps for NES emulator</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">codeblox wrote:</div><div class="quotecontent">How do I know when program execution should end?</div><br />A CPU will continue to execute opcodes so long as it has power and doesn't hit a halt opcode. To catch the end of a subroutine, you could set a breakpoint on the address of the final RTS, or you could set a breakpoint on the stack pointer exceeding the initial value (which would indicate that the subroutine has ended).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>ArsonIzer</b> [ Sat Dec 28, 2013 3:23 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Need next steps for NES emulator</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">codeblox wrote:</div><div class="quotecontent">How do I know when program execution should end?</div><br /><br />Assuming you're talking about the nestest.nes test loaded from $C000 (since normal NES roms never stop) either do what tepples said, or you could let the program exit whenever it has reached an unofficial opcode (if you haven't implemented those yet), like so:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">constant int unofficial_op_reached = 500;<br /><br />switch(opcode)<br />{<br />case 0x69: doADC(); break;<br />case 0x65: doADC(); break;<br />case .......: ............; break;<br />case .......: ............; break;<br />.....<br />.....<br />default:<br />exit(unofficial_op_reached); //exit the program with error code unofficial_op_reached<br />throw_exception(&quot;Unofficial opcode reached&quot;); //Or do this if your language supports exceptions (Python, Java, C#, C++)<br />}<br /></div><br /><br />I think nestest.nes's first used unofficial opcode is a 2-byte NOP, so just compare the line before that 2-byte NOP, with that of nestest's log, and you'll see if it stopped correctly. If you reach this line with the pc/op/A/X/Y/flags/etc being equal to that of the log, then you have an adequately working core for now.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>codeblox</b> [ Sat Dec 28, 2013 8:49 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Need next steps for NES emulator</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Got it. I've got a &quot;trap&quot; defined for anything that is &quot;Unofficial&quot;. I created a jump table with all opcodes and when it gets looked up in the table as a &quot;trap&quot; execution stops and an error gets printed. Looks good for the most part. I'm really surprised at how much actually went correctly. I do have some issues with it though. JSR/RTS seem to be giving me problems (Incorrect addresses pushed/popped) and some documentation states one thing while other states another thing.<br /><br />What do you guys think about doing it this way?<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent"><br />typedef void (* op_cback)(mos_6502_t *, opcode_t *);<br /><br /></div><br /><br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent"><br />#include &quot;MOS_6502.h&quot;<br /><br />char * mnemonics&#91;&#93; = {<br /><br />&nbsp; &quot;brk&quot;,&quot;ora&quot;,&quot;trp&quot;,&quot;trp&quot;,&quot;trp&quot;,&quot;ora&quot;,&quot;asl&quot;,&quot;trp&quot;,&quot;php&quot;,&quot;ora&quot;,&quot;asl&quot;,&quot;trp&quot;,&quot;trp&quot;,&quot;ora&quot;,&quot;asl&quot;,&quot;trp&quot;,<br />&nbsp; &quot;bpl&quot;,&quot;ora&quot;,&quot;trp&quot;,&quot;trp&quot;,&quot;trp&quot;,&quot;ora&quot;,&quot;asl&quot;,&quot;trp&quot;,&quot;clc&quot;,&quot;ora&quot;,&quot;trp&quot;,&quot;trp&quot;,&quot;trp&quot;,&quot;ora&quot;,&quot;asl&quot;,&quot;trp&quot;,<br />&nbsp; &quot;jsr&quot;,&quot;and&quot;,&quot;trp&quot;,&quot;trp&quot;,&quot;bit&quot;,&quot;and&quot;,&quot;rol&quot;,&quot;trp&quot;,&quot;plp&quot;,&quot;and&quot;,&quot;rol&quot;,&quot;trp&quot;,&quot;bit&quot;,&quot;and&quot;,&quot;rol&quot;,&quot;trp&quot;,<br />&nbsp; &quot;bmi&quot;,&quot;and&quot;,&quot;trp&quot;,&quot;trp&quot;,&quot;trp&quot;,&quot;and&quot;,&quot;rol&quot;,&quot;trp&quot;,&quot;sec&quot;,&quot;and&quot;,&quot;trp&quot;,&quot;trp&quot;,&quot;trp&quot;,&quot;and&quot;,&quot;rol&quot;,&quot;trp&quot;,<br />&nbsp; &quot;rti&quot;,&quot;eor&quot;,&quot;trp&quot;,&quot;trp&quot;,&quot;trp&quot;,&quot;eor&quot;,&quot;lsr&quot;,&quot;trp&quot;,&quot;pha&quot;,&quot;eor&quot;,&quot;lsr&quot;,&quot;trp&quot;,&quot;jmp&quot;,&quot;eor&quot;,&quot;lsr&quot;,&quot;trp&quot;,<br />&nbsp; &quot;bvc&quot;,&quot;eor&quot;,&quot;trp&quot;,&quot;trp&quot;,&quot;trp&quot;,&quot;eor&quot;,&quot;lsr&quot;,&quot;trp&quot;,&quot;cli&quot;,&quot;eor&quot;,&quot;trp&quot;,&quot;trp&quot;,&quot;trp&quot;,&quot;eor&quot;,&quot;lsr&quot;,&quot;trp&quot;,<br />&nbsp; &quot;rts&quot;,&quot;adc&quot;,&quot;trp&quot;,&quot;trp&quot;,&quot;trp&quot;,&quot;adc&quot;,&quot;ror&quot;,&quot;trp&quot;,&quot;pla&quot;,&quot;adc&quot;,&quot;ror&quot;,&quot;trp&quot;,&quot;jmp&quot;,&quot;adc&quot;,&quot;ror&quot;,&quot;trp&quot;,<br />&nbsp; &quot;bvs&quot;,&quot;adc&quot;,&quot;trp&quot;,&quot;trp&quot;,&quot;trp&quot;,&quot;adc&quot;,&quot;ror&quot;,&quot;trp&quot;,&quot;sei&quot;,&quot;adc&quot;,&quot;trp&quot;,&quot;trp&quot;,&quot;trp&quot;,&quot;adc&quot;,&quot;ror&quot;,&quot;trp&quot;,<br />&nbsp; &quot;trp&quot;,&quot;sta&quot;,&quot;trp&quot;,&quot;trp&quot;,&quot;sty&quot;,&quot;sta&quot;,&quot;stx&quot;,&quot;trp&quot;,&quot;dey&quot;,&quot;trp&quot;,&quot;txa&quot;,&quot;trp&quot;,&quot;sty&quot;,&quot;sta&quot;,&quot;stx&quot;,&quot;trp&quot;,<br />&nbsp; &quot;bcc&quot;,&quot;sta&quot;,&quot;trp&quot;,&quot;trp&quot;,&quot;sty&quot;,&quot;sta&quot;,&quot;stx&quot;,&quot;trp&quot;,&quot;tya&quot;,&quot;sta&quot;,&quot;txs&quot;,&quot;trp&quot;,&quot;trp&quot;,&quot;sta&quot;,&quot;trp&quot;,&quot;trp&quot;,<br />&nbsp; &quot;ldy&quot;,&quot;lda&quot;,&quot;ldx&quot;,&quot;trp&quot;,&quot;ldy&quot;,&quot;lda&quot;,&quot;ldx&quot;,&quot;trp&quot;,&quot;tay&quot;,&quot;lda&quot;,&quot;tax&quot;,&quot;trp&quot;,&quot;ldy&quot;,&quot;lda&quot;,&quot;ldx&quot;,&quot;trp&quot;,<br />&nbsp; &quot;bcs&quot;,&quot;lda&quot;,&quot;trp&quot;,&quot;trp&quot;,&quot;ldy&quot;,&quot;lda&quot;,&quot;ldx&quot;,&quot;trp&quot;,&quot;clv&quot;,&quot;lda&quot;,&quot;tsx&quot;,&quot;trp&quot;,&quot;ldy&quot;,&quot;lda&quot;,&quot;ldx&quot;,&quot;trp&quot;,<br />&nbsp; &quot;cpy&quot;,&quot;cmp&quot;,&quot;trp&quot;,&quot;trp&quot;,&quot;cpy&quot;,&quot;cmp&quot;,&quot;dec&quot;,&quot;trp&quot;,&quot;iny&quot;,&quot;cmp&quot;,&quot;dex&quot;,&quot;trp&quot;,&quot;cpy&quot;,&quot;cmp&quot;,&quot;dec&quot;,&quot;trp&quot;,<br />&nbsp; &quot;bne&quot;,&quot;cmp&quot;,&quot;trp&quot;,&quot;trp&quot;,&quot;trp&quot;,&quot;cmp&quot;,&quot;dec&quot;,&quot;trp&quot;,&quot;cld&quot;,&quot;cmp&quot;,&quot;trp&quot;,&quot;trp&quot;,&quot;trp&quot;,&quot;cmp&quot;,&quot;dec&quot;,&quot;trp&quot;,<br />&nbsp; &quot;cpx&quot;,&quot;sbc&quot;,&quot;trp&quot;,&quot;trp&quot;,&quot;cpx&quot;,&quot;sbc&quot;,&quot;inc&quot;,&quot;trp&quot;,&quot;inx&quot;,&quot;sbc&quot;,&quot;nop&quot;,&quot;trp&quot;,&quot;cpx&quot;,&quot;sbc&quot;,&quot;inc&quot;,&quot;trp&quot;,<br />&nbsp; &quot;beq&quot;,&quot;sbc&quot;,&quot;trp&quot;,&quot;trp&quot;,&quot;trp&quot;,&quot;sbc&quot;,&quot;inc&quot;,&quot;trp&quot;,&quot;sed&quot;,&quot;sbc&quot;,&quot;trp&quot;,&quot;trp&quot;,&quot;trp&quot;,&quot;sbc&quot;,&quot;inc&quot;,&quot;trp&quot;,<br /><br />};<br /><br /><br />op_cback op_jmp_tbl&#91;&#93; = {<br /><br />&nbsp; brk, ora, trp, trp, trp, ora, asl, trp, php, ora, asl, trp, trp, ora, asl, trp,<br />&nbsp; bpl, ora, trp, trp, trp, ora, asl, trp, clc, ora, trp, trp, trp, ora, asl, trp,<br />&nbsp; jsr, and, trp, trp, bit, and, rol, trp, plp, and, rol, trp, bit, and, rol, trp,<br />&nbsp; bmi, and, trp, trp, trp, and, rol, trp, sec, and, trp, trp, trp, and, rol, trp,<br />&nbsp; rti, eor, trp, trp, trp, eor, lsr, trp, pha, eor, lsr, trp, jmp, eor, lsr, trp,<br />&nbsp; bvc, eor, trp, trp, trp, eor, lsr, trp, cli, eor, trp, trp, trp, eor, lsr, trp,<br />&nbsp; rts, adc, trp, trp, trp, adc, ror, trp, pla, adc, ror, trp, jmp, adc, ror, trp,<br />&nbsp; bvs, adc, trp, trp, trp, adc, ror, trp, sei, adc, trp, trp, trp, adc, ror, trp,<br />&nbsp; trp, sta, trp, trp, sty, sta, stx, trp, dey, trp, txa, trp, sty, sta, stx, trp,<br />&nbsp; bcc, sta, trp, trp, sty, sta, stx, trp, tya, sta, txs, trp, trp, sta, trp, trp,<br />&nbsp; ldy, lda, ldx, trp, ldy, lda, ldx, trp, tay, lda, tax, trp, ldy, lda, ldx, trp,<br />&nbsp; bcs, lda, trp, trp, ldy, lda, ldx, trp, clv, lda, tsx, trp, ldy, lda, ldx, trp,<br />&nbsp; cpy, cmp, trp, trp, cpy, cmp, dec, trp, iny, cmp, dex, trp, cpy, cmp, dec, trp,<br />&nbsp; bne, cmp, trp, trp, trp, cmp, dec, trp, cld, cmp, trp, trp, trp, cmp, dec, trp,<br />&nbsp; cpx, sbc, trp, trp, cpx, sbc, inc, trp, inx, sbc, nop, trp, cpx, sbc, inc, trp,<br />&nbsp; beq, sbc, trp, trp, trp, sbc, inc, trp, sed, sbc, trp, trp, trp, sbc, inc, trp<br /><br />};<br /><br /><br /></div><br /><br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent"><br />extern op_cback op_jmp_tbl&#91;&#93;;<br /><br /><br />void execute_inst(mos_6502_t * mos_ctx, opcode_t * op){<br /><br />&nbsp; op_jmp_tbl&#91;op-&gt;opcode&#93;(mos_ctx, op);<br /><br />}<br /><br /><br /></div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sat Dec 28, 2013 9:50 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Need next steps for NES emulator</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />JSR pushes the address of the JSR opcode plus two, and RTS adds one to the pulled value. For example:<br />$8000: JSR $9000<br />$8003: JMP $8003<br />$9000: RTS<br />This results in $8002 being pushed: add two when pushing, add one when returning.<br /><br />Interrupt-related instructions, on the other hand, don't add one.<br />$8000: BRK #$00<br />$8003: JMP $8003<br />$9000: RTI<br />$FFFE: .ADDR $9000<br />This results in $8003 and the flags (ORed with #$30) being pushed, and RTI pulls the flags and does not add one.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>codeblox</b> [ Sat Dec 28, 2013 8:38 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Need next steps for NES emulator</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />So I believe I have RTS/JSR sorted out. I now found that RTI seems to have issues. Specifically, the PC that I am getting from the stack is $0000. Well, that would make sense since if I understand this correctly, P register, PC.H, and PC.L would only be pushed as the result of a BRK... Thing is, this test suite never does a BRK to push these values. What gives? the logfile that came with the test suite shows the following:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent"><br />CEAD&nbsp; 40&nbsp; &nbsp; &nbsp; &nbsp; RTI&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;A:55 X:99 Y:88 P:A5 SP:7D CYC: 49 SL:260<br />CEAE&nbsp; 30 35&nbsp; &nbsp; &nbsp;BMI $CEE5&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;A:55 X:99 Y:88 P:65 SP:80 CYC: 67 SL:260<br /></div><br /><br />which looks to just be PC++. I am getting:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent"><br />$CEAD: 40(rti) A:55 X:99 Y:88 P:C6 SP:7D<br />$0000: 00(brk) A:55 X:99 Y:88 P:00 SP:7A<br /><br /><br /></div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Sat Dec 28, 2013 8:44 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Need next steps for NES emulator</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Why is your stack pointer decreasing?

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>2</strong> of <strong>5</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>