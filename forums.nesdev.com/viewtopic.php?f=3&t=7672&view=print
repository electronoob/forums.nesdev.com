<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - possibly a dumb iNES 2.0 header question :-)</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">possibly a dumb iNES 2.0 header question :-)</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=3&amp;t=7672">http://forums.nesdev.com/viewtopic.php?f=3&amp;t=7672</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>proxy</b> [ Thu Apr 21, 2011 1:53 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>possibly a dumb iNES 2.0 header question :-)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I was just wondering about bytes 10 and 11. The say the following:
<br />
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">Byte 10:<br />7&nbsp; &nbsp; &nbsp; &nbsp;0<br />---------<br />pppp PPPP<br /><br />p: Quantity of PRG RAM which is battery backed &#40;or serial EEPROM, see below&#41;<br />P: Quantity of PRG RAM which is NOT battery backed<br /></div>
<br />
<br />(and similar to CHR RAM)
<br />
<br />I understand that a table is used to map the value given in these fields to actual sizes. And bviously it is up to mapping software to determine where the PRG RAM is mapped. But I have some (possibly dumb questions):
<br />
<br />Firstly, if I understand this right, the *total* amount of PRG RAM is these two fields combined? So a value of byte 10 of 0xAA would mean 131,072 bytes of PRG RAM?
<br />
<br />Next, if some of the PRG RAM is battery backed, which of it is battery backed? The first portion? The last?
<br />
<br />So for typical carts which just use the usual 8K CHR RAM, non-battery backed, can I just expect a value 0x07? I know this last one seems obvious, just wanted to make sure I wasn't missing something <img src="./images/smilies/icon_smile.gif" alt=":-)" title="Smile" />.
<br />
<br />Thanks

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>koitsu</b> [ Thu Apr 21, 2011 2:26 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />That information seems to be very, very strange.  Please see this instead:
<br />
<br /><!-- m --><a class="postlink" href="http://wiki.nesdev.com/w/index.php/INES">http://wiki.nesdev.com/w/index.php/INES</a><!-- m -->

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>proxy</b> [ Thu Apr 21, 2011 2:55 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />@koitsu: Thanks, but I am talking about the NES 2.0 standard found here: <!-- m --><a class="postlink" href="http://wiki.nesdev.com/w/index.php/NES_2.0">http://wiki.nesdev.com/w/index.php/NES_2.0</a><!-- m -->

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Thu Apr 21, 2011 3:47 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: possibly a dumb iNES 2.0 header question :-)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">proxy wrote:</div><div class="quotecontent">Firstly, if I understand this right, the *total* amount of PRG RAM is these two fields combined? So a value of byte 10 of 0xAA would mean 131,072 bytes of PRG RAM?</div><br />Correct. But they're not necessarily contiguous; see my next answer.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Next, if some of the PRG RAM is battery backed, which of it is battery backed? The first portion? The last?</div><br />How bank numbers are translated to chip selects depends on the mapper. In MMC1, for example, the only board supporting multiple PRG RAM chips is SOROM, which provides 8 KiB at bank 0 and 8 KiB at bank 2. Bank 0 is always without battery, and bank 2 usually has a battery.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">So for typical carts which just use the usual 8K CHR RAM, non-battery backed, can I just expect a value 0x07?</div>
<br />Yes, or 0x70 if the battery bit is on.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>koitsu</b> [ Thu Apr 21, 2011 3:48 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Sorry, for some reason I thought they had been incorporated into the same Wiki page.  I was obviously wrong.
<br />
<br />I've read the section of the iNES 2.0 document you've referenced, and I agree -- it's vague/undefined and badly written.
<br />
<br />A value 0xAA in byte 10 would mean, effectively, that you have two 65536 PRG RAM segments, one which lacks battery-backing, the other which has it.  The specification does not say if this is permitted, or if only one type is permitted.
<br />
<br />There is an example regarding a CHR-RAM cart, Racermate, having 64KB of CHR RAM, half of which was battery-backed and other half which wasn't.  This seems to imply that both "types" (see above paragraph) are indeed permitted.
<br />
<br />So, given that assumption -- my next question would indeed be "how does one specify which segment is battery-backed and which isn't?"  I can't find an answer to this in the format.
<br />
<br />Can the authors of this format please provide clarification?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Thu Apr 21, 2011 3:51 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">koitsu wrote:</div><div class="quotecontent">A value 0xAA in byte 10 would mean, effectively, that you have two 65536 PRG RAM segments, one which lacks battery-backing, the other which has it.  The specification does not say if this is permitted, or if only one type is permitted.</div><br />Both are permitted. In fact, both are required for extant SOROM and ETROM games.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">So, given that assumption -- my next question would indeed be "how does one specify which segment is battery-backed and which isn't?"  I can't find an answer to this in the format.</div>
<br />Which is mapped to the lower bank numbers and which to the higher bank numbers depends on the mapper. I clarified the spec to what I strongly believe was KH's intent, given what I know about SOROM and what he said about Racermate.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>koitsu</b> [ Thu Apr 21, 2011 4:59 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent"><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">So, given that assumption -- my next question would indeed be "how does one specify which segment is battery-backed and which isn't?"  I can't find an answer to this in the format.</div><br />Which is mapped to the lower bank numbers and which to the higher bank numbers depends on the mapper. I clarified the spec to what I strongly believe was KH's intent, given what I know about SOROM and what he said about Racermate.</div>
<br />
<br />Can you draw out for me an example ROM image (file offsets and lengths) of how this would work?
<br />
<br />I guess I'm having some difficulty understanding the whole PRG RAM concept, given that there are already defined bank numbers (well, for PRG ROM) in the header, and how does PRG RAM fit into that?  I guess I'm indirectly asking why designation of RAM vs. ROM is even needed for PRG.  I imagine it's a way to allow the emulator to adjust itself ("yes this area of addressing space should actually be writeable!"), but if the "mappers controls all of that", then what's the point of the data in the header?
<br />
<br />Help me out.  :-)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Thu Apr 21, 2011 6:22 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">In NESTECH 2.00, koitsu wrote:</div><div class="quotecontent">SRAM - Save RAM: RAM which is commonly used in RPGs such as <em>Crystalis</em>, the <em>Final Fantasy</em> series, and <em>The Legend of Zelda</em>.<br />WRAM - Synonymous with SRAM.<br /><br />B. Memory Map<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp; +---------+-------+-------+-----------------------+<br />&nbsp; &nbsp; | Address | Size&nbsp; | Flags | Description&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|<br />&nbsp; &nbsp; +---------+-------+-------+-----------------------+<br />&nbsp; &nbsp; | $0000&nbsp; &nbsp;| $800&nbsp; |&nbsp; &nbsp; &nbsp; &nbsp;| RAM&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|<br />&nbsp; &nbsp; | $0800&nbsp; &nbsp;| $800&nbsp; | M&nbsp; &nbsp; &nbsp;| RAM&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|<br />&nbsp; &nbsp; | $1000&nbsp; &nbsp;| $800&nbsp; | M&nbsp; &nbsp; &nbsp;| RAM&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|<br />&nbsp; &nbsp; | $1800&nbsp; &nbsp;| $800&nbsp; | M&nbsp; &nbsp; &nbsp;| RAM&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|<br />&nbsp; &nbsp; | $2000&nbsp; &nbsp;| 8&nbsp; &nbsp; &nbsp;|&nbsp; &nbsp; &nbsp; &nbsp;| Registers&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|<br />&nbsp; &nbsp; | $2008&nbsp; &nbsp;| $1FF8 |&nbsp; R&nbsp; &nbsp; | Registers&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|<br />&nbsp; &nbsp; | $4000&nbsp; &nbsp;| $20&nbsp; &nbsp;|&nbsp; &nbsp; &nbsp; &nbsp;| Registers&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|<br />&nbsp; &nbsp; | $4020&nbsp; &nbsp;| $1FDF |&nbsp; &nbsp; &nbsp; &nbsp;| Expansion ROM&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|<br />&nbsp; &nbsp; | $6000&nbsp; &nbsp;| $2000 |&nbsp; &nbsp; &nbsp; &nbsp;| SRAM&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; |<br />&nbsp; &nbsp; | $8000&nbsp; &nbsp;| $4000 |&nbsp; &nbsp; &nbsp; &nbsp;| PRG-ROM&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|<br />&nbsp; &nbsp; | $C000&nbsp; &nbsp;| $4000 |&nbsp; &nbsp; &nbsp; &nbsp;| PRG-ROM&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|<br />&nbsp; &nbsp; +---------+-------+-------+-----------------------+</div></div><br />"PRG RAM" is a name that has come into use among NES software developers and emulator developers for what was once called SRAM or WRAM. "SRAM" was deemed too confusing because the CHR RAM chips were also <a href="http://en.wikipedia.org/wiki/Static_random-access_memory" class="postlink">SRAM (static random access memory)</a>, and the chip mapped into $6000 might in fact be <a href="http://en.wikipedia.org/wiki/Ferroelectric_RAM" class="postlink">FRAM</a>, <a href="http://en.wikipedia.org/wiki/PSRAM#Pseudostatic_RAM_.28PSRAM.29" class="postlink">PSRAM</a>, or even I²C <a href="http://en.wikipedia.org/wiki/EEPROM#Serial_bus_devices" class="postlink">serial EEPROM</a>.<br /><br /><div class="quotetitle">koitsu wrote:</div><div class="quotecontent">Can you draw out for me an example ROM image (file offsets and lengths) of how this would work? </div><br />SOROM: MMC1, 256 KiB PRG ROM, 8 KiB+8 KiB PRG RAM, 8 KiB CHR RAM<br /><br />Ambitious General.nes (262160 bytes)<br /><ul><li>0x000000-0x00000F: header<br />iNES header (bytes 0-7) specifies mapper 1, 16*16384 bytes PRG ROM, no CHR ROM, and battery-backed PRG RAM<br />NES 2.0 extension (bytes 8-15) specifies 8192 bytes CHR RAM not battery backed, 8192 bytes PRG RAM not battery backed, 8192 bytes PRG RAM battery backed </li><li>0x000010-0x04000F: PRG ROM data </li><li>0x040010: EOF </li></ul>Ambitious General.sav (8192 bytes)<br /><ul><li>0x000000-0x001FFF: Data in the battery-backed PRG RAM bank, which on SOROM is bank 2 </li></ul><div class="quotetitle">koitsu wrote:</div><div class="quotecontent">there are already defined bank numbers (well, for PRG ROM) in the header, and how does PRG RAM fit into that?</div><br />SOROM and SXROM provide two bank number registers: 4-bit PRG ROM bank at $E000, which is common to all MMC1 boards, and <a href="http://wiki.nesdev.com/w/index.php/MMC1#SOROM.2C_SUROM_and_SXROM" class="postlink">2-bit PRG RAM bank at $A000</a>, which only SOROM and SXROM have. This is a repurposing of a register in the MMC1 that ordinarily controls CHR ROM bankswitching, but because there's only 8 KiB of CHR RAM on all existing MMC1 boards with CHR RAM, it isn't needed for that purpose.<br /><br /><div class="quotetitle">koitsu wrote:</div><div class="quotecontent">I guess I'm indirectly asking why designation of RAM vs. ROM is even needed for PRG.</div>
<br />"PRG" has come to mean any memory ICs on the cartridge's CPU bus. Games have PRG RAM because they need extra space to decompress a destructible map or because they need to save more data across a power cycle than a password can comfortably hold.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Fri Apr 22, 2011 8:38 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I agree it's badly defined, but in the end it would all be down to what the mapper does.
<br />In MMC1's case, the following "official" combination should be permitted :
<br />
<br />SOROM : 8k with battery, 8 k without battery :
<br />bank 0 is without battery and bank 2 with battery. Banks 1 and 3 mirror banks 0 and 2 respectively
<br />
<br />SOROM : 16k without battery.
<br />bank 1 mirrors bank 0 and bank 3 mirrors bank 2.
<br />
<br />SXROM : 32k with battery :
<br />all 4 banks are saved
<br />
<br />SXROM : 32k without battery :
<br />4 banks are emuled but not saved.
<br />
<br />Of course with another mapper (MMC5) it would end up completely different.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>kevtris</b> [ Tue Apr 26, 2011 11:28 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent"><div class="quotetitle">koitsu wrote:</div><div class="quotecontent">A value 0xAA in byte 10 would mean, effectively, that you have two 65536 PRG RAM segments, one which lacks battery-backing, the other which has it.  The specification does not say if this is permitted, or if only one type is permitted.</div><br />Both are permitted. In fact, both are required for extant SOROM and ETROM games.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">So, given that assumption -- my next question would indeed be "how does one specify which segment is battery-backed and which isn't?"  I can't find an answer to this in the format.</div><br />Which is mapped to the lower bank numbers and which to the higher bank numbers depends on the mapper. I clarified the spec to what I strongly believe was KH's intent, given what I know about SOROM and what he said about Racermate.</div>
<br />
<br />You are right-  It is not "Badly defined" It is mapper defined.  The RAM size byte simply says how much of each kind of RAM is present- it does not specify where it goes, because this is a function of the mapper.
<br />
<br />There's two nybbles in the spec for each kind of RAM, because it could have battery backed RAM, non-backed RAM, or both (and of course none).
<br />
<br />If the mapper does not support any RAM, then of course you cannot legally set the RAM byte, since the mapper won't know what to do with it.  This case is undefined, and each emulator will probably do something different.  (the proper case is to reject the ROM saying it has a bad header IMO)
<br />
<br />In the case of MMC5, there can be two 8K RAM chips on the cartridge- one battery backed, and one that isn't.  Same with Racermate.  This cartridge has two CHR RAMs.  One is battery backed while the other isn't.  Though to be fair that particular game doesn't get a special ines2.0 header because there is only one form of cartridge in existance.
<br />
<br />MMC5 on the other hand (and MMC1) have multiple kinds of cartridges.  For MMC5, the following exist:
<br />
<br />8K non-backed
<br />8K backed
<br />16K (8K backed, 8K non-backed)
<br />32K backed
<br />
<br />MMC1 has the same set of RAM possibilities too.
<br />
<br />It's up to the mapper to determine where these RAMs map, and they always map the same way for a given RAM configuration.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Tue Apr 26, 2011 11:43 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Thanks for the clarification. But you raise another question:
<br />
<br /><div class="quotetitle">kevtris wrote:</div><div class="quotecontent">If the mapper does not support any RAM, then of course you cannot legally set the RAM byte, since the mapper won't know what to do with it.  This case is undefined</div>
<br />Why not define it the same way that Family BASIC defines it and the same way that emulators have defined it since the dawn of NES emulation?
<br />
<br />"Most discrete logic mappers never had any boards with PRG RAM. Others had only one or two releases with PRG RAM, such as Family BASIC on mapper 0. If a mapper doesn't natively provide PRG RAM support nor have any registers in $6000-$7FFF, emulators should extend the mapper in the same way that Family BASIC extends mapper 0: the header specifies up to 8192 bytes, decoded into $6000-$7FFF by a 74HC20 or 74LS139."

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Tue Apr 26, 2011 1:53 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I agree with tepple's suggestion. During development, PRG RAM can be used for outputting data. I for example enable PRG RAM temporarily just to record level demos. If emulators refused to load my ROM just because it has a mapper that doesn't officially support PRG RAM I wouldn't be able to do this.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>kevtris</b> [ Wed Apr 27, 2011 11:49 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">Thanks for the clarification. But you raise another question:<br /><br /><div class="quotetitle">kevtris wrote:</div><div class="quotecontent">If the mapper does not support any RAM, then of course you cannot legally set the RAM byte, since the mapper won't know what to do with it.  This case is undefined</div><br />Why not define it the same way that Family BASIC defines it and the same way that emulators have defined it since the dawn of NES emulation?<br /><br />"Most discrete logic mappers never had any boards with PRG RAM. Others had only one or two releases with PRG RAM, such as Family BASIC on mapper 0. If a mapper doesn't natively provide PRG RAM support nor have any registers in $6000-$7FFF, emulators should extend the mapper in the same way that Family BASIC extends mapper 0: the header specifies up to <br />8192 bytes, decoded into $6000-$7FFF by a 74HC20 or 74LS139."</div>
<br />
<br />
<br />Yeah, this case is taken care of by ines 1.0.  The idea with 2.0 is that it's only used when it is needed.  Most cases will not need to use it.  Mapping WRAM in for mappers that can use it, but do not need the 2.0 extensions should work like they always have up to this point using the original flavor of ines.
<br />
<br />2.0 is designed mainly to disambiguate roms that cannot be properly described in 1.0.  i.e. MMC1 extra RAM, or MMC5 extra RAM (16K+ RAM mainly).
<br />
<br />My original idea was to have 2.0 disambiguate the corner cases and other oddities that are currently being done using CRC checks. 
<br />
<br />However, I don't see a problem with allowing a "stock" 8K of WRAM on any mapper in the 2.0 header even if the mapper doesn't natively support it.  This could be used to advantage for specifying things such as 16K WRAM on mapper 66 (Memblers used this for his garage cart) or the 8K of WRAM for the family basic case.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>