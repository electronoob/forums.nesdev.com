<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=2&amp;t=10242" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2014-01-13T09:40:07-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=2&amp;t=10242</id>
<entry>
<author><name><![CDATA[infiniteneslives]]></name></author>
<updated>2014-01-13T09:40:07-07:00</updated>
<published>2014-01-13T09:40:07-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10242&amp;p=123764#p123764</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10242&amp;p=123764#p123764"/>
<title type="html"><![CDATA[Re: uc65, a Mid-Level Language Compiler READY FOR USE!]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10242&amp;p=123764#p123764"><![CDATA[
Yeah, just simple push, pop, peek would be grand.  Perhaps a means to transfer the stack pointer in and out of a variable as well if you want to get fancy.<br /><br />To be honest the import and table bugs aren't holding me back from anything right now, I can get around them easily.  I just wanted to make you aware of them.  <br /><br />I've got some logic I'd like to implement in my game/demo in the near future that could benefit from having easy access to the stack.  So if you're able to get those going in the near future I can help you test them shortly there after.  No rush on any of this stuff though.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4832">infiniteneslives</a> — Mon Jan 13, 2014 9:40 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[qbradq]]></name></author>
<updated>2014-01-13T08:10:49-07:00</updated>
<published>2014-01-13T08:10:49-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10242&amp;p=123753#p123753</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10242&amp;p=123753#p123753"/>
<title type="html"><![CDATA[Re: uc65, a Mid-Level Language Compiler READY FOR USE!]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10242&amp;p=123753#p123753"><![CDATA[
You mean like keywords that push and pop variables? That shouldn't be too hard.<br /><br />I've been sick sooo dang much recently I'm... well... sick of it <img src="http://forums.nesdev.com/images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /> But once work is caught up I'll start working on this again. Just let me know your priorities.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3706">qbradq</a> — Mon Jan 13, 2014 8:10 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[infiniteneslives]]></name></author>
<updated>2014-01-08T16:28:02-07:00</updated>
<published>2014-01-08T16:28:02-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10242&amp;p=123517#p123517</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10242&amp;p=123517#p123517"/>
<title type="html"><![CDATA[Re: uc65, a Mid-Level Language Compiler READY FOR USE!]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10242&amp;p=123517#p123517"><![CDATA[
Neither are very big obstacles right now.  I actually moved my tables to their own file and was able to releive the issue.  I would say the table issue is a bigger issue than import file ordering.<br /><br />Any thoughts of supporting stack operations in the future?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4832">infiniteneslives</a> — Wed Jan 08, 2014 4:28 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[qbradq]]></name></author>
<updated>2014-01-08T07:29:43-07:00</updated>
<published>2014-01-08T07:29:43-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10242&amp;p=123496#p123496</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10242&amp;p=123496#p123496"/>
<title type="html"><![CDATA[Re: uc65, a Mid-Level Language Compiler READY FOR USE!]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10242&amp;p=123496#p123496"><![CDATA[
INL,<br /><br />I will try to look into this as soon as I can. Can you help me understand if the table issue is a higher priority for you than the import issue?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3706">qbradq</a> — Wed Jan 08, 2014 7:29 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[infiniteneslives]]></name></author>
<updated>2013-12-31T21:16:40-07:00</updated>
<published>2013-12-31T21:16:40-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10242&amp;p=123108#p123108</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10242&amp;p=123108#p123108"/>
<title type="html"><![CDATA[Re: uc65, a Mid-Level Language Compiler READY FOR USE!]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10242&amp;p=123108#p123108"><![CDATA[
I've got another issue, seems to be to do with tables and rom segments.<br /><br />First off, here's my memory.cfg  I don't think it's related, but the only thing I've really changed is I don't use BSSX to reserve oam space.  I designate it as BSS2 and write uc65 code that manipulates sprite oam memory.<br /><br />So I switched things around to this:Here is my memory.cfg file.  *comments* aren't actually in my file, added for explanation of how I use what.<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">MEMORY {<br />   BSS0:   start = $0000, size = $0100;          *Zero Page*<br />   STAK:   start = $0100, size = $0100;          *Stack*<br />   BSS2:   start = $0200, size = $0100;          *sprite OAM memory spriteRam&#91;&#93;<br />   BSS3:   start = $0300, size = $0100;          *meta sprite objects. I wanted my variables in a fixed location, so sram.s puts them here*<br />   BSS1:   start = $0400, size = $0400;          *&quot;default&quot; ram space, allocated as the compiler sees fit.*<br />   HEAD:   start = $0000, size = $0010, fill = yes;<br />   ROM0:   start = $8000, size = $7FFA, fill = yes;<br />   VECT:   start = $FFFA, size = $0006, fill = yes;<br />   ROM1:   start = $0000, size = $2000, fill = yes;<br />}<br /><br />SEGMENTS {<br />   BSS0:   load = BSS0, type = bss, optional = yes;<br />   BSS2:   load = BSS2, type = bss, optional = yes;<br />   BSS3:   load = BSS3, type = bss, optional = yes;<br />   BSS1:   load = BSS1, type = bss, optional = yes;<br />   HEAD:   load = HEAD, type = ro;<br />   ROM0:   load = ROM0, type = ro, optional = yes;<br />   VECT:   load = VECT, type = ro;<br />   ROM1:   load = ROM1, type = ro, optional = yes;<br />}<br /><br />FILES {<br />   %O: format = bin;<br />}</div><br /><br />So first, a minor comment.  Perhaps this is the way it's supposed to be.  But it caught me off guard.  I found that if I don't declare 'ram 1' in the beginning of my file, all allocated ram ends up in the zero page.  So the 'default' (aka no delcaration) puts variables into ZP...  But this isn't where the issue is which I found.<br /><br />The problem is I've created a table in rom 0.  But even though I declare rom 0, the compiled assembly doesn't declare which segment of rom to put the table into.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">;-------------------------------------<br />;Meta-Sprite Character size and tiles<br />;-------------------------------------<br />; composite type (struct) used to initialize meta sprites<br />type metaSpriteCharacter   ;meta sprite init variables<br />   byte firstTile   ;first sprite tile number, basis of tiles and graphics<br />   byte numSpr   ;number of sprites in metasprite object (hard math for x/ySize above)<br />   byte xSize   ;number tiles to be updated in x directoin<br />   byte ySize   ;8x16 sprites count as one sprite<br />end type<br /><br />;;table for sprite data for character definitions<br />;VERY IMPORTANT that the indexes of this table line up with character constants <br />; ie HERO=0, is first entry in table<br /><br />rom 0<br />table msChar of metaSpriteCharacter   ;must have more than one row!<br />;recommend copying comment line to msStart table so character defn's and oam location are proper.   <br />;HERO   = 0            ;2x3 hero<br />      firstTile=$00,numSpr=4,xSize=16,ySize=16   <br /><br />;BADDIE1= 1                ;2x2 baddie<br />      firstTile=$20,numSpr=4,xSize=16,ySize=16<br /><br />;GOODIE1= 2                              ;2x2 goodie<br />      firstTile=$10,numSpr=4,xSize=16,ySize=16   <br /><br />;BADDIE2= 3                               ;2x1 baddie<br />      firstTile=$29,numSpr=2,xSize=16,ySize=8      <br /><br />;GOODIE2= 4                              ;2x2 goodie<br />      firstTile=$18,numSpr=4,xSize=16,ySize=16   <br /><br />;BULLET1= 5                               ;single sprite 8x8 pixels<br />      firstTile=$27,numSpr=1,xSize=8,ySize=8      <br /><br />;THING1   = 6                               ;tall double sprite 8x16 pixels<br />      firstTile=$2D,numSpr=2,xSize=8,ySize=16    <br /><br />;BOSS   = 7                               ;3x3 BIG meta sprite<br />      firstTile=$24,numSpr=9,xSize=32,ySize=32   <br />end table</div><br /><br />But when I compile this, I get an error:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">C:\Users\Paul\Dropbox\nesdev\dig_deeper5&gt;java -jar ..\uc65.jar source\global.uc<br />C:\Users\Paul\Dropbox\nesdev\dig_deeper5&gt;java -jar ..\uc65.jar source\nes.uc<br />source\nes.uc(166): Warning: Possible loss of precision<br />C:\Users\Paul\Dropbox\nesdev\dig_deeper5&gt;java -jar ..\uc65.jar source\sprite.uc<br />C:\Users\Paul\Dropbox\nesdev\dig_deeper5&gt;java -jar ..\uc65.jar source\main.uc<br />C:\Users\Paul\Dropbox\nesdev\dig_deeper5&gt;java -jar ..\uc65.jar source\data.uc<br />C:\Users\Paul\Dropbox\nesdev\dig_deeper5&gt;path=path;..\cc65\<br />C:\Users\Paul\Dropbox\nesdev\dig_deeper5&gt;set CC65_HOME=..<br />C:\Users\Paul\Dropbox\nesdev\dig_deeper5&gt;ca65 lib\crt0.s<br />C:\Users\Paul\Dropbox\nesdev\dig_deeper5&gt;ca65 source\global.s<br />C:\Users\Paul\Dropbox\nesdev\dig_deeper5&gt;ca65 source\sram.s<br />C:\Users\Paul\Dropbox\nesdev\dig_deeper5&gt;ca65 source\nes.s<br />C:\Users\Paul\Dropbox\nesdev\dig_deeper5&gt;ca65 source\sprite.s<br />C:\Users\Paul\Dropbox\nesdev\dig_deeper5&gt;ca65 source\main.s<br />C:\Users\Paul\Dropbox\nesdev\dig_deeper5&gt;ca65 source\data.s<br /><br />C:\Users\Paul\Dropbox\nesdev\dig_deeper5&gt;ld65 -o dig_deeper.nes lib\crt0.o sourc<br />e\global.o source\sram.o source\nes.o source\sprite.o source\main.o source\data.<br />o -C lib\memory.cfg<br />ld65.exe: Error: Missing memory area assignment for segment `CODE'</div><br />Somehow segment &quot;CODE&quot; is being choosen...<br /><br />I found out the issue is with my xSize and ySize entries of the table...<br />Looking at the compiled assembly:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">; Assembly generated by uc65<br />; File: source\sprite.uc<br />; Built Time: Tue Dec 31 20:49:12 MST 2013<br />.DBG FILE, &quot;source\sprite.uc&quot;, 18155, 1388548144<br /><br /><br />.IMPORT      metaSprite_ySize<br />.IMPORTZP   vBlankFlag<br />.IMPORT      metaSprite_xSize<br />.IMPORT      metaSprite_aux<br />.IMPORT      metaSprite_character<br />.IMPORT      metaSprite_ySpeed<br />.IMPORTZP   gameState<br />.IMPORTZP   buttons2<br />.IMPORTZP   buttons1<br />.IMPORT      metaSprite_state<br />.IMPORT      metaSprite_xSpeed<br />.IMPORT      spriteRam<br />.IMPORT      metaSprite_oam<br /><br /><br />   msChar_ySize:                                                           ;;;;;   Hey, these guys don't have a designated ROM segment like the other entries...<br />      .byte $10, $10, $10, $08, $10, $08, $10, $20<br />.DBG SYM, &quot;msChar_ySize&quot;, &quot;00&quot;, STATIC, &quot;msChar_ySize&quot;<br />   msChar_xSize:<br />      .byte $10, $10, $10, $10, $10, $08, $08, $20<br />.DBG SYM, &quot;msChar_xSize&quot;, &quot;00&quot;, STATIC, &quot;msChar_xSize&quot;<br />.SEGMENT &quot;BSS0&quot;: zeropage<br />   sprPtr2: .RES 0<br />.DBG SYM, &quot;sprPtr2&quot;, &quot;00&quot;, STATIC, &quot;sprPtr2&quot;<br />   sprPtr2_a: .RES 1<br />.DBG SYM, &quot;sprPtr2_a&quot;, &quot;00&quot;, STATIC, &quot;sprPtr2_a&quot;<br />   sprPtr2_b: .RES 1<br />.DBG SYM, &quot;sprPtr2_b&quot;, &quot;00&quot;, STATIC, &quot;sprPtr2_b&quot;<br />   sprPtr1: .RES 0<br />.DBG SYM, &quot;sprPtr1&quot;, &quot;00&quot;, STATIC, &quot;sprPtr1&quot;<br />   sprPtr1_a: .RES 1<br />.DBG SYM, &quot;sprPtr1_a&quot;, &quot;00&quot;, STATIC, &quot;sprPtr1_a&quot;<br />   sprPtr1_b: .RES 1<br />.DBG SYM, &quot;sprPtr1_b&quot;, &quot;00&quot;, STATIC, &quot;sprPtr1_b&quot;<br />.SEGMENT &quot;ROM0&quot;<br />   msChar_numSpr:                                                                        ;;;;;;These entries of the table are assigned to ROM as they should be<br />      .byte $04, $04, $04, $02, $04, $01, $02, $09<br />.DBG SYM, &quot;msChar_numSpr&quot;, &quot;00&quot;, STATIC, &quot;msChar_numSpr&quot;<br />   msStart_oam:<br />      .byte $00, $20, $30, $ff, $30, $30, $30, $30, $30, $30, $ff<br />.DBG SYM, &quot;msStart_oam&quot;, &quot;00&quot;, STATIC, &quot;msStart_oam&quot;<br />   msStart_state:<br />      .byte $02, $02, $02, $00, $02, $02, $02, $02, $02, $02, $00<br />.DBG SYM, &quot;msStart_state&quot;, &quot;00&quot;, STATIC, &quot;msStart_state&quot;<br />   msChar_firstTile:<br />      .byte $00, $20, $10, $29, $18, $27, $2d, $24<br />.DBG SYM, &quot;msChar_firstTile&quot;, &quot;00&quot;, STATIC, &quot;msChar_firstTile&quot;<br />   msStart_palette:<br />      .byte $01, $02, $03, $00, $02, $03, $02, $01, $00, $00, $00<br />.DBG SYM, &quot;msStart_palette&quot;, &quot;00&quot;, STATIC, &quot;msStart_palette&quot;</div><br /><br />So I manually modified the assembly which produced the desired result:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">.IMPORT      metaSprite_xSpeed<br />.IMPORT      spriteRam<br />.IMPORT      metaSprite_oam<br /><br /><br />.SEGMENT &quot;ROM0&quot;                                                              ;;;;;I manually added this line in to fix the issue.  No errors.  program works as expected.<br />   msChar_ySize:<br />      .byte $10, $10, $10, $08, $10, $08, $10, $20<br />.DBG SYM, &quot;msChar_ySize&quot;, &quot;00&quot;, STATIC, &quot;msChar_ySize&quot;<br />   msChar_xSize:<br />      .byte $10, $10, $10, $10, $10, $08, $08, $20<br />.DBG SYM, &quot;msChar_xSize&quot;, &quot;00&quot;, STATIC, &quot;msChar_xSize&quot;<br />.SEGMENT &quot;BSS0&quot;: zeropage<br />   sprPtr2: .RES 0<br />.DBG SYM, &quot;sprPtr2&quot;, &quot;00&quot;, STATIC, &quot;sprPtr2&quot;<br />   sprPtr2_a: .RES 1<br />.DBG SYM, &quot;sprPtr2_a&quot;, &quot;00&quot;, STATIC, &quot;sprPtr2_a&quot;<br />   sprPtr2_b: .RES 1<br />.DBG SYM, &quot;sprPtr2_b&quot;, &quot;00&quot;, STATIC, &quot;sprPtr2_b&quot;<br />   sprPtr1: .RES 0<br />.DBG SYM, &quot;sprPtr1&quot;, &quot;00&quot;, STATIC, &quot;sprPtr1&quot;<br />   sprPtr1_a: .RES 1<br />.DBG SYM, &quot;sprPtr1_a&quot;, &quot;00&quot;, STATIC, &quot;sprPtr1_a&quot;<br />   sprPtr1_b: .RES 1<br />.DBG SYM, &quot;sprPtr1_b&quot;, &quot;00&quot;, STATIC, &quot;sprPtr1_b&quot;<br />.SEGMENT &quot;ROM0&quot;<br />   msChar_numSpr:<br />      .byte $04, $04, $04, $02, $04, $01, $02, $09<br />.DBG SYM, &quot;msChar_numSpr&quot;, &quot;00&quot;, STATIC, &quot;msChar_numSpr&quot;<br />   msStart_oam:<br />      .byte $00, $20, $30, $ff, $30, $30, $30, $30,</div><br /><br /><br />Also, while we're on the topic of tables...<br /><ul><li>It took me awhile to figure out how to use them.  It was pretty much trial and error trying to make sense of the errors when compiling until I realized how to instantiate them.  I'd recommend adding a simple example to the documentation.</li><li>It's a bummer that tables entries can't be assigned by the use of constant types.<br /><br />I wish I could do this with my &quot;HERO&quot; constant:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">table msChar of metaSpriteCharacter   ;must have more than one row!<br />;HERO   = 0            ;2x3 hero<br />      firstTile=HERO,numSpr=4,xSize=16,ySize=16   </div><br /><br /></li><li>It's also a bummer that I can't set address type variables to equal the address of a table entry.<br />I tried this:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">   fast address ptr<br />   ptr = @metaSprite.state&#91;msprID&#93;<br /></div><br />and got this:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">source\sprite.uc(96): Error: Identifiers may not contain the dot character<br />Compilation failed</div></li></ul>So in order to set pointers to tables I moved 'fixed' tables I have a 'fake' sram.uc file which is used for importing, but then I use my manually generated sram.s file instead of having uc65 compile it for me.  That way I know tables are fixed addresses, then I create constants for those entries and then use those constants to set address variables to point to said tables...<br /><br />Lastly, here's a copy of my code: <!-- m --><a class="postlink" href="https://dl.dropboxusercontent.com/u/18341918/nesdev/dig_deeper5_broken.zip">https://dl.dropboxusercontent.com/u/183 ... broken.zip</a><!-- m -->  There are properly named .s files of broken compiled sprite.s and manually fixed sprite.s<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4832">infiniteneslives</a> — Tue Dec 31, 2013 9:16 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[qbradq]]></name></author>
<updated>2013-12-28T17:28:36-07:00</updated>
<published>2013-12-28T17:28:36-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10242&amp;p=123008#p123008</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10242&amp;p=123008#p123008"/>
<title type="html"><![CDATA[Re: uc65, a Mid-Level Language Compiler READY FOR USE!]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10242&amp;p=123008#p123008"><![CDATA[
Woops, I forgot to test for the STA case, and that code was not working. I've added another regression test for that case and fixed the issue. Please try RC6, now attached to the first post.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3706">qbradq</a> — Sat Dec 28, 2013 5:28 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[infiniteneslives]]></name></author>
<updated>2013-12-28T03:05:22-07:00</updated>
<published>2013-12-28T03:05:22-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10242&amp;p=122982#p122982</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10242&amp;p=122982#p122982"/>
<title type="html"><![CDATA[Re: uc65, a Mid-Level Language Compiler READY FOR USE!]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10242&amp;p=122982#p122982"><![CDATA[
So rc5 fixed me up in that one spot, but I seem to have found another similar issue...<br /><br /><!-- m --><a class="postlink" href="https://dl.dropboxusercontent.com/u/18341918/nesdev/dig_deeper3_BROKEN.zip">https://dl.dropboxusercontent.com/u/183 ... BROKEN.zip</a><!-- m --><br /><br />There are .uc.BROKEN .s.BROKEN .uc.WORKS and .s.WORKS sprite files in there which toggle the issue on and off.<br /><br />sprite.uc<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">   ;reset to first sprite<br />   tempLL = metaSprite.oam&#91;msprID&#93;   ;spriteRam&#91;tempLL&#93; -&gt; Y position of first sprite<br /><br />   attrPtr1 = $0200; + tempLL   ;point to Y location of sprite to be update<br />   attrPtr2 = $0203; + tempLL   ;point to X location of sprite to be update<br /><br />   tempJ = 0 ; column * 8<br />   tempA = spriteRam&#91;tempLL&#93; ; Y location of next sprite to update (redo first sprite)<br />               ;this allows for sprites of width 8<br /><br />   tempI = 0 ; row * 8<br />   tempLL += 3<br />   tempB = spriteRam&#91;tempLL&#93; ; X location of next sprite to update<br />   result = tempB        ; extra storage of X location to reset for each row</div><br /><br />Compiles to:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">.DBG LINE, &quot;source\sprite.uc&quot;, 327<br />   ldx   msprID<br />   lda   metaSprite_oam,x<br />   sta   tempLL         ;setting tempLL = index of first sprite in SpriteRam&#91;&#93;<br />.DBG LINE, &quot;source\sprite.uc&quot;, 329<br />   lda   #$00<br />   sta   attrPtr1_a      ;setting pointer to Ypos of first sprite<br />   lda   #$02<br />   sta   attrPtr1_b<br />.DBG LINE, &quot;source\sprite.uc&quot;, 330<br />   lda   #$03<br />   sta   attrPtr2_a      ;setting pointer to Xpos of first sprite<br />   lda   #$02<br />   sta   attrPtr2_b<br />.DBG LINE, &quot;source\sprite.uc&quot;, 332<br />   lda   #$00<br />   sta   tempJ         ;tempJ = 0<br />.DBG LINE, &quot;source\sprite.uc&quot;, 333<br />   ldx   tempLL<br />   lda   spriteRam,x<br />   sta   tempA         ;tempA = Ypos of first sprite<br />.DBG LINE, &quot;source\sprite.uc&quot;, 336<br />   lda   #$00<br />   sta   tempI         ;tempI = 0<br />.DBG LINE, &quot;source\sprite.uc&quot;, 337<br />   clc<br />   lda   tempLL<br />   adc   #$03<br />   sta   tempLL         ;tempLL += 3<br />.DBG LINE, &quot;source\sprite.uc&quot;, 338<br />   lda   spriteRam,x      ;tempLL incremented by 3!!!!, but X didn't!!!<br />   sta   tempB<br />.DBG LINE, &quot;source\sprite.uc&quot;, 339<br />   lda   tempB<br />   sta   result</div><br /><br />I'm not sure what's up...  It's pretty similar to the original issue, but i doubly confirmed I'm using rc5 uc65.jar<br /><br />That and I confirmed that updating to rc5 fixed my previous related issue.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4832">infiniteneslives</a> — Sat Dec 28, 2013 3:05 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[qbradq]]></name></author>
<updated>2013-12-27T09:40:53-07:00</updated>
<published>2013-12-27T09:40:53-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10242&amp;p=122934#p122934</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10242&amp;p=122934#p122934"/>
<title type="html"><![CDATA[Re: uc65, a Mid-Level Language Compiler READY FOR USE!]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10242&amp;p=122934#p122934"><![CDATA[
There's a new build on the first post, RC5, which contains the fix for Issue 5 described above. I still haven't dug into the import issue, I should be working on that today after I get caught up on some house work <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /><br />The fix should also avoid some other issues I hadn't considered with the optimizer. Basically the fix was to watch for reference changes, and invalidate the register states that held those referenced values.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3706">qbradq</a> — Fri Dec 27, 2013 9:40 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[qbradq]]></name></author>
<updated>2013-12-26T15:28:55-07:00</updated>
<published>2013-12-26T15:28:55-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10242&amp;p=122916#p122916</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10242&amp;p=122916#p122916"/>
<title type="html"><![CDATA[Re: uc65, a Mid-Level Language Compiler READY FOR USE!]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10242&amp;p=122916#p122916"><![CDATA[
INL,<br /><br />Thank you so much for your continued bug reports! I have created <a href="https://code.google.com/p/uc65/issues/detail?id=5" class="postlink">issue 5</a> for this issue and have reproduced it in the test files. I took some time off for the holidays, but am working on things now <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /><br />I'm glad you figured out continue / break. I will try to re-write that section to be more clear.<br /><br />As for the default BSS segment, that is ram 1. So to return to the default, just use ram 1.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3706">qbradq</a> — Thu Dec 26, 2013 3:28 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[infiniteneslives]]></name></author>
<updated>2013-12-23T15:29:15-07:00</updated>
<published>2013-12-23T15:29:15-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10242&amp;p=122832#p122832</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10242&amp;p=122832#p122832"/>
<title type="html"><![CDATA[Re: uc65, a Mid-Level Language Compiler READY FOR USE!]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10242&amp;p=122832#p122832"><![CDATA[
So I've been running into issues lately with using variables to index arrays.  It took me awhile to nail down exactly what was happening.  But I've managed to pin this fatal bug down!<br /><br />So I've got a simple routine that initializes my hero's metasprite.  I initially hardcoded everything to index=0, but now I want to use a variable in order to reuse the routine for initializing other metasprites as well.<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">   ;init our hero!<br />   msprID = 0<br />   tempLL = msprID<br />   metaSprite.state&#91;tempLL&#93;    = STILL<br />   metaSprite.character&#91;tempLL&#93; = HERO<br />   metaSprite.oam&#91;tempLL&#93;    = $00   ; the xx in $02xx   <br />   metaSprite.xSpeed&#91;tempLL&#93;    = 0<br />   metaSprite.ySpeed&#91;tempLL&#93;    = 0<br />   metaSprite.xSize&#91;tempLL&#93;    = 1   ;one 8x8 sprite currently<br />   metaSprite.ySize&#91;tempLL&#93;    = 1<br /><br />   ;For now, hardcode a sprite up in the top left to get things going<br />   ;TODO: init based on type, location, size, and state etc.<br />   spriteRam&#91;tempLL&#93; = $10   ;Y pos               ***Line #60***<br />   tempLL += 1<br />   spriteRam&#91;tempLL&#93; = $00   ;tile number        ***Using the variable tempLL here causes Y pos above to be overridden to $00...<br />   spriteRam&#91;2&#93; = $00   ;attrs: 7-flipV 6-flipH 5-Behind 1:0-palette<br />   spriteRam&#91;3&#93; = $10   ;X pos</div><br /><br />The above code compiles to:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">.SEGMENT &quot;ROM0&quot;<br />.DBG LINE, &quot;source\sprite.uc&quot;, 38<br />.PROC spriteInitMetas<br />.DBG FUNC, &quot;spriteInitMetas&quot;, &quot;00&quot;, EXTERN, &quot;spriteInitMetas&quot;<br />.DBG LINE, &quot;source\sprite.uc&quot;, 48<br />   lda   #$00<br />   sta   msprID<br />.DBG LINE, &quot;source\sprite.uc&quot;, 49<br />   lda   msprID<br />   sta   tempLL<br />.DBG LINE, &quot;source\sprite.uc&quot;, 50<br />   lda   #$02<br />   ldx   tempLL                                ;X &lt;= tempLL = 0<br />   sta   metaSprite_state,x                ;everything is working great indexing with X<br />.DBG LINE, &quot;source\sprite.uc&quot;, 51<br />   lda   #$00<br />   sta   metaSprite_character,x<br />.DBG LINE, &quot;source\sprite.uc&quot;, 52             ;still working, all these variables getting set to $00<br />   sta   metaSprite_oam,x<br />.DBG LINE, &quot;source\sprite.uc&quot;, 53<br />   sta   metaSprite_xSpeed,x<br />.DBG LINE, &quot;source\sprite.uc&quot;, 54<br />   sta   metaSprite_ySpeed,x<br />.DBG LINE, &quot;source\sprite.uc&quot;, 55<br />   lda   #$01<br />   sta   metaSprite_xSize,x                ;still working, Sizes getting set to $01<br />.DBG LINE, &quot;source\sprite.uc&quot;, 56<br />   sta   metaSprite_ySize,x<br />.DBG LINE, &quot;source\sprite.uc&quot;, 60             ;***sprite.uc line #60****<br />   lda   #$10                                  ;loading Y position = $10 <br />   sta   spriteRam,x                          ;X = tempLL = 0, working great, stores $10 into Y pos as expected.<br />.DBG LINE, &quot;source\sprite.uc&quot;, 61<br />   inc   tempLL                               ;incrementing tempLL just as I asked<br />   _L000000:                                   ;mysterious label?  What use could this serve???<br />.DBG LINE, &quot;source\sprite.uc&quot;, 62             ;wait a min, you incremented tempLL, but didn't update X which is supposed to equal tempLL... !!!!<br />   lda   #$00                                  ;okay sure, you're loading $00 for the tile number like I want.<br />   sta   spriteRam,x                          ;WHAT?  BAD uc65!  no bone!  why did you overwrite the Y-position?!?!?!<br />.DBG LINE, &quot;source\sprite.uc&quot;, 63             ;you just neglected my request to store $00 as the tile number...<br />   sta   spriteRam+2                         ;okay, now you're doing what I told you to again, but I stopped using the tempLL variable because you were acting up...<br />.DBG LINE, &quot;source\sprite.uc&quot;, 64<br />   lda   #$10<br />   sta   spriteRam+3<br />.DBG LINE, &quot;source\sprite.uc&quot;, 76<br />   lda   #$01<br />   sta   tempLL<br />   _L000001:</div><br /><br />So it looks to be an off by one error or something like that.  tempLL gets incremented, but X is supposed to equal tempLL for indexing.  Since X didn't get updated, the Y position got stomped on when trying to store the tile number...  Perhaps the creation of that mysterious unused label has something to do with it?  IDK...<br /><br />I'm providing an exact compiled copy of the above code with assembly files and all.<br /><!-- m --><a class="postlink" href="https://dl.dropboxusercontent.com/u/18341918/nesdev/dig_deeper2_broke.zip">https://dl.dropboxusercontent.com/u/183 ... _broke.zip</a><!-- m --><br /><br />Additionally, if I make one change by hard coding the tempLL to 1, things work as expected.<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">spriteRam&#91;1&#93; = $00   ;tile number </div><br />Here's a compiled copy for comparisons sake.  Probably not of much use if one understands my explaination above, it's no surprise that this works. <br /><!-- m --><a class="postlink" href="https://dl.dropboxusercontent.com/u/18341918/nesdev/dig_deeper2_works.zip">https://dl.dropboxusercontent.com/u/183 ... _works.zip</a><!-- m --><br /><br /><br /><strong>Separate unrelated question:</strong><br />Is there anyway to declare the default ram segment BSSX?  For example: say one has a sprite.uc file, and declares oam segment &quot;ram 2&quot; at the top of the file.  But then you want the rest of the file to be the default segment BSSX.  I can't find a way to declare the default segment for the rest of the file.  You can't put them at the bottom of the file either if you want code above to utilize said oam array.  Only way I've found is put them in a separate file and import them.  The other means was to not use BSSX, but I don't think that's the best route.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4832">infiniteneslives</a> — Mon Dec 23, 2013 3:29 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[infiniteneslives]]></name></author>
<updated>2013-12-23T00:14:08-07:00</updated>
<published>2013-12-23T00:14:08-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10242&amp;p=122805#p122805</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10242&amp;p=122805#p122805"/>
<title type="html"><![CDATA[Re: uc65, a Mid-Level Language Compiler READY FOR USE!]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10242&amp;p=122805#p122805"><![CDATA[
Ahh gotcha, that makes sense.  I think the combining of the explanation of break and continue at the same time confused me a little in the doc.  <br /><br />So the only thing I'm confused on now is the continue [n] statement without an explicit iterator.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4832">infiniteneslives</a> — Mon Dec 23, 2013 12:14 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[cpow]]></name></author>
<updated>2013-12-22T18:45:44-07:00</updated>
<published>2013-12-22T18:45:44-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10242&amp;p=122801#p122801</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10242&amp;p=122801#p122801"/>
<title type="html"><![CDATA[Re: uc65, a Mid-Level Language Compiler READY FOR USE!]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10242&amp;p=122801#p122801"><![CDATA[
<div class="quotetitle">infiniteneslives wrote:</div><div class="quotecontent"><br />Doesn't make sense: break [n] where n&gt;1, because you can only exit a while or loop statement once.  It's as if the 'default' is always 1.<br /></div><br />Doesn't the break [n] where n&gt;1 really mean &quot;break out of n nest levels&quot;.  In other words, if I'm nested three deep and I do a break 2 I'll break not only out of the innermost loop, but the mid-level loop also and find myself back in the outer loop.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3705">cpow</a> — Sun Dec 22, 2013 6:45 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[infiniteneslives]]></name></author>
<updated>2013-12-20T18:27:26-07:00</updated>
<published>2013-12-20T18:27:26-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10242&amp;p=122725#p122725</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10242&amp;p=122725#p122725"/>
<title type="html"><![CDATA[Re: uc65, a Mid-Level Language Compiler READY FOR USE!]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10242&amp;p=122725#p122725"><![CDATA[
I'm confused as to how break and continue statements are supposed to work especially with providing number of loops to advance.<br /><br />Since there are no defined iterators (like a typical for loop would have), how does the language/compiler know what iteration to advance to?  I've created the same effect of a for loop using the while statement, but have to create my own iterator.  It doesn't seem that the language would support &quot;continue [n]&quot; and know which variable is my iterator.  Based on how the while and loop statements work, it would only make sense for the user to have to manually advance the iterator prior to the continue call.<br /><br />I tried to use continue, and I'm pretty sure it's broken, although due to my confusion above and lack of trust in my surrouding logic I'm not yet certain of the issue.  I still need to look through the asm output though too.  I wanted your input and improve my understanding before I start trying to debug further.<br /><br />This is the current definition:<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Continue and Break<br /><br />The continue and break statements advance to the next iteration of, or end condition of a containing while or loop statement block respectively. An optional number of nested loops to advance through may be provided.<br /><br />continue [n]<br />break [n]<br /><br />Where n is the number of nested loops to advance through. If omitted, this defaults to one. N must be greater than zero and less than or equal to the nested loop depth.<br /></div><br /><br />I'm guessing it's just a carry over issue similar to the loop conditional, so if I were a betting man I'm thinking with the current while and loop definitions the following would be more accurate:<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Continue and Break<br /><br />continue within a while block: jump out of the while loop and evaluate the while conditional to determine whether to re-enter the while statement block or to exit the while block.<br /><br />continue withing a loop statement block: jump out of current iteration of the loop and restart from the loop statement.<br /><br />break within a while statement block: exit the while block all together.<br /><br />break within a loop statement block: exit the loop, a means to end the infinite loop.<br /><br />There is no such thing as: continue [n], but you can create the same effect by manually advancing your own iterator prior to the continue statement.  In fact it's 'default' is always &quot;continue 0&quot; because you have to manually advance the iterator, failing to do so would repeat the current iteration from the beginning.<br /><br />Doesn't make sense: break [n] where n&gt;1, because you can only exit a while or loop statement once.  It's as if the 'default' is always 1.<br /></div><br /><br />Thoughts?  Am I all mixed up here?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4832">infiniteneslives</a> — Fri Dec 20, 2013 6:27 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[qbradq]]></name></author>
<updated>2013-12-19T08:02:32-07:00</updated>
<published>2013-12-19T08:02:32-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10242&amp;p=122678#p122678</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10242&amp;p=122678#p122678"/>
<title type="html"><![CDATA[Re: uc65, a Mid-Level Language Compiler READY FOR USE!]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10242&amp;p=122678#p122678"><![CDATA[
Thanks for the bug report INL! I have raised <a href="https://code.google.com/p/uc65/issues/detail?id=4" class="postlink">Issue 4</a> in the bug tracker to track the status of this issue. The issue has been reproduced and a failing regression test added to source control. I am working on the fix now. I'll also update this thread when I fix it.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3706">qbradq</a> — Thu Dec 19, 2013 8:02 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[infiniteneslives]]></name></author>
<updated>2013-12-18T11:57:06-07:00</updated>
<published>2013-12-18T11:57:06-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10242&amp;p=122661#p122661</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10242&amp;p=122661#p122661"/>
<title type="html"><![CDATA[Re: uc65, a Mid-Level Language Compiler READY FOR USE!]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10242&amp;p=122661#p122661"><![CDATA[
<div class="quotetitle">qbradq wrote:</div><div class="quotecontent"><br />Can you help me understand how the first scenario &quot;broke&quot;? Does sprite.uc import global.uc? I think I may have an issue with the way I am preventing multiple imports, let me look into this.<br /></div><br />Yes, both main.uc and sprite.uc import global.uc, and main.uc imports sprite.uc <br /><br />sprite.uc does not import anything besides global.uc, and global.uc imports nothing.<br /><br />no other files import global.uc<br /><br />sprite.uc<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">import &quot;global.uc&quot;</div><br /><br />main.uc<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">import &quot;nes.uc&quot;<br />import &quot;data.uc&quot;<br />import &quot;sprite.uc&quot; <br />import &quot;global.uc&quot; ;must come before sprites.uc which also imports global.uc</div><br /><br />errors:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">C:\Dropbox\nesdev\dig_deeper2&gt;java -jar ..\uc65.jar source\global.uc<br /><br />C:\Dropbox\nesdev\dig_deeper2&gt;java -jar ..\uc65.jar source\nes.uc<br />source\nes.uc(165): Warning: Possible loss of precision<br /><br />C:\Dropbox\nesdev\dig_deeper2&gt;java -jar ..\uc65.jar source\sprite.uc<br /><br />C:\Dropbox\nesdev\dig_deeper2&gt;java -jar ..\uc65.jar source\main.uc<br />source\main.uc(30): Error: Unresolved symbol gameState<br />source\main.uc(62): Error: Unresolved symbol buttons1<br />source\main.uc(63): Error: Unresolved symbol buttons2<br />source\main.uc(69): Error: Unresolved symbol buttons1<br />source\main.uc(72): Error: Unresolved symbol buttons1<br />source\main.uc(75): Error: Unresolved symbol buttons1<br />source\main.uc(78): Error: Unresolved symbol buttons1<br />Compilation failed</div><br /><br />global.uc:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">; along with this program.  If not, see &lt;http://www.gnu.org/licenses/&gt;.<br /><br />export fast byte gameState<br />export fast byte buttons1<br />export fast byte buttons2<br /><br />;;buttons<br />export constant   NOTHING      = %00000000<br /><br />;;gameState<br />export constant   TITLE      = $00<br />export constant LEVEL1       = $01<br />export constant LEVEL2       = $02<br />export constant GAMEOVER    = $FF<br /><br /><br />;;metaSprite.state<br />export constant INACTIVE   = $00<br />export constant NEWBORN      = $01<br />export constant NORMAL       = $02<br />export constant DYING      = $FF<br /></div><br /><br />Make this one change to main.uc and errors go away:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">import &quot;nes.uc&quot;<br />import &quot;data.uc&quot;<br />import &quot;global.uc&quot; ;must come before sprites.uc which also imports global.uc<br />import &quot;sprite.uc&quot; </div><br /><br /><br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Thank you all for your patience with this project as I got my day job situation taken care of!<br /></div>No problem, thanks for working on things as time permits. <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" /><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4832">infiniteneslives</a> — Wed Dec 18, 2013 11:57 am</p><hr />
]]></content>
</entry>
</feed>