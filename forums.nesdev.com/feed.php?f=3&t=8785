<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=3&amp;t=8785" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2012-04-03T03:07:47-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=3&amp;t=8785</id>
<entry>
<author><name><![CDATA[TmEE]]></name></author>
<updated>2012-04-03T03:07:47-07:00</updated>
<published>2012-04-03T03:07:47-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8785&amp;p=92103#p92103</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8785&amp;p=92103#p92103"/>
<title type="html"><![CDATA[The nature of the one-byte read buffer at $2007]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8785&amp;p=92103#p92103"><![CDATA[
On Master System VDP there's same stuff happen as what HardWareMan described. First read is always containing bad data, but next reads will have requested data. What needs to be determined is where are the access slots. on SMS VDP, there's 8 of them 32 pixels apart in mid-screen for example (there maybe one hiding in Horizontal Blanking area but I think all HBL is used up to create sprites).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3483">TmEE</a> — Tue Apr 03, 2012 3:07 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[HardWareMan]]></name></author>
<updated>2012-04-02T20:41:43-07:00</updated>
<published>2012-04-02T20:41:43-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8785&amp;p=92097#p92097</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8785&amp;p=92097#p92097"/>
<title type="html"><![CDATA[The nature of the one-byte read buffer at $2007]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8785&amp;p=92097#p92097"><![CDATA[
Everything is much easier than you think. As you know, resources are divided into two categories: internal and external. Internal - a palette, for example. External - an external bus, which is known as CHR RAM/ROM. So, if you accessed to internal resources, they are always ready and read/write occurs immediately. If to the external - then this happens:<br />Since the external resources are used for rendering, then accessed the CPU allocated to a access window. This window is not synchronized with the CPU (asynchronous access), so there is a queue of requests with depth 0. If you write, the data fall into the temporary register, and when access window occurs the data transferred to external resources. If you're reading, you read the current contents of the this temporary register, while PPU sets new request for read for the nearest access window. That is why, when you're reading from external resources need to always throw away result of the first reading.<br />I hope it is clear explained.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=2016">HardWareMan</a> — Mon Apr 02, 2012 8:41 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[cpow]]></name></author>
<updated>2012-04-02T18:05:02-07:00</updated>
<published>2012-04-02T18:05:02-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8785&amp;p=92096#p92096</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8785&amp;p=92096#p92096"/>
<title type="html"><![CDATA[Re: The nature of the one-byte read buffer at $2007]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8785&amp;p=92096#p92096"><![CDATA[
<div class="quotetitle">lidnariq wrote:</div><div class="quotecontent"><br />"blargg_ppu_tests_2005.09.15b", the one called vram_access.nes. I'm not certain where to find it other than in the nesicide2 repository.<br /></div><br /><a href="https://gitorious.org/nesicide/nes-test-roms/trees/master" class="postlink">Tree</a><br /><a href="https://gitorious.org/nesicide/nes-test-roms/trees/master/blargg_ppu_tests_2005.09.15b" class="postlink">blargg_ppu_tests_2005.09.15b</a><br /><div class="quotetitle">lidnariq wrote:</div><div class="quotecontent"><br />Rewriting it might still be useful; his tests' outputs are incredibly curt.<br /></div><br />[/quote]<br />Overall I think his tests are incredibly thorough!<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3705">cpow</a> — Mon Apr 02, 2012 6:05 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[lidnariq]]></name></author>
<updated>2012-04-02T10:23:56-07:00</updated>
<published>2012-04-02T10:23:56-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8785&amp;p=92095#p92095</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8785&amp;p=92095#p92095"/>
<title type="html"><![CDATA[Re: The nature of the one-byte read buffer at $2007]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8785&amp;p=92095#p92095"><![CDATA[
My understanding is the $2007 behavior is a conventional latch for asynchronously transferring data between the PPU bus and CPU bus.<br /><br />Other than the permanence question (but I believe the register is fully static), I think blargg already wrote a test to cover these questions: in "blargg_ppu_tests_2005.09.15b", the one called vram_access.nes. I'm not certain where to find it other than in the nesicide2 repository.<br /><br />Rewriting it might still be useful; his tests' outputs are incredibly curt.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3512">lidnariq</a> — Mon Apr 02, 2012 10:23 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[infiniteneslives]]></name></author>
<updated>2012-04-02T08:25:08-07:00</updated>
<published>2012-04-02T08:25:08-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8785&amp;p=92093#p92093</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8785&amp;p=92093#p92093"/>
<title type="html"><![CDATA[The nature of the one-byte read buffer at $2007]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8785&amp;p=92093#p92093"><![CDATA[
I'm all for finding this kind of info out and can test anything in a jiffy if you decide to whip something up.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4832">infiniteneslives</a> — Mon Apr 02, 2012 8:25 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[crudelios]]></name></author>
<updated>2012-04-02T03:26:34-07:00</updated>
<published>2012-04-02T03:26:34-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8785&amp;p=92091#p92091</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8785&amp;p=92091#p92091"/>
<title type="html"><![CDATA[The nature of the one-byte read buffer at $2007]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8785&amp;p=92091#p92091"><![CDATA[
<div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />― How long is the read buffer at $2007 retained? Is the read buffer actually the PPU's open bus? <br />― Does a write to any writable register in between of $2000..$2007 cause the contents of the read buffer to be altered? (Especially $2007) Is there any write that can overwrite the read buffer? <br />― Does the read buffer retain its value, if read, say, 400 frames after the first read (when the background is blanked)? <br />― Does the read buffer retain its value over a rendered frame? (i.e. if first read at vblank, then a full frame happens, and the second read happens at next vblank) <br />― Does the read buffer retain its previous content during reads from the palette memory?<br /></div><br /><br />From what I remember (and that's how I implemented in my emulator) no, the $2007 is not the PPU open bus. It's an independent register that is only affected by reads (perhaps also writes?) to $2007.<br /><br />The read buffer also seems to retain its value between frames, but I'm not absolutely positively sure about this.<br /><br />When you read from palette memory, the read buffer gets the contents of the PPU address. Meaning if you read from $3F00 ... $3FFF, the read buffer will get the value that is stored in $2F00 ... $2FFF, because of PPU memory mirrorring.<br /><br />Hope this helps!<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5192">crudelios</a> — Mon Apr 02, 2012 3:26 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bisqwit]]></name></author>
<updated>2012-04-02T01:39:02-07:00</updated>
<published>2012-04-02T01:39:02-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8785&amp;p=92090#p92090</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8785&amp;p=92090#p92090"/>
<title type="html"><![CDATA[The nature of the one-byte read buffer at $2007]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8785&amp;p=92090#p92090"><![CDATA[
I wonder about the nature of the one-byte buffer at $2007.<br /><br />I could make a test for these, but first I would like to ask if people already know the answers.<br /><br />― How long is the read buffer at $2007 retained? Is the read buffer actually the PPU's open bus?<br />― Does a write to any writable register in between of $2000..$2007 cause the contents of the read buffer to be altered? (Especially $2007) Is there <em>any</em> write that can overwrite the read buffer?<br />― Does the read buffer retain its value, if read, say, 400 frames after the first read (when the background is blanked)?<br />― Does the read buffer retain its value over a rendered frame? (i.e. if first read at vblank, then a full frame happens, and the second read happens at next vblank)<br />― Does the read buffer retain its previous content during reads from the palette memory?<br /><br />If there is uncertainty in these, I'll just go ahead and make a test.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5043">Bisqwit</a> — Mon Apr 02, 2012 1:39 am</p><hr />
]]></content>
</entry>
</feed>