<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Hello World</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Hello World</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=10&amp;t=7307">http://forums.nesdev.com/viewtopic.php?f=10&amp;t=7307</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>2</strong> of <strong>18</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Mon Dec 27, 2010 6:28 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">FinalZero wrote:</div><div class="quotecontent"><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">PPUSCROLL ($2005) is a port on the PPU.</div><br />Is there documentation that describes all those special things at addresses like that?</div><br /><a href="http://wiki.nesdev.com/w/index.php/PPU_registers" class="postlink">nesdevwiki: PPU registers</a><br />Have fun.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Also, while we're on the topic of character maps, how would something like Dual Tile Encoding be implemented?</div><br /><a href="http://en.wikipedia.org/wiki/Byte_pair_encoding" class="postlink">Wikipedia explains</a>.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Also, are there any Japanese games that implement dakuten and handakuten for their characters by having a dakuten/handakuten tile and simply overlapping it with another, as opposed to creating a whole new set of tiles with the dakuten/handakuten added?</div><br />Some games write kana on two rows of tiles, where the dakuten is at the lower right corner of the higher tile. You can't "overlap" tiles per se without sprites, and you can't fit more than 8 sprites on a row of text without some of them disappearing.<br /><br /><div class="quotetitle">koitsu wrote:</div><div class="quotecontent">there's some history indicating only devel builds of ca65 support the .LOBYTE and "&lt;" directives, as well as .HIBYTE and "&gt;" directives.</div>
<br />Every build of ca65 for all the years I've used it has supported the &lt; and &gt; unary operators.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Mon Dec 27, 2010 6:41 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">koitsu wrote:</div><div class="quotecontent">The &amp;255 and /256 syntax appears to be a bunch of nonsense for getting the low and high bytes of the 16-bit address of a label (in this case, the low and high bytes, respectively, of font).  I call it nonsense because <a href="http://nesdev.com/bbs/viewtopic.php?t=6731" class="postlink">there's some history</a> indicating only devel builds of ca65 support the .LOBYTE and "&lt;" directives, as well as .HIBYTE and "&gt;" directives.  God I hate that assembler.  I seriously don't understand why people bother with it.</div>
<br />That's not true, you misunderstood the thread. The "issue" was about .LOBYTES/.HIBYTES, not .LOBYTE/.HIBYTE. LOBYTE/.HIBYTE/&lt;/&gt; have always worked fine. And the problem Neil was having could have been fixed by specifying that ZP is a zero page segment with ".segment "ZP":zeropage".

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Mon Dec 27, 2010 6:44 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">FinalZero wrote:</div><div class="quotecontent">Digging through ca65's documentation there's a ".feature c_comments" option, thus allowing multiline comments.</div>
<br />Another way to do something similar is to use .if, like so:
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp; .if 0<br />&nbsp; &nbsp; lda #0<br />&nbsp; &nbsp; sta xyzzy<br />&nbsp; &nbsp; .endif<br /></div>
<br />I seem to remember that the code between the .if block has to have valid syntax, though.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>koitsu</b> [ Mon Dec 27, 2010 2:33 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">thefox wrote:</div><div class="quotecontent"><div class="quotetitle">koitsu wrote:</div><div class="quotecontent">The &amp;255 and /256 syntax appears to be a bunch of nonsense for getting the low and high bytes of the 16-bit address of a label (in this case, the low and high bytes, respectively, of font).  I call it nonsense because <a href="http://nesdev.com/bbs/viewtopic.php?t=6731" class="postlink">there's some history</a> indicating only devel builds of ca65 support the .LOBYTE and "&lt;" directives, as well as .HIBYTE and "&gt;" directives.  God I hate that assembler.  I seriously don't understand why people bother with it.</div><br />That's not true, you misunderstood the thread. The "issue" was about .LOBYTES/.HIBYTES, not .LOBYTE/.HIBYTE. LOBYTE/.HIBYTE/&lt;/&gt; have always worked fine. And the problem Neil was having could have been fixed by specifying that ZP is a zero page segment with ".segment "ZP":zeropage".</div>
<br />Thank you for the clarification/correction.  For me, even more disparaging -- and I didn't know this until reviewing ca65's user manual -- is the fact that there are multiple assembler pseudo-ops which are named near-identically:
<br />
<br /><a href="http://www.cc65.org/doc/ca65-10.html#ss10.5" class="postlink">.HIBYTE</a> vs. <a href="http://www.cc65.org/doc/ca65-11.html#ss11.44" class="postlink">.HIBYTES</a>
<br />
<br /><a href="http://www.cc65.org/doc/ca65-10.html#ss10.9" class="postlink">.LOBYTE</a> vs. <a href="http://www.cc65.org/doc/ca65-11.html#ss11.67" class="postlink">.LOBYTES</a>
<br />
<br /><a href="http://www.cc65.org/doc/ca65-11.html#ss11.10" class="postlink">.BYT</a> vs. <a href="http://www.cc65.org/doc/ca65.html#toc11.17" class="postlink">.DBYT</a>
<br />
<br /><a href="http://www.cc65.org/doc/ca65-11.html#ss11.19" class="postlink">.DEFINE</a> vs. <a href="http://www.cc65.org/doc/ca65-11.html#ss11.20" class="postlink">.DEFINED</a>
<br />
<br />These might not be negatives to those already familiar with the assembler, but I can see an experienced person messing these up.  The last example is a stretch given the syntax and operational context, but you get the idea.  I'm sure someone could say the same about other assemblers and their syntactical pieces, but the above naming convention seems to imply either "creeping featurism" or an assembler that's trying to do too many things / cater to too many architectures.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>FinalZero</b> [ Mon Dec 27, 2010 4:10 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent"><div class="quotetitle">FinalZero wrote:</div><div class="quotecontent"><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">PPUSCROLL ($2005) is a port on the PPU.</div><br />Is there documentation that describes all those special things at addresses like that?</div><br /><a href="http://wiki.nesdev.com/w/index.php/PPU_registers" class="postlink">nesdevwiki: PPU registers</a><br />Have fun.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Also, while we're on the topic of character maps, how would something like Dual Tile Encoding be implemented?</div><br /><a href="http://en.wikipedia.org/wiki/Byte_pair_encoding" class="postlink">Wikipedia explains</a>.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Also, are there any Japanese games that implement dakuten and handakuten for their characters by having a dakuten/handakuten tile and simply overlapping it with another, as opposed to creating a whole new set of tiles with the dakuten/handakuten added?</div><br />Some games write kana on two rows of tiles, where the dakuten is at the lower right corner of the higher tile. You can't "overlap" tiles per se without sprites, and you can't fit more than 8 sprites on a row of text without some of them disappearing.<br /><br /><div class="quotetitle">koitsu wrote:</div><div class="quotecontent">there's some history indicating only devel builds of ca65 support the .LOBYTE and "&lt;" directives, as well as .HIBYTE and "&gt;" directives.</div><br />Every build of ca65 for all the years I've used it has supported the &lt; and &gt; unary operators.</div><br />1) Thank you.<br />2) So, one would make a function to transform something from DTE that operates on every string desired? I don't quite understand.<br />3) Ah, interesting.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">.BYT vs. .DBYT</div>
<br />What is the name ".dbyt" supposed to stand for anyways?
<br />
<br />-----
<br />
<br />I still can't get the Hello World Example to work. It assembles, but doesn't work.
<br />
<br />-----
<br />
<br />I used the following code in nbasic to read the first gamepad. I suppose it spoiled me, because I can't figure out how to transform the set C1_... lines into ca65 assembly. Am I supposed to push the results onto the stack?
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">// Updates the statuses of the first gamepad's buttons.<br />UpdateGamepad1:<br />&nbsp; &nbsp;// Strobe Bytes<br />&nbsp; &nbsp;set $4016 1 // First<br />&nbsp; &nbsp;set $4016 0 // Second<br />&nbsp; &nbsp;<br />&nbsp; &nbsp;set C1_A&nbsp; &nbsp; &nbsp; &amp; &#91;$4016&#93; 1<br />&nbsp; &nbsp;set C1_B&nbsp; &nbsp; &nbsp; &amp; &#91;$4016&#93; 1<br />&nbsp; &nbsp;set C1_Select &amp; &#91;$4016&#93; 1<br />&nbsp; &nbsp;set C1_Start&nbsp; &amp; &#91;$4016&#93; 1<br />&nbsp; &nbsp;set C1_Up&nbsp; &nbsp; &nbsp;&amp; &#91;$4016&#93; 1<br />&nbsp; &nbsp;set C1_Down&nbsp; &nbsp;&amp; &#91;$4016&#93; 1<br />&nbsp; &nbsp;set C1_Left&nbsp; &nbsp;&amp; &#91;$4016&#93; 1<br />&nbsp; &nbsp;set C1_Right&nbsp; &amp; &#91;$4016&#93; 1<br />&nbsp; &nbsp;<br />&nbsp; &nbsp;return<br />//------------------------------------------------------------</div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>clueless</b> [ Mon Dec 27, 2010 4:16 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />This might help.  It is my entire joypad read routine, coded for ca65:
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;<br />;;<br />;;&nbsp; &nbsp; &nbsp; joypad_read<br />;;<br />;;&nbsp; &nbsp; &nbsp; On input: Nothing.<br />;;&nbsp; &nbsp; &nbsp; On Exit: 'joypad1' and 'joypad2' contain 8 button states, in normal NES order:<br />;;&nbsp; &nbsp; &nbsp; a, b, sel, start, up, down, left, right<br />;;&nbsp; &nbsp; &nbsp; Destroys X.<br />;;&nbsp; &nbsp; &nbsp; Code taken from http://nesdevwiki.org/index.php/Gamepad_code.<br /><br />;; WARNING: Will randomly fail if using DCPM sound channel.<br />;; http://nocash.emubase.de/everynes.htm, &quot;Controllers - Joypads&quot;<br /><br />.segment&nbsp; &nbsp; &nbsp; &nbsp; &quot;KERNEL&quot;<br />.proc&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;joypad_read<br /><br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; lda&nbsp; &nbsp; &nbsp;joypad1_orig<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; sta&nbsp; &nbsp; &nbsp;joypad1_prev&nbsp; &nbsp; ; Used for calculating 'one-shot' button mode.<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; lda&nbsp; &nbsp; &nbsp;joypad2_orig<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; sta&nbsp; &nbsp; &nbsp;joypad2_prev<br /><br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ldx&nbsp; &nbsp; &nbsp;#09&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; Set counter to '8' and set strobe bit<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; stx&nbsp; &nbsp; &nbsp;JOYPAD_1&nbsp; &nbsp; &nbsp; &nbsp; ; Strobe pad #1 + #2<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; dex&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; X = 8 &#40;loop counter&#41;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; stx&nbsp; &nbsp; &nbsp;JOYPAD_1&nbsp; &nbsp; &nbsp; &nbsp; ; Clear strobe bits.<br />:&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;lda&nbsp; &nbsp; &nbsp;JOYPAD_1&nbsp; &nbsp; &nbsp; &nbsp; ; bit0 = input button.<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; lsr&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; bit0 -&gt; carry<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; rol&nbsp; &nbsp; &nbsp;joypad1&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; bit0 &lt;- carry<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; lda&nbsp; &nbsp; &nbsp;JOYPAD_2<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; lsr<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; rol&nbsp; &nbsp; &nbsp;joypad2<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; dex<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; bne&nbsp; &nbsp; &nbsp;:-<br /><br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; lda&nbsp; &nbsp; &nbsp;joypad1<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; sta&nbsp; &nbsp; &nbsp;joypad1_orig&nbsp; &nbsp; ; Needed for future one-shot calculation.<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; lda&nbsp; &nbsp; &nbsp;joypad2<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; sta&nbsp; &nbsp; &nbsp;joypad2_orig<br /><br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; rts<br />.endproc<br /><br />;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;<br />;;<br />;;&nbsp; &nbsp; &nbsp; joypad_debounce<br />;;<br />;;&nbsp; &nbsp; &nbsp; Pass bitmask of buttons to debounce in 'A'.&nbsp; That is, if the button<br />;;&nbsp; &nbsp; &nbsp; was pushed last frame, and this frame, then make it appear OFF this frame.<br /><br />.segment&nbsp; &nbsp; &nbsp; &nbsp; &quot;KERNEL&quot;<br />.proc&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;joypad_debounce<br /><br />;; On entry, Acc is mask of buttons to cook.<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; pha&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; Save mask for joypad #2<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; and&nbsp; &nbsp; &nbsp;joypad1&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; Which buttons are pressed down?<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; and&nbsp; &nbsp; &nbsp;joypad1_prev&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ; Where they down last frame?<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; eor&nbsp; &nbsp; &nbsp;joypad1&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; Turn them off this frame.<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; sta&nbsp; &nbsp; &nbsp;joypad1<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; pla<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; and&nbsp; &nbsp; &nbsp;joypad2<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; and&nbsp; &nbsp; &nbsp;joypad2_prev<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; eor&nbsp; &nbsp; &nbsp;joypad2<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; sta&nbsp; &nbsp; &nbsp;joypad2<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; rts<br />.endproc<br /><br /></div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>clueless</b> [ Mon Dec 27, 2010 4:28 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />(slightly off topic):  If my dual-joypad reading and debouncing code is acceptable to the powers-that-be, then feel free to add it to the wiki.
<br />
<br />In my own game I am contemplating merging the two functions.  I just have to track down all calls to each to ensure that I never read without debouncing immediately afterwards.
<br />
<br />I also have the following in my "./src/nes.inc" header file:
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">JOYPAD_1&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; = $4016<br />JOYPAD_2&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; = $4017<br /><br />BTN_A&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;= $80<br />BTN_B&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;= $40<br />BTN_SEL&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;= $20<br />BTN_START&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;= $10<br />BTN_UP&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; = $08<br />BTN_DOWN&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; = $04<br />BTN_LEFT&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; = $02<br />BTN_RIGHT&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;= $01<br />BTN_ALL&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;= $ff<br /></div><br /><br />And this in yet another file:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">djenkins@hera ~/code/nesyar $ grep joypad src/globals.s<br />joypad1:&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; .byte&nbsp; &nbsp;0&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; Cooked value for this frame.<br />joypad2:&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; .byte&nbsp; &nbsp;0<br />joypad1_prev:&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;.byte&nbsp; &nbsp;0&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; Original value from last frame.<br />joypad2_prev:&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;.byte&nbsp; &nbsp;0<br />joypad1_orig:&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;.byte&nbsp; &nbsp;0&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; Original value from this frame.<br />joypad2_orig:&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;.byte&nbsp; &nbsp;0<br /></div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>FinalZero</b> [ Mon Dec 27, 2010 4:38 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; lda&nbsp; &nbsp; &nbsp;joypad1_orig <br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; sta&nbsp; &nbsp; &nbsp;joypad1_prev&nbsp; &nbsp; ; Used for calculating 'one-shot' button mode. <br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; lda&nbsp; &nbsp; &nbsp;joypad2_orig <br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; sta&nbsp; &nbsp; &nbsp;joypad2_prev <br /></div></div>
<br />Are these defined somewhere earlier?
<br />
<br />Edit: Nevermind. Serves me right for not refreshing the page before posting...

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>clueless</b> [ Mon Dec 27, 2010 4:44 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />  I should have made one post instead of two.
<br />
<br />It helps if you know what I mean by "joypad debouncing".  I don't know if others use the same terms.  I adopted "debounce" from the idea of electrically debouncing push buttons using a timer circuit (like a 555 in one-shot mode).
<br />
<br />In my game, the user can hold down "B" to make the Yar fly "faster" (like in SMB).  But the user must press and release "A" to fire a bullet.  Select changes the "weapon/gun" type, and Start pauses/unpauses the game.  Both start and select must be debounced, or if the user holds them down the mode will switch every frame.  So I want to debounce "A" and not "B" nor the direction keys.  So my actual game engine does this:
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp;&nbsp; &nbsp;jsr&nbsp; &nbsp;joypad_read<br />&nbsp; &nbsp;&nbsp; &nbsp;lda&nbsp; &nbsp;#&#40;BTN_A | BTN_SEL | BTN_START&#41;<br />&nbsp; &nbsp;&nbsp; &nbsp;jsr&nbsp; &nbsp;joypad_debounce<br />&nbsp; &nbsp;&nbsp; &nbsp;jsr&nbsp; &nbsp;check_for_pause_unpause<br /></div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>FinalZero</b> [ Mon Dec 27, 2010 5:00 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I was able to infer from the context what you meant. I've already implemented such a thing in nbasic. There was an example that showed me how.
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">// Handles input from the first controller.<br />HandleInput:<br />&nbsp; &nbsp;// Updates the first gamepad.<br />&nbsp; &nbsp;gosub UpdateGamepad1<br />//&nbsp; &nbsp;gosub UpdateGamepad2<br />&nbsp; &nbsp;<br />&nbsp; &nbsp;// A Button<br />&nbsp; &nbsp;if C1_A = 0 set C1_AIsPressed 0<br />&nbsp; &nbsp;<br />&nbsp; &nbsp;if C1_A = 1 if C1_AIsPressed = 0 then<br />&nbsp; &nbsp;&nbsp; &nbsp;set C1_AIsPressed 1<br />&nbsp; &nbsp;&nbsp; &nbsp;<br />&nbsp; &nbsp;&nbsp; &nbsp;set SpriteNum + SpriteNum 1<br />&nbsp; &nbsp;&nbsp; &nbsp;endif<br /><br />&nbsp; &nbsp;// B Button<br />&nbsp; &nbsp;if C1_B = 0 set C1_BIsPressed 0<br /><br />&nbsp; &nbsp;if C1_B = 1 if C1_BIsPressed = 0 then<br />&nbsp; &nbsp;&nbsp; &nbsp;set C1_BIsPressed 1<br />&nbsp; &nbsp;&nbsp; &nbsp;<br />&nbsp; &nbsp;&nbsp; &nbsp;set SpriteNum - SpriteNum 1<br />&nbsp; &nbsp;&nbsp; &nbsp;endif<br />&nbsp; &nbsp;<br />&nbsp; &nbsp;// Start Button<br />&nbsp; &nbsp;if C1_Start = 0 set C1_StartIsPressed 0<br />&nbsp; &nbsp;<br />&nbsp; &nbsp;if C1_Start = 1 if C1_StartIsPressed = 0 then<br />&nbsp; &nbsp;&nbsp; &nbsp;set C1_StartIsPressed 1<br />&nbsp; &nbsp;&nbsp; &nbsp;<br />&nbsp; &nbsp;&nbsp; &nbsp;set SpriteX 128 // 128 * 2 = 256<br />&nbsp; &nbsp;&nbsp; &nbsp;set SpriteY 120 // 120 * 2 = 240<br />&nbsp; &nbsp;&nbsp; &nbsp;endif<br />&nbsp; &nbsp;<br />&nbsp; &nbsp;// Select Button<br />&nbsp; &nbsp;if C1_Select = 0 set C1_SelectIsPressed 0<br />&nbsp; &nbsp;<br />&nbsp; &nbsp;if C1_Select = 1 if C1_SelectIsPressed = 0 then<br />&nbsp; &nbsp;&nbsp; &nbsp;set C1_SelectIsPressed 1<br />&nbsp; &nbsp;<br />&nbsp; &nbsp;&nbsp; &nbsp;set SpriteNum + SpriteNum $F // Spritnum += 16<br />&nbsp; &nbsp;&nbsp; &nbsp;<br />&nbsp; &nbsp;&nbsp; &nbsp;// Displays the menu.<br />&nbsp; &nbsp;&nbsp; &nbsp;if MenuIsDisplayed = 0 then<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;set MenuIsDisplayed 1<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;// fix<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;endif<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;<br />&nbsp; &nbsp;&nbsp; &nbsp;endif<br />&nbsp; &nbsp;<br />&nbsp; &nbsp;// Up<br />&nbsp; &nbsp;if C1_Up = 1<br />&nbsp; &nbsp;&nbsp; &nbsp;set SpriteY - SpriteY C1_Up<br />&nbsp; &nbsp;&nbsp; &nbsp;goto EndHandleInput<br />&nbsp; &nbsp;<br />&nbsp; &nbsp;// Down<br />&nbsp; &nbsp;if C1_Down = 1<br />&nbsp; &nbsp;&nbsp; &nbsp;set SpriteY + SpriteY C1_Down<br />&nbsp; &nbsp;&nbsp; &nbsp;goto EndHandleInput<br />&nbsp; &nbsp;<br />&nbsp; &nbsp;// Left<br />&nbsp; &nbsp;if C1_Left = 1<br />&nbsp; &nbsp;&nbsp; &nbsp;set SpriteX - SpriteX C1_Left<br />&nbsp; &nbsp;&nbsp; &nbsp;goto EndHandleInput<br />&nbsp; &nbsp;<br />&nbsp; &nbsp;// Right<br />&nbsp; &nbsp;if C1_Right = 1<br />&nbsp; &nbsp;&nbsp; &nbsp;set SpriteX + SpriteX C1_Right<br />&nbsp; &nbsp;&nbsp; &nbsp;goto EndHandleInput<br /><br />&nbsp; &nbsp;EndHandleInput:<br />&nbsp; &nbsp;return<br />//------------------------------------------------------------</div><br /><br />Edit:<br />Ok, so here's a simple piece of code which I think would work to read in stuff from controller without debouncing. I'm itching to try it out!<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">; Gamepad Locations<br />GamepadA = $4016<br />GamepadB = $4017<br />;---------------------------------------------------------------------------<br /><br />; Button Flags<br />Button_A&nbsp; &nbsp; &nbsp; = %10000000<br />Button_B&nbsp; &nbsp; &nbsp; = %01000000<br />Button_Select = %00100000<br />Button_Start&nbsp; = %00010000<br />Button_Up&nbsp; &nbsp; &nbsp;= %00001000<br />Button_Down&nbsp; &nbsp;= %00000100<br />Button_Left&nbsp; &nbsp;= %00000010<br />Button_Right&nbsp; = %00000001<br />;---------------------------------------------------------------------------<br /><br />GamepadAFlags: .byte 0<br />GamepadBFlags: .byte 0<br />;GamepadAPrev:&nbsp; .byte 0<br />;GamepadBPrev:&nbsp; .byte 0<br />;GamepadAOrig:&nbsp; .byte 0<br />;GamepadBOrig:&nbsp; .byte 0<br />;---------------------------------------------------------------------------<br /><br />; Updates the flags for the first gamepad.<br />UpdateGamepadAFlags:<br />&nbsp; &nbsp;; Strobe Bytes<br />&nbsp; &nbsp;; First<br />&nbsp; &nbsp;ldx 1<br />&nbsp; &nbsp;stx GamepadA<br />&nbsp; &nbsp;<br />&nbsp; &nbsp;; Second<br />&nbsp; &nbsp;ldx 0<br />&nbsp; &nbsp;stx GamepadA<br /><br />&nbsp; &nbsp;.repeat 8<br />&nbsp; &nbsp;&nbsp; &nbsp;lda GamepadA&nbsp; &nbsp; &nbsp; ; bit0 = current button<br />&nbsp; &nbsp;&nbsp; &nbsp;shr&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; bit0 -&gt; carry<br />&nbsp; &nbsp;&nbsp; &nbsp;rol GamepadAFlags ; bit0 &lt;- carry<br />&nbsp; &nbsp;.endrepeat<br />&nbsp; &nbsp;<br />&nbsp; &nbsp;rts<br />;---------------------------------------------------------------------------</div>
<br />
<br />Edit: Another question: What's the difference between .proc and .scope for ca65? Their descriptions are nearly the same in the documentation:
<br /><!-- m --><a class="postlink" href="http://www.cc65.org/doc/ca65-11.html#ss11.79">http://www.cc65.org/doc/ca65-11.html#ss11.79</a><!-- m -->
<br /><!-- m --><a class="postlink" href="http://www.cc65.org/doc/ca65-11.html#ss11.86">http://www.cc65.org/doc/ca65-11.html#ss11.86</a><!-- m -->

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Tue Dec 28, 2010 7:58 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">FinalZero wrote:</div><div class="quotecontent">So, one would make a function to transform something from DTE that operates on every string desired?</div><br />There are two ways to do this: A. make a function that takes a DTE string and returns a decompressed string, or B. make a function that starts a decoding process and retrieves the next decompressed character.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">.BYT vs. .DBYT</div><br />What is the name ".dbyt" supposed to stand for anyways?</div>
<br />Double byte, I guess.
<br />
<br />The difference I can see between .proc and .scope is that .proc defines a label in the outer scope for the start.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>FinalZero</b> [ Wed Dec 29, 2010 5:33 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">The difference I can see between .proc and .scope is that .proc defines a label in the outer scope for the start.</div><br />I understand now.<br /><br />Well, since the hello world example given earlier doesn't work, I've begun to look elsewhere. The following is from lj65's source.<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">.segment &quot;INESHDR&quot;<br /><br />&nbsp; .byt &quot;NES&quot;, 26<br />&nbsp; .byt 1&nbsp; ; number of 16 KB program segments<br />&nbsp; .byt 1&nbsp; ; number of 8 KB chr segments<br />&nbsp; .byt 0&nbsp; ; mapper, mirroring, etc<br />&nbsp; .byt 0&nbsp; ; extended mapper info<br />&nbsp; .byt 0&nbsp; ; number of 8 KB RAM segments<br />; The next two bytes are supposed to define PAL/NTSC versions<br />; of a given ROM, but they make Nintendulator cry.<br />.ifdef PAL<br />&nbsp; .byt 0<br />&nbsp; .byt %00000000<br />.else<br />&nbsp; .byt 0<br />&nbsp; .byt %00000000<br />.endif<br />&nbsp; .byt 0<br />&nbsp; .byt 0,0,0,0&nbsp; ; DiskDude detection</div><br />1) What does the ".segment "INESHDR" do? There's no predefined segment by that name, so I'm confused. What would happen if it was left out?<br />2) Does "number of 16 KB program segments" mean that one has go through one's source and count how many segments there are?<br />3) What is a mapper? Why do different games use different ones? I keep finding lists of them, but nothing that actually explains what they are and do.<br />4) What is a nametable? What's stored in them? And yes, I've read <!-- m --><a class="postlink" href="http://wiki.nesdev.com/w/index.php/PPU_nametables">http://wiki.nesdev.com/w/index.php/PPU_nametables</a><!-- m --><br />5) From <!-- m --><a class="postlink" href="http://wiki.nesdev.com/w/index.php/Mirroring">http://wiki.nesdev.com/w/index.php/Mirroring</a><!-- m --> :<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><span class="posthilit">Vertical</span> [...] This is most commonly used for games which only scroll horizontally. Games that scroll vertically (by any amount and without status bar) and that does [sic] never scroll horizontally by more than one screen would use this mirroring (e.g. Lode Runner, Bomberman, Fire Emblem, Crystal Mines), so that they don't have to load anything when scrolling horizontally.</div>
<br />I'm confused because it seems to contradict itself. Does that mean it's used for games that scroll horizontally or not?
<br />
<br />Also, why doesn't one need ".org $0000" at the beginning of the header? Is it implied?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>clueless</b> [ Wed Dec 29, 2010 5:52 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />In ca65, you let the linker assign the final location in the output file of each segment.  You are discouraged from using ".org".
<br />
<br />It seems that each of us that uses ca65 builds our "ines" headers a bit differently (as far as how we get the linker to pre-pend it to the beginning of our ROMs).  My example is below.  This is for a game that I tinkered with a few years ago and gave up on.  But it does link and execute properly.
<br />
<br />Specifically, look at "src/linker.cfg", then at "src/kernel/header.s".
<br />
<br />In your ".s" files, you just set the "segment" and then write code and define data bytes (words or whatever you need).  You tell the linker, through a config file, how to lay each segment out into the ROM image.  The linker will take care of doing the "fixups", so that "lda player1_health" gets the correct address for the symbol "player1_health".  However, ca65 knows NOTHING about bankswitching.  You must ensure that the correct banks are switched in (using the "mapper") before accessing a symbol unique to that bank.
<br />
<br />My game uses MMC1 with a very large PROG-ROM.  I have code in a few banks.
<br />
<br />If you know what "subversion" (revision control system) is, you can obtain a complete copy of my source and build it on Linux.  YMMV when compiling on win32 (my windows build scripts assume that you have msdev studio 98 (vc6.0) installed).
<br />
<br /><!-- m --><a class="postlink" href="https://www.ecoligames.com/svn/nes-game/trunk/">https://www.ecoligames.com/svn/nes-game/trunk/</a><!-- m -->
<br />
<br />Subversion copy:
<br />svn co <!-- m --><a class="postlink" href="https://www.ecoligames.com/svn/nes-game/trunk">https://www.ecoligames.com/svn/nes-game/trunk</a><!-- m --> clueless-game
<br />
<br />View source with syntax highlighting via "trac":
<br /><!-- m --><a class="postlink" href="https://www.ecoligames.com/trac/nes-game/browser/trunk">https://www.ecoligames.com/trac/nes-game/browser/trunk</a><!-- m -->
<br />(I forget the user/pass that you'll need.  If you want it,  ask and I'll go dig it up).
<br />
<br />I hope that the above helps you.  If not, I know that many others use ca65 and can help too.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>FinalZero</b> [ Wed Dec 29, 2010 6:35 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">(I forget the user/pass that you'll need. If you want it, ask and I'll go dig it up). </div>
<br />Could you please?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>clueless</b> [ Wed Dec 29, 2010 6:45 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I thought that I had posted it to this forum in 2008.  So I went back and dug through my posts.  I did not find the "public" user/pass, so I will reset it in a moment.  But I did find this (about ca65 and linking).  Maybe it will help you as well:
<br />
<br /><!-- m --><a class="postlink" href="http://nesdev.com/bbs/viewtopic.php?p=37306">http://nesdev.com/bbs/viewtopic.php?p=37306</a><!-- m -->
<br />
<br />The user / pass for "trac" is "anonymous" and "nesdev".  It should have full read access to the trac repository.  Note that you shouldn't need a user/pass to do an "svn co".

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>2</strong> of <strong>18</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>