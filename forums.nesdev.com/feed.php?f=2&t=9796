<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=2&amp;t=9796" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2013-08-12T13:20:14-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=2&amp;t=9796</id>
<entry>
<author><name><![CDATA[Joe]]></name></author>
<updated>2013-08-12T13:20:14-07:00</updated>
<published>2013-08-12T13:20:14-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9796&amp;p=116423#p116423</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9796&amp;p=116423#p116423"/>
<title type="html"><![CDATA[Re: Randomness before the first button press]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9796&amp;p=116423#p116423"><![CDATA[
<div class="quotetitle">tepples wrote:</div><div class="quotecontent"><br />This leaves the Freecell problem, with a buttload of entropy needed up front. I've got a bunch of <a href="http://wiki.nesdev.com/w/index.php/File:Cards_32x24.png" class="postlink">cards</a>, and they need <a href="https://commons.wikimedia.org/wiki/File:FreeCell.png" class="postlink">shuffled face up</a>.<br /></div>The Windows 95 version of FreeCell got away with <a href="http://rosettacode.org/wiki/Deal_cards_for_FreeCell" class="postlink">fifteen bits of entropy</a>.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5948">Joe</a> — Mon Aug 12, 2013 1:20 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[zzo38]]></name></author>
<updated>2013-08-12T11:09:44-07:00</updated>
<published>2013-08-12T11:09:44-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9796&amp;p=116412#p116412</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9796&amp;p=116412#p116412"/>
<title type="html"><![CDATA[Re: Randomness before the first button press]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9796&amp;p=116412#p116412"><![CDATA[
<div class="quotetitle">tepples wrote:</div><div class="quotecontent"><br />This leaves the Freecell problem, with a buttload of entropy needed up front. I've got a bunch of <a href="http://wiki.nesdev.com/w/index.php/File:Cards_32x24.png" class="postlink">cards</a>, and they need <a href="https://commons.wikimedia.org/wiki/File:FreeCell.png" class="postlink">shuffled face up</a><br /></div>I have wanted something like this and thought of using a variant of ARCFOUR (which is shuffling, already) where the modulo amount is different than 256 (and may vary; due to how modulo is used in ARCFOUR, you don't need to use an actual modulo and just a compare is good enough), but I don't know how well this will work.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4734">zzo38</a> — Mon Aug 12, 2013 11:09 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2013-08-12T09:03:25-07:00</updated>
<published>2013-08-12T09:03:25-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9796&amp;p=116405#p116405</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9796&amp;p=116405#p116405"/>
<title type="html"><![CDATA[Re: Randomness before the first button press]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9796&amp;p=116405#p116405"><![CDATA[
Since the last post, I became aware of <em>Who Moved My Cheese?</em> and its parodies by Mason Brown, Stilton Jarlsberg, Ilene Hochberg, and Deepak Malhotra. At one point, I realized that one of the species in the <em>Cheese</em> books was the same thing as a species from the first voyage in <em>Gulliver's Travels</em>. I briefly considered writing a <em>Cheese/Travels</em> crossover fic, and during my research for this, I became aware of <a href="https://en.wikipedia.org/wiki/Lilliput_and_Blefuscu" class="postlink">something else</a> that rhymes with Nintendo. So for the record I'll update my logo joke ROM to include two more possibilities. Modifying the included source code to read $2004 instead of $2007 is an exercise for the reader.<br /><br /><a href="http://pics.pineight.com/nes/pretendo-0.02.zip" class="postlink">http://pics.pineight.com/nes/pretendo-0.02.zip</a><br /><br />This leaves the Freecell problem, with a buttload of entropy needed up front. I've got a bunch of <a href="http://wiki.nesdev.com/w/index.php/File:Cards_32x24.png" class="postlink">cards</a>, and they need to be <a href="https://commons.wikimedia.org/wiki/File:FreeCell.png" class="postlink">shuffled face up</a>. Can oam_entropy.nes run its entropy gatherer more than once per reset? Does it work on models whose $2004 readback differs, such as the Famicom?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Mon Aug 12, 2013 9:03 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2013-03-26T17:53:07-07:00</updated>
<published>2013-03-26T17:53:07-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9796&amp;p=110200#p110200</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9796&amp;p=110200#p110200"/>
<title type="html"><![CDATA[Re: Randomness before the first button press]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9796&amp;p=110200#p110200"><![CDATA[
Here's a first cut of an 8-bit OAM entropy routine, using CRC-8 as the hash. I've run it through a test that ensures that it's really reading all 256 bytes of OAM and incorporating each into the final value. The test ROM JSRs to it first thing, before <em>any</em> other init code, and it works fine, so there's little restriction on when it's called in init code. It just prints the entropy. The routine uses temp, a variable somewhere in RAM.<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">; In: PPU rendering disabled, OAM uninitialized<br />; Out: A=8 bits of entropy<br />; Preserved: Y<br />get_entropy_oam:<br />        ldx #0<br />@next:  stx $2003<br />        eor $2004<br />        sta temp<br />        asl<br />        bcc :+<br />        eor #$07<br />:       eor temp<br />        asl<br />        bcc :+<br />        eor #$07<br />:       eor temp<br />        inx<br />        bne @next<br />        rts</div><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Tue Mar 26, 2013 5:53 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2013-03-26T05:38:42-07:00</updated>
<published>2013-03-26T05:38:42-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9796&amp;p=110157#p110157</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9796&amp;p=110157#p110157"/>
<title type="html"><![CDATA[Re: Randomness before the first button press]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9796&amp;p=110157#p110157"><![CDATA[
<div class="quotetitle">blargg wrote:</div><div class="quotecontent"><br />How many bits of entropy would typically be desired? I'm guessing just a byte, so the hash wouldn't need to be as involved as CRC-32.<br /></div><br />Shuffling a deck of 52 cards with Fisher-Yates takes 226 bits at the bare minimum, and about 250 bits for a good distribution in practice. On the other hand, if the game isn't one like Freecell solitaire that needs all cards visible from frame one, it could use &quot;lazy shuffling&quot; where the Fisher-Yates routine hits the RNG only when the user requests that a card become visible. Klondike solitaire, for example, can get by with about 56 bits at power on: seven for the face-up card at the top of each fan on the tableau and three for cards pulled from stock to waste. Blackjack and Texas Hold'em poker likewise rarely deal more than one or two cards at a time. These bits could be added from sub-frame keypress timing, possibly gathered through DMC IRQ-triggered controller reading.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />It should at least have a version that produces a byte, since users might try to &quot;optimize&quot; it down to a byte if it's more, and might break the hash and get some bits having very low entropy.<br /></div><br />Then run CRC-8 on the final result.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Tue Mar 26, 2013 5:38 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2013-03-25T21:56:55-07:00</updated>
<published>2013-03-25T21:56:55-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9796&amp;p=110147#p110147</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9796&amp;p=110147#p110147"/>
<title type="html"><![CDATA[Re: Randomness before the first button press]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9796&amp;p=110147#p110147"><![CDATA[
A few more:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">9FDAB13D 1h 13m<br />F523E092 2h 52m<br />96C2E0D3 7h 58m<br />1B2C239F 1h 23m</div><br /><br />Is this worth refining into a reusable routine we can test on several of our NES consoles and then post to the wiki for anyone to use? It sure seems to be a great source of entropy at power.<br /><br />This test waits 100 msec before reading OAM. The routine should be tested running at a more typical time, the usual 1-2 refreshes after power up, in case for whatever reason we find less entropy at that time (earlier than I've been testing at).<br /><br />There's also the question of how to hash things. How many bits of entropy would typically be desired? I'm guessing just a byte, so the hash wouldn't need to be as involved as CRC-32. It should at least have a version that produces a byte, since users might try to &quot;optimize&quot; it down to a byte if it's more, and might break the hash and get some bits having very low entropy.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Mon Mar 25, 2013 9:56 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2013-03-24T15:36:18-07:00</updated>
<published>2013-03-24T15:36:18-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9796&amp;p=110068#p110068</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9796&amp;p=110068#p110068"/>
<title type="html"><![CDATA[Re: Randomness before the first button press]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9796&amp;p=110068#p110068"><![CDATA[
OAM is looking like the ideal source of power-on randomness (and fairly good reset randomness). Results of more long-term power off tests:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">CRC-32   amount of time off<br />8C65947F ~2 days<br />E5106E4D 2h 13m<br />04079501 11m<br />F7400CA4 2h 6m<br />F36449DE 41m)<br />9FAB4919 2h 19m<br />491539D4 3h 14m<br />926A3C53 37m<br />F6508295 17h 44m</div><br />The point of the CRC-32 is just an easy way to tell whether it's powering up with the same state ever, without having to list and compare all 256 bytes of OAM.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Sun Mar 24, 2013 3:36 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[B00daW]]></name></author>
<updated>2013-03-21T07:48:52-07:00</updated>
<published>2013-03-21T07:48:52-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9796&amp;p=109900#p109900</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9796&amp;p=109900#p109900"/>
<title type="html"><![CDATA[Re: Randomness before the first button press]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9796&amp;p=109900#p109900"><![CDATA[
OK.  Good to know.  Thanks.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3466">B00daW</a> — Thu Mar 21, 2013 7:48 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[thefox]]></name></author>
<updated>2013-03-21T05:49:59-07:00</updated>
<published>2013-03-21T05:49:59-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9796&amp;p=109893#p109893</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9796&amp;p=109893#p109893"/>
<title type="html"><![CDATA[Re: Randomness before the first button press]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9796&amp;p=109893#p109893"><![CDATA[
<div class="quotetitle">B00daW wrote:</div><div class="quotecontent"><br />Does a consistent pattern happen from a particular OAM &quot;seed&quot; if the end of the mainloop is BRK and BRK loops back to mainloop?<br /></div><br />PPU does not see the BRK interrupt in any way, so it doesn't affect what happens to OAM. RESET is different, because the reset signal is also connected to the PPU.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=80">thefox</a> — Thu Mar 21, 2013 5:49 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2013-03-20T18:12:17-07:00</updated>
<published>2013-03-20T18:12:17-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9796&amp;p=109866#p109866</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9796&amp;p=109866#p109866"/>
<title type="html"><![CDATA[Re: Randomness before the first button press]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9796&amp;p=109866#p109866"><![CDATA[
I don't follow. Can you elaborate on the scenario you're describing?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Wed Mar 20, 2013 6:12 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[B00daW]]></name></author>
<updated>2013-03-20T14:19:36-07:00</updated>
<published>2013-03-20T14:19:36-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9796&amp;p=109852#p109852</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9796&amp;p=109852#p109852"/>
<title type="html"><![CDATA[Re: Randomness before the first button press]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9796&amp;p=109852#p109852"><![CDATA[
Does a consistent pattern happen from a particular OAM &quot;seed&quot; if the end of the mainloop is BRK and BRK loops back to mainloop?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3466">B00daW</a> — Wed Mar 20, 2013 2:19 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2013-03-19T21:17:46-07:00</updated>
<published>2013-03-19T21:17:46-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9796&amp;p=109825#p109825</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9796&amp;p=109825#p109825"/>
<title type="html"><![CDATA[Re: Randomness before the first button press]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9796&amp;p=109825#p109825"><![CDATA[
I did some testing today and found that OAM is a pretty good source of entropy on my NES, at least for pressing reset on it and powering it down for varying lengths of time under 15 minutes. If I can set up an automatic timer to turn it on and off for a precise amount of time over and over all day, I'll get a better idea of how good it is.<br /><br />The ROM captures OAM at reset (after a 100 msec delay), prints its CRC-32 and content, then fills OAM with $FF to ensure that the next test's randomness can't be helped by this one's (this prevents it from merely acting like a pseudo RNG with the OAM storing its current state).<br /><br />If you run the ROM, be sure that your cart is really running it right when the NES powers up/resets, and not after a menu of any kind, otherwise the OAM will probably have been initialized by it before this gets to look at it.<br /><br />The text file tells a little more about the ROM and also has my results.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Tue Mar 19, 2013 9:17 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[proxy]]></name></author>
<updated>2013-03-19T14:51:54-07:00</updated>
<published>2013-03-19T14:51:54-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9796&amp;p=109806#p109806</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9796&amp;p=109806#p109806"/>
<title type="html"><![CDATA[Re: Randomness before the first button press]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9796&amp;p=109806#p109806"><![CDATA[
Just a thought, if you want some randomness at powerup, why not take advantage of the initial lack of PPU/CPU synchronization?<br /><br />As we all know (<!-- m --><a class="postlink" href="http://wiki.nesdev.com/w/index.php/PPU_frame_timing">http://wiki.nesdev.com/w/index.php/PPU_frame_timing</a><!-- m -->), there is a technique to get the PPU and CPU clocks aligned. Would it be possible to do that and count how many cycles/frames/etc it took for things be aligned.<br /><br />This would at least give you a random value for each each of the 3 startup alignments (4 for PAL). Plus because the PPU and CPU use different dividers, most likely many more possible values.<br /><br />Obviously this only works on power up, not reset, but I am thinking of this more of an initial seed of sorts.<br /><br />Thoughts? Am I way off?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4806">proxy</a> — Tue Mar 19, 2013 2:51 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2013-03-15T12:25:47-07:00</updated>
<published>2013-03-15T12:25:47-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9796&amp;p=109511#p109511</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9796&amp;p=109511#p109511"/>
<title type="html"><![CDATA[Re: Randomness before the first button press]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9796&amp;p=109511#p109511"><![CDATA[
What about holding Reset while swapping cartridges? Reset is level sensitive; otherwise, battery-backed  MMC1 games couldn't have used it for RAM protection during power off.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Fri Mar 15, 2013 12:25 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[zzo38]]></name></author>
<updated>2013-03-15T12:12:52-07:00</updated>
<published>2013-03-15T12:12:52-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9796&amp;p=109508#p109508</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9796&amp;p=109508#p109508"/>
<title type="html"><![CDATA[Re: Randomness before the first button press]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9796&amp;p=109508#p109508"><![CDATA[
<div class="quotetitle">Sik wrote:</div><div class="quotecontent"><br />I meant that it should be <em>theoretically</em> possible to do it on stock real hardware as-is =P Of course in practice you'll need some sort of superhuman for that, though I believe somebody was making a TAS player with an Arduino that'd just press buttons on the controller.<br /></div>Since it matter the initial RAM, then to do that, would require first you put one cartridge which initialize the RAM, and then jumps to RAM and then you remove the ROM cartridge and insert a different one, and then push RESET. Doing this requires that the RAM contains a machine code for a loop to please wait forever, so it cannot be all zero.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4734">zzo38</a> — Fri Mar 15, 2013 12:12 pm</p><hr />
]]></content>
</entry>
</feed>