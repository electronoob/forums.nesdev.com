<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=10&amp;t=6160" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2011-05-30T16:35:40-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=10&amp;t=6160</id>
<entry>
<author><name><![CDATA[UncleSporky]]></name></author>
<updated>2011-05-30T16:35:40-07:00</updated>
<published>2011-05-30T16:35:40-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6160&amp;p=78921#p78921</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6160&amp;p=78921#p78921"/>
<title type="html"><![CDATA[ASM6 templates]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6160&amp;p=78921#p78921"><![CDATA[
Oh, when I said "after everything else" I meant except for chr. <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /><br />chr always goes right after the interrupt addresses.  It's good to learn why at some point, but for now it might be easiest just to remember it that way.  iNES header -&gt; define variables -&gt; code -&gt; data tables -&gt; interrupt addresses -&gt; chr data.<br /><br />You don't have chr data if your game uses CHR RAM, but you're not dealing with that yet.<br /><br />Basically, the interrupt addresses always start at $FFFA and end at $FFFF.  The next step up would be $10000, but you have no way to refer to this location directly because it's more than two bytes long.  Instead, the NES just assumes that's where the graphics are located and you have to refer to them through other methods (using PPU IDs and registers).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3438">UncleSporky</a> — Mon May 30, 2011 4:35 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[unregistered]]></name></author>
<updated>2011-05-30T11:17:46-07:00</updated>
<published>2011-05-30T11:17:46-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6160&amp;p=78903#p78903</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6160&amp;p=78903#p78903"/>
<title type="html"><![CDATA[ASM6 templates]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6160&amp;p=78903#p78903"><![CDATA[
Thank you UncleSporky <img src="http://forums.nesdev.com/images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" />  that's very helpfull to me!<br /><br /><br /><div class="quotetitle">UncleSporky wrote:</div><div class="quotecontent"><br />If you set it up the way I have it above, make sure that your main, prg and vblank files don't have the .pad $FFFA and .dw vblank,reset,irq anywhere in them.  In my project I moved it up to this broader level to make sure it comes after everything else.<br /></div><br />There is chr after it... in mine too.  Does the chr not matter because it's in the PPU's memory?  (and it's not in the CPU's memory? <img src="http://forums.nesdev.com/images/smilies/icon_confused.gif" alt=":?" title="Confused" />)<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3893">unregistered</a> — Mon May 30, 2011 11:17 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[UncleSporky]]></name></author>
<updated>2011-05-30T10:51:25-07:00</updated>
<published>2011-05-30T10:51:25-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6160&amp;p=78902#p78902</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6160&amp;p=78902#p78902"/>
<title type="html"><![CDATA[ASM6 templates]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6160&amp;p=78902#p78902"><![CDATA[
You can insert extra code anywhere before you .pad $FFFA and set up the interrupts.  Most of the time you only have chr data after that point.<br /><br />Here's how my simple project is set up:<br /><br />I have a batch file, make.bat, that runs asm6 and compiles my project.  This is all it contains:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">asm6 header.asm demo.nes demo.txt</div><br /><br />Then header.asm contains the rest of the project info:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">;iNES header<br /><br />.db &quot;NES&quot;,$1a       ;iNES identifier<br /><br />.db $01         ;number of PRG-ROM blocks<br /><br />.db $01         ;number of CHR-ROM blocks<br /><br />.db $00, $00      ;ROM control bytes: Horizontal mirroring, no SRAM or trainer, Mapper #0<br /><br />.db $00,$00,$00,$00,$00,$00,$00,$00   ;filler<br /><br />;PRG-ROM<br /><br />.include &quot;main.asm&quot;<br />.include &quot;famitone.asm&quot;   ;FamiTone audio driver by Shiru<br />.include &quot;music.asm&quot;   ;sample music data<br /><br />.pad $FFFA      ;fill any remaining space with zeroes<br />.dw vblank,reset,irq   ;set interrupt addresses &#40;defined in main.asm&#41;<br /><br />;CHR-ROM<br /><br />.incbin &quot;main.chr&quot;</div><br /><br />My whole program is inside main.asm, and then I simply inserted famitone and sample music after that.  This is also the place to include data tables, screen data, anything else that isn't code but also isn't graphics.<br /><br />If you set it up the way I have it above, make sure that your main, prg and vblank files don't have the .pad $FFFA and .dw vblank,reset,irq anywhere in them.  In my project I moved it up to this broader level to make sure it comes after everything else.<br /><br />Also make sure you aren't duplicating that iNES header info anywhere else either.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3438">UncleSporky</a> — Mon May 30, 2011 10:51 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[unregistered]]></name></author>
<updated>2011-05-30T08:15:08-07:00</updated>
<published>2011-05-30T08:15:08-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6160&amp;p=78900#p78900</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6160&amp;p=78900#p78900"/>
<title type="html"><![CDATA[ASM6 templates]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6160&amp;p=78900#p78900"><![CDATA[
tokumaru, so far I have a main file, a prg file, a chr file, and a vblank file.  Where should I place famitone.asm?  In what address space can I put a bunch of <span style="color: yellow">.incsrc</span>s?  You seem to be the best person to ask; you understand how rom files should be put together. <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" /><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3893">unregistered</a> — Mon May 30, 2011 8:15 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2010-05-25T09:45:44-07:00</updated>
<published>2010-05-25T09:45:44-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6160&amp;p=61862#p61862</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6160&amp;p=61862#p61862"/>
<title type="html"><![CDATA[ASM6 templates]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6160&amp;p=61862#p61862"><![CDATA[
Added a CNROM template.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Tue May 25, 2010 9:45 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[jbuonacc]]></name></author>
<updated>2010-04-09T08:38:13-07:00</updated>
<published>2010-04-09T08:38:13-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6160&amp;p=59855#p59855</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6160&amp;p=59855#p59855"/>
<title type="html"><![CDATA[ASM6 templates]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6160&amp;p=59855#p59855"><![CDATA[
<div class="quotetitle">yassergsNESDEV wrote:</div><div class="quotecontent"><br />Ok, I got NESASM but  I have not any tutorials. Where I can find some.. from the beginning to advanced mode<br /></div><br /><br /><!-- m --><a class="postlink" href="http://nintendoage.com/forum/messageview.cfm?catid=22&amp;threadid=7155">http://nintendoage.com/forum/messagevie ... eadid=7155</a><!-- m --><br /><br />doesn't get too advanced, but the basics are covered pretty well.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4315">jbuonacc</a> — Fri Apr 09, 2010 8:38 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[yassergsNESDEV]]></name></author>
<updated>2010-04-09T08:32:36-07:00</updated>
<published>2010-04-09T08:32:36-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6160&amp;p=59853#p59853</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6160&amp;p=59853#p59853"/>
<title type="html"><![CDATA[ASM6 templates]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6160&amp;p=59853#p59853"><![CDATA[
Ok, I got NESASM but  I have not any tutorials. Where I can find some.. from the beginning to advanced mode<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4335">yassergsNESDEV</a> — Fri Apr 09, 2010 8:32 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[loopy]]></name></author>
<updated>2010-03-13T22:26:33-07:00</updated>
<published>2010-03-13T22:26:33-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6160&amp;p=58187#p58187</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6160&amp;p=58187#p58187"/>
<title type="html"><![CDATA[ASM6 templates]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6160&amp;p=58187#p58187"><![CDATA[
It isn't necessary to declare a label before using it.  ASM6 is a multi-pass assembler.  It'll take as many passes as it needs to resolve unknown symbols.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4">loopy</a> — Sat Mar 13, 2010 10:26 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[koitsu]]></name></author>
<updated>2010-03-13T21:51:37-07:00</updated>
<published>2010-03-13T21:51:37-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6160&amp;p=58184#p58184</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6160&amp;p=58184#p58184"/>
<title type="html"><![CDATA[ASM6 templates]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6160&amp;p=58184#p58184"><![CDATA[
<div class="quotetitle">Gradualore wrote:</div><div class="quotecontent"><br />Is there a way to "forward declare" a label before it is actually defined and used?<br /></div><br /><br />Comment in passing: the commonly-used term in programming for this is <a href="http://en.wikipedia.org/wiki/Function_prototype" class="postlink">"prototyping"</a>.  The Wikipedia article describes functions, but variable prototypes work the same way.<br /><br />Most assemblers I've used over the years are multi-pass, which during their initial pass take note of all (global) labels and equates.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3">koitsu</a> — Sat Mar 13, 2010 9:51 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[GradualGames]]></name></author>
<updated>2010-03-13T20:36:05-07:00</updated>
<published>2010-03-13T20:36:05-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6160&amp;p=58180#p58180</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6160&amp;p=58180#p58180"/>
<title type="html"><![CDATA[ASM6 templates]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6160&amp;p=58180#p58180"><![CDATA[
When I tried to break my program into multiple files when it was still written for ASM6, I had trouble with dependencies between modules. Is there a way to "forward declare" a label before it is actually defined and used? CA65 resolved this issue for me quite nicely with the ability to export and import symbols, in conjunction with the LD65 linker. I also like the fact that CA65 abstracts out all of the .base, and .pad directives one normally needs to do in an assembler such as ASM6. You can describe all of that in one concise config file, and then all your source files do is name segments that you mapped out in your config file.<br /><br />BTW, I think perhaps these templates ought to be stickied or wikied, or both. And perhaps a CA65 developer could upload a template for a simple NROM or UNROM project, including a config file, source file and makefile (not that makefiles are absolutely necessary, but it appears to be a common way CA65 users build their projects).<br /><br />*edit* I actually still use ASM6. When I'm testing some feature I don't understand how to use yet, I don't really want to bother with multiple files. As far as I know, CA65 doesn't have the equivalent of .org, .base or .pad within a source file, you can only do these things within the config file with memory areas, segments, and the attribute "fill = yes or no."<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3735">GradualGames</a> — Sat Mar 13, 2010 8:36 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2010-03-13T18:51:45-07:00</updated>
<published>2010-03-13T18:51:45-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6160&amp;p=58173#p58173</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6160&amp;p=58173#p58173"/>
<title type="html"><![CDATA[ASM6 templates]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6160&amp;p=58173#p58173"><![CDATA[
<div class="quotetitle">Banshaku wrote:</div><div class="quotecontent"><br />For the sake of the sample, all the banks were defined in a single file but is it possible to define them in a different one and include them? I guess you can, just don't know yet about this assembler.<br /></div><br />Yes, you can put whatever you want in separate files and include them, it's the same as if it was all part of a single file.<br /><br />I keep everything separate myself, and nest several levels of includes (master file includes bank files which include functions which include tables, stuff like that), but I made the examples as single files for the sake of simplicity, as most people start out with single files.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Sat Mar 13, 2010 6:51 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Banshaku]]></name></author>
<updated>2010-03-13T18:28:25-07:00</updated>
<published>2010-03-13T18:28:25-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6160&amp;p=58171#p58171</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6160&amp;p=58171#p58171"/>
<title type="html"><![CDATA[ASM6 templates]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6160&amp;p=58171#p58171"><![CDATA[
I have a question regarding ASM6.  For the sake of the sample, all the banks were defined in a single file but is it possible to define them in a different one and include them? I guess you can, just don't know yet about this assembler.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3559">Banshaku</a> — Sat Mar 13, 2010 6:28 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2010-05-25T09:43:25-07:00</updated>
<published>2010-03-13T12:02:59-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6160&amp;p=58138#p58138</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6160&amp;p=58138#p58138"/>
<title type="html"><![CDATA[ASM6 templates]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6160&amp;p=58138#p58138"><![CDATA[
Many people start out using NESASM, probably because of the tutorials that use it. And sometimes we suggest they use a better assembler, ASM6 being a good candidate because it's very simple to use. So I decided to put together these basic NROM and UNROM templates, so that there is no excuse for people not to try it.<br /><br />Note that all of these shuld be assembld in the simplest possible way: <strong>asm6 game.asm game.nes</strong><br /><br /><strong>UPDATE:</strong> Included a CNROM template.<br /><br />NROM template:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">;----------------------------------------------------------------<br />; constants<br />;----------------------------------------------------------------<br /><br />PRG_COUNT = 1 ;1 = 16KB, 2 = 32KB<br />MIRRORING = %0001 ;%0000 = horizontal, %0001 = vertical, %1000 = four-screen<br /><br />;----------------------------------------------------------------<br />; variables<br />;----------------------------------------------------------------<br /><br />   .enum $0000<br /><br />   ;NOTE: declare variables using the DSB and DSW directives, like this:<br /><br />   ;MyVariable0 .dsb 1<br />   ;MyVariable1 .dsb 3<br /><br />   .ende<br /><br />   ;NOTE: you can also split the variable declarations into individual pages, like this:<br /><br />   ;.enum $0100<br />   ;.ende<br /><br />   ;.enum $0200<br />   ;.ende<br /><br />;----------------------------------------------------------------<br />; iNES header<br />;----------------------------------------------------------------<br /><br />   .db &quot;NES&quot;, $1a ;identification of the iNES header<br />   .db PRG_COUNT ;number of 16KB PRG-ROM pages<br />   .db $01 ;number of 8KB CHR-ROM pages<br />   .db $00|MIRRORING ;mapper 0 and mirroring<br />   .dsb 9, $00 ;clear the remaining bytes<br /><br />;----------------------------------------------------------------<br />; program bank&#40;s&#41;<br />;----------------------------------------------------------------<br /><br />   .base $10000-&#40;PRG_COUNT*$4000&#41;<br /><br />Reset:<br /><br />   ;NOTE: initialization code goes here<br /><br />NMI:<br /><br />   ;NOTE: NMI code goes here<br /><br />IRQ:<br /><br />   ;NOTE: IRQ code goes here<br /><br />;----------------------------------------------------------------<br />; interrupt vectors<br />;----------------------------------------------------------------<br /><br />   .org $fffa<br /><br />   .dw NMI<br />   .dw Reset<br />   .dw IRQ<br /><br />;----------------------------------------------------------------<br />; CHR-ROM bank<br />;----------------------------------------------------------------<br /><br />   .incbin &quot;tiles.chr&quot;</div><br /><br />UNROM template:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">;----------------------------------------------------------------<br />; constants<br />;----------------------------------------------------------------<br /><br />MIRRORING = %0001 ;%0000 = horizontal, %0001 = vertical, %1000 = four-screen<br /><br />;----------------------------------------------------------------<br />; variables<br />;----------------------------------------------------------------<br /><br />   .enum $0000<br /><br />   ;NOTE: declare variables using the DSB and DSW directives, like this:<br /><br />   ;MyVariable0 .dsb 1<br />   ;MyVariable1 .dsb 3<br /><br />   .ende<br /><br />   ;NOTE: you can also split the variable declarations into individual pages, like this:<br /><br />   ;.enum $0100<br />   ;.ende<br /><br />   ;.enum $0200<br />   ;.ende<br /><br />;----------------------------------------------------------------<br />; iNES header<br />;----------------------------------------------------------------<br /><br />   .db &quot;NES&quot;, $1a ;identification of the iNES header<br />   .db $08 ;number of 16KB PRG-ROM pages<br />   .db $00 ;number of 8KB CHR-ROM pages<br />   .db $20|MIRRORING ;mapper 2 and mirroring<br />   .dsb 9, $00 ;clear the remaining bytes<br /><br />;----------------------------------------------------------------<br />; program bank 0<br />;----------------------------------------------------------------<br /><br />   .base $8000<br /><br />   ;NOTE: contents of program bank 0 go here<br /><br />   .org $c000<br /><br />;----------------------------------------------------------------<br />; program bank 1<br />;----------------------------------------------------------------<br /><br />   .base $8000<br /><br />   ;NOTE: contents of program bank 1 go here<br /><br />   .org $c000<br /><br />;----------------------------------------------------------------<br />; program bank 2<br />;----------------------------------------------------------------<br /><br />   .base $8000<br /><br />   ;NOTE: contents of program bank 2 go here<br /><br />   .org $c000<br /><br />;----------------------------------------------------------------<br />; program bank 3<br />;----------------------------------------------------------------<br /><br />   .base $8000<br /><br />   ;NOTE: contents of program bank 3 go here<br /><br />   .org $c000<br /><br />;----------------------------------------------------------------<br />; program bank 4<br />;----------------------------------------------------------------<br /><br />   .base $8000<br /><br />   ;NOTE: contents of program bank 4 go here<br /><br />   .org $c000<br /><br />;----------------------------------------------------------------<br />; program bank 5<br />;----------------------------------------------------------------<br /><br />   .base $8000<br /><br />   ;NOTE: contents of program bank 5 go here<br /><br />   .org $c000<br /><br />;----------------------------------------------------------------<br />; program bank 6<br />;----------------------------------------------------------------<br /><br />   .base $8000<br /><br />   ;NOTE: contents of program bank 6 go here<br /><br />   .org $c000<br /><br />;----------------------------------------------------------------<br />; fixed program bank &#40;7&#41;<br />;----------------------------------------------------------------<br /><br />   .base $c000<br /><br />Reset:<br /><br />   ;NOTE: initialization code goes here<br /><br />NMI:<br /><br />   ;NOTE: NMI code goes here<br /><br />IRQ:<br /><br />   ;NOTE: IRQ code goes here<br /><br />;----------------------------------------------------------------<br />; interrupt vectors<br />;----------------------------------------------------------------<br /><br />   .org $fffa<br /><br />   .dw NMI<br />   .dw Reset<br />   .dw IRQ</div><br /><br />CNROM Template:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">;----------------------------------------------------------------<br />; constants<br />;----------------------------------------------------------------<br /><br />PRG_COUNT = 2 ;1 = 16KB, 2 = 32KB<br />CHR_COUNT = 4 ;1 = 8KB, 2 = 16KB, 4 = 32KB<br />MIRRORING = %0001 ;%0000 = horizontal, %0001 = vertical, %1000 = four-screen<br /><br />;----------------------------------------------------------------<br />; variables<br />;----------------------------------------------------------------<br /><br />   .enum $0000<br /><br />   ;NOTE: declare variables using the DSB and DSW directives, like this:<br /><br />   ;MyVariable0 .dsb 1<br />   ;MyVariable1 .dsb 3<br /><br />   .ende<br /><br />   ;NOTE: you can also split the variable declarations into individual pages, like this:<br /><br />   ;.enum $0100<br />   ;.ende<br /><br />   ;.enum $0200<br />   ;.ende<br /><br />;----------------------------------------------------------------<br />; iNES header<br />;----------------------------------------------------------------<br /><br />   .db &quot;NES&quot;, $1a ;identification of the iNES header<br />   .db PRG_COUNT ;number of 16KB PRG-ROM pages<br />   .db CHR_COUNT ;number of 8KB CHR-ROM pages<br />   .db $30|MIRRORING ;mapper 3 and mirroring<br />   .dsb 9, $00 ;clear the remaining bytes<br /><br />;----------------------------------------------------------------<br />; program bank&#40;s&#41;<br />;----------------------------------------------------------------<br /><br />   .base $10000-&#40;PRG_COUNT*$4000&#41;<br /><br />Reset:<br /><br />   ;NOTE: initialization code goes here<br /><br />NMI:<br /><br />   ;NOTE: NMI code goes here<br /><br />IRQ:<br /><br />   ;NOTE: IRQ code goes here<br /><br />;----------------------------------------------------------------<br />; interrupt vectors<br />;----------------------------------------------------------------<br /><br />   .org $fffa<br /><br />   .dw NMI<br />   .dw Reset<br />   .dw IRQ<br /><br />;----------------------------------------------------------------<br />; CHR-ROM banks<br />;----------------------------------------------------------------<br /><br />   .incbin &quot;tiles0.chr&quot;<br />   .incbin &quot;tiles1.chr&quot;<br />   .incbin &quot;tiles2.chr&quot;<br />   .incbin &quot;tiles3.chr&quot;</div><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Sat Mar 13, 2010 12:02 pm</p><hr />
]]></content>
</entry>
</feed>