<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=9&amp;t=5117" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2010-04-01T11:11:37-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=9&amp;t=5117</id>
<entry>
<author><name><![CDATA[chykn]]></name></author>
<updated>2010-04-01T11:11:37-07:00</updated>
<published>2010-04-01T11:11:37-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5117&amp;p=59443#p59443</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5117&amp;p=59443#p59443"/>
<title type="html"><![CDATA[New approach to the fabled NES ethernet adapter]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5117&amp;p=59443#p59443"><![CDATA[
The first two Rev2 boards have been built and shipped.  Here is a pic of the Rev1 board next to the two Rev2 boards in their housing.  I separated the NES232 and MAX202 into two individual modules so they could be placed into the slots of a small Radio Shack project box.  This also allows you to quickly swap the TTL-RS232 converter board for a TTL-USB serial cable.  Having a sturdy container for shipping doesn't hurt, either.<br /><br /><img src="http://www.chykn.com/nes232-first3-small.jpg" alt="Image" /><br /><br />If anyone else wants one, LMK.  Will build and ship one in the project box for $25; need to raise a few shekels to build more.  Can include an AVR910 serial programmer for $5 if you do not have an AVR ISP programmer.  A jumper cable from the MAX202 allows you to switch the serial port to either the NES232 or AVR910.  The first Rev2 board above has an external programmer.  The second Rev2 board has the same programmer on an internal module.  If we are able to get a bootloader working, we will not need the programmer.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4242">chykn</a> — Thu Apr 01, 2010 11:11 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[chykn]]></name></author>
<updated>2010-03-18T07:10:12-07:00</updated>
<published>2010-03-18T07:10:12-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5117&amp;p=58568#p58568</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5117&amp;p=58568#p58568"/>
<title type="html"><![CDATA[New approach to the fabled NES ethernet adapter]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5117&amp;p=58568#p58568"><![CDATA[
The first board is complete and has been tested with the NES.  Here are a few pics.  Low res, had to use the Blackberry.  Kids took my camera batteries for their Leapsters.<br /><br />Top of the PCB<br /><img src="http://www.chykn.com/nes232-r1-top-small.jpg" alt="Image" /><br /><br />Bottom of the PCB<br /><img src="http://www.chykn.com/nes232-r1-bottom-small.jpg" alt="Image" /><br /><br />You'll notice a few traces on the PCB that had to be jumpered due to moving the thru-hole components to the other side.  And the recessed DB-9 connector.  These are corrected on the Rev 1.1 PCB.  The 12-pin header can be used to reprogram the Attiny2313 via ISP.  I was able to get the bootloader to talk to the PC, but haven't been able to load any code yet.  So for now you can only update the firmware by using an ISP programmer.  They are actually VERY easy to build.  I used this one when I was starting off.  It consists of (3) 220 ohm resistors, a 25-pin male connector and some wiring.  Connects to an LPT port on the PC.<br /><a href="http://www.qsl.net/ba1fb/fbprg.gif" class="postlink">http://www.qsl.net/ba1fb/fbprg.gif</a><br /><br />So, if you want one (NES232), let me know.  I'll go ahead and start building a couple boards if there is some interest.<br /><br /><div class="quotetitle">Wookie wrote:</div><div class="quotecontent"><br />I think you guys are missing a much easier solution to the EtherNES idea. Instead of trying to use one of the ethernet chips with address and data lines, why not use the Microchip ENC28J60. It is a 10baseT chip with an SPI interface.<br /></div><br />I read this again and realized this could easily interface with the NES232.  The SPI pins come out on the 12-pin header, so the NES232 could be reprogrammed and jumpered to the ENC28J60.  This would provide the ethernet connectivity and allow the NES232 to communicate by either RS232 or SPI.  The beauty of this is that this change would be transparent to the NES as well as the server.  You wouldn't have to update the game or server code.  If anyone has worked with this chip, please let me know.  Could use some help integrating it into the design.  Maybe swap an ENC28J60 based board for a NES232 if someone has a spare.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4242">chykn</a> — Thu Mar 18, 2010 7:10 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[chykn]]></name></author>
<updated>2010-03-15T11:43:47-07:00</updated>
<published>2010-03-15T11:43:47-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5117&amp;p=58351#p58351</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5117&amp;p=58351#p58351"/>
<title type="html"><![CDATA[New approach to the fabled NES ethernet adapter]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5117&amp;p=58351#p58351"><![CDATA[
<div class="quotetitle">hyarion wrote:</div><div class="quotecontent"><br />it's alot easier to each a PCB if you use copper-fill/pour on the board, that way you don't need to etch away all copper between the tracks. And it's easier to solder the parts if you put the throuhole components on the other side of the PCB<br /></div><br />Good idea.  I went ahead and flipped the DB9 header so it can be mounted from the other side.  All other headers and pins can be mounted from the other side without further modification.  Also moved the DB9 connector out so that it is flush with the board.<br /><br /><div class="quotetitle">hyarion wrote:</div><div class="quotecontent"><br />do you have the schematics/pcb files available somewhere?<br /></div><br />Sure.  If you'd like to add the copper-fill, that would be great.  Here are the DSN and FPC versions of the layout.  Currently unrouted since I just made the change to the DB9 header.  Don't have a schematic made up of the MAX202 portion, but the schematic for the ATTiny2313 portion is on the project page.  And earlier in this thread.  There are a pair of 2-pin headers on the MAX202 portion.  One is to jumper the MAX202 VCC pin to VCC and the other (on the right) goes to the TTL in/out pins.  A header cable will attach these pins to the RX/TX holes on the 8-pin terminal.  This was done so you can either disable the MAX202 or use the MAX202 for another TTL/RS232 circuit.  Could have just traced them straight to the UC, but I prefer the flexibility.<br /><a href="http://www.chykn.com/NES232.dsn" class="postlink">http://www.chykn.com/NES232.dsn</a><br /><a href="http://www.chykn.com/NES232.fpc" class="postlink">http://www.chykn.com/NES232.fpc</a><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4242">chykn</a> — Mon Mar 15, 2010 11:43 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[hyarion]]></name></author>
<updated>2010-03-15T06:11:21-07:00</updated>
<published>2010-03-15T06:11:21-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5117&amp;p=58322#p58322</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5117&amp;p=58322#p58322"/>
<title type="html"><![CDATA[New approach to the fabled NES ethernet adapter]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5117&amp;p=58322#p58322"><![CDATA[
it's alot easier to each a PCB if you use copper-fill/pour on the board, that way you don't need to etch away all copper between the tracks. And it's easier to solder the parts if you put the throuhole components on the other side of the PCB<br /><br />do you have the schematics/pcb files available somewhere?<br /><br />btw, good work <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" /><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3903">hyarion</a> — Mon Mar 15, 2010 6:11 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[chykn]]></name></author>
<updated>2010-03-15T02:29:01-07:00</updated>
<published>2010-03-15T02:29:01-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5117&amp;p=58314#p58314</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5117&amp;p=58314#p58314"/>
<title type="html"><![CDATA[New approach to the fabled NES ethernet adapter]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5117&amp;p=58314#p58314"><![CDATA[
The parts came in Saturday, started building today.  I've never actually designed a surface mount board before, so I got a bit of a crash course.  The etching took a few tries, but in the end it worked.  Made the mistake of not using the bottom copper, so the solder joints on this one are on top.  Like I said, this is my first surface mount board.   <img src="http://forums.nesdev.com/images/smilies/icon_razz.gif" alt=":P" title="Razz" />  I'm going to get this one up and running then rework the PCB on the next board.  Move the DB9 connector so it's flush with the edge and use the bottom copper for the thru-hole solder joints.<br /><br />I've mounted the ATTiny2313 as well as the MAX202 and its caps.  The MAX202 circuit works perfectly; tested with a WRT54G.  Still need to mount the headers, flash the ATTiny2313 then mount the crystal and 22pf caps.  Here is the board as it is now...<br /><br /><img src="http://www.chykn.com/NES232Proto.JPG" alt="Image" /><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4242">chykn</a> — Mon Mar 15, 2010 2:29 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[chykn]]></name></author>
<updated>2010-03-11T12:45:31-07:00</updated>
<published>2010-03-11T12:45:31-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5117&amp;p=57998#p57998</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5117&amp;p=57998#p57998"/>
<title type="html"><![CDATA[New approach to the fabled NES ethernet adapter]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5117&amp;p=57998#p57998"><![CDATA[
I think there is a much faster way to load data if you're using an SNROM cart, maybe other MMC1 boards.  Since the NES232 has 10 unused data pins, you could hook the 8 PortB pins to the PRG data bus and take the place of the WRAM chip.  Remove/disable the WRAM chip and tie the CE &amp; WE lines to the NES232.  The beauty of this is that it could use the exact same hardware and the NES232 could use either method to communicate.  Load bit-by-bit through the controller port or load a byte at a time on the PRG data bus.  The cart would dictate which method to use.  But instead of using 70 instructions to load a byte, you might cut it down to 1 or 2.  The NES232 would detect the CE/WE signals and switch the direction of PortB based on that.<br /><br />The only problem here is that I've never played around with WRAM before.  Am I correct in assuming that you can read byte by using "LDA $6000" and write by using "STA $6000"?  Or is there some other setup you have to do first?  If it's a single statement each, then the NES would have to automatically toggle the WRAM CE in the background.  The toggle would serve two purposes - tell the NES232 to activate as well as increment the buffer pointer if data is ready to be sent.<br /><br />You would have to make two changes to the NES232.  One, add a 12-pin header to the PCB design (8 data, 1 WE, 1CE, VCC &amp; GND).  No big deal, can by done in an hour.  Two, update the firmware to accomodate communicating through PortB.  Probably take an evening or so.  In the end, you could either use controller port B or a jumper cable to the cart itself.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4242">chykn</a> — Thu Mar 11, 2010 12:45 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[chykn]]></name></author>
<updated>2010-03-09T23:16:15-07:00</updated>
<published>2010-03-09T23:16:15-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5117&amp;p=57842#p57842</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5117&amp;p=57842#p57842"/>
<title type="html"><![CDATA[New approach to the fabled NES ethernet adapter]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5117&amp;p=57842#p57842"><![CDATA[
<div class="quotetitle">Memblers wrote:</div><div class="quotecontent"><br />I think it would be good to put a max202 clone on the board<br /></div><br />Yeah, you're right.  Most folks will need to have a turnkey solution.  I went ahead and ordered enough parts to do 5 SMD boards with TTL-RS232 converters and DB9 headers.  The only thing the user will need to do is supply a controller cable and splice it in.  Digikey didn't have those and I'm not giving up my Arkanoid controller.   <img src="http://forums.nesdev.com/images/smilies/icon_razz.gif" alt=":P" title="Razz" />  I'll also have enough parts to do 2 or 3 thru-hole boards with no TTL-RS232 converter.  Someone could use one of those if they wanted to do the USB thing.<br /><br />Will work on the PCB layout over the next few days, hopefully be done by the time the components get here.  Should be able to ship the first board to you Monday.  Might be possibly to interface the Squeedo's UART directly with the NES232.  That way the Squeedo would be able to load game code or whatever without having to go through the second controller port.  Man, that would be cool.  First NES cart to connect to an IP host and load a game on the fly.<br /><br />I put a few of these 8-position terminals on the order...<br /><a href="http://search.digikey.com/scripts/DkSearch/dksus.dll?vendor=0&amp;keywords=ED2606-ND" class="postlink">http://search.digikey.com/scripts/DkSearch/dksus.dll?vendor=0&amp;keywords=ED2606-ND</a><br />This way someone can just strip the controller wires and tighten the screws down.  Like a car speaker amp.  No taping or soldering; very clean and modular.  This will also let us put the MAX232 and NES232 on the same board but still be separate.  You'll be able to change from MAX232 to TTL by simply unscrewing the RX/TX leads and connecting another set of wires to the terminal.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4242">chykn</a> — Tue Mar 09, 2010 11:16 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Memblers]]></name></author>
<updated>2010-03-09T17:46:37-07:00</updated>
<published>2010-03-09T17:46:37-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5117&amp;p=57822#p57822</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5117&amp;p=57822#p57822"/>
<title type="html"><![CDATA[New approach to the fabled NES ethernet adapter]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5117&amp;p=57822#p57822"><![CDATA[
I think it would be good to put a max202 clone on the board, and assume most of the interested users won't want to solder anything to it.  You could drill some big holes for cable tiles to fit through, for strain-relief on both sides of the cables.  max202 by itself doesn't cost much, and I guess one could use a seperate RS232-to-USB adapter if they really had to.<br /><br />I actually have a box of new RS232 cables I never used (since I wanted to go to USB).  It would be cool to have a use for them now maybe.<br /><br />My Squeedo cart uses a right-angle polarized .1" header, it was 6 pins but I'll cut it down to 4 on the later revision (VCC,TX,RX,GND).  It's just TTL-level at that point.  The idea is that one could theoretically use it to control another serial device.  I don't know if anything would be made for it, but if the adapter included that connector, it could make the controller port compatible with the same type of stuff.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=10">Memblers</a> — Tue Mar 09, 2010 5:46 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[chykn]]></name></author>
<updated>2010-03-09T15:57:40-07:00</updated>
<published>2010-03-09T15:57:40-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5117&amp;p=57816#p57816</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5117&amp;p=57816#p57816"/>
<title type="html"><![CDATA[New approach to the fabled NES ethernet adapter]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5117&amp;p=57816#p57816"><![CDATA[
<div class="quotetitle">Memblers wrote:</div><div class="quotecontent"><br />Looking at Digikey, the 11.0592 is a lot more common than 11mhz, might as well spec it.<br /></div><br />Now that you mention it, I've been running at 11MHz because I'm using an ATTiny2313-10 instead of the -20 version.  They only carry stock of the -20 surface mount version, but it costs the same.  We could go up to  18.432MHz for the same price.  I'm set up for surface mount rework, so it wouldn't be a problem.<br /><br /><div class="quotetitle">Memblers wrote:</div><div class="quotecontent"><br />I want to build a few, but don't have a programmer that will do this chip. Which brings up another question, is it possible and worthwhile to fit a bootloader into it?<br /></div><br />Good one.  Yes, there are at least two boot loaders for the ATTiny2313.  The NES232 firmware is only 693 bytes, so that leaves plenty of space for a bootloader.  Looks like we can also bump the RS232 serial rate to 230,400.  Both the 11.0592 and 18.432 crystals would support this.  So, tonight I'll play around with upping the speed to 230,400 and using a bootloader.<br /><br />Two more things we need to make a decision on.  I'm going to come up with a PCB layout for an SMD version.  It will include the ATTiny2313, crystal, (2) 22pf caps and connection points for the NES controller cable.<ul><li>Do we want to have a three post header for the RX/TX/GND and leave the TTL-RS232 conversion to the user or go ahead and include a MAX232 &amp; caps in the circuit?  I ask because of the earlier discussion about using an FT232 USB converter.  Some like me won't even use a converter, some will need USB and some will want the good old RS232.<br /></li><li>What kind of header do we want to connect the controller cable?  We could either have 5 empty pads for the user to solder the cable to or put a standard 10-pin header on it.</li></ul><br />Of course, we could give the board one 10-pin header for all connections.  Then people could just plug a standard 10-pin header cable to it and use any of the three options (TTL, USB, RS232) without modding the board.  Just wire the header cable to whatever.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">       +5v CLK LAT DATA GND<br />       +-------------------+<br />NES    | 0   0   0   0   0 |<br />       |                   |<br />Serial | 0   0   0   0   0 |<br />&#40;TTL&#41;  +-------------------+<br />            TX  RX      GND   </div><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4242">chykn</a> — Tue Mar 09, 2010 3:57 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Memblers]]></name></author>
<updated>2010-03-09T14:22:54-07:00</updated>
<published>2010-03-09T14:22:54-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5117&amp;p=57813#p57813</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5117&amp;p=57813#p57813"/>
<title type="html"><![CDATA[New approach to the fabled NES ethernet adapter]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5117&amp;p=57813#p57813"><![CDATA[
The MCU is $1 less at <a href="http://app.arrownac.com/aws/pg_webc/0,1086,,00.html?application=SEARCH&amp;appid=nac&amp;event=1020&amp;docid=41667189S7245522N3744" class="postlink">Arrow</a>, for a smaller quantity anyways.  They don't stock a usable crystal though.<br /><br />Looking at Digikey, the 11.0592 is a lot more common than 11mhz, might as well spec it.<br /><br />I want to build a few, but don't have a programmer that will do this chip.  Which brings up another question, is it possible and worthwhile to fit a bootloader into it?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=10">Memblers</a> — Tue Mar 09, 2010 2:22 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[chykn]]></name></author>
<updated>2010-03-08T16:20:28-07:00</updated>
<published>2010-03-08T16:20:28-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5117&amp;p=57743#p57743</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5117&amp;p=57743#p57743"/>
<title type="html"><![CDATA[New approach to the fabled NES ethernet adapter]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5117&amp;p=57743#p57743"><![CDATA[
Okay, here's the schematic.  The serial RX/TX lines would need to go to a TTL to RS232 converter or similar device unless you're hooking it up to another TTL device.  Just search "TTL RS232" on Ebay.  There are also TTL to USB devices available, but I haven't tested any out myself.  I imagine they'd work just fine.  For now, please contact me for the firmware.  Not quite ready to post publicly.  I want to make sure this behaves as expected before letting untested firmware go in the wild.<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NES232 ASCII Schematic<br />Pete Brown, 3/6/2010<br /><br />                    ATTINY2313<br />                    ___________<br />                    | 1    20 |--- Vcc +5v<br />Serial RX--------&gt;--| 2    19 |<br />Serial TX--------&lt;--| 3    18 |<br />XTAL--+-------------| 4    17 |<br />XTAL--|-+-----------| 5    16 |<br />      | | CLOCK--&gt;--| 6    15 |<br />      | | LATCH--&gt;--| 7    14 |<br />      | |  DATA--&lt;--| 8    13 |<br />      | |           | 9    12 |<br />      | |  GND--+---| 10   11 |<br />      | |       |   -----------<br />      | +---&#41;|--+<br />      +-----&#41;|--+<br /><br />* The two caps tying XTAL to GND are 22pf ceramic<br />* XTAL is 11MHz &#40;11.0592 is perfect, but 11 will be fine&#41; <br /></div><br /><br />If you want to start developing with one of these and you don't have the facilities to build your own, let me know.  If there's enough interest I'll get enough to do 10 boards or so from DigiKey.  Will probably cost around $20 to build and ship.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4242">chykn</a> — Mon Mar 08, 2010 4:20 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[hyarion]]></name></author>
<updated>2010-03-06T09:59:42-07:00</updated>
<published>2010-03-06T09:59:42-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5117&amp;p=57628#p57628</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5117&amp;p=57628#p57628"/>
<title type="html"><![CDATA[New approach to the fabled NES ethernet adapter]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5117&amp;p=57628#p57628"><![CDATA[
ooops, i meant ft, not fl sorry for that :S<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3903">hyarion</a> — Sat Mar 06, 2010 9:59 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[chykn]]></name></author>
<updated>2010-03-06T08:57:06-07:00</updated>
<published>2010-03-06T08:57:06-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5117&amp;p=57626#p57626</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5117&amp;p=57626#p57626"/>
<title type="html"><![CDATA[New approach to the fabled NES ethernet adapter]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5117&amp;p=57626#p57626"><![CDATA[
<div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />how are you connecting it to your computer?<br /></div><br />The cans and a string didn't work - had high hopes for that, too.  I play around with WRT54G's &amp; OpenWRT, so I keep a MAX232 chip, DB9 connector and .1uf caps on my breadboard.  Jumpered that to the ATTiny2313 and hooked it up to COM1 on the laptop.  Good to go.<br /><br />It will actually easier to get it up and running on the WRT54G because you won't have to use the MAX232 chip.  You could go straight TTL from the ATTiny2313 to the second UART port on the WRT54G.  Or Buffalo, whatever your preference.  Then the WRT54G would be the IP proxy.  That would be pretty sweet since it wouldn't require a PC for operation and you could use it as a wireless client.  Cheaper than developing an embedded solution and much more readily available.<br /><br />You're right about the USB support.  That's the way most folks would want to go if they wanted to hook it to the PC.  I've never played with the FL232RL chips; will have to try that out sometime.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4242">chykn</a> — Sat Mar 06, 2010 8:57 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[hyarion]]></name></author>
<updated>2010-03-06T08:09:48-07:00</updated>
<published>2010-03-06T08:09:48-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5117&amp;p=57623#p57623</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5117&amp;p=57623#p57623"/>
<title type="html"><![CDATA[New approach to the fabled NES ethernet adapter]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5117&amp;p=57623#p57623"><![CDATA[
how are you connecting it to your computer? IIRC a max232 is needed to put between the attiny and the serial port due to voltage diffs (or fl232rl for usb support)<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3903">hyarion</a> — Sat Mar 06, 2010 8:09 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[chykn]]></name></author>
<updated>2010-03-06T01:30:00-07:00</updated>
<published>2010-03-06T01:30:00-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5117&amp;p=57617#p57617</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5117&amp;p=57617#p57617"/>
<title type="html"><![CDATA[New approach to the fabled NES ethernet adapter]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5117&amp;p=57617#p57617"><![CDATA[
Just about wrapped up the initial hardware design tonight...<br /><ul><li>Finally got the NES232 talking to the NES using the full duplex method.</li><li>The incoming buffer is working, up to 112 bytes can be queued.</li><li>The full duplex method added enough cycles that the NES transmits and receives a bit slower than the 115,200 bps serial link.  This means we do not need an outgoing buffer.  Each bit takes ~16us to transmit.  If my math is correct, that's around 62,500 bps.  If you're doing bulk reads, this CAN be increased to over 100,000 bps by eliminating the instructions necessary for transmitting.</li><li>NULL bytes from NES - the MCU was receiving 0x00 bytes and transmitting them even if the NES had no outgoing data.  Applied the same rules as the inbound, first byte must be the length descriptor.  Done.</li><li>Had to modify the method - replaced ROL with ASL due to unwanted bits coming back on the right and screwing up the following ORA statement.  Also had to add another step to pull the outgoing bit from Carry instead of the LSB.  Don't ask why I did that to begin with - seemed like a good idea at the time.   <img src="http://forums.nesdev.com/images/smilies/icon_razz.gif" alt=":P" title="Razz" /> </li></ul>I got to thinking about the congestion management.  Since the NES should be sending ackowledgements anyway, it can send "Received X bytes" upstream after it gets done receiving the commands for that data exchange session.  Then the host will know the space is free and proceed to send.<br /><br />So, I'm done with it for now.  Here's a recap of where we are....<br /><ul><li>NES232, based on an Atmel ATTiny2313 @ 11MHz</li><li>Talks to the PC via RS232 @ 115,200 bps</li><li>Talks to the NES via 2nd controller port @ ~62,500 bps</li><li>Uses a buffer for incoming commands</li><li>Sends outgoing data on the fly</li><li>Congestion management will be handled via NES ACK to the upstream host.</li></ul><br />Feedback would be greatly appreciated.  Thanks!<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4242">chykn</a> — Sat Mar 06, 2010 1:30 am</p><hr />
]]></content>
</entry>
</feed>