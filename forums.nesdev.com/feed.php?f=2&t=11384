<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=2&amp;t=11384" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2014-07-02T13:21:30-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=2&amp;t=11384</id>
<entry>
<author><name><![CDATA[Kasumi]]></name></author>
<updated>2014-07-02T13:21:30-07:00</updated>
<published>2014-07-02T13:21:30-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11384&amp;p=130564#p130564</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11384&amp;p=130564#p130564"/>
<title type="html"><![CDATA[Re: Left button crashing code when checking position...]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11384&amp;p=130564#p130564"><![CDATA[
<div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />I have to agree that this looks like an out of range branch that was assembled incorrectly...<br /></div><br />Still waiting for the test case. <br /><br />I have the code in hand (as was implied earlier by JoeGtake2's last post, I'm giving some help through PM), and there's definitely some other stuff that needs fixing before I consider this a nesasm failure. Currently, the program wraps the PC across all the RAM (as in $0000-$8000 where the program actually starts) because it hits an RTS before a JSR. That means whatever opcode the RAM for buttons represents could be one that kills the CPU. Or it could be moving left at walk speed changes any of the meta sprites to a value that kills the CPU.<br /><br />If after fixing the things that cause this, it's still broken I'll be happy to accept it's nesasm AND there will be a test case.<br /><br />Edit: Fixed, totally wasn't nesasm. One issue was described above, another problem was an RTI after an .org statement after the NMI, instead of an RTI after the NMI.  <img src="http://forums.nesdev.com/images/smilies/icon_cool.gif" alt="8-)" title="Cool" /><br /><br />Edit2: The technical reason for why this happened, and why adding and removing code made a difference is because nesasm assembles undefined bytes as $FF. $FF is ISC absolute,x. The code ran past the end of the NMI into a long string of $FFs with exactly one $40 (RTI). Recall that the RTI was also after an .org statement, so changing previous code would change its relative position to that code, rather than always having the same number of $FFs between the final instruction and the RTI. Because ISC is absolute, the program could potentially skip the single RTI depending on how many bytes of $FF preceded it. (Running either ISC $40FF,x or ISC $FF40,x). If the RTI happened to be skipped in this manner, the program would run back through $FFFF and start executing the RAM. The opcode $02 (which happens to be what the RAM is set to when only left is pressed on the joypad) kills the CPU. <br /><br />Edit3: In fact, I just checked. The program would not crash if both left and down are pressed, or if both left and up were pressed. It's just that specifically $02 crashes the CPU.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3504">Kasumi</a> — Wed Jul 02, 2014 1:21 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2014-07-02T12:54:20-07:00</updated>
<published>2014-07-02T12:54:20-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11384&amp;p=130562#p130562</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11384&amp;p=130562#p130562"/>
<title type="html"><![CDATA[Re: Left button crashing code when checking position...]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11384&amp;p=130562#p130562"><![CDATA[
I have to agree that this looks like an out of range branch that was assembled incorrectly... It's the second time you say that removing seemingly unrelated code prevents the crash.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Wed Jul 02, 2014 12:54 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[koitsu]]></name></author>
<updated>2014-07-02T11:48:28-07:00</updated>
<published>2014-07-02T11:48:28-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11384&amp;p=130548#p130548</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11384&amp;p=130548#p130548"/>
<title type="html"><![CDATA[Re: Left button crashing code when checking position...]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11384&amp;p=130548#p130548"><![CDATA[
NESASM3 (specifically version 3.1) can generate what is called a &quot;code listing&quot;, which is basically an ASCII representation of what the assembled code looks like (including all bytes of opcodes and operands).  A code listing would provide the necessary insights to determine if the branches are going to the right place or not.  Taken from the NESASM3 docs:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">         -l #   Control output of the listing file:<br /><br />                    0 - disable completely the listing file even if the<br />                        LIST directive is used in the input file<br />                    1 - minimun level; code produced by DB, DW and DEFCHR<br />                        will not be dumped<br />                    2 - normal level; only code produced by DEFCHR will not<br />                        be dumped<br />                    3 - maximun level; all the code is dumped in the<br />                        listing file<br /><br />                The default level is level 2.<br /></div><br /><br />I believe the default level (2), ex. <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">-l 2</tt> would be fine.  That's dash-lowercase-ELL, not dash-one.<br /><br />Otherwise I'd consider ceasing use of such broken assemblers; when an assembler itself contains bugs of this nature and doesn't report such errors, that should pretty much be a deal-breaker, i.e. it's time to look at using asm6 or ca65 (pure opinion and not really relevant to this thread per se: I tend to recommend the former, while the latter has lots of capability the learning curve is humongous and you'll spend more time screwing around with the &quot;setup&quot; of the assembler/project than you will actually writing code).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3">koitsu</a> — Wed Jul 02, 2014 11:48 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Quietust]]></name></author>
<updated>2014-07-02T11:35:36-07:00</updated>
<published>2014-07-02T11:35:36-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11384&amp;p=130544#p130544</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11384&amp;p=130544#p130544"/>
<title type="html"><![CDATA[Re: Left button crashing code when checking position...]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11384&amp;p=130544#p130544"><![CDATA[
Incidentally, having an SEC immediately after a (not-taken) BCC instruction is indeed redundant - BCC only branches if carry is clear, so if it didn't branch then carry must be set. The fact that removing a single byte causes the problem to go away suggests that this is indeed a problem with trying to branch too far, but we'd need to see the entire program to be able to confirm that possibility.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=7">Quietust</a> — Wed Jul 02, 2014 11:35 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[JoeGtake2]]></name></author>
<updated>2014-07-02T10:08:20-07:00</updated>
<published>2014-07-02T10:08:20-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11384&amp;p=130538#p130538</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11384&amp;p=130538#p130538"/>
<title type="html"><![CDATA[Re: Left button crashing code when checking position...]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11384&amp;p=130538#p130538"><![CDATA[
Alright, the plot thickens...<br /><br />With some help from Kasumi, I did a little housekeeping with the code.   It's a tiny bit cleaner, and I have found the one line that is causing the problem.  Setting the carry flag (SEC) in the left direction is what causes the 'crash' (the game freezes, the emulator does not crash...experience with other programming languages makes me think it is getting stuck in a loop).<br /><br />What's bizarre, my UP direction utilizes the SEC and does not crash.  Left, however, crashes.  I'll post the updated code snippet for both of those directions:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent"><br />movePlayerLeft:<br />   LDA buttons<br />   AND #%00000010<br />   BEQ movePlayerUp<br />   LDA $0203<br />   CMP #$08<br />   BCC movePlayerUp<br />   SEC        ;; IF I REMOVE THIS, EVERYTHING WORKS FINE...<br />   SBC #playerWalkSpeed<br />   STA $0203<br />   LDA $0207<br />   SBC #playerWalkSpeed<br />   STA $0207<br />   LDA $020B<br />   SBC #playerWalkSpeed<br />   STA $020B<br />   LDA $020F<br />   SBC #playerWalkSpeed<br />   STA $020F<br />   <br />movePlayerUp:<br />   LDA buttons<br />   AND #%00001000<br />   BEQ movePlayerRight<br />   LDA $0200<br />   CMP #$08<br />   BCC movePlayerRight<br />   SEC        ;;THIS WORKS WHETHER I REMOVE IT OR LEAVE IT IN<br />   SBC #playerWalkSpeed<br />   STA $0200<br />   LDA $0204<br />   SBC #playerWalkSpeed<br />   STA $0204<br />   LDA $0208<br />   SBC #playerWalkSpeed<br />   STA $0208<br />   LDA $020C<br />   SBC #playerWalkSpeed<br />   STA $020C<br /><br /></div><br /><br /><br />I'm fairly certain that I understand that generally prior to using ADC, clear the carry flag and prior to using SBC, set the carry flag.  I know it is more complicated than that, but that seems to be the general rule for what I have gleaned.  And it seems to work fine for UP in the exact same context...but not for LEFT.<br /><br />Any further thoughts on why this could be the case?<br /><br />You guys rock.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6590">JoeGtake2</a> — Wed Jul 02, 2014 10:08 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Omegamatrix]]></name></author>
<updated>2014-07-01T23:39:51-07:00</updated>
<published>2014-07-01T23:39:51-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11384&amp;p=130522#p130522</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11384&amp;p=130522#p130522"/>
<title type="html"><![CDATA[Re: Left button crashing code when checking position...]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11384&amp;p=130522#p130522"><![CDATA[
tokumaru gave the best advice here. You'll always solve your problems way quicker by simply seeing what value is actually getting loaded with a debugger.<br /><br /><br />If it is not a branch problem, then maybe some other things you might try/check are:<br />- check if 'buttons' is really, truly getting updated with the correct bit for the left direction.<br />- I noticed those 3 lines of code load X. Make sure that you are not depending on X for a different value later in the code.<br />- make sure you are not getting stuck in an endless loop branching to 'movePlayerUp'. Try hardcoding the branch to be always taken, i.e.:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">   LDX #$07             ;; to always branch<br />   CPX #$08             ;; Compare X to position towards the left of the screen<br />   BCC movePlayerUp  ;; if close to the edge, skip the rest and jump down to movePlayerUp</div><br />If that works then repeat with a case that will never branch.<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">   LDX #$09             ;; will never branch<br />   CPX #$08             ;; Compare X to position towards the left of the screen<br />   BCC movePlayerUp  ;; if close to the edge, skip the rest and jump down to movePlayerUp</div><br /><br />I can't help you out much more then that as I'm new to the NES.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6558">Omegamatrix</a> — Tue Jul 01, 2014 11:39 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Kasumi]]></name></author>
<updated>2014-07-01T22:35:34-07:00</updated>
<published>2014-07-01T22:35:34-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11384&amp;p=130521#p130521</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11384&amp;p=130521#p130521"/>
<title type="html"><![CDATA[Re: Left button crashing code when checking position...]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11384&amp;p=130521#p130521"><![CDATA[
Really sure the branching thing has been fixed a long time ago, though. Because I'm sure I'd have encountered it by now, if not, having used it for the last five years. I encourage you to create a test case in the latest version of the software. I'd be happy to be proven wrong. It is open source, the problem could even be fixed if it does still exist. To get off topic, maybe this is why I do not have much interest in releasing software other than games. People will remember and post about the bugs far after they've been fixed. People will make bug reports without having the latest version of the software. And all of that sounds so fun. With games people might lose their save or progress, but not actual work which is easier to deal with.<br /><br />I don't deny nesasm has other problems, but at least post about those. Or create a test case for this branching error in the program <a href="http://www.nespowerpak.com/nesasm/NESASM3.zip" class="postlink">found here.</a> If you can, I'll take my lumps.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3504">Kasumi</a> — Tue Jul 01, 2014 10:35 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Omegamatrix]]></name></author>
<updated>2014-07-01T21:50:31-07:00</updated>
<published>2014-07-01T21:50:31-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11384&amp;p=130520#p130520</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11384&amp;p=130520#p130520"/>
<title type="html"><![CDATA[Re: Left button crashing code when checking position...]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11384&amp;p=130520#p130520"><![CDATA[
<div class="quotetitle">lidnariq wrote:</div><div class="quotecontent"><br />Are you perhaps using NESASM? It's kind of famous for not giving an error on an out of range argument (i.e. the final BCC may be trying to jump more than 128 bytes earlier in the code).<br /></div><br />Wow.  <img src="http://forums.nesdev.com/images/smilies/icon_eek.gif" alt=":shock:" title="Shocked" /> That is just not practical to use without branch error checking. Good to know.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6558">Omegamatrix</a> — Tue Jul 01, 2014 9:50 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Kasumi]]></name></author>
<updated>2014-07-01T18:39:31-07:00</updated>
<published>2014-07-01T18:39:31-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11384&amp;p=130512#p130512</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11384&amp;p=130512#p130512"/>
<title type="html"><![CDATA[Re: Left button crashing code when checking position...]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11384&amp;p=130512#p130512"><![CDATA[
Are you open to posting a rom?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3504">Kasumi</a> — Tue Jul 01, 2014 6:39 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2014-07-01T16:37:36-07:00</updated>
<published>2014-07-01T16:37:36-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11384&amp;p=130506#p130506</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11384&amp;p=130506#p130506"/>
<title type="html"><![CDATA[Re: Left button crashing code when checking position...]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11384&amp;p=130506#p130506"><![CDATA[
I can't catch anything obvious from looking at the code. Which emulator are you using? Does the program crash in other emulators as well? You should try debugging it in FCEUX to see if the CPU is doing what you think it should be doing. Open the debugger and set a breakpoint for, say, reads to $0203. So whenever $0203 is read (which happen right in the middle of the problematic code), the emulator will pause, and from there you can step through the instructions and see what the CPU is doing.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Tue Jul 01, 2014 4:37 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[JoeGtake2]]></name></author>
<updated>2014-07-01T16:22:35-07:00</updated>
<published>2014-07-01T16:22:35-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11384&amp;p=130505#p130505</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11384&amp;p=130505#p130505"/>
<title type="html"><![CDATA[Re: Left button crashing code when checking position...]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11384&amp;p=130505#p130505"><![CDATA[
Yes, I am using NESASM3.  What you're suggesting is possible, I suppose, but I don't think so.  Again, this is not the last direction...the two that follow work flawlessly (and jump the same distance in the code), unless I am misunderstanding.  Also, when I tried to diagnose the problem by trying to jump down to the end of the directions, it told me it was out of range (and I'm assuming that's what it would do if this were true).  Thank you for the suggestion though!  And it's good to know that NESASM potentially has that issue, I will watch for it.<br /><br />Any other thoughts or suggestions, lidnariq or anyone else?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6590">JoeGtake2</a> — Tue Jul 01, 2014 4:22 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[lidnariq]]></name></author>
<updated>2014-07-01T16:18:30-07:00</updated>
<published>2014-07-01T16:18:30-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11384&amp;p=130503#p130503</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11384&amp;p=130503#p130503"/>
<title type="html"><![CDATA[Re: Left button crashing code when checking position...]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11384&amp;p=130503#p130503"><![CDATA[
Are you perhaps using NESASM? It's kind of famous for not giving an error on an out of range argument (i.e. the final BCC may be trying to jump more than 128 bytes earlier in the code).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3512">lidnariq</a> — Tue Jul 01, 2014 4:18 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[JoeGtake2]]></name></author>
<updated>2014-07-01T16:14:05-07:00</updated>
<published>2014-07-01T16:14:05-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11384&amp;p=130502#p130502</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11384&amp;p=130502#p130502"/>
<title type="html"><![CDATA[Left button crashing code when checking position...]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11384&amp;p=130502#p130502"><![CDATA[
Hello, all.  Relatively new to Assembly, but actually very proud of some headway I've made.  I'm absolutely positive there are more efficient ways to do what I am doing, but as I learn the code, I am muscling through on my own trying to really understand what it is I am doing.<br /><br />Thanks to a plethora of online resources, I have been able to create a metasprite made up of four sprites that move together around the room based on joystick input.  I am trying to keep them contained within the screen area.  Up, right, and down are all successfully working.  However, whenever I press Left, the game freezes in the emulator.  If I remove the three lines of code that check for position before moving, it works fine.  This checking position method works in ALL the other directions, so I'm not sure why left is crashing things.<br /><br />For brevity, I'll just provide a working piece of the code (for Down) and then the problem piece (left).  Let me know if you need more in order to help track down the issue!<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">MovePlayerDown:   ;; THIS IS WORKING FINE, as are all directions except left.<br />   LDA buttons<br />   AND #%00000100 ;; if down is pressed<br />   BEQ movePlayerLeft ;; if these things are not true, jump to movePlayerLeft<br />   LDX $0200       ;;Load the player's Y position into X<br />   CPX #$D4; compare the Y value to bottom of screen<br />   BCS movePlayerLeft   ;; if the player is too close to the bottom, skip the rest of the code and jump to movePlayerLeft<br />   ;;Move Player part...need to move all four sprites<br />   LDA $0200<br />   CLC<br />   ADC #playerWalkSpeed<br />   STA $0200<br />   LDA $0204<br />   CLC<br />   ADC #playerWalkSpeed<br />   STA $0204<br />   LDA $0208<br />   CLC<br />   ADC #playerWalkSpeed<br />   STA $0208<br />   LDA $020C<br />   CLC<br />   ADC #playerWalkSpeed<br />   STA $020C<br />   <br />movePlayerLeft:   ;; You'll notice, this is coded the same way, yet causes the game to freeze.<br />   LDA buttons<br />   AND #%00000010 ;; if left is pressed<br />   BEQ movePlayerUp ;; if these things aren't true, jump to movePlayerUp <br />             ;;;;;;;;THIS IS THE PROBLEM;;;;;;;;;;;<br />   LDX $0203            ;; load the x value into X<br />   CPX #$08             ;; Compare X to position towards the left of the screen<br />   BCC movePlayerUp  ;; if close to the edge, skip the rest and jump down to movePlayerUp<br />   ;;;;;;;;;;END PROBLEM;;;;;;;;;;;;;;;;;;;<br />   ;;Move Player part...need to move all four sprites<br />   LDA $0203<br />   SEC<br />   SBC #playerWalkSpeed<br />   STA $0203<br />   LDA $0207<br />   SEC<br />   SBC #playerWalkSpeed<br />   STA $0207<br />   LDA $020B<br />   SEC<br />   SBC #playerWalkSpeed<br />   STA $020B<br />   LDA $020F<br />   SEC<br />   SBC #playerWalkSpeed<br />   STA $020F</div><br /><br />I realize there are probably many more efficient ways to do all of the above, and I'm very open to anyone providing me info...but I genuinely want to know why this would cause the game to crash in the emulator even if there is a better solution.<br /><br />Thanks!<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6590">JoeGtake2</a> — Tue Jul 01, 2014 4:14 pm</p><hr />
]]></content>
</entry>
</feed>