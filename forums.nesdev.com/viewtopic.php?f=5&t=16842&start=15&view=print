<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Can you write windows app in regular C++?</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Can you write windows app in regular C++?</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=5&amp;t=16842">http://forums.nesdev.com/viewtopic.php?f=5&amp;t=16842</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>2</strong> of <strong>2</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>DementedPurple</b> [ Wed Dec 20, 2017 3:02 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Can you write windows app in regular C++?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Another question, what's a handle? What benefits does it have from using a normal pointer or index?<br />of course, not a handle on a drawer, I'm talking about stuff like a handle to a palette or whatever

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Wed Dec 20, 2017 3:12 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Can you write windows app in regular C++?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />In theory, a handle lets the operating system's memory manager move the underlying data structure around in memory so that allocation and deallocation of data structures doesn't leave the heap <a href="https://stackoverflow.com/q/3770457/2738262" class="postlink">fragmented</a>. It's the same reason we refer to files by name* instead of disk sector number, so that data can still be located after the file system has moved it to another part of the same disk.<br /><br />In classic Mac OS and its Apple II port GS/OS, a handle was a pointer to a data structure that was opaque other than that it began with a pointer to the actual data. In UNIX, MS-DOS 2 and later, and Windows, a file handle is an index into a kernel-managed list of open files or streams. A few file handles are predefined in UNIX: 0 is standard input, 1 is standard output, and 2 is standard error output.<br /><br /><br /><span style="font-size: 85%; line-height: normal">* Or inode number on file systems that use that concept</span>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>adam_smasher</b> [ Wed Dec 20, 2017 3:16 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Can you write windows app in regular C++?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />That analogy doesn't sound right to me. Loosely, an object is a thing, like a <em>specific</em> folder, whereas a class is a <em>kind of thing</em>, as in the <em>idea</em> of a folder in general.<br /><br />Are you familiar with the idea of structures in plain ol' C? Objects in C++ are very similar, but have more power of expression and abstraction. But in general you build a class whenever you want to express a new kind of idea in your program. If you were making a drawing program, you might have classes for points, lines, circles, and so on, because those are the things your program operates on. If you were designing a GUI library, you'd have classes for windows, buttons, and so on. In a game, you might have classes for maps, entities in the game world, images, and so on. And so on.<br /><br />Your takeaway should be this: <strong>The idea is that you write your code in terms of the entities it deals with, rather than worrying about the underlying representation of those entities.</strong><br /><br />Also, don't confuse the WinAPI idea of a &quot;window class&quot; with a C++ class. Windows was originally designed to be coded against in plain C (and Pascal, I think). The idea is similar in that they both define a &quot;kind&quot; of thing, but they're totally different implementations of that idea.<br /><br />A &quot;handle&quot; is just some way of referring to something. The point is that usually you don't care how that handle is represented: it could be a pointer, or it could be an index into a table, or a string that's looked up. One advantage of using a handle rather than just a pointer is that you can add indirection: you can move things around in memory without invalidating all your handles, but raw pointers would become invalid. Another advantage is that you could, say, expand from 16- to 32- to 64-bit pointers over the course of 30 years without anyone operating on your handles needing to make any changes.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>DRW</b> [ Wed Dec 20, 2017 3:18 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Can you write windows app in regular C++?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The folder/file analogy is total nonsense.<br /><br />The class is the type. The object is the variable.<br />That's it. That's the most straight-forward analogy.<br /><br />If integer was a class and you declare <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">int i;</tt>, then <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">int</tt> would be the class and <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">i</tt> your object.<br /><br /><br />The difference betwen classes and simple data types is this:<br /><br /><br />1. A class holds a whole collection of other data types. I.e. a class <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">Person</tt> may hold two string variables <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">FirstName</tt> and <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">LastName</tt> and a date variable <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">Birthdate</tt>.<br /><br />In this way, a class is pretty similar to structs: A container that enables you to declare a whole bunch of predefined variables by simply writing the declaration of one variable.<br /><br /><br />2. A class can have functions. So, your object that holds values to all these variables can call functions of its class to manipulate its own variables or to output them or whatever.<br /><br />I.e. a class called <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">Player</tt> may have member variables for the x and y position. And it has the function <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">MoveRight</tt>. This function checks whether the movement wouldn't end at a wall and then updates the x coordinate accordingly.<br /><br />So, when you declare <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">Player mario;</tt>, then you basically declare two integer variables put into one variable name called <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">mario</tt>.<br />And when you call <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">mario.MoveRight&#40;&#41;</tt>, then, if you have programmed the function to do this, Mario's x variable would be incremented.<br /><br /><br />3. Classes have encapsulation: You can declare certain variables and functions as private, so that only the functions that belong to the class itself can call or update them.<br /><br />For example, you don't want the programmer to call <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">mario.X = 5</tt> directly. So, you declare the x and y variable private and declare public class functions instead, so that the programmer has to call <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">mario.SetXPosition&#40;5&#41;</tt> instead. This enables you to let the <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">SetXPosition</tt> check the parameter first and to give an error if the value is invalid for your specific use.<br />This way, programmers who use your class cannot change the data arbitrarily, but only within the rules that you allow by writing functions for data manipulation.<br /><br /><br />4. Inheritance and polymorphism: Learn this when you have understood the basic properties of classes that I wrote about above.<br /><br /><br />About handles:<br /><br />Handles are just a Microsoft way of calling pointers that point to Windows resources.<br />You create a window, so the pointer that references the window is called HWND (handle to a window).<br />You create a bitmap in memory, so the pointer that points to the bitmap is called HBITMAP.<br />It's just a naming convention.<br /><br />That was probably done because you never actually work with the objects themselves.<br /><br />I.e. declaring <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">HBITMAP myBitmap</tt> doesn't mean that <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">myBitmap[0]</tt> points to the first pixel and <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">myBitmap[1]</tt> points to the next pixel.<br /><br />The pointer points to something that you're not supposed to know exactly what it is. All you need to know is that it's somehow connected to a bitmap and that the WinAPI functions are able to use it for bitmap manipulation.<br />But you're not supposed to dereference the pointer and to directly access the contents of the memory location that the pointer points to.<br /><br />That's why it's called a handle. Because PBITMAP (pointer to a bitmap) would mean that you can dereference the pointer and access the bitmap memory directly.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Wed Dec 20, 2017 3:21 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Can you write windows app in regular C++?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />If you want a better file system analogy for classes and objects: An object is to a file as a class is to a file format.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>HihiDanni</b> [ Sun Dec 24, 2017 8:40 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Can you write windows app in regular C++?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />If it's C++ GUI programming you're after, I would strongly recommend using Qt. It has a lot of useful infrastructure and has far less resource micromanagement, yet does more, and is more portable than, Win32/MFC. It's well-documented, and far easier to understand than anything on MSDN. It even has its own IDE, Qt Creator, which I've found to be quite a bit cleaner and easier to use than Visual Studio.<br /><br />A quick tutorial I found: <!-- m --><a class="postlink" href="https://prognotes.net/2016/11/qt-5-hello-world-tutorial-using-qt-creator/">https://prognotes.net/2016/11/qt-5-hell ... t-creator/</a><!-- m --><br />There's also this Notepad tutorial in the official Qt documentation: <!-- m --><a class="postlink" href="http://doc.qt.io/qt-5/gettingstartedqt.html">http://doc.qt.io/qt-5/gettingstartedqt.html</a><!-- m -->

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>DementedPurple</b> [ Thu Dec 28, 2017 11:45 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Can you write windows app in regular C++?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Yeah, but I can't use QT because considering I'm only 13 and I still make money by mowing my parents lawn, I simply don't have enough money to spend $295 dollars a month on a school project

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Thu Dec 28, 2017 11:47 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Can you write windows app in regular C++?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The GNU Lesser General Public License (GNU LGPL) version of Qt does not cost $295.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>DRW</b> [ Thu Dec 28, 2017 11:54 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Can you write windows app in regular C++?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Is there anything specific you want to program in Windows?<br /><br />For example, if your goal is to program a video game, then there are specific game libraries like SDL or SFML. They create the window for you and you don't need to deal with this at all and can start right away with the game-related stuff.<br /><br />If you really need to program a GUI application for school, I would suggest not to use C++ and the WinAPI at all, but work with C# and WinForms: Much easier, less error-prone and a good GUI designer in even the most basic versions of Visual Studio. Also, C# is an overall nicer language than C++.<br /><br />If it has to be C++, you can have a look at this:<br /><!-- m --><a class="postlink" href="https://en.wikipedia.org/wiki/List_of_platform-independent_GUI_libraries">https://en.wikipedia.org/wiki/List_of_p ... _libraries</a><!-- m --><br /><br />Maybe wxWidgets or any other of the free libraries is something for you.<br />(But even Qt seems to have a free license, so maybe you don't need to pay for it at all in certain circumstances.)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Punch</b> [ Tue Jan 30, 2018 11:51 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Can you write windows app in regular C++?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />You can also do Java and Swing, too. Most Java IDEs I know have a visual GUI editor so you don't have to code everything by hand. If you already have experience in Java or think you can learn it quickly enough to be worth it, you should try it. That could also be a nice way of learning Object Oriented Programming since using classes is definitely not optional here. <img src="./images/smilies/icon_lol.gif" alt=":lol:" title="Laughing" /> <br /><br />Here's something I'm developing for my game:<br /><br /><!-- m --><a class="postlink" href="https://i.imgur.com/frySuJ6.png">https://i.imgur.com/frySuJ6.png</a><!-- m --><br /><br />Basically everything visual, ie. creating and positioning buttons, menus, etc. was done via drag and drop in an editor, you only have to code what happens when a button is pressed and stuff like that (events). Also Java's Graphics2D library is very simple to use and kinda resembles graphical BASIC, you can draw lines, solids, textures, etc. easily by simply overriding a JPanel's paintComponent() method. (that's what my middle panel uses).<br /><br />For example... this is a simplified gridless version of my middle panel's drawing routines.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp; <br />public class GrafxPanel extends javax.swing.JPanel {<br />&nbsp; &nbsp; private final int dungeonSize = 16;<br />&nbsp; &nbsp; private final int edgeOffsetX = 20;<br />&nbsp; &nbsp; private final int edgeOffsetY = 20;<br />&nbsp; &nbsp; <br />&nbsp; &nbsp; Dungeon dungeon;<br /><br />(...)<br /><br />@Override<br />&nbsp; &nbsp; public void paintComponent(Graphics g){<br />&nbsp; &nbsp; &nbsp; &nbsp; super.paintComponent(g);<br />&nbsp; &nbsp; &nbsp; &nbsp; drawStuff(g);<br />&nbsp; &nbsp; }<br /><br />&nbsp; &nbsp; private void drawStuff(Graphics g){<br />&nbsp; &nbsp; &nbsp; &nbsp; Graphics2D gfx = (Graphics2D) g;<br />&nbsp; &nbsp; &nbsp; &nbsp; RenderingHints hints = new RenderingHints(RenderingHints.KEY_INTERPOLATION, <br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; RenderingHints.VALUE_INTERPOLATION_NEAREST_NEIGHBOR);<br />&nbsp; &nbsp; &nbsp; &nbsp; hints.put(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_OFF);<br />&nbsp; &nbsp; &nbsp; &nbsp; <br />&nbsp; &nbsp; &nbsp; &nbsp; int cellSize = calculateCellSize();<br />&nbsp; &nbsp; &nbsp; &nbsp; <br />&nbsp; &nbsp; &nbsp; &nbsp; g.setColor(Color.BLACK);<br />&nbsp; &nbsp; &nbsp; &nbsp; g.fillRect(0,0, getWidth(), getHeight());<br />&nbsp; &nbsp; &nbsp; &nbsp; <br />&nbsp; &nbsp; &nbsp; &nbsp; for (int x = 0; x &lt; dungeonSize; x++){<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; for (int y = 0; y &lt; dungeonSize; y++){<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Cell block = dungeon.getCell(x, y);<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (block == null) break;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (block.getId() != 0x00){<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; g.setColor(Color.WHITE);<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; g.fillRect(edgeOffsetX + (x*cellSize), edgeOffsetY + (y*cellSize), cellSize, cellSize);<br /><br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<br />&nbsp; &nbsp; &nbsp; &nbsp; }<br />&nbsp; &nbsp; &nbsp; &nbsp; g.setColor(Color.WHITE);<br />&nbsp; &nbsp; &nbsp; &nbsp; gfx.drawString(&quot;Huehehue&quot;, 20, 20);<br />&nbsp; &nbsp; }<br />}<br /></div><br /><br />You can see that it's kinda simple even if you don't know Java. I can share the whole repository of my GUI project with you if it helps.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>clueless</b> [ Sat Feb 10, 2018 9:14 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Can you write windows app in regular C++?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Minor example: Many years ago I wrote a MAP editor and save state editor for the NES game &quot;Faria&quot; in C++ on Win32.  No MFC or anything funky.  Just straight up Win32 + C++.  It is on github: <!-- m --><a class="postlink" href="https://github.com/dennisjenkins75/FariaRomEditor">https://github.com/dennisjenkins75/FariaRomEditor</a><!-- m --><br /><br />If I were to do the project over again now, I would use C++ / GTK++, so that I could do all of my development on Linux and occasionally compile for Windows as well.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>2</strong> of <strong>2</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>