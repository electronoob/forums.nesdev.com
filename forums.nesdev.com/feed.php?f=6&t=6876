<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=6&amp;t=6876" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2010-09-07T05:10:12-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=6&amp;t=6876</id>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2010-09-07T05:10:12-07:00</updated>
<published>2010-09-07T05:10:12-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6876&amp;p=67315#p67315</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6876&amp;p=67315#p67315"/>
<title type="html"><![CDATA[iNES based NES music format]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6876&amp;p=67315#p67315"><![CDATA[
<div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />If I was designing an NSF format based on NES files, I'd just make it put an initial value into register A to select the song, and otherwise act exactly like a regular NES emulator.<br /></div><br />One goal was for these ROMs to be able to support use on a NES or normal NES emulator, if they wanted to.<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />And if you need to save on [host] CPU usage for some reason, you can always use PocketNES style speedhacks to detect an idle CPU state.<br /></div><br />I hadn't thought about the host CPU issue, which is relevant. Would be simplest if it for example only optimized the case of an infinite jump loop.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Tue Sep 07, 2010 5:10 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Dwedit]]></name></author>
<updated>2010-09-07T04:50:32-07:00</updated>
<published>2010-09-07T04:50:32-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6876&amp;p=67314#p67314</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6876&amp;p=67314#p67314"/>
<title type="html"><![CDATA[iNES based NES music format]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6876&amp;p=67314#p67314"><![CDATA[
If I was designing an NSF format based on NES files, I'd just make it put an initial value into register A to select the song, and otherwise act exactly like a regular NES emulator.<br />Obviously emulate the PPU's NMI.  Maybe emulate the rest of the PPU as well just for the sprite 0 hit, but that's probably overkill, and would waste a bunch of CPU time.<br />Use whatever mappers exist.  Might lead to mapper hell though.<br />No built-in custom playback speed, use one of the cycle counting mappers (like FME7, or VRC) if you want that.<br />And if you need to save on CPU usage for some reason, you can always use PocketNES style speedhacks to detect an idle CPU state.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=53">Dwedit</a> — Tue Sep 07, 2010 4:50 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2010-09-07T04:09:58-07:00</updated>
<published>2010-09-07T04:09:58-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6876&amp;p=67312#p67312</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6876&amp;p=67312#p67312"/>
<title type="html"><![CDATA[iNES based NES music format]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6876&amp;p=67312#p67312"><![CDATA[
Why didn't I think of it? arfink gets credit for the idea, for cases where you need an 8K buffer but don't have any WRAM on the cartridge or don't want to alter it. The auto-incrementing is a big plus. If you have a large CHR ROM, it's a perfect place for lots of PCM samples.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />I'm not really sure how many helpers like this we should provide...<br /></div>As few as possible. I just figured I'd enumerate each distinct useful thing. Then we can go over them and decide which ones require significant work to implement in an emulator, and only then consider giving them separate flags.<br /><br />The less stuff the better. Featuritis lurks behind every corner.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Tue Sep 07, 2010 4:09 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[thefox]]></name></author>
<updated>2010-09-07T03:50:45-07:00</updated>
<published>2010-09-07T03:50:45-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6876&amp;p=67311#p67311</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6876&amp;p=67311#p67311"/>
<title type="html"><![CDATA[iNES based NES music format]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6876&amp;p=67311#p67311"><![CDATA[
<div class="quotetitle">blargg wrote:</div><div class="quotecontent"><br />$2002 bit 7 that is set each frame and cleared when read, but without any special cases or NMI suppression since those take a significant amount of code to implement properly.<br /><br />$2000 bit 7 where enabling in middle of VBL when flag is still doesn't cause second NMI.<br /></div><br />I'm not really sure how many helpers like this we should provide...<br /><br /><div class="quotetitle">blargg wrote:</div><div class="quotecontent"><br />CHR ROM/RAM and $2006/$2007. I could imagine a music engine using this as a general-purpose buffer with automatic increment. Especially useful as an 8K sample buffer (or even 10K if you spilled into nametable). Couple with a mapper that switches CHR banks and you have space for PCM samples separate from PRG.<br /></div><br />Why didn't I think of this before. <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" /><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=80">thefox</a> — Tue Sep 07, 2010 3:50 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2010-08-24T12:17:50-07:00</updated>
<published>2010-08-24T12:17:50-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6876&amp;p=66661#p66661</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6876&amp;p=66661#p66661"/>
<title type="html"><![CDATA[iNES based NES music format]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6876&amp;p=66661#p66661"><![CDATA[
<div class="quotetitle">thefox wrote:</div><div class="quotecontent"><br /><div class="quotetitle">blargg wrote:</div><div class="quotecontent">For the required NES features, I realized that the default should be that an iNES music file requires a fully-accurate NES. Then we have flags that specify that it will work with lesser systems, for example a PPU that only supports $2000 bit 7, or $2002 bit 7.<br /></div><br />Very true. Probably also sprite 0 hit ($2002 bit 6) too. Anything else?</div><br />That is, a PPU that only supports sprite 0 hit where the upper-left pixel of the sprite is always hitting a background pixel. Trivial to implement while giving the full benefit.<br /><br />Sprite overflow where the first 9 sprites must be the ones that trigger it, allowing a simple implementation. Also require that sprite transfers be done with DMA and always with SPRADDR=0 when beginning DMA, further simplifying without limiting anything.<br /><br />CHR ROM/RAM and $2006/$2007. I could imagine a music engine using this as a general-purpose buffer with automatic increment. Especially useful as an 8K sample buffer (or even 10K if you spilled into nametable). Couple with a mapper that switches CHR banks and you have space for PCM samples separate from PRG.<br /><br />$2002 bit 7 that is set each frame and cleared when read, but without any special cases or NMI suppression since those take a significant amount of code to implement properly.<br /><br />$2000 bit 7 where enabling in middle of VBL when flag is still doesn't cause second NMI.<br /><br />One feature that especially a full-accuracy iNES music player should support is hooking the audio to the composite video output <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" /><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Tue Aug 24, 2010 12:17 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Gil-Galad]]></name></author>
<updated>2010-08-24T09:56:38-07:00</updated>
<published>2010-08-24T09:56:38-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6876&amp;p=66656#p66656</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6876&amp;p=66656#p66656"/>
<title type="html"><![CDATA[iNES based NES music format]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6876&amp;p=66656#p66656"><![CDATA[
Here is the asm file that I converted to ASM6. You can get the original copy on Chris Covell's site inside the NSF ripping document.<br /><br /><a href="http://gilgalad.arc-nova.org/junk/NSF/NESM_player.zip" class="postlink">NESM player</a><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=43">Gil-Galad</a> — Tue Aug 24, 2010 9:56 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[thefox]]></name></author>
<updated>2010-08-24T06:32:32-07:00</updated>
<published>2010-08-24T06:32:32-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6876&amp;p=66644#p66644</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6876&amp;p=66644#p66644"/>
<title type="html"><![CDATA[iNES based NES music format]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6876&amp;p=66644#p66644"><![CDATA[
<div class="quotetitle">Gil-Galad wrote:</div><div class="quotecontent"><br />Have you guys seen the player code for the NESM spec? The code was converted by Chris Covell and in turn I converted to ASM6 here recently. You can take any NSF and use the tune switching code with it. It's mapper 0 and only has enough graphics in it to display the number of the tune. You change tunes by pressing the start button.<br /></div><br />Neverheard, link?<br /><br /><div class="quotetitle">blargg wrote:</div><div class="quotecontent"><br />For the required NES features, I realized that the default should be that an iNES music file requires a fully-accurate NES. Then we have flags that specify that it will work with lesser systems, for example a PPU that only supports $2000 bit 7, or $2002 bit 7.<br /></div><br />Very true. Probably also sprite 0 hit ($2002 bit 6) too. Anything else?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=80">thefox</a> — Tue Aug 24, 2010 6:32 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Gil-Galad]]></name></author>
<updated>2010-08-23T11:00:29-07:00</updated>
<published>2010-08-23T11:00:29-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6876&amp;p=66565#p66565</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6876&amp;p=66565#p66565"/>
<title type="html"><![CDATA[iNES based NES music format]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6876&amp;p=66565#p66565"><![CDATA[
Have you guys seen the player code for the NESM spec? The code was converted by Chris Covell and in turn I converted to ASM6 here recently. You can take any NSF and use the tune switching code with it. It's mapper 0 and only has enough graphics in it to display the number of the tune. You change tunes by pressing the start button.<br /><br />I don't know about RAW PCM working in this player, but I suppose it's possible since it's not strictly a NSF anymore.<br /><br />I happen to use this quite often.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=43">Gil-Galad</a> — Mon Aug 23, 2010 11:00 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2010-08-21T06:57:23-07:00</updated>
<published>2010-08-21T06:57:23-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6876&amp;p=66410#p66410</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6876&amp;p=66410#p66410"/>
<title type="html"><![CDATA[iNES based NES music format]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6876&amp;p=66410#p66410"><![CDATA[
tepples, excellent point about meta-information. This was partly one reason I suggested an embedded NSF header, so that an embedded player could use the init/play addresses from it. <br /><br />thefox, point taken about the header format, so it will not be in NSF format then. Let's try to allow separation of concerns between the information a player needs to play the music, and the meta-information (track length, name, etc.), so that we can focus on the information the player needs, that is, that which if not present would prevent playing it.<br /><br />For the required NES features, I realized that the default should be that an iNES music file requires a fully-accurate NES. Then we have flags that specify that it will work with lesser systems, for example a PPU that only supports $2000 bit 7, or $2002 bit 7.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Sat Aug 21, 2010 6:57 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2010-08-21T05:35:46-07:00</updated>
<published>2010-08-21T05:35:46-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6876&amp;p=66405#p66405</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6876&amp;p=66405#p66405"/>
<title type="html"><![CDATA[iNES based NES music format]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6876&amp;p=66405#p66405"><![CDATA[
If the meta-information is in some standard format, then the ROM's internal player (used when run as iNES instead of iNSF) can read that same block of data when drawing its UI.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Sat Aug 21, 2010 5:35 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[thefox]]></name></author>
<updated>2010-08-20T20:38:32-07:00</updated>
<published>2010-08-20T20:38:32-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6876&amp;p=66379#p66379</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6876&amp;p=66379#p66379"/>
<title type="html"><![CDATA[iNES based NES music format]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6876&amp;p=66379#p66379"><![CDATA[
<div class="quotetitle">blargg wrote:</div><div class="quotecontent"><br />By using a standard NSF header, current NSF parsing code can be reused with minor modifications. Might simplify things. Obviously some of the fields wouldn't be used by the player.<br /></div><br />I don't really think this is a good idea. First of all there's a lot of useless information. Secondly supporting this format will always require a lot of changes in a music player which previously only had to handle the APU and a single mapper... parsing the header is one of the easier things to do. <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /><br /><div class="quotetitle">blargg wrote:</div><div class="quotecontent"><br />To help OS, music ROMs could have a different file extension, but .nes ones should be supported. Benefit of .nes extension is that current NES emulators can play them just fine.<br /></div><br />Yeah emulators definitely should support it regardless of the extension. It would be mostly for organizing purposes, so that you could differentiate application ROM files from music files by looking at the filename.<br /><br />As for the meta-information... I'm undecided. On the other hand I would like the format to be simple but then again leaving it out might just complicate things in the long run, having to standardize and get authors to adopt yet another format. If such info is supported it should be made optional though.<br /><br /><div class="quotetitle">blargg wrote:</div><div class="quotecontent"><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Game soundtracks ripped into iNSF would have to relocate some code if they already have something at $8000-$807F.<br /></div><br />This isn't a replacement of NSF, at least not right now.</div><br />True, most game tracks should still be ripped as NSFs, but there are some that would work better in this format.<br /><br />A lot of tough decisions to make.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=80">thefox</a> — Fri Aug 20, 2010 8:38 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2010-08-20T15:20:22-07:00</updated>
<published>2010-08-20T15:20:22-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6876&amp;p=66369#p66369</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6876&amp;p=66369#p66369"/>
<title type="html"><![CDATA[iNES based NES music format]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6876&amp;p=66369#p66369"><![CDATA[
Oh sorry, I see you meant the signature it puts into zero-page could be NESM. I like that as a signature.<br /><br />As for track names, I personally think the ROM format shouldn't have any meta-information. Leave that to a game music format-agnostic wrapper of some sort. The ROM should only serve one purpose: store the music player code in a way that can be easily emulated.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Fri Aug 20, 2010 3:20 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2010-08-20T14:56:38-07:00</updated>
<published>2010-08-20T14:56:38-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6876&amp;p=66368#p66368</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6876&amp;p=66368#p66368"/>
<title type="html"><![CDATA[iNES based NES music format]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6876&amp;p=66368#p66368"><![CDATA[
<div class="quotetitle">blargg wrote:</div><div class="quotecontent"><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">The extension could be "iNSF", and the signature could be "NESM" which matches the first bytes of PRG ROM.<br /></div><br />The file must be a standard iNES ROM.</div><br />The first four bytes of the file are NES^Z, but the first four bytes of PRG ROM are NESM because, as thefox said, "the music header sits at the beginning of the ROM ($10 in the file)".<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Meta-information goes in the header. Yes, it lacks per-track names and times, as NSF does. If that is needed, then let's add it to the header<br /></div><br />Then you might have to investigate how <a href="http://slickproductions.org/docs/NSF/nsfespec.txt" class="postlink">NSFE</a> stores track metadata.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Fri Aug 20, 2010 2:56 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2010-08-20T14:47:15-07:00</updated>
<published>2010-08-20T14:47:15-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6876&amp;p=66367#p66367</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6876&amp;p=66367#p66367"/>
<title type="html"><![CDATA[iNES based NES music format]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6876&amp;p=66367#p66367"><![CDATA[
<div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />[minimal PPU support] would rule out using sprite 0 for 120 Hz updates.<br /></div><br />You're right. A full player must support the PPU. We could have a header flag noting what PPU features music requires, so reduced-PPU player can reject such files, rather than having them hang or whatever.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />The extension could be "iNSF", and the signature could be "NESM" which matches the first bytes of PRG ROM.<br /></div><br />The file must be a standard iNES ROM.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Dual-compatible NTSC/PAL songs would have to wait a frame to detect the video system.<br /></div><br />Yes. A player can easily remove any initial silence from the output, so there's no delay.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />How would timing work? Perhaps $2007 could be repurposed as a way for the program to tell the player software the name of the playing track and how long the track is. (This info is not in the NSF header.)<br /></div><br />I'm very much against this. The emulator never communicates with the song. It emulates it exactly as a normal iNES ROM. To change tracks, it just resets the ROM with the new track number in zero-page. Meta-information goes in the header. Yes, it lacks per-track names and times, as NSF does. If that is needed, then let's add it to the header (and perhaps in a way that NSF can also support the same additions). Separate issue though, unrelated to the core one: NES music files that can use all NES features.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Game soundtracks ripped into iNSF would have to relocate some code if they already have something at $8000-$807F.<br /></div><br />This isn't a replacement of NSF, at least not right now.<br /><br />I desire to keep this really minimal and simple. Basically, how can we support all NES features for music, with minimal emulator changes and complexity?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Fri Aug 20, 2010 2:47 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2010-08-20T13:14:52-07:00</updated>
<published>2010-08-20T13:14:52-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6876&amp;p=66359#p66359</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6876&amp;p=66359#p66359"/>
<title type="html"><![CDATA[iNES based NES music format]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6876&amp;p=66359#p66359"><![CDATA[
<div class="quotetitle">blargg wrote:</div><div class="quotecontent"><br />For NSF players being modified to support this, it could be allowed that the PPU only supports bit 7 of $2000 (and possibly $2002), nothing more, so the NSF player doesn't have to implement a lot of extra stuff.<br /></div><br />Which would rule out using sprite 0 for 120 Hz updates.<br /><br />The extension could be "iNSF", and the signature could be "NESM" which matches the first bytes of PRG ROM.<br /><br />Dual-compatible NTSC/PAL songs would have to wait a frame to detect the video system.<br /><br />How would timing work? Perhaps $2007 could be repurposed as a way for the program to tell the player software the name of the playing track and how long the track is. (This info is not in the NSF header.)<br /><br />Game soundtracks ripped into iNSF would have to relocate some code if they already have something at $8000-$807F.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Fri Aug 20, 2010 1:14 pm</p><hr />
]]></content>
</entry>
</feed>