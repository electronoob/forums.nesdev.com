<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=6&amp;t=17441" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2018-06-12T21:47:11-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=6&amp;t=17441</id>
<entry>
<author><name><![CDATA[Jarhmander]]></name></author>
<updated>2018-06-12T21:47:11-07:00</updated>
<published>2018-06-12T21:47:11-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=17441&amp;p=219766#p219766</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=17441&amp;p=219766#p219766"/>
<title type="html"><![CDATA[Re: Lately Tuned - short looped DPCM sample tuning experimen]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=17441&amp;p=219766#p219766"><![CDATA[
Heheheh, that's nice. Looped samples are tough indeed.<br /><br />A long time ago, I wrote a interactive (cli) tool to convert WAV files to DMC. It had a high quality resampler (and optional dither?), and it was possible to adjust the gain and pitch (octave, scale, cents) prior to conversion, and then the converted sample could be heard. Basic DMC emulation was done: the non-linearity of the 2A03 sound was simulated, the 16 playback speeds can be selected and changed anytime, the sample can be looped and the start and length of the sample can be changed too, according to the limitations of the DMC channels.<br /><br />That was a great tool to make looped samples: with a script that searched (by brute force) loop lengths that can result in perfect loops according to a detuning tolerance, I could naturally convert slightly detuned samples that looped perfectly.<br /><br />I know I have that tool somewhere, and I can dig it up if someone's interested. The script's probably lost, but is easy to rewrite though.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=336">Jarhmander</a> — Tue Jun 12, 2018 9:47 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[rainwarrior]]></name></author>
<updated>2018-06-12T13:18:25-07:00</updated>
<published>2018-06-12T13:18:25-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=17441&amp;p=219747#p219747</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=17441&amp;p=219747#p219747"/>
<title type="html"><![CDATA[Lately Tuned - short looped DPCM sample tuning experiment]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=17441&amp;p=219747#p219747"><![CDATA[
This is an archival post of an experiment I made in 2012 and originally posted at <a href="http://famitracker.com/forum/posts.php?id=3424" class="postlink">the Famitracker forums</a> at that time.<br /><br />The idea came from this discussion: <a href="http://forums.nesdev.com/viewtopic.php?f=6&amp;t=5473" class="postlink">http://forums.nesdev.com/viewtopic.php?f=6&amp;t=5473</a><br /><br />We determined that the tuning scheme of the DPCM playback frequencies appeared intended to play a C major scale and a few other notes tuned to A440. However, there also appears to be a mistake in how they implemented sample lengths, causing them to read 1 extra byte at the end of the sample. For looped samples this causes the pitch to lower by that relative length, so in the case of the smallest practical looped sample that could have been used (16+1 bytes) the intended playback pitch is lowered by a ratio of 16/17. This is close to a semitone, but not quite equivalent.<br /><br /><br />As an experiment, I composed this piece in Famitracker, with accompanying tracks one semitone lower, but then replaced the tuning tables to correct the rest of that tuning difference between 16/17 and 100 cents. The NSF plays with this corrected tuning table, and the Famitracker FTM will play at the original semitone approximation.<br /><br />Overall the result isn't that compelling, mainly because the DPCM tuning is very imprecise to begin with. Matching its A440 scheme kind of centres the error, but it's still not very well in tune, especially <a href="http://forums.nesdev.com/viewtopic.php?p=94079#p94079" class="postlink">on PAL where two of the frequencies are further off than they should be</a>. It was intended only as a exploration of how close I could get under ideal circumstances.<br /><br /><br />Another thread that might be useful information, where other possible sample lengths are explored:<br /><a href="https://forums.nesdev.com/viewtopic.php?f=6&amp;t=13169" class="postlink">https://forums.nesdev.com/viewtopic.php?f=6&amp;t=13169</a><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5165">rainwarrior</a> — Tue Jun 12, 2018 1:18 pm</p><hr />
]]></content>
</entry>
</feed>