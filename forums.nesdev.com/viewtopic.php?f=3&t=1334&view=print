<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - MMC3 (again) -- and/or general IRQ timing issues?</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">MMC3 (again) -- and/or general IRQ timing issues?</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=3&amp;t=1334">http://forums.nesdev.com/viewtopic.php?f=3&amp;t=1334</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Disch</b> [ Thu Apr 06, 2006 8:43 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>MMC3 (again) -- and/or general IRQ timing issues?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Yeah yeah... lots of topics about this troublesome mapper.  Oddly the most common mapper, yet one of the hardest to emulate (I'd put it as the 2nd hardest -- right behind mapper 90)
<br />
<br />I understand about the A12 rises and how the counter works and all that.  My issue is with the timing.
<br />
<br />I have Blargg's MMC3 tests passing, as well as the titlescreen of Kick Master and in-game Wolverine working glitch-free (have yet to test some other problem points in Kick Master -- but I'm confident they'll be fine).  It's HOW I got them working that concerns me...
<br />
<br />I understand that A12 rises on the 5th cycle of every 8 fetch cycles (4, 12, 20, 28, etc for BG fetches if BG uses $1xxx....  260,268, etc for Sprite fetches when they use $1xxx)
<br />
<br />I built my emu to clock the counter at these times, then ran the test ROMs.  Blargg's gave me a "too early" error, so I pushed it back a few cycles (I figured it was due to my PPU/CPU sync method -- perhaps it would have to go THROUGH the cycle rather than up to the cycle or something like that -- making an off-by-1 error likely (and even expected)).  
<br />
<br />However I was concerned when I found out I had to push the time back THREE ppu cycles from the norm in order to get a passing result in blargg's test.  And even more (9!) to get Wolverine and Kick Master working without jitters -- and even up to 11! (where I have it now) to clear some garbage that appears on the right-hand side of the screen in Wolverine.  (blargg's tests seem to pass when I adjust 3-11 cycles inclusive, but fail outside of that)
<br />
<br />There's no way my calculations could be 11 cycles off... that's too big of a gap to chalk it up to ppu/cpu/mapper sync issues.  But then this made me think back to an issue I had with APU IRQs... and how when I tripped an IRQ exactly when the frame IRQ flag raised, I got errors.  I ended up solving the problem by adding a delay of 2 CPU cycles between when the IRQ flag raised and when the IRQ actually happened.  Currently I only do that for APU Frame IRQs... but is that the case for EVERY IRQ?  That might explain the 11 cycle offset -- 2 CPU cycles would eat at least 6 cycles of that.  But that still leaves 5 ppu cycles of "adjust" time in my MMC3 code (could it be a 3 CPU cycle delay?)
<br />
<br />I'm going to mess around with this some more and will probably report back with more crap.  This whole thing of delays and stuff is a pain... why can't IRQs just happen immediately ;_;
<br />
<br />
<br />
<br />
<br />While I'm on the subject -- anyone have any good recommendations for MMC3 problem games which make good test ROMs?  My list is basically:
<br />
<br />- Mega Man 3 (it has BG and sprites both use the $1xxx pattern table for the pause-status bar -- Pausing in the first half of Gemini Man's stage will glitch if you don't handle that properly)
<br />
<br />- Crystalis (scanline -1 checking -- otherwise the screen shifts when you talk to people and there's that garbage line as you scroll on the map)
<br />
<br />- Kick Master, Wolverine (both just generally very picky about timing -- Kick Master also does weird things and will deadlock if IRQs trip when they shouldn't (end of stage 2))
<br />
<br />
<br />I'd really like some games which use a backwards setup (BG uses $1xxx, sprites use $0xxx) or other weird behavior like that so I can test.  If anyone can recommend some like that or just some they have trouble with I'd be grateful.
<br />
<br />
<br />
<br />EDIT-
<br />
<br />Added the 2 cpu cycle delay between IRQ flag raise and actual IRQ tripping.  Still need to adjust my MMC3 code by 3 ppu cycles (which is what I expected -- but that still seems like too much... 1 cycle if any, should be enough).  If I up the delay to 3 CPU cycles, then my Frame IRQs come in too late according to blargg's tests.
<br />
<br />Could MMC3 IRQs somehow be slower to register than APU IRQs?  Is it possible there's a 3 CPU cycle gap for MMC3 but only a 2 cycle gap for APU Frame IRQs?
<br />
<br />gah my brain!
<br />
<br />
<br />EDIT AGAIN - 
<br />
<br />Bah it just dawned on me that 3 PPU cycles = 1 CPU cycle -- and it being off by 3 PPU cycles is explained by the PPU/CPU sync issue (it has to go THROUGH the cycle rather than just UP TO the cycle).  So I guess I answered all of my questions then XD.  Although I'd still like test ROM recommendataions -- plus this post might help someone else *shrug*
<br />
<br />^^;

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>hap</b> [ Thu Apr 06, 2006 10:22 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: MMC3 (again) -- and/or general IRQ timing issues?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />copy/paste from my source code:
<br />
<br />I'm not sure if IRQ handling is 100% correct. Problem games:
<br />- Armadillo: statusbar shakes in-game
<br />- Days of Thunder: screen shakes when entering/exiting pits. garbage scanline on the game over textbox (not in PAL version)
<br />- Juuouki: statusbar shakes in-game
<br />- Mickey's Safari in Letterland: bottom half of statusbar shakes in-game
<br />- Super Mario Bros 3 (J): white line above the 'checkerboard' shouldn't be visible on the Famicom (different MMC3 revision?), should be on NES though
<br />- Ys III: statusbar shakes at the first conversation (pending IRQs are involved)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Disch</b> [ Thu Apr 06, 2006 11:36 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Huh, I seem to share all those problems  =/  (couldn't test armadillo though -- just mapper 4 so far, didn't get to 118 yet)
<br />
<br />Nintendulator shares them as well (at least the games I checked -- except it seemed to run Armadillo just fine).
<br />
<br />Ys III was <strong>TOTALLY</strong> borked in both my emu and Nintendulator.  Weird fadeouts at weird times, the first conversation wasn't even visible (only the sprites and the status bar were).  Is my ROM bad or what?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>hap</b> [ Thu Apr 06, 2006 1:54 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />YS3 is mapper 118, 'mine' does the same thing I described in Nintendulator, it's from GoodNES, crc32 of the whole file: $e1739a6a
<br />
<br />Some other games from the top of my head I used to have problems with:
<br />- Time Zone: status bar shaking on the 3rd level, needed precise MMC3 interrupt timing
<br />- Downtown Special - Kunio-kun no Jidaigeki Dayo Zenin Shuugou!: my MMC3 interrupt implementation used to be off by 1 PPU cycle, that caused this game's status screen to shake sometimes
<br />
<br />And another one I think everyone knows about&#058; SMB3 checkerboard shaking when the title scrolls down, MMC3 counter gets clocked twice in one scanline.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Zepper</b> [ Thu Apr 06, 2006 5:38 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />...

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Thu Apr 06, 2006 11:37 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Just some random comments, not necessarily helpful.
<br />
<br /><div class="quotetitle">Disch wrote:</div><div class="quotecontent">If I up the delay to 3 CPU cycles, then my Frame IRQs come in too late according to blargg's tests.</div><br /><br />Remember that the timing has to be in relation to something, so a failing timing tests means that one of the two events being timed is off. Looking at my MMC3 timing test, the timing reference point is based on my PPU synchronization routine. That relies the timing of bit 7 when reading $2002 and the PPU's frame length when all rendering is disabled. But I'm assuming you have the PPU VBL/NMI test ROMs passing, so those should rule out any error for this timing reference point.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Could MMC3 IRQs somehow be slower to register than APU IRQs? Is it possible there's a 3 CPU cycle gap for MMC3 but only a 2 cycle gap for APU Frame IRQs?</div>
<br />
<br />Wouldn't surprise me. I think you're pushing past what is known. I hope that some day we know exactly what happens in these cases, and <em>why</em>.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>jwdonal</b> [ Tue Jun 01, 2010 2:36 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />!BUMP! I was going to make a new post for my MMC3 IRQ question, but I figured why not be efficient and keep everything all in one place! <img src="./images/smilies/icon_razz.gif" alt=":-P" title="Razz" />
<br />
<br />So as I understand it from Disch's MMC3 doc...the IRQ reload request register ($C001-$DFFF, odd) doesn't _directly_ force the IRQ counter to reload itself from the IRQ latch value.  What it really does is actually cause the IRQ counter to be *cleared* to 0, which _then_ causes the IRQ counter to be reloaded at the end of the next scanline since that's what naturally occurs when the IRQ counter is 0.
<br />
<br />So really the IRQ reload command register causes an *indirect* reload of the IRQ counter register.  Is that correct?
<br />
<br />Another question I have is: does this manual reload cause an IRQ to occur (since what the reload command really does, as per the above, is clear the counter to 0 and cause a reload which would normally cause an interrupt)?  In this case, let's assume the reload latch value is non-zero - to make things simpler.
<br />
<br />UPDATE: I think reading Blargg's doc and the Wiki have cleared this up.  Specifically, the Wiki says:
<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Writing to $C001 will cause the counter to be reloaded on the NEXT rising edge of PPU A12...</div><br />So that tells me that my interpretation of Disch's doc was correct in that the "reload counter" register is really a "clear counter" register.  In my opinion this should really be fixed on the Wiki cause it is technically incorrect. I'd be happy to change it myself if someone replies to this post and agrees with me. <img src="./images/smilies/icon_wink.gif" alt=";)" title="Wink" /><br /><br />And Blargg's doc says:<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">The IRQ flag is not set when the counter is cleared by writing to $C001.</div>
<br />And the above tells me that the answer to my second question is NO.  Doing a manually clear of the IRQ counter does _not_ cause an interrupt.
<br />
<br />Haha...put enough of these docs together and you can draw some pretty precise conclusions. <img src="./images/smilies/icon_wink.gif" alt=";)" title="Wink" />
<br />
<br />Pz!
<br />
<br />Jonathon <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Disch</b> [ Tue Jun 01, 2010 7:10 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I'm doubtful that $C001 changes the IRQ counter at all.  It probably works more like how the APU hardware works -- it sets a "reset" flag, then when the IRQ counter is clocked, it checks the state of that reset flag before decrementing the counter.
<br />
<br />This especially makes sense when you look at RAMBO-1's "reset with X+1" quirk.  RAMBO-1 probably has the same reset flag, and merely checks for zero before the decrement rather than after it.
<br />
<br />/me adds to list of things to change in his docs

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>jwdonal</b> [ Tue Jun 01, 2010 7:20 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Okay, just so that I'm 110% sure that I am understanding things correctly...say that we have the following scenario:
<br />
<br />- The IRQ counter is at a value of 1.
<br />- At the end of the next scanline the count will be decremented to 0 and an interrupt to the CPU will occur.
<br />
<br />HOWEVER, _before_ the end of the next scanline the user writes to $C001, thereby requesting that the IRQ counter be cleared.
<br />
<br />Now, at the end of the next scanline the IRQ controller sees the "Clear Request" flag has been asserted. So the IRQ counter is cleared to 0, _but_ _no_ interrupt is asserted.
<br />
<br />Then, at the end of the next scanline the IRQ counter is reloaded with the latch value since the IRQ count value was cleared to 0 by the user in the previous scanline.
<br />
<br />Is that a proper sequence of events?
<br />
<br />Thanks!
<br />
<br />Jonathon

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Disch</b> [ Tue Jun 01, 2010 9:23 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">HOWEVER, _before_ the end of the next scanline the user writes to $C001, thereby requesting that the IRQ counter be cleared. </div><br /><br />It's more like it's requesting it be <em>reset</em>, not cleared.<br /><br />The whole "cleared" thing is almost like a hackish way to make it reset because it will reset when it's at zero.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Now, at the end of the next scanline the IRQ controller sees the "Clear Request" flag has been asserted. So the IRQ counter is cleared to 0, _but_ _no_ interrupt is asserted. </div>
<br />
<br />It wouldn't be cleared to zero.  It would be reset to whatever was last written to $C000.
<br />
<br />You only set it to zero if you're not doing the "reset flag" thing.  If you do both, you're adding a scanline delay to the counter.
<br />
<br />Other than that detail, I think you have it.
<br />
<br />Basically it's like this:
<br />
<br /><span style="text-decoration: underline">On $C000 write:</span>
<br />- set 'LATCH' to value written
<br />
<br /><span style="text-decoration: underline">On $C001 write:</span>
<br />- set "reset counter" flag
<br />
<br /><span style="text-decoration: underline">On IRQ clock (every scanline)</span>
<br />- if "reset counter" flag is set:
<br />-- clear the "reset counter" flag
<br />-- set IRQ counter to LATCH
<br />-- do not generate an IRQ
<br />
<br />- otherwise ("reset counter" flag was not set)
<br />-- decrement IRQ counter (wrap 0 -&gt; LATCH)
<br />-- if IRQ counter is zero after decrementing, and if IRQs are enabled, generate an IRQ.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>jwdonal</b> [ Tue Jun 01, 2010 9:34 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>EXCELLENT!!</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />AWESOME! Now I'm certain I've got it figured out! =D
<br />
<br />May I make one suggestion though? <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />  I would change the "clear" term that you use in your mapper 4 MMC3 doc to "reset".  It was really confusing me - when I think "clear" I think clear vs. set (as in bits) - so "clear" would mean value goes to 0.  But that's not really what happens.  The counter is really "reset" to the last value written to $C000.  Now that I understand this all three docs (yours, Blargg's, and the Wiki's) match up!  This is just my opinion...but I really think it would help. <img src="./images/smilies/icon_wink.gif" alt=";)" title="Wink" />
<br />
<br />It would also be awesome if you added this "reset flag" method.  That really helped me as well.
<br />
<br />Haha, I would even add the last part of your post to the doc as well - straightened me out good!
<br />
<br />THANKS FOR ALL YOUR HELP DISCH!!! <img src="./images/smilies/icon_biggrin.gif" alt=":-D" title="Very Happy" />
<br />
<br />Oh...and if you do make any of those changes can you send me your new 004.txt file?? Pretty please? <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />  You can send it to "webmaster" at my website's domain name.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>ReaperSMS</b> [ Tue Jun 01, 2010 9:38 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Verilog would probably look something like so:
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">wire irq;<br /><br />assign irq = irq_en &amp; ~|counter;<br />assign reset_count = reset_latch | ~|counter;<br /><br />// reset_latch should be set on C001 writes, cleared on irq_check<br />always @&#40;posedge clk&#41;<br />&nbsp; &nbsp;if &#40;irq_check&#41;<br />&nbsp; &nbsp; &nbsp; if &#40;reset_count&#41;<br />&nbsp; &nbsp; &nbsp; &nbsp; counter &lt;= latch;<br />&nbsp; &nbsp; &nbsp; else<br />&nbsp; &nbsp; &nbsp; &nbsp; counter &lt;= counter - 1'b1;<br /></div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>jwdonal</b> [ Tue Jun 01, 2010 9:40 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">ReaperSMS wrote:</div><div class="quotecontent">Verilog would probably look something like so:</div>
<br />Agreed! Now that I understand how $C001 works that is.  lol

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>jwdonal</b> [ Wed Jun 02, 2010 5:02 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Should interrupts be enabled to the CPU upon system reset?  Or does the software first have to write to $E001 to enable them?  If they are enabled at reset then in my case an MMC3 interrupt would occur immediately upon reset since my IRQ counter is initialized to 0 at reset.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Wed Jun 02, 2010 5:21 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Upon reset, IRQ, or NMI, the 6502 CPU turns on the IRQ ignore flag in the processor status register, as if it had executed the SEI instruction. It is the responsibility of the program to set up all registers of the mapper before turning off this flag (with the CLI instruction).

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>