<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Text compression on the NES</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Text compression on the NES</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=10&amp;t=1989">http://forums.nesdev.com/viewtopic.php?f=10&amp;t=1989</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>3</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>mbrenaman</b> [ Thu Sep 07, 2006 5:20 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Text compression on the NES</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Sorry if this has been brought up before, but the search function on this board is broken (atleast from here).
<br />
<br />Me and friend of mine are waist deep in a small RPG project, and well, I don't see many of our goals getting accomplished without some sort of text compression.
<br />
<br />I'm not familiar with any methods of text compression. I imagine maybe some sort of substitution method. However, I understand the limitations of an NES game. So....
<br />
<br />What (if any) method would be viable for compressing raw text on the NES?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Thu Sep 07, 2006 6:06 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Text compression on the NES</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">mbrenaman wrote:</div><div class="quotecontent">Me and friend of mine are waist deep in a small RPG project, and well, I don't see many of our goals getting accomplished without some sort of text compression.<br /><br />I'm not familiar with any methods of text compression.</div><br />Go look up LZ77 and LZ78 on Wikipedia.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I imagine maybe some sort of substitution method. However, I understand the limitations of an NES game. So....<br /><br />What (if any) method would be viable for compressing raw text on the NES?</div>
<br />A lot of games use "dual tile encoding", where common pairs of characters are represented as a single byte. This is the special case of LZ78 where the dictionary is precomputed and limited to strings of length 2. Some games use word-wise Huffman encoding, where each word is given a number and the compressed text consists of a stream of numbers.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Thu Sep 07, 2006 10:27 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The only compression I've done until now is run-lenght compression (wich will never work on text, unless you have a lot of "heeeeeeeey", "haaaaaaaaaa", etc..., but that would be stupid), and DTE, dual tile encoding wich is especially efficitent for text, because the same group of two or more letters come QUITE regulary. Also, all words begining and finishing with the same letter can also be DTE encoded with the space that go before/after that letter.
<br />Finally, DTE is VERY easy to implement, unlike other compression shemes. In the programmer's viewpoint, it is almost as if no compression was used.
<br />The only difference is that when you read the input buffer, if the value is on a certain range instead of copy it to the output buffer just read the value of two separate tables and send them to the output buffer.
<br />The only con is that no assembler support DTE encoding with their ASC tables.
<br />Good luck for your project.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>mbrenaman</b> [ Fri Sep 08, 2006 5:33 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Thank you for the replies.
<br />
<br />DTE seems simple enough but; I'd have to setup a directory of text snippets saved in individual text files, write a program (C probably) to go through all of them, and .incbin the results, plus the 2 char table used to decode the compressed text.
<br />
<br />Quite a pain but maybe <em>well</em> worth the results.
<br />
<br />Once again, thanks for the info. I have something to work from now.
<br />
<br />Thanks.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Fri Sep 08, 2006 8:53 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">mbrenaman wrote:</div><div class="quotecontent">I'd have to setup a directory of text snippets saved in individual text files, write a program (C probably) to go through all of them, and .incbin the results, plus the 2 char table used to decode the compressed text.</div>
<br />This is the real downside, and the same apply to all other compression shemes. I have no idea how to code a C programm to convert/compress data right now (but I probably will someday), and that is somewhat limitating in developement methods.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Fri Sep 08, 2006 11:44 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">I have no idea how to code a C programm to convert/compress data right now (but I probably will someday)</div>
<br />You could make an NES program that compresses ROM to SRAM <img src="./images/smilies/icon_wink.gif" alt=";-)" title="Wink" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Memblers</b> [ Fri Sep 08, 2006 11:52 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent"><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">I have no idea how to code a C programm to convert/compress data right now (but I probably will someday)</div><br />You could make an NES program that compresses ROM to SRAM <img src="./images/smilies/icon_wink.gif" alt=";-)" title="Wink" /></div>
<br />
<br />Ha, yeah that's what I do.  That's how my RLE compressor works.  Upside is then you've got compression code you could also put in your program for.. something.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>nineTENdo</b> [ Sun Sep 10, 2006 7:19 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I was bored and i found this site <div class="codetitle"><b>Code:</b></div><div class="codecontent">http://www.cs.tut.fi/~albert/Dev/pucrunch/</div>
<br />
<br />There some 6502 coding going on there having to compression on thus im guessing.  Not sure but thought that would help.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sun Sep 10, 2006 7:55 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Pucrunch and other LZ77-class compressors are intended for machines with more RAM than ROM, such as the Commodore 64, the Apple II, or the Famicom Disk System.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>commodorejohn</b> [ Tue Sep 12, 2006 1:50 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />DTE is a good idea. Here's how I would do it:
<br />
<br />Assuming that the game text in the ROM is in ASCII format (which I always use, as it allows me to simply .db "text goes here",) none of the top 128 characters are used for normal text, so we can use bit 7 of the text character as a DTE flag (I'm sure 128 DTE table entries should be all you need.)
<br />
<br />Since bit 7 is the 6502's Negative flag, any time a byte with bit 7 set is loaded into the accumulator, the Negative flag will be set. This allows us to use a BMI to jump to a DTE decompression routine, saving us a compare instruction, and just output the character normally otherwise.
<br />
<br />In the DTE decompression code, assuming that the DTE table is always at the same place in memory (which it should be,) we can use indexed addressing to get the appropriate values, so we will do an ASL A (more on this in a minute,) and a TAX. We do an ASL A to get rid of the now-superfluous bit 7 and multiply the DTE entry number by 2 (the size of a DTE table entry.) Thus we have our index into the DTE table.
<br />
<br />So we can now LDA table,X to get our first character, and then output that character (whether directly or by JSRing to a special character-out routine, it doesn't matter,) then INX and LDA table,X again to get our second character, output that, and return to the normal string-printing loop.
<br />
<br />So, if I were programming this, here's how it would look:
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">textout:<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ; This routine assumes that a pointer to the string to print is loaded into $00, and destroys the contents of A, X, and Y.<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ; Also, it assumes that the string is zero-terminated &#40;allowing us to check for the end of the string with a BEQ.&#41;<br />&nbsp; &nbsp; &nbsp; &nbsp; LDA &#40;$00&#41;,Y ; In some assemblers, the parentheses should be replaced with brackets &#91;&#93;<br />&nbsp; &nbsp; &nbsp; &nbsp; BMI doDTE<br />&nbsp; &nbsp; &nbsp; &nbsp; BEQ done<br />&nbsp; &nbsp; &nbsp; &nbsp; JSR charout<br />increment:<br />&nbsp; &nbsp; &nbsp; &nbsp; INY<br />&nbsp; &nbsp; &nbsp; &nbsp; BEQ fixup<br />&nbsp; &nbsp; &nbsp; &nbsp; JMP textout ; I don't have my 6502 manual handy, so I don't remember whether it would<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ; be faster to BNE textout &#40;I don't think so.&#41;<br />done:<br />&nbsp; &nbsp; &nbsp; &nbsp; RTS<br /><br />doDTE:<br />&nbsp; &nbsp; &nbsp; &nbsp; ASL A<br />&nbsp; &nbsp; &nbsp; &nbsp; TAX<br />&nbsp; &nbsp; &nbsp; &nbsp; LDA DTEtable,X<br />&nbsp; &nbsp; &nbsp; &nbsp; JSR charout<br />&nbsp; &nbsp; &nbsp; &nbsp; INX<br />&nbsp; &nbsp; &nbsp; &nbsp; LDA DTEtable,X<br />&nbsp; &nbsp; &nbsp; &nbsp; JSR charout<br />&nbsp; &nbsp; &nbsp; &nbsp; JMP increment<br /><br />fixup:<br />&nbsp; &nbsp; &nbsp; &nbsp; INC $01<br />&nbsp; &nbsp; &nbsp; &nbsp; JMP textout<br /></div>
<br />
<br />Of course, I'm not the best 6502 programmer out there, and I'm sure there's something I missed that would make it even faster, but that should give you a general idea of how to do it. The bit 7 thing is of course dependent on your text characters all being in the lower half of the background tile table, so you may have to go with a different method for detecting DTE characters.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Tue Sep 12, 2006 2:28 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">commodorejohn wrote:</div><div class="quotecontent">We do an ASL A to get rid of the now-superfluous bit 7 and multiply the DTE entry number by 2 (the size of a DTE table entry.) Thus we have our index into the DTE table.</div>
<br />Speed-up tips to save yourself a few cycles:
<br />1. Don't get rid of bit 7, displace the base address of the table 128 bytes back ( LDA DTEtable-128, X ) instead.
<br />2. Make 2 tables, one with the first character and one with the second, so that you don't have to multiply by 2, nor INX for the second char. Just load one character from a table and the other from another table.
<br />
<br />Not much, but this kind of speed-up can make a difference when things get bigger and more complicated.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>commodorejohn</b> [ Tue Sep 12, 2006 2:37 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Ah, good point.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Tue Sep 12, 2006 3:14 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />This DTE encoding seems interesting. Does anyone know how efficient it really is? Well, I know it's compression ratio must be less than 50%, since it encodes at most 2 characters. I don't know... the idea is interesting, but doesn't seem very efficient.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>commodorejohn</b> [ Tue Sep 12, 2006 5:21 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I think the main point is that it's fast and easy to implement, even if it's not terribly space-reducing. And there are a number of commonly-used letter pairs in English.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Tue Sep 12, 2006 7:20 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />There are also a number of commonly-used letter triples and quadruples, etc. They're called "words." Has anyone investigated separating the text into words, assigning a code number to each word, and then on decompression looking up the code number in a table to get characters?

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>3</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>