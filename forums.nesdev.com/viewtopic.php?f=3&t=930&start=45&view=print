<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - NTSC NES Composite Video Emulator</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">NTSC NES Composite Video Emulator</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=3&amp;t=930">http://forums.nesdev.com/viewtopic.php?f=3&amp;t=930</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>4</strong> of <strong>5</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Sat Feb 18, 2006 12:15 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">NewRisingSun wrote:</div><div class="quotecontent">Also, am I correct that if you want the correct NES aspect ratio, therefore going from 282 to 752 to 640, thus having a factor of 40/47 instaed of 7/8, each kernel would have to be 80 pixels wide?</div><br /><br />It was just luck that things worked out as they currently are. There are three NES pixel alignments with regard to the color clock; 3 NES pixels = 2 colorburst clocks = 8 samples at our ~14.32 MHz sampling rate. Since we generate NTSC pixels at the same rate, that gives 8 RGB pixels out. By rescaling that to 7 pixels, I get an effective 7/8 rescale ratio. The luck is that 7/8 fit so closely, given that the ratio had to have 8 as a denominator. The ratio in my code, 7/8 = 0.875, compared to 40/47 = 0.8511, yields an error of less than 3%. It's greater, so you get slightly fewer NES pixels, but this still gives you room for around 8 overscan pixels on each side when displaying at 640x480.<br /><br />If you want something more accurate, you'll have to double or triple the number of NES pixel alignments. For example, you could have 6 positions generate 16 raw pixels, then rescale to 13, but this gives you a ratio of 13/16 = 0.8125, worse than before. 9 NES-&gt;24 NTSC-&gt;20 rescaled gives 0.833333, 12-&gt;32-&gt;27 gives 0.84375, 15-&gt;40-&gt;34 gives 0.85, and finally 18 NES-&gt;48 NTSC-&gt;41 gives 0.8542 (18 NES-&gt;48 NTSC-&gt;40 gives 0.8333333, worse). There's no reason you <em>have</em> to do the rescaling in the tables, it's just a lucky occurrence that I took advantage of (with a 3% error, as mentioned).<br /><br />The kernels can be any size. I chose the general range of the kernel size based on where the RGB values diminish to near zero away from the center, and 14 specifically because 14 * 3 NES pixel alignments * 3 PPU phases = 126, which allows giving 128 32-bit ints for each color entry, allowing a shift instead of a multiply when finding the address of a kernel. I kept all the kernels for a particular color together since they'll usually all get used if that color is used in a frame, thus should use as few cache lines as possible.<br /><br />You noticed the slight diagonal stripes through solid-brightness areas; I think these might be a symptom of the kernel needing to be a bit wider (it's not filtering, because I'm using the exact same algorithm during initialization as your original code). I'm going to be seeing if I can reduce this without using a wider kernel, since it would cause the optimized loop to have to become more complex and have more temporary variables (currently it's making the most of the current kernel sizes, with no room to spare).<br /><br />Describing this I've realized that the optimized version's parameters (3 NES pixels-&gt;7 output pixels) makes it specific to the NES, so a version for another system would have to be written separately; there's no way a single code base could be made to work with all systems directly.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">For a solid color, two or three color clocks need to me illuminated the same way, otherwise the original monochrome columns remain visible, which is also why 320x200 text is still readable. Since the CGA's line rate is an integer divisor of the subcarrier frequency, the color burst reference stays the same from line to line. How would this play with your code?</div><br /><br />I'll have to try your CGA code myself (the original code you sent me should work, right?); I'm not understanding how the TV or your code can both display the pixels as monochrome and color.<br /><br />I'd be happy to explain how it works through e-mail, going one step at a time from the bginning rather than the scattered incoherent way it happens here on the boards. I don't like the kind of half-assed approach I end up taking here, but I don't see any other way since a proper explanation would involve first being sure we're coming from the same foundational concepts. Doing that requires a lack of distraction and the committment of both parties.<br /><br /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">You probably won't need to emulate phosphors in software for the first release.</div>
<br />
<br />Yeah, I never set out to cover different phosphors. I just mindlessly described the decoder matrix as modeling phosphor color, which it does not.
<br />
<br />NewRisingSun, what's your opinion on the even/odd field merging feature? What it does can best be described by its equivalent. First off, say that normally the PPU phase at the first scanline of each frame is going between 0 and 1 at the moment. So even frames say are on phase 0, and odd frames on phase 1. Some pixels on screen will probably be flickering, due to depending critically on the phase. If the emulator is running on a monitor at exactly 60 Hz, the flicker will blur together, resulting in the average of the two colors it toggles between.
<br />
<br />If the emulator is running on a monitor that refreshes at 75 Hz, the pixels will flicker at an uneven rate in a noticeable way. The emulator could avoid this by internally rendering each frame <em>twice</em> at both PPU phases, then mixing them together before showing it on-screen. This way nothing flickers and what you see (even if the emulator stops) is what you'd see with the original emulator running on a 60 Hz monitor. This is what the even/odd field merging does the equivalent of. An emulator using this would always specify the same PPU phase for each frame (no toggling), and the result would be as if it had specified 0 and 1 and mixed the two together.
<br />
<br />Merging the even and odd fields together is fine if nothing is moving on screen, but when something is moving, the result is not the same as an emulator running on a 60 Hz refresh monitor. If something is moving across the screen smoothly, the visual merging won't occur since it's only at each particular place either on an even or odd field, so the even/odd field merging will cause things to shimmer less than they would when moving. They still shimmer somewhat, but not as much. This is the main drawback of it, but it really helps with the monitor refresh rate issue.
<br />
<br />Can it easily be improved? Is this doing a disservice to proper NTSC emulation?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>NewRisingSun</b> [ Sat Feb 18, 2006 1:16 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />For MESS I would need to take out the horizontal shrinking anyway; that ought to make things easier.
<br /><div class="quotetitle">blargg wrote:</div><div class="quotecontent"> I'm not understanding how the TV or your code can both display the pixels as monochrome and color.</div>The same way your current screenshot displays the diagonal stripes within colored areas. The CGA's monochrome pixels ARE basically the NES' diagonal stripes, except they're not diagonal because of the line rate difference. If you need an input file for cga.h, say so.<br /><div class="quotetitle">blargg wrote:</div><div class="quotecontent">Can it easily be improved? Is this doing a disservice to proper NTSC emulation?</div>I still think that if you can't match your monitor's refresh rate, just don't use NTSC artifacting at all. If you like to incorporate proper transient colors to avoid that crisp RGB look, go for the "S-Video look", filtering the I and Q channels but not the Y one, without the composite stage.
<br />
<br />At least for the NES I still consider NTSC artifacting to be more of a toy, along with those ridiculous 2xSAI/SuperEagle/SuperDuperPidgeon or whatever they're called (you know, the filters for those people who want to play 80s' games but don't like 80s' graphics). Artifacting is of course vital for the Apple II and CGA.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Sat Feb 18, 2006 3:29 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I still think that if you can't match your monitor's refresh rate, just don't use NTSC artifacting at all. If you like to incorporate proper transient colors to avoid that crisp RGB look, go for the "S-Video look", filtering the I and Q channels but not the Y one, without the composite stage. </div>
<br />
<br />The main thing I personally want is handling of graphics with single pixels of a different color. The most common ones are Sunsoft games like <em>Batman</em> and <em>Blaster Master</em>. In that regard, the even/odd field mixing achieves that well. I guess this is similar to S-Video, since my field merging reduces the luma-chroma crosstalk (as tepples said before, this is a 3D comb filter, to some extent).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Jagasian</b> [ Sun Feb 19, 2006 11:54 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">NewRisingSun wrote:</div><div class="quotecontent">At least for the NES I still consider NTSC artifacting to be more of a toy, along with those ridiculous 2xSAI/SuperEagle/SuperDuperPidgeon or whatever they're called (you know, the filters for those people who want to play 80s' games but don't like 80s' graphics).</div>
<br />
<br />NTSC artifacting is a necessity for perfecting the accuracy of NES emulation to the point where it could pass a "Turing-test" like experiment with a real NES.  It might not change the playability of anything, but I'd say that it is far more than a toy... far more important than pixel filters that are supposed to "improve" old school graphics.  I've been considering installing Windows (and I am one of those Linux zealots), just so that I can play Nestopia, which has NTSC emulation  <img src="./images/smilies/icon_confused.gif" alt=":?" title="Confused" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Arbee</b> [ Sun Feb 19, 2006 3:22 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Jagasian wrote:</div><div class="quotecontent"> I've been considering installing Windows (and I am one of those Linux zealots), just so that I can play Nestopia, which has NTSC emulation  <img src="./images/smilies/icon_confused.gif" alt=":?" title="Confused" /></div>
<br />
<br />Don't do <a href="http://rbelmont.mameworld.info/cv3.png" class="postlink">anything rash</a>.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Zepper</b> [ Mon Feb 20, 2006 9:42 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Jagasian wrote:</div><div class="quotecontent">NTSC artifacting is a necessity for perfecting the accuracy of NES emulation to the point where it could pass a "Turing-test" like experiment with a real NES.  It might not change the playability of anything, but I'd say that it is far more than a toy... far more important than pixel filters that are supposed to "improve" old school graphics.  I've been considering installing Windows (and I am one of those Linux zealots), just so that I can play Nestopia, which has NTSC emulation  <img src="./images/smilies/icon_confused.gif" alt=":?" title="Confused" /></div>
<br />
<br />Dumb. You just forgot to "45k d4 r0mZ"... <img src="./images/smilies/icon_sad.gif" alt=":(" title="Sad" />
<br />Seriously, while NTSC <strong>filtering</strong> is very cool for NES (nostalgic), it has NO relationship with NES hardware emulation. -_-;; Even if you love that emulator, the current NTSC source is far from perfection.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Mon Feb 20, 2006 11:14 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Fx3 wrote:</div><div class="quotecontent">Seriously, while NTSC <strong>filtering</strong> is very cool for NES (nostalgic), it has NO relationship with NES hardware emulation. -_-;;</div>
<br />The PPU's composite picture generator is part of NES hardware. For developers whose means only allow them to test in person on emulators, NTSC emulation can be the difference between graphics that look good and graphics that look like crap on real hardware. <a href="http://nesdev.com/bbs/viewtopic.php?t=775" class="postlink">Case in point</a>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Mon Feb 20, 2006 11:42 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Fx3 wrote:</div><div class="quotecontent">Seriously, while NTSC filtering is very cool for NES (nostalgic), it has NO relationship with NES hardware emulation. -_-;;</div><br /><br />Sorry, I beg to differ. The <em>only</em> picture output of a consumer NES is a composite video waveform (posted elsewhere) and an RF-modulated version of the same. Any emulator which is displaying perfectly rectangular pixels with crisp edges and no bleed is doing a hell of a lot of filtering (try building a device that converts NES composite video to the same crisp image). If we are very technical, we can say that the NES doesn't output any <em>picture</em> at all, just a video signal; any emulator is thus <em>always</em> emulating some sort of display device, be it a TV (fairly complex, as we see in this thread), or the above hypothetical decoder that outputs perfect clear pixels (even more complex).<br /><br />So I guess I agree with you; strict emulation of NES hardware only would generate the ~42 MHz sampling rate video waveform I posted in another thread, and a ~1.79 MHz audio waveform (since that's the actual rate of the APU). Maybe I'll even post a version of my NES emulator which does this. Then even the apparent purists would be shown to be otherwise. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Even if you love that emulator, the current NTSC source is far from perfection.</div>
<br />
<br />Maybe, maybe not. One of these is a raw video capture from my NES, the other from the latest NTSC emulation code.
<br />
<br /><img src="http://www.io.com/~greens/temp/emu_or_video1.png" alt="Image" />
<br />
<br /><img src="http://www.io.com/~greens/temp/emu_or_video2.png" alt="Image" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Mon Feb 20, 2006 12:16 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">blargg wrote:</div><div class="quotecontent">The <em>only</em> picture output of a consumer NES is a composite video waveform (posted elsewhere) and an RF-modulated version of the same. Any emulator which is displaying perfectly rectangular pixels with crisp edges and no bleed is doing a hell of a lot of filtering (try building a device that converts NES composite video to the same crisp image).</div>
<br />If you can discern the 6f color clock visible on cart edge in some hardware versions (21.5 MHz NTSC), then you can divide that by 4 (NTSC) to get the pixel clock. Sample the signal at rising and falling edges of 6f, and you have the exact (sharp) output of the NES. With the signal, the pixel clock, and the color clock, your circuit can discover the hue, the high and low signal levels of each pixel, and which intensity bits are turned on, and then reconstruct this into a discrete YUV pixel. You'd end up with a specialized decoder circuit that translates the output of an NTSC NES into perfect YPbPr signals for a component TV.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Jagasian</b> [ Mon Feb 20, 2006 12:34 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">blargg wrote:</div><div class="quotecontent">So I guess I agree with you; strict emulation of NES hardware only would generate the ~42 MHz sampling rate video waveform I posted in another thread, and a ~1.79 MHz audio waveform (since that's the actual rate of the APU). Maybe I'll even post a version of my NES emulator which does this. Then even the apparent purists would be shown to be otherwise. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Even if you love that emulator, the current NTSC source is far from perfection.</div><br /><br />Maybe, maybe not. One of these is a raw video capture from my NES, the other from the latest NTSC emulation code.<br />snip...PICTURES...snip</div>
<br />
<br />Even if an emulator that spits out raw waveforms isn't useful for gamers, it definitely has a use for documenting what a real NES actually does, which is important in the long run.  I don't have my toaster with me right now, to test, but I am going to guess that the <strong>top picture</strong> is the real NES.  What is the right answer?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Zepper</b> [ Mon Feb 20, 2006 1:46 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The bottom picture is blurry than the top one, and colors are a bit darker. I"d say the bottom picture is the real thing..?
<br />
<br />About the video signal thing, if you hook it into a PC monitor, what's the image quality? Could someone take a screenshot for further comparision?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Mon Feb 20, 2006 1:48 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Bottom screen's horizontal blanking is off-center. I'm guessing that's NES hardware.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Quietust</b> [ Mon Feb 20, 2006 2:11 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The bottom picture also has some slight color blending at the top scanline of the floor with the shrubs, so I'm guessing that's the real NES. That, and the off-center horizontal blanking.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Mon Feb 20, 2006 3:08 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">Bottom screen's horizontal blanking is off-center. I'm guessing that's NES hardware.</div><br />D'ho! That would have been an easy fix too.<br /><div class="quotetitle">Quietust wrote:</div><div class="quotecontent">The bottom picture also has some slight color blending at the top scanline of the floor with the shrubs</div>
<br />Bingo. That's the definitive sign, my video capture's likely notch filter blending some of the previous scanline's chroma signal.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Mon Feb 20, 2006 5:46 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />When you post these huge PNGs, it's best to convert them to 256 colors without dithering. That way they don't take up hundreds of kilobytes, which is important as a POTS dial-up connection can't download more than 300 KB per minute. No, you won't lose much visible information, as you still have 10 PNG colors per ideal NES color.
<br />
<br />Examples: <ul><li><a href="http://pics.pineight.com/nes/emu_or_video1_256.png" class="postlink">Top picture: 18 KB</a> (was 72 KB) </li><li><a href="http://pics.pineight.com/nes/emu_or_video2_256.png" class="postlink">Bottom picture: 84 KB</a> (was 411 KB) </li></ul>
<br />Which leads to another obvious way to detect the emulator image: it is much smaller because it has less noise.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>4</strong> of <strong>5</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>