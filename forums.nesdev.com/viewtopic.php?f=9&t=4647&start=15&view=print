<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - PowerPak + Tetramino = sprite flicker</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">PowerPak + Tetramino = sprite flicker</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=9&amp;t=4647">http://forums.nesdev.com/viewtopic.php?f=9&amp;t=4647</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>2</strong> of <strong>6</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Banshaku</b> [ Thu Dec 18, 2008 7:04 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I did more tests but without success.  I guess I reached my limit regarding my current nes knowledge.  
<br />
<br />For now I know more about your code base than the nes so I cannot move forward with appropriate tests.  It ether a more than 8 sprites bug or something related to blanking since a lot of processing is done there. You game seems to requires very precise timing and if you don't, the screen gets affected.  If feels like a VSYNC bug on dos where the sync is not done properly and some part of the screen flickers. Don't know if DMA transfer could have any impact if done in specific conditions since it's related to sprite so. hmmm... But since I don't know enough, I cannot find a way to test it.
<br />
<br />Sorry to have not been more useful than that. I hope you find it soon. If you do, I really want to know what you fixed.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Thu Dec 18, 2008 7:34 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Banshaku wrote:</div><div class="quotecontent">You game seems to requires very precise timing</div><br /><a href="http://www.encyclopediadramatica.com/index.php/Is_this_Battletoads" class="postlink">Is this Battletoads?</a><br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">and if you don't, the screen gets affected.  If feels like a VSYNC bug on dos where the sync is not done properly and some part of the screen flickers.</div>
<br />Well at least it flickers and doesn't crash due to the vblank_instead system. A lot of emu authors wish they could say the same for some Rare games.
<br />
<br />Anyway, I have some ideas how I could redo the top of the playfield frame to fit under the 8 sprite limit. As for the flicker in the preview on the PowerPak, it seems to go away when a piece lands (but before it locks).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Drag</b> [ Sat Dec 20, 2008 8:18 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Is your program waiting the proper amount of time to allow the PPU to stablize on bootup, before writing to any PPU registers? This is the absolute only thing I can think of that would cause weird glitches on the hardware, where it wouldn't on emulators.
<br />
<br />Then again, if this is the powerpak, it probably wouldn't matter... but it's all I've got. *shrugs*

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sun Dec 21, 2008 7:33 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Drag wrote:</div><div class="quotecontent">Is your program waiting the proper amount of time to allow the PPU to stablize on bootup, before writing to any PPU registers?</div>
<br />Yes, and I assume the PowerPak BIOS is doing the same.
<br />
<br />I've uploaded version 0.32, which changes how the falling piece is drawn to virtually eliminate the sprite dropout that caused problems even in emulation. Any remaining flicker is almost certainly a result of a poorly understood quirk of the NES or the PowerPak. Can I get some more testing done?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Banshaku</b> [ Sun Dec 21, 2008 10:27 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">I've uploaded version 0.32, which changes how the falling piece is drawn to virtually eliminate the sprite dropout that caused problems even in emulation. Any remaining flicker is almost certainly a result of a poorly understood quirk of the NES or the PowerPak. Can I get some more testing done?</div>
<br />
<br />If I can find some time (since I have to re-edit it for MMC3), I will test it on my dev cart.  I will see what I can do this week.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Mon Dec 22, 2008 3:49 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />tepples, I looked into this and (6 hours later) you were right about a new hardware quirk. Disabling rendering before the end of the frame indeed causes erratic behavior of sprite RAM on the next frame, regardless of whether you use DMA or manually copy bytes to it. It's not all bad, as I found a way to avoid it: disable rendering during pixels 66 to 254 (approximate), and ensure that any intersection with sprites is on their last row. If that scanline intersects a sprite's earlier rows, you get the erratic behavior no matter when you disable rendering. This means if you're using sprite hit for timing, you'll have to either settle for a visual glitch near the end of that scanline, or have the next scanline black and wait until its middle of before disabling rendering. There's no reasonable way to get the glitch right at the end of the scanline, because the timing variance when synchronizing to sprite hit is too great (around 21 pixels at best).
<br />
<br />I think the following fixes things (I got the game running on my RAM devcart). Put sprite 0 at X=248, Y=223, and make it use tile $B1. Set tile $B1 to be a horizontal bar at the bottom (0,0,0,0,0,0,0,$FF). This way it collides on its last row. Also, insert a ~55-clock delay loop just before "BEGIN VRAM UPDATE" (you might be able to reduce the delay slightly).
<br />
<br />I'll try to post my hardware test code soon.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Celius</b> [ Mon Dec 22, 2008 1:28 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">blargg wrote:</div><div class="quotecontent">tepples, I looked into this and (6 hours later) you were right about a new hardware quirk. Disabling rendering before the end of the frame indeed causes erratic behavior of sprite RAM on the next frame, regardless of whether you use DMA or manually copy bytes to it. It's not all bad, as I found a way to avoid it: disable rendering during pixels 66 to 254 (approximate), and ensure that any intersection with sprites is on their last row. If that scanline intersects a sprite's earlier rows, you get the erratic behavior no matter when you disable rendering. This means if you're using sprite hit for timing, you'll have to either settle for a visual glitch near the end of that scanline, or have the next scanline black and wait until its middle of before disabling rendering. There's no reasonable way to get the glitch right at the end of the scanline, because the timing variance when synchronizing to sprite hit is too great (around 21 pixels at best).<br /></div>
<br />
<br />Sorry, it's kind of hard to follow what you're saying, so I may sound ridiculous. Are you saying that if you disable rendering, you have to disable it on a scanline that doesn't intersect a sprite unless it's the sprite's last row of pixels? Also, what kind of "erratic" behavior does this cause? Is it just flickering or complete unpredictability?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Mon Dec 22, 2008 4:15 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />How do all the commercial games that disable rendering earlier work fine then?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Mon Dec 22, 2008 6:59 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Celius wrote:</div><div class="quotecontent">Are you saying that if you disable rendering, you have to disable it on a scanline that doesn't intersect a sprite unless it's the sprite's last row of pixels? Also, what kind of "erratic" behavior does this cause? Is it just flickering or complete unpredictability?</div><br />Correct. The erratic behavior in my tests is a pair of sprites disappearing on the next frame. Which pair disappears can depend on which exact PPU clock rendering is disabled on. Since most games don't synchronize to exact PPU clocks, this means that a different pair of sprites will be affected each time, causing flickering (exactly what we see in Tetramino).<br /><br /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">How do all the commercial games that disable rendering earlier work fine then?</div>
<br />I don't know. Perhaps they avoid the conditions that cause the glitch, avoid using the particular sprites affected, or maybe they <em>don't</em> work fine, since the effect so far just seems to be some extra flicker on a few sprites.
<br />
<br />Here's the ROM and ca65 source that demonstrate the issue. I imagine an examination of the PPU rendering steps during a scanline might shed light on the pattern of sprites affected.
<br />
<br /><a href="http://h1.ripway.com/blargg/temp/sprite_bug.zip" class="postlink">sprite_bug.zip</a>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Mon Dec 22, 2008 6:59 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I tried to hold back as much as I could on suggesting a new PPU quirk because only a bad workman rushes to blame his tools. It gave me a chance to improve the overall quality of control processing and sprite handling, to the point where I might even be able to add the ghost piece seen in newer Tetris products. Thank you, blargg, for figuring out what was really going on, helping me make the sprites 100% flicker-free on my PowerPak, and confirming that I am not a bad workman. You've got a credit in the change log of the forthcoming version 0.33.
<br />
<br /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">How do all the commercial games that disable rendering earlier work fine then?</div><br />I don't know. Perhaps I'm triggering a bug like the one that Andrew Davie's team triggered in early builds of The Three Stooges (OAM retention time decreases when some PPU revisions overheat). It just goes to show that there's a lot we still don't know about the PPU.<br /><br /><div class="quotetitle">blargg wrote:</div><div class="quotecontent">I think the following fixes things (I got the game running on my RAM devcart). Put sprite 0 at X=248, Y=223, and make it use tile $B1. Set tile $B1 to be a horizontal bar at the bottom (0,0,0,0,0,0,0,$FF). This way it collides on its last row.</div>
<br />I already had a tile like that: tile $5F (ASCII for the underscore). I have been reserving $B0-$CF for a subtitle, like on the DreamEmulation CD.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Celius</b> [ Mon Dec 22, 2008 7:36 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Well if it's only flickering, that's not the worst thing in the world. Actually, I kind of like the way sprite flickering looks; it characterizes NES games. I believe it was kyuusaku who was saying the same thing about attribute glitches, and I can see where he's coming from with that. If it doesn't cause RAM corruption where random values are just littered all over the sprite page, I guess it's alright. I was really worried because in my polygon sequence engine, I use a sprite zero hit to shut the screen off 40 scanlines early, spilling 40 scanlines out of Vblank, and I have sprites on screen with this engine. So this seems like a perfect candidate for the corruption.
<br />
<br />There's probably tons we still don't know about the PPU. I can't imagine trying to find this bug though; I wouldn't have the slightest clue where to begin. Yes, thanks blargg for going through tedious crap to find yet another weird quirk with the NES <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Memblers</b> [ Mon Dec 22, 2008 8:05 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The Garage Cart #1 intro turns the screen off mid-frame and does a 2nd sprite DMA.  I do seem to remember a little bit of flickering on the 2nd part that apparently went away after I had adjusted the delay timing to fix something else.  (The first part was mostly a dim starfield, so flickering could've been unnoticed or nicer).
<br />
<br />I usually have been using a horizontal line for sprite #0, otherwise maybe I would've been stuck with that bug and never known why until now.  I do know it's been said to do that, but I don't know where.
<br />
<br />That's some quality obscure info.  The PPU needs an errata sheet. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Mon Dec 22, 2008 10:29 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />OK, I've done some OAM memory examination and am making more sense of what happens. It looks like disabling rendering mid-scanline confuses the OAM refresh circuitry (at least I'm assuming it does refresh, being DRAM and all), so that when it runs at the beginning of the next frame, the first refresh writes to wherever it was when rendering was disabled. So if it was at sprite 20 before, it will copy the first two sprites over sprites 20 and 21 (apparently refresh is done in blocks of 8 bytes). I think I ran into this bug a while back, but never tracked it down. Hopefully I'll come across that code again and be able to verify it being the same thing. I've encountered similar bugs in the Game Boy hardware (DMG), where OAM and sound wave RAM can become corrupt in the same manner, with other parts duplicated.
<br />
<br />Here's an example. Dashes every 4 bytes, for clarity. The first two sprites have different tile and attribute, to distinguish them, and the rest use tile and attribute 03.
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">80 04 00 80-1A 05 01 8B-1A 03 03 96...80 04 00 80-1A 05 01 8B-46 03 03 80-46 03 03 8B-46 03 03 96-46 03 03 A1...<br />^^^^^^^^^^^^^^^^^^^^^^^&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;^^^^^^^^^^^^^^^^^^^^^^^<br />80 04 00 80-1A 05 01 8B-1A 03 03 96...3B 03 03 96-3B 03 03 A1-80 04 00 80-1A 05 01 8B-46 03 03 96-46 03 03 A1...<br />^^^^^^^^^^^^^^^^^^^^^^^&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;^^^^^^^^^^^^^^^^^^^^^^^<br />80 04 00 80-1A 05 01 8B-1A 03 03 96...3B 03 03 96-3B 03 03 A1-46 03 03 80-46 03 03 8B-80 04 00 80-1A 05 01 8B...<br />^^^^^^^^^^^^^^^^^^^^^^^&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;^^^^^^^^^^^^^^^^^^^^^^^</div>
<br />Each line is with the PPU disabled one PPU clock later than the previous. You can see how the first 8 bytes get duplicated in different locations based on that. This is what happens to sprite data written at the beginning of the frame <em>after</em> the one where PPU rendering was disabled early. I read it back after that frame was displayed. I get the corruption even if I just let that frame run for a few scanlines, the disable rendering and read it back immediately.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Celius</b> [ Mon Dec 22, 2008 11:36 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />If it leaves off on sprite 63, would it overwrite sprite #63 and sprite #0 with sprite #0 and #1? Again, sorry if that sounds ridiculous. I am still a little rough when it comes to the really technical things inside the PPU.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>dXtr</b> [ Tue Dec 23, 2008 5:29 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">I tried to hold back as much as I could on suggesting a new PPU quirk because only a bad workman rushes to blame his tools.</div>
<br />
<br />But you should never hesitate to blame it when you can't find anything else being wrong ;)
<br />I've blamed visual studio for a few problems in the past and found out that it actually was visual studios fault :)
<br />
<br />One time it was a bad memory leak and after lots of debugging I discovered that it was a problem in the stream classes in STL shipped with the first version of VS.NET 2005.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>2</strong> of <strong>6</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>