<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=2&amp;t=17653" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2018-08-13T14:00:35-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=2&amp;t=17653</id>
<entry>
<author><name><![CDATA[casprog]]></name></author>
<updated>2018-08-13T14:00:35-07:00</updated>
<published>2018-08-13T14:00:35-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=17653&amp;p=223445#p223445</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=17653&amp;p=223445#p223445"/>
<title type="html"><![CDATA[Re: Best practice when updating entire nametable]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=17653&amp;p=223445#p223445"><![CDATA[
Looks like I did indeed cross the ROM with RAM  <img src="http://forums.nesdev.com/images/smilies/icon_neutral.gif" alt=":|" title="Neutral" /> thank you<br /><br />In that case, since I don't need many levels, I will keep it simple and just generate the various tables and do a clean swap.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=7897">casprog</a> — Mon Aug 13, 2018 2:00 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[rainwarrior]]></name></author>
<updated>2018-08-13T13:03:08-07:00</updated>
<published>2018-08-13T13:03:08-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=17653&amp;p=223436#p223436</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=17653&amp;p=223436#p223436"/>
<title type="html"><![CDATA[Re: Best practice when updating entire nametable]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=17653&amp;p=223436#p223436"><![CDATA[
<div class="quotetitle">casprog wrote:</div><div class="quotecontent"><br />I've been thinking about the pros and cons of swapping the entire nametable or only updating what needs to change via some buffer during NMI. I have found that for what I'm building maybe half the tiles will need to change level to level, and so I can go either way but I was concerned about space if I store full tables, but this would keep it simple.. Currently the nametable updates once per level, it will not change again until the next level. My space concern is I have 8KB of PRG ROM to work with using MMC1 correct? So in theory that would be 8 full nametables with no room left for palettes and sprites?<br /></div><br /><a href="https://wiki.nesdev.com/w/index.php/MMC1" class="postlink">MMC1</a> can address 512k of PRG-ROM. (16k at a time in the lower half.) Did you read PRG-RAM by mistake? It can optionally have PRG-RAM as well.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5165">rainwarrior</a> — Mon Aug 13, 2018 1:03 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[casprog]]></name></author>
<updated>2018-08-13T12:53:10-07:00</updated>
<published>2018-08-13T12:53:10-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=17653&amp;p=223434#p223434</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=17653&amp;p=223434#p223434"/>
<title type="html"><![CDATA[Re: Best practice when updating entire nametable]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=17653&amp;p=223434#p223434"><![CDATA[
<div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Yes, if you know your code is executing withing vblank, it is an OK time to turn on/off rendering without any visual problem. The exact mechanism of your &quot;Wait_vblank&quot; routine might be important. If it's waiting on your NMI routine to increment a counter, you might need to ensure that the NMI actually returns quickly enough to still be in vblank. (e.g. if your NMI routine also plays music, this may not be guaranteed.)<br /></div><br /><br />gotcha, thanks, and yes I am relying on a counter changing.<br /><br />I've been thinking about the pros and cons of swapping the entire nametable or only updating what needs to change via some buffer during NMI. I have found that for what I'm building maybe half the tiles will need to change level to level, and so I can go either way but I was concerned about space if I store full tables, but this would keep it simple.. Currently the nametable updates once per level, it will not change again until the next level. My space concern is I have 8KB of PRG ROM to work with using MMC1 correct? So in theory that would be 8 full nametables with no room left for palettes and sprites?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=7897">casprog</a> — Mon Aug 13, 2018 12:53 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[rainwarrior]]></name></author>
<updated>2018-08-11T21:44:11-07:00</updated>
<published>2018-08-11T21:44:11-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=17653&amp;p=223337#p223337</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=17653&amp;p=223337#p223337"/>
<title type="html"><![CDATA[Re: Best practice when updating entire nametable]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=17653&amp;p=223337#p223337"><![CDATA[
<div class="quotetitle">casprog wrote:</div><div class="quotecontent"><br />Would it be OK to turn it off as I'm doing here outside of NMI as long as I know vblank hit? In the article koitsu shared I read about setting flags and acting upon them during the next NMI, which I can do but I'm just curious.<br /></div><br />Yes, if you know your code is executing withing vblank, it is an OK time to turn on/off rendering without any visual problem. The exact mechanism of your &quot;Wait_vblank&quot; routine might be important. If it's waiting on your NMI routine to increment a counter, you might need to ensure that the NMI actually returns quickly enough to still be in vblank. (e.g. if your NMI routine also plays music, this may not be guaranteed.)<br /><br />...which is why my general recommendation was to do the turning off directly in the NMI handler. It's usually much easier to ensure that things happening in that routine occur within vblank than stuff in the main thread.<br /><br /><br />The basic concept I recommend is:<br /><br />Buffer everything you want to send to the PPU (the mask value to be written to $2001, the scroll position $2000/$2005/$2005, OAM to be uploaded by DMA, palettes, any nametable updates, etc.), and then when you're done buffering the next frame, you set a flag variable to tell the NMI it's ready and then enter a loop that waits for the NMI handler to use it.<br /><br />The NMI handler itself would check that flag at the beginning, and if it's not set, just do music. If it is set, it knows the main thread is waiting for it and should apply everything in the buffers, then unset that flag (letting the wait loop know it's finished).<br /><br /><br />(This is orthogonal with pubby's update method, the JMP indirection is just a way to have different modes of behaviour for the nmi handler, which you could do still within this buffering scheme.)<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5165">rainwarrior</a> — Sat Aug 11, 2018 9:44 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[casprog]]></name></author>
<updated>2018-08-11T21:17:04-07:00</updated>
<published>2018-08-11T21:17:04-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=17653&amp;p=223334#p223334</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=17653&amp;p=223334#p223334"/>
<title type="html"><![CDATA[Re: Best practice when updating entire nametable]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=17653&amp;p=223334#p223334"><![CDATA[
<div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />I don't recommend it if you're at the stage where you're asking OP's question<br /></div><br /><br />I completely agree but I already got myself into trouble lol So I took Pubby's idea and applied it to my main game logic. It seems to be working OK. Upon start press I swap the intro nametable with a character select nametable and change the pointer to point to another game state handler. I think I will leave the NMI alone and not use pointers with that (will try to keep it generic).<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />You should only turn rendering on or off in your NMI handler during vblank, otherwise you will get a partially corrupt frame.<br /></div><br /><br />Would it be OK to turn it off as I'm doing here outside of NMI as long as I know vblank hit? In the article koitsu shared I read about setting flags and acting upon them during the next NMI, which I can do but I'm just curious.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">Main:<br />   JSR Read_controllers<br />   JMP &#91;game_logic_ptr&#93;   <br />game_logic_end:   <br />   JMP Main<br /></div><br /><br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">Game_logic_intro:<br />   LDA ctrl_1_state<br />   AND #%00010000 ; check for start button<br />   BEQ gli_controls_done<br />   ; start pressed<br />   ; wait for vblank<br />   JSR Wait_vblank<br />   ; disable ppu<br />   LDA #%00000000<br />   STA $2001<br />   ; update nametable<br />   LDA #LOW(select_nametable)<br />   STA nametable_ptr<br />   LDA #HIGH(select_nametable)<br />   STA nametable_ptr + 1<br />   JSR Load_nametable<br />   ; wait for vblank<br />   JSR Wait_vblank<br />   ; turn ppu back on<br />   LDA #%00011110<br />   STA $2001<br />   ; change game logic pointer<br />   LDA #LOW(Game_logic_select)<br />   STA game_logic_ptr<br />   LDA #HIGH(Game_logic_select)<br />   STA game_logic_ptr + 1<br />gli_controls_done:<br />   JMP game_logic_end<br /></div><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=7897">casprog</a> — Sat Aug 11, 2018 9:17 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2018-08-11T13:33:06-07:00</updated>
<published>2018-08-11T13:33:06-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=17653&amp;p=223308#p223308</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=17653&amp;p=223308#p223308"/>
<title type="html"><![CDATA[Re: Best practice when updating entire nametable]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=17653&amp;p=223308#p223308"><![CDATA[
$2000 writes mid-frame are discouraged because they can cause the &quot;SMB glitch&quot;, which is when one scanline is rendered with the wrong name table setting.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Sat Aug 11, 2018 1:33 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[rainwarrior]]></name></author>
<updated>2018-08-11T10:07:03-07:00</updated>
<published>2018-08-11T10:07:03-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=17653&amp;p=223299#p223299</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=17653&amp;p=223299#p223299"/>
<title type="html"><![CDATA[Re: Best practice when updating entire nametable]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=17653&amp;p=223299#p223299"><![CDATA[
I had assumed pubby's 0 to PPUMASK ($2001) was actually supposed to be PPUCTRL ($2000) to disable the NMI and make it safe to change the pointer. Though looking back, the safety is actually provided by waiting for vblank right before doing it. So pubby's given technique was already safe because that <em>jsr wait_for_nmi</em> means NMI won't fire on the next few (thousand) instructions.<br /><br />For tepples' generic &quot;change your NMI jump pointer whenever you like&quot; (do we really need this capability?) suggestion, I would probably have used these &quot;writes&quot; instead:<br />1. Disable NMI ($2000)<br />2-3. change pointer<br />4. Enable NMI ($2000)<br /><br />i.e. directly address the cause of the problem (NMI might happen while you're changing the pointer) instead of doing something <em>even more advanced</em> to transmute the problem into a skipped frame. (...and I think we've neglected to mention that tepples' method additionally requires relocating your NMI to RAM? That's another non-trivial advanced technique to learn about. I'm gonna assume that tepples chose the self modifying method to avoid <a href="https://wiki.nesdev.com/w/index.php?title=PPU_registers&amp;redirect=no#Bit_0_bus_conflict" class="postlink">another even more obscure and complicated issue</a>... but that's another unstated premise. <img src="http://forums.nesdev.com/images/smilies/icon_razz.gif" alt=":P" title="Razz" />)<br /><br /><br /><em>But</em> now we've gotten to the point where we're talking about how to safely write self-modifying NMI handler code with someone who is asking for beginner advice, and I'm kinda thinking better advice would be: <em>don't do it this way right now</em>.<br /><br />Yes you <em>can</em> write an NMI that starts out with an indirection, but it's one method of a billion equally valid ones for controlling what your NMI does, and the fiddly details of it are a little bit complicated. I don't recommend it if you're at the stage where you're asking OP's question.<br /><br /><br />Here's another way that I think has less complicated ramifications:<br /><br />Just use a variable (here called <em>skip_ppu</em> to tell your NMI to stop messing with the PPU), set it to 1 whenever you need to do your nametable updates in the main thread, and back to 0 when you're ready for it to start doing its thing again:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">nmi:<br />   pha ... etc.<br />   lda skip_ppu<br />   bne skip<br />   ... ; PPU stuff<br />skip:<br />   ... ; music<br />   ... pla etc.<br />   rti</div><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5165">rainwarrior</a> — Sat Aug 11, 2018 10:07 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2018-08-11T08:56:36-07:00</updated>
<published>2018-08-11T08:56:36-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=17653&amp;p=223291#p223291</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=17653&amp;p=223291#p223291"/>
<title type="html"><![CDATA[Re: Best practice when updating entire nametable]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=17653&amp;p=223291#p223291"><![CDATA[
A four-write sequence should avoid a crash:<br />1. Change JMP to RTI<br />2-3. Change low and high bytes of destination address<br />4. Change back to JMP<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Sat Aug 11, 2018 8:56 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[slembcke]]></name></author>
<updated>2018-08-11T08:43:08-07:00</updated>
<published>2018-08-11T08:43:08-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=17653&amp;p=223290#p223290</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=17653&amp;p=223290#p223290"/>
<title type="html"><![CDATA[Re: Best practice when updating entire nametable]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=17653&amp;p=223290#p223290"><![CDATA[
Good to know about switching the PPU during the frame. I've just been ignoring the glitch for now, but was wondering if it would go away if I did it during vblank.<br /><br />Side note:<br />If you are using a jump pointer, make sure that you change the pointer early in the frame. You would crash the CPU if the NMI was triggered while changing the pointer.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=8849">slembcke</a> — Sat Aug 11, 2018 8:43 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[pubby]]></name></author>
<updated>2018-08-11T03:55:18-07:00</updated>
<published>2018-08-11T03:55:18-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=17653&amp;p=223277#p223277</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=17653&amp;p=223277#p223277"/>
<title type="html"><![CDATA[Re: Best practice when updating entire nametable]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=17653&amp;p=223277#p223277"><![CDATA[
<div class="quotetitle">casprog wrote:</div><div class="quotecontent"><br />pubby, so would you put all the NMI logic at whatever the pointer points to? So the callback for the interrupt is just a JMP?<br /></div><br />Yeah. And to change the NMI behavior you'd change the pointer.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=7486">pubby</a> — Sat Aug 11, 2018 3:55 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2018-08-10T19:38:04-07:00</updated>
<published>2018-08-10T19:38:04-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=17653&amp;p=223266#p223266</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=17653&amp;p=223266#p223266"/>
<title type="html"><![CDATA[Re: Best practice when updating entire nametable]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=17653&amp;p=223266#p223266"><![CDATA[
<div class="quotetitle">casprog wrote:</div><div class="quotecontent"><br />So the &quot;main&quot; thread would be like my Forever loop right? (for lack of a better word). The JMP that just keeps going until interrupts occur?<br /></div><br />The more &quot;robust&quot; kind of program structure doesn't have an empty forever loop, it has a main thread that takes care of game logic and buffering video updates, and the NMI thread, which carries out the PPU updates, plays audio and does anything else that absolutely must run at 60Hz (e.g. raster effects).<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />It sounds like if the nametable needs to change I can disable rendering in NMI and set a flag which the main thread can check.<br /></div><br />It's actually the main thread that's supposed to signal stuff to the NMI thread. The main thread can't do PPU stuff whenever it wants, so it has to signal the intent to do those things so the NMI can effectively do them when vblank hits. The main thread goes &quot;I want to turn rendering off&quot;, and waits for the NMI. When vblank hits, the NMI thread then obeys, and doesn't do any other PPU operations from that point on in order to not interfere with PPU operations that the main thread might be doing, such as updating an entire name table, but can keep doing other timely tasks without &quot;freezing&quot; the program. When the main thread is done, it signals the NMI thread to turn referring back on.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Should the disabling and enabling of rendering be located in any specific section of NMI? Like at the head or tail of the interrupt?<br /></div><br />As long as it's during vblank, it doesn't really matter. Whatever works best with your logic.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Fri Aug 10, 2018 7:38 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[casprog]]></name></author>
<updated>2018-08-10T17:42:07-07:00</updated>
<published>2018-08-10T17:42:07-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=17653&amp;p=223263#p223263</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=17653&amp;p=223263#p223263"/>
<title type="html"><![CDATA[Re: Best practice when updating entire nametable]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=17653&amp;p=223263#p223263"><![CDATA[
Thanks koitsu, that was a good read and I'm glad I read that before trying to separate game logic and draw logic.<br /><br />pubby, so would you put all the NMI logic at whatever the pointer points to? So the callback for the interrupt is just a JMP?<br /><br />Thanks<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=7897">casprog</a> — Fri Aug 10, 2018 5:42 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[pubby]]></name></author>
<updated>2018-08-10T17:15:21-07:00</updated>
<published>2018-08-10T17:15:21-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=17653&amp;p=223262#p223262</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=17653&amp;p=223262#p223262"/>
<title type="html"><![CDATA[Re: Best practice when updating entire nametable]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=17653&amp;p=223262#p223262"><![CDATA[
I've always implemented NMI handlers as an indirect jump, like this:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">nmi_handler:<br />    jmp (nmi_ptr)</div><br />To change the behavior of the handler, you change the code 'nmi_ptr' points to. I find this cleaner to use than flags.<br /><br />The second useful thing to have is a subroutine that blocks until an NMI occurs. You likely already have code to do this in your main loop, but it's even better to make it a subroutine:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">wait_for_nmi:<br />    lda nmi_counter<br />waitLoop:<br />    cmp nmi_counter<br />    beq waitLoop<br />    rts</div><br />When you want to disable rendering and/or change 'nmi_ptr', you first call wait_for_nmi and then do your thing:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">jsr wait_for_nmi<br />lda #0<br />sta PPUMASK<br />lda #.lobyte(some_handler)<br />sta nmi_ptr+0<br />lda #.hibyte(some_handler)<br />sta nmi_ptr+1</div><br />You can use this subroutine all over the place. I like to use it for implementing fade-ins and fade-outs, for example.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=7486">pubby</a> — Fri Aug 10, 2018 5:15 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[koitsu]]></name></author>
<updated>2018-08-10T16:29:35-07:00</updated>
<published>2018-08-10T16:29:35-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=17653&amp;p=223258#p223258</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=17653&amp;p=223258#p223258"/>
<title type="html"><![CDATA[Re: Best practice when updating entire nametable]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=17653&amp;p=223258#p223258"><![CDATA[
OP: there is a Wiki page on this subject.  It speaks in &quot;general tone&quot; for development, so that the concept/implementation can be understood:<br /><br /><!-- m --><a class="postlink" href="https://wiki.nesdev.com/w/index.php/The_frame_and_NMIs">https://wiki.nesdev.com/w/index.php/The_frame_and_NMIs</a><!-- m --><br /><br />Section &quot;When to Turn Off PPU, NMIs&quot; may be relevant to your interests (don't let the section title mislead you), but the entire page seems highly relevant to what's being discussed.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3">koitsu</a> — Fri Aug 10, 2018 4:29 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[casprog]]></name></author>
<updated>2018-08-10T16:19:13-07:00</updated>
<published>2018-08-10T16:19:13-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=17653&amp;p=223257#p223257</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=17653&amp;p=223257#p223257"/>
<title type="html"><![CDATA[Re: Best practice when updating entire nametable]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=17653&amp;p=223257#p223257"><![CDATA[
So the &quot;main&quot; thread would be like my Forever loop right? (for lack of a better word). The JMP that just keeps going until interrupts occur?<br /><br />It sounds like if the nametable needs to change I can disable rendering in NMI and set a flag which the main thread can check. It updates the nametable and updates a flag so NMI knows to turn rendering back on? Should the disabling and enabling of rendering be located in any specific section of NMI? Like at the head or tail of the interrupt?<br /><br />Thanks for the tip on palettes, I did not know that. (and music).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=7897">casprog</a> — Fri Aug 10, 2018 4:19 pm</p><hr />
]]></content>
</entry>
</feed>