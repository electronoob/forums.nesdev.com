<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - a new alternative to iNES</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">a new alternative to iNES</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=3&amp;t=6558">http://forums.nesdev.com/viewtopic.php?f=3&amp;t=6558</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>2</strong> of <strong>3</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>etabeta</b> [ Sun Jul 04, 2010 10:02 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">blargg wrote:</div><div class="quotecontent">In other words, this is research/an experiment in another way of representing NES cartridges digitally. The results of this will help anyone in the future considering a similar approach. Maybe it won't pan out for some/all uses, but it will provide actual experience.</div>
<br />
<br />exactly.
<br />
<br />+ the fact that it's not just a theoretical exercise: there is also an emulator already supporting these files (MESS) and NEStopia would probably need only few changes to support it as well (if Marty comes back from wherever he's hidden and is interested)
<br />
<br />also, it's not sculptured into the stone: I'm open to suggestions and the format can be extended to address additional emu-related questions
<br />
<br />now I have to go, Sunday is running out <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />
<br />
<br />bye

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dwedit</b> [ Sun Jul 04, 2010 10:03 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I think it would be more practical to specify mappers using some kind of script.  So that if you know how to handle MMC3, you could handle the alternate boards just by having different scripts with them (like the NES Play Action Football board, or the Dragon Quest 4 pirate board, the Metal Max Pirate board, etc...)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Sun Jul 04, 2010 10:38 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Script, as in specification of mapper behavior in the config file? It wouldn't have to be at the gate level, more at a higher level, so that complex things like MMC3 could be mostly written in C internal to the emulator, and the script just specify how its registers are mapped, and any extra simple things. Something like that could be useful when one is wiring up their own cartridges in unique configurations, but still using standard components so that this could handle it. It obviously wouldn't handle something like Squeedo, though.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>byuu</b> [ Sun Jul 04, 2010 11:23 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />An XML parser really isn't a challenge for anyone who can write an emulator. I wrote one that does everything except DOCTYPE in a few hours. Of course there are those who will complain it's not an XML parser because it lacks DOCTYPE.
<br />
<br />Using libexpat and the like is great if you want to spend more time learning a new API than writing a parser in the first place, and don't mind using gigantic packages from other people, and don't mind more license dependencies. Either way, XML is really only a hurdle if you are really lazy.
<br />
<br />Given how little nesting there is, a format like this can really work with a fancy CSV file, XML is just prettier to look at. But you definitely need the extensibility for ROM hacks, translations, etc; which is why a strict database approach will never work.
<br />
<br />Back to splitting files apart again. All I can say is you better stay away from the SNES scene with that nonsense, you've already ruined NSS :P
<br />
<br />Yes, one in 50,000 people can solder on new flash ROMs over failed mask ROM boards. If they can do that, they can split a file apart. Focus on the majority: one file is much, much easier to work with. Some people don't want to keep all their files inside an archive container that may or may not be around in 10 years or even have an extractor/maker tool on their OS for it.
<br />
<br />Lastly, you will never convert everyone to a new format. So make an internal emulator database that performs strict SHA256 -&gt; XML transformations on loaded games for all official titles, and let the rest use either stock iNES or flexible XML.
<br />
<br />My appproach would be:
<br />1. XML file exists? Use it.
<br />2. Database entry exists? Use database XML file.
<br />3. Unknown iNES? Run generic iNES-&gt;XML parser on it, load that.
<br />
<br />Your core only recognizes XML, and you'll have some really ugly iNES-&gt;XML code somewhere external.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>3gengames</b> [ Sun Jul 04, 2010 10:07 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />No offense man it's just that all this stuff could be figured out with a internal database inside the emulator which IIRC, One emulator does that.
<br />
<br />I think if you need/want to display this match the iNES and ROM checksum to a database and pick out what game it is and display the info on it, because changing the while NES file for Mame seems kind of unneccessary :/
<br />
<br />I do like this but would be happier if Mess only used the standard ^_^ But your making it so I guess it doesn't matter.
<br />
<br />
<br />I love the idea but just don't like how to implement it you have to either have a local database of info or include it in the file :/

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>etabeta</b> [ Sun Jul 04, 2010 11:13 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">byuu wrote:</div><div class="quotecontent">Back to splitting files apart again. All I can say is you better stay away from the SNES scene with that nonsense, you've already ruined NSS <img src="./images/smilies/icon_razz.gif" alt=":P" title="Razz" /></div><br /><br />if you would look closely, you would notice that we already ship a snes.xml list, but no split files have been added... wonder why? because it's not strictly necessary and the current format emulation works like a charm <img src="./images/smilies/icon_wink.gif" alt=";)" title="Wink" /><br /><br />for NES, otoh, essential hardware details are related to the way pieces are wired inside the cart itself. In many ways, NES carts are much closer to arcade pcbs than any other console carts (except SNK AES, but that's a different story <img src="./images/smilies/icon_wink.gif" alt=";)" title="Wink" /> ), and as such it's difficult to handle them as easily as you handle SNES/GB/GBC carts <br /><br /><br /><div class="quotetitle">byuu wrote:</div><div class="quotecontent">Yes, one in 50,000 people can solder on new flash ROMs over failed mask ROM boards. If they can do that, they can split a file apart. Focus on the majority: one file is much, much easier to work with. Some people don't want to keep all their files inside an archive container that may or may not be around in 10 years or even have an extractor/maker tool on their OS for it.</div><br /><br />majority should not *always* be the only target... sometimes I wonder (not too seriously, but I still do it) if 50,000 people interested to restore the old carts are not worth helping much more than a million of people only interested in the free gamez... <br /><br /><div class="quotetitle">byuu wrote:</div><div class="quotecontent">Lastly, you will never convert everyone to a new format. So make an internal emulator database that performs strict SHA256 -&gt; XML transformations on loaded games for all official titles, and let the rest use either stock iNES or flexible XML.<br /><br />My appproach would be:<br />1. XML file exists? Use it.<br />2. Database entry exists? Use database XML file.<br />3. Unknown iNES? Run generic iNES-&gt;XML parser on it, load that.<br /><br />Your core only recognizes XML, and you'll have some really ugly iNES-&gt;XML code somewhere external.</div><br /><br />in my opinion, internal databases are not so useful, given that they risk to be used only for a single emu and other emus cannot really make use of it... I prefer external and open ones: they still possibly won't be used by any other emu, but at least they are out there available for other to use!<br /><br />anyway, we already keep backward compatibility with iNES &amp; UNIF in MESS (by using 3 different loading routines, i.e. ~50 lines of code to setup the correct pcb types and wirings). the point is that, given the past complaints about some iNES tidbits and the lack of success for UNIF, I thought some dev could find this solution interesting, so I shared the news and given the basic details here as well.<br /><br />I'm still interested in giving details if someone wants to take a closer look <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /><br /><br />EDIT: sorry, but I could not resist: can I say I find it funny how you state here<br /><br /><div class="quotetitle">byuu wrote:</div><div class="quotecontent">Back to splitting files apart again. All I can say is you better stay away from the SNES scene with that nonsense, you've already ruined NSS <img src="./images/smilies/icon_razz.gif" alt=":P" title="Razz" /></div><br /><br />and then you complain at ( <!-- m --><a class="postlink" href="http://byuu.org/preservation/">http://byuu.org/preservation/</a><!-- m --> ) about<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">When dumping the ROM contents alone, this discards everything else about the game. For an emulator, this means there is no PCB layout information. In other words, we don't know where to map ROM and RAM to. The current state of SNES emulation is to use extremely elaborate hacks that essentially put ROM and RAM everywhere, even though the real cartridges didn't exactly work this way.</div>
<br />
<br />?
<br />
<br />am I the only one who thinks that PCB layout information also includes the possible presence of multiple chips with different sizes instead of a single huge blob of binary data?
<br />
<br />not that I'm advocating we should start splitting SNES dumps (until it is proven to be absolutely necessary for emulation), but still it seems to me you're not being completely objective on the subject <img src="./images/smilies/icon_wink.gif" alt=";)" title="Wink" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>etabeta</b> [ Sun Jul 04, 2010 11:16 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">65024U wrote:</div><div class="quotecontent">No offense man it's just that all this stuff could be figured out with a internal database inside the emulator which IIRC, One emulator does that.</div><br /><br />no offense taken.<br /><br />still, if you go to the route of the internal database, then iNES headers really becomes useless and info can directly go in the db itsels... <br /><br />that's what pushed me towards the next step, but I can understand that possibly other devs don't see in this an important aspect<br /><br /><br /><div class="quotetitle">65024U wrote:</div><div class="quotecontent">I love the idea but just don't like how to implement it you have to either have a local database of info or include it in the file :/</div>
<br />
<br />well, given that there are not enough info in the file itself (i.e. the so-called standard is not so well designed, and the 2.0 format does not get serious coverage), you have to store the info somewhere else...
<br />
<br />OTOH, if you agree on the db idea, but you don't like it to be external, feel free to add support for it internally: I have no objections if you take the database and you compile it internally to your emu, as long as you share fixes to any mistake you can find, so that the external version can be improved as well
<br />
<br />probably, a perl script is all it's needed to add/remove the info you want and to convert xml to any format which fits your needs.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>byuu</b> [ Mon Jul 05, 2010 8:44 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The "internal" database could be an external file. The point being that it would be an official/commercial only multi-game database used as a fallback.
<br />
<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">am I the only one who thinks that PCB layout information also includes the possible presence of multiple chips with different sizes instead of a single huge blob of binary data?</div>
<br />
<br />There are cases where the same game has been made in two different regions. One used 2x8mbit and one used 1x16mbit. The bus sees the 16mbit of data exactly the same, and the SNES program has absolutely no way of knowing that there is any difference.
<br />
<br />With NSS, we have shit like this:
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">nss-c.dat / 32 KB / a8e202b3 / nss / good<br />nss-ic14.02 / 32 KB / e06cb58f / nss / good<br />m50458_char / 2 KB / / nss_actr / nodump<br />act-rais.ic3 / 512 KB / c9f788c2 / nss_actr / good<br />act-rais.ic2 / 512 KB / 4df9cc63 / nss_actr / good<br />act-rais.ic8 / 32 KB / 08b38ce6 / nss_actr / good<br /><br />nss-c.dat / 32 KB / a8e202b3 / nss / good<br />nss-ic14.02 / 32 KB / e06cb58f / nss / good<br />m50458_char / 2 KB / / nss_fzer / nodump<br />nss-fz-0.ic2 / 1024 KB / e9b3cdf1 / nss_fzer / good<br />fz.ic7 / 32 KB / 48ae570d / nss_fzer / good</div>
<br />
<br />All stuffed inside ZIP files. Extremely inconsistent labeling, no XML to guide use, the only way to load this is to keep a filename listing inside the emulator source code ... exactly like MAME does.
<br />
<br />Actraiser's ic3 comes before ic2 in a standard ROM, and valid games can be 32KB in size. And now you have to have ZIP decompression to load this aberration.
<br />
<br />If you piece these files back together, they load and play fine in any SNES emulator.
<br />
<br />In that comment on my site you are quoting, I am advocating for storing layout information in the XML file. The XML file can specify boundaries within the file (via offset= and size=) to map data anywhere. You can even give each section a "chipid=" field to store what you would have in the separate filenames for the ten Bootgods in the world.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>etabeta</b> [ Mon Jul 05, 2010 10:34 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">byuu wrote:</div><div class="quotecontent">In that comment on my site you are quoting, I am advocating for storing layout information in the XML file. The XML file can specify boundaries within the file (via offset= and size=) to map data anywhere. You can even give each section a "chipid=" field to store what you would have in the separate filenames for the ten Bootgods in the world.</div>
<br />
<br />labels are incorrect because original dumpers did not took care of labeling properly the files. when we manage to get pictures of the original boards and/or redumps we fix the filenames to follow labels. around ~30 files get renamed at each MAME update, but to recover a decade of inaccurate work takes time.
<br />
<br />about the xml, if you run "mame -lx &gt; output.xml" you get an xml listing of all the hardware emulated in MAME for each system, in xml format. in particular you get a precise xml description of nss boards with sizes and memory offset to load the files. MESS would be capable of load such a separate xml, MAME still keeps all the data internally <img src="./images/smilies/icon_wink.gif" alt=";)" title="Wink" />
<br />
<br />however, we might move this separate NSS discussion to your boards, if you want to talk about it

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>BootGod</b> [ Tue Jul 06, 2010 5:55 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">blargg wrote:</div><div class="quotecontent">Script, as in specification of mapper behavior in the config file? It wouldn't have to be at the gate level, more at a higher level, so that complex things like MMC3 could be mostly written in C internal to the emulator, and the script just specify how its registers are mapped, and any extra simple things. Something like that could be useful when one is wiring up their own cartridges in unique configurations, but still using standard components so that this could handle it. It obviously wouldn't handle something like Squeedo, though.</div>
<br />
<br />In my mind this is the ideal solution. I talked with Nestopia author a couple years ago when we were working on the XML DB format on this very idea but we never really went anywhere with it as it would require a lot of work to flesh it out.
<br />
<br />It would be great if you could just give an emulator a list of chips used and some way to describe register layouts and not need to use any ines number or board name at all.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>byuu</b> [ Tue Jul 06, 2010 6:31 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Oh, BootGod. Since you're here, I wanted to say thank you for your NES database website. It's what inspired me to start doing the same for the SNES.
<br />
<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">when we manage to get pictures of the original boards and/or redumps we fix the filenames to follow labels.</div><br /><br />Well, that's an improvement at least. Still, why deviate from the way the other 4,000 dumps are stored? Let it run in everything else and keep it in one file.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">however, we might move this separate NSS discussion to your boards, if you want to talk about it</div><br /><br />If you like, certainly. I'd like to hear your thoughts on an XML file to describe the jumpers.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">It would be great if you could just give an emulator a list of chips used and some way to describe register layouts and not need to use any ines number or board name at all.</div>
<br />
<br />The mappers are the reason I've never even considered an NES emulator. It would indeed be an amazing thing if everyone could share mappers.
<br />
<br />Are you and blargg willing to work on this idea a bit more? I have the skill to write a C-like compiler that can build something into bytecode. And I think all three of us can write an interpreter.
<br />
<br />Something like a generic VM specification for coprocessors, and a library that can execute said VM, sounds like a really fantastic idea.
<br />
<br />It would of course be slower, no getting around that. Really depends on how in-depth it becomes, the biggest issue being synchronization if we try and run these boards with actual clocks.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>BootGod</b> [ Tue Jul 06, 2010 8:41 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">byuu wrote:</div><div class="quotecontent">Something like a generic VM specification for coprocessors, and a library that can execute said VM, sounds like a really fantastic idea.<br /><br />It would of course be slower, no getting around that. Really depends on how in-depth it becomes, the biggest issue being synchronization if we try and run these boards with actual clocks.</div>
<br />
<br />Completely abstracting all extra cartridge logic away from the emulator would be very cool indeed, but that is really taking it to the extreme. I was thinking more along the lines of the emulator still emulates the chips native but having a dynamic way of interpreting and mapping register IO to functions. It seems like this could be accomplished without too much of a performance hit.
<br />
<br />There are so many boards that have extra logic solely for simple bank-switching but will use a different memory region and or bits to do it. 
<br />
<br />Not too long ago I RE'd a pirate cart described <a href="http://nesdev.com/bbs/viewtopic.php?t=5977" class="postlink">here</a> that is pretty simple overall and is a good example of a game that would be a good candidate for this system. Any emulator that supported this theoretical method could have this game just work without recompilation. You wouldn't need to choose some arbitrary mapper number that may or may not be in use by something else. You wouldn't need to make up a fake board ID in cases where it has none.
<br />
<br />Having such a system would make dumping and testing new dumps easier too.
<br />
<br />I've not written an emulator, so I don't think I'm the best one to be coming up with a design that is most efficient for the emulator and allows the greatest flexibility of what can be accomplished thru this configuration and what needs to stay native to the emulator.
<br />
<br />I'm certainly willing to write up board configurations if a viable system was developed.
<br />
<br />Sorry etabeta, I don't mean to sidetrack your topic!

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>byuu</b> [ Wed Jul 07, 2010 3:14 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />It's still tangentially related to the original post :)
<br />
<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I was thinking more along the lines of the emulator still emulates the chips native but having a dynamic way of interpreting and mapping register IO to functions.</div>
<br />
<br />That should be doable from XML, then, no?
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&lt;mmc5 id=&quot;irq&quot; mask=&quot;&#40;ADDR&amp;4000&#41;==0&quot;&gt;<br />&lt;mmc5 id=&quot;bankmap&quot; mask=&quot;&#40;ADDR&amp;ff7f&#41;==2080&quot; dest=&quot;&#40;ADDR&amp;7f&#41;&gt;&gt;1&quot;&gt;</div>
<br />
<br />Then just have a recursive descent parser build you a bytecode table so you can evaluate the expressions faster.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>etabeta</b> [ Wed Jul 07, 2010 11:04 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />this is exactly the kind of discussion I was hoping for, so don't worry about sidetracking (only the nss talk was a bit off <img src="./images/smilies/icon_wink.gif" alt=";)" title="Wink" /> )
<br />
<br />about jumpers and registers, there is basically no example that I could use when I started with this xml thing [1], so I looked for the solution with less impact over the existing implementation. take Konami VCR-2 boards: they have a series of pins that can be wired differently to change the lines which control bankswitch. I went with the following (gross) approach
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&lt;feature name=&quot;pcb&quot; value=&quot;KONAMI-VRC-2&quot; /&gt;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&lt;feature name=&quot;vrc2-pin3&quot; value=&quot;PRG A1&quot; /&gt;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&lt;feature name=&quot;vrc2-pin4&quot; value=&quot;PRG A0&quot; /&gt;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&lt;feature name=&quot;vrc2-pin21&quot; value=&quot;CHR A10&quot; /&gt;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&lt;feature name=&quot;vrc2-pin22&quot; value=&quot;CHR A16&quot; /&gt;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&lt;feature name=&quot;vrc2-pin23&quot; value=&quot;CHR A11&quot; /&gt;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&lt;feature name=&quot;vrc2-pin24&quot; value=&quot;CHR A13&quot; /&gt;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&lt;feature name=&quot;vrc2-pin25&quot; value=&quot;CHR A14&quot; /&gt;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&lt;feature name=&quot;vrc2-pin26&quot; value=&quot;CHR A12&quot; /&gt;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&lt;feature name=&quot;vrc2-pin27&quot; value=&quot;CHR A15&quot; /&gt;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&lt;feature name=&quot;vrc2-pin28&quot; value=&quot;NC&quot; /&gt;<br /></div>
<br />
<br />and MESS, whenever loading a "KONAMI-VRC-2" board, configures the switch lines depending on pin3, pin4 and pin21 (similarly to what NEStopia internally does).
<br />
<br />but of course we might well think about pushing more things outside emulation: it would be like slowly merging various 'mappers'/'boards' together, with a few parameters/registers to be configured at loading time (by importing them from either the xml or some script or some other external source)... and I'm all for it!
<br />
<br />it's the kind of improvement I was dreaming for when I started working on my board-based implementation, but I thought nobody else wanted to move things outside the header <img src="./images/smilies/icon_wink.gif" alt=";)" title="Wink" />
<br />
<br />we can also use MESS as a guinea pig, if you want, to try 'externalizing' some of board types as a test... any suggestion about which board to start from? and about which parts should be kept internal at first (e.g. I'm not sure IRQ is a good place to start from, given the very different ways boards can deal with it)?
<br />
<br />I'm a bit busy these days, but I will try to stay around and find some time for NES <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />
<br />
<br />
<br />
<br />[1] e.g. MAME handles internally all the jumper settings, because it had never needed to put them outside the source, and similarly MESS was not able to externalize anything until 2 months ago... I have been a sort of 'pioneer' in this field among MAME/MESS devs, and I haven't probably chosen the best solution in all the cases...

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Thu Jul 08, 2010 6:22 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">etabeta wrote:</div><div class="quotecontent">but of course we might well think about pushing more things outside emulation: it would be like slowly merging various 'mappers'/'boards' together, with a few parameters/registers to be configured at loading time</div><br />Such as A*ROM vs. BNROM (they're the same except for mirroring), or NROM, CNROM, and GNROM (they're the same except for ROM size), or UNROM and Crazy Climber (they're the same except swapping a quad OR gate for a quad AND), or GNROM vs. Color Dreams (nibble swap).<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">it's the kind of improvement I was dreaming for when I started working on my board-based implementation, but I thought nobody else wanted to move things outside the header <img src="./images/smilies/icon_wink.gif" alt=";)" title="Wink" /></div><br />As long as homebrew games can include their own "things outside the header"...<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">any suggestion about which board to start from?</div>
<br /><a href="http://wiki.nesdev.com/w/index.php/Category:Discrete_logic_mappers" class="postlink">The discrete ones</a> should be fairly easy.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>2</strong> of <strong>3</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>