<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=10&amp;t=1989" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2006-10-07T12:05:50-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=10&amp;t=1989</id>
<entry>
<author><name><![CDATA[commodorejohn]]></name></author>
<updated>2006-10-07T12:05:50-07:00</updated>
<published>2006-10-07T12:05:50-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1989&amp;p=18261#p18261</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1989&amp;p=18261#p18261"/>
<title type="html"><![CDATA[Text compression on the NES]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1989&amp;p=18261#p18261"><![CDATA[
Like I said, you really don't have to if you don't want to. I did so in my example code because it was written assuming that the text characters were located at the ASCII positions in the tile table, and therefore printed text (excepting foreign-language text which uses the accented characters,) wouldn't use the top 128 tiles. Writing an LDA and a BMI was just a whole lot simpler than writing a series of compares and BEQs, especially since I was only demonstrating how DTE would work, before we got into discussions on other algorithms and combining algorithms. My method works. Your method would also work. You're right in that text display isn't processor-intensive; I just did it that way because it was easier and because I believe efficiency is always a good thing, especially when easily achieved.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=1013">commodorejohn</a> — Sat Oct 07, 2006 12:05 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bananmos]]></name></author>
<updated>2006-10-07T09:52:33-07:00</updated>
<published>2006-10-07T09:52:33-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1989&amp;p=18256#p18256</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1989&amp;p=18256#p18256"/>
<title type="html"><![CDATA[Text compression on the NES]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1989&amp;p=18256#p18256"><![CDATA[
But seriously, why would you need to worry about saving a few cycles per letter in a NES game? How often do you plan to write a letter to the screen anyway? Most games even spit 'em out at a typewriter's pace for aesthetic reasons.<br /><br />The only situation I can think of is if you would need to do a lot of random accesses to specified lines/positions in the text. But then, you're probably better off re-thinking the message engine itself. CPU usage ain't much of an issue in text compression for video games. Memory usage, on the other hand...<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=106">Bananmos</a> — Sat Oct 07, 2006 9:52 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[commodorejohn]]></name></author>
<updated>2006-10-07T08:21:27-07:00</updated>
<published>2006-10-07T08:21:27-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1989&amp;p=18254#p18254</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1989&amp;p=18254#p18254"/>
<title type="html"><![CDATA[Text compression on the NES]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1989&amp;p=18254#p18254"><![CDATA[
The reason we've been going with powers-of-two (specifically, 128 normal characters and 128 DTE characters,) is because, when the value is loaded into the accumulator, its high bit gets copied to the status register's Negative flag (i.e. the high bit is treated as a sign bit,) allowing us to simply BMI to detect DTE entries rather than having to use compare instructions. You certainly don't have to do it that way, it just saves some cycles.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=1013">commodorejohn</a> — Sat Oct 07, 2006 8:21 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[mozz]]></name></author>
<updated>2006-10-07T05:01:58-07:00</updated>
<published>2006-10-07T05:01:58-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1989&amp;p=18249#p18249</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1989&amp;p=18249#p18249"/>
<title type="html"><![CDATA[Text compression on the NES]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1989&amp;p=18249#p18249"><![CDATA[
Another possibility is using DTE codes within the DTE table itself.<br /><br />That gives you a way to have single byte encodings of 3 or even 4-letter words (though it takes up more than one code, so you would only want to do it for very commonly-used words).<br /><br />Edit: re tokumaru's idea, is there any reason it has to be a power of 2 range?  Just partition the 256 codes into whatever ranges give you the best compression, even if that means 49 single characters, 97 two-byte DTE codes and 110 three-byte codes.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=330">mozz</a> — Sat Oct 07, 2006 5:01 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2006-10-04T08:49:32-07:00</updated>
<published>2006-10-04T08:49:32-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1989&amp;p=18189#p18189</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1989&amp;p=18189#p18189"/>
<title type="html"><![CDATA[Text compression on the NES]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1989&amp;p=18189#p18189"><![CDATA[
Now that I think of it, you don't NEED to have only 64 symbols to use a mix of DTE and TTE (although I don't see why anyone would want to use more than 1/4 of the tileset just for text - unless when doing midscreen CHR swapping).<br /><br />Numbers 0 to 127 could mean uncompressed characters, like said before. But if the 8th bit is set (&gt; 127), that would mean compression. Half of the codes could be for strings that are 2 characters long and the other half for 3 characters long, so you have 64 of each. Or this distribution could be arranged differently, with more codes indexing pairs of characters, if this works best.<br /><br />But then you don't have that "4th mode" that Bregalad talked about.<br /><br />EDIT: commodorejohn had a nice idea. Combining a dictionary with DTE might work quite well.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Wed Oct 04, 2006 8:49 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2006-10-03T09:16:20-07:00</updated>
<published>2006-10-03T09:16:20-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1989&amp;p=18181#p18181</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1989&amp;p=18181#p18181"/>
<title type="html"><![CDATA[Text compression on the NES]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1989&amp;p=18181#p18181"><![CDATA[
Tokumaru, your idea looks quite interesting. I think the fourth combination could be for variable lenght things, such as locations words and people's name, among with sprical caracters such as tabing, returning and message-end-ing.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Tue Oct 03, 2006 9:16 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[commodorejohn]]></name></author>
<updated>2006-10-02T15:51:17-07:00</updated>
<published>2006-10-02T15:51:17-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1989&amp;p=18171#p18171</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1989&amp;p=18171#p18171"/>
<title type="html"><![CDATA[Text compression on the NES]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1989&amp;p=18171#p18171"><![CDATA[
Here's a thought I had today on combining word-lookup with DTE and regular ASCII.<br /><br />Suppose we have each word in our text be represented by a two-byte pointer to a zero-terminated string in the ROM. We'll assume that nobody's going to store a text lookup in zero-page, so if the high byte of the pointer is 0, that signals that a DTEed and zero-terminated string follows, and the pointer itself is discarded. From there, a DTE algorithm takes over and returns control to the word-lookup algorithm when it hits the terminator character (0, not Ahnuld.) You could even have DTE in the word-table entries.<br /><br />Granted, it's a little over-wrought, but I'll bet it provides pretty decent compression.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=1013">commodorejohn</a> — Mon Oct 02, 2006 3:51 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2006-10-02T15:01:13-07:00</updated>
<published>2006-10-02T15:01:13-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1989&amp;p=18169#p18169</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1989&amp;p=18169#p18169"/>
<title type="html"><![CDATA[Text compression on the NES]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1989&amp;p=18169#p18169"><![CDATA[
You know, if 64 characters is enough for all symbols, you could even try a mix of DTE and TTE. The top 2 bits could be used to define what the other 6 are: an index to a single character, and index to a pair of characters or an index to a group of 3 characters. Of course, you'd also have only 64 entries in each table, so I really don't know if that'd perform well. And there is still one code left, but I don't know what that could be used for, since I don't think that groups of 4 characters would be very common.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Mon Oct 02, 2006 3:01 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Celius]]></name></author>
<updated>2006-10-02T14:29:27-07:00</updated>
<published>2006-10-02T14:29:27-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1989&amp;p=18168#p18168</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1989&amp;p=18168#p18168"/>
<title type="html"><![CDATA[Text compression on the NES]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1989&amp;p=18168#p18168"><![CDATA[
The way I'd go is I'd have $Ex (I'm not sure how many x is) combinations of letters that are very common. It'd be $Ex, and not $FF because there are letters that can be defined as single letters ($40-$5A). It's obvious that you can't have DTE for every combination, because eventually you'd be using 2 bytes to define dual tiles, and we can all just see that's pretty pointless. I was thinking TTE (Triple Tile Encoding) MAY be more effective. I wouldn't have a table though, I'd have a routine that decodes every tile manually. It'd be a huge table, and I don't even know if it would make sense. It'd use 2 bytes for 3 letters.  It'd be hard to work in cubes though, but I've always found working in cubes on a system such as this was interesting. It's just an idea that came to mind.<br /><br />Now that I think about it, DTE is possible for 24 bits for 2 letters, as apposed to 32 bits. I'm sure that's what many of you were thinking. It'd still only cut the size down by 1/4. Which in the grand scheme of things can really help. Instead of using 8 banks for text, you can use 6. You know? It really does help to have at least SOME sort of compression. I'm going to think a little more about TTE, or maybe a different method of compression.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=138">Celius</a> — Mon Oct 02, 2006 2:29 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[CaH4e3]]></name></author>
<updated>2006-10-02T10:03:32-07:00</updated>
<published>2006-10-02T10:03:32-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1989&amp;p=18162#p18162</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1989&amp;p=18162#p18162"/>
<title type="html"><![CDATA[Text compression on the NES]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1989&amp;p=18162#p18162"><![CDATA[
"Dick Tracy" and "Magician" games using some nice variations of huffman compression... First one encodes symbols as indexes in symbol array arranged by usage frequence for each symbol. Second one using some codes like huffman tree, that compared with code-table and then index in that table using as index of symbol in array similar to above...<br /><br />Bot need pretty little memory (just reading bit-stream and decoding)... Compression routines pretty simple to write on PC, decoding routines you may cut from games. <img src="http://forums.nesdev.com/images/smilies/icon_wink.gif" alt=";)" title="Wink" /><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=219">CaH4e3</a> — Mon Oct 02, 2006 10:03 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2006-09-30T07:33:14-07:00</updated>
<published>2006-09-30T07:33:14-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1989&amp;p=18123#p18123</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1989&amp;p=18123#p18123"/>
<title type="html"><![CDATA[Text compression on the NES]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1989&amp;p=18123#p18123"><![CDATA[
I was just researching those 2! I haven't tried any implementations yet, but I think that traditional BWT will use too much memory to be implemented on the NES. I wonder if a version that works on smaller blocks would provide efficient compression...<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Sat Sep 30, 2006 7:33 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2006-09-29T14:15:51-07:00</updated>
<published>2006-09-29T14:15:51-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1989&amp;p=18105#p18105</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1989&amp;p=18105#p18105"/>
<title type="html"><![CDATA[Text compression on the NES]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1989&amp;p=18105#p18105"><![CDATA[
BWT handles an entire block (several kilobytes) in RAM at a time. MTF takes a RAM segment of up to 256 bytes, one for each byte.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Fri Sep 29, 2006 2:15 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[abonetochew]]></name></author>
<updated>2006-09-29T13:25:59-07:00</updated>
<published>2006-09-29T13:25:59-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1989&amp;p=18103#p18103</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1989&amp;p=18103#p18103"/>
<title type="html"><![CDATA[Text compression on the NES]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1989&amp;p=18103#p18103"><![CDATA[
Would implementing something like bzip2 be practical on the NES? <br />I've never implemented the <a href="http://en.wikipedia.org/wiki/Burrows-Wheeler_transform" class="postlink">Burrows-Wheeler transform</a> or the <a href="http://en.wikipedia.org/wiki/Move-to-front_transform" class="postlink">move-to-front transform</a>, but they don't look like they require kilobytes of dictionaries to work properly.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=13">abonetochew</a> — Fri Sep 29, 2006 1:25 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[commodorejohn]]></name></author>
<updated>2006-09-13T14:41:33-07:00</updated>
<published>2006-09-13T14:41:33-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1989&amp;p=17364#p17364</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1989&amp;p=17364#p17364"/>
<title type="html"><![CDATA[Text compression on the NES]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1989&amp;p=17364#p17364"><![CDATA[
That's not a bad idea. I always keep the ASCII text characters at their default location to save a conversion step (I just fill the unused characters such as $00-1F with commonly-used tiles,) but I like the idea of using unused text bytes for special purposes.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=1013">commodorejohn</a> — Wed Sep 13, 2006 2:41 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2006-09-13T08:26:47-07:00</updated>
<published>2006-09-13T08:26:47-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1989&amp;p=17323#p17323</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1989&amp;p=17323#p17323"/>
<title type="html"><![CDATA[Text compression on the NES]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1989&amp;p=17323#p17323"><![CDATA[
DTE can be more or less efficient in function of the effecivity of the pairs of letters made. I think is is very easy to implement, and quite flexible.<br />Using 100% a dictionary wouldn't be so good, because long code would come often for very used words, and consume a lot of space for rare words. Also, it would be a pain to compile the text.<br />You're not suck with ASCII (at least I think so). ASCII in NES is a terrible waste of tiles. You can just keep your own letter mapping, and do something like that (just build that as example) :<br />$00-$10 : Special commands in text (space, return, tab, etc...)<br />$10-$30 : Use for special commands such as location words, people or simply common long words<br />$30-$7f : Simply input one letter<br />$80-$ff : 128 different dual letter combinations.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Wed Sep 13, 2006 8:26 am</p><hr />
]]></content>
</entry>
</feed>