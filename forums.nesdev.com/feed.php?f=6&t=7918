<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=6&amp;t=7918" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2011-07-12T20:26:22-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=6&amp;t=7918</id>
<entry>
<author><name><![CDATA[Jarhmander]]></name></author>
<updated>2011-07-12T20:26:22-07:00</updated>
<published>2011-07-12T20:26:22-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7918&amp;p=81481#p81481</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7918&amp;p=81481#p81481"/>
<title type="html"><![CDATA[Efficient RAM use by a music engine]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7918&amp;p=81481#p81481"><![CDATA[
<div class="quotetitle">neilbaldwin wrote:</div><div class="quotecontent"><br />...<br /></div><br />Thanks for the explanations, that was approximatively what I thought.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=336">Jarhmander</a> — Tue Jul 12, 2011 8:26 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[zzo38]]></name></author>
<updated>2011-07-12T14:46:27-07:00</updated>
<published>2011-07-12T14:46:27-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7918&amp;p=81462#p81462</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7918&amp;p=81462#p81462"/>
<title type="html"><![CDATA[Efficient RAM use by a music engine]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7918&amp;p=81462#p81462"><![CDATA[
<div class="quotetitle">neilbaldwin wrote:</div><div class="quotecontent"><br />Or, self-modifying code:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent"><br />lda #$01<br />sta _myVariable+1<br />rts<br /><br />lda #$02<br />sta _myVariable+1<br />rts<br /><br />_myVariable:<br />lda #$00<br />sta someHardwareRegister<br />rts<br /></div><br /></div>So, it is what I have thought. I have thought of these things before, too, but I was not thinking of it in terms of C64.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4734">zzo38</a> — Tue Jul 12, 2011 2:46 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[neilbaldwin]]></name></author>
<updated>2011-07-11T02:24:09-07:00</updated>
<published>2011-07-11T02:24:09-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7918&amp;p=81387#p81387</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7918&amp;p=81387#p81387"/>
<title type="html"><![CDATA[Efficient RAM use by a music engine]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7918&amp;p=81387#p81387"><![CDATA[
<div class="quotetitle">~J-@D!~ wrote:</div><div class="quotecontent"><br /><div class="quotetitle">neilbaldwin wrote:</div><div class="quotecontent">What you're missing here (especially comparing to SID) is that you've much more scope for using embedded variables and self-modifying code as the C64 is RAM-based as opposed to the NES being ROM-based.<br /></div><br />Please explain what you mean by 'embedded variables'.</div><br /><br />Probably an inaccurate choice of phrase but what I meant was:<br /><br />because the C64 is RAM-based, you don't really need to apportion a section of RAM for your variables in the same way you do on the NES. So you could have (C64):<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">lda #$01<br />sta myVariable<br />rts<br /><br />myVariable: .db $00<br /><br />lda #$02<br />sta myVariable<br />rts<br /><br />lda myVariable<br />sta someHardwareRegister<br />rts<br /></div><br /><br />So the variable 'myVariable' is somewhere in the code and not in ZP or BSS.<br /><br />Or, self-modifying code:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent"><br />lda #$01<br />sta _myVariable+1<br />rts<br /><br />lda #$02<br />sta _myVariable+1<br />rts<br /><br />_myVariable:<br />lda #$00<br />sta someHardwareRegister<br />rts<br /></div><br /><br />So the two 'routines' store either #$01 or #$02 in the byte in memory after the LDA opcode (_myVariable+1). Again, no ZP or BSS is used but you're still using a RAM variable.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3896">neilbaldwin</a> — Mon Jul 11, 2011 2:24 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2011-07-08T20:38:51-07:00</updated>
<published>2011-07-08T20:38:51-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7918&amp;p=81304#p81304</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7918&amp;p=81304#p81304"/>
<title type="html"><![CDATA[Efficient RAM use by a music engine]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7918&amp;p=81304#p81304"><![CDATA[
And even if it's not self-modifying in the strict sense, a C64 or FDS program could stash variables between subroutines.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Fri Jul 08, 2011 8:38 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[zzo38]]></name></author>
<updated>2011-07-08T20:01:38-07:00</updated>
<published>2011-07-08T20:01:38-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7918&amp;p=81302#p81302</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7918&amp;p=81302#p81302"/>
<title type="html"><![CDATA[Efficient RAM use by a music engine]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7918&amp;p=81302#p81302"><![CDATA[
<div class="quotetitle">~J-@D!~ wrote:</div><div class="quotecontent"><br />Please explain what you mean by 'embedded variables'.<br /></div>Does it mean storing the value of some variables where the literal immediate values are used for some CPU instructions? If that is what it means, I can see it is self-modifying code and doesn't work in ROM-based.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4734">zzo38</a> — Fri Jul 08, 2011 8:01 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Jarhmander]]></name></author>
<updated>2011-07-08T19:53:17-07:00</updated>
<published>2011-07-08T19:53:17-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7918&amp;p=81301#p81301</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7918&amp;p=81301#p81301"/>
<title type="html"><![CDATA[Efficient RAM use by a music engine]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7918&amp;p=81301#p81301"><![CDATA[
<div class="quotetitle">neilbaldwin wrote:</div><div class="quotecontent"><br />What you're missing here (especially comparing to SID) is that you've much more scope for using embedded variables and self-modifying code as the C64 is RAM-based as opposed to the NES being ROM-based.<br /></div><br />Please explain what you mean by 'embedded variables'.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=336">Jarhmander</a> — Fri Jul 08, 2011 7:53 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[TmEE]]></name></author>
<updated>2011-07-04T01:21:46-07:00</updated>
<published>2011-07-04T01:21:46-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7918&amp;p=81075#p81075</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7918&amp;p=81075#p81075"/>
<title type="html"><![CDATA[Efficient RAM use by a music engine]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7918&amp;p=81075#p81075"><![CDATA[
I am making a sound system for SMS/GG right now, and I seem to be quite memory hungry, right now each channel uses 16 bytes of memory (but I do need more), and there's 4 of them. I also need some room for SFX etc.<br />I have set aside 256 bytes of RAM that the system can use up. With FM chip support I will probably do use up most of the 256 bytes.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3483">TmEE</a> — Mon Jul 04, 2011 1:21 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[neilbaldwin]]></name></author>
<updated>2011-07-01T01:10:24-07:00</updated>
<published>2011-07-01T01:10:24-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7918&amp;p=80956#p80956</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7918&amp;p=80956#p80956"/>
<title type="html"><![CDATA[Efficient RAM use by a music engine]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7918&amp;p=80956#p80956"><![CDATA[
<div class="quotetitle">Dwedit wrote:</div><div class="quotecontent"><br />Do SID chips have readable registers?  Much RAM use in a NES music engine is from needing to have readable copies of the contents of the audio registers.<br /></div><br /><br />Some, but they're of very little use.<br /><br />What you're missing here (especially comparing to SID) is that you've much more scope for using embedded variables and self-modifying code as the C64 is RAM-based as opposed to the NES being ROM-based.<br /><br />Self-modifying code is ubiquitous in SID players.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3896">neilbaldwin</a> — Fri Jul 01, 2011 1:10 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Hamtaro126]]></name></author>
<updated>2011-06-29T09:28:46-07:00</updated>
<published>2011-06-29T09:28:46-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7918&amp;p=80779#p80779</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7918&amp;p=80779#p80779"/>
<title type="html"><![CDATA[Efficient RAM use by a music engine]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7918&amp;p=80779#p80779"><![CDATA[
the smallest I've seen is what SMB1/VS/2j and the NES version of Spartan X (Kung Fu) uses mostly $F0-$FF (They share the same music engine).<br /><br />But for me, SMBDIS allows Music RAM in these areas to easily go to places in Main RAM or Extended/Save RAM, such as $6000-$600f<br /><br />Talk about portability!<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=287">Hamtaro126</a> — Wed Jun 29, 2011 9:28 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2011-06-29T01:34:31-07:00</updated>
<published>2011-06-29T01:34:31-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7918&amp;p=80769#p80769</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7918&amp;p=80769#p80769"/>
<title type="html"><![CDATA[Efficient RAM use by a music engine]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7918&amp;p=80769#p80769"><![CDATA[
If you wanted to use very low ram then you could go as low as :<br />1 pointer (2 bytes per channel)<br />1 counter (1 bytes per channel)<br />tempo (1 byte)<br /><br />so you'd end up using a dozen of bytes, but then you would have crappy possibilities, no volume envelope, no vibrato, fixed duty cycle.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Wed Jun 29, 2011 1:34 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[mic_]]></name></author>
<updated>2011-06-29T00:29:09-07:00</updated>
<published>2011-06-29T00:29:09-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7918&amp;p=80767#p80767</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7918&amp;p=80767#p80767"/>
<title type="html"><![CDATA[Re: Efficient RAM use by a music engine]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7918&amp;p=80767#p80767"><![CDATA[
<div class="quotetitle">tepples wrote:</div><div class="quotecontent"><br />The music engine used for LJ65, Concentration Room, and Thwaite uses about 66 bytes of state,<br /></div><br />Did any of those games run low on RAM? To the point where a dozen-or-two extra bytes would have mattered..?<br />Your music engine is using about 3% of available RAM. I'd say that's just fine. Of course you could store your music data in a VGM-like format (values to write to the APU registers, mixed with delays) and get away with maybe 3 or 4 bytes of RAM per channel. But the music data would be huge.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=1181">mic_</a> — Wed Jun 29, 2011 12:29 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Drag]]></name></author>
<updated>2011-06-28T23:59:08-07:00</updated>
<published>2011-06-28T23:59:08-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7918&amp;p=80764#p80764</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7918&amp;p=80764#p80764"/>
<title type="html"><![CDATA[Efficient RAM use by a music engine]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7918&amp;p=80764#p80764"><![CDATA[
DNSF2 only uses 5 bytes of ZP, but it uses 147 bytes of regular memory.<br /><br />But then again, I was optimizing for CPU time, and I have features like subroutines, track volume, combined volume/duty envelopes, pitch envelopes, pitch bends, etc. This is also for 8 channels of sound, 4 channels forming one layer (for music), the other 4 for the sound effect layer.<br /><br />Don't worry about SID music, a lot of times, the crazy-efficient players will be very constricting, and often times will be tracker based. It might be ram efficient, but how much memory does the song data take up?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=21">Drag</a> — Tue Jun 28, 2011 11:59 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Dwedit]]></name></author>
<updated>2011-06-28T17:18:00-07:00</updated>
<published>2011-06-28T17:18:00-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7918&amp;p=80740#p80740</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7918&amp;p=80740#p80740"/>
<title type="html"><![CDATA[Efficient RAM use by a music engine]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7918&amp;p=80740#p80740"><![CDATA[
Do SID chips have readable registers?  Much RAM use in a NES music engine is from needing to have readable copies of the contents of the audio registers.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=53">Dwedit</a> — Tue Jun 28, 2011 5:18 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2011-06-28T16:44:23-07:00</updated>
<published>2011-06-28T16:44:23-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7918&amp;p=80736#p80736</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7918&amp;p=80736#p80736"/>
<title type="html"><![CDATA[Efficient RAM use by a music engine]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7918&amp;p=80736#p80736"><![CDATA[
The music engine used for LJ65, Concentration Room, and Thwaite uses about 66 bytes of state, yet the replay engines in .sid files allocate only about 20 bytes <a href="http://nesdev.com/bbs/viewtopic.php?p=80726#80726" class="postlink">according to hyarion</a>. Here's how my music engine currently allocates its memory:<br /><br /><strong>psg_sfx_state</strong>: 32 bytes of zero page (26 used)<br />Channel last frequency: 1 byte per channel<br />Sound effect/percussion data pointer: 2 bytes per channel<br />Sound effect/percussion data length: 1 byte per channel<br />Music phrase data pointer: 2 bytes per channel<br />Order table data pointer: 2 bytes<br /><br /><strong>soundBSS</strong>: 64 bytes of main memory (40 used)<br />Sound effect/percussion data rate: 2 bytes per channel<br />Instrument number: 1 byte per channel<br />Envelope current volume: 1 byte per channel<br />Current note pitch: 1 byte per channel<br />Current note remaining duration: 1 byte per channel<br />Current phrase number: 1 byte per channel<br />Phrase transposition: 1 byte per channel<br />Tempo: 4 bytes<br />Order table loop position ("segno"): 2 bytes<br />Rows left in order table entry: 1 byte<br />Global music pause: 1 byte<br /><br />Is there something I appear to be doing horribly inefficiently?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Tue Jun 28, 2011 4:44 pm</p><hr />
]]></content>
</entry>
</feed>