<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=10&amp;t=7056" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2010-10-17T22:54:12-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=10&amp;t=7056</id>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2010-10-17T22:54:12-07:00</updated>
<published>2010-10-17T22:54:12-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7056&amp;p=68815#p68815</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7056&amp;p=68815#p68815"/>
<title type="html"><![CDATA[Screen Drawing Time.]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7056&amp;p=68815#p68815"><![CDATA[
Disabling NMI while switching the pointer could mean a visual glitch if NMI was doing important things, though. Simplest to wait in a loop until NMI has just run, then switch the pointer. If the delay is a problem, then work out a scheme that allows an atomic switch. Something like this:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">.org $100<br />nmi_vec:<br />    .word real_nmi<br />    .word 0<br />nmi:<br />    jmp &#40;nmi_vec&#41;   ; must also be in RAM</div><br />Then when you want to switch:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">    ; Calculate index of inactive address<br />    lda nmi+1<br />    eor #2<br />    tax<br />    <br />    ; Put new address into inactive vector<br />    lda #&lt;new_nmi<br />    sta nmi_vec,x<br />    lda #&gt;new_nmi<br />    sta nmi_vec+1,x<br />    <br />    ; Atomically switch to new address<br />    stx nmi+1</div><br />This avoids upsetting NMI timing when switching, or missing an NMI. Switching takes constant time as well.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Sun Oct 17, 2010 10:54 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Ian A]]></name></author>
<updated>2010-10-17T22:01:44-07:00</updated>
<published>2010-10-17T22:01:44-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7056&amp;p=68810#p68810</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7056&amp;p=68810#p68810"/>
<title type="html"><![CDATA[Screen Drawing Time.]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7056&amp;p=68810#p68810"><![CDATA[
Opps.  I don't write $2001 immediately, I update a variable that writes $2001 every NMI.<br /><br />The multiple NMI approach seems pretty awesome, so I might just switch!  It would be handy to have different NMIs for different states, like the title sequence, or even odd in-game areas.  Thanks for the heads up!<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4250">Ian A</a> — Sun Oct 17, 2010 10:01 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Dwedit]]></name></author>
<updated>2010-10-17T21:43:37-07:00</updated>
<published>2010-10-17T21:43:37-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7056&amp;p=68809#p68809</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7056&amp;p=68809#p68809"/>
<title type="html"><![CDATA[Screen Drawing Time.]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7056&amp;p=68809#p68809"><![CDATA[
For turning ON the screen, it's much better to have a flag to make NMI turn it on.  Otherwise you turn on the screen during the middle of draw time, and the whole picture is shifted downwards for one frame.<br /><br />I don't actually use the flag approach though, I just completely change which NMI handler is used based on whether the screen is on or off.  For example, use a limited NMI handler that calls the music engine if the screen is off, and never attempts to do any drawing.  Then when you finish drawing, switch back to the normal NMI handler which turns on the screen.<br /><br />This means that the first instruction of NMI is a jmp (xxxx) instruction.  Make sure you disable NMIs while you are updating that address, so you don't end up with a half-updated 16-bit pointer.<br /><br />This also means that for different types of scenes, you can use a different NMI handler.  For example, one that installs interrupts for later, or one that waits for a sprite 0 hit, or whatever.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=53">Dwedit</a> — Sun Oct 17, 2010 9:43 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Ian A]]></name></author>
<updated>2010-10-17T21:34:25-07:00</updated>
<published>2010-10-17T21:34:25-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7056&amp;p=68808#p68808</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7056&amp;p=68808#p68808"/>
<title type="html"><![CDATA[Screen Drawing Time.]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7056&amp;p=68808#p68808"><![CDATA[
Okay, thanks a lot!<br /><br /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent"><br />If you don't mind elaborating, why is this time important to you?<br /></div><br /><br />Sometimes I write code rather backwards.  For example, I had a flag for turning off and on the screen.  In the NMI, it would check to see if the flag was set, and then alter the screen accordingly.  Turns out it's faster and simpler to just to sta $2001 regardless.<br /><br />If I was taking an extraordinary amount of time to load a whole nametable it would tell me that I not only had a problem with that specific code, but most likely the code to load an individual column or row as well.<br /><br />It just kinda tells me if I'm on the right track or not.<br /><br />Thanks again.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4250">Ian A</a> — Sun Oct 17, 2010 9:34 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2010-10-17T20:37:48-07:00</updated>
<published>2010-10-17T20:37:48-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7056&amp;p=68807#p68807</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7056&amp;p=68807#p68807"/>
<title type="html"><![CDATA[Screen Drawing Time.]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7056&amp;p=68807#p68807"><![CDATA[
Yeah, just copying bytes to VRAM can be done in less than a frame, so what really dictates the time it will take is where the data that goes to VRAM is being copied from. If it's stored uncompressed in the ROM the whole thing will be very fast, otherwise, all levels of compression must be taken into consideration.<br /><br />Drawing the initial screen of my game takes 17 frames (1 column of metatiles per frame), but that's because the game engine is already running and the title card is being displayed (meaning rendering is not disabled) in the alternate name table.<br /><br />If you don't mind elaborating, why is this time important to you?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Sun Oct 17, 2010 8:37 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Dwedit]]></name></author>
<updated>2010-10-17T19:55:59-07:00</updated>
<published>2010-10-17T19:55:59-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7056&amp;p=68803#p68803</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7056&amp;p=68803#p68803"/>
<title type="html"><![CDATA[Screen Drawing Time.]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7056&amp;p=68803#p68803"><![CDATA[
It takes about half the screen time to update one nametable using a not-unrolled loop.  This is for a simple memcpy style update.<br /><br />In my scroller demo, it took about 5 frames to update an entire nametable when I used the same code called when scrolling rows onto the screen.  Your mileage may vary.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=53">Dwedit</a> — Sun Oct 17, 2010 7:55 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Ian A]]></name></author>
<updated>2010-10-17T19:44:02-07:00</updated>
<published>2010-10-17T19:44:02-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7056&amp;p=68802#p68802</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7056&amp;p=68802#p68802"/>
<title type="html"><![CDATA[Screen Drawing Time.]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7056&amp;p=68802#p68802"><![CDATA[
Okay, this might be a little vague a question, but about how long should it take me to fill a nametable with the screen turned off?<br /><br />I have no idea what I should be aiming for as far as speed goes...  Is one frame fast?  Two?  Three?  Four?<br /><br />I understand that it would depend on the compression used, and how many layers of metatiles you have, but if any one could give me some relative numbers that would be pretty handy...<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4250">Ian A</a> — Sun Oct 17, 2010 7:44 pm</p><hr />
]]></content>
</entry>
</feed>