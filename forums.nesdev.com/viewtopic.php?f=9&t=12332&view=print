<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - OAM reading on Dendy (test pictures)</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">OAM reading on Dendy (test pictures)</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=9&amp;t=12332">http://forums.nesdev.com/viewtopic.php?f=9&amp;t=12332</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Eugene.S</b> [ Tue Feb 03, 2015 8:15 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>OAM reading on Dendy (test pictures)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><a href="http://forums.nesdev.com/viewtopic.php?f=9&amp;t=11041" class="postlink">OAM reading on PAL NES</a> - all test ROMs were taken from here, read first!<br /><a href="http://forums.nesdev.com/viewtopic.php?f=9&amp;t=11614" class="postlink">Test ROMs request by me</a></div><br />Hi, Nesdev. I need to clarify all unknown values here: <!-- m --><a class="postlink" href="http://wiki.nesdev.com/w/index.php/Clock_rate">http://wiki.nesdev.com/w/index.php/Clock_rate</a><!-- m --><br />Also i can confirm that red and green emphasis bits are swapped on Dendy same as PAL NES.<br /><br />I've tested thefox's and blargg's ROMs on my <a href="http://hwm.us.to/famimusic/Forum/pictures/IMG_6212.JPG" class="postlink">custom-made</a> Dendy based on Famicom AV PCB.<br />Here is the results:<br /><br /><strong>OAM DECAY TEST</strong> (&quot;original&quot;, take1, take2, take3, take4, take5). Seems it has correct NTSC-like behavior:<br /><div class="quotetitle">thefox wrote:</div><div class="quotecontent">It uploads a bunch of sprites to OAM and enables rendering. When A is held down, rendering is kept disabled, which presumably should cause OAM to decay. However, on my PAL NES I wasn't able to make OAM decay no matter how long I kept the button pressed, the sprites always came back pristine. The ROM was tested on NTSC NES as well (thanks to Pasky), and there it functioned as expected (sprites started disappearing, which must mean that the bits tended towards ones).</div><br /><a href="http://savepic.su/4885009.htm" class="postlink"><img src="http://savepic.su/4885009m.jpg" alt="Image" /></a> <a href="http://savepic.su/4873745.htm" class="postlink"><img src="http://savepic.su/4873745m.jpg" alt="Image" /></a> <a href="http://savepic.su/4857361.htm" class="postlink"><img src="http://savepic.su/4857361m.jpg" alt="Image" /></a><br /><a href="http://savepic.su/4886032.htm" class="postlink"><img src="http://savepic.su/4886032m.jpg" alt="Image" /></a> <a href="http://savepic.su/4867600.htm" class="postlink"><img src="http://savepic.su/4867600m.jpg" alt="Image" /></a> <a href="http://savepic.su/4861456.htm" class="postlink"><img src="http://savepic.su/4861456m.jpg" alt="Image" /></a><br /><br /><strong>OAM_Read_test</strong> and <strong>OAM_Read_VBL_wait_test</strong>: <span style="color: #40FF00">all passed</span>.<br /><a href="http://savepic.su/4854288.htm" class="postlink"><img src="http://savepic.su/4854288m.jpg" alt="Image" /></a> <a href="http://savepic.su/4899347.htm" class="postlink"><img src="http://savepic.su/4899347m.jpg" alt="Image" /></a><br /><br /><strong>OAM_Stress</strong>: <span style="color: #40FF00">passed</span>.<br /><a href="http://savepic.su/4859411.htm" class="postlink"><img src="http://savepic.su/4859411m.jpg" alt="Image" /></a><br /><br /><a href="http://hwm.us.to/famimusic/Forum/hardware_tests/Dendy_6527P_6538_OAM_DMA/Dendy_6527P_6538_OAM_DMA.rar" class="postlink">all-in-one shots</a> (19Mb)<br /><br />I've read nintendulator <a href="http://sourceforge.net/p/nintendulator/code/1209/log/?path=" class="postlink">history commits</a>, and saw Quietust wrote about Dendy:<br /><div class="quotetitle">Quietust wrote:</div><div class="quotecontent">the pre-render scanline difference is permissible, since nobody knows exactly how it works anyways</div><br />I can do tests on real hardware. I still want any test roms to clarify Dendy behavior.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Drag</b> [ Tue Feb 03, 2015 6:06 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: OAM reading on Dendy (test pictures)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />My understanding of the OAM decay is that the sprite OAM inside the NES is DRAM instead of SRAM. DRAM has a faster response time, but its contents need to be periodically refreshed or else they'll decay. The PPU accesses memory much faster than the CPU does, so that could be why DRAM was used.<br /><br />Later revisions of the NES may have been built during a time where SRAM response was improved, to where SRAM could be used in place of the DRAM. This is all just my speculation, but this is a possible reason for why the sprites don't decay on some units where they do on other units.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Tue Feb 03, 2015 6:19 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: OAM reading on Dendy (test pictures)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The PAL 2C07 is known to not decay because OAM evaluation can <strong>never</strong> be fully disabled. Hence why one can only DMA for the first 20 scanlines after NMI there.<br /><br />It looks like in the Dendy, they either keep running OAM evaluation for the entire 51 <em>POST</em>-render scanlines so that its contents don't decay, or they are using DRAM with a substantially longer refresh time (4.6ms) than the 2C02's 1.3ms. I guess that's an obvious test: see if OAM can be usefully modified sometime around 260 scanlines after NMI.<br /><br />edit:fixed typo

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Tue Feb 03, 2015 8:01 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: OAM reading on Dendy (test pictures)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The 51-line period on Dendy is post-render, after the picture and before the NMI. It corresponds to the 1-line post-render idle period after the picture on authentic consoles.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Tue Feb 03, 2015 11:32 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: OAM reading on Dendy (test pictures)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Drag wrote:</div><div class="quotecontent">My understanding of the OAM decay is that the sprite OAM inside the NES is DRAM instead of SRAM. DRAM has a faster response time, but its contents need to be periodically refreshed or else they'll decay. The PPU accesses memory much faster than the CPU does, so that could be why DRAM was used.</div><br />I have always been taught that SRAM = fast, DRAM = slow. I'm not sure if the opposite has been true at some point in the past, but the main reason to use DRAM nowadays (and probably back then, too) is that it's cheaper. And the reason CPU caches use SRAM is that it's faster.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Wed Feb 04, 2015 9:52 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: OAM reading on Dendy (test pictures)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />By the time of the GameCube, MoSys figured out how to make DRAM fast by striping data across a bunch of small independent DRAM banks, plus some SRAM cache in front to hide the refresh. It's called 1T-SRAM, and both the GameCube and the Wii have 24 MiB of the stuff.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Drag</b> [ Thu Feb 05, 2015 3:31 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: OAM reading on Dendy (test pictures)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">thefox wrote:</div><div class="quotecontent"><div class="quotetitle">Drag wrote:</div><div class="quotecontent">My understanding of the OAM decay is that the sprite OAM inside the NES is DRAM instead of SRAM. DRAM has a faster response time, but its contents need to be periodically refreshed or else they'll decay. The PPU accesses memory much faster than the CPU does, so that could be why DRAM was used.</div><br />I have always been taught that SRAM = fast, DRAM = slow. I'm not sure if the opposite has been true at some point in the past, but the main reason to use DRAM nowadays (and probably back then, too) is that it's cheaper. And the reason CPU caches use SRAM is that it's faster.</div><br />I was just guessing. I only knew DRAM needed to be refreshed while SRAM didn't. I couldn't think of any possible reason to use DRAM over SRAM unless it was faster, I didn't consider the cost of materials or circuit complexity, aside from DRAM probably being less complex and thus probably faster (which, counter-intuitively, it isn't?) Anyway, it's all moot because my OAM decay hypothesis was wrong anyway. <img src="./images/smilies/icon_razz.gif" alt=":P" title="Razz" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Quietust</b> [ Thu Feb 05, 2015 5:37 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: OAM reading on Dendy (test pictures)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I highly suspect that DRAM wasn't used because of speed, but because of <strong>size</strong> - 2112 bits of SRAM would've made the die significantly larger and thus more expensive to produce.<br /><br />To see the difference, compare the bit density of palette RAM (156 bits) to that of OAM, and you'll see that it's a lot larger per bit.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Thu Feb 05, 2015 12:10 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: OAM reading on Dendy (test pictures)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Out of curiosity, is DRAM slower just because of the interruptions usually required for the refresh process, or is all access slower?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Thu Feb 05, 2015 1:55 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: OAM reading on Dendy (test pictures)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />It's only <em>necessarily</em> slower because of the background resources for refresh. Manufacturers sometimes stretch the DRAM quads much larger, putting more parasitic capacitance (without anything to directly drive it) on the row/column lines, so individual accesses can be slower too.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>l_oliveira</b> [ Sun Feb 08, 2015 9:39 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: OAM reading on Dendy (test pictures)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />DRAM is slower because the address bus is multiplexed. You need more cycles to set up the address to read than on SRAM (whose address bus goes almost straight from the CPU to the RAM cell itself). On DRAM you need to set the row and column you will read or write to before the actual access can happen. On any &quot;sane&quot; DRAM design any access from CPU will take preference over refresh (unless the DRAM is used in something which cannot absolutely be stopped, like for example if the said DRAM is also used for video memory as in the C64 or Sinclair Spectrum. Because in that case you need to feed the raster rendering process with data you will instead stop the CPU from accessing the DRAM).<br /><br />So you can think of DRAM as a computer bitmapped screen. Before you can toggle a pixel you need to set both the X and Y coordinates (in hardware level).<br /><br />On SRAM the CPU see it as a straight line (DRAM refresh/RAS/CAS circuitry is supposed to make that for the DRAM too so the CPU see it like this).<br /><br />Newer memory technologies like SDRAM have a much, much higher clock but their latency is high because they still use multiplexing to save traces requirement on the board design.<br /><br />@the OP: very interesting post, thanks for posting.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Quietust</b> [ Sat Feb 14, 2015 8:08 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: OAM reading on Dendy (test pictures)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">l_oliveira wrote:</div><div class="quotecontent">DRAM is slower because the address bus is multiplexed. You need more cycles to set up the address to read than on SRAM (whose address bus goes almost straight from the CPU to the RAM cell itself). On DRAM you need to set the row and column you will read or write to before the actual access can happen.</div><br /><br />It should be noted that <em>this does not apply to the PPU at all</em> - the DRAM used for OAM has absolutely no address bus multiplexing whatsoever, and reading from it is done pretty much exactly the same as reading from palette SRAM (aside from the necessary bus precharge, of course).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>l_oliveira</b> [ Sat Feb 14, 2015 8:17 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: OAM reading on Dendy (test pictures)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Quietust wrote:</div><div class="quotecontent"><div class="quotetitle">l_oliveira wrote:</div><div class="quotecontent">DRAM is slower because the address bus is multiplexed. You need more cycles to set up the address to read than on SRAM (whose address bus goes almost straight from the CPU to the RAM cell itself). On DRAM you need to set the row and column you will read or write to before the actual access can happen.</div><br /><br />It should be noted that <em>this does not apply to the PPU at all</em> - the DRAM used for OAM has absolutely no address bus multiplexing whatsoever, and reading from it is done pretty much exactly the same as reading from palette SRAM (aside from the necessary bus precharge, of course).</div><br /><br />Indeed, when I wrote that I was thinking of external DRAM chips. I would expect what you say happen with all CPUs which use dynamic memory elements to hold register data. You can tell when CPUs use these if they crash when you remove the clock source.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>