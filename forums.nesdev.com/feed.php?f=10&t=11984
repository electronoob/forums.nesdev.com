<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=10&amp;t=11984" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2014-12-20T04:30:18-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=10&amp;t=11984</id>
<entry>
<author><name><![CDATA[sdm]]></name></author>
<updated>2014-12-20T04:30:18-07:00</updated>
<published>2014-12-20T04:30:18-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11984&amp;p=137835#p137835</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11984&amp;p=137835#p137835"/>
<title type="html"><![CDATA[Re: Trying CHR-Ram instead of CHR-Rom -]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11984&amp;p=137835#p137835"><![CDATA[
hmm, I think working as it should.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=411">sdm</a> — Sat Dec 20, 2014 4:30 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2014-12-19T16:51:12-07:00</updated>
<published>2014-12-19T16:51:12-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11984&amp;p=137822#p137822</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11984&amp;p=137822#p137822"/>
<title type="html"><![CDATA[Re: Trying CHR-Ram instead of CHR-Rom -]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11984&amp;p=137822#p137822"><![CDATA[
Circular rotate left (4 cycles):<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">  ASL A<br />  ADC #$00</div><br /><br />Circular rotate right (5-6 cycles):<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">  LSR A<br />  BCC :+<br />  ORA #$80<br />:<br /></div><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Fri Dec 19, 2014 4:51 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[sdm]]></name></author>
<updated>2014-12-19T12:56:51-07:00</updated>
<published>2014-12-19T12:56:51-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11984&amp;p=137806#p137806</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11984&amp;p=137806#p137806"/>
<title type="html"><![CDATA[Re: Trying CHR-Ram instead of CHR-Rom -]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11984&amp;p=137806#p137806"><![CDATA[
Work poorly (I used only INC to test CHR bytes), but I think it's a good way..<br /><br /><br />EDIT: Demo3.nes - almost work <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" /><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=411">sdm</a> — Fri Dec 19, 2014 12:56 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Dwedit]]></name></author>
<updated>2014-12-19T11:27:49-07:00</updated>
<published>2014-12-19T11:27:49-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11984&amp;p=137800#p137800</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11984&amp;p=137800#p137800"/>
<title type="html"><![CDATA[Re: Trying CHR-Ram instead of CHR-Rom -]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11984&amp;p=137800#p137800"><![CDATA[
Rotate is not a circular operation, it shifts in the carry flag as the new bit, and shifts out the old bit as the carry flag.  If you want a circular rotation, rotate once, then load the original byte back in, then rotate again.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=53">Dwedit</a> — Fri Dec 19, 2014 11:27 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[sdm]]></name></author>
<updated>2014-12-19T09:42:09-07:00</updated>
<published>2014-12-19T09:42:09-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11984&amp;p=137786#p137786</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11984&amp;p=137786#p137786"/>
<title type="html"><![CDATA[Re: Trying CHR-Ram instead of CHR-Rom -]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11984&amp;p=137786#p137786"><![CDATA[
Recently I was thinking about the methods of animating BGR TILE through CHR RAM memory access.<br />I came up with the idea to animate using only one rotation TILE (via ROL / ROR tile bytes). <br />The first tests were wrong, I tried update BGR TILE byte (via 2006/2007) , but unfortunately, all the graphics disappear. (This method could use to create a second, pseudo-moving backgrounds plans?)<br /><br />I did sample a video to illustrate question: (not real demo - only visualization!)<br /><a href="http://www.youtube.com/watch?v=klPWtviZCFI" class="postlink">http://www.youtube.com/watch?v=klPWtviZCFI</a><br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent"><br />Rotate   .db 00<br /><br />NMI/Inf.Loop:<br />   ROL Rotate<br /><br /><br />UpdateTile:<br />   LDA #$00<br />   STA $2006<br />   LDA #$10<br />   STA $2006<br /><br />   LDA Rotate<br />   STA $2007<br /></div><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=411">sdm</a> — Fri Dec 19, 2014 9:42 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[koitsu]]></name></author>
<updated>2014-11-06T10:54:33-07:00</updated>
<published>2014-11-06T10:54:33-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11984&amp;p=136112#p136112</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11984&amp;p=136112#p136112"/>
<title type="html"><![CDATA[Re: Trying CHR-Ram instead of CHR-Rom -]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11984&amp;p=136112#p136112"><![CDATA[
Possibly (I have no proof of this) the write to $2000 is what fixed it.  See the bottom of tokumaru's post after mine on the first page, re: how the PPU internally &quot;keeps track&quot; of where it's writing, and how $2000/2005/2006/2007 all &quot;tweak&quot; the PPU.<br /><br />You're gonna eventually have to do what thefox recommended above, as you add more and more complexity to things, so might as well get in the habit.  FCEUX and Nintendulator offer good real-time debuggers.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3">koitsu</a> — Thu Nov 06, 2014 10:54 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[thefox]]></name></author>
<updated>2014-11-06T03:02:15-07:00</updated>
<published>2014-11-06T03:02:15-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11984&amp;p=136108#p136108</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11984&amp;p=136108#p136108"/>
<title type="html"><![CDATA[Re: Trying CHR-Ram instead of CHR-Rom -]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11984&amp;p=136108#p136108"><![CDATA[
You could find out the real reason in no time by stepping through the code execution in a debugging emulator. No need to play guessing games.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=80">thefox</a> — Thu Nov 06, 2014 3:02 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[JoeGtake2]]></name></author>
<updated>2014-11-05T21:51:43-07:00</updated>
<published>2014-11-05T21:51:43-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11984&amp;p=136103#p136103</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11984&amp;p=136103#p136103"/>
<title type="html"><![CDATA[Re: Trying CHR-Ram instead of CHR-Rom -]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11984&amp;p=136103#p136103"><![CDATA[
Strange - I thought I had rendering turned off...I'm doing this all before I actually turn rendering on.  I'll check again, but I'm pretty sure.  That was my first attempt at a fix.'<br /><br />It seems I was able to fix it - but I'm not sure why this fixed it.  I have both rendering and NMI disabled while I clear the ram during reset...I was attempting to load the graphics to RAM just prior to turning both back on fir the first time...and it was giving me the issue outlined.  Just on a whim, I tried writing #$00 to $2000 and $2001 again JUST before JSRing to the routine...works fine now.  What's funny is, rendering WAS turned off...so I suppose it could be blamed on an NMI triggering, but NMIs were still disabled...this seems redundant, but it seems to be working alright.  If anyone could shed light, I hate not knowing how I just fixed an issue!  haha.  But it's all good - it is working.<br /><br />Thanks guys.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6590">JoeGtake2</a> — Wed Nov 05, 2014 9:51 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Memblers]]></name></author>
<updated>2014-11-05T21:49:01-07:00</updated>
<published>2014-11-05T21:49:01-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11984&amp;p=136102#p136102</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11984&amp;p=136102#p136102"/>
<title type="html"><![CDATA[Re: Trying CHR-Ram instead of CHR-Rom -]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11984&amp;p=136102#p136102"><![CDATA[
I would think to do it after loading the pattern tables, while the screen is off.  Just for initializing, of course the updates during gameplay would be to individual columns and/or rows.<br /><br />What I've done in my programs was create a buffer in RAM, and write it during NMI if it's flagged as ready.  The size of the buffer would have to be adjusted to fit the vblank time available.  I believe it's 22 scanlines, and 113.666 CPU cycles per line is about 2500 cycles.  You need sprite DMA, so subtract maybe 519 cycles to handle that.  I find it easiest to also rewrite the palette every frame (whether it changed or not), so subtract some time to handle that.  So there's time left to write a good amount of name and attribute data, but the data needs to be ready, so it's buffered.<br /><br />I used a setup that tracked number of bytes to copy, VRAM address destination, data, ... so it would do multiple 'packets', for name and attribute updates.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=10">Memblers</a> — Wed Nov 05, 2014 9:49 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2014-11-05T21:42:10-07:00</updated>
<published>2014-11-05T21:42:10-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11984&amp;p=136101#p136101</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11984&amp;p=136101#p136101"/>
<title type="html"><![CDATA[Re: Trying CHR-Ram instead of CHR-Rom -]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11984&amp;p=136101#p136101"><![CDATA[
With rendering turned off (<tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">lda #$00 sta $2001</tt>), you can fill all 512 tiles of VRAM. If that doesn't work, perhaps your NMI handler is interfering with the VRAM address.<br /><br />Blanking the screen for up to 250 ms will seem reasonably instantaneous. That's about 450,000 CPU cycles, or 55 cycles per byte, which is enough time for decompression of CHR data in addition to straight copying.<br /><br /><a href="https://pineight.com/nes/#rhde" class="postlink">RHDE: Furniture Fight</a> has a fairly sophisticated &quot;manager&quot; in bg.s, though most of its complexity doesn't kick in outside the &quot;furnish&quot; phase.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Wed Nov 05, 2014 9:42 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2014-11-05T21:36:37-07:00</updated>
<published>2014-11-05T21:36:37-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11984&amp;p=136099#p136099</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11984&amp;p=136099#p136099"/>
<title type="html"><![CDATA[Re: Trying CHR-Ram instead of CHR-Rom -]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11984&amp;p=136099#p136099"><![CDATA[
<div class="quotetitle">JoeGtake2 wrote:</div><div class="quotecontent"><br />I'm wondering what is the general method of initiating pattern tables for folks who ARE using RAM?<br /></div><br />For big VRAM updates people often turn rendering off (background and sprites) in order to have free access to VRAM. It's very easy to slip in a couple of blank frames between a title screen and the first screen of the level, for example.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />I generally understand the vBlank, I'm just not sure how to load x-data, then wait for the next frame to load more data...for instance, if I loaded all of the graphics enough to fill the pattern tables during a series of frames at the start of the game (which I'm assuming is the method used), it would be instantaneous enough to the player where I don't think it'd matter all that much...is this the way most folks using CHR RAM do it?  And if so, how would I spread it out over multiple vBlanks?<br /></div><br />You only need to spread updates across multiple VBlanks if you need to display a picture while these updates are happening. If a blank screen (containing only the background color) is fine, the easiest thing surely is to disable rendering and just write as much data as you want to VRAM, and enable rendering again when you're done.<br /><br />If you actually do need to spread updates across several VBlanks, your game loop should be keeping track of frames and VBlanks, otherwise you wouldn't have a game. Game loops usually have the game logic first (e.g. the controllers are read, the player and other objects are moved, and so on), at which time PPU updates are buffered (the PPU can't be updated at this time because it isn't VBlank yet), then the game waits for VBlank, and when Vblank starts, all the buffered updates are executed (sprites, name tables, palettes, etc. are all update now using data calculated and buffered while the game logic was running. Then it jumps back to the game logic to calculate all the data for the next frame.<br /><br />Simple games usually have simple buffering systems, and the same kinds of updates are performed every Vblank, but games with scrolling, background animations and so on usually have some sort of queue or a priority system to manage which updates are performed when, so as not to extrapolate the VBlank time. If wanted to spread a big pattern table update across multiple frames you'd have to create some sort of manager to handle a queue of requested updates, limiting how many tiles can be updated each frame.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Wed Nov 05, 2014 9:36 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[JoeGtake2]]></name></author>
<updated>2014-11-05T20:49:29-07:00</updated>
<published>2014-11-05T20:49:29-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11984&amp;p=136094#p136094</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11984&amp;p=136094#p136094"/>
<title type="html"><![CDATA[Re: Trying CHR-Ram instead of CHR-Rom -]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11984&amp;p=136094#p136094"><![CDATA[
I sort of feeling it was a vBlank issue - that there were only so many cycles for these updates...thanks for confirming.<br /><br />I'm wondering what is the general method of initiating pattern tables for folks who ARE using RAM?  I generally understand the vBlank, I'm just not sure how to load x-data, then wait for the next frame to load more data...for instance, if I loaded all of the graphics enough to fill the pattern tables during a series of frames at the start of the game (which I'm assuming is the method used), it would be instantaneous enough to the player where I don't think it'd matter all that much...is this the way most folks using CHR RAM do it?  And if so, how would I spread it out over multiple vBlanks?  <br /><br />Thanks!<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6590">JoeGtake2</a> — Wed Nov 05, 2014 8:49 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[koitsu]]></name></author>
<updated>2014-11-05T20:44:08-07:00</updated>
<published>2014-11-05T20:44:08-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11984&amp;p=136093#p136093</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11984&amp;p=136093#p136093"/>
<title type="html"><![CDATA[Re: Trying CHR-Ram instead of CHR-Rom -]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11984&amp;p=136093#p136093"><![CDATA[
&quot;I can't load more than 106 tiles at a time&quot; means what exactly?  What happens?  What &quot;stops working&quot;?<br /><br />Gut feeling: you're not able to do lots of CHR-RAM updates within VBlank before graphical corruption occurs.<br /><br />If that's the case (remember, is speculative at this point): this is normal.  VBlank is a limited amount of time (the time it takes for the electron gun to effectively re-position from the bottom right of the screen to the top left of the screen), and you can calculate that in number of CPU cycles.  On NTSC systems, the number of CPU cycles (not the same as &quot;clock cycles&quot;) in VBlank is <a href="http://forums.nesdev.com/viewtopic.php?f=10&amp;t=7878" class="postlink">discussed here</a>.  The general recommendation is that VBlank on NTSC equates to roughly 2270 CPU cycles.<br /><br />If you really plan on needing to update that much CHR-RAM data in a single frame (during one VBlank), then you should be looking at either a) highly optimising your code (using less cycles) but this will only help up to a certain point, a) changing your implementation (e.g. don't update all tiles in a single VBlank), b) changing your game needs (design your levels differently, reuse lots of tiles, etc.), or c) use CHR-ROM with a mapper that supports it.<br /><br />Pros/cons of CHR-ROM vs. CHR-RAM <a href="http://wiki.nesdev.com/w/index.php/CHR_ROM_vs._CHR_RAM" class="postlink">are documented</a>.  (The section titled <a href="http://wiki.nesdev.com/w/index.php/CHR_ROM_vs._CHR_RAM#Effects_possible_with_both_types" class="postlink">&quot;Effects possible with both types&quot;</a> gives some numbers on how much you can do in a single VBlank, but that sounds awfully small (OAM DMA takes up 513 cycles, so maybe it is right?).<br /><br />If you do want to go back to CHR-ROM but want granularity on how much CHR data you switch in/out, consider <a href="http://wiki.nesdev.com/w/index.php/VRC2" class="postlink">Konami's VRC2</a> or <a href="http://wiki.nesdev.com/w/index.php/VRC4" class="postlink">VRC4</a>, both which offer 1KByte granularity; but there are other mappers which offer the same capability.  However, if you plan on making a game that needs to get released on cartridge, you need to pick a mapper that can be manufactured today.<br /><br />It all depends on what your needs/desires/wants are.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3">koitsu</a> — Wed Nov 05, 2014 8:44 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[JoeGtake2]]></name></author>
<updated>2014-11-05T20:25:46-07:00</updated>
<published>2014-11-05T20:25:46-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11984&amp;p=136092#p136092</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11984&amp;p=136092#p136092"/>
<title type="html"><![CDATA[Re: Trying CHR-Ram instead of CHR-Rom -]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11984&amp;p=136092#p136092"><![CDATA[
Alright, so based on all the help, I have this working flawlessly.  Tokumaru - once I got the fundamentals down, implementing the variable method you suggested was very easy and is awesome.  Now I've got it set up to load as many tiles wherever I want in the pattern table...very logical and is right in line with what I wanted to achieve.<br /><br />However, it can only load 106 tiles at a time...any number higher than that just stops loading.  Even if I call the routine consecutively, still the same limit.  Obviously, during the game when swapping out chr data into ram, I wouldn't be moving 106 tiles at a time...likely at most 64 tiles at a time.  However, I was trying to just initiate the pattern tables prior to jumping to the main game loop, and can't load any more than 106 tiles (again, even with multiple consecutive calls to the routine). <br /><br />Any thoughts to why this is so, and how I can get around it?  How do people commonly set up their pattern tables init using CHR-RAM?<br /><br />Thanks so much!<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6590">JoeGtake2</a> — Wed Nov 05, 2014 8:25 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[JoeGtake2]]></name></author>
<updated>2014-11-02T18:45:08-07:00</updated>
<published>2014-11-02T18:45:08-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11984&amp;p=135922#p135922</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11984&amp;p=135922#p135922"/>
<title type="html"><![CDATA[Re: Trying CHR-Ram instead of CHR-Rom -]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11984&amp;p=135922#p135922"><![CDATA[
Totally makes sense, and makes sense why the offset is happening the higher the number got.<br /><br />Thanks lidnariq!  And everyone else who has been contributing. <br /><br />Joe G<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6590">JoeGtake2</a> — Sun Nov 02, 2014 6:45 pm</p><hr />
]]></content>
</entry>
</feed>