<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=20&amp;t=11002" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2014-02-11T13:16:29-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=20&amp;t=11002</id>
<entry>
<author><name><![CDATA[MoZI]]></name></author>
<updated>2014-02-11T08:07:01-07:00</updated>
<published>2014-02-11T08:07:01-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11002&amp;p=125366#p125366</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11002&amp;p=125366#p125366"/>
<title type="html"><![CDATA[Re: Gameboy Sound Question]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11002&amp;p=125366#p125366"><![CDATA[
That's a great list. I had looked at a few of the other chips on there like the YMF282, which I still want to do, but it looked like it would have been too much to figure out. I had initially thought the GameBoy would be easier since it could only do a few things, but the AY-3-8910 seems like the one to start with. The manual is super nice. It's like &quot;Hello friend. We're glad your here. You are really going to like using the AY38910. Here's how to do everything you want to do.&quot;<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6391">MoZI</a> — Tue Feb 11, 2014 8:07 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[lidnariq]]></name></author>
<updated>2014-02-10T22:59:53-07:00</updated>
<published>2014-02-10T22:59:53-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11002&amp;p=125357#p125357</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11002&amp;p=125357#p125357"/>
<title type="html"><![CDATA[Re: Gameboy Sound Question]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11002&amp;p=125357#p125357"><![CDATA[
<div class="quotetitle">MoZI wrote:</div><div class="quotecontent"><br />I actually found a really simple stripped down Arduino project that uses [an AY-8910] instead.<br /></div>There are a large suite of other sound-making ICs, in case any of them are any easier to interface or program or more fun:<br />wikipedia links: <a href="https://en.wikipedia.org/wiki/List_of_Yamaha_products#Sound_chips" class="postlink">various Yamaha parts</a>, <a href="https://en.wikipedia.org/wiki/Sound_chip" class="postlink">incomplete list of other sound ICs</a><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3512">lidnariq</a> — Mon Feb 10, 2014 10:59 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[MoZI]]></name></author>
<updated>2014-02-10T22:29:48-07:00</updated>
<published>2014-02-10T22:29:48-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11002&amp;p=125355#p125355</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11002&amp;p=125355#p125355"/>
<title type="html"><![CDATA[Re: Gameboy Sound Question]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11002&amp;p=125355#p125355"><![CDATA[
<div class="quotetitle">lidnariq wrote:</div><div class="quotecontent"><br />the world's most obnoxious-to-use knockoff of an AY-8910<br /></div><br />You guys know all things that are good. I actually found a really simple stripped down Arduino project that uses this processor instead.<br /><br /><div class="quotetitle">lidnariq wrote:</div><div class="quotecontent"><br />it doesn't really make sense to ignore the CPU that's already part of the hardware.<br /></div><br />Agreed. The project I was trying to incorporate the GameBoy into is a MIDI sequencer that sends MIDI to my hardware synthesizers. By itself, it doesn't make any sound, so I wanted a low power sound generator that I could embed in the sequencer that I could use to make noise when I'm not in the studio plugged into my other gear. This is more than I want to take on while I am still working on the sequencer.<br /><br />Thanks for everyone's input!<br /><br />...although, the GBA setup sounds interesting.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6391">MoZI</a> — Mon Feb 10, 2014 10:29 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2014-02-10T16:59:59-07:00</updated>
<published>2014-02-10T16:59:59-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11002&amp;p=125349#p125349</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11002&amp;p=125349#p125349"/>
<title type="html"><![CDATA[Re: Gameboy Sound Question]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11002&amp;p=125349#p125349"><![CDATA[
That'd be either the MBV2 cable or <a href="http://nocash.emubase.de/gba-xboo.htm" class="postlink">this project by nocash</a>.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Mon Feb 10, 2014 4:59 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[lidnariq]]></name></author>
<updated>2014-02-10T16:29:04-07:00</updated>
<published>2014-02-10T16:29:04-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11002&amp;p=125348#p125348</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11002&amp;p=125348#p125348"/>
<title type="html"><![CDATA[Re: Gameboy Sound Question]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11002&amp;p=125348#p125348"><![CDATA[
The point was not needing to physically move anything: the GBA equivalent of blargg's rs232-to-NES cable.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3512">lidnariq</a> — Mon Feb 10, 2014 4:29 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2014-02-10T15:34:03-07:00</updated>
<published>2014-02-10T15:34:03-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11002&amp;p=125347#p125347</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11002&amp;p=125347#p125347"/>
<title type="html"><![CDATA[Re: Gameboy Sound Question]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11002&amp;p=125347#p125347"><![CDATA[
lidnariq: You'd like the GBA Movie Player. It runs mb.gba binaries from a CF card.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Mon Feb 10, 2014 3:34 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[lidnariq]]></name></author>
<updated>2014-02-11T13:16:29-07:00</updated>
<published>2014-02-10T15:25:13-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11002&amp;p=125346#p125346</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11002&amp;p=125346#p125346"/>
<title type="html"><![CDATA[Re: Gameboy Sound Question]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11002&amp;p=125346#p125346"><![CDATA[
I'm really not certain how to usefully integrate an external microcontroller here. The power-on licensing test requires either knowing the exact order the bootstrap code reads so that the micro can feed them, or else using a ROM. Once you're using a ROM instead of treating the GB as the world's most obnoxious-to-use knockoff of an AY-8910, it doesn't really make sense to ignore the CPU that's already part of the hardware.<br /><br />The design that shiftmore uses the array of '245s and '138 to fake an 8-byte ROM that contains the five-byte sequence <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">$A0 dd $8C aa $40 ob ob ob</tt>, which becomes be <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">LDY #dd / STY $40aa<s>/ RTI / RTI / RTI</s></tt>. On 2A03 power-up, it reads the reset vector from $FFFC ($40) and then $FFFD (open bus, so still $40), which effectively means it starts executing at $4040. Whenever it overflows and starts executing <s>the RTIs, it pulls $40 from the stack all the time, and so returns to $4040.</s> the value of open bus, which will be the same as the value written to the register. I have no idea how that doesn't crash all the time; certain values when interpreted as an instruction (e.g. 2) cause the 6502 to stop executing code until it's reset. <s>That&#39;s ... astoundingly cleverly hacky, although I&#39;d be more comfortable with it not explicitly depending on open bus behavior &#40;It doesn&#39;t protect the user against stupidity: if the user enables APU interrupts, it could interrupt code mid-sequence and then crash. There are specific values of dd and aa which would cause a crash if an interrupt arrived at the right time, e.g. d=3 and a=2.</s><br /><br /><br />wild tangent: Something that I've wanted for a while for the GBA multiboot would be something that made it look like a USB hard drive, so that you'd just copy a 256KiB image onto it and the GBA would run it.<br /><br /><span style="font-size: 70%; line-height: normal">edit: back in the school of &quot;how on earth did this ever work?&quot;</span><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3512">lidnariq</a> — Mon Feb 10, 2014 3:25 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2014-02-10T15:15:23-07:00</updated>
<published>2014-02-10T15:15:23-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11002&amp;p=125345#p125345</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11002&amp;p=125345#p125345"/>
<title type="html"><![CDATA[Re: Gameboy Sound Question]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11002&amp;p=125345#p125345"><![CDATA[
The Game Boy needs to be running a program to receive the notes from the serial port at the side and play them through the speaker. On the original Game Boy and the Game Boy Color, this program must be on a Game Pak. The Game Boy Advance, on the other hand, can boot a small (&lt;250K) program from its serial port, and homebrewers would routinely use this &quot;MultiBoot&quot; method to test code.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Mon Feb 10, 2014 3:15 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[MoZI]]></name></author>
<updated>2014-02-10T14:31:15-07:00</updated>
<published>2014-02-10T14:31:15-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11002&amp;p=125344#p125344</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11002&amp;p=125344#p125344"/>
<title type="html"><![CDATA[Re: Gameboy Sound Question]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11002&amp;p=125344#p125344"><![CDATA[
Looking at the GameBoy CPU Manual, it seems like the first thing I don't think I can overcome without the cartridge is the startup check the GameBoy requires before it switches to the cartridge rom, but then after that initial check, can I run a loop that checks the cartridge RAM for values I write to it from the Arduino? The ArduinoBoy sends MIDI over the side input on the side input on the GameBoy. Is it just a matter of writing notes to the cartridge RAM and letting them play at that point?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6391">MoZI</a> — Mon Feb 10, 2014 2:31 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[MoZI]]></name></author>
<updated>2014-02-10T13:10:36-07:00</updated>
<published>2014-02-10T13:10:36-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11002&amp;p=125339#p125339</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11002&amp;p=125339#p125339"/>
<title type="html"><![CDATA[Re: Gameboy Sound Question]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11002&amp;p=125339#p125339"><![CDATA[
Thanks for the fast reply.  <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" /> <br /><br />I absolutely agree that I should start simple. At this point, I am still trying to learn enough about how these systems work to know what will be simple. The reason I thought something like what I am describing is possible is because of a few projects that use Arduinos to somehow trigger notes.<br /><br />The first is SonikTech's early NES experiments.... <!-- m --><a class="postlink" href="http://www.soniktech.com/tsundere/">http://www.soniktech.com/tsundere/</a><!-- m --> (this is what I was talking about when I said early ChipMaestro prototype)<br /><br />Then, on Shiftmore's blog he uses SonikTech's work to translate it to an Arduino Uno .... <!-- m --><a class="postlink" href="http://shiftmore.blogspot.com/2012/11/arduino-controlled-nes-2a03-synth-part-i.html">http://shiftmore.blogspot.com/2012/11/a ... art-i.html</a><!-- m --><br /><br />I don't understand a lot about how they are doing this stuff, but it was my jumping off point since I am already using the Arduino Uno to send and recieve MIDI messages and I have digital pinouts available on the board. I also don't really know how closely the Gameboy's audio system resembles the NES even though, as far I understand it, they seem similar. I really only decided to look into the Gameboy because I could mount it's guts inside my controller and power it with batteries, but if the NES is easier to figure I could go with it to make noise, I would just need to build a bigger enclosure.<br /><br />Am I completely misunderstanding what they are doing?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6391">MoZI</a> — Mon Feb 10, 2014 1:10 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[lidnariq]]></name></author>
<updated>2014-02-10T11:46:28-07:00</updated>
<published>2014-02-10T11:46:28-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11002&amp;p=125335#p125335</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11002&amp;p=125335#p125335"/>
<title type="html"><![CDATA[Re: Gameboy Sound Question]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11002&amp;p=125335#p125335"><![CDATA[
<div class="quotetitle">MoZI wrote:</div><div class="quotecontent"><br />Can I just put these values into the system memory using the cartridge connector pins connected to my Arduino and have them read from there?<br /></div>No, you'll have to write GBZ80 code. SDCC does support writing C for the Gameboy, so this isn't too much of a barrier.<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />If not, do I then need to simulate a rom somehow? The orginal ChipMaestro project was using doing something similar for the NES I think.<br /></div>You'll either need a ROM or the ability to fake one by providing data to the CPU at the right time. The timing of the GBZ80 is tighter (wait states are briefer) so this is likely harder than for the NES. A general-purpose ROM emulator was commercially released for the Atari 2600 (the &quot;harmony cart&quot;): it uses a 70MHz ARM to emulate a 32KiB ROM. But the 2600 is 2/3 the speed of the NES.<br />There are techniques that would allow a <em>non-</em>general purpose ROM emulator with lower demands, but I would strongly encourage doing something simpler (i.e. an actual ROM) before attempting them. Similarly, I'm pretty certain the ChipMaestro is significantly more complicated (both routing difficulty and code complexity) than the equivalent functionality implemented using just 6502 code.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3512">lidnariq</a> — Mon Feb 10, 2014 11:46 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[MoZI]]></name></author>
<updated>2014-02-10T11:15:45-07:00</updated>
<published>2014-02-10T11:15:45-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11002&amp;p=125332#p125332</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11002&amp;p=125332#p125332"/>
<title type="html"><![CDATA[Gameboy Sound Question]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11002&amp;p=125332#p125332"><![CDATA[
Hi Everybody,<br /><br />I talk too much so to just see my questions skip down past the context description...<br /><br />To put my questions in context {<br />I've already learned a lot from reading through everyone's posts here, as well as from all of the links shared. However, I am new to developing and interfacing with older systems, as most of the programming I've done is with higher level languages like C#, PHP, etc for web development, but I am dying to figure out how to get into making hardware prototypes for things.<br /><br />I have been using Arduino boards to control MIDI enabled devices, and I more or less understand how that environment functions. I have a sequencer prototype that will output MIDI to MIDI devices, but I could just as easily send out messages other than MIDI from my hardware's button pushes and knob turns (ie binary commands to Gameboy's CPU.) I don't understand exactly how this works for the Gameboy (or NES.)<br /><br />Most of the information I have found for Programming audio uses a cartridge to hold the values to be read into the CPU to be used to tell it what sound to make. I have seen Nanoloop, mGB, and LSDJ where this is the flow, but when looking into how to flash cartridges and the hardware to put compiled code onto the cartridge, I found that most of the equipment to do this is either homemade or super rare and expensive.}<br /><br />Questions {<br />So I have found a lot of documentation for the register values the Gameboy uses to tell the CPU to make a noise. Can I just put these values into the system memory using the cartridge connector pins connected to my Arduino and have them read from there?<br /><br />If yes, where exactly do these commands need to go in the Gameboy?<br /><br />If not, do I then need to simulate a rom somehow? The orginal ChipMaestro project was using doing something similar for the NES I think.<br /><br />Forgive my ignorance, I am still learning, but feel free to point out where I am misunderstanding how these systems work.<br /><br />Thanks!<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6391">MoZI</a> — Mon Feb 10, 2014 11:15 am</p><hr />
]]></content>
</entry>
</feed>