<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=5&amp;t=12060" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2014-11-26T00:27:45-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=5&amp;t=12060</id>
<entry>
<author><name><![CDATA[psycopathicteen]]></name></author>
<updated>2014-11-26T00:27:45-07:00</updated>
<published>2014-11-26T00:27:45-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12060&amp;p=136923#p136923</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12060&amp;p=136923#p136923"/>
<title type="html"><![CDATA[Re: Fizzbuzz and programmer competence]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12060&amp;p=136923#p136923"><![CDATA[
<div class="quotetitle">Bregalad wrote:</div><div class="quotecontent"><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">But optimization without profiling first is itself a bad practice.<br /></div><br />I voiced my opinion about this in a 6502.org forum post, so I'll just <a href="http://forum.6502.org/viewtopic.php?f=2&amp;t=3004#p33995" class="postlink">refer to it</a>.<br />Besides, not using modulo for solving fizzbuzz is not only an optimisation, but also common sense. If the goal of the interviewer would be to see the candidate's familiarity with modulo, he won't be seeing it from me, because I am am not likely modulo to solve this kind of problem.<br /><br /></div><br /><br />Here is a better one-linear.<br /><br />Avoid small optimizations, say, 97% of the time.  If your program runs too slow, just redo 97% of it.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4383">psycopathicteen</a> — Wed Nov 26, 2014 12:27 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Light-Dark]]></name></author>
<updated>2014-11-25T20:23:10-07:00</updated>
<published>2014-11-25T20:23:10-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12060&amp;p=136919#p136919</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12060&amp;p=136919#p136919"/>
<title type="html"><![CDATA[Re: Fizzbuzz and programmer competence]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12060&amp;p=136919#p136919"><![CDATA[
<div class="quotetitle">Bregalad wrote:</div><div class="quotecontent"><br />But for some reason, in capitalism economy, companies just tend to be a$$holes and don't take seriously their roles of feeding the population anymore, since all other alternatives to capitalism around the world are virtually extinct and there is no need to promote it anymore. (Communist china (and other Asian satellite countries) is no longer a communist country, it's just a huge slave reserve for capitalist countries)<br /></div> And one day the western workers and the exploited Chinese and other exploited peoples will be pissed off with their  industrial masters apathy and disconnect and hopefully stage a proper revolution in their now educated and now industrialized nation. The other socialist revolutions arguably dilapidated because they took place in then underdeveloped and largely agrarian nations where the peasantry wasn't well educated and the urban working class wasn't very large like it was in the slums of Europe where Socialism originated from and the leaders of the respective revolutions had therefore little faith in the masses and never, in at least Lenin's case, released power back to the workers councils (or Soviets). Sorry for derailing  <img src="http://forums.nesdev.com/images/smilies/icon_redface.gif" alt=":oops:" title="Embarassed" /> this topic really fascinates me being part Eastern European.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6291">Light-Dark</a> — Tue Nov 25, 2014 8:23 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2014-11-25T13:46:39-07:00</updated>
<published>2014-11-25T13:46:39-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12060&amp;p=136913#p136913</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12060&amp;p=136913#p136913"/>
<title type="html"><![CDATA[Re: Fizzbuzz and programmer competence]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12060&amp;p=136913#p136913"><![CDATA[
I agree with your post on 6502.org. But &quot;profiling first&quot; can be taken in a broad sense. For example, say you tried an algorithm or data structure in a previous project and found it too slow, and then you decided against using it in a similar circumstance in a later project. In that case, you &quot;profiled first&quot;.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Tue Nov 25, 2014 1:46 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2014-11-25T13:39:11-07:00</updated>
<published>2014-11-25T13:39:11-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12060&amp;p=136912#p136912</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12060&amp;p=136912#p136912"/>
<title type="html"><![CDATA[Re: Fizzbuzz and programmer competence]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12060&amp;p=136912#p136912"><![CDATA[
<div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />But optimization without profiling first is itself a bad practice.<br /></div><br />I voiced my opinion about this in a 6502.org forum post, so I'll just <a href="http://forum.6502.org/viewtopic.php?f=2&amp;t=3004#p33995" class="postlink">refer to it</a>.<br />Besides, not using modulo for solving fizzbuzz is not only an optimisation, but also common sense. If the goal of the interviewer would be to see the candidate's familiarity with modulo, he won't be seeing it from me, because I am am not likely modulo to solve this kind of problem.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />When it comes to interviewing candidates, ask them real-world questions, i.e. practical things, not hypothetical.<br /></div><br />Yeah, not only this is more useful to the company so they actually hire the people who are the most suited for the job, but it's also more useful for the unhired people, so that they have a better why they were rejected, and what they should do to improve and learn for next job positions. But for some reason, in capitalism economy, companies just tend to be a$$holes and don't take seriously their roles of feeding the population anymore, since all other alternatives to capitalism around the world are virtually extinct and there is no need to promote it anymore. (Communist china (and other Asian satellite countries) is no longer a communist country, it's just a huge slave reserve for capitalist countries)<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Tue Nov 25, 2014 1:39 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Sik]]></name></author>
<updated>2014-11-25T03:11:05-07:00</updated>
<published>2014-11-25T03:11:05-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12060&amp;p=136906#p136906</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12060&amp;p=136906#p136906"/>
<title type="html"><![CDATA[Re: Fizzbuzz and programmer competence]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12060&amp;p=136906#p136906"><![CDATA[
I almost spit out my tea (literally, I was just drinking tea when I saw randomSort).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4526">Sik</a> — Tue Nov 25, 2014 3:11 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[lidnariq]]></name></author>
<updated>2014-11-24T22:44:29-07:00</updated>
<published>2014-11-24T22:44:29-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12060&amp;p=136904#p136904</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12060&amp;p=136904#p136904"/>
<title type="html"><![CDATA[Re: Fizzbuzz and programmer competence]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12060&amp;p=136904#p136904"><![CDATA[
There's nothing quite like bogosort.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3512">lidnariq</a> — Mon Nov 24, 2014 10:44 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[koitsu]]></name></author>
<updated>2014-11-24T22:42:26-07:00</updated>
<published>2014-11-24T22:42:26-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12060&amp;p=136902#p136902</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12060&amp;p=136902#p136902"/>
<title type="html"><![CDATA[Re: Fizzbuzz and programmer competence]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12060&amp;p=136902#p136902"><![CDATA[
I'll just leave this here.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3">koitsu</a> — Mon Nov 24, 2014 10:42 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Tom]]></name></author>
<updated>2014-11-24T18:52:04-07:00</updated>
<published>2014-11-24T18:52:04-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12060&amp;p=136897#p136897</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12060&amp;p=136897#p136897"/>
<title type="html"><![CDATA[Re: Fizzbuzz and programmer competence]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12060&amp;p=136897#p136897"><![CDATA[
<div class="quotetitle">Bregalad wrote:</div><div class="quotecontent"><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">They just have no idea where to even begin on the problem.<br /></div><br />Pehaps they just think the question is a trap (because it's so easy it's fishy) and are trying to foresee it, ending up failing miserably at the original question ?</div><br />I don't think so.  When people are struggling, I start giving them help, sometimes to the point where I just show them a solution.  And none of them said &quot;oh that's all?  I thought it had to be more complicated than that.&quot;<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=120">Tom</a> — Mon Nov 24, 2014 6:52 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[koitsu]]></name></author>
<updated>2014-11-24T14:04:24-07:00</updated>
<published>2014-11-24T14:04:24-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12060&amp;p=136881#p136881</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12060&amp;p=136881#p136881"/>
<title type="html"><![CDATA[Re: Fizzbuzz and programmer competence]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12060&amp;p=136881#p136881"><![CDATA[
As someone who <strong>does not</strong> do programming as part of his career -- I'm a UNIX SA, and thus am what I call a &quot;practical programmer&quot; -- here's my take on it (because I get asked programming questions pretty much any time I interview at a place of work):<br /><br />When it comes to interviewing candidates, ask them real-world questions, i.e. practical things, not hypothetical.<br /><br />Give the candidate a scenario that has actually happened in the past, such as a case where someone not understanding operator precedence resulted in ill-effects, or where bad design choices turned out to be catastrophic later on (i.e. a &quot;programming scalability&quot; question).  Don't probe them about silly things that really have nothing to do with the job.  A lot of the places I've interviewed at (including where I work at now!) tend to pose hypothetical or theoretical problems, not actual problems that are relevant to the group/division or role the individual is applying for.<br /><br />For example, at my current workplace, <a href="https://github.com/animoto/platform_engineer_interview" class="postlink">here's one of the problems candidates are asked to solve</a>.  When I found out we were using this as an interview question (it's not a question my group asks), I took it upon myself to try to solve it.  I asked myself &quot;Could I even do this?&quot; because I really didn't think I could.  It took me an entire day to write, with all sorts of edge cases not handled (and this is intentional on the part of the challenge, believe it or not -- for example the lack of an ABNF that defines what the term &quot;word&quot; meant posed serious problems for me).<br /><br />After I submitted my results, I asked the guy who wrote that scenario the following: &quot;is this something that we actually had to solve here at work?&quot;  The answer was &quot;No.  It's just to determine the candidate's familiarity with programming and problem-solving&quot;.  So to me, it was a highly-glorified fizzbuzz test, and generally-speaking I don't think that's a worthwhile test.  Well, it is and it isn't I guess -- if you aren't sure if the candidate even knows how to program, maybe asking them something like this is worthwhile, but otherwise I don't think it acts as a good indicator of the quality of work you'd get from the interviewee.<br /><br />Fizzbuzz is one of those questions you ask someone to see 1) if they have ever done programming at all, and 2) if they have basic math skills (specifically have familiarity with the modulus operator).  Fizzbuzz otherwise is kinda pointless; for example, in my entire life and career, I've only had to use modulus a few times.  But that's based on my background and what I do, and as I said above I'm not a professional programmer.<br /><br />Funnily enough, the only time I've ever been asked a fairly low-level programming question was when I was interviewing for a UNIX SA position at an ISP -- I had two Russian guys grilling me about assembly language after reviewing my resume.  One of them asked &quot;So if you know all this, then tell me fastest way to swap two registers without temp variable&quot;, to which I replied immediately &quot;XOR?&quot;.  The other Russian started laughing at his colleague, since apparently nobody had ever gotten that question right (and they'd worked at previous jobs together), followed by a really big smile.  Did I ever do any assembly programming at that job?  Not a single line.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3">koitsu</a> — Mon Nov 24, 2014 2:04 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2014-11-24T13:30:23-07:00</updated>
<published>2014-11-24T13:30:23-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12060&amp;p=136880#p136880</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12060&amp;p=136880#p136880"/>
<title type="html"><![CDATA[Premature optimizations]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12060&amp;p=136880#p136880"><![CDATA[
Modulo to solve fizzbuzz is just fine on anything with a reasonably efficient divide instruction, just not on something like 6502 or 65816. The other solution keeps a separate state variable for each factor (3 or 5) that gets incremented for each number and then zeroed when it reaches the factor. But optimization without profiling first is itself a bad practice.<br /><br />Anything you do with a loop can be done with tail recursion, including O(n) computation of Fibonacci, by putting the loop's variables as argument to a function that calls itself. By definition:<br />fib(0) = 0<br />fib(1) = 1<br />fib(n) = fib(n - 1) + fib(n - 2)<br /><br />In tail call style, it looks like this:<br />fibmore(0, fn, fnm1) = fnm1<br />fibmore(nleft, fn, fnm1) = fibmore(nleft - 1, fnm1 + fn, fn)<br />fib(n) = fibmore(n, 1, 0)<br /><br />This is inefficient in, say, CPython but fine in languages that don't add tail calls to the stack.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Mon Nov 24, 2014 1:30 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tomaitheous]]></name></author>
<updated>2014-11-24T13:22:25-07:00</updated>
<published>2014-11-24T13:22:25-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12060&amp;p=136878#p136878</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12060&amp;p=136878#p136878"/>
<title type="html"><![CDATA[Re: Fizzter, an organic stub serif font for a counting game]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12060&amp;p=136878#p136878"><![CDATA[
<div class="quotetitle">tepples wrote:</div><div class="quotecontent"><br />As for &quot;sadistic old PIC style chips&quot;, what do you think the 6502 in the NES is? Sometimes you need to use an XOR trick to select bits from two different variables.<br /></div><br />Old PIC design <strong><em><span style="text-decoration: underline">!=</span></em></strong> 6502. Not by a long shot. I'm getting a sense of deja vu in this reply (6502 and PIC being compared). I've coded for the 16x series, and looked at others related in the series, and they are nothing like the 6502. Not only are they severely limited (IIRC a 3 word hardware stack, 40 something bytes of ram per page, etc), but their design is convoluted to hell and back - making even <em>simple </em>techniques of general purpose processors, complex and just a pain on the PIC. Coding the PIC in ASM was challenging and fun, but 6502 is advance space age technology from the future, by comparison. Granted, I'm talking about the old PIC chips; the newer models are less convoluted (IIRC the 18x series looked decent).<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Sure, but 95% of programmers won't care. They will just use the solution they find is the more elegant and sexy in the language they use, no matter how it is done after compilation or interpretation.<br /></div><br />I have no doubt. Seeing how it was implemented by examples (that I saw on the net), if I wrote such a routine that someone else might use or call at some point later in development with a different set of requirements - that's a potential problem if they don't adhere to caution or understand the limit/scope of the function. The risk isn't worth the trade off for some stylized or compact looking source code, or whatever. Then again, I probably write higher level code in some form or fashion that's at similar risk without even knowing it ;&gt;_&gt;<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3645">tomaitheous</a> — Mon Nov 24, 2014 1:22 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Dwedit]]></name></author>
<updated>2014-11-24T13:16:49-07:00</updated>
<published>2014-11-24T13:16:49-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12060&amp;p=136877#p136877</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12060&amp;p=136877#p136877"/>
<title type="html"><![CDATA[Re: Fizzbuzz and programmer competence]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12060&amp;p=136877#p136877"><![CDATA[
<div class="quotetitle">Bregalad wrote:</div><div class="quotecontent"><br />Actually not only swapping two variables without using temp is a sign of bad coding practice, but actually having to swap two variables in the 1st place is a sign of bad coding practice, in my honnest opinion.<br /></div><br />Swapping local variables might be bad, but not variables stored inside of structs (which won't live in registers).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=53">Dwedit</a> — Mon Nov 24, 2014 1:16 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2014-11-24T13:11:11-07:00</updated>
<published>2014-11-24T13:11:11-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12060&amp;p=136876#p136876</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12060&amp;p=136876#p136876"/>
<title type="html"><![CDATA[Re: Fizzbuzz and programmer competence]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12060&amp;p=136876#p136876"><![CDATA[
<div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Honestly I barely ever use recursion, since most of the time it doesn't even make sens<br /></div><br />I 100% agree with you. However, there is (other) people who like using recursion and think it's sexier than loops. That's where functional programming comes from.<br /><br />Computing Fibonacci as a recursion instead of a loop will move the complexity from O(n) to O(2^n) because you'll be doing the same computations many times. Therefore it's an *awful* example about how to make a recursion.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Not really, there are several algorithms that rely on swapping (sorting comes to mind).<br /></div><br />In the real world (I mean, outside the typical programming exercies) swapping pointers, or &quot;keys&quot;, instead of elements, is usually what is done.<br />Actually most of what is done in typical programming exercises, like sorting a list of numbers or printing a Fibonacci list, has no as-it applications in real world but have it's indirect applications, making the knowledge useful.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />They just have no idea where to even begin on the problem.<br /></div><br />Pehaps they just think the question is a trap (because it's so easy it's fishy) and are trying to foresee it, ending up failing miserably at the original question ?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Mon Nov 24, 2014 1:11 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Tom]]></name></author>
<updated>2014-11-24T13:06:14-07:00</updated>
<published>2014-11-24T13:06:14-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12060&amp;p=136875#p136875</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12060&amp;p=136875#p136875"/>
<title type="html"><![CDATA[Re: Fizzbuzz and programmer competence]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12060&amp;p=136875#p136875"><![CDATA[
<div class="quotetitle">Bregalad wrote:</div><div class="quotecontent"><br /><div class="quotetitle">Tom wrote:</div><div class="quotecontent">As somebody who occasionally interviews people for programmer jobs, I believe it. And it's not for the reasons you listed<br /></div><br />So please explain me the reason, then ?</div><br />I have no explanation; it really makes no sense.  But it has happened to me several times that I'm interviewing someone who seems pretty qualified, and they're answering my questions pretty well.  Then I give them a simple programming task, something that should take a couple minutes and we'll use that as the starting part for a more complicated question.  And then they completely fail the simple task and I'm utterly confused.  And it's not just syntax or making simple errors; I cut people some slack because I know people are nervous during interviews.  They just have no idea where to even begin on the problem.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=120">Tom</a> — Mon Nov 24, 2014 1:06 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Sik]]></name></author>
<updated>2014-11-24T13:00:19-07:00</updated>
<published>2014-11-24T13:00:19-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12060&amp;p=136874#p136874</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12060&amp;p=136874#p136874"/>
<title type="html"><![CDATA[Re: Fizzbuzz and programmer competence]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12060&amp;p=136874#p136874"><![CDATA[
<div class="quotetitle">Bregalad wrote:</div><div class="quotecontent"><br />Actually not only swapping two variables without using temp is a sign of bad coding practice, but actually having to swap two variables in the 1st place is a sign of bad coding practice, in my honnest opinion.<br /></div><br /><br />Not really, there are several algorithms that rely on swapping (sorting comes to mind). Also it can make some things simpler. Let's say you're making a routine that draws a shape, and you want to be able to take any set of coordinates to make things easier for the user (e.g. going either left or right, and/or either up or down). The easiest way to allow this is to check if the coordinates are swapped, and if so swap them again inside the function (ensuring they always go in the same direction), which can allow then using a simpler algorithm later on.<br /><br /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent"><br />Sure, but 95% of programmers won't care. They will just use the solution they find is the more elegant and sexy in the language they use, no matter how it is done after compilation or interpretation.<br /></div><br />Honestly I barely ever use recursion, since most of the time it doesn't even make sense (nor it's really that intuitive often, really, especially if it's just a replacement for loops). The fact most of the time it's taught in a way that makes it look nifty but with examples that rarely reflect the kind of stuff that is normally programmed in practice should be telling something, too. (seriously, how many people will need to write a function to compute factorials or fibonacci sequences? not to mention that the former is <em>extremely trivial</em> as a loop, and the latter could be done with a loop too without a stack if you try)<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4526">Sik</a> — Mon Nov 24, 2014 1:00 pm</p><hr />
]]></content>
</entry>
</feed>