<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - how big can a mapper get? (Mapper 163 questions)</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">how big can a mapper get? (Mapper 163 questions)</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=7989">http://forums.nesdev.com/viewtopic.php?f=2&amp;t=7989</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>3</strong> of <strong>3</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>MottZilla</b> [ Sat Jul 23, 2011 7:05 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Yes but for homebrew purposes there is nothing wrong with doing this for your own game. Afterall Nintendo never was going to have a NES game with 2 megabytes of ROM. I'd be interested in seeing a game that actually needed 2 megabytes of ROM.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sat Jul 23, 2011 8:56 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Action 52 uses 2 MB, but that's probably inefficiently coded. Donkey Kong Country for GBC (a system comparable to an NES with MMC5) uses 4 MB, but about half of each bank is blank.
<br />
<br />If you use more than 512 KB of PRG ROM, your program won't run on a PowerPak, and you'll need to solder together your own test cart.
<br />
<br />I'll try to have an SNROM template for you tonight so you can get started. Once you finish recoding Midgar, I should have the SUROM template ready.
<br />
<br />(When you're looking at the subway map, is that <a href="http://en.wikipedia.org/wiki/Cloud_computing" class="postlink">Cloud computing</a>?)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dwedit</b> [ Sat Jul 23, 2011 11:35 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I bet if someone ported the Zelda Oracles games to the NES, they would be 2MB in size when put together.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>halkun</b> [ Mon Jul 25, 2011 8:44 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I found some emulator code that describes how the bank switcher work for Mapper 163. Anyone care to translate? I'm just copying the bank switch code from the original rom, but I 'd like to have an idea of how it works. Here is two code snippets from two different emulators.
<br />
<br />I know that $5000 is a security check, and 5001-5003 switch the rom, but are the arguments?
<br />
<br />there is also a scan-line interrupt at 127&gt; I think. 
<br />
<br />anyone want to help decipher?
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">//////////////////////////////////////////////////////////////////////////<br />//&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Mapper163&nbsp; NanJing Games &#40;NES Chinese RPR game&#41;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //<br />//////////////////////////////////////////////////////////////////////////<br /><br />void&nbsp; &nbsp;Mapper163::Reset&#40;&#41;<br />&#123;<br />&nbsp; &nbsp;reg&#91;1&#93; = 0xFF;<br />&nbsp; &nbsp;strobe = 1;<br />&nbsp; &nbsp;security = trigger = reg&#91;0&#93; = 0x00;<br />&nbsp; &nbsp;SetPROM_32K_Bank&#40;15&#41;;<br />&nbsp; &nbsp;SetCRAM_8K_Bank&#40;0&#41;;<br />&#125;<br /><br />BYTE Mapper163::ReadLow&#40; WORD addr &#41;<br />&#123;<br />&nbsp; &nbsp;if&#40;&#40;addr&gt;=0x5000 &amp;&amp; addr&lt;0x6000&#41;&#41;<br />&nbsp; &nbsp;&#123;<br />&nbsp; &nbsp;&nbsp; &nbsp;switch &#40;addr &amp; 0x7700&#41;<br />&nbsp; &nbsp;&nbsp; &nbsp;&#123;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;case 0x5100:<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;return security;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;break;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;case 0x5500:<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;if&#40;trigger&#41;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;return security;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;else<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;return 0;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;break;<br />&nbsp; &nbsp;&nbsp; &nbsp;&#125;<br />&nbsp; &nbsp;&nbsp; &nbsp;return 4;<br />&nbsp; &nbsp;&#125;<br />&nbsp; &nbsp;else if&#40; addr&gt;=0x6000 &#41; &#123;<br />&nbsp; &nbsp;&nbsp; &nbsp;return&nbsp; &nbsp;CPU_MEM_BANK&#91;addr&gt;&gt;13&#93;&#91;addr&amp;0x1FFF&#93;;<br />&nbsp; &nbsp;&#125;<br />&nbsp; &nbsp;return 0;<br />&#125;<br /><br />void Mapper163::WriteLow&#40;WORD addr, BYTE data&#41;<br />&#123;<br />&nbsp; &nbsp;if&#40;&#40;addr&gt;=0x4020 &amp;&amp; addr&lt;0x6000&#41;&#41;<br />&nbsp; &nbsp;&#123;<br />&nbsp; &nbsp;&nbsp; &nbsp;if&#40;addr==0x5101&#41;&#123;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;if&#40;strobe &amp;&amp; !data&#41;&#123;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;trigger ^= 1;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&#125;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;strobe = data;<br />&nbsp; &nbsp;&nbsp; &nbsp;&#125;else if&#40;addr==0x5100 &amp;&amp; data==6&#41;&#123;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;SetPROM_32K_Bank&#40;3&#41;;<br />&nbsp; &nbsp;&nbsp; &nbsp;&#125;<br />&nbsp; &nbsp;&nbsp; &nbsp;else&#123;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;switch &#40;addr &amp; 0x7300&#41;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&#123;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;case 0x5000:<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;reg&#91;1&#93;=data;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;SetPROM_32K_Bank&#40; &#40;reg&#91;1&#93; &amp; 0xF&#41; | &#40;reg&#91;0&#93; &lt;&lt; 4&#41; &#41;;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;if&#40;!&#40;reg&#91;1&#93;&amp;0x80&#41;&amp;&amp;&#40;nes-&gt;ppu-&gt;GetScanlineNo&#40;&#41;&lt;128&#41;&#41;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;SetCRAM_8K_Bank&#40;0&#41;;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;break;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;case 0x5200:<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;reg&#91;0&#93;=data;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;SetPROM_32K_Bank&#40; &#40;reg&#91;1&#93; &amp; 0xF&#41; | &#40;reg&#91;0&#93; &lt;&lt; 4&#41; &#41;;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;break;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;case 0x5300:<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;security=data;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;break;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&#125;<br />&nbsp; &nbsp;&nbsp; &nbsp;&#125;<br />&nbsp; &nbsp;&#125;<br />&nbsp; &nbsp;else if&#40; addr&gt;=0x6000 &#41; &#123;<br />&nbsp; &nbsp;&nbsp; &nbsp;CPU_MEM_BANK&#91;addr&gt;&gt;13&#93;&#91;addr&amp;0x1FFF&#93; = data;<br />&nbsp; &nbsp;&#125;<br />&#125;<br /><br />void&nbsp; &nbsp;Mapper163::HSync&#40;int scanline&#41;<br />&#123;<br />&nbsp; &nbsp;if&#40; &#40;reg&#91;1&#93;&amp;0x80&#41; &amp;&amp; nes-&gt;ppu-&gt;IsDispON&#40;&#41; &#41; &#123;<br />&nbsp; &nbsp;&nbsp; &nbsp;if&#40;scanline==127&#41;&#123;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;SetCRAM_4K_Bank&#40;0, 1&#41;;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;SetCRAM_4K_Bank&#40;4, 1&#41;;<br />&nbsp; &nbsp;&nbsp; &nbsp;&#125;<br />&nbsp; &nbsp;&nbsp; &nbsp;if&#40;scanline==239&#41;&#123;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;SetCRAM_4K_Bank&#40;0, 0&#41;;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;SetCRAM_4K_Bank&#40;4, 0&#41;;<br />&nbsp; &nbsp;&nbsp; &nbsp;&#125;<br />&nbsp; &nbsp;&#125;<br />&#125;<br /><br />void&nbsp; &nbsp;Mapper163::SaveState&#40; LPBYTE p &#41;<br />&#123;<br />&nbsp; &nbsp;p&#91;0&#93; = reg&#91;0&#93;;<br />&nbsp; &nbsp;p&#91;1&#93; = reg&#91;1&#93;;<br />&#125;<br /><br />void&nbsp; &nbsp;Mapper163::LoadState&#40; LPBYTE p &#41;<br />&#123;<br /><br />&nbsp; &nbsp;reg&#91;0&#93; = p&#91;0&#93;;<br />&nbsp; &nbsp;reg&#91;1&#93; = p&#91;1&#93;;<br />&#125;<br /></div><br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">/*************************************************************<br /><br />&nbsp;Bootleg Board by Nanjing<br /><br />&nbsp;Games: A lot of pirate originals<br /><br />&nbsp;iNES: mapper 163<br /><br />&nbsp;In MESS: Unsupported.<br /><br />&nbsp;*************************************************************/<br /><br />static void nanjing_irq&#40; device_t *device, int scanline, int vblank, int blanked &#41;<br />&#123;<br />&nbsp; &nbsp;nes_state *state = device-&gt;machine&#40;&#41;.driver_data&lt;nes_state&gt;&#40;&#41;;<br /><br />&nbsp; &nbsp;if &#40;BIT&#40;state-&gt;m_mmc_reg&#91;0&#93;, 7&#41;&#41;<br />&nbsp; &nbsp;&#123;<br />&nbsp; &nbsp;&nbsp; &nbsp;if &#40;scanline == 127&#41;<br />&nbsp; &nbsp;&nbsp; &nbsp;&#123;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;chr4_0&#40;device-&gt;machine&#40;&#41;, 1, CHRRAM&#41;;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;chr4_4&#40;device-&gt;machine&#40;&#41;, 1, CHRRAM&#41;;<br />&nbsp; &nbsp;&nbsp; &nbsp;&#125;<br /><br />&nbsp; &nbsp;&nbsp; &nbsp;if &#40;scanline == 239&#41;<br />&nbsp; &nbsp;&nbsp; &nbsp;&#123;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;chr4_0&#40;device-&gt;machine&#40;&#41;, 0, CHRRAM&#41;;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;chr4_4&#40;device-&gt;machine&#40;&#41;, 0, CHRRAM&#41;;<br />&nbsp; &nbsp;&nbsp; &nbsp;&#125;<br />&nbsp; &nbsp;&#125;<br /><br />&#125;<br /><br />static WRITE8_HANDLER&#40; nanjing_l_w &#41;<br />&#123;<br />&nbsp; &nbsp;nes_state *state = space-&gt;machine&#40;&#41;.driver_data&lt;nes_state&gt;&#40;&#41;;<br />&nbsp; &nbsp;LOG_MMC&#40;&#40;&quot;nanjing_l_w, offset: %04x, data: %02x\n&quot;, offset, data&#41;&#41;;<br /><br />&nbsp; &nbsp;offset += 0x100;<br /><br />&nbsp; &nbsp;if &#40;offset &lt; 0x1000&#41;<br />&nbsp; &nbsp;&nbsp; &nbsp;return;<br /><br />&nbsp; &nbsp;if &#40;offset == 0x1100&#41;&nbsp; &nbsp;// 0x5100<br />&nbsp; &nbsp;&#123;<br />&nbsp; &nbsp;&nbsp; &nbsp;if &#40;data == 6&#41;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;prg32&#40;space-&gt;machine&#40;&#41;, 3&#41;;<br />&nbsp; &nbsp;&nbsp; &nbsp;return;<br />&nbsp; &nbsp;&#125;<br /><br />&nbsp; &nbsp;if &#40;offset == 0x1101&#41;&nbsp; &nbsp;// 0x5101<br />&nbsp; &nbsp;&#123;<br />&nbsp; &nbsp;&nbsp; &nbsp;UINT8 temp = state-&gt;m_mmc_count;<br />&nbsp; &nbsp;&nbsp; &nbsp;state-&gt;m_mmc_count = data;<br /><br />&nbsp; &nbsp;&nbsp; &nbsp;if &#40;temp &amp; !data&#41;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;state-&gt;m_mmc_latch2 ^= 0xff;<br />&nbsp; &nbsp;&#125;<br /><br />&nbsp; &nbsp;switch &#40;offset &amp; 0x300&#41;<br />&nbsp; &nbsp;&#123;<br />&nbsp; &nbsp;&nbsp; &nbsp;case 0x000:<br />&nbsp; &nbsp;&nbsp; &nbsp;case 0x200:<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;state-&gt;m_mmc_reg&#91;BIT&#40;offset, 9&#41;&#93; = data;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;if &#40;!BIT&#40;state-&gt;m_mmc_reg&#91;0&#93;, 7&#41; &amp;&amp; ppu2c0x_get_current_scanline&#40;state-&gt;m_ppu&#41; &lt;= 127&#41;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;chr8&#40;space-&gt;machine&#40;&#41;, 0, CHRRAM&#41;;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;break;<br />&nbsp; &nbsp;&nbsp; &nbsp;case 0x300:<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;state-&gt;m_mmc_latch1 = data;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;break;<br />&nbsp; &nbsp;&#125;<br /><br />&nbsp; &nbsp;prg32&#40;space-&gt;machine&#40;&#41;, &#40;state-&gt;m_mmc_reg&#91;0&#93; &amp; 0x0f&#41; | &#40;&#40;state-&gt;m_mmc_reg&#91;1&#93; &amp; 0x0f&#41; &lt;&lt; 4&#41;&#41;;<br />&#125;<br /><br />static READ8_HANDLER&#40; nanjing_l_r &#41;<br />&#123;<br />&nbsp; &nbsp;nes_state *state = space-&gt;machine&#40;&#41;.driver_data&lt;nes_state&gt;&#40;&#41;;<br />&nbsp; &nbsp;UINT8 value = 0;<br />&nbsp; &nbsp;LOG_MMC&#40;&#40;&quot;nanjing_l_r, offset: %04x\n&quot;, offset&#41;&#41;;<br /><br />&nbsp; &nbsp;offset += 0x100;<br /><br />&nbsp; &nbsp;if &#40;offset &lt; 0x1000&#41;<br />&nbsp; &nbsp;&nbsp; &nbsp;return 0;<br /><br />&nbsp; &nbsp;switch &#40;offset &amp; 0x700&#41;<br />&nbsp; &nbsp;&#123;<br />&nbsp; &nbsp;&nbsp; &nbsp;case 0x100:<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;value = state-&gt;m_mmc_latch1;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;break;<br />&nbsp; &nbsp;&nbsp; &nbsp;case 0x500:<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;value = state-&gt;m_mmc_latch2 &amp; state-&gt;m_mmc_latch1;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;break;<br />&nbsp; &nbsp;&nbsp; &nbsp;case 0x000:<br />&nbsp; &nbsp;&nbsp; &nbsp;case 0x200:<br />&nbsp; &nbsp;&nbsp; &nbsp;case 0x300:<br />&nbsp; &nbsp;&nbsp; &nbsp;case 0x400:<br />&nbsp; &nbsp;&nbsp; &nbsp;case 0x600:<br />&nbsp; &nbsp;&nbsp; &nbsp;case 0x700:<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;value = 4;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;break;<br />&nbsp; &nbsp;&#125;<br />&nbsp; &nbsp;return value;<br />&#125;<br /></div>

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>3</strong> of <strong>3</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>