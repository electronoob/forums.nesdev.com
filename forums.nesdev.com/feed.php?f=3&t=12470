<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=3&amp;t=12470" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2015-03-14T12:24:01-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=3&amp;t=12470</id>
<entry>
<author><name><![CDATA[zeroone]]></name></author>
<updated>2015-03-14T12:24:01-07:00</updated>
<published>2015-03-14T12:24:01-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12470&amp;p=143029#p143029</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12470&amp;p=143029#p143029"/>
<title type="html"><![CDATA[Re: IRQ and NMI consume 7 CPU cycles]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12470&amp;p=143029#p143029"><![CDATA[
<div class="quotetitle">Zepper wrote:</div><div class="quotecontent"><br />Try the midscanline demo. I don't know exactly how you're &quot;delaying&quot; the NMI, but my emulator freezes if I try to change the NMI time. About Battletoads, well... the short answer is yes, it hangs during the level 2 due to a missing sprite zero hit.<br /></div><br /><br /><img src="http://i.imgur.com/cOkuZbT.png" alt="Image" /><br /><br />Occasionally, I see the digit 1 glitch (it looks like a different tile appears instead of 1).  In Nestopia, the digit 1 is perfectly stable.  In FCEUX, the digit 1 and several other tiles are glitchy.  <br /><br />I am able to turn on and off the hack, and the hack does not appear to affect the glitched digit 1.<br /><br />In my emulator, the PPU drives the CPU.  For each scanline, the PPU executes the 341 dots.  Without the hack, it executes NMI at dot 1 of scanline 241.  With the hack turned on, it happens at dot 17 instead.<br /><br />That's not something you can add?<br /><br />Edit: Below is the results from midscanline_b.nes (I didn't realize you posted this one.)<br /><br /><img src="http://i.imgur.com/inhTgaR.png" alt="Image" /><br /><br />The image is completely stable.  No glitched tiles with the hack in place.  But, if I turn the hack off:<br /><br /><img src="http://i.imgur.com/V7t8qr1.png" alt="Image" /><br /><br />Up to 2 columns of flickering glitched tiles appear to the left of the text boxes, just like in your pic.  It seems likely you can fix your emulator by applying the same hack.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6828">zeroone</a> — Sat Mar 14, 2015 12:24 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Zepper]]></name></author>
<updated>2015-03-14T11:57:13-07:00</updated>
<published>2015-03-14T11:57:13-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12470&amp;p=143028#p143028</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12470&amp;p=143028#p143028"/>
<title type="html"><![CDATA[Re: IRQ and NMI consume 7 CPU cycles]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12470&amp;p=143028#p143028"><![CDATA[
Try the midscanline demo. I don't know exactly how you're &quot;delaying&quot; the NMI, but my emulator freezes if I try to change the NMI time. About Battletoads, well... the short answer is yes, it hangs during the level 2 due to a missing sprite zero hit.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=39">Zepper</a> — Sat Mar 14, 2015 11:57 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[zeroone]]></name></author>
<updated>2015-03-14T09:39:27-07:00</updated>
<published>2015-03-14T09:39:27-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12470&amp;p=143024#p143024</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12470&amp;p=143024#p143024"/>
<title type="html"><![CDATA[Re: IRQ and NMI consume 7 CPU cycles]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12470&amp;p=143024#p143024"><![CDATA[
<div class="quotetitle">Zepper wrote:</div><div class="quotecontent"><br />The first image is a demo that uses midscanline writes(?). The other is Marble Madness.<br />Both have the same problem - glitched text boxes. The glitch isn't static, but &quot;moving&quot; left-&gt;right.<br /></div><br /><br />Here's mine without the hack:<br /><br /><img src="http://i.imgur.com/yviOWDJ.png" alt="Image" /><br /><br />And, just as you describe, those glitched tiles flicker.  But, as mentioned, if I trigger NMI at dot 17 instead of dot 1, they vanish.  You might want to try the same experiment.  <br /><br />I don't know if it is a coincidence, but dot 17 and dot 1 are exactly 2 tiles apart.  And, this hack prevents Battletoads level 2 from freezing.  It makes me wonder if the sprite 0 hit flag is actually set shortly after the 2 tiles are retrieved from memory, rather than when the pixels are rendered.  Meaning, a sprite 0 hit could potentially be detected up to 16 pixels ahead of time.<br /><br />Does Battletoads level 2 freeze in your emulator?  I've been using the Game Genie code to skip to level 2 for testing purposes.  Without the hack, it can still take a while to freeze.  See if you can pass the level a few times without freezing.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6828">zeroone</a> — Sat Mar 14, 2015 9:39 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Zepper]]></name></author>
<updated>2015-03-14T09:16:18-07:00</updated>
<published>2015-03-14T09:16:18-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12470&amp;p=143023#p143023</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12470&amp;p=143023#p143023"/>
<title type="html"><![CDATA[Re: IRQ and NMI consume 7 CPU cycles]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12470&amp;p=143023#p143023"><![CDATA[
The first image is a demo that uses midscanline writes(?). The other is Marble Madness.<br />Both have the same problem - glitched text boxes. The glitch isn't static, but &quot;moving&quot; left-&gt;right.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=39">Zepper</a> — Sat Mar 14, 2015 9:16 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[zeroone]]></name></author>
<updated>2015-03-13T17:41:28-07:00</updated>
<published>2015-03-13T17:41:28-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12470&amp;p=142976#p142976</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12470&amp;p=142976#p142976"/>
<title type="html"><![CDATA[Re: IRQ and NMI consume 7 CPU cycles]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12470&amp;p=142976#p142976"><![CDATA[
<div class="quotetitle">Zepper wrote:</div><div class="quotecontent"><br />You should measure the NMI time from another emulator... and compare it with yours. Putting a NMI time forward is not the way of fixing it. The NMI is nothing more than a PRG subroutine, probably for PPU in this game. Check what the NMI does - writes to $2006 are probably envolved there.<br /></div><br /><br />I tried exactly that, but I could not work out the differences.  <br /><br />Were you able to solve the Marble Madness text box issues in your emulator?  If not, could you post a screen shot of the glitch?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6828">zeroone</a> — Fri Mar 13, 2015 5:41 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Zepper]]></name></author>
<updated>2015-03-13T17:33:11-07:00</updated>
<published>2015-03-13T17:33:11-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12470&amp;p=142975#p142975</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12470&amp;p=142975#p142975"/>
<title type="html"><![CDATA[Re: IRQ and NMI consume 7 CPU cycles]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12470&amp;p=142975#p142975"><![CDATA[
You should measure the NMI time from another emulator... and compare it with yours. Putting a NMI time forward is not the way of fixing it. The NMI is nothing more than a PRG subroutine, probably for PPU in this game. Check what the NMI does - writes to $2006 are probably envolved there.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=39">Zepper</a> — Fri Mar 13, 2015 5:33 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[zeroone]]></name></author>
<updated>2015-03-13T16:29:27-07:00</updated>
<published>2015-03-13T16:29:27-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12470&amp;p=142968#p142968</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12470&amp;p=142968#p142968"/>
<title type="html"><![CDATA[Re: IRQ and NMI consume 7 CPU cycles]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12470&amp;p=142968#p142968"><![CDATA[
I modified the way that my emulator detects NMI.  If (NMI_occurred AND NMI_output) changes from false to true, I set an NMI request flag in the CPU that is checked between instructions.  The NMI handler sets the flag to false.  <br /><br />With that in place, there should not be any lost NMI events resulting from a race condition between reading the PPU Status Register ($2002), which has the side effect of setting NMI_occurred to false, and detecting the start of VBlank.<br /><br />With that, I still had to introduce 2 minor hacks.  First, instead of setting NMI_occurred to true on dot 1 of scanline 241, the emulator sets it to true on dot 17 of that scanline.  With the hack in place, the NTSC and PAL versions of Marble Madness and Battletoads appear to function correctly.  <br /><br />The second level of Battletoads appears to be sensitive to NMI timing, sprite 0 hit detection and sprite overflow detection.  If NMI timing or sprite 0 hit detection is slightly off, the stage can freeze.  If the overflow detection is slightly off, then enemy hit detection can fail completely, making it impossible to advance (the player nor the enemies can get injured).  <br /><br />The second hack was to set the sprite overflow flag at dot 256 (at the beginning of HBlank).  But, it gets computed within the first 64 dots of the scanline.<br /><br />I would obviously like to remove these hacks at some point.  My emulator only passes a subset of Blargg's timing tests.  But, FCEUX 2.2.2 seems to fail the same tests that my emulator does.  So, I do not know which tests that the emulator really needs to pass to improve things.  Suggestions are welcome.<br /><br />Also, level 3 of Battletoads contains a bug.  When multiple rats are on the screen at the same time and the player punches one of them, the center (far) brain-like, background glitches.  You can see the effect in <a href="https://www.youtube.com/watch?v=til1jvC-Pys&amp;t=108" class="postlink">this video</a> of the game running on an actual NES.  We should probably mention that on the <a href="http://wiki.nesdev.com/w/index.php/Game_bugs" class="postlink">Game Bugs wiki page</a>, especially since I spent a while trying to get rid of the effect until I reproduced it on FCEUX and Nestopia.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6828">zeroone</a> — Fri Mar 13, 2015 4:29 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[zeroone]]></name></author>
<updated>2015-03-11T18:00:48-07:00</updated>
<published>2015-03-11T18:00:48-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12470&amp;p=142820#p142820</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12470&amp;p=142820#p142820"/>
<title type="html"><![CDATA[Re: IRQ and NMI consume 7 CPU cycles]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12470&amp;p=142820#p142820"><![CDATA[
FCEUX 2.2.2 provides better trace logging that includes instruction CPU cycles.  I started recording when the text boxes appear at the start of the first stage of Marble Madness and I compared that log against a log from my emulator.  <br /><br />When I delay the NMI handler by 40 CPU cycles, not only does it fix the rendering, but every instruction matches up between the logs cycle-per-cycles.  Each frame ends with a spin lock waiting for the next NMI:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">$FC5A:4C 5A FC  JMP $FC5A</div><br /><br />Consequentially, delaying the NMI handler by 40 CPU cycles ultimately results in that spin lock spinning 13 fewer times.<br /><br />If I remove the NMI handler hack and let NMI take place on dot 1 of scanline 241, the text box rendering gets screwed up, but still every instruction matches up between the logs cycle-by-cycle until it reaches the sprite 0 hit test at the bottom of the frame.  Marble Madness appears to use a sprite 0 hit test to hide the last few scanlines, presumably to conceal graphical artifacts that would result from vertical scrolling.<br /><br />In this case, the loop that is waiting for the sprite 0 hit test absorbs the difference.  In fact, if I add a hack to delay setting of the sprite 0 hit flag by 40 CPU cycles, then the logs once again fully match up.  This suggests that the CPU instruction timings are correct, including things like OAM DMA stalls.  <br /><br />How could the rendering be out of sync with the processor by 40 CPU cycles if the timings are valid?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6828">zeroone</a> — Wed Mar 11, 2015 6:00 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[zeroone]]></name></author>
<updated>2015-03-10T10:49:44-07:00</updated>
<published>2015-03-10T10:49:44-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12470&amp;p=142746#p142746</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12470&amp;p=142746#p142746"/>
<title type="html"><![CDATA[Re: IRQ and NMI consume 7 CPU cycles]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12470&amp;p=142746#p142746"><![CDATA[
<div class="quotetitle">tepples wrote:</div><div class="quotecontent"><br />Thank you for reporting this omission. It has been corrected.<br /></div><br /><br />Wow!  That was fast.  I don't know if there is a better way to do this.  But, if the ROM is marked as MMC3, that flag is probably the only information available to make the determination.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6828">zeroone</a> — Tue Mar 10, 2015 10:49 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2015-03-10T10:39:16-07:00</updated>
<published>2015-03-10T10:39:16-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12470&amp;p=142745#p142745</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12470&amp;p=142745#p142745"/>
<title type="html"><![CDATA[Re: IRQ and NMI consume 7 CPU cycles]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12470&amp;p=142745#p142745"><![CDATA[
<div class="quotetitle">zeroone wrote:</div><div class="quotecontent"><br />The <a href="http://wiki.nesdev.com/w/index.php/MMC3#Mirroring" class="postlink">MMC3 docs</a> do not mention how to configure 4-screen mirroring.<br /></div><br />Thank you for reporting this omission. It has been corrected.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Tue Mar 10, 2015 10:39 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[zeroone]]></name></author>
<updated>2015-03-10T10:31:23-07:00</updated>
<published>2015-03-10T10:31:23-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12470&amp;p=142744#p142744</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12470&amp;p=142744#p142744"/>
<title type="html"><![CDATA[Re: IRQ and NMI consume 7 CPU cycles]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12470&amp;p=142744#p142744"><![CDATA[
One more thing.  Here's an image with my 40 CPU cycle NMI delay hack:<br /><br /><img src="http://i.imgur.com/pPqGiDE.png" alt="Image" /><br /><br />And, what happens without it:<br /><br /><img src="http://i.imgur.com/roL51t3.png" alt="Image" /><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6828">zeroone</a> — Tue Mar 10, 2015 10:31 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[zeroone]]></name></author>
<updated>2015-03-10T10:50:46-07:00</updated>
<published>2015-03-10T10:10:07-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12470&amp;p=142742#p142742</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12470&amp;p=142742#p142742"/>
<title type="html"><![CDATA[Re: IRQ and NMI consume 7 CPU cycles]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12470&amp;p=142742#p142742"><![CDATA[
That screwed up image above turned out to be a MMC3 mirroring issue.<br /><br /><img src="http://i.imgur.com/pd4WIKk.png" alt="Image" /><br /><br />According to threads on this forum, Rad Racer II should have 4-screen mirroring.  I hardcoded that as a test and it produces a clean road with and without my 40 CPU cycle NMI delay hack.<br /><br />The <a href="http://wiki.nesdev.com/w/index.php/MMC3#Mirroring_.28.24A000-.24BFFE.2C_even.29" class="postlink">MMC3 docs</a> do not mention how to configure 4-screen mirroring.  I'll have to research that further.<br /><br />Edit: The <a href="http://wiki.nesdev.com/w/index.php/INES#Flags_6" class="postlink">iNes file flags 6</a> specifies that it is a four-screen VRAM game.  I modified my MMC3 mapper to not allow the game to control the nametable mirroring when the file specifies four-screen.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6828">zeroone</a> — Tue Mar 10, 2015 10:10 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[zeroone]]></name></author>
<updated>2015-03-10T08:07:55-07:00</updated>
<published>2015-03-10T08:07:55-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12470&amp;p=142734#p142734</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12470&amp;p=142734#p142734"/>
<title type="html"><![CDATA[Re: IRQ and NMI consume 7 CPU cycles]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12470&amp;p=142734#p142734"><![CDATA[
<div class="quotetitle">Zepper wrote:</div><div class="quotecontent"><br />Hmm... In my emulator, the text box is glitched in the left side.<br />Mind you to try Rad Racer 2 and take a screenshot of the road?<br /></div><br /><br /><img src="http://i.imgur.com/mrLuat7.png" alt="Image" /><br /><br />Yikes!<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6828">zeroone</a> — Tue Mar 10, 2015 8:07 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Zepper]]></name></author>
<updated>2015-03-10T07:24:17-07:00</updated>
<published>2015-03-10T07:24:17-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12470&amp;p=142732#p142732</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12470&amp;p=142732#p142732"/>
<title type="html"><![CDATA[Re: IRQ and NMI consume 7 CPU cycles]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12470&amp;p=142732#p142732"><![CDATA[
<div class="quotetitle">zeroone wrote:</div><div class="quotecontent"><br /><div class="quotetitle">Zepper wrote:</div><div class="quotecontent">I can provide a log (using my emulator) if you want. ^_^;;<br /></div><br /><br />That's greatly appreciated.<br /><br />I'm trying to think of the best way to capture this.  I am interested in the rendering of the text boxes in Marble Madness that appear at the beginning of the stages.  I'm not exactly sure how we can sync this up properly.  Maybe start recording as soon as the text box appears and stop shortly afterwards.  I might be able to sort it out from there.<br /><br />Further analysis shows that my emulator is failing to account for about 40 CPU cycles.  Specifically, it should take 40 CPU longer from time that NMI occurs to the time that it renders those text boxes on the next frame.  I don't know if it means that the CPU is suspended for 40 additional cycles or if the timing of some of my instructions are off.  But, as mentioned, my timing matches the nestest log file.  So, it might be some overhead outside of instruction timing such as the 7 CPU cycles that I discovered were necessary for NMI/IRQ handling.</div><br /><br />Hmm... In my emulator, the text box is glitched in the left side.<br />Mind you to try Rad Racer 2 and take a screenshot of the road?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=39">Zepper</a> — Tue Mar 10, 2015 7:24 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[thefox]]></name></author>
<updated>2015-03-09T21:35:11-07:00</updated>
<published>2015-03-09T21:35:11-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12470&amp;p=142704#p142704</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12470&amp;p=142704#p142704"/>
<title type="html"><![CDATA[Re: IRQ and NMI consume 7 CPU cycles]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12470&amp;p=142704#p142704"><![CDATA[
The widely circulated nestest log is from Nintendulator.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=80">thefox</a> — Mon Mar 09, 2015 9:35 pm</p><hr />
]]></content>
</entry>
</feed>