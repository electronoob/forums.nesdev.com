<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=12&amp;t=5737" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2009-11-30T10:53:26-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=12&amp;t=5737</id>
<entry>
<author><name><![CDATA[mic_]]></name></author>
<updated>2009-11-30T10:53:26-07:00</updated>
<published>2009-11-30T10:53:26-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5737&amp;p=53279#p53279</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5737&amp;p=53279#p53279"/>
<title type="html"><![CDATA[BRR decoding/encoding (again)]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5737&amp;p=53279#p53279"><![CDATA[
Good to have some encoding examples, since I'll have to write an encoder myself if/when I start adding SNES-support for XPMCK.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=1181">mic_</a> — Mon Nov 30, 2009 10:53 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2009-11-28T15:13:19-07:00</updated>
<published>2009-11-28T15:13:19-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5737&amp;p=53215#p53215</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5737&amp;p=53215#p53215"/>
<title type="html"><![CDATA[BRR decoding/encoding (again)]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5737&amp;p=53215#p53215"><![CDATA[
BRRTools is now released to the public so enjoy : <a href="http://jonathan.microclub.ch/BRRTools/" class="postlink">http://jonathan.microclub.ch/BRRTools/</a><br /><br />(I still can't get the gaussian thing  <img src="http://forums.nesdev.com/images/smilies/icon_cry.gif" alt=":cry:" title="Crying or Very sad" /> )<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Sat Nov 28, 2009 3:13 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2009-11-28T04:38:03-07:00</updated>
<published>2009-11-28T04:38:03-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5737&amp;p=53175#p53175</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5737&amp;p=53175#p53175"/>
<title type="html"><![CDATA[BRR decoding/encoding (again)]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5737&amp;p=53175#p53175"><![CDATA[
OK now I've made my BRR encoder / decoder fully working (as far I know), I want to add the feature of it to resample waves before encoding them.<br /><br />Resampling with no interpolation sounds extremely simple, something like :<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">out&#91;i&#93; = sample&#91;&#40;int&#41;&#40;i*resample&#41;&#93;</div><br /><br />Linear interpolation sounds extremely simple as well :<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">int a = &#40;int&#41;&#40;i*resample&#41;;    //whole part<br />double b = i*resample-a;   //fractional part<br /><br />out&#91;i&#93;= &#40;1-b&#41;*sample&#91;a&#93; + b*sample&#91;a+1&#93;;</div><br /><br />I'd like to have it do some kind of better interpolation, ideally guassian in the exact same way as the SNES does it. Unfortunately I don't understand exactly what butcha's docs says about it, especially that part :<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">    // 4-point gaussian interpolation<br />    i = voice&#91;x&#93;.interpolation_index &gt;&gt; 12;          // 0 &lt;= i &lt;= 4<br />    d = &#40;voice&#91;x&#93;.interpolation_index &gt;&gt; 4&#41; &amp; 0xff;  // 0 &lt;= d &lt;= 255<br />    outx  = &#40;&#40;gauss&#91;255-d&#93; * voice&#91;x&#93;.BRRdata&#91;i+0&#93;&#41; &gt;&gt; 11&#41;;<br />    outx += &#40;&#40;gauss&#91;511-d&#93; * voice&#91;x&#93;.BRRdata&#91;i+1&#93;&#41; &gt;&gt; 11&#41;;<br />    outx += &#40;&#40;gauss&#91;256+d&#93; * voice&#91;x&#93;.BRRdata&#91;i+2&#93;&#41; &gt;&gt; 11&#41;;<br />    // The above 3 wrap at 15 bits signed. The last is added to that, and is<br />    // clamped rather than wrapped.<br />    outx = &#40;&#40;outx &amp; 0x7FFF&#41; ^ 0x4000&#41; - 0x4000;<br />    outx += &#40;&#40;gauss&#91;  0+d&#93; * voice&#91;x&#93;.BRRdata&#91;i+3&#93;&#41; &gt;&gt; 11&#41;;<br />    CLAMP15&#40;outx&#41;;</div><br />If someone could explain that'd be nice, else I guess I'd deal with the simpler interpolations.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Sat Nov 28, 2009 4:38 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2009-11-16T13:26:59-07:00</updated>
<published>2009-11-16T13:26:59-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5737&amp;p=52688#p52688</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5737&amp;p=52688#p52688"/>
<title type="html"><![CDATA[BRR decoding/encoding (again)]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5737&amp;p=52688#p52688"><![CDATA[
Okay Kode54, sorry but can I ask you several questions on your encoder ?<br />First this :<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">      dmin = 0.;<br />      kmin = 0;<br />      smin = 0;<br />      for &#40;s = 0; s &lt; 13; s++&#41;<br />      &#123;<br />         for &#40;k = 0; k &lt; 4; k++&#41;<br />         &#123;<br />            double d;<br />            d =<br />               AdpcmMashS &#40;c, ch, &amp;v&#91;c &lt;&lt; 1&#93;, vl ? &amp;vl&#91;c &lt;&lt; 1&#93; : 0, k,<br />               ip, s, NULL&#41;;<br /><br />            /*if &#40; display &#41;<br />            &#123;<br />               fprintf&#40; stderr, &quot;%02u, %u: %f\n&quot;, s, k, &#40;float&#41;d &#41;;<br />            &#125;*/<br /><br />            if &#40;&#40;!s &amp;&amp; !k&#41; || d &lt; dmin&#41;<br />            &#123;<br />               kmin = k;<br />               dmin = d;<br />               smin = s;<br />            &#125;<br />         &#125;<br />      &#125;</div><br />It seems to try all 12 possible shift values and 4 possible filters, to find the less worse.<br />The main beef I have is with the if(!s &amp;&amp; !k) statement. You'd want to remember the filter and shift amount used if it's better than the current best (d &lt; dmin), but why should you force remembering the k,s combination if they are zero ?<br /><br />Because dmin is initialised to 0.0 so you'll normally never find anything smaller than it (assming the d returned is supposed to be positive). But I guess the above trick is to force initialisation on dmin when both k and s are zero. Isn't there some better way to handle this (like initialising dmin to positive infinity ?).<br /><br />My third beef is at the end of APDCMMash method :<br /><br />return sqrt (d2);<br /><br />As far I understand, d2 is the sum of the square of errors on all samples in the filter. What i don't understand is why you bother using square root, considering the mathematical fat squrt(a) &lt; squrt(b) if and only if a &lt; b, you could return d2 directly and it'd just make the programm faster without any side effect.<br /><br />Third beef I have is there :<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">   if &#40;vl&#41;<br />    &#123;<br />      d = v0 - vl&#91;0&#93;;<br />      d2 += &#40;double&#41;d * d;<br />      d = v1 - vl&#91;1&#93;;<br />      d2 += &#40;double&#41;d * d;<br />      d2 /= 18.;<br />    &#125;<br />   else<br />      d2 /= 16.;         /* be sure it's non-negative */</div><br />I'm not sure what this code does, but it seems to take accound in the square-delta the last 2 values used as a feedback for filters. Why would you want to do that ? And again why the division by 16 or 18, since we only use d for compare purpose, and a/16 &lt; b/16 if and only if a &lt; b (same with 18), so again it sounds like an useless computation to me.<br /><br />Thanks in advance for clarifying those points.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Mon Nov 16, 2009 1:26 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2009-11-15T11:18:17-07:00</updated>
<published>2009-11-15T11:18:17-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5737&amp;p=52649#p52649</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5737&amp;p=52649#p52649"/>
<title type="html"><![CDATA[BRR decoding/encoding (again)]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5737&amp;p=52649#p52649"><![CDATA[
Err... thanks but I still have a little trouble...<br />it seems that while I get a noisy sample when I'm supposed to get a noisy sample, I get a noisy sample, but different sounding that the supposely accurate SPCamp. This is paricularly notable with Seiken Densetsu 3 samples, which have 3 "noisy" samples : 2, 3 and 7.<br /><br />Mines sounds like metallic noise repeating more often than supposed. Since I wrote a code to be able to detect the lenght of repeating noise it's important I get it right.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Sun Nov 15, 2009 11:18 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[kode54]]></name></author>
<updated>2009-11-15T02:33:30-07:00</updated>
<published>2009-11-15T02:33:30-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5737&amp;p=52634#p52634</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5737&amp;p=52634#p52634"/>
<title type="html"><![CDATA[BRR decoding/encoding (again)]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5737&amp;p=52634#p52634"><![CDATA[
Feel free to use mine for an example, and know that it was based off the SoX MS ADPCM encoder, which introduced me to brute force ADPCM encoding, as well as quantizing the sample to a nibble and calculating the resulting sample again for the sample history. A valuable process for ADPCM encoding that I didn't really think about when I originally started on a BRR decoder years ago.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=139">kode54</a> — Sun Nov 15, 2009 2:33 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2009-11-15T02:25:16-07:00</updated>
<published>2009-11-15T02:25:16-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5737&amp;p=52633#p52633</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5737&amp;p=52633#p52633"/>
<title type="html"><![CDATA[BRR decoding/encoding (again)]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5737&amp;p=52633#p52633"><![CDATA[
Thank you VERY MUCH kode54 now it works perfectly !! Thanks !<br />Now I'll add a stability tester for looping samples so you can know how long a noise sample takes until it repeats.<br /><br />I also plan to code an encoder, kode54 can I get inspiration from yours ? (you'll be credited of course)<br /><br />As for shifts in java thanks for clarifying sorry it's me who is stupid not have figured that. Anyways I've found workarrounds everytime I had to deal with signed/unsighed conversions so it's allright.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Sun Nov 15, 2009 2:25 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[kode54]]></name></author>
<updated>2009-11-15T01:21:28-07:00</updated>
<published>2009-11-15T01:21:28-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5737&amp;p=52632#p52632</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5737&amp;p=52632#p52632"/>
<title type="html"><![CDATA[Re: BRR decoding/encoding (again)]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5737&amp;p=52632#p52632"><![CDATA[
Change it like so to fix those Square / Capcom samples:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">      if&#40;a&gt;Short.MAX_VALUE*2&#41; a=Short.MAX_VALUE*2;<br />      if&#40;a&lt;Short.MIN_VALUE*2&#41; a=Short.MIN_VALUE*2;   //Clamp to 17-bit<br /></div><br /><br />Actually, in reality, the nibble should be shifted up by scale - 1, then the clamp should be correct as-is (16-bit), then the sample is doubled. For reference, see bsnes src/dsp/sdsp/brr.cpp.<br /><br />I think my <a href="http://kode54.foobar2000.org/brr.cpp.gz" class="postlink">encoder sample</a> takes this into account, but I could be wrong.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=139">kode54</a> — Sun Nov 15, 2009 1:21 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[byuu]]></name></author>
<updated>2009-11-14T23:47:28-07:00</updated>
<published>2009-11-14T23:47:28-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5737&amp;p=52630#p52630</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5737&amp;p=52630#p52630"/>
<title type="html"><![CDATA[BRR decoding/encoding (again)]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5737&amp;p=52630#p52630"><![CDATA[
That's why tepples said to use &gt;&gt;&gt;.<br /><br />In C++, &lt;&lt; always moves things left with a zero added onto the right. &gt;&gt; is "undefined" in the official spec, but on virtually every platform, it copies the leftmost bit prior to shifting for signed types, and uses a zero for unsigned types.<br /><br />In Java, &lt;&lt; acts the same, but &gt;&gt; always acts like the C++ signed type. If you want the C++ unsigned type, use &gt;&gt;&gt;. A stupid workaround for a stupid language that lacks native unsigned types.<br /><br />Recap:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">00001111  &lt;&lt; 1 = 00011110 in C++ &#40;signed or unsigned types&#41; and Java<br />11110000  &gt;&gt; 1 = 11111000 in C++ &#40;signed types&#41; and Java<br />11110000  &gt;&gt; 1 = 01111000 in C++ &#40;unsigned types&#41;<br />11110000 &gt;&gt;&gt; 1 = 01111000 in Java</div><br /><br />Now if only either language had a native rotate operator.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=375">byuu</a> — Sat Nov 14, 2009 11:47 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2009-11-14T13:58:32-07:00</updated>
<published>2009-11-14T13:58:32-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5737&amp;p=52607#p52607</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5737&amp;p=52607#p52607"/>
<title type="html"><![CDATA[BRR decoding/encoding (again)]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5737&amp;p=52607#p52607"><![CDATA[
Well in java when you shift right a negative number, it's still negative. I guess it's called "arithmetic shift right", which correspond to "cmp #$80, ror A" in 6502 code. In fact it's me who is stupid to call it stupid when it perfectly make sense, the only "stupid" stuff is that you can't choose between logical and arithmetic shift rights.<br /><br />Left shifts however CAN change the sign. I don't know if this is because of that that I'm having issues, nor if C/C++ handles shifts the same as java does (shifts have always been widely undocumented in all my cs courses for some reason I had to figure everything out by myself, teachers prefer using multiplications/divisions and don't care about performance).<br /><br />Altough my loop can decode BRR blocks of theorically any size, the main loop always use it to decode 9 bytes at a time. Note that my programm apparently WORKS for most samples, but not for the noisy ones used in Square and Capcom games for sound effects.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Sat Nov 14, 2009 1:58 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2009-11-13T19:48:09-07:00</updated>
<published>2009-11-13T19:48:09-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5737&amp;p=52585#p52585</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5737&amp;p=52585#p52585"/>
<title type="html"><![CDATA[BRR decoding/encoding (again)]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5737&amp;p=52585#p52585"><![CDATA[
<div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />//This is needed because of the stupid way Java handles neg numbers<br /></div><br />Is it true even if you use the &gt;&gt;&gt; operator? Also make sure you're taking the compressed data 9 bytes (1 header byte and 8 nibble pairs) at a time.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Fri Nov 13, 2009 7:48 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2009-11-13T13:27:44-07:00</updated>
<published>2009-11-13T13:27:44-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5737&amp;p=52579#p52579</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5737&amp;p=52579#p52579"/>
<title type="html"><![CDATA[BRR decoding/encoding (again)]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5737&amp;p=52579#p52579"><![CDATA[
OK there is already a few programms that allows you to convert to BRR, but most of them aren't widely spread and are glitchy / lack options I'd like them to have.<br /><br />So I decided to start to code a java BRR-&gt;WAV converter (in the scope to add a WAV-&gt;BRR converter to it once it'll function).<br /><br />It seems to work fine for "normal" samples, but my issue is that the samples that are supposed to be noisy aren't noisy, even tough I use the supposely accurate anomie's algorithms. I tried looking into Snes9x's sourcecode, but it was a huge mess and I doubt it's accuracy as well.<br /><br />I've uploaded the <a href="http://jonathan.microclub.ch/dummy/BRRDecoder.java" class="postlink">sources</a> and <a href="http://jonathan.microclub.ch/dummy/BRRDecoder.class" class="postlink">binaries</a>. In addition to normal decoding it also allows you to decode samples while looping and test their stability on loop point (which isn't complete yet).<br /><br />For people who just feel too lazy to download here is the "hot" part of decoding :<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">   static short&#91;&#93; DecodeBRR &#40;byte&#91;&#93; Data&#41; &#123;   //Decode a string of BRR bytes<br />      int Filter = &#40;Data&#91;0&#93; &amp; 0x0c&#41;&gt;&gt;2;<br />      int ShiftAmount = Data&#91;0&#93;&gt;&gt;4;                  //Read filter &amp; shift amount<br />      if&#40;ShiftAmount&lt;0&#41; ShiftAmount+=0x10;            //This is needed because of the stupid way Java handles neg numbers<br /><br />      short&#91;&#93; out = new short&#91;&#40;Data.length-1&#41;&lt;&lt;1&#93;;               //Output string of 16-bit samples<br />   <br />      for&#40;int i=0; i&lt;Data.length-1; i++&#41; &#123;                  //Loop for each byte<br />         DecodeSample&#40;&#40;short&#41;&#40;Data&#91;i+1&#93;&gt;&gt;4&#41;, ShiftAmount, Filter&#41;;      //Decode high nybble<br />         out&#91;i&lt;&lt;1&#93;=p1;<br />         DecodeSample&#40;&#40;short&#41;&#40;Data&#91;i+1&#93;&amp;0x0f&#41;, ShiftAmount, Filter&#41;;   //Decode low nybble<br />         out&#91;&#40;i&lt;&lt;1&#41;+1&#93;=p1;<br />      &#125;<br />      return out;<br />   &#125;<br />   <br />   static void DecodeSample &#40;short s, int ShiftAmount, int Filter&#41; &#123;<br />      if &#40;s&gt;=8&#41; s-=0x10;               //Fix numbers that should be negative<br />      s =&#40;short&#41;&#40;s &lt;&lt; ShiftAmount&#41;;<br />      int a;<br />      switch&#40;Filter&#41; &#123;<br />         case 0 :<br />            a = s;<br />            break;<br />         case 1 :<br />            a = s + p1 + &#40;-p1&gt;&gt;4&#41;;<br />            break;<br />         case 2 :<br />            a = s + &#40;p1&lt;&lt;1&#41; + &#40;&#40;-&#40;&#40;p1&lt;&lt;1&#41;+p1&#41;&#41;&gt;&gt;5&#41; - p2 + &#40;p2&gt;&gt;4&#41;;<br />            break;<br />         default :<br />            a = s + &#40;p1&lt;&lt;1&#41; + &#40;&#40;-&#40;p1+&#40;p1&lt;&lt;2&#41;+&#40;p1&lt;&lt;3&#41;&#41;&#41;&gt;&gt;6&#41; - p2 + &#40;&#40;&#40;p2&lt;&lt;1&#41; + p2&#41;&gt;&gt;4&#41;;<br />      &#125;<br />      if&#40;a&gt;Short.MAX_VALUE&#41; a=Short.MAX_VALUE;<br />      if&#40;a&lt;Short.MIN_VALUE&#41; a=Short.MIN_VALUE;   //Clamp to 16-bit<br />      a &amp;= 0xFFFE;                        //Clip to 15-bit<br />      p2 = p1;<br />      p1 = &#40;short&#41;a;<br />   &#125;<br /></div><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Fri Nov 13, 2009 1:27 pm</p><hr />
]]></content>
</entry>
</feed>