<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Id like to learn about the snes</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Id like to learn about the snes</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=12&amp;t=11613">http://forums.nesdev.com/viewtopic.php?f=12&amp;t=11613</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>3</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>infidelity</b> [ Wed Sep 10, 2014 7:49 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Id like to learn about the snes</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I'm new to snes, but not to 6502 asm. I've had some very good success in new hacking, and I'm starting to get curious in learning all I can about romhacking on the snes.<br /><br />I'm sorry if all this has been asked before, but certain things I can't find answers on. So if you don't mind, id like to know the following.<br /><br />1. How do you go about initiating a bank swap within an snes rom? Are there mappers involved, or is the method universal for all snes roms?<br /><br />2. What are the pros/cons to hi/lo rom? From what I read online, lorom is 1 bank from $0-$8000, while hirom is one bank from $0-$100000(I think thats right)<br /><br />3. Does the snes act the same with prg-rom as the nes did? Meaning how $8000-FFFF is the. prg-rom

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Wed Sep 10, 2014 9:19 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Id like to learn about the snes</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">1. How do you go about initiating a bank swap within an snes rom? Are there mappers involved, or is the method universal for all snes roms?</div><br />No, no, no, you're getting it all wrong. Unlike the NES, the SNES has a 65c815 CPU that has a 24-bit address bus. It can address very large ROMs without needing to do any bank swapping. Actually there is some technique in hardware that could seem analogious to &quot;bank swapping&quot; but everything is done by the CPU itself.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">2. What are the pros/cons to hi/lo rom? From what I read online, lorom is 1 bank from $0-$8000, while hirom is one bank from $0-$100000(I think thats right)</div><br />I am not knownledgable with the 65c816 to give an exact answer, but adressing data outside of the currently selected bank is complex, can only be done with some opcodes, and requires more bytes. So you want to avoid that as much as possible, just like on the NES you'd avoid doing mapper writes for bankswitching as much as possible. It'd see it as equivalent to the NES' 32k PRG-ROM switching, exept accessing data outside of the bank is *possible*, it's just very limited to simple lda/sta.<br /><br />With Hi-ROM the banks are enlarged to 64k, so there is only advantages, as you can fit more code and data in the same bank.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">3. Does the snes act the same with prg-rom as the nes did? Meaning how $8000-FFFF is the. prg-rom</div><br />With Lo Rom : Yes, the memory map was purposely made similar to the NES'. With Hi-Rom this is not true anymore. The similarity with the NES' memory map is probably the only real advantage of Lo ROM.<br /><br />All I said might be completely false - my knownledge of the 65c816 CPU is almost nonexistant.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Wed Sep 10, 2014 9:26 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Id like to learn about the snes</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The 65816 has different banks for the program counter and everything else. To switch the program counter into a different bank, you use the JSL opcode. A subroutine called this way has to return with RTL instead of RTS. To change the data bank (used by absolute addressing modes), you need to use that push the program bank (PHK) and push and pop the data bank (PHB and PLB respectively). One common sequence is PHK immediately followed by PLB to access program and read-only data in one bank. There are also absolute long addressing modes and a long indirect mode [d],y that temporarily change the data bank just for one instruction. These long modes work not only for LDA and STA but also for other group 1 instructions (ORA AND EOR CMP ADC SBC).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>infidelity</b> [ Wed Sep 10, 2014 9:48 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Id like to learn about the snes</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Thank you for that info, amazing a simple sub routine does the swaps, so used to specific mappers with the nes.<br /><br />I have another question. Does the snes fade in/out its palettes to achieve blackout, or does the snes CPU have its own specific fade in/out, without altering the current state of the palettes?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>magno</b> [ Wed Sep 10, 2014 10:28 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Id like to learn about the snes</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />LoROM has a main advantage: all I/O and registers can de done from the same bank you are executing code. So if you are accessingdata in bank $80, you can access VRAM address register by executing STA $2116; this is true for any bank you are executing code. If you had a HiROM program, then you access the same register by executing STA $002116.<br /><br />LoROM is good when the code accesses registers intensively, and HiROM is better to optimize in-bank coding.<br /><br /><br /><div class="quotetitle">infidelity wrote:</div><div class="quotecontent">I have another question. Does the snes fade in/out its palettes to achieve blackout, or does the snes CPU have its own specific fade in/out, without altering the current state of the palettes?</div><br /><br />There is a register which allows to increase/decrease screen brightness, so you can fade in/out by simply writing $0 to $F to that register.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>ARM9</b> [ Wed Sep 10, 2014 11:30 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Id like to learn about the snes</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">magno wrote:</div><div class="quotecontent">LoROM has a main advantage: all I/O and registers can de done from the same bank you are executing code. So if you are accessingdata in bank $80, you can access VRAM address register by executing STA $2116; this is true for any bank you are executing code. If you had a HiROM program, then you access the same register by executing STA $002116.<br /><br />LoROM is good when the code accesses registers intensively, and HiROM is better to optimize in-bank coding.<br /></div><br />This is a little misleading because what you're talking about is bank mirroring, which can be present on lorom carts as well as hirom.<br />Some lorom games access code/data in bank $40-$6F for example ($C0-$FF is possible as well), where 0-$7FFF is mapped to the low 32KiB of said rom bank and not the a/b bus registers etc.<br />Hirom games run code just as well in banks $00-$3F/$80-$BF to gain access to the a/b bus registers etc. mapped to $0000-$7FFF.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>magno</b> [ Thu Sep 11, 2014 12:58 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Id like to learn about the snes</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">ARM9 wrote:</div><div class="quotecontent">This is a little misleading because what you're talking about is bank mirroring, which can be present on lorom carts as well as hirom.<br />Some lorom games access code/data in bank $40-$6F for example ($C0-$FF is possible as well), where 0-$7FFF is mapped to the low 32KiB of said rom bank and not the a/b bus registers etc.<br />Hirom games run code just as well in banks $00-$3F/$80-$BF to gain access to the a/b bus registers etc. mapped to $0000-$7FFF.</div><br /><br />That's not true. Simply check how MAD-1 is connected to SNES address bus and you'd realize that HiROM cartridges would never access A22 = '0', and the other way is also true when checking MAD-1 connection for LoROM games.<br /><br />Besides, I have RE lots of game code in assembler and never found a HiROM game that accesses $00-$3F/$80-$BF; what's more, $6000-$7FFF in banks $30-$3F (outside HiROM range) is reserved for accessing SRAM in most cartridges, so you are wrong.<br /><br />Please get my SHVC schematics for several cartridge boards which I shared in the forum some years ago.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>ARM9</b> [ Thu Sep 11, 2014 3:15 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Id like to learn about the snes</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">magno wrote:</div><div class="quotecontent">That's not true. </div><br />Which parts specifically, if you don't mind elaborating?<br /><div class="quotetitle">magno wrote:</div><div class="quotecontent">Besides, I have RE lots of game code in assembler and never found a HiROM game that accesses $00-$3F/$80-$BF; </div><br />dkc2 (probably 1 and 3 as well), hirom in $80-$bf accessing the b bus by absolute 16 bit addressing<br />killer instinct, hirom $80+<br />super mario kart hirom $80+<br />super mario rpg lorom in bank $C0+<br />winter gold lorom in bank $40+<br />secret of evermore hirom $80+<br /><div class="quotetitle">magno wrote:</div><div class="quotecontent">what's more, $6000-$7FFF in banks $30-$3F (outside HiROM range) is reserved for accessing SRAM in most cartridges, so you are wrong.</div><br />I'm afraid you've lost me here, what part of my post is this supposed to refute?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>magno</b> [ Thu Sep 11, 2014 3:37 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Id like to learn about the snes</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I elaborated what you were wrong in my previous post.<br />Are you sure you understand what the difference between HiROM and LoROM is?<br /><br />DKC is HiROM and the code run from bank $C0 up. The same for all HiROM games: Chrono Trigger, Secret of Mana, Seiken Densetsu 3, Final Fantasy 6, Romancing Saga 3, and so on...<br />I seriously doubt any of the games you listed are HiROM and run code from bank $80...<br /><br /><br /><div class="quotetitle">ARM9 wrote:</div><div class="quotecontent">I'm afraid you've lost me here, what part of my post is this supposed to refute?</div><br /><br />This part:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">Hirom games run code just as well in banks $00-$3F/$80-$BF to gain access to the a/b bus registers etc. mapped to $0000-$7FFF.</div><br /><br />HiROM games NEVER run code on bank $30-$3F: it they'd do, any accesses to $6000-$7FFF would be redirected to SRAM not ROM. Besides, that WOULDN'T BE A HIROM GAME, BUT A LOROM. You can check this in the developer manual (mode 21, 25, and so on). In fact, this discussion is a nonsense: MAD-1 would never decode the address to ROM properly is the code is not executed in $C0 and upper.<br /><br />Maybe you are confused with ExtHiROM or LoExtROM modes, or maybe you have misunderstood the point here: of course any HiROM game can access registers from ANY BANK, but using long addressing. If they would use 16bit addressing, then you should change DB to point $00 before accessing registers.<br /><br />It doesn't make even the slightest sense to think a HiROM CAN'T access registers from any bank, but using long addressing is less efficient than DP or 16bit addressing modes (more bytes and longer instruction execution), or changing DB constantly. That's what I said (no mistakes here): <strong>LoROM is more efficient (i.e. better) if the code is register-intensive.</strong>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Thu Sep 11, 2014 6:01 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Id like to learn about the snes</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />If you take the second half of each 64K bank of a HiROM game, you get a LoROM. Obviously this won't run on its own, but ARM9's claim is that some HiROM games actually have functional code in this LoROM subset on which the rest of the game depends. Case in point: HiROM games have to run code from bank $00 <em>just to boot</em>, as the vectors are in page $00FF00. But I think ARM9 will actually have to point out specific JMLs to $808000-$BFFFFF from specific HiROM games in that list in order to get the point across.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>ARM9</b> [ Thu Sep 11, 2014 9:35 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Id like to learn about the snes</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">magno wrote:</div><div class="quotecontent">Are you sure you understand what the difference between HiROM and LoROM is?</div><br />There there, no need to be patronizing now. Are you talking about chapter 21 in the book?<br /><div class="quotetitle">magno wrote:</div><div class="quotecontent">I seriously doubt any of the games you listed are HiROM and run code from bank $80...</div><br />Just because I'm such a nice guy I've made some screenshots for you:<br /><a href="https://dl.dropboxusercontent.com/u/13494639/snespics/cdkc2.png" class="postlink">dkc2 (hirom)</a><br /><a href="https://dl.dropboxusercontent.com/u/13494639/snespics/cki.png" class="postlink">killer instinct (hirom)</a><br /><a href="https://dl.dropboxusercontent.com/u/13494639/snespics/csmk.png" class="postlink">smk (hirom)</a><br /><a href="https://dl.dropboxusercontent.com/u/13494639/snespics/csoe.png" class="postlink">secret of evermore (hirom)</a><br /><a href="https://dl.dropboxusercontent.com/u/13494639/snespics/cwintergold.png" class="postlink">winter gold (lorom)</a> for the reverse or whatever you were talking about.<br /><div class="quotetitle">magno wrote:</div><div class="quotecontent">HiROM games NEVER run code on bank $30-$3F: it they'd do, any accesses to $6000-$7FFF would be redirected to SRAM not ROM. Besides, that WOULDN'T BE A HIROM GAME, BUT A LOROM. You can check this in the developer manual (mode 21, 25, and so on). In fact, this discussion is a nonsense: MAD-1 would never decode the address to ROM properly is the code is not executed in $C0 and upper.</div><br />Of course I know that you can't access rom in $00-$3f:$0000-$7fff, I said no such thing. And I certainly wasn't implying it, I'm sorry for not being more specific in my original post. Regardless, it's really simple to partition your banks so that code is only ever located in $8000-$ffff.<br /><div class="quotetitle">magno wrote:</div><div class="quotecontent">It doesn't make even the slightest sense to think a HiROM CAN'T access registers from any bank, but using long addressing is less efficient than DP or 16bit addressing modes (more bytes and longer instruction execution), or changing DB constantly. That's what I said (no mistakes here): <strong>LoROM is more efficient (i.e. better) if the code is register-intensive.</strong></div><br />But nothing's stopping you from keeping the dbr in lorom banks in a hirom game, allowing you to reach said registers with 16 bit absolute addressing.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>magno</b> [ Thu Sep 11, 2014 11:24 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Id like to learn about the snes</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">ARM9 wrote:</div><div class="quotecontent">There there, no need to be patronizing now. Are you talking about chapter 21 in the book?</div><br /><br />I didn't mean to be patronizing: some people mix up &quot;SlowROM&quot; and &quot;LoROM&quot;. Mode 21 is &quot;HiROM&quot; as described in page 2-21-4 in the developer's manual book 1.<br /><br /><br /><div class="quotetitle">ARM9 wrote:</div><div class="quotecontent">Just because I'm such a nice guy I've made some screenshots for you:<br /><a href="https://dl.dropboxusercontent.com/u/13494639/snespics/cdkc2.png" class="postlink">dkc2 (hirom)</a><br /><a href="https://dl.dropboxusercontent.com/u/13494639/snespics/cki.png" class="postlink">killer instinct (hirom)</a><br /><a href="https://dl.dropboxusercontent.com/u/13494639/snespics/csmk.png" class="postlink">smk (hirom)</a><br /><a href="https://dl.dropboxusercontent.com/u/13494639/snespics/csoe.png" class="postlink">secret of evermore (hirom)</a><br /><a href="https://dl.dropboxusercontent.com/u/13494639/snespics/cwintergold.png" class="postlink">winter gold (lorom)</a> for the reverse or whatever you were talking about.</div><br /><br /><div class="quotetitle">ARM9 wrote:</div><div class="quotecontent">Regardless, it's really simple to partition your banks so that code is only ever located in $8000-$ffff.</div><br /><br />Man, those chunk of code are running from the mirrored address space...  <img src="./images/smilies/icon_neutral.gif" alt=":|" title="Neutral" />  You can't access all your code from that bank: if the code is only ever located at $8000:$FFFF, then you are wasting half the ROM chip size (because in HiROM boards, A15 is routed to Mask-ROM; in LoROM boards, A15 is not routed to Mask-ROM thus using all chip), but if your code is located from $0000 to $FFFF, then you have to jump to the non-mirrored region to execute it... Again, this leads to the same conclusion you said I was wrong: LoROM is better when accessing registers intensively, and HiROM is better in reducing code fragmentation (less long jumps to routines).<br /><br /><br /><div class="quotetitle">ARM9 wrote:</div><div class="quotecontent">But nothing's stopping you from keeping the dbr in lorom banks in a hirom game, allowing you to reach said registers with 16 bit absolute addressing.</div><br /><br />Yes, there is one thing stopping me: I can't reach $0000:$7FFF from those banks.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>ARM9</b> [ Thu Sep 11, 2014 11:58 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Id like to learn about the snes</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">magno wrote:</div><div class="quotecontent">Man, those chunk of code are running from the mirrored address space...  <img src="./images/smilies/icon_neutral.gif" alt=":|" title="Neutral" />  You can't access all your code from that bank: if the code is only ever located at $8000:$FFFF, then you are wasting half the ROM chip size (because in HiROM boards, A15 is routed to Mask-ROM; in LoROM boards, A15 is not routed to Mask-ROM thus using all chip), but if your code is located from $0000 to $FFFF, then you have to jump to the non-mirrored region to execute it... Again, this leads to the same conclusion you said I was wrong: LoROM is better when accessing registers intensively, and HiROM is better in reducing code fragmentation (less long jumps to routines).<br /><br />Yes, there is one thing stopping me: I can't reach $0000:$7FFF from those banks.</div><br />The majority of space is not going to be consumed by 65816 code in a game usually, you can still cram assets and various data in the low 32KiB of banks with code in the high 32KiB. Besides, you'd still be using long pointers to reach across banks in lorom to access data.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>koitsu</b> [ Thu Sep 11, 2014 4:11 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Id like to learn about the snes</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">ARM9 wrote:</div><div class="quotecontent">The majority of space is not going to be consumed by 65816 code in a game usually, you can still cram assets and various data in the low 32KiB of banks with code in the high 32KiB. Besides, you'd still be using long pointers to reach across banks in lorom to access data.</div><br />Not to mention, nothing stops you from using this trick in either mode, if you're going to do a _lot_ of memory-mapped register I/O:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">rep #$20<br />lda #$2100<br />tcd<br />sep #$20<br />lda #$0f<br />sta $00&nbsp; &nbsp; &nbsp;; Turn on screen, full brightness<br /></div><br />Commercial games (ex. Chrono Trigger) do this.  Or just resort to <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">sep #$20 / lda #$00 / pha / plb</tt> beforehand.  Your choice is either to use 24-bit addressing for your stuff (or for memory-mapped I/O regs), switch <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">b</tt> around, or set <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">d=$2100</tt> + use 24-bit addressing for things (or possibly a combo of that and <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">b=$00</tt> + 16-bit reads/writes).  There are many options/choices, none are infallible, with pros/cons to all.<br /><br />I think the mode 20 vs. mode 21 argument with regards to this point is just crying over spilled milk; the console (memory map nor CPU) is going to change at this point in time.  Accept the CPU, accept the memory map, move forward.<br /><br />People crying over this shit would literally cry themselves to sleep if shown <a href="http://www.kreativekorp.com/miscpages/a2info/screenholes.shtml" class="postlink">Apple II screen holes</a> (also <a href="https://en.wikipedia.org/wiki/Apple_II_graphics#The_Lo-res_.22screen_holes.22" class="postlink">here</a>).  The above memory map &quot;&quot;issue&quot;&quot; (LOL) is a walk in the park compared to this.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>psycopathicteen</b> [ Thu Sep 11, 2014 9:29 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Id like to learn about the snes</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Not only could you access the top halves of hirom banks through lorom mapping, but the system boots up that way by default.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>3</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>