<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=3&amp;t=10233" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2013-07-10T14:43:06-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=3&amp;t=10233</id>
<entry>
<author><name><![CDATA[jsr]]></name></author>
<updated>2013-07-10T14:43:06-07:00</updated>
<published>2013-07-10T14:43:06-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10233&amp;p=114941#p114941</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10233&amp;p=114941#p114941"/>
<title type="html"><![CDATA[Re: FDS modulator formula revision]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10233&amp;p=114941#p114941"><![CDATA[
I tested it on a higher frequency and yeah it looks more similar to rainwarrior's now.<br /><br />Anyway it's a minor issue I guess, but it is audible on waves with low number of harmonics. NEZplug++ actually emulates this and the output is very similar to the measured ones.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=28">jsr</a> — Wed Jul 10, 2013 2:43 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2013-07-10T11:29:53-07:00</updated>
<published>2013-07-10T11:29:53-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10233&amp;p=114927#p114927</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10233&amp;p=114927#p114927"/>
<title type="html"><![CDATA[Re: FDS modulator formula revision]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10233&amp;p=114927#p114927"><![CDATA[
Try a test that plays square waves [0 0 0 ... 0 1 1 1 ... 1], [1 1 1 ... 1 2 2 2 ... 2], through [62 62 62 ... 62 63 63 63 ... 63], with a period of 1000 Hz or so. Waveforms like that should coast through any audio-frequency band-pass filter, isolating the contribution of the DAC from the contribution of the analog band-pass that comes after it.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Wed Jul 10, 2013 11:29 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[rainwarrior]]></name></author>
<updated>2013-07-10T11:21:26-07:00</updated>
<published>2013-07-10T11:21:26-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10233&amp;p=114926#p114926</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10233&amp;p=114926#p114926"/>
<title type="html"><![CDATA[Re: FDS modulator formula revision]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10233&amp;p=114926#p114926"><![CDATA[
My recording was also running at a higher frequency (I hadn't made it with catching the DAC characteristics in mind, the only saw wave recording I had on hand was at 440Hz). If I ran it at a lower frequency it'd probably look a lot like jsr's. The errors do look like they're around the same place, and of similar magnitude.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5165">rainwarrior</a> — Wed Jul 10, 2013 11:21 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[lidnariq]]></name></author>
<updated>2013-07-10T11:00:23-07:00</updated>
<published>2013-07-10T11:00:23-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10233&amp;p=114924#p114924</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10233&amp;p=114924#p114924"/>
<title type="html"><![CDATA[Re: FDS modulator formula revision]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10233&amp;p=114924#p114924"><![CDATA[
I think that curve from jsr's unit looks the same as (or at least very close to) the curve from rainwarrior's once the lowpass filter is removed.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3512">lidnariq</a> — Wed Jul 10, 2013 11:00 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[jsr]]></name></author>
<updated>2013-07-10T05:21:34-07:00</updated>
<published>2013-07-10T05:21:34-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10233&amp;p=114916#p114916</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10233&amp;p=114916#p114916"/>
<title type="html"><![CDATA[Re: FDS modulator formula revision]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10233&amp;p=114916#p114916"><![CDATA[
<div class="quotetitle">rainwarrior wrote:</div><div class="quotecontent"><br />The other funny thing I forgot to mention, probably not worth emulating, but also the DAC in my FDS is clearly less than ideal. Check out this 0-63 saw wave:<br /></div><br />This is actually one thing I wanted to investigate, because the DAC is a lot less linear in my unit:<br /><br /><img src="http://79.138.112.171/tmp/wave.png" alt="Image" /><br /><br />And this is very audible, especially when playing a sine wave. But then I assume the quality varies a lot among different units.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=28">jsr</a> — Wed Jul 10, 2013 5:21 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[ccovell]]></name></author>
<updated>2013-07-09T17:13:50-07:00</updated>
<published>2013-07-09T17:13:50-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10233&amp;p=114874#p114874</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10233&amp;p=114874#p114874"/>
<title type="html"><![CDATA[Re: FDS modulator formula revision]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10233&amp;p=114874#p114874"><![CDATA[
Keep this going, guys.  Very neat analysis.<br /><br />I remember way back in like 1997-8 or so, poking around the FDS' chips and finding the spot from the main chip where the <em>unfiltered</em> audio first comes out -- it was really harsh, so I'm glad there's some kind of filter in there somewhere.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=355">ccovell</a> — Tue Jul 09, 2013 5:13 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[lidnariq]]></name></author>
<updated>2013-07-09T17:01:39-07:00</updated>
<published>2013-07-09T17:01:39-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10233&amp;p=114872#p114872</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10233&amp;p=114872#p114872"/>
<title type="html"><![CDATA[Re: FDS modulator formula revision]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10233&amp;p=114872#p114872"><![CDATA[
<div class="quotetitle">rainwarrior wrote:</div><div class="quotecontent"><br />The discontinuities do look like they're kind of at binary locations in the waveform, with decreasing intensity along the binary tree (i.e. strongest at 32, next strongest at 48/16, etc...). I dunno what that suggests for a DAC circuit though.<br /></div> It's kinda ... cauliflowery? Consistent with each next-most-significant bit being overrepresented in the binary weights. By a comparable amount for each bit? I see something very similar using an binary-weighted DAC where each next-most-significant bit is 55% of the previous (e.g. 10k, 5.5k, 3k, 1.7k, 920, 500). But getting it consistent across multiple scales probably implies R2R DAC; I can't see how else it'd be consistently the similar amount of error at the 31-32 edge and the 47-48 edge and the 55-56 edge. <br /><br />With an R2R dac, I get something fairly similar to your graph using a &quot;2R&quot; of 3R. It'd be nice to make sure that your DAC is exceptional; the distortion there is kinda significant.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />What do you mean by down-only RC decay? The discontinuity in the saw wave only goes down, the up part is smooth so you don't really see the decay. (I could show you a square wave if you want to see it going both ways.)<br /></div>Well, I thought there'd be signficant smoothing on the top peak as well as the bottom peak of the sawtooth if this were simply a lowpass... but when I actually put a capacitor in my sim it turns out what you show is just an ordinary lowpass.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3512">lidnariq</a> — Tue Jul 09, 2013 5:01 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[rainwarrior]]></name></author>
<updated>2013-07-09T15:24:58-07:00</updated>
<published>2013-07-09T15:24:58-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10233&amp;p=114865#p114865</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10233&amp;p=114865#p114865"/>
<title type="html"><![CDATA[Re: FDS modulator formula revision]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10233&amp;p=114865#p114865"><![CDATA[
<div class="quotetitle">lidnariq wrote:</div><div class="quotecontent"><br />I can't remember whether that shape is more congruous with R2R or weighted binary DACs. And the down-only RC decay is just weird to me.<br /></div><br />The discontinuities do look like they're kind of at binary locations in the waveform, with decreasing intensity along the binary tree (i.e. strongest at 32, next strongest at 48/16, etc...). I dunno what that suggests for a DAC circuit though.<br /><br />What do you mean by down-only RC decay? The discontinuity in the saw wave only goes down, the up part is smooth so you don't really see the decay. (I could show you a square wave if you want to see it going both ways.)<br /><br /><div class="quotetitle">lidnariq wrote:</div><div class="quotecontent"><br />Impulse trains and frequency sweeps are good, and probably more attainable.<br /></div><br />Ah, yeah a frequency sweep would be easy to do. I will probably try that later.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5165">rainwarrior</a> — Tue Jul 09, 2013 3:24 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[lidnariq]]></name></author>
<updated>2013-07-09T12:54:26-07:00</updated>
<published>2013-07-09T12:54:26-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10233&amp;p=114854#p114854</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10233&amp;p=114854#p114854"/>
<title type="html"><![CDATA[Re: FDS modulator formula revision]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10233&amp;p=114854#p114854"><![CDATA[
<div class="quotetitle">rainwarrior wrote:</div><div class="quotecontent"><br />I remember someone suggested that the volume on the FDS is controlled via PWM, are these additional high-frequency lowpass filters intended to smooth the effects of PWM?<br /></div> The lowpass caused by the 0.1µF capacitor in the middle of the schematic is clearly intentional. But the rest? I can't tell if they're intentional, just artifacts of the amplifiers used, or serendipitous. Regardless, they'd help with PWM noise.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />That curve in the region between 1kHz - 20kHz is important, and I assume beyond there we needn't bother. Is a 1-pole filter good enough to match in this range? Do we need 2? More?<br /></div>Over the range of 10Hz to 7kHz, a 1-pole lowpass with a corner frequency of 1750 Hz looks like the best fit in simulation.<br />After that, I get an exceptionally good fit for everything above 10Hz by adding two poles at 20.5kHz. (BSS145 nMOSFET)<br />Switching to the 2N7002 moves the first pole down to 1670Hz and splits the other two poles to 19.1kHz and 160kHz.<br />Instead removing the 0.1µF capacitor produces two poles at 1.80kHz and 21.3kHz<br />Then again, 5% tolerance resistors with 20% tolerance capacitors means that many of these numbers vary from unit to unit. I think these are gaussian distributions, so they shouldn't ever hit the full ±25% worst-case range, but...<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />I don't have much background in circuit analysis; my approximation of a 2kHz lowpass was just based on comparing against a recording with a couple of square waves at different frequencies until I found something that seemed to match reasonably well.<br /></div> Other versions of SPICE provide automatic pole-zero analysis. (not LTSpice, but, hey, it's free)<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />I kinda wish I could just make it produce white noise so I could compare a spectral analysis.<br /></div> Impulse trains and frequency sweeps are good, and probably more attainable.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />The other funny thing I forgot to mention, probably not worth emulating, but also the DAC in my FDS is clearly less than ideal. Check out this 0-63 saw wave<br /></div> O_o<br />I can't remember whether that shape is more congruous with R2R or weighted binary DACs. And the down-only RC decay is just weird to me.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3512">lidnariq</a> — Tue Jul 09, 2013 12:54 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[rainwarrior]]></name></author>
<updated>2013-07-09T08:58:34-07:00</updated>
<published>2013-07-09T08:58:34-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10233&amp;p=114845#p114845</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10233&amp;p=114845#p114845"/>
<title type="html"><![CDATA[Re: FDS modulator formula revision]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10233&amp;p=114845#p114845"><![CDATA[
That's pretty neat. A bit more complex than I was expecting! I remember someone suggested that the volume on the FDS is controlled via PWM, are these additional high-frequency lowpass filters intended to smooth the effects of PWM?<br /><br />From your transfer function and description, I'm wondering what the best way to approximate this is. The highpass probably isn't worth bothering with since the emulator already has a simple one, and the differences between one or the other probably aren't very audible. That curve in the region between 1kHz - 20kHz is important, and I assume beyond there we needn't bother. Is a 1-pole filter good enough to match in this range? Do we need 2? More?<br /><br />I don't have much background in circuit analysis; my approximation of a 2kHz lowpass was just based on comparing against a recording with a couple of square waves at different frequencies until I found something that seemed to match reasonably well. At 1.6kHz it looked too weak, at 2.4kHz too strong, and that's about as far as I went. I kinda wish I could just make it produce white noise so I could compare a spectral analysis.<br /><br />The other funny thing I forgot to mention, probably not worth emulating, but also the DAC in my FDS is clearly less than ideal. Check out this 0-63 saw wave:<br /><img src="http://rainwarrior.ca/projects/nes/fds_saw.png" alt="Image" /><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5165">rainwarrior</a> — Tue Jul 09, 2013 8:58 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[lidnariq]]></name></author>
<updated>2013-07-08T23:34:44-07:00</updated>
<published>2013-07-08T23:34:44-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10233&amp;p=114827#p114827</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10233&amp;p=114827#p114827"/>
<title type="html"><![CDATA[Re: FDS modulator formula revision]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10233&amp;p=114827#p114827"><![CDATA[
I should have figured that it was just a matter of figuring out what to search for.<br />This fellow has a reverse engineered schematic: <!-- m --><a class="postlink" href="http://green.ap.teacup.com/junker/119.html">http://green.ap.teacup.com/junker/119.html</a><!-- m --><br /><br />The two highpasses are obvious in the schematic: one at 0.796 Hz (2MΩ R4 and 1µF C3), and one at 5.68Hz (56 kiloohms from each audio source (R3, R5) and a 1 microfarad capacitor (C5)). <br />But none of the lowpass filters are obvious.<br /><br />So I threw it into LTspice to see if I could coax it out. (Schematic: <!-- m --><a class="postlink" href="http://eamp.org/li/bss145-schem.png">http://eamp.org/li/bss145-schem.png</a><!-- m --> (883×552px; 13kB) )<br /> I faked the BU4069 using nMOSFET-pMOSFET pairs, and ended up with this transfer function: <!-- m --><a class="postlink" href="http://eamp.org/li/bss145-xfer.png">http://eamp.org/li/bss145-xfer.png</a><!-- m --> (1914×951px; 20kB)<br />Finding the exact corner frequencies in that complicated of a transfer function is difficult, so here's the numbers using a bunch of different heuristics:<br />* using phase=45°+k·90°: highpasses at .0774Hz and 5.78Hz and lowpasses at 1.36kHz, 10.5kHz, and 51.7kHz<br />* using intersection of tangent lines: highpasses at .0796Hz, 5.74Hz, and lowpasses at 1.57kHz, 11.5kHz, and 39.8kHz<br />Both of those methods underestimate the frequency of the 1.4kHz and 11kHz lowpasses (because they all stacked on top of each other)<br />* by -6dB points: highest highpass at 3.27Hz; lowest lowpass at 2.86kHz. (This is probably what you found)<br /><br />The top two lowpasses seem to be relatively sensitive to the specifics of the inverter: replacing the nMOSFET (from a BSS145 to a 2N7002) moved from 11.5kHz to 18.2kHz and from 51.7kHZ to 193kHz. The other three corner frequencies are comparatively fixed.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3512">lidnariq</a> — Mon Jul 08, 2013 11:34 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[rainwarrior]]></name></author>
<updated>2013-07-08T18:21:36-07:00</updated>
<published>2013-07-08T18:21:36-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10233&amp;p=114815#p114815</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10233&amp;p=114815#p114815"/>
<title type="html"><![CDATA[Re: FDS modulator formula revision]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10233&amp;p=114815#p114815"><![CDATA[
lidnariq, see what you can do with this:<br /><br /><img src="http://rainwarrior.ca/projects/nes/fds0.jpg" alt="Image" /><br /><img src="http://rainwarrior.ca/projects/nes/fds1.jpg" alt="Image" /><br /><img src="http://rainwarrior.ca/projects/nes/fds2.jpg" alt="Image" /><br /><img src="http://rainwarrior.ca/projects/nes/fds3.jpg" alt="Image" /><br /><img src="http://rainwarrior.ca/projects/nes/fds4.jpg" alt="Image" /><br /><br />The electrolytic caps are 47µF 16V (big) and 1µF 50V (small x2). All the ceramics say 104Z 25V.<br /><br />The board markings for resistors:<br />R1: 47<br />R2: 1.2M<br />R3: 56K<br />R4: 2M<br />R5: 56K<br />R6: 3.3K<br />R7: 100<br />R8: 100K<br /><br />If there's anything else you need read, let me know.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5165">rainwarrior</a> — Mon Jul 08, 2013 6:21 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[rainwarrior]]></name></author>
<updated>2013-07-08T18:31:51-07:00</updated>
<published>2013-07-08T18:14:15-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10233&amp;p=114813#p114813</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10233&amp;p=114813#p114813"/>
<title type="html"><![CDATA[Re: FDS modulator formula revision]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10233&amp;p=114813#p114813"><![CDATA[
The problem isn't that cycle accurate CPU/audio <em>can't</em> be made efficient, it's that cycle accurate isn't efficient enough with the current code, and I'm not going to do the necessary rewrite for this version. The solution is earmarked for a future revision.<br /><br />For what it's worth, the current implementation is generally very accurate (CPU and audio are synced at least once per sample, and independently they are cycle accurate to themselves), it's just the efficiency really breaks down quickly when I take it to single clocks. This is the first and only problem I've found relating to their very slight desynch.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5165">rainwarrior</a> — Mon Jul 08, 2013 6:14 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2013-07-08T18:05:40-07:00</updated>
<published>2013-07-08T18:05:40-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10233&amp;p=114811#p114811</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10233&amp;p=114811#p114811"/>
<title type="html"><![CDATA[Re: FDS modulator formula revision]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10233&amp;p=114811#p114811"><![CDATA[
Cycle accurate operation can be made efficient. Run the CPU ahead of the audio units, generating a list of writes represented as (cycle, address, data) tuples. Then catch up the audio units by feeding in each write at the appropriate cycle. CPU reads of readable registers complicate things though, I'll admit, but you can just catch up on each $4015 or expansion synthesizer read. I imagine that NSFs seldom spin on a readable register for long enough to make this slow it down.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Mon Jul 08, 2013 6:05 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[rainwarrior]]></name></author>
<updated>2013-07-08T17:54:19-07:00</updated>
<published>2013-07-08T17:54:19-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10233&amp;p=114810#p114810</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10233&amp;p=114810#p114810"/>
<title type="html"><![CDATA[Re: FDS modulator formula revision]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10233&amp;p=114810#p114810"><![CDATA[
Thank very much!<br /><br />Yeah, it's pretty clear from that that there's no phase reset at all going on there.<br /><br />After doing some more investigating, I believe what the problem I have with Bio Miracle is it's extra write of $4085 just after it re-enables the mod unit. On some notes, the mod frequency is set very high, so there's a chance it could tick before $4085 resets the mod accumulator, throwing the pitch off. I think the reason I couldn't eliminate it entirely is it's a very precise number of cycles, and it's right on the cusp of where it would tick before the $4085. The other thing I believe I missed is that I think $4088 resets the accumulator that ticks the mod table, so it actually makes that timing consistent if you've got a cycle-accurate emulator.<br /><br />Unfortunately, NSFPlay alternates between clocking the CPU and clocking the audio units, so it's not cycle-precise in that way. It's far too slow if I do it all cycle by cycle.<br /><br />I think I'll probably put in an option (disabled by default) to let $4085 reset the phase, and document that it's really just there to work around this problem.<br /><br />Also in the future I'll probably add a full-clock-samplerate WAV export for people who want to make cycle-precise renders.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5165">rainwarrior</a> — Mon Jul 08, 2013 5:54 pm</p><hr />
]]></content>
</entry>
</feed>