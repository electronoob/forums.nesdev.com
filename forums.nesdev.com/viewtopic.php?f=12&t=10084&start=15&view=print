<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Writing to SRAM on retail carts</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Writing to SRAM on retail carts</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=12&amp;t=10084">http://forums.nesdev.com/viewtopic.php?f=12&amp;t=10084</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>2</strong> of <strong>3</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Sat May 11, 2013 10:31 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Writing to SRAM on retail carts</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Ramsis wrote:</div><div class="quotecontent">Thinking of it (and reading nocash's docs again), I guess that implementing an &quot;SPC was played&quot; flag in the PowerPak firmware might be possible after all</div><br />A flag that's preserved on reset? Can't it just as well be in WRAM or even VRAM, or are those lost on reset?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Ramsis</b> [ Sat May 11, 2013 10:40 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Writing to SRAM on retail carts</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">blargg wrote:</div><div class="quotecontent"><div class="quotetitle">Ramsis wrote:</div><div class="quotecontent">Thinking of it (and reading nocash's docs again), I guess that implementing an &quot;SPC was played&quot; flag in the PowerPak firmware might be possible after all</div><br />A flag that's preserved on reset? Can't it just as well be in WRAM or even VRAM, or are those lost on reset?</div><br />I guess not, but isn't the state of WRAM/VRAM undetermined upon initial power-up? So a (small?) risk of an unwanted flag value would remain. DMA registers, on the other hand, are all $FF upon power-up, at least according to Fullsnes.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Sat May 11, 2013 12:30 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Writing to SRAM on retail carts</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />If you stick a very particular value somewhere in RAM, the chances that it would be that particular value on power-up can be made very small.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Sat May 11, 2013 8:40 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Writing to SRAM on retail carts</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Even moreso if you put many particular values in many locations. I'd trust RAM more than DMA register preservation on all revs of the SNES.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>byuu</b> [ Sun May 12, 2013 10:13 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Writing to SRAM on retail carts</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />So then is it true that swapping a cart corrupts WRAM arbitrarily -even if- we are currently executing code out of the DMA registers during the entire swap?<br /><br />Putting the entire uploader into the DMA registers is much less fun than just putting in a long wait loop.<br /><br />My version of synchronous serial would suffer a bit from the 4-byte gaps, as its unrolled form bangs the joypad registers as fast as possible.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>byuu</b> [ Thu May 16, 2013 12:52 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Writing to SRAM on retail carts</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Okay, did some testing on my end.<br /><br />It appears completely stable now to swap carts by executing a wait loop inside the DMA registers. WRAM is not getting corrupted as far as I can tell, so long as you swap while inside the DMA loop.<br /><br />So this code should suffice, and it allows you to use different transfer methods (like my USART, which when unrolled doesn't fit into the DMA registers without a performance penalty):<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">ldy #$0040; ldx #$0000&nbsp; //works out to about six seconds, roughly<br /><br />lda #$ca; sta $004300&nbsp; //dex<br />lda #$d0; sta $004301&nbsp; //bne $fd<br />lda #$fd; sta $004302&nbsp; //...<br />lda #$88; sta $004303&nbsp; //dey<br />lda #$d0; sta $004304&nbsp; //bne $fa<br />lda #$fa; sta $004305&nbsp; //...<br />lda #$6b; sta $004306&nbsp; //rtl<br /><br />jsl $004300</div><br /><br />So as long as you keep your upload transfer routine resident in memory (at $7ffxxx or so), this is all you'll need.<br /><br />Really great trick, appreciate you pointing it out, nocash.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Thu May 16, 2013 1:51 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Writing to SRAM on retail carts</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I should do a checksum test where WRAM is filled with random values, then verified after lots of swapping. Not sure why my code was crashing before for me when going back to WRAM. Good it doesn't all have to fit into DMA registers <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>MottZilla</b> [ Thu May 16, 2013 2:38 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Writing to SRAM on retail carts</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />That's pretty awesome if you can indeed give yourself 6 seconds of time to cart swap with no risk of CPU crash. <br /><br />Why do you say your WRAM code needs to be at $7FFxxx? What significance is there opposed to just anywhere in WRAM? <br /><br />In theory with this setup, couldn't you pop some kind of SRAM in a Cartridge and the loader in another on an EPROM and make your own SRAM cart + uploader? Not for any particular reason, just because you could. <br /><br />I think you mentioned using a cartridge swap method for dumping carts when you were redumping carts didn't you?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Thu May 16, 2013 3:04 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Writing to SRAM on retail carts</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />You can keep the uploader on the SRAM cart itself, and reprogram it when it gets erased. In practice it doesn't get erased all that often. Most code you don't need run right at reset, and for that which you do, you can have it run the bootloader after the code, thus continuing the cycle of not having to boot off your EPROM (or second SRAM) cart with an intact bootloader.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>byuu</b> [ Thu May 16, 2013 3:22 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Writing to SRAM on retail carts</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I should do a checksum test where WRAM is filled with random values, then verified after lots of swapping.</div><br /><br />That would be great, if you were bored and didn't mind. I found it curious that the fake DMA transfer could corrupt WRAM anyway, but apparently something was happening.<br /><br />My test only relies on 0x400 bytes of WRAM remaining in-tact, so it's possible it's still not 100% safe, so confirmation would be great.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Why do you say your WRAM code needs to be at $7FFxxx? What significance is there opposed to just anywhere in WRAM?</div><br /><br />It can be anywhere, it's just where I put it. Keep it out of the way so uploaded programs have more WRAM to use.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">You can keep the uploader on the SRAM cart itself, and reprogram it when it gets erased. In practice it doesn't get erased all that often.</div><br /><br />I am hoping it will get erased a lot less now with this nicer swap method. It's quite a hassle when it does get erased and you have to break out the floppy disk and the copier.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">thus continuing the cycle of not having to boot off your EPROM (or second SRAM) cart with an intact bootloader.</div><br /><br />Yep, I was usually able to dump 1 - 10 carts in a row before a swap would fail and I'd have to use the original boot cart again. From there, I could usually pull off about 10 swaps from the boot cart before I'd kill the SRAM.<br /><br />Also lots of ways to accidentally kill the boot cart SRAM: pull before or after the start of the cart swap, pull it at a really odd angle, put it in backwards (:P), sometimes when the card edge doesn't get good contact with all pins weird stuff can happen and wipe it, and so forth.<br /><br />It would actually be really nice to get a FlashROM cart to run the bootloader on.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>DNSDies</b> [ Fri May 17, 2013 8:58 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Writing to SRAM on retail carts</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I was hoping for a more stable hardware solution.<br /><br />Additionally, I'm not familiar enough with SNES assembly, so programming DMA transfers and a SRAM transfer program is a bit outside my skill set for now.<br /><br />I guess the tototek card and a PCI express Parallel card with EPP is my solution.<br /><br />Thanks.<br /><br />I was kind of hoping to just be able to wire up a battery circuit to the SRAM, desolder it, pop it in the willem and write a file to it.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>qwertymodo</b> [ Fri May 17, 2013 12:23 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Writing to SRAM on retail carts</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">byuu wrote:</div><div class="quotecontent">It would actually be really nice to get a FlashROM cart to run the bootloader on.</div><br />If you need a FlashROM programmer, I have an extra copy of my Teensy&lt;-&gt;FlashROM adapter PCB...<br /><br /><div class="quotetitle">DNSDies wrote:</div><div class="quotecontent">I was kind of hoping to just be able to wire up a battery circuit to the SRAM, desolder it, pop it in the willem and write a file to it.</div><br />You could probably do that... or, for a more stable solution, you could replace the SRAM with F-RAM, so you don't have to worry about maintaining Vcc, but then you'd need a little extra glue logic to properly drive the /CS pin.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>DNSDies</b> [ Mon May 20, 2013 9:31 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Writing to SRAM on retail carts</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">qwertymodo wrote:</div><div class="quotecontent">You could probably do that... or, for a more stable solution, you could replace the SRAM with F-RAM, so you don't have to worry about maintaining Vcc, but then you'd need a little extra glue logic to properly drive the /CS pin.</div><br /><br />Apparently the willem I have (GQ-4X) doesn't support writing to SRAM, only testing it.<br /><br />There has been some discussion on other boards abotu using other ROM profiles to attempt to force a write, but it doesn't work out usually.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Mon May 20, 2013 11:29 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Writing to SRAM on retail carts</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />How would you preserve the SRAM's contents when removing from the programmer?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>MottZilla</b> [ Mon May 20, 2013 12:14 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Writing to SRAM on retail carts</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Some kind of clip on the top to provide the battery power circuit maybe? Either way he says his programmer won't write SRAM chips so it hardly matters. However, if he could cart swap, programming an eprom you could make a swapping program that would let you swap carts and then would program a SRAM image which was stored in EPROM and loaded to WRAM along with the code to upload it to the swapped in cart. It actually doesn't even sound that hard. The earlier DMA register 6 second swap loop is simple enough. All you need is some init code, maybe throw some graphics in the screen, copy your SRAM image and code to copy that back to a cartridge into WRAM and that's about it. It actually seems very practical if you have access to an eprom programmer and a cartridge preferably with a chip socket.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>2</strong> of <strong>3</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>