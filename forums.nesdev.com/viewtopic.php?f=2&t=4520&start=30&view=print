<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - My first foray into making cinema displays</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">My first foray into making cinema displays</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=4520">http://forums.nesdev.com/viewtopic.php?f=2&amp;t=4520</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>3</strong> of <strong>3</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Sat Nov 01, 2008 6:55 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Roth wrote:</div><div class="quotecontent">Though, I'm still unsure of what you guys mean by 'objects' in this case.</div>
<br />By "object" I meant an entity that exists in the world modeled in the program. In SMB, Mario is an object. In most games, objects require multiple sprites to be represented. Rendering each sprite individually by hand would consume a lot of ROM and would be a very tedious task for the programmer.
<br />
<br />Because of this, routines that render sprites will typically transform some sort of sprite definition (list of individual sprites that compose the visual representation of an object) into OAM data based on the position and attributes of the object they represent.
<br />
<br />Such routines make it easy for the programmer to handle sprites, because it's possible to draw an object anywhere on the screen, just by informing the routine about the coordinates of the object and the sprite definition it uses. You could even have the routine automatically handle the flipping of each sprite based on the flipping of the object, as well as other attributes (such as palette changes because of water, and so on).
<br />
<br />This makes it all very dynamic, in a way that a certain object is not tied to specific OAM positions, which is really bad for sprite cycling, for example.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Celius</b> [ Sat Nov 01, 2008 7:56 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Yes, yes, Tokumaru is completely right. An object is just a thing in the game world, usually made of sprites. A candle or an enemy in Castlevania is an object. It's usually something that has it's own mind/purpose.
<br />
<br />But it's great for sprite cycling to do it this way, and it's a lot less coding. For example, you could tell the sprite drawing routine to place an enemy at coordinates 143,102, and have that enemy's sprite data defined somewhere in RAM. This data tells the arrangement of the sprites + the attribute data. The routine will also have to be told if the object is flipped in any way.
<br />
<br />Oh, and just so you know, these routines can take a very long time to execute! There's just a lot it has to compute. Though you can optimize the routine to take less time, obviously. There was actually a topic about it:
<br />
<br /><!-- m --><a class="postlink" href="http://nesdev.com/bbs/viewtopic.php?t=3772">http://nesdev.com/bbs/viewtopic.php?t=3772</a><!-- m -->
<br />
<br />Where before posting, I'd always thought of having to work with sprites in a hardcoded way. But it's so much easier when you don't have to.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Roth</b> [ Sat Nov 01, 2008 8:29 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I'm unsure if I'm doing what you guys are referring to or not haha
<br />
<br />What I have for my enemies, is they are all loaded offscreen from my initial sprite positions and attributes that are stored in ROM:
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">the_sprites:<br />&nbsp; &nbsp;.byte $80,$08,$00,$80 ; Player left head<br />&nbsp; &nbsp;.byte $80,$09,$00,$88 ; Player right head<br />&nbsp; &nbsp;.byte $88,$1a,$00,$80 ; Player left chest<br />&nbsp; &nbsp;.byte $88,$1b,$00,$88 ; Player right chest<br />&nbsp; &nbsp;.byte $00,$84,$01,$00 ; Zombie1 left head<br /><br />; ... etc.<br /></div>
<br />
<br />The way I load is to use a routine to store everything from $200 up to the rest of the sprites that are to be used, and do the sprite cramming routine every NMI, which just updates the 200 page.
<br />
<br />If this is what you guys are referring to, then I do that for sure.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Celius</b> [ Sat Nov 01, 2008 9:01 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Just to clarify if there's a difference between what you do and what we do:
<br />
<br />Assuming the OAM page is $200-$2FF, to move an enemy one pixel to the right, do you do something like this?
<br />
<br />clc
<br />lda $203
<br />adc #1
<br />sta $203
<br />
<br />In other words, do you take existing values from the OAM page and alter them slightly as enemies move and whatnot?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Roth</b> [ Sat Nov 01, 2008 9:04 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Yes, that is what I do. If you mean you guys specify groups of sprites together to make an object, I have no clue how to do that. Like, how to 'lock them together' as one thing, I guess is what I'm saying.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>SecretServiceDude</b> [ Sat Nov 01, 2008 9:55 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Roth wrote:</div><div class="quotecontent">Yes, that is what I do. If you mean you guys specify groups of sprites together to make an object, I have no clue how to do that. Like, how to 'lock them together' as one thing, I guess is what I'm saying.</div>
<br />Specify a location in RAM (somewhere other than the OAM page) to hold the position of each group of sprites.
<br />
<br />Assuming you have an object that's 1 sprite wide and 4 sprites tall, and that the object's position is stored in the variables objectPosX and objectPosY, you can "lock" the sprites together with code like this:
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">; Set x-position<br />lda objectPosX<br />sta $203<br />sta $207<br />sta $20B<br />sta $20F<br /><br />; Set y-position<br />clc<br />lda objectPosY<br />sta $200<br />adc #8<br />sta $204<br />adc #8<br />sta $208<br />adc #8<br />sta $20C</div>
<br />
<br />With this setup, you only have to change two variables (objectPosX and objectPosY) to move the entire object. The other sprites will move along automatically.
<br />
<br />Note: This method still doesn't allow for easy sprite cycling, but it's a start. It's all about baby steps.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Celius</b> [ Sat Nov 01, 2008 11:43 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Roth wrote:</div><div class="quotecontent">Yes, that is what I do. If you mean you guys specify groups of sprites together to make an object, I have no clue how to do that. Like, how to 'lock them together' as one thing, I guess is what I'm saying.</div>
<br />
<br />Ah, I understand. It can be rather complex. Generally, object placement is specified by one set of X,Y coords which is used as a reference point for the metasprite definition. Here's how I define metasprites:
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">MetaSprite:<br />&nbsp; .db NumberOfSprites, FlipXAdjustment, FlipYAdjustment<br /><br />&nbsp; .db RelativeXCoord, RelativeYCoord, Tile, Attribute<br />&nbsp; .db RelativeXCoord, RelativeYCoord, Tile, Attribute<br />&nbsp; ....<br /></div><br /><br />It goes on for how ever many sprites make up the object. Take a look at this definition:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">MedusaHead:<br />&nbsp; &nbsp;.db $03,$08,$18<br />&nbsp; &nbsp;.db $00,$00,$B1,$03<br />&nbsp; &nbsp;.db $08,$02,$B3,$03<br />&nbsp; &nbsp;.db $10,$03,$B5,$03<br /></div>
<br />
<br />This definition says that 3 sprites make up the Medusa Head. The FlipX and FlipY adjustment are there to adjust the position of the sprites if it is flipped horizontally or vertically, as sometimes it needs to be adjusted because it looks weird when you flip back and forth. So if this metasprite is flipped horizontally, it will be placed 8 pixels to the right to make it look like a smooth flipping.
<br />
<br />Now say I wanted to place the medusa head at 123, 42. My drawing routine would take this metasprite, and assuming there's no flipping, would put the sprites at the following coords:
<br />
<br />123, 42
<br />131, 44
<br />139, 45
<br />
<br />Because those relative coords place the sprites relative to the object's X/Y coords.
<br />
<br />Don't get confused by my order of definitions. I know it's standard to have Y, Tile, Attribute, then X, but it makes no difference performance-wise the way I have it set up, and it's just easier for me to read as X, Y, Tile, Attribute for me.
<br />
<br />Does that make any more sense? That's how I specify groups of sprites as one object.
<br />
<br />You should have a sprite drawing routine that takes a list of objects that are going to be drawn on screen, and use metasprite definitions like this to have it draw them accordingly.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Sun Nov 02, 2008 2:32 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Heh, that's fun because I'm re-doing all sprites for my game those times.
<br />Yes, the way Roth did it is really terrible, you shouldn't rely on any value in OAM, it's just a buffer to be sent to the PPU via $4014, nothing else. You should have a system that handles objects and all, and a routine that maze the object's sprites in OAM. This routine itself call the general-purpose sprite mazing, which can maze any sprite in OAM instantly. Basically it just compies data for a few sprites to OAM, but changin the Y and X position to add their relative componant (and check if there is overflow), and optionally change the color and flipping.
<br />
<br />To handle sprite cycling, I have the routine that update sprites in RAM, and I toggle some instructions every so frame, so that when I call that routine to maze object it will maze the sprite forwards every so frame and backward every other frame. This is needed because I need the objects to be drawn in a sorted order, as my game has top-down view. The sorting routine takes very long by the way, but it's doable.
<br />For sprites that needs to be mazed in a specific order, I just call the ROM version of the routine so that it doesn't do sprite cycling as the RAM version does.
<br />
<br />I could share my routine if you guys want it, but this could discourage some people to write their own, which isn't good.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Roth</b> [ Sun Nov 02, 2008 7:05 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Thanks for the advice guys! I'll read these posts a few more times to get an idea of how I need to do something like this. Sounds a bit hairy!
<br />
<br /><div class="quotetitle">SecretServiceDude wrote:</div><div class="quotecontent">It's all about baby steps.</div>
<br />
<br />So true ; )

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Sun Nov 02, 2008 12:57 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Roth, I know this can be overwhelming at first. In fact, you can get away with simpler sprite handlers depending on the type of your game.
<br />
<br />What we've been presenting you is very useful in dynamic setups, when a variable number of objects can be active at once, in which case some sort of sprite handler is necessary to cycle them, hide the unused ones and so on.
<br />
<br />If your game is so simple that it allows you to hardcode individual objects to certain OAM locations (should only happen when you have a small constant number of objects on screen), there is no problem with that. Just keep in mind that this is not the standard way to do it (as in "not many commercial games did it"), because it's very limited.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>3</strong> of <strong>3</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>