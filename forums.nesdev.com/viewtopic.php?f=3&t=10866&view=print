<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - sound resample methods?</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">sound resample methods?</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=3&amp;t=10866">http://forums.nesdev.com/viewtopic.php?f=3&amp;t=10866</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Zepper</b> [ Tue Jan 07, 2014 1:52 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>sound resample methods?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Hi. In my emulator, the APU generates 1 sample at each odd CPU cycle. The resampling method I use, in short words, is calculated as the arithmetical average (sum all the samples, divided by the number of samples).<br /><br />Is there another method, not so much complicated?<br />Thank you.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Tue Jan 07, 2014 2:41 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: sound resample methods?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Right now, what you're doing is using a &quot;boxcar&quot; filter as a lowpass. Its frequency rejection is rather lousy, but it is better than the only thing that's even simpler that what you're doing:<br /><br />The only simpler thing I can think of is to calculate the current state of the APU for each output sample, but that has no lowpass properties at all and will cause audible aliasing.<br /><br />There are techniques to generate exactly as many samples as needed at the sample rate, such as blargg's blip_buf, but I couldn't honestly call them &quot;simpler&quot;, just &quot;better for CPU load while still completely accurate&quot;

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Tue Jan 07, 2014 4:22 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: sound resample methods?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Yeah, averaging each source sample is about as simple as it gets, short of skipping source samples (which is pretty lousy quality). You might be able to specify a higher output rate, like 894886Hz, and let the OS/sound output deal with resampling. I've heard of people using a combination of skipping samples (to reduce it to say 160kHz) and then letting the OS do the rest. There might also be wrappers for whatever sound output you're using (Allegro?) that have a resampler built in.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Zepper</b> [ Tue Jan 07, 2014 5:43 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: sound resample methods?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Problem: the sound output volume is quite low. If I take the result and &lt;&lt; 1, it becomes too high. So, I use a crap decay, volume -= volume &gt;&gt; 1, every time a sample (from resampling) is generated. It works, but it's still cracking depending of the number of active channels.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Tue Jan 07, 2014 6:04 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: sound resample methods?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Tentatively, I think you've got something else funny going on here. Each time you multiply by 2 you only increase the volume by 6dB, so if it clips when you &lt;&lt;1 and doesn't when you don't, you're already extremely close to the loudest your soundcard can get. Maybe data type issues?<br /><br />The other thing you're doing now is called companding, and that basically can't be done in a way that guarantees it will never clip without either looking ahead in time (1/10th of a second or more) or accepting the volume being non-continuous.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Tue Jan 07, 2014 6:48 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: sound resample methods?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Unless there's a high-pass filter, the output will be positive only so will be another 6dB quieter than necessary, even when integer overflow starts to occur. A hacky fix is to subtract half the sample range (e.g. 32768 for a 16-bit sample) just before outputting to the OS, though then your OS's mixer will hate you because on quiet parts you'll be outputting -32768 continuously.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Zepper</b> [ Tue Jan 07, 2014 7:34 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: sound resample methods?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="attachtitle">Attachment:</div><div class="attachcontent">
			<span class="genmed">
				<img src="./styles/subsilver2/imageset/icon_topic_attach.gif" width="14" height="18" alt="" title="" /> 
				<a href="./download/file.php?id=1117">Ninja Gaiden 3 - The Ancient Ship of Doom [Ninja Ryukenden 3 - Yomi no Hakobune] (1991)(Tecmo).rar</a> [905 KiB]
			</span><br />
			<span class="gensmall">Downloaded 27 times</span>
		

		<br />
	</div><img src="http://imageshack.com/a/img834/9609/yuyw.png" alt="Image" /><br /><br />Default output setting, without the <em><strong>volume -= volume &gt;&gt; 1</strong></em> thing.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Tue Jan 07, 2014 10:16 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: sound resample methods?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />So you have some kind of high-pass filter. That's good. Any reason you're using bit shifting for volume adjustments? Just multiply by say 192 then right shift by 7 and you have a 1.5 adjustment. Or *205&gt;&gt;7 for 1.6 adjustment. You have to do some kind of clamping, because that sounds much better than overflow which wraps around.<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp;// s = 16-bit sample, vol = 128 for 1.0, 192 for 1.5, etc.<br />int gain_clamp( int s, int vol )<br />{<br />&nbsp; &nbsp; s = (s * vol) &gt;&gt; 7;<br />&nbsp; &nbsp; if ( s &lt; -32768 )<br />&nbsp; &nbsp; &nbsp; &nbsp; s = -32768;<br />&nbsp; &nbsp; if ( s &gt; 32767 )<br />&nbsp; &nbsp; &nbsp; &nbsp; s = 32767;<br />&nbsp; &nbsp; return s;<br />}<br /></div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Jarhmander</b> [ Wed Jan 08, 2014 9:28 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: sound resample methods?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">blargg wrote:</div><div class="quotecontent"><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp;// s = 16-bit sample, vol = 128 for 1.0, 192 for 1.5, etc.<br />int gain_clamp( int s, int vol )<br />{<br />&nbsp; &nbsp; s = (s * vol) &gt;&gt; 7;<br />&nbsp; &nbsp; if ( s &lt; -32768 )<br />&nbsp; &nbsp; &nbsp; &nbsp; s = -32768;<br />&nbsp; &nbsp; if ( s &gt; 32767 )<br />&nbsp; &nbsp; &nbsp; &nbsp; s = 32767;<br />&nbsp; &nbsp; return s;<br />}<br /></div></div><br />Watch out when using this code, because it relies on implementation-defined behavior (the signed right shift when using negative integers). Almost all of the compilers I've used propagated the sign bit but if you want to be 100% portable then don't use this code.<br /><br />Basically, what blargg suggests you is using fixed-point arithmetic. I don't know if there is significant speed gains on PCs...

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Zepper</b> [ Wed Jan 08, 2014 9:51 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: sound resample methods?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />It would be possible for each sound channel, instead of applying it in the final mixed sample.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">output = (value * 192) &gt;&gt; 7;<br />output_dac = (duty_sign)? output: -output;</div><br /><strong>value</strong> is the <em>unsigned sample</em> generated in a channel. <strong><em>Usually</em></strong>, it would be:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">output_dac = (duty_sign)? : output: 0;</div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Wed Jan 08, 2014 10:50 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: sound resample methods?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Jarhmander wrote:</div><div class="quotecontent">Watch out when using this code, because it relies on implementation-defined behavior (the signed right shift when using negative integers).</div><br />It's fine to rely on implementation-defined behavior so long as you use a <a href="http://forums.nesdev.com/viewtopic.php?p=58209#p58209" class="postlink">compile-time assertion</a>. Undefined behavior is much trickier to test for, especially in compilers that optimize out your tests using the &quot;as if&quot; rule.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Basically, what blargg suggests you is using fixed-point arithmetic. I don't know if there is significant speed gains on PCs...</div><br />Even if speed gains of fixed-point arithmetic are minimal, stability gains can be significant in some cases, as rounding introduces the same amount of noise throughout the output range.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Wed Jan 08, 2014 11:02 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: sound resample methods?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Jarhmander wrote:</div><div class="quotecontent">if you want to be 100% portable then don't use this code.</div><br />Or replace the shift with an actual divide by 128. The compiler will optimize it when it can.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>James</b> [ Wed Jan 08, 2014 11:32 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: sound resample methods?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Jarhmander wrote:</div><div class="quotecontent">I don't know if there is significant speed gains on PCs...</div><br />I just put together a quick test to compare an int multiplication and shift vs. a conversion to a double, multiplication, and conversion back to an int.  Test box is a Core i7-3770.  Code was compiled without optimizations.<br /><br />The int version is 2.1x faster than the x87 version but only 1.1x faster than the SSE2 version.  YMMV.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Wed Jan 08, 2014 12:27 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: sound resample methods?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Since the OP was stuck on not even using multiplies, just shifts, I assumed that there were non-technical reasons for avoiding more flexible approaches, and stuck to one that was only slightly more &quot;daring&quot;.<br /><br />On the topic of compiler optimization, since <a href="https://en.wikipedia.org/wiki/Modulo_operation" class="postlink">unfortunately</a> <a href="http://stackoverflow.com/questions/18917717/advantages-of-using-truncation-towards-minus-infinity-vs-towards-zero" class="postlink">C generally</a> (and I believe always in C99) uses round-towards-zero for divide, rather than round-towards-negative-infinity (<a href="https://biblio.ugent.be/input/download?func=downloadFile&amp;fileOId=452146" class="postlink">Euclidian division</a>), a compiler can't simply optimize just a signed divide-by-2^n to a right shift; when the operand is negative, it must adjust the result as well.<br /><br /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">It's fine to rely on implementation-defined behavior so long as you use a compile-time assertion.</div><br />And so long as most implementations have this behavior, otherwise you make your code break on things that don't, leaving the user to find an alternate implementation and be sure they catch every dependence on it.<br /><br /><div class="quotetitle">Zepper wrote:</div><div class="quotecontent"><div class="codetitle"><b>Code:</b></div><div class="codecontent">output = (value * 192) &gt;&gt; 7;<br />output_dac = (duty_sign)? -output: output;</div></div><br />That would work, and you could also do the upscaling from the NES 4-bit DAC to your 16-bit sample range. You wouldn't even need a right shift anymore, just a multiplier, e.g. <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">multiplier=gain*0.1*32767/15</tt> and then <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">output = dac * multiplier</tt>.<br /><br />The NES DACs are not signed, BTW. They actually do <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">output_dac = duty_sign ? 0 : output</tt>. And it does make an audible difference; notes have less punch with signed.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Zepper</b> [ Wed Jan 08, 2014 12:58 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: sound resample methods?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">blargg wrote:</div><div class="quotecontent">The NES DACs are not signed, BTW. They actually do <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">output_dac = duty_sign ? 0 : output</tt>. And it does make an audible difference; notes have less punch with signed.</div><br /><br />From the wiki:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">0 1 1 0 0 0 0 0 (25%)</div><br /><br />I though it would generate a wave like _--_ _ _ _ _<br />Isn't that, but -_ _----- ???

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>