<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Progress Thread - Metroid-esque</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Progress Thread - Metroid-esque</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=32&amp;t=15198">http://forums.nesdev.com/viewtopic.php?f=32&amp;t=15198</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>mikejmoffitt</b> [ Mon Dec 05, 2016 9:01 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Progress Thread - Metroid-esque</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />As Windjammers has been announced for modern systems in 2017, I'm even less interested in building a clone of it. For a hackathon last weekend, I threw together a simple platforming game engine:<br /><br /><!-- m --><a class="postlink" href="https://github.com/mikejmoffitt/famiplat">https://github.com/mikejmoffitt/famiplat</a><!-- m --><br /><br /><img src="http://i.imgur.com/MRtZYp4.png" alt="Image" /> <img src="http://i.imgur.com/aI0IRUH.png" alt="Image" /><br /><br />The graphics are placeholders right now. Once I got it working to the extent it does now, I realized it would be satisfying to make a Metroid-type game.<br /><br />I've re-used the animation engine from my Windjammers clone, so getting metatiles created and having the player animated was not a problem.<br /><br />Here are my next tasks in order that I need to consider:<br /><br /><ul>* Better plan how to store nametables for rooms - NT compression? 16x16 metatiles? 32x32 metatiles? Description-style storage (like SMB)? <br />* Create an object list format for rooms<br />* Create structures representing arrangement of rooms<br />* How does the player attack? Does the player attack?<br />* What kinds of skills can the player gain, and how do they open up new areas?<br /></ul>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>mikejmoffitt</b> [ Mon Dec 05, 2016 9:05 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Progress Thread - Metroid-esque</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />CHR-RAM utilization is not too bad right now. Obviously the player is facing some serious fragmentation, but I can deal with that without too much trouble. For 12 unique animation frames, many of them larger than 16x32, I think the utilization of the space is reasonable.<br /><br /><img src="http://i.imgur.com/ecFT0nk.png" alt="Image" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>FrankenGraphics</b> [ Mon Dec 05, 2016 10:33 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Progress Thread - Metroid-esque</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I really like that sprite. It does stand out in its new environment. So, maybe athletic/acrobatic powerups? That would be cool together with avoiding enemies. Slide through/under stuff, somersault for a different trajectory, stop jump trajectory for a quick fall-down (or up?!), cliff/rope hang and pull up/let go, you can probably come up with a lot within that theme. <br /><br />If just avoiding enemies proves to be too plain (hard to know) in itself but you like it to be a feature somehow, how about that the only weapons you get are sub weapons? One at a time, and/or expendable, or timed. <br /><br />Is there a reason for the two very similiar grays?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>koitsu</b> [ Mon Dec 05, 2016 12:12 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Progress Thread - Metroid-esque</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Sprite reminds me of <a href="https://www.youtube.com/watch?v=5Xlq1p3pZAA" class="postlink">Demon Sword</a> (it's the &quot;angled&quot; running stance -- look at the legs).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>mikejmoffitt</b> [ Mon Dec 05, 2016 1:16 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Progress Thread - Metroid-esque</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">WheelInventor wrote:</div><div class="quotecontent">I really like that sprite. It does stand out in its new environment. So, maybe athletic/acrobatic powerups? That would be cool together with avoiding enemies. Slide through/under stuff, somersault for a different trajectory, stop jump trajectory for a quick fall-down (or up?!), cliff/rope hang and pull up/let go, you can probably come up with a lot within that theme. <br /><br />If just avoiding enemies proves to be too plain (hard to know) in itself but you like it to be a feature somehow, how about that the only weapons you get are sub weapons? One at a time, and/or expendable, or timed. <br /><br />Is there a reason for the two very similiar grays?</div><br /><br />Acrobatic things are definitely good choices. I have trouble justifying things like wall-jumping, sliding, or somersaulting as a powerup (because why can't a humanoid character do these things anyway??) but I would still favor including them because good gameplay &gt;&gt;&gt;&gt;&gt; story-justifiable powerups. Definitely these sorts of things add a lot to exploration, regardless. <br /><br />It would be interesting to create a good metroid-like where the character does not actually directly have a weapon. I like the idea of weapons being a product of the environment, or limited use, in support of that idea. I am presently also working on <a href="https://github.com/mikejmoffitt/LICS" class="postlink">Lyle in Cube Sector's Genesis / MD port</a>, which (up until later in the game) the player's only means of attacking are throwing chunks of the environment at enemies. <br /><br />As for the grays, I did almost all of my testing on my NES, where they were more distinguishable. In YY-CHR's palette they are distinguished too. I noticed that they are kind of crap in the emulator, but didn't bother to change it in time, in favor of more pressing things. I probably won't use much of the environment I drew for this, as it's just stuff I came up with for proof of functionality.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Mon Dec 05, 2016 1:45 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Progress Thread - Metroid-esque</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Just by eyeball, I guessed the palette in question was <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">0F 00 00 10</tt>. If they are actually distinct then one of those colors is an xD color. Column D is problematic for three reasons:<br /><ul><li>FCEUX shows $1D as dark gray, when it's actually the same voltage as $xE/$xF (except subject to emphasis, unlike $xE/$xF). This causes things drawn in $1D to be visible on an emulator but not on hardware. This discrepancy seriously confused the background artist for <em>Haunted: Halloween '85</em>. </li><li>The RGB PPU, used in Vs. System, PlayChoice, Famicom titler, Famicom TV (but not NES TV), and older NES RGB mods before the PPU's color index output mode was fully characterized, treats column $0D as all black. </li><li>Many fade routines work by subtracting multiples of $10. Hitting $0D causes some TVs to distort the image or even lose sync. </li></ul><br /><a href="https://github.com/Mikejmoffitt/famiplat/blob/master/src/main.asm" class="postlink">main.asm#sample_palette_data</a> confirmed my suspicion: the palette is <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">0F 2D 00 10</tt>. On NES, $2D is close to 30% luma, with $00 at 40% and $10 at 70%. But even though a difference of 10% in luma is clear on a good composite connection, some TVs have a coax input but no composite input. (My first guess is that 1995-2015 was the sweet spot for a guarantee of working composite input.) RF is more likely to smear fine details like this.<br /><br />So if you do use $2D, remember these caveats: It'll be black on older RGB mods, and you'll need to special-case it in your fade routine.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>mikejmoffitt</b> [ Mon Dec 05, 2016 2:05 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Progress Thread - Metroid-esque</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">Just by eyeball, I guessed the palette in question was <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">0F 00 00 10</tt>. If they are actually distinct then one of those colors is an xD color. Column D is problematic for three reasons:<br /><ul><li>FCEUX shows $1D as dark gray, when it's actually the same voltage as $xE/$xF (except subject to emphasis, unlike $xE/$xF). This causes things drawn in $1D to be visible on an emulator but not on hardware. This discrepancy seriously confused the background artist for <em>Haunted: Halloween '85</em>. </li><li>The RGB PPU, used in Vs. System, PlayChoice, Famicom titler, Famicom TV (but not NES TV), and older NES RGB mods before the PPU's color index output mode was fully characterized, treats column $0D as all black. </li><li>Many fade routines work by subtracting multiples of $10. Hitting $0D causes some TVs to distort the image or even lose sync. </li></ul><br /><a href="https://github.com/Mikejmoffitt/famiplat/blob/master/src/main.asm" class="postlink">main.asm#sample_palette_data</a> confirmed my suspicion: the palette is <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">0F 2D 00 10</tt>. On NES, $2D is close to 30% luma, with $00 at 40% and $10 at 70%. But even though a difference of 10% in luma is clear on a good composite connection, some TVs have a coax input but no composite input. (My first guess is that 1995-2015 was the sweet spot for a guarantee of working composite input.) RF is more likely to smear fine details like this.<br /><br />So if you do use $2D, remember these caveats: It'll be black on older RGB mods, and you'll need to special-case it in your fade routine.</div><br />Good notes on the palette choice. Fortunately, I have no plans on applying any automated fade routines (or maybe fade routines at all). Much of my testing was done with the NESRGB, where some palettes gave different results. I acknowledged early that the color I used was problematic, but I chose to keep it just for the sake of the hackathon demonstration (where it looked good). I'll be sure to be more prudent about palette choices going forwards.<br /><br />I have a few game design decisions as well: Do I want to have many non-scrolling 32x30 tile rooms, 64x30 two-screen H scrolling rooms, 32x60 two-screen V scrolling rooms, or longer variants? The advantages to the first three is that the room has only to be drawn once, on room entry. I know rainwarrior's Lizard uses the second approach, of small two-screen H scrolling sections, while Metroid switches mirroring schemes between areas to have flexibility with the shape of the room. Of course, one tiny advantage of the 32x30 room choice is that the player's position only needs to be 8 bits. I may change my fixed point positioning format to a 12.4 format, from the 8q8 I have now.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>mikejmoffitt</b> [ Tue Dec 06, 2016 1:35 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Progress Thread - Metroid-esque</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I thought a little more about storage. I think uncompressed nametables might actually be okay, if I use all 16 UNROM banks. <br /><br />Each nametable is 1024KB, or 4 pages. For each nametable (from here on, a <strong>room</strong>) I need to store some metadata, so the total structure for each room can be:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">* Nametable data (960 bytes)<br />* Attribute data (64 bytes)<br />* Room ID (2 bytes)<br />* Object List: for (max_objects = 30):<br />* --&gt;Object type (byte)<br />* --&gt;Object data/flags (byte)<br />* --&gt;Object X pos (byte)<br />* --&gt;Object Y pos (byte)<br />* World Map X pos (byte)<br />* World Map Y pos (byte)</div><br /><br />With this, each room is 1280 bytes. That means I can fit 25 rooms per UNROM bank, with 768 bytes to spare. So, that means I can dedicate a large chunk of UNROM banks to just storing level data. With 12 banks, I can fit 300 rooms.<br /><br />Alternatively, I could store only 28 rows of a 30 row nametable. That would make me lose the top 2 rows of tiles, but I would be able to fit an entire level structure within 1024KB, which would allow my UNROM banks to be very neatly divided (32 rooms per bank). Losing the upper 16px isn't a big deal, as many TVs overscan most of it anyway. I may go with this in the end.<br /><br />A 100% dense 20 x 15 room world map would be the max size, but many games of this type don't fill 100% of a square area. So, I think I can create a sufficiently large world this way using just uncompressed nametables. If I felt super-constrained, I could A) implement the most basic compression, or B) use UNROM_512 for 32 banks, like Battle Kid does. Bankable CHR could let me do some simple environmental animation without eating NMI time, which would be appealing.<br /><br />I may be able to forego the Room ID, but as I plan on having over 256 rooms I'd like to ensure I can access rooms without relying on a lookup table.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>FrankenGraphics</b> [ Tue Dec 06, 2016 2:46 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Progress Thread - Metroid-esque</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">while Metroid switches mirroring schemes between areas to have flexibility with the shape of the room.</div><br /><br />There's a lot of unlocked potential in the switching approach of Metroid. False corridor stops, enable/disable scroll events, switch flip flop trigs (through player positioning, events, timing). Downside: more code and testing needed.<br /><br />I think the biggest flaw with non-scrolling or h-scrolling only is how jumping from one v-level to the next may cause frustration if not carefully planned in the level design. Same goes for enemy placement, naturally. Otherwise, i can't think of anything else at the moment. It may also be easier to plan out player vs enemy interaction; someting battle kid shows.  <br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">(because why can't a humanoid character do these things anyway??)</div><br />I think this <a href="https://www.youtube.com/watch?v=qe3Lylagoog" class="postlink">metroid commercial</a> demonstrates a case of the opposite. If the acrobatic skill set is unlikely, there may not be a need for a story other than 'supernatural powerup'. But that is maybe not what you're going after. <br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">It would be interesting to create a good metroid-like where the character does not actually directly have a weapon. I like the idea of weapons being a product of the environment, or limited use, in support of that idea.</div><br /><br />For what it's worth, i really like this idea! Especially the &quot;product of the environment&quot; part. That sounds like a selling feature.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Rahsennor</b> [ Tue Dec 06, 2016 6:08 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Progress Thread - Metroid-esque</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Forgive me if I'm wrong, but I think your math is wonky.<br /><br /><div class="quotetitle">mikejmoffitt wrote:</div><div class="quotecontent">all 16 UNROM banks</div><br />UOROM has 16 banks, UNROM has 8 banks, and IIRC entries wanting to get on the compo cart must use only 4 banks.<br /><br /><div class="quotetitle">mikejmoffitt wrote:</div><div class="quotecontent">Each nametable is 1024KB, or 4 pages.</div><br />1024 bytes, not 1024 kilobytes.<br /><br /><div class="quotetitle">mikejmoffitt wrote:</div><div class="quotecontent">With this, each room is 1280 bytes. That means I can fit 25 rooms per UNROM bank, with 768 bytes to spare.</div><br />Each UNROM bank is 16K = 16384 bytes. 16384 / 1280 = 12.8 rooms per bank.<br /><br /><div class="quotetitle">mikejmoffitt wrote:</div><div class="quotecontent">Alternatively, I could store only 28 rows of a 30 row nametable. That would make me lose the top 2 rows of tiles, but I would be able to fit an entire level structure within 1024KB, which would allow my UNROM banks to be very neatly divided (32 rooms per bank).</div><br />1024 bytes, not 1024 kilobytes, and 16 rooms per bank.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>mikejmoffitt</b> [ Tue Dec 06, 2016 7:05 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Progress Thread - Metroid-esque</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />You're correct, I meant to put bytes. I suppose I mean UOROM then. The only real difference is the routing of one address line anyway. That's a bummer about the compo cart, and the bank capacity though. I think the 1024B format with UNROM_512 might be what I will go with.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>mikejmoffitt</b> [ Mon Dec 12, 2016 1:06 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Progress Thread - Metroid-esque</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I've implemented a basic RLE algorithm and made some compression tools to allow more nametables to be fit:<br /><img src="http://i.imgur.com/3hk7KOd.png" alt="Image" /><br /><br />I've played with palettes a little more, and tested my results on both my NESRGB and on the Famicom with composite. The FCEUX palette is rather garish, and I'll probably want to supply a custom one to improve testing.<br /><br />In decompressing my nametables, that means I can't just point the collision checks at the raw nametable any more, and instead I must store a decompressed copy in RAM (or re-run the RLE, which is not good for performance). Is there any reason UNROM can't have 8KB of WRAM added?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Mon Dec 12, 2016 1:14 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Progress Thread - Metroid-esque</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />No reason it <em>can't</em>, it just costs extra money for production.<br /><br />Hamtaro126 just <a href="https://sourceforge.net/p/fceultra/bugs/752/" class="postlink">successfully petitioned for FCEUX to grow support</a> to enable PRG-RAM on UNROM using a proper NES2.0 header, so.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Mon Dec 12, 2016 1:25 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Progress Thread - Metroid-esque</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Another is to decompress directly from ROM to VRAM, but keep in RAM enough information to process the collision. If solid and empty are the only collision types for a map of (say) 32x26 cells, this takes (32/8)*26 = 104 bytes of RAM. Some other games may have more collision types but restrict the geometry to 16x16 pixels per cell. This allows storing 16x13 cells in 208 bytes, as seen in <em>Super Mario Bros.</em> which caches a two-screen sliding window.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>mikejmoffitt</b> [ Mon Dec 12, 2016 3:21 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Progress Thread - Metroid-esque</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">Another is to decompress directly from ROM to VRAM, but keep in RAM enough information to process the collision. If solid and empty are the only collision types for a map of (say) 32x26 cells, this takes (32/8)*26 = 104 bytes of RAM. Some other games may have more collision types but restrict the geometry to 16x16 pixels per cell. This allows storing 16x13 cells in 208 bytes, as seen in <em>Super Mario Bros.</em> which caches a two-screen sliding window.</div><br />I'm actually <a href="https://github.com/Mikejmoffitt/famiplat/blob/master/src/bg.asm" class="postlink">decompressing straight to VRAM</a>, and shadowing the decompression to RAM just for storage. I've considered bit-packing several tiles into one as you've mentioned, but I expect I'll want a few more tile types, and I don't want to back myself into a refactoring corner. I have 8x8 geometry, so storing quad-tiles doesn't do much unfortunately. I might use one nybble per tile, to cut the space in half.<br /><br />It looks like my Everdrive cooperates with 8KB PRG RAM specified in the header (starting at $6000, as it generally does). FCEUX 2.2.3 does not like this, however. I may stick with this solution, which will especially be appealing if I decide to switch to a scrolling setup.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>