<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=10&amp;t=6998" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2012-08-26T11:04:21-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=10&amp;t=6998</id>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2012-08-26T11:04:21-07:00</updated>
<published>2012-08-26T11:04:21-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6998&amp;p=98631#p98631</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6998&amp;p=98631#p98631"/>
<title type="html"><![CDATA[Re: how to write to individual bits of a byte]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6998&amp;p=98631#p98631"><![CDATA[
And in fact, the trick is one of the first things you come across when you disassemble the Monitor ROM of the Apple II.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Sun Aug 26, 2012 11:04 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Drag]]></name></author>
<updated>2012-08-26T10:55:18-07:00</updated>
<published>2012-08-26T10:55:18-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6998&amp;p=98630#p98630</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6998&amp;p=98630#p98630"/>
<title type="html"><![CDATA[Re: how to write to individual bits of a byte]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6998&amp;p=98630#p98630"><![CDATA[
I found this a few weeks ago and thought it was pretty cool; if you want to take two bytes, A and B, and create a byte C where C has bits from A and bits from B, here's how you do it:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">LDA byteA<br />EOR byteB<br />AND #(for each bit, 1 means a bit from A, 0 means a bit from B)<br />EOR byteB</div><br /><br />This is a little better than how you'd do it otherwise:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">LDA byteA<br />AND #(the bits you want to keep)<br />STA temp<br />LDA byteB<br />AND #(the bits you want to keep)<br />ORA temp</div><br /><br />I found this trick when looking up stuff for the ZX Spectrum, and this was pretty common to do on the z80.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=21">Drag</a> — Sun Aug 26, 2012 10:55 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[LocalH]]></name></author>
<updated>2012-08-25T13:11:27-07:00</updated>
<published>2012-08-25T13:11:27-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6998&amp;p=98619#p98619</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6998&amp;p=98619#p98619"/>
<title type="html"><![CDATA[Re: how to write to individual bits of a byte]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6998&amp;p=98619#p98619"><![CDATA[
My bad, I should have known that being a C64 guy. Looks like I'm getting a little rusty <img src="http://forums.nesdev.com/images/smilies/icon_razz.gif" alt=":P" title="Razz" /><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=325">LocalH</a> — Sat Aug 25, 2012 1:11 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2012-08-25T09:39:17-07:00</updated>
<published>2012-08-25T09:39:17-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6998&amp;p=98615#p98615</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6998&amp;p=98615#p98615"/>
<title type="html"><![CDATA[Re: how to write to individual bits of a byte]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6998&amp;p=98615#p98615"><![CDATA[
BIT # works only on CMOS chips, such as those in the Lynx, TG16, Super NES, Apple IIc and IIGS, and late Apple IIe. On the original 6502, seen in Atari 2600/5200/7800, Commodore 64, Apple II/II+/III/IIe, and NES, BIT # is a 2-byte no-op.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Sat Aug 25, 2012 9:39 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[LocalH]]></name></author>
<updated>2012-08-25T08:08:40-07:00</updated>
<published>2012-08-25T08:08:40-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6998&amp;p=98612#p98612</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6998&amp;p=98612#p98612"/>
<title type="html"><![CDATA[Re: how to write to individual bits of a byte]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6998&amp;p=98612#p98612"><![CDATA[
BIT is more useful (sometimes) when the value you're testing is in A and you don't want to modify it, like this:<br /><br />LDA somevalue<br />BIT #%00100100<br />BNE somewhere<br /><br />In fact, AFAIK that's the only difference between BIT and AND - AND stores the result in A, wiping out the original value. If the result of the AND is 0 during a BIT instruction, then the Z flag is set. Also, outside of immediate addressing, BIT will also copy bit 7 into the N flag and bit 6 into the V flag, so it's an easy way to branch based on whether either bit is set.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=325">LocalH</a> — Sat Aug 25, 2012 8:08 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[thefox]]></name></author>
<updated>2012-08-24T11:30:44-07:00</updated>
<published>2012-08-24T11:30:44-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6998&amp;p=98577#p98577</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6998&amp;p=98577#p98577"/>
<title type="html"><![CDATA[Re: how to write to individual bits of a byte]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6998&amp;p=98577#p98577"><![CDATA[
<div class="quotetitle">doppelganger wrote:</div><div class="quotecontent"><br />And for my next trick, how to check individual bits of a byte that aren't bits 7 or 6 with the BIT instruction.<br /><br />lda %00100100   ;branches if either bit 5 or 2 are set<br />bit somevalue<br />bne somewhere<br /></div><br />Using BIT here doesn't really have any benefits over using AND, unless the mask (%00100100) happens to be some magic value that can be reused later in the code (and even then, the benefit is negligible).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=80">thefox</a> — Fri Aug 24, 2012 11:30 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[doppelganger]]></name></author>
<updated>2012-08-24T11:21:35-07:00</updated>
<published>2012-08-24T11:21:35-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6998&amp;p=98575#p98575</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6998&amp;p=98575#p98575"/>
<title type="html"><![CDATA[Re: how to write to individual bits of a byte]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6998&amp;p=98575#p98575"><![CDATA[
And for my next trick, how to check individual bits of a byte that aren't bits 7 or 6 with the BIT instruction.<br /><br />lda %00100100   ;branches if either bit 5 or 2 are set<br />bit somevalue<br />bne somewhere<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=119">doppelganger</a> — Fri Aug 24, 2012 11:21 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[alkex]]></name></author>
<updated>2010-10-02T09:36:56-07:00</updated>
<published>2010-10-02T09:36:56-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6998&amp;p=68040#p68040</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6998&amp;p=68040#p68040"/>
<title type="html"><![CDATA[how to write to individual bits of a byte]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6998&amp;p=68040#p68040"><![CDATA[
Thanks Doppelganger/65024U !<br /><br />Working a treat<br />Best<br /><br />Alex<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4084">alkex</a> — Sat Oct 02, 2010 9:36 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[3gengames]]></name></author>
<updated>2010-10-02T07:48:11-07:00</updated>
<published>2010-10-02T07:48:11-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6998&amp;p=68038#p68038</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6998&amp;p=68038#p68038"/>
<title type="html"><![CDATA[how to write to individual bits of a byte]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6998&amp;p=68038#p68038"><![CDATA[
^ Good explanation!<br /><br /><br />And here's a link on how to read the controllers. I'd say the easiest way to read them would be to shift the $4016 register after resetting it, then shift a, after 7 more times, A will have the controllers status inside it then you just store it in RAM and RTS to your main program, assuming your controller read is a subroutine, Since it should be.<br /><br /><br /><br />Here's a site that has the buttons for each bit value. <br /><br /><a href="http://fms.komkon.org/EMUL8/NES.html#LABI" class="postlink">http://fms.komkon.org/EMUL8/NES.html#LABI</a><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4311">3gengames</a> — Sat Oct 02, 2010 7:48 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[doppelganger]]></name></author>
<updated>2010-10-02T04:08:55-07:00</updated>
<published>2010-10-02T04:08:55-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6998&amp;p=68032#p68032</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6998&amp;p=68032#p68032"/>
<title type="html"><![CDATA[how to write to individual bits of a byte]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6998&amp;p=68032#p68032"><![CDATA[
To set bits, use ORA:<br /><br />lda somevalue<br />ora #%00100100 ;sets bits 5 and 2, leaves the rest alone<br />sta somevalue<br /><br />To clear bits, use AND:<br /><br />lda somevalue<br />and #%11011011 ;clears bits 5 and 2, leaves the rest alone<br />sta somevalue<br /><br />To toggle bits, use EOR:<br /><br />lda somevalue<br />eor #%00100100 ;clears bits 5 and 2 if they were set, and vice versa<br />sta somevalue ;and leaves the rest alone<br /><br />Alternatively, you could LDA the bit and AND/ORA/EOR the memory location.  It's up to you.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=119">doppelganger</a> — Sat Oct 02, 2010 4:08 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[alkex]]></name></author>
<updated>2010-10-02T03:45:42-07:00</updated>
<published>2010-10-02T03:45:42-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6998&amp;p=68030#p68030</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6998&amp;p=68030#p68030"/>
<title type="html"><![CDATA[how to write to individual bits of a byte]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6998&amp;p=68030#p68030"><![CDATA[
Hi!<br /><br />I'm trying to use my arduino to send bytes to the nes through the joypad port.<br /><br />how would I write the button states to an 8 bit value on each strobe?<br /><br />I'm basically trying to perform the nes asm equivalent of arduino's bitWrite command.<br /><br />Sorry if it's a stupid question, thanks in advance!<br /><br />Alex<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4084">alkex</a> — Sat Oct 02, 2010 3:45 am</p><hr />
]]></content>
</entry>
</feed>