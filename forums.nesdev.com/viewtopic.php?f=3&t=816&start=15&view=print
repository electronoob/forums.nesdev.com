<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - BRK flag alterations</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">BRK flag alterations</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=3&amp;t=816">http://forums.nesdev.com/viewtopic.php?f=3&amp;t=816</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>2</strong> of <strong>2</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Mon Dec 12, 2005 2:22 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">blargg wrote:</div><div class="quotecontent">The way an IRQ handler determines whether the cause was an IRQ of BRK is by examining bit 4 of the byte at the top of the stack (which also contains the saved status flags in other bits).</div>
<br />Like this?
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">irqvector:<br />&nbsp; pha<br />&nbsp; txa<br />&nbsp; pha&nbsp; ; stack state after: SP | X | A | P | LR_low | LR_high | ...<br />&nbsp; tsx<br />&nbsp; lda #$10<br />&nbsp; and $103,x<br />&nbsp; beq irqhandler<br />&nbsp; lda $104,x<br />&nbsp; sta zp_lr<br />&nbsp; lda $105,x<br />&nbsp; sta zp_lr+1<br />&nbsp; tya<br />&nbsp; pha&nbsp; ; stack state after: SP | Y | X | A | P | LR_low | LR_high | ...<br />&nbsp; ldy #0<br />&nbsp; lda &#40;zp_lr&#41;,y<br />&nbsp; asl a<br />&nbsp; tax<br />&nbsp; jmp &#40;brktable,x&#41;<br /><br />&nbsp; ; Each entry in brktable is responsible for pulling arguments that<br />&nbsp; ; were originally passed in Y, X, A, and P, and then doing RTS.<br /><br />irqhandler:<br />&nbsp; ; &#91;omitted IRQ handler code&#93;<br />&nbsp; pla<br />&nbsp; tax<br />&nbsp; pla<br />&nbsp; rti<br /></div>
<br />But then I don't see the point of BRK if it means wasting all this time to save one byte of code.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Mon Dec 12, 2005 9:11 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Ugh, I get your point. I guess BRK isn't much use beyond invoking a debugger by changing a single byte.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>hap</b> [ Tue Dec 13, 2005 5:56 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">WedNESday wrote:</div><div class="quotecontent">Does anyone know of any games that actually use the BRK opcode? I can't imagine so, as the vector is the same as the sound's, unless you wanted to prematurely process sound code...</div>
<br />
<br />Dragon Warrior 1 uses it, I don't know of any other games that do, but I'm sure there are a few.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Guest</b> [ Tue Dec 13, 2005 10:22 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />If you don't implement IRQs in any way (as is the case with most pre-MMC3 games), then BRK can be useful as a subroutine call.  The BRK handler wouldn't have to check the B flag, nor would it necessarily need to preserve registers (particularly if they are parameters).
<br />
<br />I noticed that some games that don't use IRQs set the IRQ vector to match the RESET vector.  In this scenario, should a bug cause the PC to get corrupted, there's a chance that the game would reset, particularly if the PC ends up in RAM that was cleared to zero and since unused.  I know that some newer architectures (such as PowerPC) will always consider opcode 0 as illegal and trigger an exception, since a PC pointed to unused memory often causes a zero to be read for the next instruction.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Tue Dec 13, 2005 2:21 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I know that some newer architectures (such as PowerPC) will always consider opcode 0 as illegal and trigger an exception, since a PC pointed to unused memory often causes a zero to be read for the next instruction.</div>
<br />
<br />Modern architectures offer both an MMU to mark unmapped pages as invalid, and bus signals to signal an error for the memory transaction. Taking an exception for undefined instructions is to allow detection of erroneous execution, and emulation of unsupported instructions and modes (for example, unaligned access support and older complex instructions are sometimes removed from the silicion and put in the operating system instead).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Tue Dec 13, 2005 8:43 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Anonymous wrote:</div><div class="quotecontent">BRK can be useful as a subroutine call.  The BRK handler wouldn't have to check the B flag, nor would it necessarily need to preserve registers (particularly if they are parameters).</div>
<br />Wouldn't it still need to use A, X, and Y in order to get the syscall number from the byte after the BRK opcode?
<br />
<br />Same code with IRQ support deleted and with an optimization to use the rare (d,x) mode:
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">brkvector:<br />&nbsp; ; First copy the return address to the zero page, giving a<br />&nbsp; ; pointer to the syscall number &#40;e.g. $69 in BRK $69&#41;.<br />&nbsp; pha<br />&nbsp; txa<br />&nbsp; pha&nbsp; ; stack state after: SP | X | A | P | LR_low | LR_high | ...<br />&nbsp; tsx<br />&nbsp; lda $104,x<br />&nbsp; sta zp_lr<br />&nbsp; lda $105,x<br />&nbsp; sta zp_lr+1<br /><br />&nbsp; ; Now read the syscall number.<br />&nbsp; ldx #0<br />&nbsp; lda &#40;zp_lr,x&#41;<br /><br />&nbsp; ; Look up the syscall in the jump table.<br />&nbsp; asl a<br />&nbsp; tax<br />&nbsp; jmp &#40;brktable,x&#41;<br /><br />&nbsp; ; Each entry in brktable is responsible for pulling arguments that<br />&nbsp; ; were originally passed in X, A, and P, and then doing RTS.<br />&nbsp; ; This new BRK handler does not modify the Y register.<br />&nbsp; ; This code is NOT reentrant because there's a race condition on<br />&nbsp; ; zp_lr. <br /></div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Quietust</b> [ Tue Dec 13, 2005 8:54 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />There's just one problem: there is no "JMP (addr,X)" instruction on the 6502, so you'll have to load the address manually.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Tue Dec 13, 2005 9:34 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />diff:
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">-&nbsp; jmp &#40;brktable,x&#41;<br />+&nbsp; lda brktable,x<br />+&nbsp; sta zp_lr<br />+&nbsp; lda brktable+1,x<br />+&nbsp; sta zp_lr+1<br />+&nbsp; jmp &#40;zp_lr&#41;</div>
<br />Of course it becomes an order of magnitude simpler in the degenerate case where the syscall number does not matter (BRK $00 is the same as BRK $01 is the same as BRK $FF), but how is that useful?

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>2</strong> of <strong>2</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>