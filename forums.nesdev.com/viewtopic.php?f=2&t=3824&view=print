<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Elapsed clock timer technique</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Elapsed clock timer technique</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=3824">http://forums.nesdev.com/viewtopic.php?f=2&amp;t=3824</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Mon Jan 07, 2008 1:36 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Elapsed clock timer technique</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I've finally gotten the ultimate clock timing code working on the NES. With it, you can find out how many clocks a piece of code took, only executing it <em>once</em>. It uses the DMC as a timebase, and can measure from 0 to around 3380 clocks. <a href="http://h1.ripway.com/blargg/temp/nes_code_timer.zip" class="postlink">nes_code_timer.zip</a> (ca65 source only)
<br />
<br />For example, this measures how long sprite DMA takes:
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">jsr time_code_begin<br />lda #1<br />sta $4014<br />jsr time_code_end<br />jsr print_dec_xa&nbsp; &nbsp; &nbsp;; prints 520</div><br />I've found some interesting things with it:<br /><br />* Sprite DMA takes 513/514 clocks, depending on whether it's started on an even or odd clock.<br /><br />* DMC DMA read normally takes 4 clocks, but only 3 if a memory write is occurring at a critical moment (the write probably cuts the DMA read short).<br /><br />* Starting a DMC sample can add 3 or 4 clocks if the sample byte needs to be read immediately. It seems to depend on whether the write is on an even or odd clock.<br /><br />It's also a convenient way to time a short routine (assuming you can quickly upload new code to your NES, that is). Don't expect it to work on emulators yet, as it probably depends on some aspects of the DMC not yet fully documented.<br /><br />The timing technique is fairly simple. It is composed of two parts: synchronization and elapsed time determination.<br /><br />Synchronization: Let's say there's a digital clock that only shows minutes (no seconds), and you want to be looking at it right when the minutes change, but you can only look at it for a second at a time, and must wait at least 10 seconds between checks. How do you efficiently arrange it so you're looking at it the moment the minutes change? First, make a note of the current time, then check it every 10 seconds until the time has changed sometime between checks. At that point, begin checking it every 59 seconds. Within ten minutes you will be observing it the moment the minutes change.<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">Check&nbsp; &nbsp;------C----------C----------C----------C<br />Minutes ---M-----------M-----------M-----------M</div><br /><br />Elapsed time: Now that you looked at the clock the moment the minutes changed, you can go do some short task that takes under a minute, then come back to the clock and determine how long the task took, to an accuracy of one second, even though you can only look at the clock no more often than once every 10 seconds. How? Check the clock once every 59 seconds until the minutes change as you're watching. The number of times you check is the number of seconds the task took.<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">Check&nbsp; &nbsp;-------C----------C----------C----------C----------C<br />Minutes ---M-----------M-----------M-----------M-----------M</div>
<br />
<br />The key concept here is that even though we can't check every second, we can effectively check every second by checking every 59 seconds, since the 59th second is equivalent to the previous second, relative to a change in minutes.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>FentonCole</b> [ Tue Jan 08, 2008 2:16 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Elapsed clock timer technique</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Interesting discoveries. A few questions just to make 100% sure I'm on the same page.
<br />
<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Sprite DMA takes 513/514 clocks, depending on whether it's started on an even or odd clock.</div><br />Would that be 514 clocks if the $4014 write-cycle is on an odd clock, and the usual 513 clocks otherwise?<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">* DMC DMA read normally takes 4 clocks, but only 3 if a memory write is occurring at a critical moment (the write probably cuts the DMA read short).</div><br />Any idea on which clock(s) are the deciding factor, or is it too early to say?<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">* Starting a DMC sample can add 3 or 4 clocks if the sample byte needs to be read immediately. It seems to depend on whether the write is on an even or odd clock.</div>
<br />So a write to $4015 that turns ON an unbuffered DMC channel will execute for at least 6 clocks, meaning 3/4 clocks for some preparation work and 3/4 clocks for the actual DMA? Or am I misunderstanding and these clocks are just the result of a possible DMA occuring right away?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Zepper</b> [ Tue Jan 08, 2008 3:14 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Would that be 514 clocks if the $4014 write-cycle is on an odd clock, and the usual 513 clocks otherwise?</div>
<br />
<br />I'm not blargg, but for my best, 512 cycles to transfer data, plus 1 cycle. An extra cycle is added if we're on an odd cycle.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Celius</b> [ Wed Jan 09, 2008 12:09 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Wow! This is a pretty clever idea!
<br />
<br />Say a routine takes 12 seconds. At the very moment you're done with that routine, check the clock. 59 seconds later, check it again, and keep doing so every 59 seconds until the clock changes. It will change after 12 checks:
<br />
<br />12 + 59 = 11
<br />11 + 59 = 10
<br />10 + 59 = 9
<br />...
<br />1 + 59 = 0
<br />
<br />Is this what you're describing? But I am confused about one thing: You say check the clock every 59 seconds, and only look for a second. Wouldn't that actually make the durations each 1 minute (59 + one second = 60), and because of that you'd be checking forever?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Wed Jan 09, 2008 3:34 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Would that be 514 clocks if the $4014 write-cycle is on an odd clock, and the usual 513 clocks otherwise?</div><br />That's what it seems. Basically I get one timing if I have a delay of N before it, the other timing if I increase that to N+1. The question is, what defines even and odd?<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Quote:<br />* DMC DMA read normally takes 4 clocks, but only 3 if a memory write is occurring at a critical moment (the write probably cuts the DMA read short).<br />Any idea on which clock(s) are the deciding factor, or is it too early to say?</div><br />Not sure yet. I think it's only one clock of the four, not just having the CPU write fall on any of them. Don't take any of the findings as certain, just some interesting preliminary findings.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Say a routine takes 12 seconds. At the very moment you're done with that routine, check the clock. 59 seconds later, check it again, and keep doing so every 59 seconds until the clock changes. It will change after 12 checks: [...] Is this what you're describing?</div><br />Yes. I guess I left out the most important thing in my description: the motivation for it. If the CPU could check something every clock, then it could just wait until some periodic event occurred, run the code to be timed, then see how many clocks until the event occurs again, and subtract that from its period. But the CPU can only check every 7 clocks at best (load absolute, branch), so this alternate approach is necessary.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">You say check the clock every 59 seconds, and only look for a second. Wouldn't that actually make the durations each 1 minute (59 + one second = 60), and because of that you'd be checking forever?</div>
<br />"Do X every T" means that the time between the beginnings of Xn and Xn+1 is T, not that the time between the end of Xn and the beginning of Xn+1 is T, though that's what the computer is told in this case (delay loop between checks, which takes into account the time required to check).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Zepper</b> [ Thu Jan 10, 2008 4:11 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Well, the pAPU has an even/odd issue related with cycle counting. Perhaps there's a common even/odd, since they're on 401X..? Just guessing...

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Thu Jan 10, 2008 8:01 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Well, the pAPU has an even/odd issue related with cycle counting. Perhaps there's a common even/odd, since they're on 401X..? Just guessing...</div>
<br />The more I think about this, the more likely it seems. The DMC inserts wait states while it accesses memory, so it would make sense to use the same logic for sprite DMA, and put in the APU's I/O space. The even/odd timing for $4014 was always synchronized the same with the DMC timer as well. So, what happens when sprite DMA and DMC DMA occur at the same time... apparently it only adds 2 clocks in this case, rather than the usual 4. When I do more detailed testing, I'll probably find that in these cases the DMC DMA is getting a junk byte.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Sun Feb 24, 2008 6:50 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I just wrote another timing routine which uses the APU length counters as a timebase. This allows timing a piece of code that takes up to around 2 seconds, to an accuracy of 16 clocks. If anyone's interested I'll post the code. I figure it could be useful for timing routines, finding the minimum, average, and maximum time taken.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>dvdmth</b> [ Sun Feb 24, 2008 10:12 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />My understanding about how DMA units work (using my limited SNES knowledge as a basis) is as follows:
<br />
<br />1. Halt the CPU
<br />2. Synchronize with the DMA unit's own clock
<br />3. Perform the transfer
<br />4. Synchronize with the CPU's clock
<br />5. Allow the CPU to resume
<br />
<br />Suppose the DMA unit runs at 1/2 the CPU clock speed (that is, 1 DMA clock = 2 CPU clocks).  Also, suppose the beginning of each DMA cycle occurs halfway into a CPU cycle:
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">+---+---+---+---+---+---+<br />|&nbsp; &nbsp;|&nbsp; &nbsp;|&nbsp; &nbsp;|&nbsp; &nbsp;|&nbsp; &nbsp;|&nbsp; &nbsp;| &lt;-- CPU clocks<br />+-+-+---+-+-+---+-+-+---+-+<br />&nbsp; |&nbsp; &nbsp; &nbsp; &nbsp;|&nbsp; &nbsp; &nbsp; &nbsp;|&nbsp; &nbsp; &nbsp; &nbsp;| &lt;-- DMA clocks<br />&nbsp; +-------+-------+-------+</div>
<br />When a DMA event occurs in this scenario, the CPU must first be halted.  However, it halts in the middle of a DMA cycle (either 1/4 or 3/4 into the cycle).  Thus, the DMA unit must wait until the cycle finishes.  This means either 1/2 a CPU cycle elapses, or 1-1/2 cycles, depending on which CPU cycle the event occurred on.  The DMA now performs its job, then when it finishes it waits until the next CPU cycle finishes before resuming.  This delay is always 1/2 a CPU cycle, regardless of when the DMA starts/ends.  Thus, the total latency (not including the actual DMA transfer time) is either 0.5 + 0.5 = 1 CPU cycle, or 1.5 + 0.5 = 2 CPU cycles.
<br />
<br />On the NES, memory accesses occur when M2 is high.  As I understand, this corresponds to the second half of a CPU cycle.  Thus, if the DMA unit works as shown above, there would be two memory access periods per DMA cycle - one at the very beginning, and one at the halfway point of the cycle.  This might explain why bunnyboy had problems with his PowerPak interfering with sprite DMA - if the memory read occurred too early in the DMA cycle, the address lines might've been unstable, thus causing the PowerPak to get confused.
<br />
<br />Just a thought.  No idea how accurate this might be.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>