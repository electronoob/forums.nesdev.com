<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - global x local (C programming)</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">global x local (C programming)</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=5&amp;t=4132">http://forums.nesdev.com/viewtopic.php?f=5&amp;t=4132</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Zepper</b> [ Mon May 26, 2008 7:18 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>global x local (C programming)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />- Look...
<br />
<br />CASE 1
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">static unsigned char *romdata;<br /><br />int main&#40;&#41;<br />&#123;<br />romdata = malloc&#40;0x4000&#41;;<br />&#125;<br /><br />//another.c<br /><br />static unsigned char *local_data;<br /><br />int init_code&#40;unsigned char *data&#41;<br />&#123;<br />local_data = data;<br />&#125;<br /><br />int some_function&#40;int offset, unsigned char value&#41;<br />&#123;<br />local_data&#91;offset&#93; = value;<br />&#125;</div><br /><br />CASE 2<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">unsigned char *romdata;<br /><br />int main&#40;&#41;<br />&#123;<br />romdata = malloc&#40;0x4000&#41;;<br />&#125;<br /><br />//another.c<br /><br />extern unsigned char *romdata;<br /><br />int some_function&#40;int offset, unsigned char value&#41;<br />&#123;<br />romdata&#91;offset&#93; = value;<br />&#125;</div>
<br />
<br />- Which one should I use?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dwedit</b> [ Mon May 26, 2008 8:06 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />File scope may or may not matter.  Check the output asm code.  If it loads the address of the global variable in both versions, then there's no difference between them.
<br />
<br />However, inside a function, local vs global matters.  A C compiler may decide to re-read a global variable each time you fetch it, whereas making a local copy tells the compiler not to bother trying to refetch it.  Probably makes a much bigger difference on ARM than on X86 though.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Mon May 26, 2008 11:08 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Fx3 wrote:</div><div class="quotecontent">Which one should I use?</div><br />The first by far, which doesn't share global data! Sharing globals makes code harder to understand, since it increases the ways one function could affect another without any obvious clue in the source code <em>where it's happening</em>. Function calls to things like your init_code() make the point of sharing clear; after that call, any changes/uses of romdata cannot directly affect local_data, unlike in the second.<br /><br />Efficiency-wise, they probably perform in a similar way, since both versions of some_function() use a non-local variable to access the ROM data. The first could actually perform better, since the variables are static rather than extern, allowing the compiler to optimize how they're stored since they are private to the source file and thus allow full analysis of every use of them.<br /><br /><div class="quotetitle">Dwedit wrote:</div><div class="quotecontent">However, inside a function, local vs global matters. A C compiler may decide to re-read a global variable each time you fetch it, whereas making a local copy tells the compiler not to bother trying to refetch it.</div>
<br />Dwedit is hinting at a function like this:
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">void uses_romdata_many_times&#40;&#41;<br />&#123;<br />&nbsp; &nbsp; while &#40; ... &#41;<br />&nbsp; &nbsp; &#123;<br />&nbsp; &nbsp; &nbsp; &nbsp; int addr = foo&#40;&#41;;<br />&nbsp; &nbsp; &nbsp; &nbsp; bar&#40; romdata &#91;addr&#93; &#41;<br />&nbsp; &nbsp; &#125;<br />&#125;</div><br />Here, the compiler can't tell whether foo() or bar() modify the romdata pointer itself. That is, for all it knows foo() does the following, which means it must reload the romdata pointer each time through the loop:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">void foo&#40;&#41;<br />&#123;<br />&nbsp; &nbsp; romdata = romdata + 1;<br />&#125;</div><br />If you make a local copy of romdata, the compiler can examine all uses of the local and see that the functions never modify it (since it's local and they don't have its address), allowing it to be kept in a register. Even if it can't be kept in a register, it can still be better since it's accessed off the stack pointer rather than a pointer to globals, which uses an extra register on most machines.<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">void uses_romdata_many_times&#40;&#41;<br />&#123;<br />&nbsp; &nbsp; unsigned char* romdata_copy = romdata;<br />&nbsp; &nbsp; while &#40; ... &#41;<br />&nbsp; &nbsp; &#123;<br />&nbsp; &nbsp; &nbsp; &nbsp; int addr = foo&#40;&#41;;<br />&nbsp; &nbsp; &nbsp; &nbsp; bar&#40; romdata_copy &#91;addr&#93; &#41;<br />&nbsp; &nbsp; &#125;<br />&#125;</div>
<br />The best way to become fluent in these kinds of optimizations is to first learn how to use your compiler's performance profiler to find hotspots, then learn how to disassemble and read the output to find where things like this are happening.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>