<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - How do you separate out your asm files?</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">How do you separate out your asm files?</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=11021">http://forums.nesdev.com/viewtopic.php?f=2&amp;t=11021</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>mpaul</b> [ Sun Feb 16, 2014 7:37 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>How do you separate out your asm files?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I attempted to search this board for the answer before posting a new question, but couldn't find my answer... not sure if I just suck at searching or I'm searching the wrong term...<br /><br />I'm just looking for a way to use a separate asm file in my project. I find myself copy/pasting some code that I use to read a controller all the time. Also, can this separate asm file have variables as well?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sun Feb 16, 2014 7:42 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: How do you separate out your asm files?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />NESASM, ASM6, or ca65? If ca65, <a href="http://forums.nesdev.com/viewtopic.php?f=22&amp;t=7991" class="postlink">my project template</a> shows an example of how to make variables and subroutines from one translation unit (.s file) visible in another translation unit.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>mpaul</b> [ Sun Feb 16, 2014 7:50 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: How do you separate out your asm files?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Apologies, I didn't know there was a difference. I use NESASM3 (I found it online on some tutorial site). I thought at the end of the day though you still use the same asm files?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>ccovell</b> [ Sun Feb 16, 2014 8:17 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: How do you separate out your asm files?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Once you get enough different parts to your program and different controller actions based on the state/mode your program is in, you should start using jump tables for controller code rather than a long compare chain.<br /><br />eg:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">mode1: .dw Md1ContU, Md1ContD, Md1ContL, Md1ContR, Md1ContSel, Md1ContSta, Md1ContA, Md1ContB<br />mode2: .dw Md2ContU, Md2ContD, Md2ContL, Md2ContR, DoNothing, Md2ContSta, Md2ContA, Md2ContB<br />mode3: .dw DoNothing, DoNothing, DoNothing, DoNothing, Md3ContSel, Md3ContSta, Md3ContA, Md3ContB<br />...<br /></div><br /><br />You know, if mode1 is your main game, mode 2 a weapons menu, mode 3 the title screen, etc.<br /><br />You'll have to figure out how to combine the mode &amp; controller state into an offset that you can put into X, read the address into a variable, then do an indirect jump into that variable.  But this does save code listing space.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>zzo38</b> [ Sun Feb 16, 2014 10:10 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: How do you separate out your asm files?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">mpaul wrote:</div><div class="quotecontent">Apologies, I didn't know there was a difference. I use NESASM3 (I found it online on some tutorial site). I thought at the end of the day though you still use the same asm files?</div>Since I work with NESASM, I understand what is done. If you want to put things in separate files, you will include all such files into one file by using the INCLUDE command. You can also use macros, if that helps.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Sun Feb 16, 2014 10:23 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: How do you separate out your asm files?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">ccovell wrote:</div><div class="quotecontent"><div class="codetitle"><b>Code:</b></div><div class="codecontent">mode1: .dw Md1ContU, Md1ContD, Md1ContL, Md1ContR, Md1ContSel, Md1ContSta, Md1ContA, Md1ContB<br />mode2: .dw Md2ContU, Md2ContD, Md2ContL, Md2ContR, DoNothing, Md2ContSta, Md2ContA, Md2ContB<br />mode3: .dw DoNothing, DoNothing, DoNothing, DoNothing, Md3ContSel, Md3ContSta, Md3ContA, Md3ContB<br />...<br /></div></div><br />Really? I don't see this working very well for games. One reason being that games often need to detect 2 kinds of button presses: buttons that are currently pressed (used for walking, ducking, etc.) and buttons that have just been pressed (used for shooting, jumping, navigating menus and other things that should be triggered just once no matter how long the button is kept down). With the jump table method you'd have to tell them apart inside the routine itself (or create 8 more handlers per game mode), and you'd be constantly jumping to the shoot button handler just to verify that it was not pressed this frame and you shouldn't do anything.<br /><br />Another problem is that depending on what's happening you have to prioritize the actions. For example, if you can't duck while jumping, the handlers would have to (again) explicitly check the current game state to decide whether the action assigned to that button should actually be taken. If you detected the jump beforehand, you could completely skip the ducking code. Checking a bunch of game state variables inside each handler seems counter-productive and wasteful IMO.<br /><br />I prefer to handle my actions in the sequence that is most appropriate at the time (while a jump table would always result in the buttons being processed in the same order) so I can prioritize things and skip unnecessary steps. While coding the engine, I just think of things like &quot;now would be the ideal time to start a jump, because I haven't moved the player horizontally yet&quot;, so that's when I'll check the jump button and initialize the jump if it's pressed. Then, when the time to move the player horizontally comes, I'll know that the movement is happening in the air and not on the ground. If the order in which the buttons are handled was hardcoded, you wouldn't be able to prioritize the actions like this, and would sometimes start actions you shouldn't. Each action has its ideal time to be performed because of how the state of your game world is progressively updated.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>