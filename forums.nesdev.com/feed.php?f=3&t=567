<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="https://forums.nesdev.com/feed.php?f=3&amp;t=567" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="https://forums.nesdev.com/index.php" />
<updated>2016-01-13T05:55:50-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>https://forums.nesdev.com/feed.php?f=3&amp;t=567</id>
<entry>
<author><name><![CDATA[Zepper]]></name></author>
<updated>2016-01-13T05:55:50-07:00</updated>
<published>2016-01-13T05:55:50-07:00</published>
<id>https://forums.nesdev.com/viewtopic.php?t=567&amp;p=162458#p162458</id>
<link href="https://forums.nesdev.com/viewtopic.php?t=567&amp;p=162458#p162458"/>
<title type="html"><![CDATA[Re: A few NES PPU test ROMs]]></title>

<content type="html" xml:base="https://forums.nesdev.com/viewtopic.php?t=567&amp;p=162458#p162458"><![CDATA[
<div class="quotetitle">oRBIT2002 wrote:</div><div class="quotecontent"><br />The link for the PPU-tests blargg_ppu_tests.zip (found in the first entry in this thread) doesn't seem to be working anymore. Anyone got these files?<br /></div><br /><br />Google it.  <img src="https://forums.nesdev.com/images/smilies/icon_mrgreen.gif" alt=":mrgreen:" title="Mr. Green" /> <br /><!-- m --><a class="postlink" href="http://blargg.8bitalley.com/nes-tests/">http://blargg.8bitalley.com/nes-tests/</a><!-- m --><p>Statistics: Posted by <a href="https://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=39">Zepper</a> — Wed Jan 13, 2016 5:55 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[oRBIT2002]]></name></author>
<updated>2016-01-13T03:11:09-07:00</updated>
<published>2016-01-13T03:11:09-07:00</published>
<id>https://forums.nesdev.com/viewtopic.php?t=567&amp;p=162454#p162454</id>
<link href="https://forums.nesdev.com/viewtopic.php?t=567&amp;p=162454#p162454"/>
<title type="html"><![CDATA[Re: A few NES PPU test ROMs]]></title>

<content type="html" xml:base="https://forums.nesdev.com/viewtopic.php?t=567&amp;p=162454#p162454"><![CDATA[
The link for the PPU-tests blargg_ppu_tests.zip (found in the first entry in this thread) doesn't seem to be working anymore. Anyone got these files?<p>Statistics: Posted by <a href="https://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=353">oRBIT2002</a> — Wed Jan 13, 2016 3:11 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[breathermachine]]></name></author>
<updated>2015-10-22T05:22:10-07:00</updated>
<published>2015-10-22T05:22:10-07:00</published>
<id>https://forums.nesdev.com/viewtopic.php?t=567&amp;p=157566#p157566</id>
<link href="https://forums.nesdev.com/viewtopic.php?t=567&amp;p=157566#p157566"/>
<title type="html"><![CDATA[Re: A few NES PPU test ROMs]]></title>

<content type="html" xml:base="https://forums.nesdev.com/viewtopic.php?t=567&amp;p=157566#p157566"><![CDATA[
Thanks for the reply tokumaru!<br /><br />Thanks for the info about the mirroring. I already have some of those masks already implemented in other parts of my emulator (ex: Using $E7FF to perform mirroring for CPU addresses in $0000-$1FFF range). Saves a lot of unnecessary writes (I used to have code that writes to all mirrored locations)<br /><br />I was just stuck with this &quot;mirrored nametable behind the palette&quot; thing. <img src="https://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" /><p>Statistics: Posted by <a href="https://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=7263">breathermachine</a> — Thu Oct 22, 2015 5:22 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2015-10-22T05:14:53-07:00</updated>
<published>2015-10-22T05:14:53-07:00</published>
<id>https://forums.nesdev.com/viewtopic.php?t=567&amp;p=157565#p157565</id>
<link href="https://forums.nesdev.com/viewtopic.php?t=567&amp;p=157565#p157565"/>
<title type="html"><![CDATA[Re: A few NES PPU test ROMs]]></title>

<content type="html" xml:base="https://forums.nesdev.com/viewtopic.php?t=567&amp;p=157565#p157565"><![CDATA[
Mirroring is not about subtraction, but about clearing bits to make it seem like they're being ignored (which is what happens on hardware). The range $2000-3FFF (8KB) is dedicated to name/attribute tables, but the PPU can work with 4KB worth of name/attribute tables at most, so the same 4KB is visible twice in that 8KB window. That happens because the memory chip where the name/attribute tables are simply ignores bit 12 of the VRAM address, so it can't distinguish between ranges $2000-$2FFF and $3000-$FFFF. Look at these 2 addresses in binary form:<br /><br />$23C0 = %10001111000000<br />$33C0 = %11001111000000<br /><br />The only difference is bit 12, but since that's ignored, the PPU will access the same memory when either of these addresses is used. Your fix of subtracting $1000 worked because the end result is the same in this case, but conceptually, mirroring is a result of bits being ignored, so it would be more accurate for you to clear that bit (i.e. address = address &amp; 0xefff;) rather than subtract $1000.<br /><br />Note that I'm discussing only the underlying NT/AT fetches, the last 256 bytes of $2000-$3FFF are obviously used to read the palette and override what would otherwise be returned by the $2007 read.<p>Statistics: Posted by <a href="https://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Thu Oct 22, 2015 5:14 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[breathermachine]]></name></author>
<updated>2015-10-22T04:43:21-07:00</updated>
<published>2015-10-22T04:43:21-07:00</published>
<id>https://forums.nesdev.com/viewtopic.php?t=567&amp;p=157563#p157563</id>
<link href="https://forums.nesdev.com/viewtopic.php?t=567&amp;p=157563#p157563"/>
<title type="html"><![CDATA[Re: A few NES PPU test ROMs]]></title>

<content type="html" xml:base="https://forums.nesdev.com/viewtopic.php?t=567&amp;p=157563#p157563"><![CDATA[
Okay I was able to make the test pass by subtracting the palette address by $1000 and then applying nametable mirroring to the subtracted addres. Thank you for your help!<p>Statistics: Posted by <a href="https://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=7263">breathermachine</a> — Thu Oct 22, 2015 4:43 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[breathermachine]]></name></author>
<updated>2015-10-22T04:21:54-07:00</updated>
<published>2015-10-22T04:21:54-07:00</published>
<id>https://forums.nesdev.com/viewtopic.php?t=567&amp;p=157562#p157562</id>
<link href="https://forums.nesdev.com/viewtopic.php?t=567&amp;p=157562#p157562"/>
<title type="html"><![CDATA[Re: A few NES PPU test ROMs]]></title>

<content type="html" xml:base="https://forums.nesdev.com/viewtopic.php?t=567&amp;p=157562#p157562"><![CDATA[
Thank you for your reply thefox.<br /><br />Okay so the palette value doesn't go into the buffer, instead, the value from the mirrored nametable that is &quot;behind&quot; the palette. My question is, how exactly is this mirrored nametable address computed from the palette address?<br /><br />Is it just palette address - $1000 = mirrored nametable address?<br />Or does nametable mirroring have an effect?<p>Statistics: Posted by <a href="https://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=7263">breathermachine</a> — Thu Oct 22, 2015 4:21 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[thefox]]></name></author>
<updated>2015-10-22T03:46:27-07:00</updated>
<published>2015-10-22T03:46:27-07:00</published>
<id>https://forums.nesdev.com/viewtopic.php?t=567&amp;p=157561#p157561</id>
<link href="https://forums.nesdev.com/viewtopic.php?t=567&amp;p=157561#p157561"/>
<title type="html"><![CDATA[Re: A few NES PPU test ROMs]]></title>

<content type="html" xml:base="https://forums.nesdev.com/viewtopic.php?t=567&amp;p=157561#p157561"><![CDATA[
<div class="quotetitle">breathermachine wrote:</div><div class="quotecontent"><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">      <br />      lda   $2007       ; fills buffer with VRAM hidden by palette <br /></div><br /></div><br />That is the key. The palette value doesn't go in the buffer, instead the buffer receives the value from the nametable mirror that is &quot;behind&quot; the palette. What happens is that PPU is still doing the nametable access like it normally would, but internally overrides the returned value with the value from the palette. So the palette value doesn't get buffered.<p>Statistics: Posted by <a href="https://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=80">thefox</a> — Thu Oct 22, 2015 3:46 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[breathermachine]]></name></author>
<updated>2015-10-21T22:39:47-07:00</updated>
<published>2015-10-21T22:39:47-07:00</published>
<id>https://forums.nesdev.com/viewtopic.php?t=567&amp;p=157559#p157559</id>
<link href="https://forums.nesdev.com/viewtopic.php?t=567&amp;p=157559#p157559"/>
<title type="html"><![CDATA[Re: A few NES PPU test ROMs]]></title>

<content type="html" xml:base="https://forums.nesdev.com/viewtopic.php?t=567&amp;p=157559#p157559"><![CDATA[
Hello,<br /><br />It's my first time here in the forums and it has provided a lot of help for us aspiring emulator developers.<br /><br />Currently, my emulator's failing on Blargg's vram_test with an error code of #6 (Palette read should also read VRAM into read buffer)<br /><br />Digging the test's source code I have outlined from what I understand is the flow of the test.<br />1. Set VRAM addr to $2F12 (non-palette address)<br />2. Write $9A<br />3. Read from VRAM (returns whatever the buffer's old value was, buffer = $9A)<br />4. Set VRAM addr to $3F12 (palette address)<br />5. Read from VRAM (returns the palette value, buffer = palette value)<br />6. Set VRAM addr to $2F13 (non-palette address)<br />7. Read from VRAM (returns buffered palette value, buffer = value at $2F13)<br />8. Compare buffered palette value with $9A (and not with the value stored at $2F12)<br />9. If equal, test is OK, else Fail.<br /><br />Please correct my understanding on the flow of the test. <img src="https://forums.nesdev.com/images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /><br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">      <br />      lda   #6;) Palette read should also read VRAM into read buffer<br />      sta   result<br />      lda   #$12<br />      jsr   set_vram_pos<br />      lda   #$9a<br />      sta   $2007<br />      lda   $2007<br />      lda   #$3f<br />      sta   $2006<br />      lda   #$12<br />      sta   $2006<br />      lda   $2007       ; fills buffer with VRAM hidden by palette <br />      lda   #$13        ; change back to non-palette addr to enable buffer<br />      jsr   set_vram_pos<br />      lda   $2007<br />      cmp   #$9a<br />      jsr   error_if_ne<br /></div><p>Statistics: Posted by <a href="https://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=7263">breathermachine</a> — Wed Oct 21, 2015 10:39 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2005-09-17T18:27:49-07:00</updated>
<published>2005-09-17T18:27:49-07:00</published>
<id>https://forums.nesdev.com/viewtopic.php?t=567&amp;p=4639#p4639</id>
<link href="https://forums.nesdev.com/viewtopic.php?t=567&amp;p=4639#p4639"/>
<title type="html"><![CDATA[A few NES PPU test ROMs]]></title>

<content type="html" xml:base="https://forums.nesdev.com/viewtopic.php?t=567&amp;p=4639#p4639"><![CDATA[
My devcart has CHR RAM (Zelda modified to always have the SRAM switched in at $E000), so I load the ASCII tiles there when printing the result code on screen. But I'm pretty sure none of the tests even access the CHR area, just the code that prints the result. Since it also makes audible beeps, they'll probably be usable with CHR ROM.<p>Statistics: Posted by <a href="https://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Sat Sep 17, 2005 6:27 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[drk421]]></name></author>
<updated>2005-09-17T17:04:54-07:00</updated>
<published>2005-09-17T17:04:54-07:00</published>
<id>https://forums.nesdev.com/viewtopic.php?t=567&amp;p=4638#p4638</id>
<link href="https://forums.nesdev.com/viewtopic.php?t=567&amp;p=4638#p4638"/>
<title type="html"><![CDATA[A few NES PPU test ROMs]]></title>

<content type="html" xml:base="https://forums.nesdev.com/viewtopic.php?t=567&amp;p=4638#p4638"><![CDATA[
Hey blargg,<br />If I wanted to run this on real hardware, what would I do about the CHR-ROM? (or are you using CHR-RAM?)<p>Statistics: Posted by <a href="https://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=45">drk421</a> — Sat Sep 17, 2005 5:04 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2005-09-17T16:16:35-07:00</updated>
<published>2005-09-17T16:16:35-07:00</published>
<id>https://forums.nesdev.com/viewtopic.php?t=567&amp;p=4636#p4636</id>
<link href="https://forums.nesdev.com/viewtopic.php?t=567&amp;p=4636#p4636"/>
<title type="html"><![CDATA[A few NES PPU test ROMs]]></title>

<content type="html" xml:base="https://forums.nesdev.com/viewtopic.php?t=567&amp;p=4636#p4636"><![CDATA[
<div class="quotetitle">Bregalad wrote:</div><div class="quotecontent"><br />I just noted than some games, such as Dragon Warrior 3 and Hanjuku Hero does a palette fade-out in the reset routine. It's pretty fun, because the screen is supposed to be totally off at that time. However, maybe it is not the case on a real nes (?)<br /></div><br />If you hit the reset button to do a soft reset, the screen might not be off, especially if you're playing on a Famicom where the CPU reset button doesn't affect the PPU at all.<p>Statistics: Posted by <a href="https://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Sat Sep 17, 2005 4:16 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2005-09-17T16:12:21-07:00</updated>
<published>2005-09-17T16:12:21-07:00</published>
<id>https://forums.nesdev.com/viewtopic.php?t=567&amp;p=4635#p4635</id>
<link href="https://forums.nesdev.com/viewtopic.php?t=567&amp;p=4635#p4635"/>
<title type="html"><![CDATA[A few NES PPU test ROMs]]></title>

<content type="html" xml:base="https://forums.nesdev.com/viewtopic.php?t=567&amp;p=4635#p4635"><![CDATA[
<div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />It would be stupid for any game to rely on the initial palettes values.<br /></div><br /><br />Yes it would, but when programming, especially in assembly language, sometimes code unintentionally depends on obscure aspects of hardware. If these aspects are stable, it might not get caught in testing. The point of writing an emulator to be as accurate as possible is to handle cases like these.<br /><br />When coding for the NES, one should rely on hardware details only where there is significant benefit. About the only use of this kind of information when programming for the NES is when trying to understand exactly why some code isn't working.<p>Statistics: Posted by <a href="https://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Sat Sep 17, 2005 4:12 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2005-09-17T14:08:30-07:00</updated>
<published>2005-09-17T14:08:30-07:00</published>
<id>https://forums.nesdev.com/viewtopic.php?t=567&amp;p=4633#p4633</id>
<link href="https://forums.nesdev.com/viewtopic.php?t=567&amp;p=4633#p4633"/>
<title type="html"><![CDATA[A few NES PPU test ROMs]]></title>

<content type="html" xml:base="https://forums.nesdev.com/viewtopic.php?t=567&amp;p=4633#p4633"><![CDATA[
It would be stupid for any game to rely on the initial palettes values. Final Fantasy seems to rely on an initial value into ram for pseudo-random encounder, but after all, the encounters are supposed to be random, so no problem here. Read the initial palette to seed a random number generator would be pretty stupid, I think.<br />I just noted than some games, such as Dragon Warrior 3 and Hanjuku Hero does a palette fade-out in the reset routine. It's pretty fun, because the screen is supposed to be totally off at that time. However, maybe it is not the case on a real nes (?) and it could fade out the screen if the reset button would be pushed (?) I have no DW3 card, so if someone could confirm this with more detail it would be cool.<br />So I don't know if the games reads the palette from the PPU or from a RAM buffer to do the fade-out at the begining. If it is from ram, gabarage may be written to the palette at power up, but it would do a nice fade out at reset (not power up), if bg and sprites are still turned on via $2001 trough the whole reset routine (but I suppose that gabarage would be seen when the PPU is reseted for two frame, else waiting two frames would make no sense, right ?). Anyway, the screen is off when the reset button is down, so I think it isn't that overall.<p>Statistics: Posted by <a href="https://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Sat Sep 17, 2005 2:08 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2005-09-17T13:58:14-07:00</updated>
<published>2005-09-17T13:58:14-07:00</published>
<id>https://forums.nesdev.com/viewtopic.php?t=567&amp;p=4632#p4632</id>
<link href="https://forums.nesdev.com/viewtopic.php?t=567&amp;p=4632#p4632"/>
<title type="html"><![CDATA[A few NES PPU test ROMs]]></title>

<content type="html" xml:base="https://forums.nesdev.com/viewtopic.php?t=567&amp;p=4632#p4632"><![CDATA[
Right, the point of initializing the palette to particular values is in case a game expects certain values. Someone could do the work of checking this by modifying an emulator to log whenever the first access to a particular palette entry is a read rather than a write.<br /><br />The color shown at power-up is presumably determined only by the value in the first palette entry, so it would be only one modification. But being an emulator, the accuracy of the simulation doesn't need to be compromised. An emulator can make a special case in graphic rendering and treat the first palette entry as black until unless it's been written since power-up.<p>Statistics: Posted by <a href="https://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Sat Sep 17, 2005 1:58 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2005-09-17T13:47:43-07:00</updated>
<published>2005-09-17T13:47:43-07:00</published>
<id>https://forums.nesdev.com/viewtopic.php?t=567&amp;p=4631#p4631</id>
<link href="https://forums.nesdev.com/viewtopic.php?t=567&amp;p=4631#p4631"/>
<title type="html"><![CDATA[A few NES PPU test ROMs]]></title>

<content type="html" xml:base="https://forums.nesdev.com/viewtopic.php?t=567&amp;p=4631#p4631"><![CDATA[
That would imply initializing the palette to $0F. Would this break any games?<p>Statistics: Posted by <a href="https://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Sat Sep 17, 2005 1:47 pm</p><hr />
]]></content>
</entry>
</feed>