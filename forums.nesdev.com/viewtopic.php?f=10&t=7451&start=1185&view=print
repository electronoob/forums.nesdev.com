<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - 8x16 and whatever else unreg wants to know</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">8x16 and whatever else unreg wants to know</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=10&amp;t=7451">http://forums.nesdev.com/viewtopic.php?f=10&amp;t=7451</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>80</strong> of <strong>83</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>unregistered</b> [ Wed Mar 05, 2014 2:54 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: 8x16 and whatever else unreg wants to know</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">If the low byte wraps around from FF to 00, increment the high byte.</div><br />I just am happily joyous about discovering that if I increment the high byte... then it starts at $700 and so the code that does $600  can just be repeated again!!!  I never have to  attempt reading row 15...  just increment the high byte and it would be row 7 right?  <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /><br /><br />edit: no... row 7 doesn't exist in $700 land... it would be 6!

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>unregistered</b> [ Mon Mar 17, 2014 10:02 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: 8x16 and whatever else unreg wants to know</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />These 32 byte-wide-rows are befuddling me.  I know my RAM buffer is filled with the correct collision screens; that's what fceu's hex editor shows me.  I know that each of these rows are 32 bytes wide, but is confusing to me the way that it should be useed.  Each row starts with 600... 620... 640 and so on but they are listed in sets of 16.  The #$0x0 value has always determined what row I have been using... and now it doesn't matter cause the rows are 32 bytes wide.  <img src="./images/smilies/icon_confused.gif" alt=":?" title="Confused" /> edit: im missing somethin g.<br /><br />edit2: aha!  the row 0... 600.  row 1... 620. row 2... 640.  row 3... 6(multiply row num by 2)60!!! <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /><br /><br />edit3:  hmm... no, I guess the best way would be to multiply the row number by #32.  That's five <strong>asl</strong>s... that's ok, right? <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />  ...that seems good to me right now. <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /><br />tepples,  the high byte... is there a good way to increment it whenever the low byte wraps from #$ff to #$00?  All of my efforts so far have been to insert a<span style="color: #FFBF00">n uncomfortable</span> branch past an uncomfortable <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">inc fieldlo+1</tt>.<br /><br /><span style="color: #FFBF00">last_edit.</span>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>unregistered</b> [ Fri Apr 04, 2014 6:13 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: 8x16 and whatever else unreg wants to know</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Goodness, there must be 240 scanlines right?  Something like that...?  <img src="./images/smilies/icon_confused.gif" alt=":?" title="Confused" />  Does each scanline take about 90 cycles?  When does vblank happen... what scanline?  I was on scanline 55... wondering how long that would have taken to finally make it to vblank... glad I didn't wait... still would be clicking <span style="color: #BF80FF">Step Into</span> over and over.  I did that one time... took forever<s>.</s><span style="color: #FF0080">!</span>  <img src="./images/smilies/icon_surprised.gif" alt=":o" title="Surprised" />  <img src="./images/smilies/icon_eek.gif" alt=":shock:" title="Shocked" /><br /><br /><span style="color: #FF0080">addition.</span>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Fri Apr 04, 2014 7:50 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: 8x16 and whatever else unreg wants to know</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">unregistered wrote:</div><div class="quotecontent">Goodness, there must be 240 scanlines right?</div><br />Visible, yes. After those 240 comes 1 dummy post-render scanline, 20 VBlank scanlines and 1 pre-render scanline, for a total of 262. These numbers are for NTSC. PAL has a much longer VBlank, 70 scanlines.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Does each scanline take about 90 cycles?</div><br />Each NTSC scanline is 341 / 3 = 113.6666... cycles long, while PAL scanlines are 341 / 3.2 = 106.5625 cycles long.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">When does vblank happen... what scanline?</div><br />VBlank happens after the 240 rendered scanlines and the dummy scanline.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">wondering how long that would have taken to finally make it to vblank... glad I didn't wait... still would be clicking <span style="color: #BF80FF">Step Into</span> over and over.</div><br />Would setting a breakpoint on the address of the NMI handler solve your problem? You could click &quot;run&quot; and the debugger would pause when the NMI is called, which is when VBlank starts.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>unregistered</b> [ Fri Apr 04, 2014 11:25 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: 8x16 and whatever else unreg wants to know</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent"><div class="quotetitle">unregistered wrote:</div><div class="quotecontent">Goodness, there must be 240 scanlines right?</div><br />Visible, yes. After those 240 comes 1 dummy post-render scanline, 20 VBlank scanlines and 1 pre-render scanline, for a total of 262. These numbers are for NTSC. PAL has a much longer VBlank, 70 scanlines.</div>So then... PAL has 312 scanlines right?<br /><br /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent"><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Does each scanline take about 90 cycles?</div><br />Each NTSC scanline is 341 / 3 = 113.6666... cycles long, while PAL scanlines are 341 / 3.2 = 106.5625 cycles long.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">When does vblank happen... what scanline?</div><br />VBlank happens after the 240 rendered scanlines and the dummy scanline.</div><span style="font-size: 150%; line-height: normal"><strong><span style="color: #FF8040">Thanks so incredibly much tokumaru!!</span></strong> <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /></span><br /><br /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">Would setting a breakpoint on the address of the NMI handler solve your problem? You could click &quot;run&quot; and the debugger would pause when the NMI is called, which is when VBlank starts.</div>No my problem was already solved because I changed the active breakpoint... and that once earlier started on the first breakpoint during vblank... that happened again.  I guess that setting a new breakpoint and making it active (double click on it/make the E appear) resets the debugger to the first breakpoint during vblank.  Is that correct?  Is there never a chance to pick a new breakpoint and have the debugger just go to the closest breakpoint nearest your position in the <span style="color: #BF80FF">Step Into</span> button?  Does that make sense?  <span style="color: #888888">My brain isn't working very well right now... that's what 9 hours of searching with the debugger does to me.</span>  <img src="./images/smilies/icon_redface.gif" alt=":oops:" title="Embarassed" />  Goodnight.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>unregistered</b> [ Sat Apr 12, 2014 2:49 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: 8x16 and whatever else unreg wants to know</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Ahaha... I'm trying to get my girl to fall down a hole of water... it's on the second screen... but my xvalue is only 8bit... hahaha... I'm dumb.  <img src="./images/smilies/icon_redface.gif" alt=":oops:" title="Embarassed" /> So it will work better when  I go to 16bits... cause that's what everyone was saying... on page 15. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /><br />edit: Ok so it is 16 bits... all of that is already set up... it's just that she never travels past 256... that's what I ment.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Kasumi</b> [ Sat Apr 12, 2014 7:29 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: 8x16 and whatever else unreg wants to know</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">edit: Ok so it is 16 bits... all of that is already set up... it's just that she never travels past 256... that's what I ment.</div><br />So post the code that's supposed to move her?<br /><br />For 16 bits, it should just look like this if she's moving right:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">lda herlowposition<br />clc<br />adc howmanypixelssheshouldmove<br />sta herlowposition<br /><br />lda herhighposition<br />adc #0;This would be the high byte of pixels to move<br />;But I'm assuming it will never be 256 or greater<br />sta herhighposition<br /></div><br /><br />If that's already what it looks like, the guess is that you haven't updated the code that draws her to the screen to use both her high and low bytes. <br /><br />I don't know which thing is wrong, be more specific!

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>unregistered</b> [ Sat Apr 12, 2014 9:42 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: 8x16 and whatever else unreg wants to know</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Ah, but where do I put the code that moves her?  Currently, it's at the spot where CameraX is incremented... it's not too good right there... but maybe it will be better after some more thought is applied.  Sorry, I'm needed to watch Naruto Shippuden... thank you for replying Kasumi! <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" />  It's something I need to think about some more I think. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Kasumi</b> [ Sat Apr 12, 2014 10:39 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: 8x16 and whatever else unreg wants to know</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />You put the code to move her with everything else that updates her. Where you check if she has jumped/collided with a wall etc.<br /><br />Somewhere not in the NMI, and separated from actual scrolling code, yes.<br /><br />Edit: <br />My game loop looks like:<br />1. Wait for vblank<br />2. Read joypads<br />3. Update all objects.<br />*****1. Update main character's position, and check collisions with enemies. Stop him if he collided with a wall etc.<br />*****2. Update every other object in order. Check their collisions with walls etc.<br />4. Scroll background. I do this after I update the objects, because scrolling is relative to the main character's position and I want it final for that frame.<br />5. Render all objects. I do this after I scroll because where they're drawn is relative to where we ended up scrolling (and for one other reason specific to my game). But you can render each object as part of 3 if you like. <br />6. Render the HUD.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>unregistered</b> [ Mon Apr 14, 2014 12:53 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: 8x16 and whatever else unreg wants to know</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="codetitle"><b>Code:</b></div><div class="codecontent">MainLoop: <br /><br />&nbsp; &nbsp;;DO THE GAME LOGIC HERE (i.e. movement, collisions, etc.) <br />&nbsp; ;jsr camera_aim ;&lt;this works...&nbsp; not very well... the screen jumps too often...we think. :)<br />&nbsp; jsr react_to_input<br />&nbsp; jsr collisionU<br /><br />&nbsp; <br />&nbsp; &nbsp;&nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp;ldx aFrame<br />&nbsp; &nbsp;&nbsp; &nbsp;jsr draw_sprite<br />&nbsp; ;&nbsp; hope this will be some good cement. :)&nbsp; tested... works good so far :D<br />&nbsp; lda levellength_high<br />&nbsp; cmp currScreen<br />&nbsp; bcc +end<br />&nbsp; &nbsp;ldx currScreen ;load screen number with x<br />&nbsp; &nbsp;ldy valid_left;isible_left;phase;#$00<br />&nbsp; <br />&nbsp; &nbsp;jsr draw_RAMbuffers ;16 bits wide (1 column) <br /><br />&nbsp; &nbsp; &nbsp; &nbsp; lda iBeginAtOne<br />&nbsp; &nbsp;&nbsp; &nbsp;bne +end<br />&nbsp; &nbsp; &nbsp; &nbsp; lda valid_left;isible_left<br />&nbsp; &nbsp;&nbsp; &nbsp;beq +end<br />&nbsp; &nbsp;&nbsp; &nbsp;and #00001111b<br />&nbsp; &nbsp;&nbsp; &nbsp;bne +mid<br />&nbsp; &nbsp; &nbsp; &nbsp; lda flg_nextScreen<br />&nbsp; &nbsp;&nbsp; &nbsp;bne +end<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; inc currScreen ;increment currScreen to load new nametable&nbsp; !!!!!!!!!<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; lda #$01<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; sta flg_nextScreen ;as long as flg_nextScreen is set #$01 it prevents the currScreen from incrementing<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; jmp +end<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; <br />&nbsp; +mid: lda #$00<br />&nbsp; &nbsp; &nbsp; &nbsp; sta flg_nextScreen<br /><br />&nbsp; +end:&nbsp; &nbsp;<br /><br /><br />&nbsp; ;indicate that the frame calculations are done <br />&nbsp; &nbsp;dec FrameReady <br /><br />WaitForUpdates: <br />&nbsp; &nbsp;;wait for the flag to change <br />&nbsp; &nbsp;bit FrameReady <br />&nbsp; &nbsp;bmi WaitForUpdates <br />sta $ff<br />jmp MainLoop</div><br /><br />The last thing my game loop does is wait for vblank.<br />Read joypads is handled first in react_to_input.<br />Then movement and collisions happens... guess that I could update her oX value in there.  I have a small question... how should I make oX increment beyond 255?   Whenever I add one to oX it moves my character... she always moves past my barrier that trys to prevent her from appearing on the opposite side of the screen.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Kasumi</b> [ Mon Apr 14, 2014 1:58 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: 8x16 and whatever else unreg wants to know</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I have a small question... how should I make oX increment beyond 255? Whenever I add one to oX it moves my character... </div><br />I dunno. Post the code that actually deals with oX? But chances are you just need to rename oX to oXlow, create a variable called oXhigh, and then do what I said two posts ago. Didn't I also ask you to post the code that moves her in that same post? Here I am again! If there isn't currently code that moves her, say that. I'm led to believe there is because you know that adding to oX moves her. But that could also mean it's just something you're aware of and no code actually does it, like I'm aware that in my game incrementing an object's grab requests makes an object impossible to grab. Edit2: Actually, no there's definitely code, because you said this:&quot;Ah, but where do I put the code that moves her? Currently, it's at the spot where CameraX is incremented.&quot; So it does exist! Maybe oX is actually defined as two bytes, in which case you don't need to create/rename anything, but you still need to add 0 to the high byte as oX+1 similar to what I said two posts ago. The fact is I don't know either way, so let me know! <br /><br />You have to help people help you. I haven't done a lot of posting in this topic recently because you're asking questions that are extremely specific to your game, but then not posting the info we need about it.<br /><br />Like the 32 byte rows. I have no idea what any of that means. You have to describe your level format or something. Post code. <br /><br />Before you post, read your post. Think about the questions someone would ask that has no idea about the specifics of your game, but has 6502 and NES knowledge. Answer the questions you can think of before anyone has to ask, because those are the people that are going to end up helping you. Even if you feel you've posted some info before, post it again. Like... I'm pretty sure we've talked about oX before, but this is an 80 page topic and oX is too short a string to search for on the forum.<br /><br />Edit: <a href="http://forums.nesdev.com/viewtopic.php?f=10&amp;t=7451&amp;p=112830&amp;hilit=addition#p112830" class="postlink">Here's a post I made about 16 bit math.</a> <br /><a href="http://forums.nesdev.com/viewtopic.php?f=10&amp;t=7451&amp;p=112950&amp;hilit=bit#p112950" class="postlink">Here's another</a><br />Do you fully understand 16 bit math? If not, let's cover that. I'm not trying to be mean, but I honestly don't understand the issue here.<br />Edit3: Or the problem is the character's movement is already 16bit, but she's not drawn correctly when her position has a higher value than 256 because draw_sprite is wrong. It could be all kinds of things and as I said before, I don't know which thing is wrong, be more specific!

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>unregistered</b> [ Mon Apr 14, 2014 4:47 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: 8x16 and whatever else unreg wants to know</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Kasumi wrote:</div><div class="quotecontent">You have to help people help you. I haven't done a lot of posting in this topic recently because you're asking questions that are extremely specific to your game, but then not posting the info we need about it.<br /><br />Like the 32 byte rows. I have no idea what any of that means. You have to describe your level format or something. Post code.<br /></div><br /><br /><div class="attachtitle">Attachment:</div><div class="attachcontent">
			<a href="./download/file.php?id=1434&amp;mode=view"><img src="./download/file.php?id=1434&amp;t=1" alt="32bitrows.png" /></a><br />
			<span class="gensmall">32bitrows.png [ 51.55 KiB | Viewed 337 times ]</span>
		

		<br />
	</div><br /><br />See the 32 byte rows... the 01s at the bottom are solid blocks... the 00s are air... and the 02s are water.  It's confusing for me because the rows are 32 bytes wide... and when the screen scrolls over to the second screen... the hole of water is never reached because in my code <br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">0C49D&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;unpack:<br />0C49D&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<br />0C49D&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<br />0C49D&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<br />0C49D&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;;**********************************************************************************************<br />0C49D&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;;**********************************************************************************************<br />0C49D&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<br />0C49D&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;;128&nbsp; 64&nbsp; 32&nbsp; 16&nbsp; &nbsp;8&nbsp; &nbsp;4&nbsp; &nbsp;2&nbsp; &nbsp;1&nbsp; &nbsp;<br />0C49D&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;;$80 $40 $20 $10 $08 $04 $02 $01<br />0C49D A9 B5&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;lda #&lt;MetatileRhombus<br />0C49F 85 0C&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp;sta rhombusCollision_low<br />0C4A1 A9 CC&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp;lda #&gt;MetatileRhombus<br />0C4A3 85 0D&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp;sta rhombusCollision_high<br />0C4A5&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp;<br />0C4A5 A9 94&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp;lda #&lt;MetatileCollision<br />0C4A7 85 1A&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp;sta UCollision_low<br />0C4A9 A9 CD&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp;lda #&gt;MetatileCollision<br />0C4AB 85 1B&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp;sta UCollision_high<br />0C4AD&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp;<br />0C4AD&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp;<br />0C4AD&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<br />0C4AD&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<br />0C4AD&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<br />0C4AD&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<br />0C4AD&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<br />0C4AD&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<br />0C4AD&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<br />0C4AD&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp;<br />0C4AD&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp;;GRAVITY<br />0C4AD&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;<br />0C4AD 85 FF&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp;sta $ff<br />0C4AF&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp;<br />0C4AF&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;;&nbsp; &nbsp;lda (ten_low), y<br />0C4AF&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;;&nbsp; &nbsp;tay<br />0C4AF&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;;&nbsp; &nbsp;lda (UCollision_low), y<br />0C4AF&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;;&nbsp; &nbsp;tya<br />0C4AF A5 06&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp;lda oY<br />0C4B1 4A&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;lsr a<br />0C4B2 4A&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;lsr a<br />0C4B3 4A&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;lsr a<br />0C4B4 4A&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;lsr a<br />0C4B5 AA&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;tax ;ldx rowValue ;y must be 0-15<br />0C4B6 20 81 C5&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp;jsr seekRow_fieldlo<br />0C4B9 20 9D C5&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;jsr adjustRow<br />0C4BC&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<br />0C4BC A5 03&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp;lda oX ;***this never makes it past 16. :(<br />0C4BE 4A&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;lsr a<br />0C4BF 4A&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;lsr a<br />0C4C0 4A&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;lsr a<br />0C4C1 4A&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;lsr a<br />0C4C2 A8&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;tay ;ldy colValue ;x must be 0-31&nbsp; &nbsp;<br />0C4C3 B1 4C&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp;lda (fieldlo), y<br />0C4C5&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<br />0C4C5&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;;if the metatile is not all the same tile<br />0C4C5 0A&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; asl a&nbsp; &nbsp; ;&lt;pushes bit #7 into carry.<br />0C4C6 B0 1F&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp;&nbsp; bcs +end;bcc +end<br />0C4C8&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<br />0C4C8&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; and if the ground below is not something solid to stand on...<br />0C4C8 A6 2C&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp;&nbsp; ldx SomethingSolidtoStandon<br />0C4CA CA&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; dex<br />0C4CB F0 1A&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp;&nbsp; beq +end<br />0C4CD&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;;then fall to the metatile below...<br />0C4CD&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;<br />0C4CD A5 06&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; lda oY<br />0C4CF&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; ;clc ;We could clear the carry&nbsp; ;carry is clear<br />0C4CF&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; ;adc #8 ;AND add 8.<br />0C4CF 69 08&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; adc #8;Or... we could add 7.&nbsp; Because we know the carry is set, and 7+1 is eight. <br />0C4D1 85 06&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;sta oY<br />0C4D3&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;<br />0C4D3 A9 08&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;lda #8<br />0C4D5 85 28&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;sta PointX<br />0C4D7 A9 20&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;lda #32<br />0C4D9 85 2A&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;sta PointY<br />0C4DB 20 F6 C4&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp;jsr checkPointXY ;correctly calls linear_position<br />0C4DE F0 07&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;beq +end<br />0C4E0 A5 06&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;lda oY<br />0C4E2 20 1B C5&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp;jsr fallFix<br />0C4E5 85 06&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;sta oY<br />0C4E7&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;<br />0C4E7&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<br />0C4E7 60&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; +end rts ;end of unpack </div><br />y never gets past 16. edit: see my *** comment

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Kasumi</b> [ Mon Apr 14, 2014 5:57 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: 8x16 and whatever else unreg wants to know</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Your post was apparently severely edited before I made my reply. But I'm still curious about this one bit:<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"> sta #$ff</div><br />That has since been fixed in your edit, but I'm kind of amazed that didn't throw an error when you assembled the rom. It did end up assembling to what you meant (sta $FF), but... it should not have assembled at all. You're using ASM6, right? Because whatever you're using should uh... fix that.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">y never gets past 16. edit: see my *** comment</div><br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">0C4BC A5 03&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; lda oX ;***this never makes it past 16. :(<br />0C4BE 4A&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;lsr a<br />0C4BF 4A&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;lsr a<br />0C4C0 4A&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;lsr a<br />0C4C1 4A&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;lsr a<br />0C4C2 A8&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;tay ;ldy colValue ;x must be 0-31&nbsp; &nbsp;<br /></div><br /><br /><br />This confuses me slightly. The comment is next to oX, which makes me think the &quot;this&quot; in the comment refers to oX&quot;. The actual post says Y never gets past 16. I promise I'm not trying to obtuse, but for technical stuff I really, really need specifics.<br /><br />Is your problem:<br />A: That oX itself is never a value greater than 16?<br />or <br />B: That Y after the TAY is never a value greater than 16?<br /><br />If A, there's not enough info to help.<br />If B, it's because you're dividing oX by 16, so the largest remaining value cannot be greater than 15.<br />Because the largest value a single byte can hold is 255. <br />255<br />lsr<br />127<br />lsr<br />63<br />lsr<br />31<br />lsr<br />15<br /><br />If you want to do a 16bit divide by 16, you want this:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">;I'm assuming regular oX is the low byte<br />;And oX+1 is the high byte. Adapt the code accordingly<br /><br />lda oX+1<br />lsr a;Divide the high byte by 2<br />;This shifts the lowest bit from the high byte<br />;Into the carry<br />sta temp<br /><br />lda oX<br />ror a;Divide the low byte by 2, <br />;shifting in the lowest bit of the<br />;high byte from the carry<br />;into the highest bit of the low byte.<br />sta temp2<br /><br />;Then we just do it as many more times as we want to divide by 2.<br />lda temp<br />lsr a<br />sta temp<br /><br />lda temp2<br />ror a<br />sta temp2<br /><br />lda temp<br />lsr a<br />sta temp<br /><br />lda temp2<br />ror a<br />sta temp2<br /><br />lda temp<br />lsr a<br />;sta temp;At this point we don't need to store<br />;to temp, because we won't use the value again<br /><br />lda temp2<br />ror a<br />;sta temp2;At this point we don't need to store<br />;to temp, because we won't use the value again<br /><br />tay<br /></div><br />Is that what you need?<br />Edit: Oh... context makes me think you actually want this:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">and #%00011111;Make sure A is 0-31 before transferring to y<br />tay<br /></div><br />Edit2: I must be tired. You don't need to load store, you can work directly on the temp variables (after the oX values are safely stored there) like below:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">lda oX+1<br />lsr a<br />sta temp<br /><br />lda oX<br />ror a<br />sta temp2<br /><br />lsr temp<br />ror temp2<br /><br />lsr temp<br />ror temp2<br /><br />lsr temp<br />lda temp2<br />ror a<br />and #%00011111<br />tay<br /></div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>unregistered</b> [ Tue Apr 15, 2014 9:22 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: 8x16 and whatever else unreg wants to know</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Kasumi wrote:</div><div class="quotecontent">Your post was apparently severely edited before I made my reply. But I'm still curious about this one bit:<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"> sta #$ff</div><br />That has since been fixed in your edit, but I'm kind of amazed that didn't throw an error when you assembled the rom. It did end up assembling to what you meant (sta $FF), but... it should not have assembled at all. You're using ASM6, right? Because whatever you're using should uh... fix that.</div> Yes, I'm using ASM6.  Sorry about the severe edit.  Decided to give you a different method of code.  <span style="color: #40BFFF">That code is still in my other method... it is <br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">0C529 85 FF&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp;sta #$ff </div> still like that.  I will change it. </span><br /><br /><div class="quotetitle">Kasumi wrote:</div><div class="quotecontent"><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">y never gets past 16. edit: see my *** comment</div><br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">0C4BC A5 03&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; lda oX ;***this never makes it past 16. :(<br />0C4BE 4A&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;lsr a<br />0C4BF 4A&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;lsr a<br />0C4C0 4A&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;lsr a<br />0C4C1 4A&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;lsr a<br />0C4C2 A8&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;tay ;ldy colValue ;x must be 0-31&nbsp; &nbsp;<br /></div><br /><br /><br />This confuses me slightly. The comment is next to oX, which makes me think the &quot;this&quot; in the comment refers to oX&quot;. The actual post says Y never gets past 16. I promise I'm not trying to obtuse, but for technical stuff I really, really need specifics.<br /><br />Is your problem:<br />A: That oX itself is never a value greater than 16?<br />or <br />B: That Y after the TAY is never a value greater than 16?<br /><br />If A, there's not enough info to help.<br />If B, it's because you're dividing oX by 16, so the largest remaining value cannot be greater than 15.<br />Because the largest value a single byte can hold is 255. <br />255<br />lsr<br />127<br />lsr<br />63<br />lsr<br />31<br />lsr<br />15</div>It's B. Oh, goodness gracious... Thank you for telling me this Kasumi.  <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />  <img src="./images/smilies/icon_redface.gif" alt=":oops:" title="Embarassed" /> I seem to think that I kind of figured this out myself already... kind of.<br /><br /><div class="quotetitle">Kasumi wrote:</div><div class="quotecontent">If you want to do a 16bit divide by 16, you want this:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">;I'm assuming regular oX is the low byte<br />;And oX+1 is the high byte. Adapt the code accordingly<br /><br />lda oX+1<br />lsr a;Divide the high byte by 2<br />;This shifts the lowest bit from the high byte<br />;Into the carry<br />sta temp<br /><br />lda oX<br />ror a;Divide the low byte by 2, <br />;shifting in the lowest bit of the<br />;high byte from the carry<br />;into the highest bit of the low byte.<br />sta temp2<br /><br />;Then we just do it as many more times as we want to divide by 2.<br />lda temp<br />lsr a<br />sta temp<br /><br />lda temp2<br />ror a<br />sta temp2<br /><br />lda temp<br />lsr a<br />sta temp<br /><br />lda temp2<br />ror a<br />sta temp2<br /><br />lda temp<br />lsr a<br />;sta temp;At this point we don't need to store<br />;to temp, because we won't use the value again<br /><br />lda temp2<br />ror a<br />;sta temp2;At this point we don't need to store<br />;to temp, because we won't use the value again<br /><br />tay<br /></div><br />Is that what you need?<br />Edit: Oh... context makes me think you actually want this:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">and #%00011111;Make sure A is 0-31 before transferring to y<br />tay<br /></div><br />Edit2: I must be tired. You don't need to load store, you can work directly on the temp variables (after the oX values are safely stored there) like below:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">lda oX+1<br />lsr a<br />sta temp<br /><br />lda oX<br />ror a<br />sta temp2<br /><br />lsr temp<br />ror temp2<br /><br />lsr temp<br />ror temp2<br /><br />lsr temp<br />lda temp2<br />ror a<br />and #%00011111<br />tay<br /></div></div>  Excellent!! This will work good.  I wrote this out on paper and worked through it with a pencil.  Thank you Kasumi!! <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /> It's ok you were tired because your first load and store attempt helped me to remember how the carry works in the ror and lsr!  I really appreciate this! <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /> <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /><br /><span style="color: #40BFFF">edit.</span>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>unregistered</b> [ Thu Apr 17, 2014 11:43 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: 8x16 and whatever else unreg wants to know</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Kasumi<span style="color: #40FFBF">, on page 51,</span> wrote:</div><div class="quotecontent">If she's one pixel in the floor and you subtract eight, she's flying.</div><br />Thank you Kasumi!! <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /> I know now that it is like I thought, the pixels start in the screen's upper left corner.  I was wondering about that...  According to my math, I need to figure out my row value and find (Row - 8) * 32.    <br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">;/*********************<br />;&nbsp; send row number in X :(0-15)<br />;distroys a preserves x<br />;*********************/<br />seekRow_fieldlo:<br />;set 2-byte variable in zero page<br />&nbsp; lda #$01<br />&nbsp; sta once<br />&nbsp; lda #$06<br />&nbsp; sta fieldlo+1<br />&nbsp; txa<br />&nbsp; beq +theend&nbsp; ;this is good... don't need any shifting if the value is 0. :)<br />&nbsp; and #00000111b<br />&nbsp; ; (row - 8)*32<br />&nbsp; asl a<br />&nbsp; asl a<br />&nbsp; asl a&nbsp; &nbsp;;&gt;*32<br />&nbsp; asl a<br />&nbsp; asl a<br />+theend&nbsp; sta fieldlo+0<br />&nbsp; <br />&nbsp; rts ;end of seekRow_fieldlo<br /><br />;/*************************<br />; Distroys a.&nbsp; Need to have<br />;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; correct row x value.<br />; only runs once per seekRow <br />;*************************/<br />adjustRow:<br />&nbsp; &nbsp; lda once<br />&nbsp; &nbsp;beq +end<br />&nbsp; &nbsp;&nbsp; ;need to have a comparision of the row number with&nbsp; a certain value that represents the last row of 6xx values (row 8)<br />&nbsp; &nbsp; &nbsp; cpx #$08 ;X-M<br />&nbsp; &nbsp; &nbsp; bcc +end ;if x &lt;= 7... end<br />&nbsp; &nbsp; &nbsp; &nbsp; inc fieldlo+1<br />&nbsp; &nbsp;&nbsp; &nbsp; dec once<br /><br />+end rts ;end of adjustRow<br /></div>  I did figure out that I don't have to figure out Row - 8 because, this is really cool  <img src="./images/smilies/icon_cool.gif" alt="8-)" title="Cool" /> , the bits are the same for 0-7 and 8-15... I think the only  thing different is bit 3... so I just thought of adding <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">and #00000111b</tt> and it works!!  <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />  I recieved the exact same answer though without that <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">and #00000111b</tt> so I am just wondering if what I'm doing makes sense.  Does this make sense?  I guess I just need to try harder to figure this out... thank you for reading. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />  Writing this out surely does help me.<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">;this is how those two functions up there work...<br />lda currRow<br />tax<br />jsr seekRow_fieldlo<br />jsr adjustRow<br /><br />edit: &#91;s&#93;lda (fieldlo), y&#91;/s&#93;<br />edit2: ;blaaaaaaaaaaaah ok, let me try this again... pretend those strike tags work... pretend that my first edit<br />;never happened. Thank you. :)<br />;So now fieldlo can be accessed correctly... you just have to specify what metatile to access.&nbsp; Since the rows <br />;are 32 bytes wide they can take a value anywhere from 0 to 31.&nbsp; You have to specify this number in y.<br /><br />lda current_column<br />tay<br />lda (fieldlo), y<br /><br />;Also there is an image above this post on page 80... I think it will help you to understand what my collision<br />;values look like on pages-of-memory 6 and 7.<br /></div>

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>80</strong> of <strong>83</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>