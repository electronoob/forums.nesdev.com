<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - What do schools have against teaching C?</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">What do schools have against teaching C?</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=5&amp;t=16990">http://forums.nesdev.com/viewtopic.php?f=5&amp;t=16990</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>4</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>DementedPurple</b> [ Sun Jan 28, 2018 2:29 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>What do schools have against teaching C?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I'm enrolling into High School for next year and all of the school's tech programs never teach anything in the C family, it's always Python, Java/Javascript, and HTML. The same is true at the school I currently attend, the tech teachers seem to treat C as if it's some sort of crazy sophisticated language because it's &quot;Low Level&quot; which is far from the truth. C is a far more useful language to learn then any other because it can be used on practically any device, such as embedded systems, mobile devices, smart watches, game consoles, and even applications for PCs. So why would they rather teach a very niche language that works on niche devices rather then teach a language that would actually be useful?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>FrankenGraphics</b> [ Sun Jan 28, 2018 2:33 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: What do schools have against teaching C?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The school seems to be business oriented. Increasingly less job opportunities for people who specialize in C and C++ / growing rate of job opportunities if you learn something else. On one hand, C and C++ coders can expect a higher salary for their knowledge and expertise in the future, but the number of jobs are slowly diminishing, at least comparatively to other fields.<br /><br />You need to write a computation heavy simulation or science thingy? Use C family. You want to get some job done at a tight price point quick without having to worry about memory management and what not? Use something high-level.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Punch</b> [ Sun Jan 28, 2018 2:40 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: What do schools have against teaching C?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />You can't &quot;architecture astronaut&quot; in C, I'm afraid, so that's why. <img src="./images/smilies/icon_lol.gif" alt=":lol:" title="Laughing" /> <br /><br />In all honesty people learn more about OOP and Design Patterns which are much more useful in the real world nowadays, they can learn low level stuff elsewhere if they desire.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Sun Jan 28, 2018 4:54 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: What do schools have against teaching C?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />My advice is take the course and learn Java and Python anyway. Doing so will only make it easier for you to eventually learn C, should you want to.<br /><br />Most of what you will learn in a beginner's course is fundamental stuff that applies to most programming. The specific choice of language isn't a big deal here.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Rahsennor</b> [ Sun Jan 28, 2018 5:30 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: What do schools have against teaching C?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />What rainwarrior said. Java is pretty much C with a new coat of paint, and probably easier to learn anyway. Javascript and Python are further removed but the basics are still the same, and that's all you'll be covering in a high school course anyway.<br /><br />FWIW I think the teachers are right to call C a &quot;crazy sophisticated language because it's &quot;Low Level&quot;&quot;. It <em>is</em> a low-level language. It's trivially easy to shoot yourself in the foot. You have to do all the safety checks yourself, manually, and even the pros stuff them up on a regular basis.<br /><br />I would go so far as to blame the modern acceptance of buggy programs as simply the way things are squarely on the C family's shoulders, because the most frequent 90% of all bugs could be (and are!) reliably caught at compile time in more advanced languages. You really do need to know what you're doing.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>FrankenGraphics</b> [ Sun Jan 28, 2018 5:35 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: What do schools have against teaching C?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />That's another thing... bug hunts, manual bug prevention &amp; testing can be expensive. You want to cut unnecessary production costs and automating away a good portion of all human error factors is one such.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>infiniteneslives</b> [ Sun Jan 28, 2018 6:44 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: What do schools have against teaching C?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Maybe it's just a high school thing mostly..?  Not sure about others with EE/CS degrees, but the majority of my EE/CS classes used C.  But I also got a taste of asm, java, python, along with verilog and matlab if you count them.  Not sure how things have changed since 2012 when a graduated though.  There was absolutely no programming classes when I attended high school in early 2000's.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Sun Jan 28, 2018 6:47 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: What do schools have against teaching C?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />There was no programming instruction at all in my high school until the last year I was there when it became a new course. At the time it was C++, but they switched to Java a year or two later. This was not quite 20 years ago, and Java was a bit less popular at that point (and a whole lot slower).<br /><br />Throughout my university computer science program, the beginner courses were Java, and so were most courses, but you were expected to learn at least the basics in a variety of other languages too (e.g. Haskell, Prolog, Matlab, assembly). I only had one course that used C++, which was for computer graphics. I don't think there are any courses there that use C at all, though there are certainly graduate students and faculty doing some work in it.<br /><br />So, C has never been on offer for formal instruction in the educational system I grew up in. Even C++ was rare. I don't know what kind of justifications you're hearing about C being &quot;crazy sophisticated&quot; or whatever, but I think the real reason is just popularity, not language features. Java <em>is</em> the <strong>most popular programming language</strong>. That's the same reason my high school briefly offered C++ while I was there, but they would have had something similarly spurious to say about why they didn't use Java instead. There's always something bad you can say about any programming language, especially if you want to make an excuse not to use it.<br /><br /><br />I learned BASIC from library books and magazines. Later I learned C++ from a book, and then quickly learned C and a whole lot more when the internet became a household thing. By the time my high school offered <em>any</em> course in programming, it was too late for me to learn anything from it. I would have loved an opportunity to have classroom instruction in it earlier on. To have peers to learn with, and a teacher to ask questions of would have been amazing. (Nowadays my old high school has 3 programming courses! Java, of course.)<br /><br />So... take it anyway. If you want, try to learn C on your own, at the same time or later, or whenever you have the interest and inclination to do so.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>zzo38</b> [ Sun Jan 28, 2018 8:56 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: What do schools have against teaching C?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I still think C is good, and so is assembly language. And, there is many other programming language good for use for different purpose, too.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>dougeff</b> [ Sun Jan 28, 2018 9:17 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: What do schools have against teaching C?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Java/Javascript</div><br /><br />Just to make sure you are aware...Java and JavaScript are not related, and don't resemble each other in any way.<br /><br />If you are interested in web programming, HTML and JavaScript will be usefull to learn.<br /><br />If you want to make apps, particularly for Android devices, then Java is a good language to learn.<br /><br />I like C and C++. You can do so many things with either.<br /><br />python is a good language for high school aged programmers, because it is easier to read, ie. user friendly.<br />It's also easy to get simple programs up and running very quickly, and on any machine.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Mon Jan 29, 2018 12:52 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: What do schools have against teaching C?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />There was absolutely not programming course in high-scool back when I was there (if you don't count Excel &quot;programming&quot;) and I think there still isn't, but they're planning to introduce it. Think that the general public is ordinary people, which may not be that interested about programming computers. Low level programming is harder, so that's not the priority to teach to that public.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Sumez</b> [ Mon Jan 29, 2018 12:59 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: What do schools have against teaching C?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Can't say anything that hasn't been said here, but yeah - while I think C is good to know even if you aren't going to work with it, it's <strong>not</strong> good for teaching the basics of programming!<br /><br />Java and C# are designed around the object oriented design idea (unlike C++ which sort of had it tacked on), do memory management for you, and are much more strict about when when you are allowed to build your program, pretty much enforcing ideal design patterns on you. The &quot;only&quot; disadvantage to using either of those would be a lower performance (which is surprisingly rarely relevant in most real life scenarios), and less control of dependencies.<br />Both of those languages are absolutely ideal for teaching the concepts of object oriented programming, which is likely what you will be doing if you ever get a job working with this kind of stuff, no matter what language you'll end up coding.<br /><br />One thing those languages don't teach you however, is how things work closer to the internals of the computer, and in some cases that can be really good to know. C definitely teaches you some very important points about memory management that C# or Java like to pretend don't exist, but in regards to high school level beginner classes, an assembly language would be much more beneficial for teaching kids how things work, and I'd imagine most programming classes probably do take a week or two to at least touch on that subject?<br />I imagine there are a lot more choices now, when I went to what corresponds to &quot;high school&quot; in my country around 1999, my only option was a computer class lasting about a semester, which would touch on programming in terms of Visual Basic and a short flirt with some virtual assembly language we'd be making small tasks in using some kind of simple emulator.<br />Neither of those would be remotely useful in finding a job later in my life, but I think they worked just fine for the purpose - giving high school students an idea of what programming languages is, how they work, and what you can do with them... although as a big nerd I was familiar with most of that stuff beforehand...

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Drew Sebastino</b> [ Mon Jan 29, 2018 1:21 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: What do schools have against teaching C?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Rahsennor wrote:</div><div class="quotecontent">I would go so far as to blame the modern acceptance of buggy programs as simply the way things are squarely on the C family's shoulders, because the most frequent 90% of all bugs could be (and are!) reliably caught at compile time in more advanced languages. You really do need to know what you're doing.</div><br />Which is a good thing, because that means you're the one actually writing the program and not the computer.<br /><br /><div class="quotetitle">infiniteneslives wrote:</div><div class="quotecontent">Maybe it's just a high school thing mostly..?</div><br />It's not. I'm taking my first semester of programming at a college (even though I'm still in high school), and we've been using Java. Hopefully C better; we've only been making really simple programs so far, but the thing practically makes itself. I don't even feel like I'm doing anything.<br /><br /><div class="quotetitle">Sumez wrote:</div><div class="quotecontent">an assembly language would be much more beneficial for teaching kids how things work, and I'd imagine most programming classes probably do take a week or two to at least touch on that subject?</div><br />Our textbook had a few pages on it, but then that was it. It felt useless for them to teach that; things like binary and machine code have absolutely no relevance to Java programming as far as I can tell.<br /><br />It's frustrating to me how little everyone (not here, obviously) seems to value efficiency. I can think of several programs that aren't even &quot;super sophisticated&quot; but could bog down even a modern computer due to brute-force checking and whatnot. And why even make something take 2 seconds if it only needs to take 1? My conspiracy theory is that Intel and other companies encourage learning institutions not to value code efficiency so programs run poorly unless you buy their newest hardware. <img src="./images/smilies/icon_lol.gif" alt=":lol:" title="Laughing" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Rahsennor</b> [ Mon Jan 29, 2018 3:06 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: What do schools have against teaching C?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Espozo wrote:</div><div class="quotecontent">Which is a good thing, because that means you're the one actually writing the program and not the computer.</div><br />While I can see where you're coming from (compilers sure do generate awful code sometimes), no, it really isn't.<br /><br />I'm talking about <a href="https://en.wikipedia.org/wiki/Static_program_analysis" class="postlink">static analysis</a>, the ability of a compiler to detect certain runtime behaviours at compile time. Even a straightforward <a href="https://en.wikipedia.org/wiki/Strong_and_weak_typing" class="postlink">strong type system</a> can keep you from accidentally adding feet to meters, for instance. C is really bad for this, as it has a handful of fixed types whose sizes aren't even exactly specified (Is an <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">int</tt> 16 or 32 bits? How about a <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">long</tt>?), doesn't allow you to define new ones (a <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">typedef</tt> is just an alias), will cheerfully allow you to store a value in a variable too small for it, silently discarding the high bits, and lets you put <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">==</tt> anywhere you can use <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">-</tt> (true story: I once wasted an entire day hunting for that typo in a 1000-line program).<br /><br />In this particular case, there's no reason you can't have your cake and eat it too - a strong type system in a low-level programming language will work just fine, since it doesn't affect the generated code at all. <a href="https://en.wikipedia.org/wiki/Rust_(programming_language)" class="postlink">Rust</a> takes things a step further and enforces compile-time memory safety - null pointers, uninitialized values, dangling pointers, double-frees and all those other hard-to-debug errors are completely prevented, with no runtime impact. The compiler simply checks that you've dotted all your eyes and crossed all your tees. That sort of thing is tedious and error-prone for humans, but is literally what computers were built for. As a programmer, why <em>wouldn't</em> you want to make the computer do your work for you? <img src="./images/smilies/icon_razz.gif" alt=":P" title="Razz" /><br /><br />Anyway, I'm derailing the thread. My point is, there are languages out there that go out of their way to tell you when you're doing something that's going to cause you grief later on, and those languages are much better introductions to programming than ones that don't - but that doesn't have to mean those languages are <em>only</em> for beginners. The <a href="https://en.wikipedia.org/wiki/Minecraft" class="postlink">second-best-selling game of all time</a> was written in Java, you know.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>FrankenGraphics</b> [ Mon Jan 29, 2018 5:16 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: What do schools have against teaching C?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Heck, as far as install base goes, it has even been (and is) commercially sound to learn ActionScript (the language of Adobe Flash &amp; AIR). Flash alone has 1,5 billion installations, it runs on every pc, modern console and mobile device, and games like angry birds and farmville speak for themselves in terms of economic viability. ActionScript via flash is also responsible for vast amounts of shovelware.  <img src="./images/smilies/icon_lol.gif" alt=":lol:" title="Laughing" /> While flash is rapidly becoming less significant as a web presence and is going to see discontinuation of development by 2020 at latest (in favor of HTML5), the more app- and game-oriented Adobe AIR is a more or less direct continuation, so ActionScript is still a valuable skill in some fields of the industry.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>4</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>