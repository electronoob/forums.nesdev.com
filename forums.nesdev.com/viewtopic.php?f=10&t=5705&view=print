<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Need coding help</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Need coding help</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=10&amp;t=5705">http://forums.nesdev.com/viewtopic.php?f=10&amp;t=5705</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>chmaster</b> [ Tue Nov 03, 2009 9:34 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Need coding help</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Can anyone kindly tell me how to code something like below, I just have no idea about how to.
<br />
<br />1. I would like to write a formula with some variables.
<br />For example:
<br />
<br />A = 10
<br />B = 5
<br />C = 3
<br />X = (A*0.6) + (B*0.2) + (C*0.3)
<br />Then I need the int from X to do some other calculations.
<br />
<br />2. Is there any way to get a random number from 0~9?
<br />It's so easy to do with javascript, but with 6502...no idea. <img src="./images/smilies/icon_redface.gif" alt=":oops:" title="Embarassed" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Anders_A</b> [ Wed Nov 04, 2009 7:59 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Writing assembly code is fundamentally different from using a high level language such as javascript.
<br />
<br />Multiplication and floating point numbers are not trivial at all on a processor like the 6502 which doesn't have a multiplication instruction and only handles 8 bit integers.
<br />
<br />I suggest starting with something simpler then implementing floating point numbers and multiplication to get the hang of assembly.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Wed Nov 04, 2009 8:00 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />In assembly you need to break up long expressions into individual operations and resolve them in order of precedence. In this case, you'd first solve the 3 multiplications, one at a time, and then add all the results.
<br />
<br />Might I ask why you are using fractional numbers in ASM? I ask because that introduces more complexity to your problem, because the CPU can't natively handle fractional numbers. And how much precision do you need for the fractional numbers? When I need to multiply by a number between 0 and 1, I usually scale that range up to 0 to 256 and drop the least significant byte of the product. For example, if I want to multiply 186 by 0.5:
<br />
<br />Since 1 scaled up is 256, 0.5 is 128;
<br />
<br />186 * 128 = 23808
<br />
<br />23808 / 256 (the equivalent of dropping the lsb) = 93;
<br />
<br />Indeed, 186 * 0.5 equals 93. Scaled up to 256, your fractions become 153.6, 51.2 and 76.8, respectively. Since these numbers have fractions as well, you'd have to round them in order to use the technique I described above. This is why I asked about the precision you need, because there will be small rounding errors.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Wed Nov 04, 2009 8:03 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Anders_A wrote:</div><div class="quotecontent">I suggest starting with something simpler then implementing floating point numbers and multiplication to get the hang of assembly.</div>
<br />I have to agree that this is somewhat complex for a first project in assembly. If you give more details about what you're trying to do, maybe we can think of a better way to do it, which you might not have considered because you're not familiar with assembly.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Wed Nov 04, 2009 9:51 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Well in his case it seems he seems to compute a pondered average or something like that. In that case, to get more precision and avoid dealing with fractional number, just add up 6 times A, 2 times B, 3 times C, and divide the result by 10.
<br />
<br />Multiplication and divisions by integers can be done by writing a loop that does it in column like you (probably) leared to do it at scool. If those integers are constant, it makes it easy as you can use "hard coded" shifts and add/substract in your code. (for example to multiply by 3 you shift left once and add with the original, as 2+1 = 3).
<br />
<br />I guess I posted some examples on the wiki a while back I don't know if they're still there they could make you some exemple, but they were meant to multiply or divide two variables, without the "hard coded" shorcut.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>chmaster</b> [ Wed Nov 04, 2009 10:04 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />First, I want to thank everyone who is so kind to reply. <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /> 
<br />tokumaru and Bregalad's suggestions are very nice. Now I'm thinking.
<br />
<br />Yes, I should tell what I'm trying to do. That'll be better.
<br />
<br />It's just the attacking damage formula.
<br />For example:
<br />
<br />1. damage = (STR*0.5) + (DEX*0.2) + (CON*0.1) + (A random from 0~5)
<br />2. If attacker = warrior, and defender = elf, then damage*1.3
<br />
<br />I try to keep the number as small as possible because as Anders_A said, it's only 8bit. I think smaller number can be handled more easily. But if there's another way to do it, I'll take it, too.
<br />
<br />These are the basic ideas. It doesn't have to be exactly the same. Now I'm still working on my game plan. When I come up with something, I try to think if I can make it with 6502. If not, I change my plan.
<br />
<br />And how to divide by 10 as Bregalad said?
<br />Where is the example on the wiki? Can give me the url please? Thank you.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Rid</b> [ Wed Nov 04, 2009 10:31 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Here it is : <a href="http://wiki.nesdev.com/w/index.php/8-bit_Divide" class="postlink">8-bit Divide</a>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dwedit</b> [ Wed Nov 04, 2009 11:54 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />If you use fractions of powers of 2 close to the numbers (1/2, 1/4, 1/8, 1/16, etc), you can do it much easier.
<br />
<br />For instance:
<br />damage = (STR*0.5) + (DEX*0.25) + (CON*0.125) + (A random from 0~5) 
<br />would be much easier to calculate since you can use right shifts instead of division.  But if you don't want DEX / 4 to be truncated, you need to use fixed point math.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Wed Nov 04, 2009 3:32 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Dwedit wrote:</div><div class="quotecontent">If you use fractions of powers of 2 close to the numbers (1/2, 1/4, 1/8, 1/16, etc), you can do it much easier.</div>
<br />This is why it's better that we know the whole picture. What you want to do is something common in games, but the way you wanted to do it at first is not very friendly to 8-bit processors.
<br />
<br />I'd do what Dwedit said and work with the powers of two. If for some reason you don't want to make the fractions powers of two, at least make them all fractions of a power of 2 (such as 16 or 256), instead of 10, so that the final division that Bregalad suggested can be replaced with shifts. Although the 6502 lacks multiplication and division, multiplications are easier to code.
<br />
<br />Regerding random numbers, take a look at this: <a href="http://en.wikipedia.org/wiki/Linear_feedback_shift_register" class="postlink">http://en.wikipedia.org/wiki/Linear_feedback_shift_register</a>
<br />
<br />The NES doesn't have a built-in way of generating random numbers, or any register/location that is random enough to serve as the source of one, so you have to code your own <strong>pseudorandom number generator (PRNG)</strong>. Luckly, this has been done a lot before and you gan probably get good results by searching for "6502 PRNG" on google.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Wed Nov 04, 2009 7:21 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />If you want to use a ready-made pseudorandom number generator based on a linear feedback shift register, there's one in <a href="http://lj65.org/" class="postlink">LJ65</a> that I'll let you use. But be advised that LFSRs prefer ranges that are a power of two in size: coin flip, d4, d8, d16, etc. There are hacky ways of working around this, involving subtle manipulation of probabilities that a casual player will not notice.
<br />
<br />On one of the Tetris fan forums there was a discussion about the PRNGs in classic Tetris games. Ideally, a pre-2001 Tetris game would roll a d7 to determine which tetromino to send out next. Someone noticed that in Tetris for Game Boy, immediate repeats happen less often than they would with a d7. I suggested that it might use a d32: 0-4 go to next piece, 5-9 go to the piece after that, ..., 25-29 go 6 pieces ahead, 30-31 use the same piece.
<br />
<br />Early versions of LJ65 rolled a d8 and mapped 0-6 to I,J,L,O,S,T,Z. It kept a counter of what piece to send out when it rolled a 7 and incremented that every time; the comments called it "possession arrow" logic, after the rule in NCAA basketball that corresponds to jump balls in NBA basketball.
<br />
<br />Sometime in the 0.3x series, I changed LJ65 to store the seven pieces sorted by how recent they are, and then roll a d4 to choose one of the four least recent.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Thu Nov 05, 2009 1:37 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"> If for some reason you don't want to make the fractions powers of two, at least make them all fractions of a power of 2</div><br />Huh, was this supposed to make any sense ?<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Although the 6502 lacks multiplication and division, multiplications are easier to code.</div>
<br />No the NES don't lack multiplication and division, you just have to code them all by yourself. And again it's not easier to avoid multiplication or division, doing them is NOT HARD AT ALL.
<br />
<br />Just take a sheet of paper, do the division manually, and then code an algorithm that does the same on a computer... the fact there is only '0' and '1' to deal with makes it much simpler than doing it with all digits '0' to '9'.
<br />
<br />You'd want to use power of 2 if you care about speed or size of the code, but else I don't see an issue. Since you typically compute damage once in a while, and don't do it like 20 times per frame, I don't see any need for more speed in the calculations.
<br />
<br />As for random number generator, as far I know there is 3 techniques arround :
<br />- Use a value captured from a counter that increments much faster than the rate you capture it (for example it increments every frame but you only read it ocasionally). Not applicable if you need random numbers at high rate
<br />
<br />- The shift register with feedback technique, which tepples described and which is used for the noise channel. This will give you a predictable random sequence with a fixed lenght before it repeats.
<br />
<br />- The multiply, add and tuncate to lower n bits technique. Different multipliers and adders gives you a different amount of random numbers before they repeat, the larger the better.
<br />
<br />These techniques will typically give you a random number between 0 and 255. It's not too hard to make it act like a random number of another range using AND operations, or divisions.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Thu Nov 05, 2009 9:46 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent"><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"> If for some reason you don't want to make the fractions powers of two, at least make them all fractions of a power of 2</div><br />Huh, was this supposed to make any sense ?</div><br />Instead of using 1/10, 2/10 or whatever, use 1/16, 2/16, etc. This will give you more possibilities than using only powers of two but still doesn't need a division in the end.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">No the NES don't lack multiplication and division, you just have to code them all by yourself.</div><br />Are you just picking on me today for fun? If a function has to be coded by a person it isn't built-in the processor. By your logic, I can say that the 6502 doesn't lack Super Mario Brothers, I just have to code it myself. WTF, how much sense does that make? The processor doesn't have MUL/DIV instructions as much as it doesn't have an SMB instruction.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">And again it's not easier to avoid multiplication or division, doing them is NOT HARD AT ALL.</div>
<br />Certainly not hard for you or for me, but for someone that's used to working with JavaScript it might be. And even if it isn't, it's slow enough to be used for something as simple as calculating damage.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Thu Nov 05, 2009 2:55 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Instead of using 1/10, 2/10 or whatever, use 1/16, 2/16, etc. This will give you more possibilities than using only powers of two but still doesn't need a division in the end.</div><br />Well I was just pointing out that you said, probably by error, if you don't make them power of two make them power of two which sounds like a paradox to me. Not a big deal tough, mistake is human.<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Are you just picking on me today for fun?</div><br />Yes :p<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">If a function has to be coded by a person it isn't built-in the processor. By your logic, I can say that the 6502 doesn't lack Super Mario Brothers, I just have to code it myself. WTF, how much sense does that make? The processor doesn't have MUL/DIV instructions as much as it doesn't have an SMB instruction.</div>
<br />Well, in short the 6502 isn't limited in calculations or algorithms, it is only limited in speed. I've read too much times (not only this particular one) that the 6502 wasn't able to mulitply or divide, which is wrong, it's just that he doesn't have dedicated instructions. Some RISC processors have much less dedicated instructions for stuff than the 6502 does, and yet they aren't any less powerful, on the other side it makes it uses less transitors so it can have a higher clock.
<br />
<br />PS : Computing damage isn't always "simple". If you have a complex RPG, a complex damage forumula can be the key to make the game balanced and enjoyable. Too many RPGs, especially in the early days, have been ruined by the lack of balance. On the other side I guess all Fire Emblem games, even modern ones, always used a simple linear formula (attack - defense) for damage, and they managed to make it work well.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Thu Nov 05, 2009 3:31 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">Well I was just pointing out that you said, probably by error, if you don't make them power of two make them power of two which sounds like a paradox to me.</div><br />I read it again and there was no error it was just badly written and difficult to read. I said that if he can't turn his fractions into <strong>powers of two</strong>, then he should turn the fractions into <strong>fractions of powers of two</strong>. As in: if the fractions themselves are not powers of two, they could at least be fractions of numbers that are, which is easier than handling them as fractions of 10. Got it?<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Are you just picking on me today for fun?</div><br />Yes :p</div><br />Thought so.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">the 6502 isn't limited in calculations or algorithms, it is only limited in speed.</div><br />That's a lame thing to say about the 6502 in particular, because this is true for every freaking processor ever created. All of them can do any task, some at the expense of more time and space. Don't you agree?<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I've read too much times (not only this particular one) that the 6502 wasn't able to mulitply or divide, which is wrong, it's just that he doesn't have dedicated instructions.</div><br />Well, we have to differentiate the processors somehow. If all of them can do everything there isn't much left to talk about, right? Anyway, saying "it doesn't have dedicated instructions" is exactly the same as saying "it lacks multiplication and division", you're just being picky for the heck of it.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Computing damage isn't always "simple". If you have a complex RPG, a complex damage forumula can be the key to make the game balanced and enjoyable.</div>
<br />I won't say anything else about this because RPG's are really not my thing, so I'll just leave this to you guys.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Thu Nov 05, 2009 3:43 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent"><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">the 6502 isn't limited in calculations or algorithms, it is only limited in speed.</div><br />That's a lame thing to say about the 6502 in particular, because this is true for every freaking processor ever created. All of them can do any task, some at the expense of more time and space. Don't you agree?</div>
<br />Yes, but some CPUs are more limited than others. Someone experienced in developing AJAX apps to run on modern JavaScript engines on modern budget subnotebook computers (like the Eee PC I'm typing this into) might have trouble adjusting to the significantly slower floating-point arithmetic on an Apple II, Commodore 64, or NES.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>