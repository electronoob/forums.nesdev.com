<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" dir="ltr" lang="en-gb" xml:lang="en-gb">
<head>

<link rel="icon" href="/favicon.ico" type="image/x-icon" />
<link rel="shortcut icon" href="/favicon.ico" type="image/x-icon" />
<meta http-equiv="content-type" content="text/html; charset=UTF-8" />
<meta http-equiv="content-language" content="en-gb" />
<meta http-equiv="content-style-type" content="text/css" />
<meta http-equiv="imagetoolbar" content="no" />
<meta name="resource-type" content="document" />
<meta name="distribution" content="global" />
<meta name="keywords" content="" />
<meta name="description" content="" />

<title>nesdev.com &bull; View topic - 6502 CPU emu SBC bug, and question about page-crossing</title>

<link rel="alternate" type="application/atom+xml" title="Feed - nesdev.com" href="http://forums.nesdev.com/feed.php" /><link rel="alternate" type="application/atom+xml" title="Feed - News" href="http://forums.nesdev.com/feed.php?mode=news" /><link rel="alternate" type="application/atom+xml" title="Feed - All forums" href="http://forums.nesdev.com/feed.php?mode=forums" /><link rel="alternate" type="application/atom+xml" title="Feed - New Topics" href="http://forums.nesdev.com/feed.php?mode=topics" /><link rel="alternate" type="application/atom+xml" title="Feed - Active Topics" href="http://forums.nesdev.com/feed.php?mode=topics_active" /><link rel="alternate" type="application/atom+xml" title="Feed - Forum - NESemdev" href="http://forums.nesdev.com/feed.php?f=3" /><link rel="alternate" type="application/atom+xml" title="Feed - Topic - 6502 CPU emu SBC bug, and question about page-crossing" href="http://forums.nesdev.com/feed.php?f=3&amp;t=8223" />

<link rel="stylesheet" href="./style.php?id=1&amp;lang=en" type="text/css" />

<script type="text/javascript">
// <![CDATA[


function popup(url, width, height, name)
{
	if (!name)
	{
		name = '_popup';
	}

	window.open(url.replace(/&amp;/g, '&'), name, 'height=' + height + ',resizable=yes,scrollbars=yes,width=' + width);
	return false;
}

function jumpto()
{
	var page = prompt('Enter the page number you wish to go to:', '1');
	var per_page = '';
	var base_url = '';

	if (page !== null && !isNaN(page) && page == Math.floor(page) && page > 0)
	{
		if (base_url.indexOf('?') == -1)
		{
			document.location.href = base_url + '?start=' + ((page - 1) * per_page);
		}
		else
		{
			document.location.href = base_url.replace(/&amp;/g, '&') + '&start=' + ((page - 1) * per_page);
		}
	}
}

/**
* Find a member
*/
function find_username(url)
{
	popup(url, 760, 570, '_usersearch');
	return false;
}

/**
* Mark/unmark checklist
* id = ID of parent container, name = name prefix, state = state [true/false]
*/
function marklist(id, name, state)
{
	var parent = document.getElementById(id);
	if (!parent)
	{
		eval('parent = document.' + id);
	}

	if (!parent)
	{
		return;
	}

	var rb = parent.getElementsByTagName('input');
	
	for (var r = 0; r < rb.length; r++)
	{
		if (rb[r].name.substr(0, name.length) == name)
		{
			rb[r].checked = state;
		}
	}
}



// ]]>
</script>
</head>
<body class="ltr">

<a name="top"></a>

<div id="wrapheader">

	<div id="logodesc">
	</div>

	<div id="menubar">

		<table width="100%" cellspacing="0">
		<tr>
			<td rowspan="2"><a href="./index.php"><img src="./styles/subsilver2/imageset/site_logo.gif" alt="" title="" /></a></td>
			<td width="100%" align="center"><h1>nesdev.com</h1><span class="gen">NES Development and Strangulation Records message boards</span></td>
		</tr>
		<tr>
			<td align="center">
				<a href="./faq.php"><img src="./styles/prosilver/theme/images/icon_mini_faq.gif" width="12" height="13" alt="*" /> FAQ</a>
				&nbsp; &nbsp;<a href="./search.php"><img src="./styles/prosilver/theme/images/icon_mini_search.gif" width="12" height="13" alt="*" /> Search</a>
				<br />	
				 &nbsp;<a href="./ucp.php?mode=register"><img src="./styles/prosilver/theme/images/icon_mini_register.gif" width="12" height="13" alt="*" /> Register</a>
					&nbsp; &nbsp;<a href="./ucp.php?mode=login"><img src="./styles/prosilver/theme/images/icon_mini_login.gif" width="12" height="13" alt="*" /> Login</a>&nbsp;
			</td>
		</tr>
		</table>
	</div>

	<div id="datebar">
		<table width="100%" cellspacing="0">
		<tr>
			<td class="gensmall"></td>
			<td class="gensmall" align="right">It is currently Thu Aug 30, 2012 11:11 am<br /></td>
		</tr>
		</table>
	</div>

</div>

<div id="wrapcentre">

	
	<p class="searchbar">
		<span style="float: left;"><a href="./search.php?search_id=unanswered">View unanswered posts</a> | <a href="./search.php?search_id=active_topics">View active topics</a></span>
		
	</p>
	

	<br style="clear: both;" />

	<table class="tablebg" width="100%" cellspacing="1" cellpadding="0" style="margin-top: 5px;">
	<tr>
		<td class="row1">
			<p class="breadcrumbs"><a href="./index.php">Board index</a> &#187; <a href="./viewforum.php?f=24">NES / Famicom</a> &#187; <a href="./viewforum.php?f=3">NESemdev</a></p>
			<p class="datetime">All times are UTC - 7 hours </p>
		</td>
	</tr>
	</table>

	<br />

<div id="pageheader">
	<h2><a class="titles" href="./viewtopic.php?f=3&amp;t=8353">6502 CPU emu SBC bug, and question about page-crossing</a></h2>


	<p class="moderators">Moderator: <a href="./memberlist.php?mode=group&amp;g=320">Moderators</a></p>

</div>

<br clear="all" /><br />

<div id="pagecontent">

	<table width="100%" cellspacing="1">
	<tr>
		<td align="left" valign="middle" nowrap="nowrap">
		<a href="./posting.php?mode=post&amp;f=3"><img src="./styles/subsilver2/imageset/en/button_topic_new.gif" alt="Post new topic" title="Post new topic" /></a>&nbsp;<a href="./posting.php?mode=reply&amp;f=3&amp;t=8353"><img src="./styles/subsilver2/imageset/en/button_topic_reply.gif" alt="Reply to topic" title="Reply to topic" /></a>
		</td>
		
			<td class="nav" valign="middle" nowrap="nowrap">&nbsp;Page <strong>1</strong> of <strong>1</strong><br /></td>
			<td class="gensmall" nowrap="nowrap">&nbsp;[ 12 posts ]&nbsp;</td>
			<td class="gensmall" width="100%" align="right" nowrap="nowrap"></td>
		
	</tr>
	</table>

	<table class="tablebg" width="100%" cellspacing="1">
	<tr>
		<td class="cat">
			<table width="100%" cellspacing="0">
			<tr>
				<td class="nav" nowrap="nowrap">&nbsp;
				<a href="./viewtopic.php?f=3&amp;t=8353&amp;view=print" title="Print view">Print view</a>
				</td>
				<td class="nav" align="right" nowrap="nowrap"><a href="./viewtopic.php?f=3&amp;t=8353&amp;view=previous">Previous topic</a> | <a href="./viewtopic.php?f=3&amp;t=8353&amp;view=next">Next topic</a>&nbsp;</td>
			</tr>
			</table>
		</td>
	</tr>

	</table>


	<table class="tablebg" width="100%" cellspacing="1">
	
		<tr>
			<th>Author</th>
			<th>Message</th>
		</tr>
	<tr class="row1">

			<td align="center" valign="middle">
				<a name="p86725"></a>
				<b class="postauthor">miker00lz</b>
			</td>
			<td width="100%" height="25">
				<table width="100%" cellspacing="0">
				<tr>
				
					<td class="gensmall" width="100%"><div style="float: left;">&nbsp;<b>Post subject:</b> <a href="#p86725">6502 CPU emu SBC bug, and question about page-crossing</a></div><div style="float: right;"><a href="./viewtopic.php?p=86725#p86725"><img src="./styles/subsilver2/imageset/icon_post_target.gif" width="12" height="9" alt="Post" title="Post" /></a><b>Posted:</b> Wed Nov 23, 2011 5:06 pm&nbsp;</div></td>
				</tr>
				</table>
			</td>
		</tr>

		<tr class="row1">

			<td valign="top" class="profile">
				<table cellspacing="4" align="center" width="150">
			
				<tr>
					<td><img src="./styles/subsilver2/imageset/en/icon_user_offline.gif" alt="Offline" title="Offline" /></td>
				</tr>
			
				<tr>
					<td><img src="./download/file.php?avatar=4572.png" width="100" height="100" alt="User avatar" /></td>
				</tr>
			
				</table>

				<span class="postdetails">
					<br /><b>Joined:</b> Thu Sep 23, 2010 7:28 pm<br /><b>Posts:</b> 145
				</span>

			</td>
			<td valign="top">
				<table width="100%" cellspacing="5">
				<tr>
					<td>
					

						<div class="postbody">hi, all. over the last couple days i decided to remove Neil Bradley's 6502 core out of my NES emulator, because it's always bugged me that i didn't write one myself for it. (plus his had a few small bugs)
<br />
<br />so, anyway i've been writing it, and it's coming along great - BUT, for some reason everything involving SBC fails in nestest.nes - i am also supporting all undocumented opcodes possible, and those that need SBC also fail the test.
<br />
<br />
<br />
<br />screenshot of my 6502 core running the main tests:
<br />
<br /><img src="http://rubbermallet.org/moarnes-nestest1.png" alt="Image" />
<br />
<br />
<br />and the undocumented tests:
<br />
<br /><img src="http://rubbermallet.org/moarnes-nestest2.png" alt="Image" />
<br />
<br />
<br />
<br />according to the documentation for nestest.nes, all of those error codes on the main tests indicate "SBC failure", and the two undocumented ones that fail use SBC. so, clearly something is not right in my SBC code.
<br />
<br />this is from my source code:
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">static void *sbc&#40;&#41; &#123;<br />&nbsp; &nbsp; value = getvalue&#40;&#41; + &#40;uint16_t&#41;&#40;status &amp; FLAG_CARRY&#41;;<br />&nbsp; &nbsp; result = &#40;uint16_t&#41;a - value;<br />&nbsp; &nbsp; <br />&nbsp; &nbsp; carrycalc&#40;result&#41;;<br />&nbsp; &nbsp; zerocalc&#40;result&#41;;<br />&nbsp; &nbsp; overflowcalc&#40;result, a, value&#41;;<br />&nbsp; &nbsp; signcalc&#40;result&#41;;<br />&nbsp; &nbsp; <br />&nbsp; &nbsp; saveaccum&#40;result&#41;;<br />&#125;<br /></div><br /><br /><br />here is the code to the macros it uses:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">#define zerocalc&#40;n&#41; &#123;\<br />&nbsp; &nbsp; if &#40;&#40;n&#41; &amp; 0x00FF&#41; clearzero&#40;&#41;;\<br />&nbsp; &nbsp; &nbsp; &nbsp; else setzero&#40;&#41;;\<br />&#125;<br /><br />#define signcalc&#40;n&#41; &#123;\<br />&nbsp; &nbsp; if &#40;&#40;n&#41; &amp; 0x0080&#41; setsign&#40;&#41;;\<br />&nbsp; &nbsp; &nbsp; &nbsp; else clearsign&#40;&#41;;\<br />&#125;<br /><br />#define carrycalc&#40;n&#41; &#123;\<br />&nbsp; &nbsp; if &#40;&#40;n&#41; &amp; 0xFF00&#41; setcarry&#40;&#41;;\<br />&nbsp; &nbsp; &nbsp; &nbsp; else clearcarry&#40;&#41;;\<br />&#125;<br /><br />#define overflowcalc&#40;n, m, o&#41; &#123; /* n = result, m = accumulator, o = memory */ \<br />&nbsp; &nbsp; if &#40;&#40;&#40;n&#41; ^ &#40;uint16_t&#41;&#40;m&#41;&#41; &amp; &#40;&#40;n&#41; ^ &#40;o&#41;&#41; &amp; 0x0080&#41; setoverflow&#40;&#41;;\<br />&nbsp; &nbsp; &nbsp; &nbsp; else clearoverflow&#40;&#41;;\<br />&#125;<br /><br />#define saveaccum&#40;n&#41; a = &#40;uint8_t&#41;&#40;&#40;n&#41; &amp; 0x00FF&#41;<br /></div><br /><br />i assume those macros are fine, since they work correctly for all other opcodes.<br /><br />for the record, this is what my code for the undocumented ISB instruction looks like:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">static void *isb&#40;&#41; &#123;<br />&nbsp; &nbsp; *inc&#40;&#41;;<br />&nbsp; &nbsp; *sbc&#40;&#41;;<br />&#125;<br /></div>
<br />
<br />does anybody see what the SBC issue could be? thanks!
<br />
<br />
<br />my other question was simply about adding clock ticks when page boundaries are crossed. what are the cases where i would add a cycle to the total? is it just when indirect addressing mode calculations read data across a boundary, or is it also when the PC register increments past a boundary?
<br />
<br />i want everything, including timings to be flawless, i plan to release the source for other emu authors to use once i've squashed these issues. i know there are a lot out there, but one more can't hurt right? i think most have bugs anyway.</div>

					<br clear="all" /><br />

						<table width="100%" cellspacing="0">
						<tr valign="middle">
							<td class="gensmall" align="right">
							
							</td>
						</tr>
						</table>
					</td>
				</tr>
				</table>
			</td>
		</tr>

		<tr class="row1">

			<td class="profile"><strong><a href="#wrapheader">Top</a></strong></td>
			<td><div class="gensmall" style="float: left;">&nbsp;<a href="./memberlist.php?mode=viewprofile&amp;u=4572"><img src="./styles/subsilver2/imageset/en/icon_user_profile.gif" alt="Profile" title="Profile" /></a> &nbsp;</div> <div class="gensmall" style="float: right;">&nbsp;</div></td>
	
		</tr>

	<tr>
		<td class="spacer" colspan="2" height="1"><img src="images/spacer.gif" alt="" width="1" height="1" /></td>
	</tr>
	</table>

	<table class="tablebg" width="100%" cellspacing="1">
	<tr class="row2">

			<td align="center" valign="middle">
				<a name="p86730"></a>
				<b class="postauthor" style="color: #AA0000">tepples</b>
			</td>
			<td width="100%" height="25">
				<table width="100%" cellspacing="0">
				<tr>
				
					<td class="gensmall" width="100%"><div style="float: left;">&nbsp;<b>Post subject:</b> <a href="#p86730"></a></div><div style="float: right;"><a href="./viewtopic.php?p=86730#p86730"><img src="./styles/subsilver2/imageset/icon_post_target.gif" width="12" height="9" alt="Post" title="Post" /></a><b>Posted:</b> Wed Nov 23, 2011 5:37 pm&nbsp;</div></td>
				</tr>
				</table>
			</td>
		</tr>

		<tr class="row2">

			<td valign="top" class="profile">
				<table cellspacing="4" align="center" width="150">
			
				<tr>
					<td><img src="./styles/subsilver2/imageset/en/icon_user_offline.gif" alt="Offline" title="Offline" /></td>
				</tr>
			
				<tr>
					<td><img src="http://pineight.com/nes/terrible/PSRFX.png" width="100" height="56" alt="User avatar" /></td>
				</tr>
			
				</table>

				<span class="postdetails">
					<br /><b>Joined:</b> Sun Sep 19, 2004 11:12 pm<br /><b>Posts:</b> 9046<br /><b>Location:</b> NE Indiana, USA (NTSC)
				</span>

			</td>
			<td valign="top">
				<table width="100%" cellspacing="5">
				<tr>
					<td>
					

						<div class="postbody">If ADC works perfectly, then you can implement SBC by copying your ADC code and then just XORing the byte retrieved from memory with 0xFF. May I see your ADC code?</div>

					<br clear="all" /><br />

						<table width="100%" cellspacing="0">
						<tr valign="middle">
							<td class="gensmall" align="right">
							
							</td>
						</tr>
						</table>
					</td>
				</tr>
				</table>
			</td>
		</tr>

		<tr class="row2">

			<td class="profile"><strong><a href="#wrapheader">Top</a></strong></td>
			<td><div class="gensmall" style="float: left;">&nbsp;<a href="./memberlist.php?mode=viewprofile&amp;u=9"><img src="./styles/subsilver2/imageset/en/icon_user_profile.gif" alt="Profile" title="Profile" /></a> &nbsp;</div> <div class="gensmall" style="float: right;">&nbsp;</div></td>
	
		</tr>

	<tr>
		<td class="spacer" colspan="2" height="1"><img src="images/spacer.gif" alt="" width="1" height="1" /></td>
	</tr>
	</table>

	<table class="tablebg" width="100%" cellspacing="1">
	<tr class="row1">

			<td align="center" valign="middle">
				<a name="p86732"></a>
				<b class="postauthor">miker00lz</b>
			</td>
			<td width="100%" height="25">
				<table width="100%" cellspacing="0">
				<tr>
				
					<td class="gensmall" width="100%"><div style="float: left;">&nbsp;<b>Post subject:</b> <a href="#p86732"></a></div><div style="float: right;"><a href="./viewtopic.php?p=86732#p86732"><img src="./styles/subsilver2/imageset/icon_post_target.gif" width="12" height="9" alt="Post" title="Post" /></a><b>Posted:</b> Wed Nov 23, 2011 5:57 pm&nbsp;</div></td>
				</tr>
				</table>
			</td>
		</tr>

		<tr class="row1">

			<td valign="top" class="profile">
				<table cellspacing="4" align="center" width="150">
			
				<tr>
					<td><img src="./styles/subsilver2/imageset/en/icon_user_offline.gif" alt="Offline" title="Offline" /></td>
				</tr>
			
				<tr>
					<td><img src="./download/file.php?avatar=4572.png" width="100" height="100" alt="User avatar" /></td>
				</tr>
			
				</table>

				<span class="postdetails">
					<br /><b>Joined:</b> Thu Sep 23, 2010 7:28 pm<br /><b>Posts:</b> 145
				</span>

			</td>
			<td valign="top">
				<table width="100%" cellspacing="5">
				<tr>
					<td>
					

						<div class="postbody"><div class="quotetitle">tepples wrote:</div><div class="quotecontent">If ADC works perfectly, then you can implement SBC by copying your ADC code and then just XORing the byte retrieved from memory with 0xFF. May I see your ADC code?</div>
<br />
<br />ah, yeah that makes sense! that worked! this is my ADC:
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">static void *adc&#40;&#41; &#123;<br />&nbsp; &nbsp; value = &#40;uint16_t&#41;read6502&#40;ea&#41;;<br />&nbsp; &nbsp; result = &#40;uint16_t&#41;a + value + &#40;uint16_t&#41;&#40;status &amp; FLAG_CARRY&#41;;<br />&nbsp; &nbsp; <br />&nbsp; &nbsp; carrycalc&#40;result&#41;;<br />&nbsp; &nbsp; zerocalc&#40;result&#41;;<br />&nbsp; &nbsp; overflowcalc&#40;result, a, value&#41;;<br />&nbsp; &nbsp; signcalc&#40;result&#41;;<br />&nbsp; &nbsp; <br />&nbsp; &nbsp; saveaccum&#40;result&#41;;<br />&#125;<br /></div>
<br />
<br />now SBC works fine, but i'm getting one error still on the nestest.nes ROM. i get error $59 on the "(indirect,X)" tests, which translates to:
<br />
<br />"059h - STA didn't store the data where it was supposed to"
<br />
<br />other than that, all seems well.</div>

					<br clear="all" /><br />

						<table width="100%" cellspacing="0">
						<tr valign="middle">
							<td class="gensmall" align="right">
							
							</td>
						</tr>
						</table>
					</td>
				</tr>
				</table>
			</td>
		</tr>

		<tr class="row1">

			<td class="profile"><strong><a href="#wrapheader">Top</a></strong></td>
			<td><div class="gensmall" style="float: left;">&nbsp;<a href="./memberlist.php?mode=viewprofile&amp;u=4572"><img src="./styles/subsilver2/imageset/en/icon_user_profile.gif" alt="Profile" title="Profile" /></a> &nbsp;</div> <div class="gensmall" style="float: right;">&nbsp;</div></td>
	
		</tr>

	<tr>
		<td class="spacer" colspan="2" height="1"><img src="images/spacer.gif" alt="" width="1" height="1" /></td>
	</tr>
	</table>

	<table class="tablebg" width="100%" cellspacing="1">
	<tr class="row2">

			<td align="center" valign="middle">
				<a name="p86740"></a>
				<b class="postauthor">miker00lz</b>
			</td>
			<td width="100%" height="25">
				<table width="100%" cellspacing="0">
				<tr>
				
					<td class="gensmall" width="100%"><div style="float: left;">&nbsp;<b>Post subject:</b> <a href="#p86740"></a></div><div style="float: right;"><a href="./viewtopic.php?p=86740#p86740"><img src="./styles/subsilver2/imageset/icon_post_target.gif" width="12" height="9" alt="Post" title="Post" /></a><b>Posted:</b> Wed Nov 23, 2011 11:15 pm&nbsp;</div></td>
				</tr>
				</table>
			</td>
		</tr>

		<tr class="row2">

			<td valign="top" class="profile">
				<table cellspacing="4" align="center" width="150">
			
				<tr>
					<td><img src="./styles/subsilver2/imageset/en/icon_user_offline.gif" alt="Offline" title="Offline" /></td>
				</tr>
			
				<tr>
					<td><img src="./download/file.php?avatar=4572.png" width="100" height="100" alt="User avatar" /></td>
				</tr>
			
				</table>

				<span class="postdetails">
					<br /><b>Joined:</b> Thu Sep 23, 2010 7:28 pm<br /><b>Posts:</b> 145
				</span>

			</td>
			<td valign="top">
				<table width="100%" cellspacing="5">
				<tr>
					<td>
					

						<div class="postbody">ok, so yeah here's where i'm at...
<br />
<br /><img src="http://rubbermallet.org/moarnes-nestest3.png" alt="Image" /> <img src="http://rubbermallet.org/moarnes-nestest4.png" alt="Image" />
<br />
<br />(Indirect,X) test error: "059h - STA didn't store the data where it was supposed to"
<br />
<br />i don't understand why there's a problem here. i am just going to paste all of the CPU emu code so you can see everything in context. it's very easy to read i think.
<br />
<br />all of the functions for the various opcodes are in alphabetical order. functions to calculate effective addresses for the different addressing modes are near the top. opcodes start after it.
<br />
<br />
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">/* Fake6502 CPU emulator core v1.0 *******************<br />&nbsp;* &#40;c&#41;2011 Mike Chambers &#40;miker00lz@gmail.com&#41;&nbsp; &nbsp; &nbsp; &nbsp;*<br />&nbsp;*****************************************************<br />&nbsp;* v1.0 - First release &#40;Nov. 24, 2011&#41;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; *<br />&nbsp;*****************************************************<br />&nbsp;* Usage:&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; *<br />&nbsp;*&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;*<br />&nbsp;* Fake6502 requires you to provide two external&nbsp; &nbsp; &nbsp;*<br />&nbsp;* functions:&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; *<br />&nbsp;*&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;*<br />&nbsp;* uint8_t read6502&#40;uint16_t address&#41;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; *<br />&nbsp;* void write6502&#40;uint16_t address, uint8_t value&#41;&nbsp; &nbsp;*<br />&nbsp;*&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;*<br />&nbsp;* You may optionally pass Fake6502 the pointer to a *<br />&nbsp;* function which you want to be called after every&nbsp; *<br />&nbsp;* emulated instruction. This function should be a&nbsp; &nbsp;*<br />&nbsp;* void with no parameters expected to be passed to&nbsp; *<br />&nbsp;* it. This can be very useful. For example, in a&nbsp; &nbsp; *<br />&nbsp;* NES emulator, you check the number of clock ticks *<br />&nbsp;* that have passed so you can know when to handle&nbsp; &nbsp;*<br />&nbsp;* APU events.&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;*<br />&nbsp;*&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;*<br />&nbsp;* To pass Fake6502 this pointer, use the&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; *<br />&nbsp;* hookexternal&#40;void *funcptr&#41; function provided.&nbsp; &nbsp; *<br />&nbsp;*&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;*<br />&nbsp;* To disable the hook later, pass NULL to it.&nbsp; &nbsp; &nbsp; &nbsp;*<br />&nbsp;*****************************************************<br />&nbsp;* Useful functions in this emulator:&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; *<br />&nbsp;*&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;*<br />&nbsp;* void reset6502&#40;&#41;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; *<br />&nbsp;*&nbsp; &nbsp;- Call this once before you begin execution.&nbsp; &nbsp; *<br />&nbsp;*&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;*<br />&nbsp;* void exec6502&#40;uint32_t tickcount&#41;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;*<br />&nbsp;*&nbsp; &nbsp;- Execute 6502 code up to the next specified&nbsp; &nbsp; *<br />&nbsp;*&nbsp; &nbsp; &nbsp;count of clock ticks.&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;*<br />&nbsp;*&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;*<br />&nbsp;* void irq6502&#40;&#41;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; *<br />&nbsp;*&nbsp; &nbsp;- Trigger a hardware IRQ in the 6502 core.&nbsp; &nbsp; &nbsp; *<br />&nbsp;*&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;*<br />&nbsp;* void nmi6502&#40;&#41;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; *<br />&nbsp;*&nbsp; &nbsp;- Trigger an NMI in the 6502 core.&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; *<br />&nbsp;*&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;*<br />&nbsp;* void hookexternal&#40;void *funcptr&#41;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; *<br />&nbsp;*&nbsp; &nbsp;- Pass a pointer to a void function taking no&nbsp; &nbsp;*<br />&nbsp;*&nbsp; &nbsp; &nbsp;parameters. This will cause Fake6502 to call&nbsp; *<br />&nbsp;*&nbsp; &nbsp; &nbsp;that function once after each emulated&nbsp; &nbsp; &nbsp; &nbsp; *<br />&nbsp;*&nbsp; &nbsp; &nbsp;instruction.&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; *<br />&nbsp;*&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;*<br />&nbsp;*****************************************************<br />&nbsp;* Useful variables in this emulator:&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; *<br />&nbsp;*&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;*<br />&nbsp;* uint32_t clockticks6502&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;*<br />&nbsp;*&nbsp; &nbsp;- A running total of the emulated cycle count.&nbsp; *<br />&nbsp;*&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;*<br />&nbsp;* uint32_t instructions&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;*<br />&nbsp;*&nbsp; &nbsp;- A running total of the total emulated&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;*<br />&nbsp;*&nbsp; &nbsp; &nbsp;instruction count. This is not related to&nbsp; &nbsp; &nbsp;*<br />&nbsp;*&nbsp; &nbsp; &nbsp;clock cycle timing.&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;*<br />&nbsp;*&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;*<br />&nbsp;*****************************************************/<br /><br />#include &lt;stdio.h&gt;<br />#include &lt;stdint.h&gt;<br /><br />//6502 defines<br />#define UNDOCUMENTED //when this is defined, undocumented opcodes are handled.<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;//otherwise, they're simply treated as NOPs.<br /><br />#define NES_CPU&nbsp; &nbsp; &nbsp; //when this is defined, the binary-coded decimal &#40;BCD&#41;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;//status flag is not honored by ADC and SBC. the 2A03<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;//CPU in the Nintendo Entertainment System does not<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;//support BCD operation.<br /><br />#define FLAG_CARRY&nbsp; &nbsp; &nbsp;0x01<br />#define FLAG_ZERO&nbsp; &nbsp; &nbsp; 0x02<br />#define FLAG_INTERRUPT 0x04<br />#define FLAG_DECIMAL&nbsp; &nbsp;0x08<br />#define FLAG_BREAK&nbsp; &nbsp; &nbsp;0x10<br />#define FLAG_CONSTANT&nbsp; 0x20<br />#define FLAG_OVERFLOW&nbsp; 0x40<br />#define FLAG_SIGN&nbsp; &nbsp; &nbsp; 0x80<br /><br />#define BASE_STACK&nbsp; &nbsp; &nbsp;0x100<br /><br />//flag modifier macros<br />#define setcarry&#40;&#41; status |= FLAG_CARRY<br />#define clearcarry&#40;&#41; status &amp;= &#40;~FLAG_CARRY&#41;<br />#define setzero&#40;&#41; status |= FLAG_ZERO<br />#define clearzero&#40;&#41; status &amp;= &#40;~FLAG_ZERO&#41;<br />#define setinterrupt&#40;&#41; status |= FLAG_INTERRUPT<br />#define clearinterrupt&#40;&#41; status &amp;= &#40;~FLAG_INTERRUPT&#41;<br />#define setdecimal&#40;&#41; status |= FLAG_DECIMAL<br />#define cleardecimal&#40;&#41; status &amp;= &#40;~FLAG_DECIMAL&#41;<br />#define setbreak&#40;&#41; status |= FLAG_BREAK<br />#define clearbreak&#40;&#41; status &amp;= &#40;~FLAG_BREAK&#41;<br />#define setoverflow&#40;&#41; status |= FLAG_OVERFLOW<br />#define clearoverflow&#40;&#41; status &amp;= &#40;~FLAG_OVERFLOW&#41;<br />#define setsign&#40;&#41; status |= FLAG_SIGN<br />#define clearsign&#40;&#41; status &amp;= &#40;~FLAG_SIGN&#41;<br /><br /><br />//6502 CPU registers<br />uint16_t pc;<br />uint8_t sp, a, x, y, status;<br /><br /><br />//helper variables<br />uint32_t instructions = 0; //keep track of total instructions executed<br />uint32_t clockticks6502 = 0, clockgoal6502 = 0;<br />uint16_t oldpc, ea, reladdr, value, result;<br />uint8_t opcode, oldstatus;<br /><br />//externally supplied functions<br />extern uint8_t read6502&#40;uint16_t address&#41;;<br />extern void write6502&#40;uint16_t address, uint8_t value&#41;;<br /><br />//a few general functions used by various other functions<br />void push16&#40;uint16_t pushval&#41; &#123;<br />&nbsp; &nbsp; write6502&#40;BASE_STACK + sp, &#40;pushval &gt;&gt; 8&#41; &amp; 0xFF&#41;;<br />&nbsp; &nbsp; write6502&#40;BASE_STACK + &#40;&#40;sp - 1&#41; &amp; 0xFF&#41;, pushval &amp; 0xFF&#41;;<br />&nbsp; &nbsp; sp -= 2;<br />&#125;<br /><br />void push8&#40;uint8_t pushval&#41; &#123;<br />&nbsp; &nbsp; write6502&#40;BASE_STACK + sp--, pushval&#41;;<br />&#125;<br /><br />uint16_t pull16&#40;&#41; &#123;<br />&nbsp; &nbsp; uint16_t temp16;<br />&nbsp; &nbsp; temp16 = read6502&#40;BASE_STACK + &#40;&#40;sp + 1&#41; &amp; 0xFF&#41;&#41; | &#40;&#40;uint16_t&#41;read6502&#40;BASE_STACK + &#40;&#40;sp + 2&#41; &amp; 0xFF&#41;&#41; &lt;&lt; 8&#41;;<br />&nbsp; &nbsp; sp += 2;<br />&nbsp; &nbsp; return&#40;temp16&#41;;<br />&#125;<br /><br />uint8_t pull8&#40;&#41; &#123;<br />&nbsp; &nbsp; return &#40;read6502&#40;BASE_STACK + ++sp&#41;&#41;;<br />&#125;<br /><br />void reset6502&#40;&#41; &#123;<br />&nbsp; &nbsp; pc = &#40;uint16_t&#41;read6502&#40;0xFFFC&#41; | &#40;&#40;uint16_t&#41;read6502&#40;0xFFFD&#41; &lt;&lt; 8&#41;;<br />&nbsp; &nbsp; a = 0;<br />&nbsp; &nbsp; x = 0;<br />&nbsp; &nbsp; y = 0;<br />&nbsp; &nbsp; sp = 0xFD;<br />&nbsp; &nbsp; status |= FLAG_CONSTANT;<br />&#125;<br /><br /><br />//addressing mode functions, calculates effective addresses<br />static void imp&#40;&#41; &#123; //implied<br />&#125;<br /><br />static void acc&#40;&#41; &#123; //accumulator<br />&#125;<br /><br />static void imm&#40;&#41; &#123; //immediate<br />&nbsp; &nbsp; ea = pc++;<br />&#125;<br /><br />static void zp&#40;&#41; &#123; //zero-page<br />&nbsp; &nbsp; ea = &#40;uint16_t&#41;read6502&#40;&#40;uint16_t&#41;pc++&#41;;<br />&#125;<br /><br />static void zpx&#40;&#41; &#123; //zero-page,X<br />&nbsp; &nbsp; ea = &#40;&#40;uint16_t&#41;read6502&#40;&#40;uint16_t&#41;pc++&#41; + &#40;uint16_t&#41;x&#41; &amp; 0xFF; //zero-page wraparound<br />&#125;<br /><br />static void zpy&#40;&#41; &#123; //zero-page,Y<br />&nbsp; &nbsp; ea = &#40;&#40;uint16_t&#41;read6502&#40;&#40;uint16_t&#41;pc++&#41; + &#40;uint16_t&#41;y&#41; &amp; 0xFF; //zero-page wraparound<br />&#125;<br /><br />static void rel&#40;&#41; &#123; //relative for branch ops &#40;8-bit immediate value, sign-extended&#41;<br />&nbsp; &nbsp; reladdr = &#40;uint16_t&#41;read6502&#40;pc++&#41;;<br />&nbsp; &nbsp; if &#40;reladdr &amp; 0x80&#41; reladdr |= 0xFF00;<br />&#125;<br /><br />static void abso&#40;&#41; &#123; //absolute<br />&nbsp; &nbsp; ea = &#40;uint16_t&#41;read6502&#40;pc&#41; | &#40;&#40;uint16_t&#41;read6502&#40;pc+1&#41; &lt;&lt; 8&#41;;<br />&nbsp; &nbsp; pc += 2;<br />&#125;<br /><br />static void absx&#40;&#41; &#123; //absolute,X<br />&nbsp; &nbsp; ea = &#40;&#40;uint16_t&#41;read6502&#40;pc&#41; | &#40;&#40;uint16_t&#41;read6502&#40;pc+1&#41; &lt;&lt; 8&#41;&#41; + &#40;uint16_t&#41;x;<br />&nbsp; &nbsp; pc += 2;<br />&#125;<br /><br />static void absy&#40;&#41; &#123; //absolute,Y<br />&nbsp; &nbsp; ea = &#40;&#40;uint16_t&#41;read6502&#40;pc&#41; | &#40;&#40;uint16_t&#41;read6502&#40;pc+1&#41; &lt;&lt; 8&#41;&#41; + &#40;uint16_t&#41;y;<br />&nbsp; &nbsp; pc += 2;<br />&#125;<br /><br />static void ind&#40;&#41; &#123; //indirect<br />&nbsp; &nbsp; uint16_t eahelp, eahelp2;<br />&nbsp; &nbsp; eahelp = &#40;uint16_t&#41;read6502&#40;pc&#41; | &#40;uint16_t&#41;&#40;&#40;uint16_t&#41;read6502&#40;pc+1&#41; &lt;&lt; 8&#41;;<br />&nbsp; &nbsp; eahelp2 = &#40;eahelp &amp; 0xFF00&#41; | &#40;&#40;eahelp + 1&#41; &amp; 0x00FF&#41;; //replicate 6502 page-boundary wraparound bug<br />&nbsp; &nbsp; ea = &#40;uint16_t&#41;read6502&#40;eahelp&#41; | &#40;&#40;uint16_t&#41;read6502&#40;eahelp2&#41; &lt;&lt; 8&#41;;<br />&nbsp; &nbsp; pc += 2;<br />&#125;<br /><br />static void indx&#40;&#41; &#123; // &#40;indirect,X&#41;<br />&nbsp; &nbsp; uint16_t eahelp;<br />&nbsp; &nbsp; eahelp = &#40;uint16_t&#41;&#40;&#40;&#40;uint16_t&#41;read6502&#40;pc++&#41; + &#40;uint16_t&#41;x&#41; &amp; 0xFF&#41;; //zero-page wraparound for table pointer<br />&nbsp; &nbsp; ea = &#40;uint16_t&#41;read6502&#40;eahelp&#41; | &#40;&#40;uint16_t&#41;read6502&#40;eahelp+1&#41; &lt;&lt; 8&#41;;<br />&#125;<br /><br />static void indy&#40;&#41; &#123; // &#40;indirect&#41;,Y<br />&nbsp; &nbsp; uint16_t eahelp, eahelp2;<br />&nbsp; &nbsp; eahelp = &#40;uint16_t&#41;read6502&#40;pc++&#41;;<br />&nbsp; &nbsp; eahelp2 = &#40;eahelp &amp; 0xFF00&#41; | &#40;&#40;eahelp + 1&#41; &amp; 0x00FF&#41;; //zero-page wraparound<br />&nbsp; &nbsp; ea = &#40;uint16_t&#41;read6502&#40;eahelp&#41; | &#40;&#40;uint16_t&#41;read6502&#40;eahelp2&#41; &lt;&lt; 8&#41;;<br />&nbsp; &nbsp; ea += &#40;uint16_t&#41;y;<br />&#125;<br /><br />static void &#40;*addrtable&#91;256&#93;&#41;&#40;&#41;;<br />static uint16_t getvalue&#40;&#41; &#123;<br />&nbsp; &nbsp; if &#40;addrtable&#91;opcode&#93; == acc&#41; return&#40;&#40;uint16_t&#41;a&#41;;<br />&nbsp; &nbsp; &nbsp; &nbsp; else return&#40;&#40;uint16_t&#41;read6502&#40;ea&#41;&#41;;<br />&#125;<br /><br />static uint16_t getvalue16&#40;&#41; &#123;<br />&nbsp; &nbsp; return&#40;&#40;uint16_t&#41;read6502&#40;ea&#41; | &#40;&#40;uint16_t&#41;read6502&#40;ea+1&#41; &lt;&lt; 8&#41;&#41;;<br />&#125;<br /><br />static void putvalue&#40;uint16_t saveval&#41; &#123;<br />&nbsp; &nbsp; if &#40;addrtable&#91;opcode&#93; == acc&#41; a = &#40;uint8_t&#41;&#40;saveval &amp; 0x00FF&#41;;<br />&nbsp; &nbsp; &nbsp; &nbsp; else write6502&#40;ea, &#40;saveval &amp; 0x00FF&#41;&#41;;<br />&#125;<br /><br />#define zerocalc&#40;n&#41; &#123;\<br />&nbsp; &nbsp; if &#40;&#40;n&#41; &amp; 0x00FF&#41; clearzero&#40;&#41;;\<br />&nbsp; &nbsp; &nbsp; &nbsp; else setzero&#40;&#41;;\<br />&#125;<br /><br />#define signcalc&#40;n&#41; &#123;\<br />&nbsp; &nbsp; if &#40;&#40;n&#41; &amp; 0x0080&#41; setsign&#40;&#41;;\<br />&nbsp; &nbsp; &nbsp; &nbsp; else clearsign&#40;&#41;;\<br />&#125;<br /><br />#define carrycalc&#40;n&#41; &#123;\<br />&nbsp; &nbsp; if &#40;&#40;n&#41; &amp; 0xFF00&#41; setcarry&#40;&#41;;\<br />&nbsp; &nbsp; &nbsp; &nbsp; else clearcarry&#40;&#41;;\<br />&#125;<br /><br />#define overflowcalc&#40;n, m, o&#41; &#123; /* n = result, m = accumulator, o = memory */ \<br />&nbsp; &nbsp; if &#40;&#40;&#40;n&#41; ^ &#40;uint16_t&#41;&#40;m&#41;&#41; &amp; &#40;&#40;n&#41; ^ &#40;o&#41;&#41; &amp; 0x0080&#41; setoverflow&#40;&#41;;\<br />&nbsp; &nbsp; &nbsp; &nbsp; else clearoverflow&#40;&#41;;\<br />&#125;<br /><br />#define saveaccum&#40;n&#41; a = &#40;uint8_t&#41;&#40;&#40;n&#41; &amp; 0x00FF&#41;<br /><br /><br />//instruction handler functions<br />static void adc&#40;&#41; &#123;<br />&nbsp; &nbsp; value = getvalue&#40;&#41;;<br />&nbsp; &nbsp; result = &#40;uint16_t&#41;a + value + &#40;uint16_t&#41;&#40;status &amp; FLAG_CARRY&#41;;<br />&nbsp; &nbsp;<br />&nbsp; &nbsp; carrycalc&#40;result&#41;;<br />&nbsp; &nbsp; zerocalc&#40;result&#41;;<br />&nbsp; &nbsp; overflowcalc&#40;result, a, value&#41;;<br />&nbsp; &nbsp; signcalc&#40;result&#41;;<br />&nbsp; &nbsp; <br />&nbsp; &nbsp; #ifndef NES_CPU<br />&nbsp; &nbsp; if &#40;status &amp; FLAG_DECIMAL&#41; &#123;<br />&nbsp; &nbsp; &nbsp; &nbsp; clearcarry&#40;&#41;;<br />&nbsp; &nbsp; &nbsp; &nbsp; <br />&nbsp; &nbsp; &nbsp; &nbsp; if &#40;&#40;a &amp; 0x0F&#41; &gt; 0x09&#41; &#123;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; a += 0x06;<br />&nbsp; &nbsp; &nbsp; &nbsp; &#125;<br />&nbsp; &nbsp; &nbsp; &nbsp; if &#40;&#40;a &amp; 0xF0&#41; &gt; 0x90&#41; &#123;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; a += 0x60;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; setcarry&#40;&#41;;<br />&nbsp; &nbsp; &nbsp; &nbsp; &#125;<br />&nbsp; &nbsp; &nbsp; &nbsp; <br />&nbsp; &nbsp; &nbsp; &nbsp; clockticks6502++;<br />&nbsp; &nbsp; &#125;<br />&nbsp; &nbsp; #endif<br />&nbsp; &nbsp;<br />&nbsp; &nbsp; saveaccum&#40;result&#41;;<br />&#125;<br /><br />static void and&#40;&#41; &#123;<br />&nbsp; &nbsp; value = getvalue&#40;&#41;;<br />&nbsp; &nbsp; result = &#40;uint16_t&#41;a &amp; value;<br />&nbsp; &nbsp;<br />&nbsp; &nbsp; zerocalc&#40;result&#41;;<br />&nbsp; &nbsp; signcalc&#40;result&#41;;<br />&nbsp; &nbsp;<br />&nbsp; &nbsp; saveaccum&#40;result&#41;;<br />&#125;<br /><br />static void asl&#40;&#41; &#123;<br />&nbsp; &nbsp; value = getvalue&#40;&#41;;<br />&nbsp; &nbsp; result = value &lt;&lt; 1;<br /><br />&nbsp; &nbsp; carrycalc&#40;result&#41;;<br />&nbsp; &nbsp; zerocalc&#40;result&#41;;<br />&nbsp; &nbsp; signcalc&#40;result&#41;;<br />&nbsp; &nbsp;<br />&nbsp; &nbsp; putvalue&#40;result&#41;;<br />&#125;<br /><br />static void bcc&#40;&#41; &#123;<br />&nbsp; &nbsp; if &#40;&#40;status &amp; FLAG_CARRY&#41; == 0&#41; &#123;<br />&nbsp; &nbsp; &nbsp; &nbsp; oldpc = pc;<br />&nbsp; &nbsp; &nbsp; &nbsp; pc += reladdr;<br />&nbsp; &nbsp; &nbsp; &nbsp; if &#40;&#40;oldpc &amp; 0xFF00&#41; != &#40;pc &amp; 0xFF00&#41;&#41; clockticks6502 += 2; //check if jump crossed a page boundary<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; else clockticks6502++;<br />&nbsp; &nbsp; &#125;<br />&#125;<br /><br />static void bcs&#40;&#41; &#123;<br />&nbsp; &nbsp; if &#40;&#40;status &amp; FLAG_CARRY&#41; == FLAG_CARRY&#41; &#123;<br />&nbsp; &nbsp; &nbsp; &nbsp; oldpc = pc;<br />&nbsp; &nbsp; &nbsp; &nbsp; pc += reladdr;<br />&nbsp; &nbsp; &nbsp; &nbsp; if &#40;&#40;oldpc &amp; 0xFF00&#41; != &#40;pc &amp; 0xFF00&#41;&#41; clockticks6502 += 2; //check if jump crossed a page boundary<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; else clockticks6502++;<br />&nbsp; &nbsp; &#125;<br />&#125;<br /><br />static void beq&#40;&#41; &#123;<br />&nbsp; &nbsp; if &#40;&#40;status &amp; FLAG_ZERO&#41; == FLAG_ZERO&#41; &#123;<br />&nbsp; &nbsp; &nbsp; &nbsp; oldpc = pc;<br />&nbsp; &nbsp; &nbsp; &nbsp; pc += reladdr;<br />&nbsp; &nbsp; &nbsp; &nbsp; if &#40;&#40;oldpc &amp; 0xFF00&#41; != &#40;pc &amp; 0xFF00&#41;&#41; clockticks6502 += 2; //check if jump crossed a page boundary<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; else clockticks6502++;<br />&nbsp; &nbsp; &#125;<br />&#125;<br /><br />static void bit&#40;&#41; &#123;<br />&nbsp; &nbsp; value = getvalue&#40;&#41;;<br />&nbsp; &nbsp; result = &#40;uint16_t&#41;a &amp; value;<br />&nbsp; &nbsp;<br />&nbsp; &nbsp; zerocalc&#40;result&#41;;<br />&nbsp; &nbsp; status = &#40;status &amp; 0xBF&#41; | &#40;uint8_t&#41;&#40;value &amp; 0xC0&#41;;<br />&#125;<br /><br />static void bmi&#40;&#41; &#123;<br />&nbsp; &nbsp; if &#40;&#40;status &amp; FLAG_SIGN&#41; == FLAG_SIGN&#41; &#123;<br />&nbsp; &nbsp; &nbsp; &nbsp; oldpc = pc;<br />&nbsp; &nbsp; &nbsp; &nbsp; pc += reladdr;<br />&nbsp; &nbsp; &nbsp; &nbsp; if &#40;&#40;oldpc &amp; 0xFF00&#41; != &#40;pc &amp; 0xFF00&#41;&#41; clockticks6502 += 2; //check if jump crossed a page boundary<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; else clockticks6502++;<br />&nbsp; &nbsp; &#125;<br />&#125;<br /><br />static void bne&#40;&#41; &#123;<br />&nbsp; &nbsp; if &#40;&#40;status &amp; FLAG_ZERO&#41; == 0&#41; &#123;<br />&nbsp; &nbsp; &nbsp; &nbsp; oldpc = pc;<br />&nbsp; &nbsp; &nbsp; &nbsp; pc += reladdr;<br />&nbsp; &nbsp; &nbsp; &nbsp; if &#40;&#40;oldpc &amp; 0xFF00&#41; != &#40;pc &amp; 0xFF00&#41;&#41; clockticks6502 += 2; //check if jump crossed a page boundary<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; else clockticks6502++;<br />&nbsp; &nbsp; &#125;<br />&#125;<br /><br />static void bpl&#40;&#41; &#123;<br />&nbsp; &nbsp; if &#40;&#40;status &amp; FLAG_SIGN&#41; == 0&#41; &#123;<br />&nbsp; &nbsp; &nbsp; &nbsp; oldpc = pc;<br />&nbsp; &nbsp; &nbsp; &nbsp; pc += reladdr;<br />&nbsp; &nbsp; &nbsp; &nbsp; if &#40;&#40;oldpc &amp; 0xFF00&#41; != &#40;pc &amp; 0xFF00&#41;&#41; clockticks6502 += 2; //check if jump crossed a page boundary<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; else clockticks6502++;<br />&nbsp; &nbsp; &#125;<br />&#125;<br /><br />static void brk&#40;&#41; &#123;<br />&nbsp; &nbsp; pc++;<br />&nbsp; &nbsp; push16&#40;pc&#41;; //push next instruction address onto stack<br />&nbsp; &nbsp; setbreak&#40;&#41;; //set break flag<br />&nbsp; &nbsp; push8&#40;status&#41;; //push CPU status to stack<br />&nbsp; &nbsp; setinterrupt&#40;&#41;; //set interrupt flag<br />&nbsp; &nbsp; pc = &#40;uint16_t&#41;read6502&#40;0xFFFE&#41; | &#40;&#40;uint16_t&#41;read6502&#40;0xFFFF&#41; &lt;&lt; 8&#41;;<br />&#125;<br /><br />static void bvc&#40;&#41; &#123;<br />&nbsp; &nbsp; if &#40;&#40;status &amp; FLAG_OVERFLOW&#41; == 0&#41; &#123;<br />&nbsp; &nbsp; &nbsp; &nbsp; oldpc = pc;<br />&nbsp; &nbsp; &nbsp; &nbsp; pc += reladdr;<br />&nbsp; &nbsp; &nbsp; &nbsp; if &#40;&#40;oldpc &amp; 0xFF00&#41; != &#40;pc &amp; 0xFF00&#41;&#41; clockticks6502 += 2; //check if jump crossed a page boundary<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; else clockticks6502++;<br />&nbsp; &nbsp; &#125;<br />&#125;<br /><br />static void bvs&#40;&#41; &#123;<br />&nbsp; &nbsp; if &#40;&#40;status &amp; FLAG_OVERFLOW&#41; == FLAG_OVERFLOW&#41; &#123;<br />&nbsp; &nbsp; &nbsp; &nbsp; oldpc = pc;<br />&nbsp; &nbsp; &nbsp; &nbsp; pc += reladdr;<br />&nbsp; &nbsp; &nbsp; &nbsp; if &#40;&#40;oldpc &amp; 0xFF00&#41; != &#40;pc &amp; 0xFF00&#41;&#41; clockticks6502 += 2; //check if jump crossed a page boundary<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; else clockticks6502++;<br />&nbsp; &nbsp; &#125;<br />&#125;<br /><br />static void clc&#40;&#41; &#123;<br />&nbsp; &nbsp; clearcarry&#40;&#41;;<br />&#125;<br /><br />static void cld&#40;&#41; &#123;<br />&nbsp; &nbsp; cleardecimal&#40;&#41;;<br />&#125;<br /><br />static void cli&#40;&#41; &#123;<br />&nbsp; &nbsp; clearinterrupt&#40;&#41;;<br />&#125;<br /><br />static void clv&#40;&#41; &#123;<br />&nbsp; &nbsp; clearoverflow&#40;&#41;;<br />&#125;<br /><br />static void cmp&#40;&#41; &#123;<br />&nbsp; &nbsp; value = getvalue&#40;&#41;;<br />&nbsp; &nbsp; result = &#40;uint16_t&#41;a - value;<br />&nbsp; &nbsp;<br />&nbsp; &nbsp; if &#40;a &gt;= &#40;uint8_t&#41;&#40;value &amp; 0x00FF&#41;&#41; setcarry&#40;&#41;;<br />&nbsp; &nbsp; &nbsp; &nbsp; else clearcarry&#40;&#41;;<br />&nbsp; &nbsp; if &#40;a == &#40;uint8_t&#41;&#40;value &amp; 0x00FF&#41;&#41; setzero&#40;&#41;;<br />&nbsp; &nbsp; &nbsp; &nbsp; else clearzero&#40;&#41;;<br />&nbsp; &nbsp; signcalc&#40;result&#41;;<br />&#125;<br /><br />static void cpx&#40;&#41; &#123;<br />&nbsp; &nbsp; value = getvalue&#40;&#41;;<br />&nbsp; &nbsp; result = &#40;uint16_t&#41;x - value;<br />&nbsp; &nbsp;<br />&nbsp; &nbsp; if &#40;x &gt;= &#40;uint8_t&#41;&#40;value &amp; 0x00FF&#41;&#41; setcarry&#40;&#41;;<br />&nbsp; &nbsp; &nbsp; &nbsp; else clearcarry&#40;&#41;;<br />&nbsp; &nbsp; if &#40;x == &#40;uint8_t&#41;&#40;value &amp; 0x00FF&#41;&#41; setzero&#40;&#41;;<br />&nbsp; &nbsp; &nbsp; &nbsp; else clearzero&#40;&#41;;<br />&nbsp; &nbsp; signcalc&#40;result&#41;;<br />&#125;<br /><br />static void cpy&#40;&#41; &#123;<br />&nbsp; &nbsp; value = getvalue&#40;&#41;;<br />&nbsp; &nbsp; result = &#40;uint16_t&#41;y - value;<br />&nbsp; &nbsp;<br />&nbsp; &nbsp; if &#40;y &gt;= &#40;uint8_t&#41;&#40;value &amp; 0x00FF&#41;&#41; setcarry&#40;&#41;;<br />&nbsp; &nbsp; &nbsp; &nbsp; else clearcarry&#40;&#41;;<br />&nbsp; &nbsp; if &#40;y == &#40;uint8_t&#41;&#40;value &amp; 0x00FF&#41;&#41; setzero&#40;&#41;;<br />&nbsp; &nbsp; &nbsp; &nbsp; else clearzero&#40;&#41;;<br />&nbsp; &nbsp; signcalc&#40;result&#41;;<br />&#125;<br /><br />static void dec&#40;&#41; &#123;<br />&nbsp; &nbsp; value = getvalue&#40;&#41;;<br />&nbsp; &nbsp; result = value - 1;<br />&nbsp; &nbsp;<br />&nbsp; &nbsp; zerocalc&#40;result&#41;;<br />&nbsp; &nbsp; signcalc&#40;result&#41;;<br />&nbsp; &nbsp;<br />&nbsp; &nbsp; putvalue&#40;result&#41;;<br />&#125;<br /><br />static void dex&#40;&#41; &#123;<br />&nbsp; &nbsp; x--;<br />&nbsp; &nbsp;<br />&nbsp; &nbsp; zerocalc&#40;x&#41;;<br />&nbsp; &nbsp; signcalc&#40;x&#41;;<br />&#125;<br /><br />static void dey&#40;&#41; &#123;<br />&nbsp; &nbsp; y--;<br />&nbsp; &nbsp;<br />&nbsp; &nbsp; zerocalc&#40;y&#41;;<br />&nbsp; &nbsp; signcalc&#40;y&#41;;<br />&#125;<br /><br />static void eor&#40;&#41; &#123;<br />&nbsp; &nbsp; value = getvalue&#40;&#41;;<br />&nbsp; &nbsp; result = &#40;uint16_t&#41;a ^ value;<br />&nbsp; &nbsp;<br />&nbsp; &nbsp; zerocalc&#40;result&#41;;<br />&nbsp; &nbsp; signcalc&#40;result&#41;;<br />&nbsp; &nbsp;<br />&nbsp; &nbsp; saveaccum&#40;result&#41;;<br />&#125;<br /><br />static void inc&#40;&#41; &#123;<br />&nbsp; &nbsp; value = getvalue&#40;&#41;;<br />&nbsp; &nbsp; result = value + 1;<br />&nbsp; &nbsp;<br />&nbsp; &nbsp; zerocalc&#40;result&#41;;<br />&nbsp; &nbsp; signcalc&#40;result&#41;;<br />&nbsp; &nbsp;<br />&nbsp; &nbsp; putvalue&#40;result&#41;;<br />&#125;<br /><br />static void inx&#40;&#41; &#123;<br />&nbsp; &nbsp; x++;<br />&nbsp; &nbsp;<br />&nbsp; &nbsp; zerocalc&#40;x&#41;;<br />&nbsp; &nbsp; signcalc&#40;x&#41;;<br />&#125;<br /><br />static void iny&#40;&#41; &#123;<br />&nbsp; &nbsp; y++;<br />&nbsp; &nbsp;<br />&nbsp; &nbsp; zerocalc&#40;y&#41;;<br />&nbsp; &nbsp; signcalc&#40;y&#41;;<br />&#125;<br /><br />static void jmp&#40;&#41; &#123;<br />&nbsp; &nbsp; pc = ea;<br />&#125;<br /><br />static void jsr&#40;&#41; &#123;<br />&nbsp; &nbsp; push16&#40;pc - 1&#41;;<br />&nbsp; &nbsp; pc = ea;<br />&#125;<br /><br />static void lda&#40;&#41; &#123;<br />&nbsp; &nbsp; value = getvalue&#40;&#41;;<br />&nbsp; &nbsp; a = &#40;uint8_t&#41;&#40;value &amp; 0x00FF&#41;;<br />&nbsp; &nbsp;<br />&nbsp; &nbsp; zerocalc&#40;a&#41;;<br />&nbsp; &nbsp; signcalc&#40;a&#41;;<br />&#125;<br /><br />static void ldx&#40;&#41; &#123;<br />&nbsp; &nbsp; value = getvalue&#40;&#41;;<br />&nbsp; &nbsp; x = &#40;uint8_t&#41;&#40;value &amp; 0x00FF&#41;;<br />&nbsp; &nbsp;<br />&nbsp; &nbsp; zerocalc&#40;x&#41;;<br />&nbsp; &nbsp; signcalc&#40;x&#41;;<br />&#125;<br /><br />static void ldy&#40;&#41; &#123;<br />&nbsp; &nbsp; value = getvalue&#40;&#41;;<br />&nbsp; &nbsp; y = &#40;uint8_t&#41;&#40;value &amp; 0x00FF&#41;;<br />&nbsp; &nbsp;<br />&nbsp; &nbsp; zerocalc&#40;y&#41;;<br />&nbsp; &nbsp; signcalc&#40;y&#41;;<br />&#125;<br /><br />static void lsr&#40;&#41; &#123;<br />&nbsp; &nbsp; value = getvalue&#40;&#41;;<br />&nbsp; &nbsp; result = value &gt;&gt; 1;<br />&nbsp; &nbsp;<br />&nbsp; &nbsp; if &#40;value &amp; 1&#41; setcarry&#40;&#41;;<br />&nbsp; &nbsp; &nbsp; &nbsp; else clearcarry&#40;&#41;;<br />&nbsp; &nbsp; zerocalc&#40;result&#41;;<br />&nbsp; &nbsp; signcalc&#40;result&#41;;<br />&nbsp; &nbsp;<br />&nbsp; &nbsp; putvalue&#40;result&#41;;<br />&#125;<br /><br />static void nop&#40;&#41; &#123;<br />&#125;<br /><br />static void ora&#40;&#41; &#123;<br />&nbsp; &nbsp; value = getvalue&#40;&#41;;<br />&nbsp; &nbsp; result = &#40;uint16_t&#41;a | value;<br />&nbsp; &nbsp;<br />&nbsp; &nbsp; zerocalc&#40;result&#41;;<br />&nbsp; &nbsp; signcalc&#40;result&#41;;<br />&nbsp; &nbsp;<br />&nbsp; &nbsp; saveaccum&#40;result&#41;;<br />&#125;<br /><br />static void pha&#40;&#41; &#123;<br />&nbsp; &nbsp; push8&#40;a&#41;;<br />&#125;<br /><br />static void php&#40;&#41; &#123;<br />&nbsp; &nbsp; push8&#40;status&#41;;<br />&#125;<br /><br />static void pla&#40;&#41; &#123;<br />&nbsp; &nbsp; a = pull8&#40;&#41;;<br />&nbsp; &nbsp;<br />&nbsp; &nbsp; zerocalc&#40;a&#41;;<br />&nbsp; &nbsp; signcalc&#40;a&#41;;<br />&#125;<br /><br />static void plp&#40;&#41; &#123;<br />&nbsp; &nbsp; status = pull8&#40;&#41; | FLAG_CONSTANT;<br />&#125;<br /><br />static void rol&#40;&#41; &#123;<br />&nbsp; &nbsp; value = getvalue&#40;&#41;;<br />&nbsp; &nbsp; result = &#40;value &lt;&lt; 1&#41; | &#40;status &amp; FLAG_CARRY&#41;;<br />&nbsp; &nbsp;<br />&nbsp; &nbsp; carrycalc&#40;result&#41;;<br />&nbsp; &nbsp; zerocalc&#40;result&#41;;<br />&nbsp; &nbsp; signcalc&#40;result&#41;;<br />&nbsp; &nbsp;<br />&nbsp; &nbsp; putvalue&#40;result&#41;;<br />&#125;<br /><br />static void ror&#40;&#41; &#123;<br />&nbsp; &nbsp; value = getvalue&#40;&#41;;<br />&nbsp; &nbsp; result = &#40;value &gt;&gt; 1&#41; | &#40;&#40;status &amp; FLAG_CARRY&#41; &lt;&lt; 7&#41;;<br />&nbsp; &nbsp;<br />&nbsp; &nbsp; if &#40;value &amp; 1&#41; setcarry&#40;&#41;;<br />&nbsp; &nbsp; &nbsp; &nbsp; else clearcarry&#40;&#41;;<br />&nbsp; &nbsp; zerocalc&#40;result&#41;;<br />&nbsp; &nbsp; signcalc&#40;result&#41;;<br />&nbsp; &nbsp;<br />&nbsp; &nbsp; putvalue&#40;result&#41;;<br />&#125;<br /><br />static void rti&#40;&#41; &#123;<br />&nbsp; &nbsp; status = pull8&#40;&#41;;<br />&nbsp; &nbsp; value = pull16&#40;&#41;;<br />&nbsp; &nbsp; pc = value;<br />&#125;<br /><br />static void rts&#40;&#41; &#123;<br />&nbsp; &nbsp; value = pull16&#40;&#41;;<br />&nbsp; &nbsp; pc = value + 1;<br />&#125;<br /><br />static void sbc&#40;&#41; &#123;<br />&nbsp; &nbsp; value = getvalue&#40;&#41; ^ 0x00FF;<br />&nbsp; &nbsp; result = &#40;uint16_t&#41;a + value + &#40;uint16_t&#41;&#40;status &amp; FLAG_CARRY&#41;;<br />&nbsp; &nbsp;<br />&nbsp; &nbsp; carrycalc&#40;result&#41;;<br />&nbsp; &nbsp; zerocalc&#40;result&#41;;<br />&nbsp; &nbsp; overflowcalc&#40;result, a, value&#41;;<br />&nbsp; &nbsp; signcalc&#40;result&#41;;<br /><br />&nbsp; &nbsp; #ifndef NES_CPU<br />&nbsp; &nbsp; if &#40;status &amp; FLAG_DECIMAL&#41; &#123;<br />&nbsp; &nbsp; &nbsp; &nbsp; clearcarry&#40;&#41;;<br />&nbsp; &nbsp; &nbsp; &nbsp; <br />&nbsp; &nbsp; &nbsp; &nbsp; a -= 0x66;<br />&nbsp; &nbsp; &nbsp; &nbsp; if &#40;&#40;a &amp; 0x0F&#41; &gt; 0x09&#41; &#123;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; a += 0x06;<br />&nbsp; &nbsp; &nbsp; &nbsp; &#125;<br />&nbsp; &nbsp; &nbsp; &nbsp; if &#40;&#40;a &amp; 0xF0&#41; &gt; 0x90&#41; &#123;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; a += 0x60;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; setcarry&#40;&#41;;<br />&nbsp; &nbsp; &nbsp; &nbsp; &#125;<br />&nbsp; &nbsp; &nbsp; &nbsp; <br />&nbsp; &nbsp; &nbsp; &nbsp; clockticks6502++;<br />&nbsp; &nbsp; &#125;<br />&nbsp; &nbsp; #endif<br />&nbsp; &nbsp;<br />&nbsp; &nbsp; saveaccum&#40;result&#41;;<br />&#125;<br /><br />static void sec&#40;&#41; &#123;<br />&nbsp; &nbsp; setcarry&#40;&#41;;<br />&#125;<br /><br />static void sed&#40;&#41; &#123;<br />&nbsp; &nbsp; setdecimal&#40;&#41;;<br />&#125;<br /><br />static void sei&#40;&#41; &#123;<br />&nbsp; &nbsp; setinterrupt&#40;&#41;;<br />&#125;<br /><br />static void sta&#40;&#41; &#123;<br />&nbsp; &nbsp; putvalue&#40;a&#41;;<br />&#125;<br /><br />static void stx&#40;&#41; &#123;<br />&nbsp; &nbsp; putvalue&#40;x&#41;;<br />&#125;<br /><br />static void sty&#40;&#41; &#123;<br />&nbsp; &nbsp; putvalue&#40;y&#41;;<br />&#125;<br /><br />static void tax&#40;&#41; &#123;<br />&nbsp; &nbsp; x = a;<br />&nbsp; &nbsp;<br />&nbsp; &nbsp; zerocalc&#40;x&#41;;<br />&nbsp; &nbsp; signcalc&#40;x&#41;;<br />&#125;<br /><br />static void tay&#40;&#41; &#123;<br />&nbsp; &nbsp; y = a;<br />&nbsp; &nbsp;<br />&nbsp; &nbsp; zerocalc&#40;y&#41;;<br />&nbsp; &nbsp; signcalc&#40;y&#41;;<br />&#125;<br /><br />static void tsx&#40;&#41; &#123;<br />&nbsp; &nbsp; x = sp;<br />&nbsp; &nbsp;<br />&nbsp; &nbsp; zerocalc&#40;x&#41;;<br />&nbsp; &nbsp; signcalc&#40;x&#41;;<br />&#125;<br /><br />static void txa&#40;&#41; &#123;<br />&nbsp; &nbsp; a = x;<br />&nbsp; &nbsp;<br />&nbsp; &nbsp; zerocalc&#40;a&#41;;<br />&nbsp; &nbsp; signcalc&#40;a&#41;;<br />&#125;<br /><br />static void txs&#40;&#41; &#123;<br />&nbsp; &nbsp; sp = x;<br />&#125;<br /><br />static void tya&#40;&#41; &#123;<br />&nbsp; &nbsp; a = y;<br />&nbsp; &nbsp;<br />&nbsp; &nbsp; zerocalc&#40;a&#41;;<br />&nbsp; &nbsp; signcalc&#40;a&#41;;<br />&#125;<br /><br />//undocumented instructions<br />#ifdef UNDOCUMENTED<br />&nbsp; &nbsp; static void lax&#40;&#41; &#123;<br />&nbsp; &nbsp; &nbsp; &nbsp; lda&#40;&#41;;<br />&nbsp; &nbsp; &nbsp; &nbsp; ldx&#40;&#41;;<br />&nbsp; &nbsp; &#125;<br /><br />&nbsp; &nbsp; static void sax&#40;&#41; &#123;<br />&nbsp; &nbsp; &nbsp; &nbsp; sta&#40;&#41;;<br />&nbsp; &nbsp; &nbsp; &nbsp; stx&#40;&#41;;<br />&nbsp; &nbsp; &nbsp; &nbsp; putvalue&#40;a &amp; x&#41;;<br />&nbsp; &nbsp; &#125;<br /><br />&nbsp; &nbsp; static void dcp&#40;&#41; &#123;<br />&nbsp; &nbsp; &nbsp; &nbsp; dec&#40;&#41;;<br />&nbsp; &nbsp; &nbsp; &nbsp; cmp&#40;&#41;;<br />&nbsp; &nbsp; &#125;<br /><br />&nbsp; &nbsp; static void isb&#40;&#41; &#123;<br />&nbsp; &nbsp; &nbsp; &nbsp; inc&#40;&#41;;<br />&nbsp; &nbsp; &nbsp; &nbsp; sbc&#40;&#41;;<br />&nbsp; &nbsp; &#125;<br /><br />&nbsp; &nbsp; static void slo&#40;&#41; &#123;<br />&nbsp; &nbsp; &nbsp; &nbsp; asl&#40;&#41;;<br />&nbsp; &nbsp; &nbsp; &nbsp; ora&#40;&#41;;<br />&nbsp; &nbsp; &#125;<br /><br />&nbsp; &nbsp; static void rla&#40;&#41; &#123;<br />&nbsp; &nbsp; &nbsp; &nbsp; rol&#40;&#41;;<br />&nbsp; &nbsp; &nbsp; &nbsp; and&#40;&#41;;<br />&nbsp; &nbsp; &#125;<br /><br />&nbsp; &nbsp; static void sre&#40;&#41; &#123;<br />&nbsp; &nbsp; &nbsp; &nbsp; lsr&#40;&#41;;<br />&nbsp; &nbsp; &nbsp; &nbsp; eor&#40;&#41;;<br />&nbsp; &nbsp; &#125;<br /><br />&nbsp; &nbsp; static void rra&#40;&#41; &#123;<br />&nbsp; &nbsp; &nbsp; &nbsp; ror&#40;&#41;;<br />&nbsp; &nbsp; &nbsp; &nbsp; adc&#40;&#41;;<br />&nbsp; &nbsp; &#125;<br />#else<br />&nbsp; &nbsp; #define lax nop<br />&nbsp; &nbsp; #define sax nop<br />&nbsp; &nbsp; #define dcp nop<br />&nbsp; &nbsp; #define isb nop<br />&nbsp; &nbsp; #define slo nop<br />&nbsp; &nbsp; #define rla nop<br />&nbsp; &nbsp; #define sre nop<br />&nbsp; &nbsp; #define rra nop<br />#endif<br /><br /><br />static void &#40;*addrtable&#91;256&#93;&#41;&#40;&#41; = &#123;<br />/*&nbsp; &nbsp; &nbsp; &nbsp; |&nbsp; 0&nbsp; |&nbsp; 1&nbsp; |&nbsp; 2&nbsp; |&nbsp; 3&nbsp; |&nbsp; 4&nbsp; |&nbsp; 5&nbsp; |&nbsp; 6&nbsp; |&nbsp; 7&nbsp; |&nbsp; 8&nbsp; |&nbsp; 9&nbsp; |&nbsp; A&nbsp; |&nbsp; B&nbsp; |&nbsp; C&nbsp; |&nbsp; D&nbsp; |&nbsp; E&nbsp; |&nbsp; F&nbsp; |&nbsp; &nbsp; &nbsp;*/<br />/* 0 */&nbsp; &nbsp; &nbsp;imp, indx,&nbsp; imp, indx,&nbsp; &nbsp;zp,&nbsp; &nbsp;zp,&nbsp; &nbsp;zp,&nbsp; &nbsp;zp,&nbsp; imp,&nbsp; imm,&nbsp; acc,&nbsp; imm, abso, abso, abso, abso, /* 0 */<br />/* 1 */&nbsp; &nbsp; &nbsp;rel, indy,&nbsp; imp, indy,&nbsp; zpx,&nbsp; zpx,&nbsp; zpx,&nbsp; zpx,&nbsp; imp, absy,&nbsp; imp, absy, absx, absx, absx, absx, /* 1 */<br />/* 2 */&nbsp; &nbsp; abso, indx,&nbsp; imp, indx,&nbsp; &nbsp;zp,&nbsp; &nbsp;zp,&nbsp; &nbsp;zp,&nbsp; &nbsp;zp,&nbsp; imp,&nbsp; imm,&nbsp; acc,&nbsp; imm, abso, abso, abso, abso, /* 2 */<br />/* 3 */&nbsp; &nbsp; &nbsp;rel, indy,&nbsp; imp, indy,&nbsp; zpx,&nbsp; zpx,&nbsp; zpx,&nbsp; zpx,&nbsp; imp, absy,&nbsp; imp, absy, absx, absx, absx, absx, /* 3 */<br />/* 4 */&nbsp; &nbsp; &nbsp;imp, indx,&nbsp; imp, indx,&nbsp; &nbsp;zp,&nbsp; &nbsp;zp,&nbsp; &nbsp;zp,&nbsp; &nbsp;zp,&nbsp; imp,&nbsp; imm,&nbsp; acc,&nbsp; imm, abso, abso, abso, abso, /* 4 */<br />/* 5 */&nbsp; &nbsp; &nbsp;rel, indy,&nbsp; imp, indy,&nbsp; zpx,&nbsp; zpx,&nbsp; zpx,&nbsp; zpx,&nbsp; imp, absy,&nbsp; imp, absy, absx, absx, absx, absx, /* 5 */<br />/* 6 */&nbsp; &nbsp; &nbsp;imp, indx,&nbsp; imp, indx,&nbsp; &nbsp;zp,&nbsp; &nbsp;zp,&nbsp; &nbsp;zp,&nbsp; &nbsp;zp,&nbsp; imp,&nbsp; imm,&nbsp; acc,&nbsp; imm,&nbsp; ind, abso, abso, abso, /* 6 */<br />/* 7 */&nbsp; &nbsp; &nbsp;rel, indy,&nbsp; imp, indy,&nbsp; zpx,&nbsp; zpx,&nbsp; zpx,&nbsp; zpx,&nbsp; imp, absy,&nbsp; imp, absy, absx, absx, absx, absx, /* 7 */<br />/* 8 */&nbsp; &nbsp; &nbsp;imm, indx,&nbsp; imm, indx,&nbsp; &nbsp;zp,&nbsp; &nbsp;zp,&nbsp; &nbsp;zp,&nbsp; &nbsp;zp,&nbsp; imp,&nbsp; imm,&nbsp; imp,&nbsp; imm, abso, abso, abso, abso, /* 8 */<br />/* 9 */&nbsp; &nbsp; &nbsp;rel, indy,&nbsp; imp, indy,&nbsp; zpx,&nbsp; zpx,&nbsp; zpy,&nbsp; zpy,&nbsp; imp, absy,&nbsp; imp, absy, absx, absx, absy, absy, /* 9 */<br />/* A */&nbsp; &nbsp; &nbsp;imm, indx,&nbsp; imm, indx,&nbsp; &nbsp;zp,&nbsp; &nbsp;zp,&nbsp; &nbsp;zp,&nbsp; &nbsp;zp,&nbsp; imp,&nbsp; imm,&nbsp; imp,&nbsp; imm, abso, abso, abso, abso, /* A */<br />/* B */&nbsp; &nbsp; &nbsp;rel, indy,&nbsp; imp, indy,&nbsp; zpx,&nbsp; zpx,&nbsp; zpy,&nbsp; zpy,&nbsp; imp, absy,&nbsp; imp, absy, absx, absx, absy, absy, /* B */<br />/* C */&nbsp; &nbsp; &nbsp;imm, indx,&nbsp; imm, indx,&nbsp; &nbsp;zp,&nbsp; &nbsp;zp,&nbsp; &nbsp;zp,&nbsp; &nbsp;zp,&nbsp; imp,&nbsp; imm,&nbsp; imp,&nbsp; imm, abso, abso, abso, abso, /* C */<br />/* D */&nbsp; &nbsp; &nbsp;rel, indy,&nbsp; imp, indy,&nbsp; zpx,&nbsp; zpx,&nbsp; zpx,&nbsp; zpx,&nbsp; imp, absy,&nbsp; imp, absy, absx, absx, absx, absx, /* D */<br />/* E */&nbsp; &nbsp; &nbsp;imm, indx,&nbsp; imm, indx,&nbsp; &nbsp;zp,&nbsp; &nbsp;zp,&nbsp; &nbsp;zp,&nbsp; &nbsp;zp,&nbsp; imp,&nbsp; imm,&nbsp; imp,&nbsp; imm, abso, abso, abso, abso, /* E */<br />/* F */&nbsp; &nbsp; &nbsp;rel, indy,&nbsp; imp, indy,&nbsp; zpx,&nbsp; zpx,&nbsp; zpx,&nbsp; zpx,&nbsp; imp, absy,&nbsp; imp, absy, absx, absx, absx, absx&nbsp; /* F */<br />&#125;;<br /><br />static void &#40;*optable&#91;256&#93;&#41;&#40;&#41; = &#123;<br />/*&nbsp; &nbsp; &nbsp; &nbsp; |&nbsp; 0&nbsp; |&nbsp; 1&nbsp; |&nbsp; 2&nbsp; |&nbsp; 3&nbsp; |&nbsp; 4&nbsp; |&nbsp; 5&nbsp; |&nbsp; 6&nbsp; |&nbsp; 7&nbsp; |&nbsp; 8&nbsp; |&nbsp; 9&nbsp; |&nbsp; A&nbsp; |&nbsp; B&nbsp; |&nbsp; C&nbsp; |&nbsp; D&nbsp; |&nbsp; E&nbsp; |&nbsp; F&nbsp; |&nbsp; &nbsp; &nbsp; */<br />/* 0 */&nbsp; &nbsp; &nbsp; brk,&nbsp; ora,&nbsp; nop,&nbsp; slo,&nbsp; nop,&nbsp; ora,&nbsp; asl,&nbsp; slo,&nbsp; php,&nbsp; ora,&nbsp; asl,&nbsp; nop,&nbsp; nop,&nbsp; ora,&nbsp; asl,&nbsp; slo, /* 0 */<br />/* 1 */&nbsp; &nbsp; &nbsp; bpl,&nbsp; ora,&nbsp; nop,&nbsp; slo,&nbsp; nop,&nbsp; ora,&nbsp; asl,&nbsp; slo,&nbsp; clc,&nbsp; ora,&nbsp; nop,&nbsp; slo,&nbsp; nop,&nbsp; ora,&nbsp; asl,&nbsp; slo, /* 1 */<br />/* 2 */&nbsp; &nbsp; &nbsp; jsr,&nbsp; and,&nbsp; nop,&nbsp; rla,&nbsp; bit,&nbsp; and,&nbsp; rol,&nbsp; rla,&nbsp; plp,&nbsp; and,&nbsp; rol,&nbsp; nop,&nbsp; bit,&nbsp; and,&nbsp; rol,&nbsp; rla, /* 2 */<br />/* 3 */&nbsp; &nbsp; &nbsp; bmi,&nbsp; and,&nbsp; nop,&nbsp; rla,&nbsp; nop,&nbsp; and,&nbsp; rol,&nbsp; rla,&nbsp; sec,&nbsp; and,&nbsp; nop,&nbsp; rla,&nbsp; nop,&nbsp; and,&nbsp; rol,&nbsp; rla, /* 3 */<br />/* 4 */&nbsp; &nbsp; &nbsp; rti,&nbsp; eor,&nbsp; nop,&nbsp; sre,&nbsp; nop,&nbsp; eor,&nbsp; lsr,&nbsp; sre,&nbsp; pha,&nbsp; eor,&nbsp; lsr,&nbsp; nop,&nbsp; jmp,&nbsp; eor,&nbsp; lsr,&nbsp; sre, /* 4 */<br />/* 5 */&nbsp; &nbsp; &nbsp; bvc,&nbsp; eor,&nbsp; nop,&nbsp; sre,&nbsp; nop,&nbsp; eor,&nbsp; lsr,&nbsp; sre,&nbsp; cli,&nbsp; eor,&nbsp; nop,&nbsp; sre,&nbsp; nop,&nbsp; eor,&nbsp; lsr,&nbsp; sre, /* 5 */<br />/* 6 */&nbsp; &nbsp; &nbsp; rts,&nbsp; adc,&nbsp; nop,&nbsp; rra,&nbsp; nop,&nbsp; adc,&nbsp; ror,&nbsp; rra,&nbsp; pla,&nbsp; adc,&nbsp; ror,&nbsp; nop,&nbsp; jmp,&nbsp; adc,&nbsp; ror,&nbsp; rra, /* 6 */<br />/* 7 */&nbsp; &nbsp; &nbsp; bvs,&nbsp; adc,&nbsp; nop,&nbsp; rra,&nbsp; nop,&nbsp; adc,&nbsp; ror,&nbsp; rra,&nbsp; sei,&nbsp; adc,&nbsp; nop,&nbsp; rra,&nbsp; nop,&nbsp; adc,&nbsp; ror,&nbsp; rra, /* 7 */<br />/* 8 */&nbsp; &nbsp; &nbsp; nop,&nbsp; sta,&nbsp; nop,&nbsp; sax,&nbsp; sty,&nbsp; sta,&nbsp; stx,&nbsp; sax,&nbsp; dey,&nbsp; nop,&nbsp; txa,&nbsp; nop,&nbsp; sty,&nbsp; sta,&nbsp; stx,&nbsp; sax, /* 8 */<br />/* 9 */&nbsp; &nbsp; &nbsp; bcc,&nbsp; sta,&nbsp; nop,&nbsp; nop,&nbsp; sty,&nbsp; sta,&nbsp; stx,&nbsp; sax,&nbsp; tya,&nbsp; sta,&nbsp; txs,&nbsp; nop,&nbsp; nop,&nbsp; sta,&nbsp; nop,&nbsp; nop, /* 9 */<br />/* A */&nbsp; &nbsp; &nbsp; ldy,&nbsp; lda,&nbsp; ldx,&nbsp; lax,&nbsp; ldy,&nbsp; lda,&nbsp; ldx,&nbsp; lax,&nbsp; tay,&nbsp; lda,&nbsp; tax,&nbsp; nop,&nbsp; ldy,&nbsp; lda,&nbsp; ldx,&nbsp; lax, /* A */<br />/* B */&nbsp; &nbsp; &nbsp; bcs,&nbsp; lda,&nbsp; nop,&nbsp; lax,&nbsp; ldy,&nbsp; lda,&nbsp; ldx,&nbsp; lax,&nbsp; clv,&nbsp; lda,&nbsp; tsx,&nbsp; nop,&nbsp; ldy,&nbsp; lda,&nbsp; ldx,&nbsp; lax, /* B */<br />/* C */&nbsp; &nbsp; &nbsp; cpy,&nbsp; cmp,&nbsp; nop,&nbsp; dcp,&nbsp; cpy,&nbsp; cmp,&nbsp; dec,&nbsp; dcp,&nbsp; iny,&nbsp; cmp,&nbsp; dex,&nbsp; nop,&nbsp; cpy,&nbsp; cmp,&nbsp; dec,&nbsp; dcp, /* C */<br />/* D */&nbsp; &nbsp; &nbsp; bne,&nbsp; cmp,&nbsp; nop,&nbsp; dcp,&nbsp; nop,&nbsp; cmp,&nbsp; dec,&nbsp; dcp,&nbsp; cld,&nbsp; cmp,&nbsp; nop,&nbsp; dcp,&nbsp; nop,&nbsp; cmp,&nbsp; dec,&nbsp; dcp, /* D */<br />/* E */&nbsp; &nbsp; &nbsp; cpx,&nbsp; sbc,&nbsp; nop,&nbsp; isb,&nbsp; cpx,&nbsp; sbc,&nbsp; inc,&nbsp; isb,&nbsp; inx,&nbsp; sbc,&nbsp; nop,&nbsp; sbc,&nbsp; cpx,&nbsp; sbc,&nbsp; inc,&nbsp; isb, /* E */<br />/* F */&nbsp; &nbsp; &nbsp; beq,&nbsp; sbc,&nbsp; nop,&nbsp; isb,&nbsp; nop,&nbsp; sbc,&nbsp; inc,&nbsp; isb,&nbsp; sed,&nbsp; sbc,&nbsp; nop,&nbsp; isb,&nbsp; nop,&nbsp; sbc,&nbsp; inc,&nbsp; isb&nbsp; /* F */<br />&#125;;<br /><br />static const uint32_t ticktable&#91;256&#93; = &#123;<br />/*&nbsp; &nbsp; &nbsp; &nbsp; |&nbsp; 0&nbsp; |&nbsp; 1&nbsp; |&nbsp; 2&nbsp; |&nbsp; 3&nbsp; |&nbsp; 4&nbsp; |&nbsp; 5&nbsp; |&nbsp; 6&nbsp; |&nbsp; 7&nbsp; |&nbsp; 8&nbsp; |&nbsp; 9&nbsp; |&nbsp; A&nbsp; |&nbsp; B&nbsp; |&nbsp; C&nbsp; |&nbsp; D&nbsp; |&nbsp; E&nbsp; |&nbsp; F&nbsp; |&nbsp; &nbsp; &nbsp;*/<br />/* 0 */&nbsp; &nbsp; &nbsp; 7,&nbsp; &nbsp; 6,&nbsp; &nbsp; 2,&nbsp; &nbsp; 8,&nbsp; &nbsp; 3,&nbsp; &nbsp; 3,&nbsp; &nbsp; 5,&nbsp; &nbsp; 5,&nbsp; &nbsp; 3,&nbsp; &nbsp; 2,&nbsp; &nbsp; 2,&nbsp; &nbsp; 2,&nbsp; &nbsp; 4,&nbsp; &nbsp; 4,&nbsp; &nbsp; 6,&nbsp; &nbsp; 6,&nbsp; /* 0 */<br />/* 1 */&nbsp; &nbsp; &nbsp; 2,&nbsp; &nbsp; 5,&nbsp; &nbsp; 2,&nbsp; &nbsp; 8,&nbsp; &nbsp; 4,&nbsp; &nbsp; 4,&nbsp; &nbsp; 6,&nbsp; &nbsp; 6,&nbsp; &nbsp; 2,&nbsp; &nbsp; 4,&nbsp; &nbsp; 2,&nbsp; &nbsp; 7,&nbsp; &nbsp; 5,&nbsp; &nbsp; 5,&nbsp; &nbsp; 7,&nbsp; &nbsp; 7,&nbsp; /* 1 */<br />/* 2 */&nbsp; &nbsp; &nbsp; 6,&nbsp; &nbsp; 6,&nbsp; &nbsp; 2,&nbsp; &nbsp; 8,&nbsp; &nbsp; 3,&nbsp; &nbsp; 3,&nbsp; &nbsp; 5,&nbsp; &nbsp; 5,&nbsp; &nbsp; 4,&nbsp; &nbsp; 2,&nbsp; &nbsp; 2,&nbsp; &nbsp; 2,&nbsp; &nbsp; 4,&nbsp; &nbsp; 4,&nbsp; &nbsp; 6,&nbsp; &nbsp; 6,&nbsp; /* 2 */<br />/* 3 */&nbsp; &nbsp; &nbsp; 2,&nbsp; &nbsp; 5,&nbsp; &nbsp; 2,&nbsp; &nbsp; 8,&nbsp; &nbsp; 4,&nbsp; &nbsp; 4,&nbsp; &nbsp; 6,&nbsp; &nbsp; 6,&nbsp; &nbsp; 2,&nbsp; &nbsp; 4,&nbsp; &nbsp; 2,&nbsp; &nbsp; 7,&nbsp; &nbsp; 5,&nbsp; &nbsp; 5,&nbsp; &nbsp; 7,&nbsp; &nbsp; 7,&nbsp; /* 3 */<br />/* 4 */&nbsp; &nbsp; &nbsp; 6,&nbsp; &nbsp; 6,&nbsp; &nbsp; 2,&nbsp; &nbsp; 8,&nbsp; &nbsp; 3,&nbsp; &nbsp; 3,&nbsp; &nbsp; 5,&nbsp; &nbsp; 5,&nbsp; &nbsp; 3,&nbsp; &nbsp; 2,&nbsp; &nbsp; 2,&nbsp; &nbsp; 2,&nbsp; &nbsp; 3,&nbsp; &nbsp; 4,&nbsp; &nbsp; 6,&nbsp; &nbsp; 6,&nbsp; /* 4 */<br />/* 5 */&nbsp; &nbsp; &nbsp; 2,&nbsp; &nbsp; 5,&nbsp; &nbsp; 2,&nbsp; &nbsp; 8,&nbsp; &nbsp; 4,&nbsp; &nbsp; 4,&nbsp; &nbsp; 6,&nbsp; &nbsp; 6,&nbsp; &nbsp; 2,&nbsp; &nbsp; 4,&nbsp; &nbsp; 2,&nbsp; &nbsp; 7,&nbsp; &nbsp; 5,&nbsp; &nbsp; 5,&nbsp; &nbsp; 7,&nbsp; &nbsp; 7,&nbsp; /* 5 */<br />/* 6 */&nbsp; &nbsp; &nbsp; 6,&nbsp; &nbsp; 6,&nbsp; &nbsp; 2,&nbsp; &nbsp; 8,&nbsp; &nbsp; 3,&nbsp; &nbsp; 3,&nbsp; &nbsp; 5,&nbsp; &nbsp; 5,&nbsp; &nbsp; 4,&nbsp; &nbsp; 2,&nbsp; &nbsp; 2,&nbsp; &nbsp; 2,&nbsp; &nbsp; 5,&nbsp; &nbsp; 4,&nbsp; &nbsp; 6,&nbsp; &nbsp; 6,&nbsp; /* 6 */<br />/* 7 */&nbsp; &nbsp; &nbsp; 2,&nbsp; &nbsp; 5,&nbsp; &nbsp; 2,&nbsp; &nbsp; 8,&nbsp; &nbsp; 4,&nbsp; &nbsp; 4,&nbsp; &nbsp; 6,&nbsp; &nbsp; 6,&nbsp; &nbsp; 2,&nbsp; &nbsp; 4,&nbsp; &nbsp; 2,&nbsp; &nbsp; 7,&nbsp; &nbsp; 5,&nbsp; &nbsp; 5,&nbsp; &nbsp; 7,&nbsp; &nbsp; 7,&nbsp; /* 7 */<br />/* 8 */&nbsp; &nbsp; &nbsp; 2,&nbsp; &nbsp; 6,&nbsp; &nbsp; 2,&nbsp; &nbsp; 6,&nbsp; &nbsp; 3,&nbsp; &nbsp; 3,&nbsp; &nbsp; 3,&nbsp; &nbsp; 3,&nbsp; &nbsp; 2,&nbsp; &nbsp; 2,&nbsp; &nbsp; 2,&nbsp; &nbsp; 2,&nbsp; &nbsp; 4,&nbsp; &nbsp; 4,&nbsp; &nbsp; 4,&nbsp; &nbsp; 4,&nbsp; /* 8 */<br />/* 9 */&nbsp; &nbsp; &nbsp; 2,&nbsp; &nbsp; 6,&nbsp; &nbsp; 2,&nbsp; &nbsp; 6,&nbsp; &nbsp; 4,&nbsp; &nbsp; 4,&nbsp; &nbsp; 4,&nbsp; &nbsp; 4,&nbsp; &nbsp; 2,&nbsp; &nbsp; 5,&nbsp; &nbsp; 2,&nbsp; &nbsp; 5,&nbsp; &nbsp; 5,&nbsp; &nbsp; 5,&nbsp; &nbsp; 5,&nbsp; &nbsp; 5,&nbsp; /* 9 */<br />/* A */&nbsp; &nbsp; &nbsp; 2,&nbsp; &nbsp; 6,&nbsp; &nbsp; 2,&nbsp; &nbsp; 6,&nbsp; &nbsp; 3,&nbsp; &nbsp; 3,&nbsp; &nbsp; 3,&nbsp; &nbsp; 3,&nbsp; &nbsp; 2,&nbsp; &nbsp; 2,&nbsp; &nbsp; 2,&nbsp; &nbsp; 2,&nbsp; &nbsp; 4,&nbsp; &nbsp; 4,&nbsp; &nbsp; 4,&nbsp; &nbsp; 4,&nbsp; /* A */<br />/* B */&nbsp; &nbsp; &nbsp; 2,&nbsp; &nbsp; 5,&nbsp; &nbsp; 2,&nbsp; &nbsp; 5,&nbsp; &nbsp; 4,&nbsp; &nbsp; 4,&nbsp; &nbsp; 4,&nbsp; &nbsp; 4,&nbsp; &nbsp; 2,&nbsp; &nbsp; 4,&nbsp; &nbsp; 2,&nbsp; &nbsp; 5,&nbsp; &nbsp; 4,&nbsp; &nbsp; 4,&nbsp; &nbsp; 4,&nbsp; &nbsp; 4,&nbsp; /* B */<br />/* C */&nbsp; &nbsp; &nbsp; 2,&nbsp; &nbsp; 6,&nbsp; &nbsp; 2,&nbsp; &nbsp; 8,&nbsp; &nbsp; 3,&nbsp; &nbsp; 3,&nbsp; &nbsp; 5,&nbsp; &nbsp; 5,&nbsp; &nbsp; 2,&nbsp; &nbsp; 2,&nbsp; &nbsp; 2,&nbsp; &nbsp; 2,&nbsp; &nbsp; 4,&nbsp; &nbsp; 4,&nbsp; &nbsp; 6,&nbsp; &nbsp; 6,&nbsp; /* C */<br />/* D */&nbsp; &nbsp; &nbsp; 2,&nbsp; &nbsp; 5,&nbsp; &nbsp; 2,&nbsp; &nbsp; 8,&nbsp; &nbsp; 4,&nbsp; &nbsp; 4,&nbsp; &nbsp; 6,&nbsp; &nbsp; 6,&nbsp; &nbsp; 2,&nbsp; &nbsp; 4,&nbsp; &nbsp; 2,&nbsp; &nbsp; 7,&nbsp; &nbsp; 5,&nbsp; &nbsp; 5,&nbsp; &nbsp; 7,&nbsp; &nbsp; 7,&nbsp; /* D */<br />/* E */&nbsp; &nbsp; &nbsp; 2,&nbsp; &nbsp; 6,&nbsp; &nbsp; 2,&nbsp; &nbsp; 8,&nbsp; &nbsp; 3,&nbsp; &nbsp; 3,&nbsp; &nbsp; 5,&nbsp; &nbsp; 5,&nbsp; &nbsp; 2,&nbsp; &nbsp; 2,&nbsp; &nbsp; 2,&nbsp; &nbsp; 2,&nbsp; &nbsp; 4,&nbsp; &nbsp; 4,&nbsp; &nbsp; 6,&nbsp; &nbsp; 6,&nbsp; /* E */<br />/* F */&nbsp; &nbsp; &nbsp; 2,&nbsp; &nbsp; 5,&nbsp; &nbsp; 2,&nbsp; &nbsp; 8,&nbsp; &nbsp; 4,&nbsp; &nbsp; 4,&nbsp; &nbsp; 6,&nbsp; &nbsp; 6,&nbsp; &nbsp; 2,&nbsp; &nbsp; 4,&nbsp; &nbsp; 2,&nbsp; &nbsp; 7,&nbsp; &nbsp; 5,&nbsp; &nbsp; 5,&nbsp; &nbsp; 7,&nbsp; &nbsp; 7&nbsp; &nbsp;/* F */<br />&#125;;<br /><br /><br />void nmi6502&#40;&#41; &#123;<br />&nbsp; &nbsp; push16&#40;pc&#41;;<br />&nbsp; &nbsp; push8&#40;status&#41;;<br />&nbsp; &nbsp; status |= FLAG_INTERRUPT;<br />&nbsp; &nbsp; pc = &#40;uint16_t&#41;read6502&#40;0xFFFA&#41; | &#40;&#40;uint16_t&#41;read6502&#40;0xFFFB&#41; &lt;&lt; 8&#41;;<br />&#125;<br /><br />void irq6502&#40;&#41; &#123;<br />&nbsp; &nbsp; push16&#40;pc&#41;;<br />&nbsp; &nbsp; push8&#40;status&#41;;<br />&nbsp; &nbsp; status |= FLAG_INTERRUPT;<br />&nbsp; &nbsp; pc = &#40;uint16_t&#41;read6502&#40;0xFFFE&#41; | &#40;&#40;uint16_t&#41;read6502&#40;0xFFFF&#41; &lt;&lt; 8&#41;;<br />&#125;<br /><br />//can use loopexternal to call an external function after every instruction.<br />//use hookexternal&#40;void *funcptr&#41; function to pass a pointer to one.<br />//pass NULL to hookexternal to disable.<br />uint8_t callexternal = 0;<br />void &#40;*loopexternal&#41;&#40;&#41;;<br /><br />void exec6502&#40;uint32_t tickcount&#41; &#123;<br />&nbsp; &nbsp; clockgoal6502 += tickcount;<br />&nbsp; &nbsp; static uint16_t lastpc;<br />&nbsp; &nbsp;<br />&nbsp; &nbsp; while &#40;clockticks6502 &lt; clockgoal6502&#41; &#123;<br />&nbsp; &nbsp; &nbsp; &nbsp; opcode = read6502&#40;pc++&#41;;<br />&nbsp; &nbsp; &nbsp; &nbsp; lastpc = pc;<br />&nbsp; &nbsp; &nbsp; &nbsp; status |= FLAG_CONSTANT;<br />&nbsp; &nbsp; &nbsp; &nbsp;<br />&nbsp; &nbsp; &nbsp; &nbsp; &#40;*addrtable&#91;opcode&#93;&#41;&#40;&#41;;<br />&nbsp; &nbsp; &nbsp; &nbsp; &#40;*optable&#91;opcode&#93;&#41;&#40;&#41;;<br />&nbsp; &nbsp; &nbsp; &nbsp; clockticks6502 += ticktable&#91;opcode&#93;;<br />&nbsp; &nbsp; &nbsp; &nbsp;<br />&nbsp; &nbsp; &nbsp; &nbsp; instructions++;<br /><br />&nbsp; &nbsp; &nbsp; &nbsp; if &#40;callexternal&#41; &#40;*loopexternal&#41;&#40;&#41;;<br />&nbsp; &nbsp; &#125;<br /><br />&#125;<br /><br />void hookexternal&#40;void *funcptr&#41; &#123;<br />&nbsp; &nbsp; if &#40;funcptr != &#40;void *&#41;NULL&#41; &#123;<br />&nbsp; &nbsp; &nbsp; &nbsp; loopexternal = funcptr;<br />&nbsp; &nbsp; &nbsp; &nbsp; callexternal = 1;<br />&nbsp; &nbsp; &#125; else callexternal = 0;<br />&#125;<br /></div>
<br />
<br />i know doing all the addressing calcs and instructions as functions from a pointer table isn't the most efficient, but it's just a NES.  it benchmarks around 40-45 million instructions per second on most game ROMs with no speed limiting on my Phenom II X4 955. it's fast enough.</div>

					<br clear="all" /><br />

						<table width="100%" cellspacing="0">
						<tr valign="middle">
							<td class="gensmall" align="right">
							
							</td>
						</tr>
						</table>
					</td>
				</tr>
				</table>
			</td>
		</tr>

		<tr class="row2">

			<td class="profile"><strong><a href="#wrapheader">Top</a></strong></td>
			<td><div class="gensmall" style="float: left;">&nbsp;<a href="./memberlist.php?mode=viewprofile&amp;u=4572"><img src="./styles/subsilver2/imageset/en/icon_user_profile.gif" alt="Profile" title="Profile" /></a> &nbsp;</div> <div class="gensmall" style="float: right;">&nbsp;</div></td>
	
		</tr>

	<tr>
		<td class="spacer" colspan="2" height="1"><img src="images/spacer.gif" alt="" width="1" height="1" /></td>
	</tr>
	</table>

	<table class="tablebg" width="100%" cellspacing="1">
	<tr class="row1">

			<td align="center" valign="middle">
				<a name="p86760"></a>
				<b class="postauthor">MottZilla</b>
			</td>
			<td width="100%" height="25">
				<table width="100%" cellspacing="0">
				<tr>
				
					<td class="gensmall" width="100%"><div style="float: left;">&nbsp;<b>Post subject:</b> <a href="#p86760"></a></div><div style="float: right;"><a href="./viewtopic.php?p=86760#p86760"><img src="./styles/subsilver2/imageset/icon_post_target.gif" width="12" height="9" alt="Post" title="Post" /></a><b>Posted:</b> Thu Nov 24, 2011 3:10 pm&nbsp;</div></td>
				</tr>
				</table>
			</td>
		</tr>

		<tr class="row1">

			<td valign="top" class="profile">
				<table cellspacing="4" align="center" width="150">
			
				<tr>
					<td><img src="./styles/subsilver2/imageset/en/icon_user_offline.gif" alt="Offline" title="Offline" /></td>
				</tr>
			
				<tr>
					<td><img src="./download/file.php?avatar=1726.jpg" width="100" height="100" alt="User avatar" /></td>
				</tr>
			
				</table>

				<span class="postdetails">
					<br /><b>Joined:</b> Wed Dec 06, 2006 8:18 pm<br /><b>Posts:</b> 1799
				</span>

			</td>
			<td valign="top">
				<table width="100%" cellspacing="5">
				<tr>
					<td>
					

						<div class="postbody">I didn't study your whole code but clearly you must have an error in your Indirect X addressing mode code. 
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">9&#41; Pre-indexed indirect<br />&nbsp; In this mode a zer0-page address is added to the contents of the X-register<br />&nbsp; to give the address of the bytes holding the address of the operand. The<br />&nbsp; indirection is indicated by parenthesis in assembly language.<br />&nbsp; eg.&nbsp; LDA &#40;$3E, X&#41;<br />&nbsp; &nbsp; &nbsp; &nbsp;$A1 $3E<br />&nbsp; Assume the following -&nbsp; &nbsp; &nbsp; &nbsp; byte&nbsp; &nbsp; &nbsp; value<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; X-reg.&nbsp; &nbsp; $05<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $0043&nbsp; &nbsp; &nbsp;$15<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $0044&nbsp; &nbsp; &nbsp;$24<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $2415&nbsp; &nbsp; &nbsp;$6E<br /><br />&nbsp; Then the instruction is executed by:<br />&nbsp; &#40;i&#41;&nbsp; &nbsp;adding $3E and $05 = $0043<br />&nbsp; &#40;ii&#41;&nbsp; getting address contained in bytes $0043, $0044 = $2415<br />&nbsp; &#40;iii&#41; loading contents of $2415 - i.e. $6E - into accumulator<br /><br />&nbsp; Note a&#41; When adding the 1-byte address and the X-register, wrap around<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; addition is used - i.e. the sum is always a zero-page address.<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; eg. FF + 2 = 0001 not 0101 as you might expect.<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; DON'T FORGET THIS WHEN EMULATING THIS MODE.<br />&nbsp; &nbsp; &nbsp; &nbsp;b&#41; Only the X register is used in this mode.<br /></div></div>

					<br clear="all" /><br />

						<table width="100%" cellspacing="0">
						<tr valign="middle">
							<td class="gensmall" align="right">
							
							</td>
						</tr>
						</table>
					</td>
				</tr>
				</table>
			</td>
		</tr>

		<tr class="row1">

			<td class="profile"><strong><a href="#wrapheader">Top</a></strong></td>
			<td><div class="gensmall" style="float: left;">&nbsp;<a href="./memberlist.php?mode=viewprofile&amp;u=1726"><img src="./styles/subsilver2/imageset/en/icon_user_profile.gif" alt="Profile" title="Profile" /></a> &nbsp;</div> <div class="gensmall" style="float: right;">&nbsp;</div></td>
	
		</tr>

	<tr>
		<td class="spacer" colspan="2" height="1"><img src="images/spacer.gif" alt="" width="1" height="1" /></td>
	</tr>
	</table>

	<table class="tablebg" width="100%" cellspacing="1">
	<tr class="row2">

			<td align="center" valign="middle">
				<a name="p86762"></a>
				<b class="postauthor">miker00lz</b>
			</td>
			<td width="100%" height="25">
				<table width="100%" cellspacing="0">
				<tr>
				
					<td class="gensmall" width="100%"><div style="float: left;">&nbsp;<b>Post subject:</b> <a href="#p86762"></a></div><div style="float: right;"><a href="./viewtopic.php?p=86762#p86762"><img src="./styles/subsilver2/imageset/icon_post_target.gif" width="12" height="9" alt="Post" title="Post" /></a><b>Posted:</b> Thu Nov 24, 2011 3:37 pm&nbsp;</div></td>
				</tr>
				</table>
			</td>
		</tr>

		<tr class="row2">

			<td valign="top" class="profile">
				<table cellspacing="4" align="center" width="150">
			
				<tr>
					<td><img src="./styles/subsilver2/imageset/en/icon_user_offline.gif" alt="Offline" title="Offline" /></td>
				</tr>
			
				<tr>
					<td><img src="./download/file.php?avatar=4572.png" width="100" height="100" alt="User avatar" /></td>
				</tr>
			
				</table>

				<span class="postdetails">
					<br /><b>Joined:</b> Thu Sep 23, 2010 7:28 pm<br /><b>Posts:</b> 145
				</span>

			</td>
			<td valign="top">
				<table width="100%" cellspacing="5">
				<tr>
					<td>
					

						<div class="postbody">i'm actually already doing it exactly as described in that.
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">static void indx&#40;&#41; &#123; // &#40;indirect,X&#41;<br />&nbsp; &nbsp; uint16_t eahelp;<br />&nbsp; &nbsp; eahelp = &#40;uint16_t&#41;&#40;&#40;&#40;uint16_t&#41;read6502&#40;pc++&#41; + &#40;uint16_t&#41;x&#41; &amp; 0xFF&#41;; //zero-page wraparound for table pointer<br />&nbsp; &nbsp; ea = &#40;uint16_t&#41;read6502&#40;eahelp&#41; | &#40;&#40;uint16_t&#41;read6502&#40;eahelp+1&#41; &lt;&lt; 8&#41;;<br />&#125;<br /></div><br /><br />that's why i'm scratching my head here. from everything i've read, that looks fine. and if you look at my STA code, it simply does <strong>putvalue(a)</strong><br /><br />where putvalue is this:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">static void putvalue&#40;uint16_t saveval&#41; &#123;<br />&nbsp; &nbsp; if &#40;addrtable&#91;opcode&#93; == acc&#41; a = &#40;uint8_t&#41;&#40;saveval &amp; 0x00FF&#41;;<br />&nbsp; &nbsp; &nbsp; &nbsp; else write6502&#40;ea, &#40;saveval &amp; 0x00FF&#41;&#41;;<br />&#125;</div>
<br />
<br />if the addressing mode is accumulator, it puts the value into the accumuilator (as you might expect) otherwise into the location specified by the effective address.</div>

					<br clear="all" /><br />

						<table width="100%" cellspacing="0">
						<tr valign="middle">
							<td class="gensmall" align="right">
							
							</td>
						</tr>
						</table>
					</td>
				</tr>
				</table>
			</td>
		</tr>

		<tr class="row2">

			<td class="profile"><strong><a href="#wrapheader">Top</a></strong></td>
			<td><div class="gensmall" style="float: left;">&nbsp;<a href="./memberlist.php?mode=viewprofile&amp;u=4572"><img src="./styles/subsilver2/imageset/en/icon_user_profile.gif" alt="Profile" title="Profile" /></a> &nbsp;</div> <div class="gensmall" style="float: right;">&nbsp;</div></td>
	
		</tr>

	<tr>
		<td class="spacer" colspan="2" height="1"><img src="images/spacer.gif" alt="" width="1" height="1" /></td>
	</tr>
	</table>

	<table class="tablebg" width="100%" cellspacing="1">
	<tr class="row1">

			<td align="center" valign="middle">
				<a name="p86763"></a>
				<b class="postauthor">Dwedit</b>
			</td>
			<td width="100%" height="25">
				<table width="100%" cellspacing="0">
				<tr>
				
					<td class="gensmall" width="100%"><div style="float: left;">&nbsp;<b>Post subject:</b> <a href="#p86763">Re: 6502 CPU emu SBC bug, and question about page-crossing</a></div><div style="float: right;"><a href="./viewtopic.php?p=86763#p86763"><img src="./styles/subsilver2/imageset/icon_post_target.gif" width="12" height="9" alt="Post" title="Post" /></a><b>Posted:</b> Thu Nov 24, 2011 3:42 pm&nbsp;</div></td>
				</tr>
				</table>
			</td>
		</tr>

		<tr class="row1">

			<td valign="top" class="profile">
				<table cellspacing="4" align="center" width="150">
			
				<tr>
					<td><img src="./styles/subsilver2/imageset/en/icon_user_offline.gif" alt="Offline" title="Offline" /></td>
				</tr>
			
				<tr>
					<td><img src="./download/file.php?avatar=53.png" width="68" height="100" alt="User avatar" /></td>
				</tr>
			
				</table>

				<span class="postdetails">
					<br /><b>Joined:</b> Fri Nov 19, 2004 7:35 pm<br /><b>Posts:</b> 2546
				</span>

			</td>
			<td valign="top">
				<table width="100%" cellspacing="5">
				<tr>
					<td>
					

						<div class="postbody"><div class="quotetitle">miker00lz wrote:</div><div class="quotecontent">my other question was simply about adding clock ticks when page boundaries are crossed. what are the cases where i would add a cycle to the total? is it just when indirect addressing mode calculations read data across a boundary, or is it also when the PC register increments past a boundary?<br /></div>
<br />
<br />These instructions:
<br />ADC
<br />AND
<br />CMP
<br />EOR
<br />LDA
<br />ORA
<br />SBC
<br />When run in ABS,X ABS,Y or (IND),Y mode, give a one cycle penalty if it crosses a page after adding the offset.
<br />STA does NOT have the penalty, it takes one cycle longer anyway.  It's kind of like it already has the penalty built in to the instruction itself.
<br />
<br />LDX abs,Y  and LDY abs,X  also have the penalty.
<br />
<br />For branches, if you crossed a page (Your destination is on a different page than the address following the branch instruction's second byte), there's a one cycle penalty.
<br />
<br />For jmp (xxxx), if it crosses a page, it simply doesn't work right.
<br />
<br />For zeropage instructions, they can only affect zeropage addresses.
<br />For OP (xx),Y, it can only fetch its two bytes from the zeropage.  OP ($FF),Y will fetch the address bytes from FF and 00, then add Y.
<br />For OP zpg,X instructions, it will not use any address above FF, it will wrap after that point.</div>

					
						<div class="postbody"><br />_________________<br />Here come the fortune cookies!  Here come the fortune cookies!  They're wearing paper hats!</div>
					<br clear="all" /><br />

						<table width="100%" cellspacing="0">
						<tr valign="middle">
							<td class="gensmall" align="right">
							
							</td>
						</tr>
						</table>
					</td>
				</tr>
				</table>
			</td>
		</tr>

		<tr class="row1">

			<td class="profile"><strong><a href="#wrapheader">Top</a></strong></td>
			<td><div class="gensmall" style="float: left;">&nbsp;<a href="./memberlist.php?mode=viewprofile&amp;u=53"><img src="./styles/subsilver2/imageset/en/icon_user_profile.gif" alt="Profile" title="Profile" /></a> &nbsp;</div> <div class="gensmall" style="float: right;">&nbsp;</div></td>
	
		</tr>

	<tr>
		<td class="spacer" colspan="2" height="1"><img src="images/spacer.gif" alt="" width="1" height="1" /></td>
	</tr>
	</table>

	<table class="tablebg" width="100%" cellspacing="1">
	<tr class="row2">

			<td align="center" valign="middle">
				<a name="p86764"></a>
				<b class="postauthor">miker00lz</b>
			</td>
			<td width="100%" height="25">
				<table width="100%" cellspacing="0">
				<tr>
				
					<td class="gensmall" width="100%"><div style="float: left;">&nbsp;<b>Post subject:</b> <a href="#p86764"></a></div><div style="float: right;"><a href="./viewtopic.php?p=86764#p86764"><img src="./styles/subsilver2/imageset/icon_post_target.gif" width="12" height="9" alt="Post" title="Post" /></a><b>Posted:</b> Thu Nov 24, 2011 3:58 pm&nbsp;</div></td>
				</tr>
				</table>
			</td>
		</tr>

		<tr class="row2">

			<td valign="top" class="profile">
				<table cellspacing="4" align="center" width="150">
			
				<tr>
					<td><img src="./styles/subsilver2/imageset/en/icon_user_offline.gif" alt="Offline" title="Offline" /></td>
				</tr>
			
				<tr>
					<td><img src="./download/file.php?avatar=4572.png" width="100" height="100" alt="User avatar" /></td>
				</tr>
			
				</table>

				<span class="postdetails">
					<br /><b>Joined:</b> Thu Sep 23, 2010 7:28 pm<br /><b>Posts:</b> 145
				</span>

			</td>
			<td valign="top">
				<table width="100%" cellspacing="5">
				<tr>
					<td>
					

						<div class="postbody">just what i needed, Dwedit. thanks! could you just clarify what you mean by the jmp (xxxx) doesn't work right if it crosses pages though? what happens in that situation?</div>

					<br clear="all" /><br />

						<table width="100%" cellspacing="0">
						<tr valign="middle">
							<td class="gensmall" align="right">
							
							</td>
						</tr>
						</table>
					</td>
				</tr>
				</table>
			</td>
		</tr>

		<tr class="row2">

			<td class="profile"><strong><a href="#wrapheader">Top</a></strong></td>
			<td><div class="gensmall" style="float: left;">&nbsp;<a href="./memberlist.php?mode=viewprofile&amp;u=4572"><img src="./styles/subsilver2/imageset/en/icon_user_profile.gif" alt="Profile" title="Profile" /></a> &nbsp;</div> <div class="gensmall" style="float: right;">&nbsp;</div></td>
	
		</tr>

	<tr>
		<td class="spacer" colspan="2" height="1"><img src="images/spacer.gif" alt="" width="1" height="1" /></td>
	</tr>
	</table>

	<table class="tablebg" width="100%" cellspacing="1">
	<tr class="row1">

			<td align="center" valign="middle">
				<a name="p86769"></a>
				<b class="postauthor">miker00lz</b>
			</td>
			<td width="100%" height="25">
				<table width="100%" cellspacing="0">
				<tr>
				
					<td class="gensmall" width="100%"><div style="float: left;">&nbsp;<b>Post subject:</b> <a href="#p86769"></a></div><div style="float: right;"><a href="./viewtopic.php?p=86769#p86769"><img src="./styles/subsilver2/imageset/icon_post_target.gif" width="12" height="9" alt="Post" title="Post" /></a><b>Posted:</b> Thu Nov 24, 2011 4:27 pm&nbsp;</div></td>
				</tr>
				</table>
			</td>
		</tr>

		<tr class="row1">

			<td valign="top" class="profile">
				<table cellspacing="4" align="center" width="150">
			
				<tr>
					<td><img src="./styles/subsilver2/imageset/en/icon_user_offline.gif" alt="Offline" title="Offline" /></td>
				</tr>
			
				<tr>
					<td><img src="./download/file.php?avatar=4572.png" width="100" height="100" alt="User avatar" /></td>
				</tr>
			
				</table>

				<span class="postdetails">
					<br /><b>Joined:</b> Thu Sep 23, 2010 7:28 pm<br /><b>Posts:</b> 145
				</span>

			</td>
			<td valign="top">
				<table width="100%" cellspacing="5">
				<tr>
					<td>
					

						<div class="postbody">well, this is interesting. STA (ind,X) passes blargg's test ROM, but nestest.nes says it doesn't work right. now i'm even more confused.</div>

					<br clear="all" /><br />

						<table width="100%" cellspacing="0">
						<tr valign="middle">
							<td class="gensmall" align="right">
							
							</td>
						</tr>
						</table>
					</td>
				</tr>
				</table>
			</td>
		</tr>

		<tr class="row1">

			<td class="profile"><strong><a href="#wrapheader">Top</a></strong></td>
			<td><div class="gensmall" style="float: left;">&nbsp;<a href="./memberlist.php?mode=viewprofile&amp;u=4572"><img src="./styles/subsilver2/imageset/en/icon_user_profile.gif" alt="Profile" title="Profile" /></a> &nbsp;</div> <div class="gensmall" style="float: right;">&nbsp;</div></td>
	
		</tr>

	<tr>
		<td class="spacer" colspan="2" height="1"><img src="images/spacer.gif" alt="" width="1" height="1" /></td>
	</tr>
	</table>

	<table class="tablebg" width="100%" cellspacing="1">
	<tr class="row2">

			<td align="center" valign="middle">
				<a name="p86773"></a>
				<b class="postauthor">Overload</b>
			</td>
			<td width="100%" height="25">
				<table width="100%" cellspacing="0">
				<tr>
				
					<td class="gensmall" width="100%"><div style="float: left;">&nbsp;<b>Post subject:</b> <a href="#p86773"></a></div><div style="float: right;"><a href="./viewtopic.php?p=86773#p86773"><img src="./styles/subsilver2/imageset/icon_post_target.gif" width="12" height="9" alt="Post" title="Post" /></a><b>Posted:</b> Thu Nov 24, 2011 6:11 pm&nbsp;</div></td>
				</tr>
				</table>
			</td>
		</tr>

		<tr class="row2">

			<td valign="top" class="profile">
				<table cellspacing="4" align="center" width="150">
			
				<tr>
					<td><img src="./styles/subsilver2/imageset/en/icon_user_offline.gif" alt="Offline" title="Offline" /></td>
				</tr>
			
				</table>

				<span class="postdetails">
					<br /><b>Joined:</b> Mon May 30, 2011 4:38 pm<br /><b>Posts:</b> 8
				</span>

			</td>
			<td valign="top">
				<table width="100%" cellspacing="5">
				<tr>
					<td>
					

						<div class="postbody"><div class="quotetitle">miker00lz wrote:</div><div class="quotecontent">i'm actually already doing it exactly as described in that.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">static void indx&#40;&#41; &#123; // &#40;indirect,X&#41;<br />&nbsp; &nbsp; uint16_t eahelp;<br />&nbsp; &nbsp; eahelp = &#40;uint16_t&#41;&#40;&#40;&#40;uint16_t&#41;read6502&#40;pc++&#41; + &#40;uint16_t&#41;x&#41; &amp; 0xFF&#41;; //zero-page wraparound for table pointer<br />&nbsp; &nbsp; ea = &#40;uint16_t&#41;read6502&#40;eahelp&#41; | &#40;&#40;uint16_t&#41;read6502&#40;eahelp+1&#41; &lt;&lt; 8&#41;;<br />&#125;<br /></div><br /></div><br /><br />I'm pretty sure that you are not wrapping the address correctly when you pull the indirect address from the bus. eahelp should be 8 bits. <br /><br />try<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp; ea = &#40;uint16_t&#41;read6502&#40;&#40;uint8_t&#41;&#40;eahelp&#41;&#41; | &#40;&#40;uint16_t&#41;read6502&#40;&#40;uint8_t&#41;&#40;eahelp+1&#41;&#41; &lt;&lt; 8&#41;; <br /></div></div>

					<br clear="all" /><br />

						<table width="100%" cellspacing="0">
						<tr valign="middle">
							<td class="gensmall" align="right">
							
							</td>
						</tr>
						</table>
					</td>
				</tr>
				</table>
			</td>
		</tr>

		<tr class="row2">

			<td class="profile"><strong><a href="#wrapheader">Top</a></strong></td>
			<td><div class="gensmall" style="float: left;">&nbsp;<a href="./memberlist.php?mode=viewprofile&amp;u=4882"><img src="./styles/subsilver2/imageset/en/icon_user_profile.gif" alt="Profile" title="Profile" /></a> &nbsp;</div> <div class="gensmall" style="float: right;">&nbsp;</div></td>
	
		</tr>

	<tr>
		<td class="spacer" colspan="2" height="1"><img src="images/spacer.gif" alt="" width="1" height="1" /></td>
	</tr>
	</table>

	<table class="tablebg" width="100%" cellspacing="1">
	<tr class="row1">

			<td align="center" valign="middle">
				<a name="p86774"></a>
				<b class="postauthor">miker00lz</b>
			</td>
			<td width="100%" height="25">
				<table width="100%" cellspacing="0">
				<tr>
				
					<td class="gensmall" width="100%"><div style="float: left;">&nbsp;<b>Post subject:</b> <a href="#p86774"></a></div><div style="float: right;"><a href="./viewtopic.php?p=86774#p86774"><img src="./styles/subsilver2/imageset/icon_post_target.gif" width="12" height="9" alt="Post" title="Post" /></a><b>Posted:</b> Thu Nov 24, 2011 6:34 pm&nbsp;</div></td>
				</tr>
				</table>
			</td>
		</tr>

		<tr class="row1">

			<td valign="top" class="profile">
				<table cellspacing="4" align="center" width="150">
			
				<tr>
					<td><img src="./styles/subsilver2/imageset/en/icon_user_offline.gif" alt="Offline" title="Offline" /></td>
				</tr>
			
				<tr>
					<td><img src="./download/file.php?avatar=4572.png" width="100" height="100" alt="User avatar" /></td>
				</tr>
			
				</table>

				<span class="postdetails">
					<br /><b>Joined:</b> Thu Sep 23, 2010 7:28 pm<br /><b>Posts:</b> 145
				</span>

			</td>
			<td valign="top">
				<table width="100%" cellspacing="5">
				<tr>
					<td>
					

						<div class="postbody"><div class="quotetitle">Overload wrote:</div><div class="quotecontent"><div class="quotetitle">miker00lz wrote:</div><div class="quotecontent">i'm actually already doing it exactly as described in that.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">static void indx&#40;&#41; &#123; // &#40;indirect,X&#41;<br />&nbsp; &nbsp; uint16_t eahelp;<br />&nbsp; &nbsp; eahelp = &#40;uint16_t&#41;&#40;&#40;&#40;uint16_t&#41;read6502&#40;pc++&#41; + &#40;uint16_t&#41;x&#41; &amp; 0xFF&#41;; //zero-page wraparound for table pointer<br />&nbsp; &nbsp; ea = &#40;uint16_t&#41;read6502&#40;eahelp&#41; | &#40;&#40;uint16_t&#41;read6502&#40;eahelp+1&#41; &lt;&lt; 8&#41;;<br />&#125;<br /></div><br /></div><br /><br />I'm pretty sure that you are not wrapping the address correctly when you pull the indirect address from the bus. eahelp should be 8 bits. <br /><br />try<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp; ea = &#40;uint16_t&#41;read6502&#40;&#40;uint8_t&#41;&#40;eahelp&#41;&#41; | &#40;&#40;uint16_t&#41;read6502&#40;&#40;uint8_t&#41;&#40;eahelp+1&#41;&#41; &lt;&lt; 8&#41;; <br /></div></div><br /><br />well i'll be damned, that did work - thanks. i don't understand why it required an 8-bit cast though if i was AND-masking it by 0xFF. shouldn't that accomplish the same end result?<br /><br />EDIT: DERP nevermind, i was looking at the wrong part when i said that. thanks for the help. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /><br />i was under the mistaken assumption that i only had to restrict the first address which points to the indirection table in the zero-page. i didn't realize i had to also wrap the final address.<br /><br /><br />even though nestest.nes passes on my (indirect),Y code, i want to verify i'm not making a mistake here that the tests didn't catch. should this also be wrapped like (indirect,X)?<br /><br />i wrap when calculating the zero-page address of the indirection table, but not when i add Y at the end.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">static void indy&#40;&#41; &#123; // &#40;indirect&#41;,Y<br />&nbsp; &nbsp; uint16_t eahelp, eahelp2;<br />&nbsp; &nbsp; eahelp = &#40;uint16_t&#41;read6502&#40;pc++&#41;;<br />&nbsp; &nbsp; eahelp2 = &#40;eahelp &amp; 0xFF00&#41; | &#40;&#40;eahelp + 1&#41; &amp; 0x00FF&#41;; //zero-page wraparound<br />&nbsp; &nbsp; ea = &#40;uint16_t&#41;read6502&#40;eahelp&#41; | &#40;&#40;uint16_t&#41;read6502&#40;eahelp2&#41; &lt;&lt; 8&#41;;<br />&nbsp; &nbsp; ea += &#40;uint16_t&#41;y;<br />&#125;<br /></div></div>

					<br clear="all" /><br />

						<table width="100%" cellspacing="0">
						<tr valign="middle">
							<td class="gensmall" align="right">
							
							</td>
						</tr>
						</table>
					</td>
				</tr>
				</table>
			</td>
		</tr>

		<tr class="row1">

			<td class="profile"><strong><a href="#wrapheader">Top</a></strong></td>
			<td><div class="gensmall" style="float: left;">&nbsp;<a href="./memberlist.php?mode=viewprofile&amp;u=4572"><img src="./styles/subsilver2/imageset/en/icon_user_profile.gif" alt="Profile" title="Profile" /></a> &nbsp;</div> <div class="gensmall" style="float: right;">&nbsp;</div></td>
	
		</tr>

	<tr>
		<td class="spacer" colspan="2" height="1"><img src="images/spacer.gif" alt="" width="1" height="1" /></td>
	</tr>
	</table>

	<table class="tablebg" width="100%" cellspacing="1">
	<tr class="row2">

			<td align="center" valign="middle">
				<a name="p86862"></a>
				<b class="postauthor">Overload</b>
			</td>
			<td width="100%" height="25">
				<table width="100%" cellspacing="0">
				<tr>
				
					<td class="gensmall" width="100%"><div style="float: left;">&nbsp;<b>Post subject:</b> <a href="#p86862"></a></div><div style="float: right;"><a href="./viewtopic.php?p=86862#p86862"><img src="./styles/subsilver2/imageset/icon_post_target.gif" width="12" height="9" alt="Post" title="Post" /></a><b>Posted:</b> Mon Nov 28, 2011 12:17 am&nbsp;</div></td>
				</tr>
				</table>
			</td>
		</tr>

		<tr class="row2">

			<td valign="top" class="profile">
				<table cellspacing="4" align="center" width="150">
			
				<tr>
					<td><img src="./styles/subsilver2/imageset/en/icon_user_offline.gif" alt="Offline" title="Offline" /></td>
				</tr>
			
				</table>

				<span class="postdetails">
					<br /><b>Joined:</b> Mon May 30, 2011 4:38 pm<br /><b>Posts:</b> 8
				</span>

			</td>
			<td valign="top">
				<table width="100%" cellspacing="5">
				<tr>
					<td>
					

						<div class="postbody"><div class="quotetitle">miker00lz wrote:</div><div class="quotecontent">even though nestest.nes passes on my (indirect),Y code, i want to verify i'm not making a mistake here that the tests didn't catch. should this also be wrapped like (indirect,X)?<br /><br />i wrap when calculating the zero-page address of the indirection table, but not when i add Y at the end.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">static void indy&#40;&#41; &#123; // &#40;indirect&#41;,Y<br />&nbsp; &nbsp; uint16_t eahelp, eahelp2;<br />&nbsp; &nbsp; eahelp = &#40;uint16_t&#41;read6502&#40;pc++&#41;;<br />&nbsp; &nbsp; eahelp2 = &#40;eahelp &amp; 0xFF00&#41; | &#40;&#40;eahelp + 1&#41; &amp; 0x00FF&#41;; //zero-page wraparound<br />&nbsp; &nbsp; ea = &#40;uint16_t&#41;read6502&#40;eahelp&#41; | &#40;&#40;uint16_t&#41;read6502&#40;eahelp2&#41; &lt;&lt; 8&#41;;<br />&nbsp; &nbsp; ea += &#40;uint16_t&#41;y;<br />&#125;<br /></div></div><br /><br />That code looks correct. You don't need to transfer the upper bits from eahelp to eahelp2. <br /><br />The code below is how i would do it. This way you know that bytes read are in cycle order.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">static void indy&#40;&#41; &#123; // &#40;indirect&#41;,Y<br />&nbsp; &nbsp; uint8_t zp = read6502&#40;pc++&#41;;<br />&nbsp; &nbsp; ea = &#40;unit16_t&#41; read6502&#40;&#40;unit16_t&#41; zp++&#41;;<br />&nbsp; &nbsp; ea |= &#40;uint16_t&#41; read6502&#40;&#40;uint16_t&#41; zp&#41; &lt;&lt; 8;<br />&nbsp; &nbsp; ea += &#40;uint16_t&#41; y;<br />&#125; <br /></div></div>

					<br clear="all" /><br />

						<table width="100%" cellspacing="0">
						<tr valign="middle">
							<td class="gensmall" align="right">
							
							</td>
						</tr>
						</table>
					</td>
				</tr>
				</table>
			</td>
		</tr>

		<tr class="row2">

			<td class="profile"><strong><a href="#wrapheader">Top</a></strong></td>
			<td><div class="gensmall" style="float: left;">&nbsp;<a href="./memberlist.php?mode=viewprofile&amp;u=4882"><img src="./styles/subsilver2/imageset/en/icon_user_profile.gif" alt="Profile" title="Profile" /></a> &nbsp;</div> <div class="gensmall" style="float: right;">&nbsp;</div></td>
	
		</tr>

	<tr>
		<td class="spacer" colspan="2" height="1"><img src="images/spacer.gif" alt="" width="1" height="1" /></td>
	</tr>
	</table>

	<table width="100%" cellspacing="1" class="tablebg">
	<tr align="center">
		<td class="cat"><form name="viewtopic" method="post" action="./viewtopic.php?f=3&amp;t=8353"><span class="gensmall">Display posts from previous:</span> <select name="st" id="st"><option value="0" selected="selected">All posts</option><option value="1">1 day</option><option value="7">7 days</option><option value="14">2 weeks</option><option value="30">1 month</option><option value="90">3 months</option><option value="180">6 months</option><option value="365">1 year</option></select>&nbsp;<span class="gensmall">Sort by</span> <select name="sk" id="sk"><option value="a">Author</option><option value="t" selected="selected">Post time</option><option value="s">Subject</option></select> <select name="sd" id="sd"><option value="a" selected="selected">Ascending</option><option value="d">Descending</option></select>&nbsp;<input class="btnlite" type="submit" value="Go" name="sort" /></form></td>
	</tr>
	</table>
	

	<table width="100%" cellspacing="1">
	<tr>
		<td align="left" valign="middle" nowrap="nowrap">
		<a href="./posting.php?mode=post&amp;f=3"><img src="./styles/subsilver2/imageset/en/button_topic_new.gif" alt="Post new topic" title="Post new topic" /></a>&nbsp;<a href="./posting.php?mode=reply&amp;f=3&amp;t=8353"><img src="./styles/subsilver2/imageset/en/button_topic_reply.gif" alt="Reply to topic" title="Reply to topic" /></a>
		</td>
		
			<td class="nav" valign="middle" nowrap="nowrap">&nbsp;Page <strong>1</strong> of <strong>1</strong><br /></td>
			<td class="gensmall" nowrap="nowrap">&nbsp;[ 12 posts ]&nbsp;</td>
			<td class="gensmall" width="100%" align="right" nowrap="nowrap"></td>
		
	</tr>
	</table>

</div>

<div id="pagefooter"></div>

<br clear="all" />
<table class="tablebg" width="100%" cellspacing="1" cellpadding="0" style="margin-top: 5px;">
	<tr>
		<td class="row1">
			<p class="breadcrumbs"><a href="./index.php">Board index</a> &#187; <a href="./viewforum.php?f=24">NES / Famicom</a> &#187; <a href="./viewforum.php?f=3">NESemdev</a></p>
			<p class="datetime">All times are UTC - 7 hours </p>
		</td>
	</tr>
	</table>
	<br clear="all" />

	<table class="tablebg" width="100%" cellspacing="1">
	<tr>
		<td class="cat"><h4>Who is online</h4></td>
	</tr>
	<tr>
		<td class="row1"><p class="gensmall">Users browsing this forum: No registered users and 1 guest</p></td>
	</tr>
	</table>


<br clear="all" />

<table width="100%" cellspacing="1">
<tr>
	<td width="40%" valign="top" nowrap="nowrap" align="left"></td>
	<td align="right" valign="top" nowrap="nowrap"><span class="gensmall">You <strong>cannot</strong> post new topics in this forum<br />You <strong>cannot</strong> reply to topics in this forum<br />You <strong>cannot</strong> edit your posts in this forum<br />You <strong>cannot</strong> delete your posts in this forum<br />You <strong>cannot</strong> post attachments in this forum<br /></span></td>
</tr>
</table>

<br clear="all" />

<table width="100%" cellspacing="0">
<tr>
	<td><form method="get" name="search" action="./search.php"><span class="gensmall">Search for:</span> <input class="post" type="text" name="keywords" size="20" /> <input class="btnlite" type="submit" value="Go" /><input type="hidden" name="t" value="8353" />
<input type="hidden" name="sf" value="msgonly" />
</form></td>
	<td align="right">
	<form method="post" name="jumpbox" action="./viewforum.php" onsubmit="if(document.jumpbox.f.value == -1){return false;}">

	<table cellspacing="0" cellpadding="0" border="0">
	<tr>
		<td nowrap="nowrap"><span class="gensmall">Jump to:</span>&nbsp;<select name="f" onchange="if(this.options[this.selectedIndex].value != -1){ document.forms['jumpbox'].submit() }">

		
			<option value="-1">Select a forum</option>
		<option value="-1">------------------</option>
			<option value="24">NES / Famicom</option>
		
			<option value="2">&nbsp; &nbsp;NESdev</option>
		
			<option value="3" selected="selected">&nbsp; &nbsp;NESemdev</option>
		
			<option value="21">&nbsp; &nbsp;NES Graphics</option>
		
			<option value="6">&nbsp; &nbsp;NES Music</option>
		
			<option value="9">&nbsp; &nbsp;NES Hardware and Flash Equipment</option>
		
			<option value="22">&nbsp; &nbsp;Homebrew Projects</option>
		
			<option value="10">&nbsp; &nbsp;Newbie Help Center</option>
		
			<option value="11">&nbsp; &nbsp;FCdev</option>
		
			<option value="18">&nbsp; &nbsp;NESdev China</option>
		
			<option value="19">&nbsp; &nbsp;NESdev International</option>
		
			<option value="25">Other</option>
		
			<option value="5">&nbsp; &nbsp;General Stuff</option>
		
			<option value="4">&nbsp; &nbsp;Membler Industries</option>
		
			<option value="12">&nbsp; &nbsp;SNESdev</option>
		
			<option value="20">&nbsp; &nbsp;GBDev</option>
		
			<option value="23">&nbsp; &nbsp;Other Retro Dev</option>
		
			<option value="15">&nbsp; &nbsp;Test Forum</option>
		
			<option value="26">Site Issues</option>
		
			<option value="13">&nbsp; &nbsp;phpBB Issues</option>
		
			<option value="14">&nbsp; &nbsp;Web Issues</option>
		
			<option value="16">&nbsp; &nbsp;nesdevWiki</option>
		

		</select>&nbsp;<input class="btnlite" type="submit" value="Go" /></td>
	</tr>
	</table>

	</form>
</td>
</tr>
</table>


</div>

<div id="wrapfooter">
	
	<span class="copyright">Powered by <a href="http://www.phpbb.com/">phpBB</a>&reg; Forum Software &copy; phpBB Group
	</span>
</div>

</body>
</html>