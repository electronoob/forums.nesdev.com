<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=3&amp;t=6344" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2010-06-20T21:04:49-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=3&amp;t=6344</id>
<entry>
<author><name><![CDATA[meatloaf69]]></name></author>
<updated>2010-06-20T21:04:49-07:00</updated>
<published>2010-06-20T21:04:49-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6344&amp;p=63169#p63169</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6344&amp;p=63169#p63169"/>
<title type="html"><![CDATA[is RTI used to return from BRK? wrong return address?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6344&amp;p=63169#p63169"><![CDATA[
nice info...... thnx for this  <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" /><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4364">meatloaf69</a> — Sun Jun 20, 2010 9:04 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2010-05-02T18:03:27-07:00</updated>
<published>2010-05-02T18:03:27-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6344&amp;p=60749#p60749</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6344&amp;p=60749#p60749"/>
<title type="html"><![CDATA[is RTI used to return from BRK? wrong return address?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6344&amp;p=60749#p60749"><![CDATA[
This is speculation, but I think BRK pushes PC+2 because the underlying hardware shares circuitry between BRK and JSR.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Sun May 02, 2010 6:03 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[BMF54123]]></name></author>
<updated>2010-05-02T13:47:12-07:00</updated>
<published>2010-05-02T13:47:12-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6344&amp;p=60746#p60746</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6344&amp;p=60746#p60746"/>
<title type="html"><![CDATA[is RTI used to return from BRK? wrong return address?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6344&amp;p=60746#p60746"><![CDATA[
Somewhat on-topic: "Final Fight 3" for the SNES <a href="http://wiki.rustedlogic.net/Final_Fight_3" class="postlink">has an ASCII error message stored after every BRK in the code.</a> Presumably, their development system would grab the address the BRK occurred at and print whatever message was stored there. Kinda nifty.<br /><br />Unfortunately, there's no interesting code at the BRK vector, just an infinite loop. <img src="http://forums.nesdev.com/images/smilies/icon_sad.gif" alt=":(" title="Sad" /><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=935">BMF54123</a> — Sun May 02, 2010 1:47 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2010-05-02T08:51:34-07:00</updated>
<published>2010-05-02T08:51:34-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6344&amp;p=60743#p60743</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6344&amp;p=60743#p60743"/>
<title type="html"><![CDATA[is RTI used to return from BRK? wrong return address?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6344&amp;p=60743#p60743"><![CDATA[
What would be really hard? The 6502 should have no trouble, and neither should an emulator. Usually it will "correct" itself fairly quickly, since it's less likely that the intended instructions just happen to also be interpretable at an offset as a separate stream that <em>never</em> intersects. It's more likely that one of these alternate instructions is of a different length than the instruction it's embedded in, causing the two streams to merge. You can experiment yourself with a disassembler that handles unofficial instructions, and try disassembling some code from various offsets.<br /><br />If your assembler treats BRK as a one-byte instruction, you can always just have your BRK handler return to the stacked address less one. Or define a Brk macro which accepts a one-byte operand. It might have been that it saved a few transistors to have BRK push PC+2 on the stack. After all, BRK is always presented as a debugging aid, where you don't really care the specifics of its operation since you can compensate in the IRQ/BRK handler.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Sun May 02, 2010 8:51 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Petruza]]></name></author>
<updated>2010-05-02T07:32:48-07:00</updated>
<published>2010-05-02T07:32:48-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6344&amp;p=60742#p60742</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6344&amp;p=60742#p60742"/>
<title type="html"><![CDATA[is RTI used to return from BRK? wrong return address?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6344&amp;p=60742#p60742"><![CDATA[
The question is, the assemblers used to build NES commercial games in the 80s would add an extra byte for BRK mnemonics?<br />Or did programmers have to do something like:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">BRK<br />.byte 00<br /><br />&#40;or&#41;<br /><br />BRK<br />NOP</div><br />It's very unlikely, but what if some programmer forgot to pad the BRK (and didn't do anything to correct the returning address) and entered an actual instruction after BRK and somehow the game still worked despite skipping that instruction's opcode? That would be really hard as the interpreting of instructions from that point would be off by one byte.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3773">Petruza</a> — Sun May 02, 2010 7:32 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Dwedit]]></name></author>
<updated>2010-05-02T07:21:55-07:00</updated>
<published>2010-05-02T07:21:55-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6344&amp;p=60741#p60741</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6344&amp;p=60741#p60741"/>
<title type="html"><![CDATA[is RTI used to return from BRK? wrong return address?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6344&amp;p=60741#p60741"><![CDATA[
They wanted BRK to be a "Oh cool, you can pass in an argument to the interrupt handler like this!" instruction.  Sorta like SWI on the ARM, or SYSCALL on other processors.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=53">Dwedit</a> — Sun May 02, 2010 7:21 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Petruza]]></name></author>
<updated>2010-05-02T06:43:13-07:00</updated>
<published>2010-05-02T06:43:13-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6344&amp;p=60739#p60739</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6344&amp;p=60739#p60739"/>
<title type="html"><![CDATA[is RTI used to return from BRK? wrong return address?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6344&amp;p=60739#p60739"><![CDATA[
<div class="quotetitle">Drag wrote:</div><div class="quotecontent"><br />Ok, color me uneducated, but <em>why</em> is there an extra byte after BRK? As in, why is BRK a two-byte opcode, where the parameter it takes has no apparent use?<br /></div><br /><br />This is pure speculation, but as you know the 6502 does dummy memory reads, and writes, and some illegal opcodes like 2-byte NOPs do memory addressing with no apparent reason, all this, including the BRK byte-skipping, make me think that there are internal workings of the chip that may make it do this apparently useless things for no reason.<br />Maybe the BRK operation needs for some reason to further increment the PC, and the 6502 designers thought that skipping a byte was not so serious.<br />Or maybe they designed it with an argument to jump to different subroutines whose vectors were to be stored somewhere but then dropped the idea, but didn't correct the instruction's byte length.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3773">Petruza</a> — Sun May 02, 2010 6:43 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Drag]]></name></author>
<updated>2010-05-02T01:50:06-07:00</updated>
<published>2010-05-02T01:50:06-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6344&amp;p=60737#p60737</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6344&amp;p=60737#p60737"/>
<title type="html"><![CDATA[is RTI used to return from BRK? wrong return address?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6344&amp;p=60737#p60737"><![CDATA[
<div class="quotetitle">Bregalad wrote:</div><div class="quotecontent"><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Ok, color me uneducated, but why is there an extra byte after BRK?<br /></div><br />.... because the 6502 pushes return adress + 2 on the stack. There is really no other reason. I guess the byte can be used as an "argument" to the BRK opcode, to tell the IRQ handler which type of IRQ you're simluating.<br />The BRK opcode is completely useless IMO and I never ever used it. I don't see the point to call the IRQ routine in the middle of code.</div><br />I understand that PC+2 is pushed onto the stack, which <em>causes</em> the skipped byte, but I'm wondering if there was some kind of reasoning behind pushing PC+2 onto the stack, as opposed to PC+1.<br /><br />Maybe I got confused, but it sounded like there was a use for (or otherwise, a reason to have) the argument that nobody was explaining. <img src="http://forums.nesdev.com/images/smilies/icon_razz.gif" alt=":P" title="Razz" /><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=21">Drag</a> — Sun May 02, 2010 1:50 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2010-05-02T01:44:55-07:00</updated>
<published>2010-05-02T01:44:55-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6344&amp;p=60736#p60736</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6344&amp;p=60736#p60736"/>
<title type="html"><![CDATA[is RTI used to return from BRK? wrong return address?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6344&amp;p=60736#p60736"><![CDATA[
<div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Ok, color me uneducated, but why is there an extra byte after BRK?<br /></div><br />.... because the 6502 pushes return adress + 2 on the stack. There is really no other reason. I guess the byte can be used as an "argument" to the BRK opcode, to tell the IRQ handler which type of IRQ you're simluating.<br />The BRK opcode is completely useless IMO and I never ever used it. I don't see the point to call the IRQ routine in the middle of code.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Sun May 02, 2010 1:44 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Drag]]></name></author>
<updated>2010-05-02T01:39:31-07:00</updated>
<published>2010-05-02T01:39:31-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6344&amp;p=60735#p60735</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6344&amp;p=60735#p60735"/>
<title type="html"><![CDATA[is RTI used to return from BRK? wrong return address?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6344&amp;p=60735#p60735"><![CDATA[
Ok, color me uneducated, but <em>why</em> is there an extra byte after BRK? As in, why is BRK a two-byte opcode, where the parameter it takes has no apparent use?<br /><br />I have no problem accepting the fact that there <em>is</em> an extra, seemingly unused byte after the BRK, but what was the design choice that lead to having BRK skip an extra byte?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=21">Drag</a> — Sun May 02, 2010 1:39 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2010-05-01T15:19:55-07:00</updated>
<published>2010-05-01T15:19:55-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6344&amp;p=60722#p60722</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6344&amp;p=60722#p60722"/>
<title type="html"><![CDATA[is RTI used to return from BRK? wrong return address?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6344&amp;p=60722#p60722"><![CDATA[
@Petruza: <a href="http://members.chello.nl/taf.offenga/illopc31.txt" class="postlink">This is illegal, you know</a>. Look up "DOP". Though the document is about Atari 8-bit computers, the unofficial instructions are the same on all classic 6502 CPUs, including second-source ones that have the decimal mode circuitry dummied out.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Sat May 01, 2010 3:19 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Petruza]]></name></author>
<updated>2010-05-01T15:15:11-07:00</updated>
<published>2010-05-01T15:15:11-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6344&amp;p=60720#p60720</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6344&amp;p=60720#p60720"/>
<title type="html"><![CDATA[is RTI used to return from BRK? wrong return address?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6344&amp;p=60720#p60720"><![CDATA[
<div class="quotetitle">tepples wrote:</div><div class="quotecontent"><br />It appears you've never worked with the unofficial instructions such as the two-byte NOPs. You'll need a few unofficial instructions to get <a href="http://nesdev.com/bbs/viewtopic.php?t=4999" class="postlink">Puzznic and Lolo 3</a> to run.<br /></div><br /><br />Damn, thanks. Do you have a doc about that to point me to?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3773">Petruza</a> — Sat May 01, 2010 3:15 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2010-05-01T15:12:39-07:00</updated>
<published>2010-05-01T15:12:39-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6344&amp;p=60719#p60719</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6344&amp;p=60719#p60719"/>
<title type="html"><![CDATA[is RTI used to return from BRK? wrong return address?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6344&amp;p=60719#p60719"><![CDATA[
<div class="quotetitle">Petruza wrote:</div><div class="quotecontent"><br />$00 is the single opcode that causes the 6502 to completely ignore a prefectly good byte of executable code<br /></div><br />It appears you've never worked with the unofficial instructions such as the two-byte NOPs. You'll need a few unofficial instructions to get <a href="http://nesdev.com/bbs/viewtopic.php?t=4999" class="postlink">Puzznic and Lolo 3</a> to run.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Sat May 01, 2010 3:12 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2010-05-01T14:49:05-07:00</updated>
<published>2010-05-01T14:49:05-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6344&amp;p=60718#p60718</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6344&amp;p=60718#p60718"/>
<title type="html"><![CDATA[is RTI used to return from BRK? wrong return address?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6344&amp;p=60718#p60718"><![CDATA[
<div class="quotetitle">Petruza wrote:</div><div class="quotecontent"><br />Well yes, the docs and emu sources I read, implied this byte skipping, but none of them explicitly stated that BRK's following byte was skipped and why.<br /></div><br />Technically, BRK doesn't skip anything. When the CPU executes the BRK opcode, it pushes the address of the opcode+2 on the stack, then pushes the current flags ORed with $30 on the stack, then jumps to the address contained in $FFFE-$FFFF. It's up to the IRQ/BRK handler what to do next, and how to return to the interrupted code.<br /><br />For good documentation, get a book. I've been reading the 6502/65816 book koitsu just mentioned and it's the best by far of all those I've evaluated recently (I just love that the library still has these!).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Sat May 01, 2010 2:49 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Petruza]]></name></author>
<updated>2010-05-01T13:22:18-07:00</updated>
<published>2010-05-01T13:22:18-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6344&amp;p=60715#p60715</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6344&amp;p=60715#p60715"/>
<title type="html"><![CDATA[is RTI used to return from BRK? wrong return address?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6344&amp;p=60715#p60715"><![CDATA[
Well, it is my responsibillity to get good documentation, so any help would be appreciated.<br /><br />So far I'm using <!-- m --><a class="postlink" href="http://www.obelisk.demon.co.uk/6502/">http://www.obelisk.demon.co.uk/6502/</a><!-- m --> , "6502 Microprocessor Revision 1.02 by _Bnu." which I think I got from nesdev, but can't find the link, and the Commodore 64 Programmer's reference guide.<br /><br />I've finished coding addressing modes and instruction exectuing (big switch for each) but there surely are some errors, I didn't test it yet.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3773">Petruza</a> — Sat May 01, 2010 1:22 pm</p><hr />
]]></content>
</entry>
</feed>