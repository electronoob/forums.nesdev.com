<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Read Palette Data Bytes</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Read Palette Data Bytes</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=10&amp;t=9691">http://forums.nesdev.com/viewtopic.php?f=10&amp;t=9691</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Raccoon</b> [ Fri Jan 11, 2013 9:31 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Read Palette Data Bytes</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />So after have some practices two years later, I retry to do some simple stuff on NES.<br /><br />I've succesffuly write colors palettes and nametables.<br />So know, I try to understand how to read colors palettes. (Because I would probably compute it)<br /><br />For know I just try to read the early first byte of the nes palette at $3F00. Regarding the wiki, it seems possible to Read at $2007 &quot;DATA&quot; when the screen is turned off or during Vblank Time.<br /><br />So I found different talk about it accross the forum, but never find &quot;code&quot; that show it in reality.<br /><br />Can you help me figure it out how I must doing it:<br />I try different things, so the simple would be like this ? (palette is already filled with colors)<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">VBlankWait:&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; wait for Vblank, PPU is ready after this&nbsp; &nbsp;&nbsp; &nbsp;<br />bit PPU_STATUS&nbsp; &nbsp;&nbsp; &nbsp;; read bit 7 of PPU_STATUS $2002&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;<br />bpl VBlankWait&nbsp; &nbsp;&nbsp; &nbsp;; if&nbsp; N = 0 (bit 7 of PPU_STATUS) goto VblankWait&nbsp; &nbsp;<br /><br />lda #$00001100&nbsp; &nbsp;&nbsp; &nbsp;; Disable NMI &amp; Set Increment Per 1<br />sta PPU_CTRL&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;; = $2000<br /><br />lda #$00000110&nbsp; &nbsp;&nbsp; &nbsp;; Screen Display OFF<br />sta PPU_MASK&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;; = $2001<br /><br />SetPaletteAddress:&nbsp; &nbsp;; palette start always at $3F00 in PPU Memory<br />lda #$3F<br />sta PPU_ADDR&nbsp; &nbsp;&nbsp; &nbsp;; $2006 write low&nbsp; byte<br />lda #$00&nbsp; &nbsp;<br />sta PPU_ADDR&nbsp; &nbsp;&nbsp; &nbsp;; write high byte<br />&nbsp; &nbsp;<br />lda PPU_DATA&nbsp; &nbsp;&nbsp; &nbsp;; $2007<br />sta $00&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;; will be the first color ?<br />lda PPU_DATA<br />sta $01&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;; just to check if it could be here or it &quot;must&quot; be second color ?<br /></div><br />Source code for Debug<div class="attachtitle">Attachment:</div><div class="attachcontent">
			<span class="genmed">
				<img src="./styles/subsilver2/imageset/icon_topic_attach.gif" width="14" height="18" alt="" title="" /> 
				<a href="./download/file.php?id=299">Debug.zip</a> [37.21 KiB]
			</span><br />
			<span class="gensmall">Downloaded 29 times</span>
		

		<br />
	</div><br /><br />Thanks for those wo know how to do it.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Fri Jan 11, 2013 10:02 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Read Palette Data Bytes</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><s>Insert an extra LDA PPU_DATA before the &quot;real&quot; one &#40;see documentation of $2007 read for more&#41;</s>. <strong>I should have looked at the documentation.</strong><br /><br />See if you can run this with a debugger so you can see for yourself whether the colors read back as you expect. Or set up an ASCII font in the NES and print the values read back on screen. You need to get it where you have feedback like this so you can experiment directly.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Fri Jan 11, 2013 10:17 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Read Palette Data Bytes</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />FYI, palette reading doesn't work on some Famicoms (I think Famicom Titler, because it uses the RGB PPU, but maybe some others with old PPU revisions as well).<br /><br />Even if it did work, I don't think it's a good idea to design your program in a way that you have to read it back.<br /><br />Oh, and palette reading doesn't work in FCEUX if that's what you're testing with.<br /><br /><div class="quotetitle">blargg wrote:</div><div class="quotecontent">Insert an extra LDA PPU_DATA before the &quot;real&quot; one (see documentation of $2007 read for more).</div><br />He's reading the palette, so there's no need for the dummy read.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Fri Jan 11, 2013 10:20 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Read Palette Data Bytes</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><s>When reading $2007, there&#39;s a delay, so the first byte that returns is invalid. Just discard the first value, and use the following ones normally.</s> As thefox mentioned, this doesn't apply to palettes.<br /><br />I have to ask though: Why do you need to read the palette back? Is it to perform modifications on it, such as fades and things like that? The palette is so small that I would advise you to keep a copy of it in RAM instead, so that you can manipulate it freely and use VBlank time just to write it to VRAM. VBlank time is pretty short, so if you use it to read, modify and write values back you might end up wasting too much time on this and not have enough left for more important stuff. Ideally, VBlank time should just be used for blasting previously calculated data to VRAM, if you are doing lots of calculations you're just wasting that time.<br /><br />Also, were't there certain Famicom revisions that didn't allow palette reading? I'm not sure, but I seem to remember someone saying something like this. It could have been reading $2004 that wasn't allowed, I'm not sure. Someone else will have to confirm this.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Raccoon</b> [ Fri Jan 11, 2013 10:47 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Read Palette Data Bytes</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />So Thanks,<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">thefox: Oh, and palette reading doesn't work in FCEUX if that's what you're testing with.</div><br />Ha, yes it was. Thanks to stop me in this loop.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">tokumaru: Is it to perform modifications on it, such as fades and things like that?</div><br />In First place yes, but I was thinking It will preserve some Ram Memory.<br />I've found a lot of talk about it, and I succes doing color swap during Vblank. (So It's not the problem)<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">thefox: Even if it did work, I don't think it's a good idea to design your program in a way that you have to read it back.</div><br />Yes, know I will never try to reuse it <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">tokumaru: I would advise you to keep a copy of it in RAM instead</div><br />Yes I will probably use an &quot;already made&quot; Buffer, and be carefull to not use it in other thinks when there is fading.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">tokumaru: VBlank time is pretty short</div><br />So I was thinking about changing only 8 colors per NMI.<br /><br />I've found that &quot;Transparent Color&quot; need to be swapped in one pass, is it True ?<br />[edit]After some tests, change the first byte Transparent Color change alls of this color[/edit]

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Fri Jan 11, 2013 11:17 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Read Palette Data Bytes</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />As usual, tokumaru is exagerating how short VBlank time is. It does not allow you to update the entiere screen, but the bandwith is still large enough for most applications. I use read-modify-write from VRAM for attribute table in my engine, and it works well. HOWEVER, I agree for the palette it'd be sub-optimal. Because using 32 bytes of RAM for this is really not much, I doubt you'd ever use so much RAM that you don't even have 32 bytes somewhere for a shadow copy of the palette. Many games even uses 2 shadow copies, one for the original palette and a second one with effects enabled (or something in the like).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Fri Jan 11, 2013 11:46 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Read Palette Data Bytes</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">As usual, tokumaru is exagerating how short VBlank time is.</div><br />Keep in mind that he has to read the palette, <strong>execute the fade logic</strong> and write it back. Really, with loops and conditionals, this could easily eat most of VBlank, leaving little time for sprite and name table updates.<br /><br />Raccoon, if you pre-calculate everything, you can definitely write more than 8 colors per NMI.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Raccoon</b> [ Fri Jan 11, 2013 11:57 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Read Palette Data Bytes</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Yes Thanks Bregalad.<br />I already think update the entire palette is possible (if you only do it in one NMI).<br /><br />But the advice from tokumaru &quot;is good&quot; because, with some complexity, i would probably implement it in an &quot;another project&quot; during updating nametable columns, and keep the smooth scrolling without lags.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">tokumaru: Raccoon, if you pre-calculate everything, you can definitely write more than 8 colors per NMI.</div><br />I think this point would effectivelly need to be mentionned : It's actually what I'm doing <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /><br /><br />For know I try some tests, I will let all of you know how I've done.<br />(and probably share with some source and nes resulting program)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>3gengames</b> [ Fri Jan 11, 2013 1:03 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Read Palette Data Bytes</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />You'd honestly have to try pretty hard not to update the palette in one whole NMI. You should be able to write the palette a good number of times. One way to make it fast is to put 32 tiles for scrolling and then the 32 bytes for the palette in the $0100 page of RAM with the stack, and put the stack to the beginning of the data and do a PLA/STA loop to unload it all fast. That's how I do it, at least. But uploading 64 bytes isn't very hard at all.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dwedit</b> [ Fri Jan 11, 2013 1:06 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Read Palette Data Bytes</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Vblank time length isn't really an issue here.  You can comfortably transfer 192 bytes in a vblank, and that's enough to transfer a palette 6 times over.<br /><br />edit: PLA/STA loop is equally fast as a LDA xxxx,X \ STA loop, just smaller code.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Movax12</b> [ Fri Jan 11, 2013 1:16 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Read Palette Data Bytes</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Too bad using PLA isn't faster, but it is better if you need to save code space, as well as RAM. (If you can live with a reduced stack.)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>3gengames</b> [ Fri Jan 11, 2013 1:40 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Read Palette Data Bytes</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />It's better because you have to load 1 value, and then do a PLA loop to do the optimized loop (Whatever that is called again), but if you keep all 3 arrays at the beginning of $0100, so you don't have to reposition any pointer at all while you would putting them other places. Now an array of LDA STA in WRAM would be better, but most games don't use it so I figured it'd be useless to mention. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Fri Jan 11, 2013 2:22 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Read Palette Data Bytes</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The ridiculously optimized 30 fps version of the &quot;Bad Apple&quot; video uses a self-modifying sequence of LDA #$xx/STA $2007 to copy 240 bytes while still having time to read back from CHR ROM where a third of the video data is stored.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Fri Jan 11, 2013 9:05 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Read Palette Data Bytes</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Getting slightly off topic here, but doing it the other way around, i.e. building the buffer with PHA, and writing it to PPU with STA could potentially be globally faster because PHA is only 3 cycles and you get automatic indexing. At least when I was writing my scrolling code I was running out of index registers all the time. The problem of course is that if subroutines have to be used in the scrolling code, SP has to be saved and restored each time. That's why I didn't do it in my own engine, I had already too many subroutine dependencies, but if I ever rewrite my scrolling code I'll consider it.<br /><br />Another &quot;problem&quot; is that the buffer is built backwards, but that's not really a problem.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dwedit</b> [ Fri Jan 11, 2013 11:53 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Read Palette Data Bytes</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />If you use interrupts, stack tricks for building the buffers are out of the question.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>