<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Small C for NES: A Curious Journey</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Small C for NES: A Curious Journey</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=10205">http://forums.nesdev.com/viewtopic.php?f=2&amp;t=10205</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>4</strong> of <strong>5</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Movax12</b> [ Fri Jun 28, 2013 9:48 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Small C for NES: A Curious Journey</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Some related rambling - I know this is about C, but maybe there is something useful in my head:<br /><br />I have a configuration file I include as a part of every module - modules are to stay organized and to help with build time, since my code is macro heavy is does build slow.<br /><br />Rather than explain I'll show:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">__MAPPER__ = 4 ; 0 = NROM, 4 = MMC3 , set constants below as needed<br /><br />.if __MAPPER__ = 0<br />&nbsp; &nbsp; __NUM_16K_PRG_BANKS__&nbsp; = 2<br />&nbsp; &nbsp; __NUM_8K_CHR_BANKS__&nbsp; &nbsp;= 1<br />&nbsp; &nbsp; __MIRRORING__&nbsp; = 0 ; Horizontal<br />.endif<br /><br />.if __MAPPER__ = 4<br />&nbsp; &nbsp; ; modify:<br />&nbsp; &nbsp; __MMC3_8K_BANKABLE_CODE_BANKS__ = 4&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; number of banks designated as CODE (remainder of bankable banks are DATA )<br />&nbsp; &nbsp; __MMC3_PRGROM_BANK_MODE__&nbsp; &nbsp; &nbsp; &nbsp;= 1 &lt;&lt; 6&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ; 1: $C000-$DFFF swappable,$8000-$9FFF fixed to second-last bank)<br />&nbsp; &nbsp; __MMC3_TOTAL_PRG_BANKS__&nbsp; &nbsp; &nbsp; &nbsp; = 8&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; total number of all CPU BANKS in 8K<br />&nbsp; &nbsp; __MMC3_TOTAL_CHR_BANKS__&nbsp; &nbsp; &nbsp; &nbsp; = 8&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; total number of all CHR BANKS in 1K<br />&nbsp; &nbsp; <br />&nbsp; &nbsp;; do not modifiy<br />&nbsp; &nbsp; __MMC3_DATA_BANK_SELECT__&nbsp; &nbsp; &nbsp; &nbsp;= __MMC3_PRGROM_BANK_MODE__ | 6 ; 6: Select 8 KB PRG ROM bank at $C000-$DFFF / $8000-$BFFF<br />&nbsp; &nbsp; __MMC3_CODE_BANK_SELECT__&nbsp; &nbsp; &nbsp; &nbsp;= __MMC3_PRGROM_BANK_MODE__ | 7 ; 7: Select 8 KB PRG ROM bank at $A000-$BFFF <br />&nbsp; &nbsp; __NUM_16K_PRG_BANKS__&nbsp; =&nbsp; __MMC3_TOTAL_PRG_BANKS__ / 2<br />&nbsp; &nbsp; __NUM_8K_CHR_BANKS__&nbsp; &nbsp;=&nbsp; __MMC3_TOTAL_CHR_BANKS__ / 8<br />&nbsp; &nbsp; <br />&nbsp; &nbsp; ; check:<br />&nbsp; &nbsp; .if&nbsp; (__MMC3_TOTAL_PRG_BANKS__ &amp; (__MMC3_TOTAL_PRG_BANKS__ - 1)) &lt;&gt; 0<br />&nbsp; &nbsp; &nbsp; &nbsp; .error &quot;MMC3 banks are not a power of two.&quot;<br />&nbsp; &nbsp; .endif<br />&nbsp; &nbsp; <br />.endif<br /><br /></div><br /><br />The idea is that it is preferential to bank $C000 to allow for DPMC samples. I treat $8000 as fixed data, $A000 as bankable code, $C000 as bankable data, $E000 as fixed code, and just stick to that. I think this is a pretty good way to do it. All if this is obfuscated with macros; I don't really have to worry about it the details of this at all once it is setup. I can also change the mapper to 0 and make a new build, and unless I run out of space or require a MMC3 feature, I can build NROM with only this change.<br /><br />I've decided that I am going to hook a request onto NMI to change data banks to avoid any threading issues (banking code banking is already clean with no tracking), so if you want to change banks, you have to drop a frame. If NMI needs to change banks, it can check the current bank and save it by reading the bank number at a specific point, perhaps the last byte of the bank stores the bank number.<br /><br />The parameter stuff: The stack only works well with the JSR and RTS instruction. Deal with any recursion manually and use zeropage for parameters and local variables. This can all be tracked at runtime (for accidental reuse) with thefox's latest revision of nintendulator with Lua scripting. Perhaps this is something to consider in a new language design: runtime range checking, etc.<br /><br />edit: batari basic: very limited. My HL macros can do far more as far as syntax and control of the code, though it has some bios/api code taking care of some things for you so is more than just a compiler.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>slobu</b> [ Fri Jun 28, 2013 10:15 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Small C for NES: A Curious Journey</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I may have oversimplified my statement that batari BASIC is just a compiler.  However limited its got a thriving homebrew community and even managed to &quot;port&quot; Super Mario Brothers over: <!-- m --><a class="postlink" href="http://www.youtube.com/watch?v=o5igUFICNB0">http://www.youtube.com/watch?v=o5igUFICNB0</a><!-- m --><br /><br />Whatever batari BASIC is doing seems to be a very good strategy - certainly worth studying for a similar project on the NES <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>3gengames</b> [ Fri Jun 28, 2013 10:21 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Small C for NES: A Curious Journey</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />AFAIK the only reason it works is because of how strict you have to be programming the 2600, because something like this...well, it could work for NES, but it'd need reworking for sure. Is it possible? I definitely think so, though.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>qbradq</b> [ Fri Jun 28, 2013 10:43 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Small C for NES: A Curious Journey</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />batari BASIC is a great example of a compiler that is specifically designed to work within the limits of a target system. It works very well.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>qbradq</b> [ Fri Jun 28, 2013 11:07 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Small C for NES: A Curious Journey</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I found <a href="http://www.crossware.com/smanuals/c8051/code%20bank%20switching%20method.html" class="postlink">this</a>, a C compiler part of a commercial development suite for the 8051 family of uC's that supports banked program code via pragmas. Pretty interesting.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Movax12</b> [ Fri Jun 28, 2013 11:41 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Small C for NES: A Curious Journey</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">http://www.crossware.com wrote:</div><div class="quotecontent">The compiler will generate the necessary code to automatically switch code banks whenever a banked function is called and the linker will automatically locate each function in the specified bank.</div><br /><br />This is what I have going on in ca65. If you can inline asm in cc65, can you also inline macros? I suppose you would have to integrate/be limited by: <!-- m --><a class="postlink" href="http://www.cc65.org/doc/cc65-7.html">http://www.cc65.org/doc/cc65-7.html</a><!-- m -->

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bananmos</b> [ Fri Jun 28, 2013 1:49 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Small C for NES: A Curious Journey</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I'm kind of surprised nobody has written a NES game with Atalan (that I know of...), but I guess it's mostly because of the esoteric syntax.</div><br /><br />I actually tried Atalan for my NES project a while ago after feeling really hooked on it from reading the docs. I proceeded to try and convert a minimal part of my game to it: the in-game map editor I used for debugging, figuring it would be a good candidate for a trial period.<br /><br />The experience did not live up to the expectation, as Atalan would produce lots of dummy stores (never read back, so no idea what they were for) to separately allocated temporary variables in zeropage, which made me realize even the simplest more large-scale project would quickly run out of zeropage storage. But even worse was the fact that the compiler would frequently segfault (that's what you get from C code after all <img src="./images/smilies/icon_wink.gif" alt=";)" title="Wink" /> whenever it didn't like the syntax I'd written. And debugging your compiler is the last situation you want to be in when using a HLL...<br /><br />Looking at the sparse activity of the source repository of Atalan leads me to classify it as semi-abandonware. It's a bit of a shame, because I think it's a lovely design spec for a language, and if someone had time to really polish the implementation I'd really love to use it. But that someone won't be me as part of my reasons for wanting some HLL functionality was having too little time to spend on my nesdev hobby...<br /><br />But I then switched to using Movax's HLA macros as a fallback plan and haven't looked back since <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bananmos</b> [ Fri Jun 28, 2013 1:58 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Small C for NES: A Curious Journey</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Speaking of high-level functionalities in CA65 though... has anyone succeeded in making <a href="http://en.wikipedia.org/wiki/Include_guard" class="postlink">include guard</a> for .h files in CA65? If I try to do it with the equivalent CA65 code:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">.IFNDEF __BLOCKTYPES_H__<br />.DEFINE __BLOCKTYPES_H__<br />; code<br />.ENDIF<br /></div><br /><br />...then the .IFNDEF will result in CA65 saying &quot;blocktypes.h(1): Error: Identifier expected&quot; the second time blocktypes.g is included.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Movax12</b> [ Fri Jun 28, 2013 2:10 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Small C for NES: A Curious Journey</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />^ This is because .define is not the same define as C.<br />In ca65:<br /><br />.define foo bar<br /><br />After this line, any text that matches foo is replaced with bar, all the time, the only exception is .undefine, so your .ifndef is actually resulting in .ifndef ... followed by a blank space.<br /><br />You need to do this:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">.IFNDEF __BLOCKTYPES_H__<br />__BLOCKTYPES_H__ = 1<br />; code<br />.ENDIF<br /></div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Fri Jun 28, 2013 2:11 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Small C for NES: A Curious Journey</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bananmos wrote:</div><div class="quotecontent"><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I'm kind of surprised nobody has written a NES game with Atalan (that I know of...), but I guess it's mostly because of the esoteric syntax.</div><br /><br />I actually tried Atalan for my NES project a while ago after feeling really hooked on it from reading the docs. I proceeded to try and convert a minimal part of my game to it: the in-game map editor I used for debugging, figuring it would be a good candidate for a trial period.<br /><br />The experience did not live up to the expectation, as Atalan would produce lots of dummy stores (never read back, so no idea what they were for) to separately allocated temporary variables in zeropage, which made me realize even the simplest more large-scale project would quickly run out of zeropage storage. But even worse was the fact that the compiler would frequently segfault (that's what you get from C code after all <img src="./images/smilies/icon_wink.gif" alt=";)" title="Wink" /> whenever it didn't like the syntax I'd written. And debugging your compiler is the last situation you want to be in when using a HLL...<br /><br />Looking at the sparse activity of the source repository of Atalan leads me to classify it as semi-abandonware. It's a bit of a shame, because I think it's a lovely design spec for a language, and if someone had time to really polish the implementation I'd really love to use it. But that someone won't be me as part of my reasons for wanting some HLL functionality was having too little time to spend on my nesdev hobby...</div><br />Ah, that's too bad. Now that I think of it, I think I tried it myself some time ago and remember it crashing when trying to compile some example project. I also don't like some of the syntax choices he/they made for the language. <br /><br /><div class="quotetitle">Bananmos wrote:</div><div class="quotecontent">Speaking of high-level functionalities in CA65 though... has anyone succeeded in making <a href="http://en.wikipedia.org/wiki/Include_guard" class="postlink">include guard</a> for .h files in CA65? If I try to do it with the equivalent CA65 code:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">.IFNDEF __BLOCKTYPES_H__<br />.DEFINE __BLOCKTYPES_H__<br />; code<br />.ENDIF<br /></div><br /><br />...then the .IFNDEF will result in CA65 saying &quot;blocktypes.h(1): Error: Identifier expected&quot; the second time blocktypes.g is included.</div><br />Here's what works:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">.IFNDEF __BLOCKTYPES_H__<br />__BLOCKTYPES_H__ = 1 ; Value doesn't matter<br />; code<br />.ENDIF<br /></div><br />The reason is that .define doesn't work the way you think it does (.ifndef checks for existence of symbols, .define defines C style macros). The naming of the directives is kind of unfortunate and confusing.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>qbradq</b> [ Fri Jun 28, 2013 5:21 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Small C for NES: A Curious Journey</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Yea, I didn't like the syntax of Atalan myself. Now that I've got a weekend without work I'm going to try and get a base implementation banged out for now. I'm torn about two points. I'm not sure if I want to use a BASIC or C syntax. That's really just a matter of taste, but I guess I'll go with C-style syntax. It's just what I'm used to.<br /><br />The other thing I'm trying to decide is if I want to generate the machine code directly or compile to ca65 assembly. I'm going to try the latter as it will be able to cross-link with libraries provided in ca65 or generic syntax pretty easily.<br /><br />I'll see what I come up with <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Fri Jun 28, 2013 11:54 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Small C for NES: A Curious Journey</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">qbradq wrote:</div><div class="quotecontent">The other thing I'm trying to decide is if I want to generate the machine code directly <span style="font-size: 150%; line-height: normal">or compile to ca65 assembly</span>. I'm going to try the latter as it will be able to cross-link with libraries provided in ca65 or generic syntax pretty easily.</div><br />I think this is a clear winner, because you can get a lot of other benefits as well, like being able to add debugging info (CA65 supports an undocumented directive which the C compiler uses to embed debug line info in the assembly files) and not having to write a linker.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bananmos</b> [ Sat Jun 29, 2013 4:47 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Small C for NES: A Curious Journey</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Movax/TheFox:<br />Thanks guys! I knew the .define implementation in ca65 was a bit weird... but did't quite realize the consequences <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Sat Jun 29, 2013 5:23 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Small C for NES: A Curious Journey</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Also beware of <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">.defined</tt> (this one doesn't check for existence of a <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">.define</tt> either). <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">.if .defined&#40; foo &#41;</tt> is the same as <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">.ifdef foo</tt>.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>qbradq</b> [ Sat Jun 29, 2013 6:11 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Small C for NES: A Curious Journey</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />thefox, honestly the main reason I want to use ca65 is so it'll be compatible with your Nintendulator builds <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /> Also, .dbg is now documented in the snapshot docs, kinda. Is there another directive you are referring to?

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>4</strong> of <strong>5</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>