<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=3&amp;t=10723" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2013-11-24T22:00:14-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=3&amp;t=10723</id>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2013-11-24T22:00:14-07:00</updated>
<published>2013-11-24T22:00:14-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10723&amp;p=121453#p121453</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10723&amp;p=121453#p121453"/>
<title type="html"><![CDATA[Re: Bandlimited Synthesis, Gibbs Phenomenon, and You]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10723&amp;p=121453#p121453"><![CDATA[
My problem with minimum-phase is it makes the overshoot even worse, since it's all bunched on one end. If anyone's interested, I can post some self-contained compact code to convert an impulse response to a minimum-phase equivalent.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Sun Nov 24, 2013 10:00 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2013-11-24T21:59:08-07:00</updated>
<published>2013-11-24T21:59:08-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10723&amp;p=121452#p121452</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10723&amp;p=121452#p121452"/>
<title type="html"><![CDATA[Re: Bandlimited Synthesis, Gibbs Phenomenon, and You]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10723&amp;p=121452#p121452"><![CDATA[
I guess a minimum or intermediate phase filter might help make ringing less noticeable because the onset of a sound near the cutoff would <a href="https://en.wikipedia.org/wiki/Auditory_masking#Temporal_masking" class="postlink">post-mask</a> the ringing.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Sun Nov 24, 2013 9:59 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Joe]]></name></author>
<updated>2013-11-24T21:54:29-07:00</updated>
<published>2013-11-24T21:54:29-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10723&amp;p=121450#p121450</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10723&amp;p=121450#p121450"/>
<title type="html"><![CDATA[Re: Bandlimited Synthesis, Gibbs Phenomenon, and You]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10723&amp;p=121450#p121450"><![CDATA[
<div class="quotetitle">Drag wrote:</div><div class="quotecontent"><br />Basically, each transition is surrounded by a bunch of oscillations that get bigger and bigger until the actual transition, and then they get smaller and smaller.<br /></div>Since no one else has mentioned it, this is only true of a linear phase filter. With a minimum phase filter, there are only oscillations after the transition.<br /><br />The site I linked to earlier also graphs some <a href="http://src.infinitewave.ca/?Top=SoX14_VHQ_MP&amp;Bot=SoX14_VHQ_IP" class="postlink">non-linear-phase resamplers</a>.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5948">Joe</a> — Sun Nov 24, 2013 9:54 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[lidnariq]]></name></author>
<updated>2013-11-24T20:43:19-07:00</updated>
<published>2013-11-24T20:43:19-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10723&amp;p=121448#p121448</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10723&amp;p=121448#p121448"/>
<title type="html"><![CDATA[Re: Bandlimited Synthesis, Gibbs Phenomenon, and You]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10723&amp;p=121448#p121448"><![CDATA[
Hm. <a href="http://forums.nesdev.com/viewtopic.php?p=44320#p44320" class="postlink">Forever ago I said</a> &quot;The time constant for the LC seems to be faaaaar above audible frequencies, time constant=654ns -&gt; corner freq=243kHz&quot;<br /><br />I think I'm seeing 4.5ish oscillations in 20µs, or ... 225kHz? Yeah, I bet that is the LC there.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3512">lidnariq</a> — Sun Nov 24, 2013 8:43 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2013-11-24T19:54:41-07:00</updated>
<published>2013-11-24T19:54:41-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10723&amp;p=121447#p121447</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10723&amp;p=121447#p121447"/>
<title type="html"><![CDATA[Re: Bandlimited Synthesis, Gibbs Phenomenon, and You]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10723&amp;p=121447#p121447"><![CDATA[
<div class="quotetitle">lidnariq wrote:</div><div class="quotecontent"><br />There looks like there's some visible ringing affecting the slope of the rise on the highpass, but I'm not certain where it's coming from.<br /></div><br />I was using a very short impulse (9uS) so had the gain way up, and was picking up various junk. Or could it be the inductor in series with the audio output in the schematic?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Sun Nov 24, 2013 7:54 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[lidnariq]]></name></author>
<updated>2013-11-24T19:30:49-07:00</updated>
<published>2013-11-24T19:30:49-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10723&amp;p=121444#p121444</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10723&amp;p=121444#p121444"/>
<title type="html"><![CDATA[Re: Bandlimited Synthesis, Gibbs Phenomenon, and You]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10723&amp;p=121444#p121444"><![CDATA[
<div class="quotetitle">tepples wrote:</div><div class="quotecontent"><br />what a &quot;div&quot; means. Is it the big squares or the little tick marks?<br /></div>The big squares.<br /><br />The highpass there is 63% in just over 1 division, so RC ≈ 10ms, so f_{hp}≈16Hz. The lowpass is 63% in a little less than 10µs, so f_{lp}≈16kHz.<br /><br />There looks like there's some visible ringing affecting the slope of the rise on the highpass, but I'm not certain where it's coming from.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3512">lidnariq</a> — Sun Nov 24, 2013 7:30 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2013-11-24T18:35:54-07:00</updated>
<published>2013-11-24T18:35:54-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10723&amp;p=121442#p121442</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10723&amp;p=121442#p121442"/>
<title type="html"><![CDATA[Re: Bandlimited Synthesis, Gibbs Phenomenon, and You]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10723&amp;p=121442#p121442"><![CDATA[
<div class="quotetitle">Joe wrote:</div><div class="quotecontent"><br />How much is that compared to the amount of ringing you'd get running the synthesis at the CPU clock frequency and then downsampling using a good (linear phase) sample rate conversion?<br /></div><br />A BLEP is a filtered step response, the integral of an impulse response. This means that the blip_buf method (taking the derivative of a signal and then convolving with a BLEP while decimating) should produce exactly the same result as convolving with a filtered impulse response and decimating, barring roundoff error. The only way to reduce ringing is to reduce the negative portion of the time-domain impulse response. And the way to do that is to widen the transition between pass and stop bands.<br /><br />blargg: I can eyeball it as soon as I can figure out what a &quot;div&quot; means. Is it the big squares or the little tick marks?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Sun Nov 24, 2013 6:35 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2013-11-24T18:21:19-07:00</updated>
<published>2013-11-24T18:21:19-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10723&amp;p=121440#p121440</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10723&amp;p=121440#p121440"/>
<title type="html"><![CDATA[Re: Bandlimited Synthesis, Gibbs Phenomenon, and You]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10723&amp;p=121440#p121440"><![CDATA[
Joe, great site comparing the resampling performance of various programs!<br /><br />Here's the NES lowpass and highpass effects on square waves:<br /><br /><img src="http://blargg.8bitalley.com/nes/nes_analog_lowpass.jpg" alt="Image" /><br />(20uS/div)<br /><br /><img src="http://blargg.8bitalley.com/nes/nes_analog_highpass.jpg" alt="Image" /><br />(10ms/div)<br /><br />Someone could calculate the RC constants based on these (not that we don't already have the schematic, just as an empirical approach).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Sun Nov 24, 2013 6:21 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Joe]]></name></author>
<updated>2013-11-24T14:41:14-07:00</updated>
<published>2013-11-24T14:41:14-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10723&amp;p=121426#p121426</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10723&amp;p=121426#p121426"/>
<title type="html"><![CDATA[Re: Bandlimited Synthesis, Gibbs Phenomenon, and You]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10723&amp;p=121426#p121426"><![CDATA[
<a href="http://src.infinitewave.ca/?Top=SoX144_HQ&amp;Bot=SoX14_HQ" class="postlink">These graphs</a> show the difference between having no aliasing and having a small, inaudible amount of aliasing. It looks like a good way to reduce the size of the BLEPs. (Check out the &quot;Impulse&quot; graphs.)<br /><br /><div class="quotetitle">Drag wrote:</div><div class="quotecontent"><br />This adds a high-pitched &quot;ringing&quot; around every transition, which ends up exaggerating the treble of the sound, making it sound tinny.<br /></div>How much is that compared to the amount of ringing you'd get running the synthesis at the CPU clock frequency and then downsampling using a good (linear phase) sample rate conversion?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5948">Joe</a> — Sun Nov 24, 2013 2:41 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2013-11-24T11:39:40-07:00</updated>
<published>2013-11-24T11:39:40-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10723&amp;p=121417#p121417</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10723&amp;p=121417#p121417"/>
<title type="html"><![CDATA[Re: Bandlimited Synthesis, Gibbs Phenomenon, and You]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10723&amp;p=121417#p121417"><![CDATA[
Yes, Gibbs' is about an unexpected perception and illusion based on our expectation that a square wave have square edges. I've reduced it in the past (for other reasons, particularly to allow full modulation without clipping, as the overshoot is significant) by reducing the high frequencies a bit, as most devices do anyway. In blip_buf I've gotten it to almost nothing.<br /><br />But, I don't think that this means that you can use a narrower window and still get the same attenuation of aliasing; I think it just reduces the in-band high-frequency content slightly (especially at Nyquist), but leaves the more subtle &quot;alias-canceling&quot; ripples at the same amplitude and thus needing the same width of window to maintain attenuation. Someone please chime in with more theory or actual tests demonstrating this.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Sun Nov 24, 2013 11:39 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Drag]]></name></author>
<updated>2013-11-24T10:52:33-07:00</updated>
<published>2013-11-24T10:52:33-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10723&amp;p=121411#p121411</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10723&amp;p=121411#p121411"/>
<title type="html"><![CDATA[Re: Bandlimited Synthesis, Gibbs Phenomenon, and You]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10723&amp;p=121411#p121411"><![CDATA[
<div class="quotetitle">Bregalad wrote:</div><div class="quotecontent"><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Bandlimited synthesis produces something called the Gibbs Phenomenon. Basically, each transition is surrounded by a bunch of oscillations that get bigger and bigger until the actual transition, and then they get smaller and smaller. This adds a high-pitched &quot;ringing&quot; around every transition, which ends up exaggerating the treble of the sound,<br /></div><br />This is wrong. If the frequencies goes to infinity, a sharp edge is a sharp edge. But because you are limited in frequency, the gibbs phenomenon appears. It doesn't increase any frequencies, it just removes the highest ones, because you can't go to infinity.</div><br />Ok, perhaps I could've worded it better. Bandlimited synthesis doesn't actually <em>create</em> the Gibbs phenomenon, it just &quot;reveals&quot; it.<br /><br />The Gibbs phenomenon doesn't go away when you add more harmonics, it just gets more squished. The overshooting is still there though, even when you're at infinite harmonics; it just is squished infinitesimally. I guess that's as good as it not being there at all. <img src="http://forums.nesdev.com/images/smilies/icon_razz.gif" alt=":P" title="Razz" /><br /><br />Either way, I think my point still stands that attenuating the Gibbs phenomenon, no matter how you do it, is still desirable for the reasons I mentioned in my original explanation.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=21">Drag</a> — Sun Nov 24, 2013 10:52 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2013-11-24T09:16:10-07:00</updated>
<published>2013-11-24T09:16:10-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10723&amp;p=121406#p121406</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10723&amp;p=121406#p121406"/>
<title type="html"><![CDATA[Re: Bandlimited Synthesis, Gibbs Phenomenon, and You]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10723&amp;p=121406#p121406"><![CDATA[
<div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Games are supposed to pre-emphasize samples' high frequencies to compensate<br /></div><br />This is interesting.<br />Since I added the anti-aliasing pre-filtering function on my <div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />BRRTools<br /></div> program when you resample input to an inferior sample rate, might I also add an optional high frequencies boost in the FIR filter as well ?<br /><br />I'm also considering supporting Plastation's VAG format (which would be few effort considering it's close enough to BRR), but the documentation is sparse and obscure.<br /><br />PS : Sorry for highacking your thread.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Sun Nov 24, 2013 9:16 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2013-11-24T07:56:06-07:00</updated>
<published>2013-11-24T07:56:06-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10723&amp;p=121404#p121404</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10723&amp;p=121404#p121404"/>
<title type="html"><![CDATA[Re: Bandlimited Synthesis, Gibbs Phenomenon, and You]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10723&amp;p=121404#p121404"><![CDATA[
BLEP stands for Band-Limited stEP function, as a pulse wave consists of the sum of two Heaviside step functions per cycle.<br /><br />Resampling on the Super NES and PlayStation doesn't show Gibbs overshoot because the 128 band-limited impulses stored in the DSP's ROM are all-positive, having had their treble mostly cut out with a Gaussian filter. Games are supposed to pre-emphasize samples' high frequencies to compensate; the Super NES has caught a lot of flak for sounding muffled compared to the Genesis because a lot of games don't have this pre-emphasis. This sigma approximation (<a href="https://en.wikipedia.org/wiki/Sigma_approximation" class="postlink">as described on Wikipedia</a>) is just a more rigorous way to design a <a href="https://en.wikipedia.org/wiki/Transfer_function" class="postlink">transfer function</a> (EQ curve) that cuts out these high frequencies than the ad-hoc method used in the Super NES and PlayStation, whose methodology <a href="http://forums.nesdev.com/viewtopic.php?f=12&amp;t=10586" class="postlink">nocash is trying to figure out</a>.<br /><br />Another EQ curve commonly used to decrease overshoot is the <a href="https://en.wikipedia.org/wiki/Raised-cosine_filter" class="postlink">raised-cosine filter</a>. It allows tweaking the center and width of the transition band to gently ease out the highs that cause ringing.<br /><br />Finally, there's a variant of cubic interpolation that completely eliminates overshoot by tweaking the normals at each sample point. But this <a href="https://en.wikipedia.org/wiki/Monotone_cubic_interpolation" class="postlink">monotone cubic interpolation</a> can't especially be used with the BLEP method because each sample's normal depends nonlinearly on the samples around it, and it looks like it leaves some frequencies above Fs/2 in the signal.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Sun Nov 24, 2013 7:56 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2013-11-24T04:34:02-07:00</updated>
<published>2013-11-24T04:34:02-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10723&amp;p=121401#p121401</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10723&amp;p=121401#p121401"/>
<title type="html"><![CDATA[Re: Bandlimited Synthesis, Gibbs Phenomenon, and You]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10723&amp;p=121401#p121401"><![CDATA[
<div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Bandlimited synthesis produces something called the Gibbs Phenomenon. Basically, each transition is surrounded by a bunch of oscillations that get bigger and bigger until the actual transition, and then they get smaller and smaller. This adds a high-pitched &quot;ringing&quot; around every transition, which ends up exaggerating the treble of the sound,<br /></div><br />This is wrong. If the frequencies goes to infinity, a sharp edge is a sharp edge. But because you are limited in frequency, the gibbs phenomenon appears. It doesn't increase any frequencies, it just removes the highest ones, because you can't go to infinity.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Sun Nov 24, 2013 4:34 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Drag]]></name></author>
<updated>2013-11-24T02:25:55-07:00</updated>
<published>2013-11-24T02:25:55-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10723&amp;p=121400#p121400</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10723&amp;p=121400#p121400"/>
<title type="html"><![CDATA[Bandlimited Synthesis, Gibbs Phenomenon, and You]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10723&amp;p=121400#p121400"><![CDATA[
Hey, I discovered something interesting and I'd like to discuss it. I haven't tested any of this, so let me know if I'm completely utterly wrong. <img src="http://forums.nesdev.com/images/smilies/icon_razz.gif" alt=":P" title="Razz" /><br /><br />Bandlimited synthesis produces something called the Gibbs Phenomenon. Basically, each transition is surrounded by a bunch of oscillations that get bigger and bigger until the actual transition, and then they get smaller and smaller. This adds a high-pitched &quot;ringing&quot; around every transition, which ends up exaggerating the treble of the sound, making it sound tinny. Most of you probably don't care, but if you're a programmer, there's a good reason to care:<br /><br />The most common way I've seen to implement bandlimited transitions (called BLEPs for some reason) is to have a circular buffer, and then have a 2-dimensional table of BLEPs at various different offsets. Whenever a transition needs to occur, you paste the appropriate BLEP into the circular buffer.<br /><br />The BLEP table (and the subsequent circular buffer) needs to be somewhat big because the oscillations take a while to stabilize to a point where they're too small to represent, and you need to represent all of them until that point.<br /><br />If you were to somehow reduce the Gibbs phenomenon, not only would you bring the shape of the transition closer to its ideal shape (a square wave), you also reduce the oscillating artifact that you need the big tables for.<br /><br />The method I've discovered for attenuating the Gibbs phenomenon is called sigma approximation.<br /><br />The common way to generate a square wave via its harmonics is like this:<br />Let N be the number of odd harmonics you want<br />For n = 1 to N<br />Let P = (2n - 1)<br />output += sin(P * x) / P<br /><br /><br />Using sigma approximation (which I don't actually know how to do, I just looked this up), you can produce a Gibbs-attenuated version of this square wave, like this:<br />N, n, and P are the same as before.<br />Let Q = (PI / (2*N))<br />output += <span style="color: #FF0000">(</span><span style="color: #FF8800">(sin(P*Q)/(P*Q))</span> * sin(P * x)<span style="color: #FF0000">)</span> / P<br />(Stuff is highlighted so it's less like a jungle of parentheses)<br /><br />This produces a square wave, but the oscillations that surround each transition are <em>greatly</em> reduced, and stabilize much more quickly.<br /><br />If you compare the two methods, the Gibbs-attenuated version <em>neither adds nor subtracts harmonics</em>, it only adjusts the amplitude of the existing ones. That means that the Gibbs-attenuated square wave is <em>still bandlimited</em>, even though it looks slightly different, so no aliasing. In addition, the reduction in those oscillations means they stabilize much more quickly, so you can use a much smaller buffer and a smaller table. Finally, the lack of Gibbs means the sound itself no longer has the ringing artifacts that surround each transition, and the waveform looks much closer to what the ideal output would be.<br /><br />So why doesn't anyone use this? Is it completely wrong?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=21">Drag</a> — Sun Nov 24, 2013 2:25 am</p><hr />
]]></content>
</entry>
</feed>