<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - emulator's main loop</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">emulator's main loop</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=10&amp;t=6165">http://forums.nesdev.com/viewtopic.php?f=10&amp;t=6165</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>ehguacho</b> [ Sun Mar 14, 2010 1:25 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>emulator's main loop</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />hello again folks! i've a newbie question to solve about the CPU main loop. what i don't know is how to implement the memory handlers in the main loop. as far as i could code my main loop, it looks like this:
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">for&#40;;;&#41;<br />&#123;<br />&nbsp; &nbsp; &nbsp;pc = InitPC;<br />&nbsp; &nbsp; &nbsp;opcode = rom&#91;pc&#93;<br />&nbsp; &nbsp; &nbsp;switch&#40;opcode&#41;<br />&nbsp; &nbsp; &nbsp;&#123;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /* opcode emulation */<br />&nbsp; &nbsp; &nbsp;&#125;<br />&nbsp; &nbsp; &nbsp;cycles = cycles_opcode&#91;opcode&#93;;<br />&#125;</div><br /><br />as you can see, i only have covered the 6502 emulation. so the question is: where in this main loop should i been writing the memory handlers? i mean that blocks of code like "read_memory()" and "write_memory()"[/code]

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>koitsu</b> [ Sun Mar 14, 2010 11:31 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Are you aware that this loop will result in 100% CPU being used at all times?  This isn't good.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>ehguacho</b> [ Sun Mar 14, 2010 11:40 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">koitsu wrote:</div><div class="quotecontent">Are you aware that this loop will result in 100% CPU being used at all times?  This isn't good.</div>
<br />yes, but it can be easily solved. i could put the opcodes emulation in another file, or put it in a "while" loop to limit the times it's being executed.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>MottZilla</b> [ Sun Mar 14, 2010 11:47 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />You can make read and write memory functions and just call them in the opcode emulation.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>koitsu</b> [ Sun Mar 14, 2010 11:53 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">ehguacho wrote:</div><div class="quotecontent"><div class="quotetitle">koitsu wrote:</div><div class="quotecontent">Are you aware that this loop will result in 100% CPU being used at all times?  This isn't good.</div><br />yes, but it can be easily solved. i could put the opcodes emulation in another file, or put it in a "while" loop to limit the times it's being executed.</div>
<br />
<br />That's not how you go about solving it.  :-)
<br />
<br />You need to make your main loop basically do the equivalent of a sleep() statement, while you have an interrupt handler or routine that gets called/induced by the kernel every X times a second (usually tied to an internal timer in Windows.  In the *IX world you can use something like kqueue on BSD or SIGIO on Linux).
<br />
<br />I'll poke Disch and ask him to provide some examples here, as Windows coding really isn't my forte.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>ehguacho</b> [ Sun Mar 14, 2010 11:57 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">MottZilla wrote:</div><div class="quotecontent">You can make read and write memory functions and just call them in the opcode emulation.</div>
<br />you mean something like this?
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">switch&#40;opcode&#41;<br />&#123;<br />...<br />&nbsp; &nbsp; &nbsp;case 0xAD: // LDA Absolute<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; addr = &#40;rom&#91;pc + 2&#93; &lt;&lt; 8&#41; | rom&#91;pc + 1&#93;;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; acc = read_mem&#91;addr&#93;;<br />...<br />&#125;<br /></div>
<br />
<br />...where "read_mem" it's suposed to be memory handler that handles memory readings.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>ehguacho</b> [ Sun Mar 14, 2010 12:00 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">koitsu wrote:</div><div class="quotecontent"><div class="quotetitle">ehguacho wrote:</div><div class="quotecontent"><div class="quotetitle">koitsu wrote:</div><div class="quotecontent">Are you aware that this loop will result in 100% CPU being used at all times?  This isn't good.</div><br />yes, but it can be easily solved. i could put the opcodes emulation in another file, or put it in a "while" loop to limit the times it's being executed.</div><br /><br />That's not how you go about solving it.  <img src="./images/smilies/icon_smile.gif" alt=":-)" title="Smile" /><br /><br />You need to make your main loop basically do the equivalent of a sleep() statement, while you have an interrupt handler or routine that gets called/induced by the kernel every X times a second (usually tied to an internal timer in Windows.  In the *IX world you can use something like kqueue on BSD or SIGIO on Linux).<br /><br />I'll poke Disch and ask him to provide some examples here, as Windows coding really isn't my forte.</div>
<br />you mean like using a function that stops 6502 emulation and then do stuff. when finished, then turn on again the 6502 emulation... isn't it?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Disch</b> [ Sun Mar 14, 2010 12:46 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="codetitle"><b>Code:</b></div><div class="codecontent">opcode = rom&#91;pc&#93; </div>
<br />
<br />This is where you'd use a read handler.  You generally don't want to access ROM directly for many reasons (one reason being that the code might not be in ROM, it might be in RAM.  Or there might be bankswapping going on, or whatever).
<br />
<br />Pretty much for every read/write you'd call your read/write function instead of accessing ROM/RAM directly.
<br />
<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I'll poke Disch and ask him to provide some examples here, as Windows coding really isn't my forte.</div>
<br />
<br />Wasn't there another thread about frame limiters on here?
<br />
<br /><!-- m --><a class="postlink" href="http://nesdev.com/bbs/viewtopic.php?t=6107">http://nesdev.com/bbs/viewtopic.php?t=6107</a><!-- m -->
<br />
<br />you shouldn't have any sleeping code in a CPU loop.  You should just have the CPU run for X number of cycles (like a frame or something).  Then sleep between frames.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>ehguacho</b> [ Sun Mar 14, 2010 3:37 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />thanks Disch!
<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">one reason being that the code might not be in ROM, it might be in RAM</div>
<br />i'm taking this project slowly, so first i'll try to get running mapper #0 games with only 1 (one) PRG ROM data and no Trainer. in that case all i've to do is to copy that bank into my ROM memory array, like this:
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">...<br />FILE *romfile;<br />unsing char *rom;<br />...<br />fseek&#40;romfile,16,0&#41;<br />rom = &#40;unsigned char *&#41;malloc&#40;&#40;ROMBanks + 1&#41; * 16 * 1024&#41;;<br />fread&#40;&amp;rom&#91;0x8000&#93;,1,0xc000,romfile&#41;;<br />...<br /></div>
<br />what i'm traying to say is that all the data that has to be executed is stored on the PRG ROM memory and there's no memory copied from the cartridge to the RAM's console memory, at least in mapper #0 games. is that right?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sun Mar 14, 2010 4:07 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />A mapper 0 game can certainly copy code to, say, $0400-$04FF and jump there.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Sun Mar 14, 2010 4:20 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />There probably are a few mapper 0 games executing code from RAM. It's not extremely common, but it happens.
<br />
<br />If you ignore these possibilities, it will be very hard to modify your emulator in the future to support more complex games. Be prepared for what you know is a possibility, and since we just told you that code can execute from RAM then you should consider this possibility.
<br />
<br />IMO, you shouldn't build your emulator around the ROM, which is what it looks like you are doing. A ROM file is much more complex than, say, an image file, that you can simply load, decode its contents and call it a day. A ROM is a program, so it actively controls all its surroundings, as opposed to the surroundings controlling it. So I suggest you plug the ROM into your emulator instead.
<br />
<br />Model the CPU as accurately as you can. The 6502 has a 64KB addressing space, so give it that. Devise a memory-mapping scheme that will allow you to map whatever you want to that addressing space: RAM, ROM, registers, nothing, whatever. This would be plugging the ROM into your emulator.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>ehguacho</b> [ Sun Mar 14, 2010 6:56 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />thanks again tepples and tokumaru!
<br />let me say that by now i'm keeping it very simple because all trying to do is to get the point while i have to emulate de PPU. that's why i'm testing my emulator (or whatever it looks like XD) using a very very simple NES demo. actually i've emulated all the instructions that appears in the demo, so now i've gotta move to the PPU emulation and thats where i'm having problems with memory handlers.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>MottZilla</b> [ Sun Mar 14, 2010 8:32 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Just an example for read/write functions.
<br />
<br />unsigned char ReadMem(int Address)
<br />{
<br />if(Address&lt;0x2000)
<br />{
<br />//return ram value
<br />}
<br />if(Address&gt;=0x8000)
<br />{
<br />// return rom value
<br />}
<br />// exception should be noted if dummy value is returned
<br />return 0;
<br />}
<br />
<br />So whenever you access any memory from the emulated CPU's perspective you'd just be calling ReadMem(Address).
<br />
<br />You may also want to make PPU Read and Write memory functions too.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>ehguacho</b> [ Sun Mar 14, 2010 8:47 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />thanks MottZilla! so i should been using that "ReadMem" function whenever an instruction of reading appears? i.e.:
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">....<br />case 0xAD: // LDA ABSOLUTE<br />/* LDA Absolute emulation goes here*/<br />accumulator = ReadMem&#40;address&#41;;<br />...<br /></div>
<br />
<br />writes to memory could be handled in a similar way.
<br />
<br />by the way, what about making a two large blocks of memory (one for the console internal memory and the other for PPU memory)? by doing this i might be forgetting about make several independents arrays (ROM,RAM,VROM,etc...)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>MottZilla</b> [ Sun Mar 14, 2010 9:50 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />There are many ways to do various parts of the emulator. Using a ReadMem type function to handle reading is one way. And yes your example seems correct. 
<br />
<br />I'm not sure what you mean about large blocks of memory.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>