<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - What kind of 3D calculations were used in SuperFX games?</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">What kind of 3D calculations were used in SuperFX games?</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=12&amp;t=11567">http://forums.nesdev.com/viewtopic.php?f=12&amp;t=11567</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>2</strong> of <strong>3</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>koitsu</b> [ Mon Aug 25, 2014 5:13 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: What kind of 3D calculations were used in SuperFX games?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I'd like to politely request someone take control of this thread and formulate all the questions that people want answered.  I really need something clear/concise, like an itemised list, not just random jumbled posts intermixed with questions and statements (that doesn't apply to all of you by the way, just some :-) ).<br /><br />I will bold and enlarge the font for this statement: <strong><span style="font-size: 150%; line-height: normal">the questions need to be precise and as terse as possible (within reason)</span></strong>.<br /><br />If someone could please do that, and reach a general consensus of what's wanted, I can submit them to Krister and see what he says.  There is no guarantee he will respond (I sent him Email a week ago relating to work stuff and he hasn't responded, so I think he might be on vacation or just very very busy), so just please keep all that in mind.  (The work he does where we're employed is quite important)<br /><br />If there are general questions that are more vague, I'd suggest reading interviews <a href="http://www.eurogamer.net/articles/2013-07-04-born-slippy-the-making-of-star-fox" class="postlink">like this one</a>, and see if your questions are already answered there.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Myask</b> [ Mon Aug 25, 2014 6:08 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: What kind of 3D calculations were used in SuperFX games?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Like so?<br /><div class="quotetitle">psychopathicteen wrote:</div><div class="quotecontent"><strong>1)How does the SuperFX compare against the DMA at filling pixels?</strong></div><br /><div class="quotetitle">Sik wrote:</div><div class="quotecontent"><strong>1) What algorithms are used to process the vertices? Both transformation and projection.<br /><br />2) What algorithm is used to raster (render) the triangles?<br /><br />3) [split, trim] Related, is there any special calculation [in Starfox/the SuperFX?] to discard backfacing triangles?<br /><br />4)[trim] What were the biggest bottlenecks when programming [with] the SuperFX? </strong><br /></div><br /><br /><div class="quotetitle">whicker wrote:</div><div class="quotecontent">1)What was the development process like?<br /><br />2) [paraphrase]Did you debug on a PC or on the SNES? If on the SNES, how?<br /><br /><strong>3) [trim] Did/Does the SuperFX CPU itself have any sort of debugging features?<br /><br />4) [trim] Although I realize you were working on the software, but do you recall any discussions about why the SuperFX boards had to start using a dedicated clock resonator circuit instead of the 21 MHz signal from the cartridge edge?</strong> </div><br /><div class="quotetitle">ARM9 wrote:</div><div class="quotecontent">1)[paraphrase, trim]How did they handle interoperability between the scpu and gsu; how exactly did they split the tasks between the two processors and which one did what? </div><br /><div class="quotetitle">ccovell wrote:</div><div class="quotecontent">1) What I'd love is a timeline about the whole Argonaut project.<br /><br />2) I'd love any info about projects, both successful and cancelled.  <img src="./images/smilies/icon_smile.gif" alt=":-)" title="Smile" /></div><br /><br /><div class="quotetitle">93143 wrote:</div><div class="quotecontent">I have a few technical Super FX questions<br /><br />Revised List:<br /><strong><br />1) What are the absolute hardware bottlenecks on blitting (using PLOT with color #0 not written, or only PLOTting part of a pixel cache, so it has to read the old data from RAM before writing the new data back)?<br />1b) How many cycles does it take to empty the secondary pixel cache under those circumstances?<br />1c) How about transferring the primary cache to the secondary, once the secondary is free?<br /><br />2) Apparently ROM access in high speed mode (21 MHz) is 5 cycles instead of 3. Is the same true of RAM access? For both reading and writing? And does this impact the answer(s) for (1)? Did this change at all between chip/board revisions?<br /><br />3) Is the instruction cache on the latest version(s) of the GSU 256 bytes or 512 bytes? I'd like to be sure.<br />  </strong></div><br /><br /><br />ed: bolded questions specific to SuperFX<br />ed2: updated 93143's questions

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Myask</b> [ Mon Aug 25, 2014 6:19 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: What kind of 3D calculations were used in SuperFX games?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />[double-posting to provide partial answers when possible, and to definitively separate from the question-list]<br /><br /><div class="quotetitle">whicker wrote:</div><div class="quotecontent">2) [paraphrase]Did you debug on a PC or on the SNES? If on the SNES, how?</div><br /> I have an unsourced recollection that devs did not have to burn chips, but had a cable-driven SNES. This is most likely a mangled memory from watching the Making of Solstice videos...which had a hint of Equinox. Take with several grains of salt.<br /><div class="quotetitle">psychopathicteen wrote:</div><div class="quotecontent">1)How does the FX compare against the DMA at filling pixels?</div>The interview koitsu linked suggests 40x.<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">3) [split, trim] Related, is there any special calculation to discard backfacing triangles?</div>Yes.[/useless] If you <em>don't</em> mean specifically in Starfox/SuperFX, either &quot;dot product of the plane&quot; or a cross-product of two edges will let you determine a triangle's facing.[source: Flights of Fantasy] Note that this is basically telling you from which direction the vertices are ordered clockwise-thus, one has to be consistent about that being the in- or outward direction. I expect other methods exist.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Sik</b> [ Mon Aug 25, 2014 9:34 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: What kind of 3D calculations were used in SuperFX games?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">koitsu wrote:</div><div class="quotecontent">I'd like to politely request someone take control of this thread and formulate all the questions that people want answered.  I really need something clear/concise, like an itemised list, not just random jumbled posts intermixed with questions and statements (that doesn't apply to all of you by the way, just some <img src="./images/smilies/icon_smile.gif" alt=":-)" title="Smile" /> ).</div><br />Yeah, seriously, this went out of hand, this was supposed to ask just about some specific working internals of the code &gt;.&gt;' (specifically SuperFX code) I wasn't even expecting people to ask other questions. At the rate this is going, soon we'll end up with people asking about stuff not related to even the SNES at all. If you want a good set of questions, just stick with the initial list I posted for now (except question #4 to which we already settled the answer was &quot;yes&quot;).<br /><br /><div class="quotetitle">Myask wrote:</div><div class="quotecontent"><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">3) [split, trim] Related, is there any special calculation to discard backfacing triangles?</div>Yes.[/useless] If you <em>don't</em> mean specifically in Starfox/SuperFX, either &quot;dot product of the plane&quot; or a cross-product of two edges will let you determine a triangle's facing.[source: Flights of Fantasy] Note that this is basically telling you from which direction the vertices are ordered clockwise-thus, one has to be consistent about that being the in- or outward direction. I expect other methods exist.</div><br />To rasterize a triangle you may want to reorder the vertices to make it easier for the algorithm to scan the lines. You could do this on the assumption a certain winding is always used. If you do it this way, when the wrong winding is used, the two extremes of the scanlines will cross right in the first row, effectively killing the triangle before it even starts getting rendered. The end result is that you get backface culling for free without having to resort to doing any maths.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Mon Aug 25, 2014 10:35 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: What kind of 3D calculations were used in SuperFX games?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Sik wrote:</div><div class="quotecontent">To rasterize a triangle you may want to reorder the vertices to make it easier for the algorithm to scan the lines. You could do this on the assumption a certain winding is always used. If you do it this way, when the wrong winding is used, the two extremes of the scanlines will cross right in the first row, effectively killing the triangle before it even starts getting rendered. The end result is that you get backface culling for free without having to resort to doing any maths.</div><br /><br />I don't follow. To rasterize a triangle, you must trace two vertical lines, one on the left side of the triangle, one on the right side of the triangle. For each pair of trace points, proceeding down, you render the pixels across from one to the other. If you could somehow (how?) arrange the sides to be reversed if the triangle is back facing, yes the horizontal render would be skipped, but you'd still be wasting effort tracing the sides. A simple cross product to determine facing would let you skip the whole operation, why do you want to avoid &quot;doing any maths&quot;?<br /><br />The usual way I've seen it done is to sort the three points top to bottom, which gives you one long vertical side, and the other side is split into two segments (though if the mid and bottom are on the same line, for example, one of these segments has length 0). This gives you an upper wedge (fanning out from the top point to a flat bottom) and a lower wedge (a flat top converging to the bottom point). You then trace the sides of the wedge, drawing pixels across between them one line at a time. If you do things this way, you have to do the backface culling before sorting the points. Once you've sorted the three points, you no longer have any information about winding because you've changed their order.<br /><br />There are indeed alternatives to backface culling (e.g. it's not strictly necessary if you have a depth buffer or painter's algorithm), or different ways to specify it (e.g. per-triangle face normal), but winding order of the vertices requires the least amount of extra data (i.e. none) and is very simple to compute. I've never seen any other method used in a game situation; it really is the &quot;standard&quot; way to do it.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Myask</b> [ Tue Aug 26, 2014 1:12 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: What kind of 3D calculations were used in SuperFX games?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Three adds, two multiplies, and a compare to check for discard is cheaper than rendering it. And, like removing those polygons that are behind the viewpoint, it removes about half of them for a mere O(n-polys) operation. Much cheaper than having to determine where to start it and including it in the proper order.<br /><br /><div class="quotetitle">rainwarrior wrote:</div><div class="quotecontent">To rasterize a triangle, you must trace two vertical lines,</div><br />Well, Bresenham's algorithm is rather cheap...<br /><br /><div class="quotetitle">rainwarrior wrote:</div><div class="quotecontent">I've never seen any other method used in a game situation</div>I suppose the BSP precalculations used by Doom, Quake, and I think Unreal for solid geometry don't count, being more of the &quot;make it unnecessary&quot; variety (and BSP uses two-faced polygons besides).  I'm not sure what they use for checking the mobile geometry of elevators, doors, enemies, etc.<br /><br /><div class="quotetitle">Sik wrote:</div><div class="quotecontent">To rasterize a triangle you may want to reorder the vertices to make it easier for the algorithm to scan the lines. You could do this on the assumption a certain winding is always used.</div>I'm not sure I get it either, as that sounds more like y-ordering than winding...?[diagram]

		
			<br clear="all" /><br />

			<table class="tablebg" width="100%" cellspacing="1">
			<tr>
				<td><b class="genmed">Attachments: </b></td>
			</tr>
			
				<tr>
					<td>
			<img src="./download/file.php?id=1913" alt="ex.png" /><br />
			<span class="gensmall">ex.png [ 2.03 KiB | Viewed 214 times ]</span>
		

		<br />
	</td>
				</tr>
			
			</table>
		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Sik</b> [ Tue Aug 26, 2014 2:01 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: What kind of 3D calculations were used in SuperFX games?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Yeah, Y ordering, except you just rotate the vertices (i.e. don't flip their order), that preserves the winding.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Myask</b> [ Tue Aug 26, 2014 2:13 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: What kind of 3D calculations were used in SuperFX games?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I'm not sure which comparisons you're using to decide which of three rotations to pick, that will exclude, say, 1-3-2 (bottom-left) from happening and partially-rendering.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Tue Aug 26, 2014 3:03 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: What kind of 3D calculations were used in SuperFX games?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Myask wrote:</div><div class="quotecontent"><div class="quotetitle">rainwarrior wrote:</div><div class="quotecontent">I've never seen any other method used in a game situation</div>I suppose the BSP precalculations used by Doom, Quake, and I think Unreal for solid geometry don't count, being more of the &quot;make it unnecessary&quot; variety (and BSP uses two-faced polygons besides).  I'm not sure what they use for checking the mobile geometry of elevators, doors, enemies, etc.</div><br />Yes, that's what I was referring to when I said with a depth buffer or painter's algorithm (i.e. BSP) it's not necessary to reject back-faces.<br /><br />From what I remember reading, for movable stuff it's just regular backface culling with possibly some sub-sorting of convex objects on a character. It doesn't use a BSP on the triangles of the character, but I think it substitutes a simple stand-in for it into the world's BSP so it gets occluded by the world. That's what I recall, anyway. I am of a mind to dig that stuff up and read it again now though...<br /><br />There was another fun tidbit about Quake, that perspective correct texturing was implemented, but as a tradeoff for performance it's applied at the endpoints of a horizontal span, and then the span is subdivided recursively (with perspective correction) until individual spans are short enough, at which point the spans are rendered with linear texturing. They tuned the size where rendering starts until they were happy with the balance of visual appearance vs. performance.<br /><br /><div class="quotetitle">Myask wrote:</div><div class="quotecontent">I'm not sure I get it either, as that sounds more like y-ordering than winding...?</div><br />Ah, is Y-ordering an alternative backface removal technique? Does it put restrictions on rotation to preserve the ordering?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>93143</b> [ Tue Aug 26, 2014 3:33 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: What kind of 3D calculations were used in SuperFX games?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I have a few technical Super FX questions, but I'm not sure if they're the sort of thing one would need to ask one of the Argonauts, and anyway they partly overlap Sik's questions.  Does anyone happen to know the answer to these?<br /><br />1) What are the absolute hardware bottlenecks on blitting (using PLOT with color #0 not written, so it has to read the old data from RAM before writing the new data back, if I understand correctly)?  How many cycles does it take to empty the secondary pixel cache under those circumstances (I'm thinking not less than 48 cycles for 8bpp, or less for lower bit depth)?  How about transferring the primary cache to the secondary, once the secondary is free?<br /><br />2) Per the manual, ROM access in high speed mode (21 MHz) is 5 cycles instead of 3.  Is the same true of RAM access?  And does this impact the answer for (1)?<br /><br />3) Is the GSU2's instruction cache 256 bytes (as byuu keeps saying re: the Super FX in general) or 512 bytes (as the manual claims)?  I'm thinking the latter, and that the former was for an earlier chip rev, but I'd like to be sure.<br /><br />4) Is there anything special that a developer using a GSU2 would need to do in order to use those 6 MB of extra ROM at the top of the CPU's memory map?  (Preferably in FastROM mode?)  As far as I know no games ever did...

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Myask</b> [ Tue Aug 26, 2014 3:47 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: What kind of 3D calculations were used in SuperFX games?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">93143 wrote:</div><div class="quotecontent">2) Per the manual</div>Where is this?<br /><br />Y'know, it'd be useful for both the SNESDev and GBDev subfora to have stickies with links to reference documents/knowledge bases.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Sik</b> [ Tue Aug 26, 2014 4:13 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: What kind of 3D calculations were used in SuperFX games?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">93143 wrote:</div><div class="quotecontent">1) What are the absolute hardware bottlenecks on blitting (using PLOT with color #0 not written, so it has to read the old data from RAM before writing the new data back, if I understand correctly)?  How many cycles does it take to empty the secondary pixel cache under those circumstances (I'm thinking not less than 48 cycles for 8bpp, or less for lower bit depth)?  How about transferring the primary cache to the secondary, once the secondary is free?</div><br />Isn't 8bpp (mode 7) packed instead of planar? That'd make it much faster than 2bpp and 4bpp since one pixel would need only one byte access (also, the documentation says that 48 cycles is the maximum for PLOT if I recall correctly)<br /><br /><div class="quotetitle">93143 wrote:</div><div class="quotecontent">2) Per the manual, ROM access in high speed mode (21 MHz) is 5 cycles instead of 3.  Is the same true of RAM access?  And does this impact the answer for (1)?</div><br />Where is this mentioned? The opcode documentation seems to assume the clock doesn't affect the speed (it mentions three different speeds depending on whether it's running from ROM, RAM or the cache, but nothing else except for opcodes that may be affected by the GSU status)<br /><br /><div class="quotetitle">93143 wrote:</div><div class="quotecontent">4) Is there anything special that a developer using a GSU2 would need to do in order to use those 6 MB of extra ROM at the top of the CPU's memory map?  (Preferably in FastROM mode?)  As far as I know no games ever did...</div><br />Doesn't it use the same bank numbers the 65816 uses?<br /><br /><div class="quotetitle">Myask wrote:</div><div class="quotecontent">Y'know, it'd be useful for both the SNESDev and GBDev subfora to have stickies with links to reference documents/knowledge bases.</div><br />You'd have some people here complain about copyright infringement then. It's in chapter 2-9 of book II if you get the SNES documentation though (it describes every opcode of the SuperFX).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>93143</b> [ Tue Aug 26, 2014 4:50 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: What kind of 3D calculations were used in SuperFX games?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Sik wrote:</div><div class="quotecontent">Isn't 8bpp (mode 7) packed instead of planar?</div><br />I can't find that data in the manual.  Did Doom use Mode 7?  I saw a reference that said it didn't.  The SNES has two other modes with 8bpp layers, and they're planar.  Plus I don't see anything in the manual that indicates radically different behaviour when plotting 8bpp.<br /><br />Do you even need the PLOT functionality if you're using packed-pixel?<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><div class="quotetitle">93143 wrote:</div><div class="quotecontent">2) Per the manual, ROM access in high speed mode (21 MHz) is 5 cycles instead of 3.  Is the same true of RAM access?  And does this impact the answer for (1)?</div><br />Where is this mentioned?</div><br />Page 2-7-2, right before section 7.1.2 begins.  There may be multiple versions out there...<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><div class="quotetitle">93143 wrote:</div><div class="quotecontent">4) Is there anything special that a developer using a GSU2 would need to do in order to use those 6 MB of extra ROM at the top of the CPU's memory map?  (Preferably in FastROM mode?)  As far as I know no games ever did...</div><br />Doesn't it use the same bank numbers the 65816 uses?</div><br />The ROM area I'm talking about is outside the GSU's jurisdiction.  It outright can't see it, nor can it cut off the S-CPU's access to it.  I thought the GSU was limited to 2 MB of ROM (or possibly 4 MB if you fiddled with the memory map?), but this is a totally separate block and that limit doesn't apply.<br /><br />I don't see any real reason why an actual game couldn't have used it (except that a GSU was expensive, ROM was expensive, FastROM was expensive, add 'em all up and...).  I'm mostly worried about unemulated behaviour, either in an emulator or on the SD2SNES when/if it supports Super FX, but I don't understand SNES memory mapping well enough to be confident that there isn't a gotcha hiding in there even in terms of real/original hardware...

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Sik</b> [ Wed Aug 27, 2014 2:36 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: What kind of 3D calculations were used in SuperFX games?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">93143 wrote:</div><div class="quotecontent">I can't find that data in the manual.  Did Doom use Mode 7?  I saw a reference that said it didn't.  The SNES has two other modes with 8bpp layers, and they're planar.  Plus I don't see anything in the manual that indicates radically different behaviour when plotting 8bpp.</div><br />What modes are actually supported by PLOT?<br /><br /><div class="quotetitle">93143 wrote:</div><div class="quotecontent">Do you even need the PLOT functionality if you're using packed-pixel?</div><br />Yes, because the main advantage of the PLOT instruction is that it converts screen coordinates into tilemapped coordinates.<br /><br />Note that it's possible to draw without that instruction (by writing to RAM directly). It's perfectly possible Doom isn't even using the PLOT instruction, when drawing vertical spans there isn't much of a problem (every consecutive pixel is always at the same distance in bytes).<br /><br /><div class="quotetitle">93143 wrote:</div><div class="quotecontent">Page 2-7-2, right before section 7.1.2 begins.  There may be multiple versions out there...</div><br />Looks like I skipped it =/ Odd that they didn't mention it in the opcode details though.<br /><br /><div class="quotetitle">93143 wrote:</div><div class="quotecontent">The ROM area I'm talking about is outside the GSU's jurisdiction.  It outright can't see it, nor can it cut off the S-CPU's access to it.  I thought the GSU was limited to 2 MB of ROM (or possibly 4 MB if you fiddled with the memory map?), but this is a totally separate block and that limit doesn't apply.<br /><br />I don't see any real reason why an actual game couldn't have used it (except that a GSU was expensive, ROM was expensive, FastROM was expensive, add 'em all up and...).  I'm mostly worried about unemulated behaviour, either in an emulator or on the SD2SNES when/if it supports Super FX, but I don't understand SNES memory mapping well enough to be confident that there isn't a gotcha hiding in there even in terms of real/original hardware...</div><br />Well, technically the GSU is wired directly to the cartridge (it could even be wired to access parts not accessible to the 65816), so in the worst case they could just wire the banks to the relevant portions... The only limitation here would be Nintendo's policies =P

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>ARM9</b> [ Wed Aug 27, 2014 8:51 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: What kind of 3D calculations were used in SuperFX games?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Sik wrote:</div><div class="quotecontent"><div class="quotetitle">93143 wrote:</div><div class="quotecontent">I can't find that data in the manual.  Did Doom use Mode 7?  I saw a reference that said it didn't.  The SNES has two other modes with 8bpp layers, and they're planar.  Plus I don't see anything in the manual that indicates radically different behaviour when plotting 8bpp.</div><br />What modes are actually supported by PLOT?</div><br />2bpp, 4bpp (tile and sprite, the latter behaving differently iirc) and 8bpp. You also have some settings in the plot option register for dithering and &quot;transparency&quot; (skipping on color 0) etc.. 8bpp can be used for both mode7 and mode3/4, it depends on how you upload it to vram (port $2118 byte transfers interleaved or word to 2118/2119) and how you build your map.<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Well, technically the GSU is wired directly to the cartridge (it could even be wired to access parts not accessible to the 65816), so in the worst case they could just wire the banks to the relevant portions... The only limitation here would be Nintendo's policies =P</div><br />The gsu sits between the cartridge rom/ram and the scpu so the address bus on the gsu is the limit here, which can only address 2MiB on all but the first version. Shouldn't be too much of a hassle to increase that on something like the sd2snes.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>2</strong> of <strong>3</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>