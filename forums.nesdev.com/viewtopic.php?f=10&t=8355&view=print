<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - How do you distribute your frame time?</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">How do you distribute your frame time?</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=10&amp;t=8355">http://forums.nesdev.com/viewtopic.php?f=10&amp;t=8355</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Wave</b> [ Thu Nov 24, 2011 2:45 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>How do you distribute your frame time?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />How many cycles takes in your program each section?
<br />
<br />-Game logic
<br />-Scrolling
<br />-Apply objects physics
<br />-Drawing objects (to shadow oam)
<br />-Object-Object collision
<br />-Object-Background collision
<br />
<br />I think I will run out of time if there's more than 6-7 objects in a frame, only drawing the metasprites (with H or V flip possible) takes about ySize * xSize * 73 cycles (+setup) per metasprite.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Thu Nov 24, 2011 4:32 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Your metasprite drawing routine sounds incredibly slow. Are you sure you can't optimize it anymore?
<br />
<br />Anyway, one of the slowest things in my engine is the scrolling, because of the realtime map decoding that has to be done. I believe it takes something close to 30 scanlines to process a new row <strong>or</strong> column of metatiles (meaning that the time taken to update both in the same frame is considerable). I'm considering unrolling some of the code to make it faster.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Wave</b> [ Thu Nov 24, 2011 5:46 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">Your metasprite drawing routine sounds incredibly slow. Are you sure you can't optimize it anymore?<br /><br />Anyway, one of the slowest things in my engine is the scrolling, because of the realtime map decoding that has to be done. I believe it takes something close to 30 scanlines to process a new row <strong>or</strong> column of metatiles (meaning that the time taken to update both in the same frame is considerable). I'm considering unrolling some of the code to make it faster.</div>
<br />Each sprite copy is something like:
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; lda _tmpMetaSprite.y<br />&nbsp; &nbsp;&nbsp; &nbsp;sta shadowOAM, x<br />&nbsp; &nbsp;&nbsp; &nbsp;lda _tmpMetaSprite.firstTile<br />&nbsp; &nbsp;&nbsp; &nbsp;sta shadowOAM+1, x<br />&nbsp; &nbsp;&nbsp; &nbsp;clc<br />&nbsp; &nbsp;&nbsp; &nbsp;adc _vidXTileInc<br />&nbsp; &nbsp;&nbsp; &nbsp;sta _tmpMetaSprite.firstTile<br />&nbsp; &nbsp;&nbsp; &nbsp;lda _tmpMetaSprite.attributes<br />&nbsp; &nbsp;&nbsp; &nbsp;sta shadowOAM+2, x<br />&nbsp; &nbsp;&nbsp; &nbsp;lda _tmpMetaSprite.x<br />&nbsp; &nbsp;&nbsp; &nbsp;sta shadowOAM+3, x<br />&nbsp; &nbsp;&nbsp; &nbsp;clc<br />&nbsp; &nbsp;&nbsp; &nbsp;adc #TILE_X_LENGTH<br />&nbsp; &nbsp;&nbsp; &nbsp;sta _tmpMetaSprite.x<br />&nbsp; &nbsp;&nbsp; &nbsp;if&#40;not carry&#41; &#123;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;txa<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;clc<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;adc #sizeof&#40;OAM_ENTRY&#41;*7<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;if&#40;zero&#41; &#123;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;lda #sizeof&#40;OAM_ENTRY&#41;*7<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&#125;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;sta _vidLastHWSpriteUsed<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;tax&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;dec _vidSpritesFree<br />&nbsp; &nbsp;&nbsp; &nbsp;&#125; else &#123;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;return<br />&nbsp; &nbsp;&nbsp; &nbsp;&#125;<br />&nbsp; &nbsp;&nbsp; &nbsp;dey<br /></div>
<br />Plus you have to reverse X order if Hflip and invert y order if Vflip

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Thu Nov 24, 2011 8:59 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I don't think I have any suggestions for improving your routine, since a lot of game aspects have influence over this kind of thing. I just thought the times you mentioned sounded bad, but then again this is a complex process due to the flipping, clipping of parts that are off screen and even OAM cycling, so it might not be as slow as I first thought it was. Mine is fairly slow too, but I don't have any numbers.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Wave</b> [ Thu Nov 24, 2011 9:12 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">I don't think I have any suggestions for improving your routine, since a lot of game aspects have influence over this kind of thing. I just thought the times you mentioned sounded bad, but then again this is a complex process due to the flipping, clipping of parts that are off screen and even OAM cycling, so it might not be as slow as I first thought it was. Mine is fairly slow too, but I don't have any numbers.</div>
<br />I use the virtuanes referred here: <!-- m --><a class="postlink" href="http://nesdev.com/bbs/viewtopic.php?t=5836">http://nesdev.com/bbs/viewtopic.php?t=5836</a><!-- m -->
<br />To check routines time, it's really useful.
<br />You only have to write to a register to start counting and write to another to stop the count.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Thu Nov 24, 2011 10:23 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The engine of my game was programmed in this order :
<br />- Move the player arround
<br />- Execute enemies (objects) AI
<br />- Draw graphical effects (explosions etc...)
<br />- Sort player and objects in function of their Y coordinate (my game use Zelda-style top down view so sprite sorting is required)
<br />- Draw player and objects
<br />- Update status bar if necessarly
<br />- Check if level beaten or game over, and if not, repeat indefinitely
<br />
<br />Music is done in the NMI thread and scrolling is only executed when wrapping from a screen to another.
<br />
<br />Metasprite mazing is fairly slow but to improve it a little I used self-modifying code so that I could do sprite cycling while being as fast as if no sprite cycling chances (it's the code itself that will change the order in which the sprites are mazed, instead of having to check a variable and draw the sprite in a different order in function of this variable).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Thu Nov 24, 2011 10:26 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Ah, I remember that. I guess I'll time my routines with it once I finish migrating my code to a new mapper (again!... I'm going for BxROM now, so that I can go up to 512KB with really simple hardware).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Thu Nov 24, 2011 10:30 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Hardwired banks : to hell  <img src="./images/smilies/icon_cool.gif" alt="8)" title="Cool" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Kasumi</b> [ Thu Nov 24, 2011 10:42 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I think my scrolling + NMI takes like... max 14,000 cycles? And that is SUPER uncommon.
<br />
<br />When my game is doing nothing it's 2,400 cycles for the NMI+other basic stuff. 
<br />
<br />
<br />
<br />Scrolling left or right direction is 4,440 or 6,900 (these counts all include the NMI and basic game stuff as far as I know) cycles when a new screen isn't being decoded. This is when it's scrolling fast and passed both a tile boundary and an attribute boundary in the same frame. If it's scrolling slower than 4 pixels a frame, it's only ~5,000 cycles. ~9,000 when it scrolls passed a screen boundary+tile boundary+attribute boundary. (It can be more, depending on the screens, but it's uncommon)
<br />
<br />Scrolling up down is a little worse. ~9,000 for scrolling passed a screen boundary, ~6,000 for regular scrolling. 
<br />
<br />The absolute worse is when it's scrolling in both directions at once, and passed both screen boundaries at once, and even then it ensures that the shared screen both scroll to is not loaded twice.
<br />
<br />My main character's routine (sonic style slope physics, + 8 direction shooting) takes a max of like 5,000 cycles. And I wanna support co-op, so I have my work cut out for me. The absolute worse case is the frame when jumping, and the frame when landing, but other than those two cases, it's 2,500 to 3,000. 
<br />
<br />As it stands though, if both players land in the same frame, on a frame where it also passed two scroll boundaries I'm using 24,000 cycles. This is with no object-object collision detection, and no object other than the bullets.
<br />
<br />I hope that with simple AI, and my current plan to optimize the main character's routine I can pull this off. Otherwise, I might be stuck with an N+ style game with few objects, because I don't wanna compromise my awesome physics.
<br />
<br />I'll probably even support a 4 player battle mode, since with a screen that doesn't scroll that can definitely happen.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Thu Nov 24, 2011 11:22 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">Hardwired banks : to hell  <img src="./images/smilies/icon_cool.gif" alt="8)" title="Cool" /></div>
<br />Hehehe! I used to think that switching the entire 32KB at once would be a pain, but by using a "virtual" fixed bank (small piece of code repeated at the end of every bank), it's actually not that bad.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>bigjt_2</b> [ Mon Jan 16, 2012 9:23 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: How do you distribute your frame time?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Wave wrote:</div><div class="quotecontent">How many cycles takes in your program each section?<br /><br />-Game logic<br />-Scrolling<br />-Apply objects physics<br />-Drawing objects (to shadow oam)<br />-Object-Object collision<br />-Object-Background collision<br /><br />I think I will run out of time if there's more than 6-7 objects in a frame, only drawing the metasprites (with H or V flip possible) takes about ySize * xSize * 73 cycles (+setup) per metasprite.</div>
<br />
<br />One strategy I utilized in my game was splitting logic between even and odd frames.  I'm sure not everyone here is a fan of this strategy, but it ended up working incredibly well for me and I couldn't tell a major difference in sprite movement or lag on either my CRT (running from the PowerPak/NES), my flatscreen in the living room (again, running from my PowerPak/NES) or on an emulator on my laptop.
<br />
<br />For instance, the "Apply objects physics", "Object-Object collision", and "Drawing objects (to shadow oam)" together would end up being too much and push things out of frame about 80-90% of the time.  So what I ended doing was running the calculations in even frames and then doing the drawing part of it on odd frames.  Of course this means you are essentially slowing your game down by half, so you need to re-tweak the speeds at which things move in order to keep the movement close to how you originally designed the game.  Another drawback is you lose versatility in object movement.  If you're using 16bit numbers for your movement calculations (I used them for parabolic type movements), your paths won't look as smooth because fewer frames will be used to display the updated positions.  But again, I really couldn't tell that much of a difference once I re-tweaked everything.  And a major advantage for me was the ability to get more stuff on the screen.  And the game crashing from out-of-frame type conflicts became nil.
<br />
<br />Obviously, the first solution you want to aim for is to optimize your code.  But if you get to a point where you feel you can't optimize it much more and you reeeeeeally want it done, splitting logic between frames is another possibility.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Mon Jan 16, 2012 10:33 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Thwaite runs most logic at 60 or 50 Hz. But collision detection is effectively 30 or 25 Hz, as it tests half the explosions against all the missiles. So is the smoke, as only half the particles are drawn in each frame. Some tasks are run at only 10 Hz (once every 6 frames on NTSC or 5 on PAL), running one step in each frame:
<br /><ol style="list-style-type: decimal"><li>Spawn one new missile if needed </li><li>Look for threatened buildings </li><li>Remove expired tip from screen </li><li>Move half the villagers by one step (scurry.s) </li><li>Increment the game clock by one tenth of a second and redraw the score area at 2 Hz (0/10 and 5/10) to flash the colon </li></ol>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>bigjt_2</b> [ Tue Jan 17, 2012 11:21 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">Thwaite runs most logic at 60 or 50 Hz. But collision detection is effectively 30 or 25 Hz, as it tests half the explosions against all the missiles. So is the smoke, as only half the particles are drawn in each frame. Some tasks are run at only 10 Hz (once every 6 frames on NTSC or 5 on PAL), running one step in each frame:<br /><ol style="list-style-type: decimal"><li>Spawn one new missile if needed </li><li>Look for threatened buildings </li><li>Remove expired tip from screen </li><li>Move half the villagers by one step (scurry.s) </li><li>Increment the game clock by one tenth of a second and redraw the score area at 2 Hz (0/10 and 5/10) to flash the colon </li></ol></div>
<br />
<br />Yep, it was actually from watching Thwaite @ MGC last year and asking you about it that I "borrowed" this idea.  Didn't do the exact same thing as I also draw at 30Hz, but still ended up being a really useful solution.  Placing lower priority tasks at lower rates (like the tasks going at 10Hz is a really effective idea, as well.)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>never-obsolete</b> [ Wed Jan 18, 2012 10:30 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />If you have the rom to waste, you can pre-flip your sprites. I combined this with self-modifying code (to avoid indirection with that huge table of data). The biggest drawback so far has been palette swapping. I don't have any numbers, but I remember when I made the change, the worst case was reduced by about half.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Celius</b> [ Fri Jan 20, 2012 2:22 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />For my sprite drawing, I have separate routines for different types of sprites. In my current project, I have different routines for single tiled sprites, metasprites, metasprites flipped horizontally, and absolute sprite maps. Absolute sprite maps are the simplest type to draw, because they are just drawn as they are defined on the screen with 8-bit coordinates (like the word "PAUSE" when you pause the game). It also saves a ton of cycles when you know you're drawing only 1 sprite, so having a predefined routine for this is a great thing as well.
<br />
<br />I don't bother with flipping metasprites vertically. I don't have much purpose for it in my game, and if I do, I'll just have a predefined vertically flipped version of that particular metasprite. However, flipping horizontally is very common. For all of my metasprites, I define the relative distance of each single sprite from the upper left corner, and I just add that distance to the upper left corner's coordinates when I draw each sprite. I have a separate routine that does the same, except it subtracts the relative distance from the upper left corner, thus flipping the sprite horizontally.
<br />
<br />In terms of my main loop, it looks like this:
<br />
<br />1. Handle Character
<br />2. Handle AI
<br />3. Handle Scrolling
<br />4. Handle Animation
<br />5. Handle Spontaneous objects
<br />6. Draw Sprites
<br />
<br />All together, my engine can handle about 5 intelligent enemies on screen with bullets flying around (the player's and enemies'), and of course the player and everything else without slowing down. My engine handles up to 8 active objects, but this slows things down.
<br />
<br />My NMI routine is tied up until the sprite 0 hit for my status bar, but I use this time for handling sound.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>