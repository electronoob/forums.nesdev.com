<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - IRQ Question on 6502</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">IRQ Question on 6502</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=10&amp;t=12404">http://forums.nesdev.com/viewtopic.php?f=10&amp;t=12404</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>matthewtatum</b> [ Fri Feb 20, 2015 7:15 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>IRQ Question on 6502</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />If the IRQ line is pulled low and the interrupt disabled flag is <strong>true</strong>, how long is it before it is returned to high again (assuming there is no subsequent CLI operation and the flag stays set)<br /><br />I'm sorry if this question has been answered a million times before but I've trawled the forums and the wider internet searching for an answer!

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Movax12</b> [ Fri Feb 20, 2015 7:32 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: IRQ Question on 6502</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Your question is not clear to me. <br /><br /><div class="quotetitle">matthewtatum wrote:</div><div class="quotecontent">..how long is it before it is returned to high again..</div><br /><br />What is returned to high? .. Edit.. Bregalad's answer is better and makes the most sense based on what your question must mean.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Fri Feb 20, 2015 7:32 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: IRQ Question on 6502</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Forever ?<br /><br />External devices are supposed to pull the IRQ line low when they want to have attention of the processor, and then the processor is supposed to, with the help of memory-mapped I/O, acknownledge the IRQ, and tell the device it can release the IRQ line. Thus even if the 'I' flag is set, the IRQ is never missed, the device keeps waiting for the processor to get attention until an acknowledge happens.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>matthewtatum</b> [ Fri Feb 20, 2015 8:18 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: IRQ Question on 6502</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Thanks for the replies<br /><br />I'm asking this question from the point of view of an emulator developer. <br /><br />I am trying to figure out how to emulate IRQs correctly and I (probably naively) thought that I could do something like this:<br /><br />After finishing latest instruction, check to see if IRQ has happened and if it has:<br />If 'I' is set ignore it and forget the IRQ ever happened;<br />else handle interrupt (Push return address and status register onto stack and move PC to IRQ vector)<br /><br />I have just started looking at implementing an MMC3 mapper and it's dawning on me that my naive assumptions are probably wrong. Looking at blargg's MMC3 tests there seem to be several cases where CLI is called followed by some code checking that &quot;pending&quot; IRQs have been serviced. <br /><br />What I'm trying to understand is if an IRQ happens and the 'I' flag is set, does my CPU code need to remember that the IRQ happened and service it when the 'I' flag is next clear?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Fri Feb 20, 2015 8:46 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: IRQ Question on 6502</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">matthewtatum wrote:</div><div class="quotecontent">What I'm trying to understand is if an IRQ happens and the 'I' flag is set, does my CPU code need to remember that the IRQ happened and service it when the 'I' flag is next clear?</div><br />Of course ! Imagine how useless IRQs would be otherwise...

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Fri Feb 20, 2015 9:03 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: IRQ Question on 6502</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Yeah, you can't forget about IRQs just because they aren't supposed to be serviced right away. IIRC, the CPU tests for IRQs every instruction.<br /><br />As for pulling the IRQ line back up, that's up to the device that pulled it low, and the most common approach is to implement an &quot;IRQ acknowledgement&quot; register, so the program itself can let the device know that the IRQ has been handled.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Fri Feb 20, 2015 9:46 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: IRQ Question on 6502</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Level 0 interrupts (/IRQ) are level-sensitive. They recur as long as the interrupt priority bit (I) is 0 and something is pulling the /IRQ line low.<br /><br />Level 1 interrupts (/NMI), on the other hand, are edge-sensitive. As I understand it, there's a flip-flop inside the CPU  that gets set whether /NMI transitions from high to low and cleared when the interrupt circuitry jumps to the NMI handler. This means that if some device holds /NMI low indefinitely, only one /NMI will happen. In the NES, this means that only one NMI will happen per frame, at the start of line 241 (NTSC and PAL NES) or 291 (Dendy), unless the program disables and reenables NMI through writes to PPUCTRL (port $2000) in the middle of vblank.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>matthewtatum</b> [ Fri Feb 20, 2015 10:05 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: IRQ Question on 6502</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />OK thanks, it's starting to make sense now, I think the missing piece of the puzzle in my mind was acknowledgment of IRQs. I thought I had read somewhere that 6502 IRQs could not be acknowledged and therefore got confused. I couldn't understand what the lifecycle of an IRQ was without acknowledgment.<br /><br />In the case of MMC3 it seems that writing to an even address in the range of $E000-$FFFE acknowledges IRQs, is that right?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Fri Feb 20, 2015 1:23 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: IRQ Question on 6502</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Of course, IRQs can (and should) be acknownledged. This is nothing NES or 6502 specific, also. What is specific is that there is only ONE IRQ in the 6502, most processor have many IRQs, typically connected to different devices/timers. On the 6502 you're supposed to test which device caused the IRQ by software. If multiple devices caused an IRQ simultanenously, then the CPU services and acknownledge first the most urgent, and then the less urgent.<br /><br />NMI is different because of it's edge sensitiveness, but nevertheless they also have to be acknowneldged. The PPU is half-an exception because it auto-acknowledge at the end of the VBlank period even if you don't read $2002. Because they can't be missed and the can (normally) only be connected to one interrupt source, it's a different story. If you connect NMI to multiple interrupt source (like it's the case on the C64) then you can miss interrupts, and it kinda miss the point of a &quot;non-maskable interrupt&quot; I think. I also guess on the C64 you are only supposed to use one of the NMI sources at a time and disable the others.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>