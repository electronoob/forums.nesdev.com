<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=6&amp;t=6210" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2010-04-09T22:16:31-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=6&amp;t=6210</id>
<entry>
<author><name><![CDATA[tomaitheous]]></name></author>
<updated>2010-04-09T22:16:31-07:00</updated>
<published>2010-04-09T22:16:31-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6210&amp;p=59899#p59899</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6210&amp;p=59899#p59899"/>
<title type="html"><![CDATA[Pitch Slide and Arpeggio Combined]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6210&amp;p=59899#p59899"><![CDATA[
If you have something like 3 total notes, are sliding the period after each set of notes, or on each next note played? (I would think that you would want it updated after a note set plays)<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3645">tomaitheous</a> — Fri Apr 09, 2010 10:16 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[neilbaldwin]]></name></author>
<updated>2010-03-28T06:08:15-07:00</updated>
<published>2010-03-28T06:08:15-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6210&amp;p=59134#p59134</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6210&amp;p=59134#p59134"/>
<title type="html"><![CDATA[Pitch Slide and Arpeggio Combined]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6210&amp;p=59134#p59134"><![CDATA[
Not intended as a proper solution, I managed to find a simple-ish "trick" to achieve the desired effect.<br /><br />As the pitch slide code detects when the pitch has reached the destination note, I used this same code to detect when the pitch of the sliding note has shifted to the next semitone above/below the original "root". From there I can use this "calculated" root as the basis for the arpeggio calculation.<br /><br />It's not perfect as you can detect the steps if your arpeggio is slow but it's not bad as a quick fix.<br /><br /><img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /><br /><!-- m --><a class="postlink" href="http://blog.ntrq.net/">http://blog.ntrq.net/</a><!-- m --><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3896">neilbaldwin</a> — Sun Mar 28, 2010 6:08 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[ReaperSMS]]></name></author>
<updated>2010-03-25T11:43:19-07:00</updated>
<published>2010-03-25T11:43:19-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6210&amp;p=59023#p59023</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6210&amp;p=59023#p59023"/>
<title type="html"><![CDATA[Pitch Slide and Arpeggio Combined]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6210&amp;p=59023#p59023"><![CDATA[
Yes. You store the current portamento offset, and add speed to it every frame (or every N frames, etc). A speed of 1, added every frame, will smoothly (or as smoothly as is possible) slide up one semitone in just over 4 seconds (256 steps between semitones, 1 step per frame, 60 Hz).<br /><br />If you want multi-tone slides, you'll need a 16-bit offset, and if you aren't explicitly stopping the slide in the note sequence, you'll want to add some checks to clamp it at the destination.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=8">ReaperSMS</a> — Thu Mar 25, 2010 11:43 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[neilbaldwin]]></name></author>
<updated>2010-03-25T11:15:09-07:00</updated>
<published>2010-03-25T11:15:09-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6210&amp;p=59022#p59022</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6210&amp;p=59022#p59022"/>
<title type="html"><![CDATA[Pitch Slide and Arpeggio Combined]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6210&amp;p=59022#p59022"><![CDATA[
@Reaper  - nice <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /><br />I probably led you down the wrong path by using the term "pitch bend" when I actually meant "portamento" or smooth sliding from one note to another over a specified time (or actually, in NTRQ, an arbitrary "speed").<br /><br />Would your method still work?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3896">neilbaldwin</a> — Thu Mar 25, 2010 11:15 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[ReaperSMS]]></name></author>
<updated>2010-03-25T10:33:59-07:00</updated>
<published>2010-03-25T10:33:59-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6210&amp;p=59020#p59020</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6210&amp;p=59020#p59020"/>
<title type="html"><![CDATA[Pitch Slide and Arpeggio Combined]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6210&amp;p=59020#p59020"><![CDATA[
In a bit more detail...<br /><br />With no pitch bending, notes are pretty easily specified as a number of semitones above some base. A number of games use the MIDI note range, which is 128 tones, ranging from C-1 to somewhere around C10. The usable range on the NES is a little smaller than that, ranging from C2 to B9 for the 2a03 square channels, C1 to B8 for the triangle (it runs an octave lower for any particular frequency dropped in), and A0-B9 for the VRC6 (12 bit frequency dividers)<br /><br />Here's the freq table I use(d) for the bloopageddon engine:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">freqtable:<br />   .word                   $FE3, $EED, $E1F ; 00 A0<br />   .word $D44, $C98, $BDF, $B32, $A97, $9F3 ; 03 C1<br />   .word $972, $8E0, $865, $7F1, $776, $70F<br />   .word $6A2, $64B, $5EF, $598, $54B, $4F9 ; 0F C2<br />   .word $4B8, $46F, $432, $3F8, $3BB, $387<br />   .word $350, $325, $2F7, $2CC, $2A5, $27C ; 1B C3<br />   .word $25C, $237, $218, $1FB, $1DD, $1C3<br />   .word $1A8, $192, $17B, $165, $152, $13E ; 27 C4<br />   .word $12D, $11B, $10C, $0FD, $0EE, $0E1<br />   .word $0D3, $0C9, $0BD, $0B2, $0A8, $09E ; 33 C5<br />   .word $096, $08D, $085, $07E, $076, $070<br />   .word $069, $064, $05E, $059, $054, $04F ; 3F C6<br />   .word $04B, $046, $042, $03F, $03B, $037<br />   .word $034, $031, $02F, $02C, $029, $027 ; 4B C7<br />   .word $025, $023, $021, $01F, $01D, $01B<br />   .word $01A, $018, $017, $015, $014, $013 ; 57 C8<br />   .word $012, $011, $010, $00F, $00E, $00D<br />   .word $00C, $00C, $00B, $00A, $00A, $009 ; 63 C9<br />   .word $008, $008, $007<br /></div><br /><br />As you can see, the differences in the divider values for each pair of notes decreases as you crawl up the octaves. Given that, the amount you add/subtract from the value above to bend between a pair of notes, or to do some tremolo effect or whatnot has to change also as you go up. Adding +/- 5 to the above would be close to an inaudible fraction of a semitone at the lower end of the scale, but up around C8, would be 2-4 semitones.<br /><br />My suggestion is to represent pitch bend not as a direct amount to add/subtract, but as a fraction of the difference between a note and the following one. $1B.00 would be C3, no shift, $1B.80 would be halfway from C3 to C#3, etc. Thus, adding $0C.00 to any note would always be a 1-octave shift.<br /><br />To come up with the actual register value needed for any given note $AA.BB, the value would be: table[AA] + (table[AA+1]-table[AA])*BB/256. for 1B.80, that would be:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">table&#91;1B&#93; = $350<br />table&#91;1C&#93; = $325<br />diff = -$3B = $FFC5<br />diff * $80 = -$1D80 = $FE280<br />last / 256 = -$1E = $FFE2<br />$350 - $1D = $333 &#40;or $350 + $FFE2&#41;<br /></div><br /><br />To combine this with arpeggiation, your arpeggio steps would be whole semitone values, so in the engine you'd track probably the following values per-note:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">a = Base tone<br />bb.cc = Current pitchbend amount &#40;assuming it's 16 bits for thoroughness&#41;<br />d = Current arpeggio offset<br /></div><br /><br />Each frame (could save some time by checking for changes) you produce the actual note N as a + b + d. The actual period to stuff into the register would be (table[N+1] - table[N]) * c &gt;&gt; 8.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">Pros:<br />   linear pitchbends, vibratos<br />   interacts smoothly with arpeggios<br />   no extraneous tables<br />   multi-semitone bends will work automatically<br />Cons:<br />   multiplication isn't fast<br /></div><br /><br />The freq table can get reduced in size if you go with the approach of having one octave, and shifting down appropriately, but that will be slower, and complicates the note format a bit. The multiply could be sped up greatly by only caring about the top 4 bits of the fraction, at the cost of bend precision.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=8">ReaperSMS</a> — Thu Mar 25, 2010 10:33 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Dwedit]]></name></author>
<updated>2010-03-25T08:49:53-07:00</updated>
<published>2010-03-25T08:49:53-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6210&amp;p=59015#p59015</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6210&amp;p=59015#p59015"/>
<title type="html"><![CDATA[Pitch Slide and Arpeggio Combined]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6210&amp;p=59015#p59015"><![CDATA[
I just checked Famitracker, it resets the pitch slide every time the note changes, so it doesn't work.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=53">Dwedit</a> — Thu Mar 25, 2010 8:49 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[neilbaldwin]]></name></author>
<updated>2010-03-25T01:40:05-07:00</updated>
<published>2010-03-25T01:40:05-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6210&amp;p=59002#p59002</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6210&amp;p=59002#p59002"/>
<title type="html"><![CDATA[Pitch Slide and Arpeggio Combined]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6210&amp;p=59002#p59002"><![CDATA[
@Reaper<br /><br />I've read your post a dozen times and while it seems intriguing, I still don't understand what it is you're proposing <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /><br />@Dwedit<br /><br />Not sure what you mean either. Are you saying Famitracker suffers the same problem that I have? Or does pitch slide + arpeggio work properly in FT? I've seen a lot of trackers that disable arpeggio when sliding (or vice versa), which is understandable <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" /><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3896">neilbaldwin</a> — Thu Mar 25, 2010 1:40 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[ReaperSMS]]></name></author>
<updated>2010-03-24T16:57:19-07:00</updated>
<published>2010-03-24T16:57:19-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6210&amp;p=58988#p58988</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6210&amp;p=58988#p58988"/>
<title type="html"><![CDATA[Pitch Slide and Arpeggio Combined]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6210&amp;p=58988#p58988"><![CDATA[
One way to do it is to treat your notes as 8.8 fixed point, whole choosing a semitone, fraction the distance to the next, and instead of a table, just doing the lerp math.<br /><br />Yeah, the multiply sucks donkey balls as far as cycles go, but it can be done without huge tables, and IIRC you can shortcut a bit of it since you don't necessarily care about all of the bits.<br /><br />I'll dig up the code when I get home later, but the general gist is of course<br />tone = whole(note); bend = frac(note);<br />diff = freq(tone+1) - freq(tone)<br />diff = (diff * bend)/256<br />freq = freq(tone) + diff;<br /><br />If you store the bend seperately, this will bend over a larger range, just have to pick the right pair of semitone freqs for the diff calc.<br /><br />edit: found the code. don't remember what the cycle count on this one is, guessing it's ~140 or so.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">.proc mul_816_16<br />   ;; mul tmpc/tmpc+1 by A, returning the upper 16 bits in tmpb<br />   ldx #0<br />   stx tmpb<br />   stx tmpb+1<br />   eor #$FF<br />   sta tmpa<br />   ldx #8<br />   lda tmpc+1<br />   beq bytemul<br />l1:   lsr tmpb+1<br />   ror tmpb<br />   lsr tmpa      ; inverted<br />   bcs next<br />   lda tmpb<br />   adc tmpc<br />   sta tmpb<br />   lda tmpb+1<br />   adc tmpc+1<br />   sta tmpb+1<br />next:   dex<br />   bne l1<br />   lsr tmpb+1<br />   ror tmpb<br />   rts   <br />bytemul:<br />   ldy #0<br />l2:   lsr tmpb+1<br />   ror A<br />   lsr tmpa<br />   bcs next2<br />   adc tmpc<br />   bcc next2<br />   inc tmpb+1<br />next2:   dex<br />   bne l2<br />   lsr tmpb+1<br />   ror A<br />   sta tmpb<br />   rts<br />.endproc<br /></div><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=8">ReaperSMS</a> — Wed Mar 24, 2010 4:57 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Dwedit]]></name></author>
<updated>2010-03-24T16:15:14-07:00</updated>
<published>2010-03-24T16:15:14-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6210&amp;p=58983#p58983</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6210&amp;p=58983#p58983"/>
<title type="html"><![CDATA[Pitch Slide and Arpeggio Combined]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6210&amp;p=58983#p58983"><![CDATA[
I think Famitracker just ignores the logarithmic scale, and just adds or subtracts to and from the period directly.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=53">Dwedit</a> — Wed Mar 24, 2010 4:15 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Drag]]></name></author>
<updated>2010-03-24T16:11:25-07:00</updated>
<published>2010-03-24T16:11:25-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6210&amp;p=58982#p58982</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6210&amp;p=58982#p58982"/>
<title type="html"><![CDATA[Pitch Slide and Arpeggio Combined]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6210&amp;p=58982#p58982"><![CDATA[
That logarithmic period really throws a wrench into things, doesn't it? <img src="http://forums.nesdev.com/images/smilies/icon_razz.gif" alt=":P" title="Razz" /><br /><br />Either way, the essence of the arpeggio is that you're cycling between notes that are proportional to each other, and like you said, sliding the pitch around will wreck the proportions, since the APU's pitch scale is non-linear.<br /><br />I can't really think of any clever/easy way to do it. In the end, it always comes down to either shifting each segment of the arpeggio independently from each other (meaning, you would need to store 3 or 4 periods in memory), or you'd need to constantly be recalculating the arpeggio segments from the base period (which takes CPU time).<br /><br />It looks like segments are easily scalable though. Like, if I represented arpeggios like this:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">BASE_PERIOD * &#91;1, 0.79, 0.67&#93;</div><br />Then that would give me a major scale arpeggio for all BASE_PERIOD, which means you'd be able to slide BASE_PERIOD all around and as long as you keep recalculating, you'll always get a proportional arpeggio.<br /><br />By the way, I calculated those values with:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">y = &#40;2^&#40;x/12&#41;&#41;/2<br />C  = &#40;x = 12&#41;<br />C# = &#40;x = 11&#41;<br />D  = &#40;x = 10&#41;<br />...<br />B  = &#40;x = 1&#41;</div><br /><br />You wouldn't need to perform *this* calculation on the 6502 though, you could just store the result in fixed point or something in the music data.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=21">Drag</a> — Wed Mar 24, 2010 4:11 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[neilbaldwin]]></name></author>
<updated>2010-03-23T06:02:46-07:00</updated>
<published>2010-03-23T06:02:46-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6210&amp;p=58862#p58862</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6210&amp;p=58862#p58862"/>
<title type="html"><![CDATA[Pitch Slide and Arpeggio Combined]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6210&amp;p=58862#p58862"><![CDATA[
I should add that I want to avoid a method that uses a fractional LUT for the pitch table. I had that in Nijuu and it was a big table and a fair old overhead for pitch calculation/manipulation.<br /><br />I should also add that the issue is with adding a fixed value (i.e. the semi-tone offsets of the arpeggio) to a non-linear value (i.e. the sweeping pitch). With dramatic sweeps it's clearly obvious that as the sweep approaches the target pitch, the arpeggio is adding too much/too little to the sweeping pitch to maintain the relative offset between the base note and the arpeggiated notes. As my sweep routine will snap to the target frequency once it's reached, you hear the arpeggios snap into place.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3896">neilbaldwin</a> — Tue Mar 23, 2010 6:02 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[neilbaldwin]]></name></author>
<updated>2010-03-23T05:44:18-07:00</updated>
<published>2010-03-23T05:44:18-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6210&amp;p=58860#p58860</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6210&amp;p=58860#p58860"/>
<title type="html"><![CDATA[Pitch Slide and Arpeggio Combined]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6210&amp;p=58860#p58860"><![CDATA[
Has anyone managed to implement this successfully?<br /><br />It's something that's always plagued me so I'd be interested in theories/examples/code very welcome.<br /><br /><img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" /><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3896">neilbaldwin</a> — Tue Mar 23, 2010 5:44 am</p><hr />
]]></content>
</entry>
</feed>