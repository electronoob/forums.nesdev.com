<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - NTSC NES Composite Video Emulator</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">NTSC NES Composite Video Emulator</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=3&amp;t=930">http://forums.nesdev.com/viewtopic.php?f=3&amp;t=930</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>2</strong> of <strong>5</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>hap</b> [ Wed Jan 11, 2006 5:15 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Yeah, strange slowdowns don't happen anymore: every game (including CPU intensive mappers like VRC7 and MMC5) here is full speed now.
<br />
<br />*edit* Darkened scanlines can of course be handled by the NES emulator, unless more is involved than just a copy of the previous scanline with each colour channel shifted right a bit ?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Thu Jan 12, 2006 1:49 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">blargg wrote:</div><div class="quotecontent">But then I'd annoy the "C++ sucks" people (ANSI C is pure tedium to code in, but I wanted it to be usable by C-only folks).</div><br />Then make a C API that wraps your C++ functions, and declare it extern "C".<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I guess I didn't realize that you could get an IIR to give close to linear phase (I've mostly dealt with FIR filtering); I'll read up on that.</div><br /><a href="http://en.wikipedia.org/wiki/Bessel_filter" class="postlink">Bessel filters</a> have a wider "knee" than your typical Butterworth or Chebyshev design, but they have maximally linear phase, or equivalently maximally flat group delay, in the passband.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">EDIT: I found a nifty <a href="http://www-users.cs.york.ac.uk/~fisher/mkfilter/" class="postlink">online filter constructor</a>.</div>
<br />Doesn't seem to have Bessel unfortunately.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Thu Jan 12, 2006 1:50 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Here's an update to the code, with configuration now made by macros that can be set in the compiler command-line (default: 32-bit RGB, no scanline doubling):
<br />
<br /><a href="http://www.io.com/~greens/temp/ntsc_emu4.zip" class="postlink">ntsc_emu4.zip</a>
<br />
<br />I'm glad the denomal fix worked and didn't require any additions to the speed-critical code.
<br />
<br />As you say, doubling the image vertically by duplicating each scanline (and darkening the duplicate) can be done in an emulator after NTSC emulation; it's just more efficient to do it in the NTSC emulator because the data is already in a register and there is probably some free memory bandwidth. Doubling scanlines after-the-fact requires that the originals be re-read, which will be slower still if you're going directly to video memory.
<br />
<br />Now the main thing left is to improve quality. It would be useful to know what the processor load is on various machines.
<br />
<br />EDIT: Awesome! I just found source for an <a href="http://web.mit.edu/source/third/xscreensaver/hacks/analogtv.c" class="postlink">X screensaver emulating an NTSC TV</a>. It goes much further, emulating the color blooming and horizontal warping at high brightnesses. I haven't compiled the code yet but it looks quite thorough an implementation.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>hap</b> [ Thu Jan 12, 2006 5:47 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The denormal numbers have made a comeback, it's fixed by readding 'bias' in the filter function. CPU usage, compiling with optimalization flags, is about 28% here on an Athlon XP 2ghz.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Thu Jan 12, 2006 6:15 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Hmmm, I changed the sign of the bias to negative in the most recent version (unnecessarily); try switching it back to positive:
<br />
<br />// ntsc_emu.c line 188
<br />y = y * gain + 1.0 / 0x10000;
<br />
<br />Or is this due to your luma table modification? Since each nes_phases entry is generated by either y+i, y+q, y-i, or y-q, and i and q change in coarse increments, the above bias to y should be sufficient. The IIR is applied to one of these four entries each pixel, so it should never decay into the denormalized range.
<br />
<br />tepples: the <a href="http://www-users.cs.york.ac.uk/~fisher/mkfilter/trad.html" class="postlink">online filter constructor page itself</a> at least claims to have Bessel. The whole filtering business needs some improvement, and now that I see that it's only using 26% CPU on a modern PC, I can improve it properly. I first plan on trying out that groovy screensaver code I found earlier.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>hap</b> [ Thu Jan 12, 2006 7:00 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />It's not due to that modification.
<br />Switching back to positive doesn't change anything. However, if I make that offset larger, it's fixed:
<br />y = y * gain + 0.05;
<br />
<br />using eg. 0.01 already makes it slow down on dark screens.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Thu Jan 12, 2006 8:20 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />That works for me. Since gain is either ~32.0 or ~255.0 (depending on bit depth), 0.05 only results in a 0.16% luma offset at most. Considering that the luma values probably aren't even accurate yet, it doesn't matter at all.
<br />
<br />Right about now would be a great time for someone with an oscilloscope to do some measurements. One could use the joypad strobe output as a trigger for the scope. Anyone in Austin, Texas want to lend me one?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dwedit</b> [ Thu Jan 12, 2006 9:29 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I'm trying out the test binary.  How do you load SRAM files?  I'd like to see this in action with Dragon Warrior 2 for the caves, where you get a very noticable "screen looks like it's scrolling really fast" effect on a TV.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Thu Jan 12, 2006 11:49 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Are you compiling your x86 with GCC's -ffast-math (or equivalent flags in other compilers)? That might speed up dealing with denormal numbers.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>hap</b> [ Fri Jan 13, 2006 9:55 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Dwedit: file handling is broken in that build (and still is ;p ), sram might work if you manually create an 'sram' folder in the application folder, sram is saved as xxx.sav where xxx is the name of the game.
<br />
<br />I'm compiling with math optimalisation flags, and they have no effect on denormal numbers it seems (slowdowns when making the gain smaller). Another thing: if I disable those flags, which I would do with a release build, it will become about 1.8 times slower (that's normal I guess), but it will also get slowdowns on dark screens, no matter what value is added to 'y gain'. (though readding the 'bias' constant in the filter function fixes this again).
<br />
<br />*edit* um, so actually, yes.. those flags do have effect on denormal numbers..
<br />*edit2* the flag that causes this: [-mfpmath=387]: slow, [-mfpmath=sse]: fast

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Marty</b> [ Sat Jan 14, 2006 12:58 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I've imported ntsc_emu.c into my project and made a C++ template class of it. After some C++ tricks and compiler abuse I managed to gain about +20fps. The biggest speed boost was attained by removing some temporaries and lump several assignment-expressions into one. It's ugly, but it gives the compiler more freedom to evalute things the way it wants since it can assume that there's no pointer-aliasing going on. I also took advantage of the new __restrict qualifier introduced in VC8 (should also be supported by GCC using __restrict__ IIRC).
<br />
<br />Results on my AMD FX-57 running WinXP:
<br />
<br />SMB using normal blitter: &gt; 240fps, cpu usage: ~17%
<br />SMB using NTSC blitter with scanlines: ~114fps, cpu usage: ~55%
<br />
<br />16/32bpp is about the same speed.
<br />
<br />Link to modified source: <a href="http://nestopia.sourceforge.net/NstVideoFilterNtsc.hpp" class="postlink">http://nestopia.sourceforge.net/NstVideoFilterNtsc.hpp</a>. It's very specific to my project but I thought i'd post it anyway in case anyone is curious.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Sat Jan 14, 2006 3:17 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I imagine the use of restrict helps most, since possible pointer aliasing really kills opportunities for parallelism. Are IA-32 compilers able to use the vector units (MMX etc.) automatically? If not, rewriting the code to use them would likely give a big speedup, since much of it can be done in parallel. 
<br />
<br />I've never used a compiler that supports restrict (which is part of ISO C, BTW), so I'm uneasy making use of it based only on my understanding of what documentation I could find. Is this basically correct: the compiler can assume that memory accessed via restricted pointer X will never coincide with memory accessed via restricted pointer Y, but must allow for any other coinciding memory accesses? Based on this understanding, any routine which processed data given by pointers but in a way that the destination never overlapped the source would benefit most if all pointers were declared restricted.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Marty</b> [ Sat Jan 14, 2006 9:06 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">blargg wrote:</div><div class="quotecontent">I imagine the use of restrict helps most, since possible pointer aliasing really kills opportunities for parallelism. Are IA-32 compilers able to use the vector units (MMX etc.) automatically? If not, rewriting the code to use them would likely give a big speedup, since much of it can be done in parallel.</div><br />They can, but they're still not very good at it. But yeah, it's well suited for a handcrafted SIMD implementation.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I've never used a compiler that supports restrict (which is part of ISO C, BTW), so I'm uneasy making use of it based only on my understanding of what documentation I could find. Is this basically correct: the compiler can assume that memory accessed via restricted pointer X will never coincide with memory accessed via restricted pointer Y, but must allow for any other coinciding memory accesses? Based on this understanding, any routine which processed data given by pointers but in a way that the destination never overlapped the source would benefit most if all pointers were declared restricted.</div>
<br />Not quite, I think you're refering to an earlier draft of the C99 standard. You can read from a restricted pointer and aliased pointer but if you make a write through any of them, all further access must be through the pointer that was used for the write.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>augnober</b> [ Wed Jan 18, 2006 12:07 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I've noticed some posts about NewRisingSun's NTSC work scattered around a few forums (I first saw it in the DOSBox Vogons forums).  I suppose this is because it largely has to do with television/transmission as opposed to any particular game system (except for the signal generation component), while the recent interest in it is as it pertains to emulation.. Has no clear home for an audience or discussion group.  If there's a certain place which has become the home of the technical aspects of this discussion, feel free to lead the way <img src="./images/smilies/icon_wink.gif" alt=";)" title="Wink" />   (I'm just interested in this stuff.. hoping to see it go further <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Guest</b> [ Tue Jan 24, 2006 10:14 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I have done some comparisons with the filter, as currently implemented in Nestopia (1.25) and on my flat screen NTSC TV.  I know this is a work in progress, but I would like to share my thoughts.  
<br />
<br />Fortunately, I can run even the most advanced games using the filter at full screen.  The colors seem reasonably true.  However, it is a work in progress.  They really need to cut down on the dot-crawl, it should be <strong>barely</strong> noticeable on a real TV.  Second, it must fill a 4:3 square.  Third, they cut too much off the sides of the screen, eight pixels is too much.  Four would be a better number without taking the curvature of the screen into effect.  Finally, I assume they were going for an RF level of quality because my AV Famicom can show a much sharper picture than the NTSC filter they use.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>2</strong> of <strong>5</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>