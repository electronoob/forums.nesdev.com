<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=2&amp;t=7761" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2011-05-20T19:52:18-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=2&amp;t=7761</id>
<entry>
<author><name><![CDATA[snarfblam]]></name></author>
<updated>2011-05-17T20:17:51-07:00</updated>
<published>2011-05-17T20:17:51-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7761&amp;p=78281#p78281</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7761&amp;p=78281#p78281"/>
<title type="html"><![CDATA[snarfblASM-Anybody willing to test?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7761&amp;p=78281#p78281"><![CDATA[
<div class="quotetitle">tepples wrote:</div><div class="quotecontent"><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">; does this wrap or is it in stack?<br />zpAddress0 = $C0<br />zpAddress64 = zpAddress0 + 64<br /><br />; and what happens with base 10 addresses?<br />zpAddress = 255</div><br /></div><br /><br /><div class="quotetitle">TFM wrote:</div><div class="quotecontent"><br />snarfblASM works with two kinds of values: 8-bit values (byte) and 16-bit values (referred to as “word”, though, technically, the word size for 6502 is 8-bit). The byte versus word distinction can be important in certain circumstances. Adding two 8-bit values produces an 8-bit value, and truncation may occur<br /></div><br /><br />As far as decimal literals, right now values less than 256 are treated as 8-bit, though I would encourage you to think of the behavior as undefined. I've got a unary "widen" operator, &lt;&gt; (which compliments the low-byte &lt; and high-byte &gt; operators). So you could write a 16-bit decimal number as "&lt;&gt;105" and an 8-bit decimal number as "&lt;105". <br /><br />If you perform math on 8-bit numbers, the result will be truncated. $C0 + 64 = 0. Interestingly, this mirrors the behavior of zero-page addressing. If this bothers you, there is an option to enable overflow checking, which will throw an error when truncation would occur. I can see where you might have a problem with 200 + 200 = 144. It might be best to enable overflow checking by default, or provide an option for asm6-like behavior.<br /><br />I could have gone with special mnemonics or operations to force addressing (lda.zp or lda&lt;), but I found the sort of "typing" system I have more attractive. Again, I sought something resembling C-style integer typing. To me this best reflects intentions; if you write $0000 you are probably thinking in terms of absolute addressing, and if you write $00 you are probably thinking it terms of zero-page. But this approach still leaves the option of using an operator to specify an addressing mode (lda &lt;label or lda &lt;&gt;label).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4871">snarfblam</a> — Tue May 17, 2011 8:17 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2011-05-17T18:21:12-07:00</updated>
<published>2011-05-17T18:21:12-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7761&amp;p=78278#p78278</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7761&amp;p=78278#p78278"/>
<title type="html"><![CDATA[snarfblASM-Anybody willing to test?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7761&amp;p=78278#p78278"><![CDATA[
<div class="codetitle"><b>Code:</b></div><div class="codecontent">; does this wrap or is it in stack?<br />zpAddress0 = $C0<br />zpAddress64 = zpAddress0 + 64<br /><br />; and what happens with base 10 addresses?<br />zpAddress = 255</div><br /><br />See also <a href="http://nesdev.com/bbs/viewtopic.php?p=73822#73822" class="postlink">the last time we discussed typed pointers</a>, along with <a href="http://nesdev.com/bbs/viewtopic.php?p=73876#73876" class="postlink">some syntax suggestions that resulted</a>.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Tue May 17, 2011 6:21 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[snarfblam]]></name></author>
<updated>2011-05-17T18:03:20-07:00</updated>
<published>2011-05-17T18:03:20-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7761&amp;p=78276#p78276</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7761&amp;p=78276#p78276"/>
<title type="html"><![CDATA[snarfblASM-Anybody willing to test?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7761&amp;p=78276#p78276"><![CDATA[
snarfblASM makes a distinction between 8- and 16-bit values, similar to the way that C would distinguish between "short int" and "char" values.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">zpAddress1 = $02<br />absoluteAddress1 = $0002<br /><br />.enum 0<br />    zpAddress2: .dsb<br />.ende<br /><br />.org $8000<br />absoluteAddress2:<br /></div><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4871">snarfblam</a> — Tue May 17, 2011 6:03 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2011-05-17T17:58:45-07:00</updated>
<published>2011-05-17T17:58:45-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7761&amp;p=78275#p78275</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7761&amp;p=78275#p78275"/>
<title type="html"><![CDATA[Re: snarfblASM 6502 Assembler - Anyone want to test?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7761&amp;p=78275#p78275"><![CDATA[
<div class="quotetitle">tepples wrote:</div><div class="quotecontent"><br />Then what kind of addressing does it use if you define a label using an equate?<br /></div><br />Some might say it depends on the value you used in the equate (variable EQU $0000 vs variable EQU $00), but I for example never define my variables like that. I use "reserve" commands to declare my variables, so that it's easier to move them around in case I want to. In that case the variables aren't assigned explicit addresses, they are relative to the last value of the PC.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Tue May 17, 2011 5:58 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2011-05-17T17:17:48-07:00</updated>
<published>2011-05-17T17:17:48-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7761&amp;p=78274#p78274</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7761&amp;p=78274#p78274"/>
<title type="html"><![CDATA[Re: snarfblASM 6502 Assembler - Anyone want to test?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7761&amp;p=78274#p78274"><![CDATA[
<div class="quotetitle">snarfblam wrote:</div><div class="quotecontent"><br />Where as ASM6 would use zero-page addressing for something like (LDA $0000) snarfblASM only uses zero-page addressing when an 8-bit value is specified (LDA $00). This can cause differences between ASM6 and snarfblASM output.<br /></div><br />Then what kind of addressing does it use if you define a label using an equate?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Tue May 17, 2011 5:17 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[snarfblam]]></name></author>
<updated>2011-05-20T19:52:18-07:00</updated>
<published>2011-05-17T17:15:24-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7761&amp;p=78273#p78273</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7761&amp;p=78273#p78273"/>
<title type="html"><![CDATA[snarfblASM-Anybody willing to test?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7761&amp;p=78273#p78273"><![CDATA[
Hello NesDev.<br /><br />I've written a 6502 assembler, <a href="http://snarfblam.com/files/snarfblasm0_1.zip" class="postlink">snarfblASM</a>, as part of a larger project. Not that the world really needs another 6502 assembler, but I wanted an assembler that could be integrated into my project, and I couldn't find one written in C#, so I wrote my own. I figured I would release a stand-alone version as well.<br /><br />I was hoping that I could get some help testing. The help I've gotten so far has proven invaluable.<br /><br />Notes (More detailed documentation is available at <!-- m --><a class="postlink" href="http://snarfblam.com/words/?p=210">http://snarfblam.com/words/?p=210</a><!-- m -->):<br /><ul><li><strong><em>Requires .Net Framework 2.0</em></strong></li><li>The assembler is aimed to be most similar to ASM6, but is stricter on syntax (labels require colons, directives require dots).</li><li>There is no macro support.</li><li> For users of ASM6 this means you can't declare constants with the EQU syntax (but "name = value" works fine).</li><li>ASM6-style + and - labels are supported, as well as * labels, which work a bit differently.</li><li>Where as ASM6 would use zero-page addressing for something like (LDA $0000) snarfblASM only uses zero-page addressing when an 8-bit value is specified (LDA $00). This can cause differences between ASM6 and snarfblASM output.</li></ul><br /><br />Whether you do something simple, like run a couple of ASM files you have sitting around, or throw everything in your bag of tricks at it to try to break it, it would be hugely appreciated.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4871">snarfblam</a> — Tue May 17, 2011 5:15 pm</p><hr />
]]></content>
</entry>
</feed>