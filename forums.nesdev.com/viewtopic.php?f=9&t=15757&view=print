<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - KrzysioCart - Home made cartridge that support&gt;80% NES games</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">KrzysioCart - Home made cartridge that support&gt;80% NES games</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=9&amp;t=15757">http://forums.nesdev.com/viewtopic.php?f=9&amp;t=15757</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>3</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>krzysiobal</b> [ Mon Apr 03, 2017 3:09 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>KrzysioCart - Home made cartridge that support&gt;80% NES games</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />KrzysioCart Micro SD (Chris' MicroSD Cartridge) - revolution for Famicom players<br /><a href="http://obrazki.elektroda.pl/5144790300_1491065857.jpg" class="postlink"><img src="http://obrazki.elektroda.pl/5144790300_1491065857_thumb.jpg" alt="Image" /></a><br /><br />I would proudly like to present my latest project - KrzysioCart Micro SD - Famiclone cartridge, that should be the last one you'll ever buy - no more carts will you ever need. Cartridge is compatible with 82% of all games that have been ever released for NES / Famicom / Famiclones. Following mappers (chips that extends console's abilities) are supported<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">Order of&nbsp; &nbsp; &nbsp;| Mapper&nbsp; | Mapper&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; |Amount of|total % <br />frequency&nbsp; &nbsp; | ID&nbsp; &nbsp; &nbsp; | name&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; | titles&nbsp; | <br />-------------+---------+-------------------+---------+----------<br />1&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; | 1&nbsp; &nbsp; &nbsp; &nbsp;| MMC1&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; | 804&nbsp; &nbsp; &nbsp;| 24,62<br />2&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; | 4&nbsp; &nbsp; &nbsp; &nbsp;| MMC3&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; | 765&nbsp; &nbsp; &nbsp;| 23,42<br />3&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; | 0&nbsp; &nbsp; &nbsp; &nbsp;| NROM&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; | 434&nbsp; &nbsp; &nbsp;| 13,29<br />4&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; | 2&nbsp; &nbsp; &nbsp; &nbsp;| UNROM&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;| 336&nbsp; &nbsp; &nbsp;| 10,29<br />5&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; | 3&nbsp; &nbsp; &nbsp; &nbsp;| CNROM&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;| 236&nbsp; &nbsp; &nbsp;| 7,23<br />6&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; | 7&nbsp; &nbsp; &nbsp; &nbsp;| ANROM&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;| 60&nbsp; &nbsp; &nbsp; | 1,84<br />...<br />17&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;| 71&nbsp; &nbsp; &nbsp; | CAMERICA&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; | 14&nbsp; &nbsp; &nbsp; | 0,43<br />...<br />30&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;| 232&nbsp; &nbsp; &nbsp;| CAMERICA Quattro&nbsp; | 8&nbsp; &nbsp; &nbsp; &nbsp;| 0,24<br />...<br />43&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;| 15&nbsp; &nbsp; &nbsp; | 100-in-1/168-in-1 | 4&nbsp; &nbsp; &nbsp; &nbsp;| 0,12<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <br />TOTAL:&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 81.48 <br /></div><br /><br />Moreover, this is the first and only cart that supports famous Famiclone multicart: Contra Function 168-in-1, which is more familiar to Polish and Russian players and every child that had been playing famiclone, cannot imagine his childchood without this cart. Adding support for this cart is my gift to Polish players:<br /><a href="http://obrazki.elektroda.pl/1791169900_1491214436.png" class="postlink"><img src="http://obrazki.elektroda.pl/1791169900_1491214436_thumb.jpg" alt="Image" /></a> <a href="http://obrazki.elektroda.pl/9676415300_1491214437.png" class="postlink"><img src="http://obrazki.elektroda.pl/9676415300_1491214437_thumb.jpg" alt="Image" /></a> <br /><br />Good news for impatient readers - this cart is available for sale (scroll to end of article for more details). The whole set that I am offering to sale consists of:<br />- cartridge printed circuit board with plastic shell,<br />- MicroSD 4 GB memory card<br />- MicroSD USB reader, which will let you put files on MicroSD card.<br />This is all you need to begin playing your favourite games.<br /><br />Cartridge had been tested on most famous Famiclones:<br />- MT777DX<br />- IQ502 rev2/3<br />- SP60 (version based on integration circuits),<br />- RINCO (Thompsonic)<br />- two blob-top consoles (a'ka NOC = Nes on a Chip).<br />There were no problems whatsoever. The cartridge has also possibility for firmware update directly from SD cart. No one has ever invented something that in Europe and I am the second person that started works at it in 2012 (NES PowerPak was first).<br /><br /><strong>History</strong><br />My first steps at NES developing scene began in 2012, when I created huge cartridge, that was my Master of Thesis at High School. It was based on Xilinx XC3S400 (Spartan 3) kit. I implemented support for over 95% games, including mappers like MMC5, VRC6. Unfortunately, complex design and huge size and also second faculty made me abandon this project.<br /><a href="http://obrazki.elektroda.pl/2760518300_1491214579.jpg" class="postlink"><img src="http://obrazki.elektroda.pl/2760518300_1491214579_thumb.jpg" alt="Image" /></a><br /><br />Few years later I came up with the idea of creating simpler cartridge - based on Xilinx XC9572XL chip - 72 macrocells (more info here: <!-- m --><a class="postlink" href="http://www.elektroda.pl/rtvforum/topic3094839.html">http://www.elektroda.pl/rtvforum/topic3094839.html</a><!-- m -->)<br /><a href="http://obrazki.elektroda.pl/7777805900_1490563750.jpg" class="postlink"><img src="http://obrazki.elektroda.pl/7777805900_1490563750_thumb.jpg" alt="Image" /></a> <a href="http://obrazki.elektroda.pl/9197401300_1490563752.jpg" class="postlink"><img src="http://obrazki.elektroda.pl/9197401300_1490563752_thumb.jpg" alt="Image" /></a><br />The aim was to support: Contra Function 168-in-1 multicart, Golden 5 / 4 (Camerica's 5-in-1 and 4-in-1 multicarts) - mapper Camerica #71 &amp; #232) and UNROM. The common for all those games is to contain 8 KB CHR-RAM. Later I've included support for NROM games, which in short was just a modification that after selecting game from menu, but before leaving control to it, the cartridge's software preprogrammed CHR-RAM with graphics of this game (NROM games contain 8 kB ROM with graphic data). Later, after updating SRAM from 6264 (8 kB) to 62256 (32 kB) and connecting two highest address lines to FPA, I could support also CNROM games. Next modification was to add MMC1 mapper support (but only for games that use 8 kB CHR-RAM). Later, by adding 8 kB PRG-RAM mapped at $6000-$7FFF I was able to support MMC1 games with additional RAM, like Legends of Zelda, Dyna Blaster. Adding support for MMC1 games with CHR-ROM and MMC3 mapper (which is unfortunately majority of games) was not possible due to insufficient number of macrocells in CPLD and also lack of I/O pins - all of pins has been already used. I had to also do some hacks, like changing obvious multiplexation formula (in VHDL) from: Y &lt;= A when in = '0' else B<br />to Y &lt;= A when in = '0' else 'Z', with Y being pull-up to B with external resistor.<br /><br />Unfortunately, my source of XC9572 chips was ended and availability of these chips in Poland in rational price was als limited. I tried to order them FOUR times from aliexpress, each time the seller said the chips were bad or just the parcel did not arrived (buying other things from Aliexpress worked great for me). So I had to search for some kind of alternative.<br /><br /><strong>Construction - beginning, first troubles and first milestones</strong><br />I tried to buy similar CPLS chip from Altera - Max II, which contains more macrocells (192) and around 2 times more I/O pins. Despite fact that Altera's chips have more dense package (TQFP100) than Xilinx (PLCC44), I found soldering Altera easier and faster because I can use flag soldering tip and solder all legs in one phase, instead of soldering them separately like in Xilinx.<br /><a href="http://obrazki.elektroda.pl/8918725000_1491215515.png" class="postlink"><img src="http://obrazki.elektroda.pl/8918725000_1491215515_thumb.jpg" alt="Image" /></a> <br /><br />After few tries with those chips I had mixed feelings - the same logic structure, that in Xilinx was fitted in 60 makrocel, needed 120 macrocells in Altera. One macrocell is the most basic capacitance unit in CPLD/FPGA circuit that allows storing one bit of information or controlling one output. I had to change my style of describing logic. In Xilinx I was trying to use as less registers as possible - for example by using alias function or shift registers instead of counters.  Unfortunately those tricks in Altera lead to weird results - sometimes formula than might seem to be easier, was translated to larger amount of macrocells than more complex formula. I was using Quartus 9 at first, then I migrated to Quartus 13 and some problems were solved, some were still happening - for example slight change in code unrelated to SD card support leaded to compatibility issues with them, but changing `Fitter Seed` to different value canceled these problems. <br />When I finished MMC1 mapper implementation and was able to support CHR-ROM games and then finished full MMC3 mapper support (CHR-ROM + scanline counter), I was unable to get in limit of the available amount of macrocells. Applying various kind of optimization bring me to success - currently 95% of total chip resources are used.<br /><a href="http://obrazki.elektroda.pl/5455059700_1491215589.png" class="postlink"><img src="http://obrazki.elektroda.pl/5455059700_1491215589_thumb.jpg" alt="Image" /></a> <br /><br /><strong>MMC3 mapper - scanline counter</strong><br />The next milestone problem was to add support to MMC3 scanline counter - some kind of unique add-on that enriched games with possibility to notify CPU using interrupt that rendering scanline (horizontal line of image) with given number has just been started. This is very useful when determining proper time to switch nametables or tile set, for example during status bar display or when more complex screen need to be rendered.<br /><a href="http://obrazki.elektroda.pl/1439650100_1491216065.png" class="postlink"><img src="http://obrazki.elektroda.pl/1439650100_1491216065_thumb.jpg" alt="Image" /></a> <a href="http://obrazki.elektroda.pl/7047451800_1491216066.png" class="postlink"><img src="http://obrazki.elektroda.pl/7047451800_1491216066_thumb.jpg" alt="Image" /></a> <br /><br />My knowledge about MMC3 specification is gained from nesdev.com - the scanline counter is clocked by rising edge of PPU's A12 signal, however some very quick successive edges need to ignored.<br /><a href="http://obrazki.elektroda.pl/8716982300_1491216644.png" class="postlink"><img src="http://obrazki.elektroda.pl/8716982300_1491216644_thumb.jpg" alt="Image" /></a> <a href="http://obrazki.elektroda.pl/6485925300_1491216644.png" class="postlink"><img src="http://obrazki.elektroda.pl/6485925300_1491216644_thumb.jpg" alt="Image" /></a> <a href="http://obrazki.elektroda.pl/2444545200_1491216645.png" class="postlink"><img src="http://obrazki.elektroda.pl/2444545200_1491216645_thumb.jpg" alt="Image" /></a> <br />Slight modification of moment in time that the interrupt is fired lead to proper picture displaying. However, there were still issues in some games that resulted in image shaking. Testing on famiclones with integrated circuits gave better result (less shaking) that on those with blob-tops. I think that longest tracks in PCB with DIL chips causes larger capacitances on those tracks with respect to ground and longer capacitances do not allow quick spikes to be propagated. After applying my own-invented analog filter (additional components on cartridge) + digital filter (additional logic in FPGA), the games started to look exactly like in emulator. Comparing my own implementation of MMC3 with the AX5208 chip (this is DIL40 chips that is MMC3 mapper) I can honestly say that my implementation is ideal - image is as good as in emulator.<br /><br />Left image - AX5202P implementation - should be good, but image is shaking and interrupt is not fired in correct time. Right image - my own implmenetation - ideal gameplay.<br /><img src="http://obrazki.elektroda.pl/1213569300_1491217190.gif" alt="Image" /> <img src="http://obrazki.elektroda.pl/3132750700_1491217223.gif" alt="Image" /><br /><br /><strong>Micro SD cart support</strong><br />MicroSD cart support is done by:<br />- entity in FPGA that is responsible for converting single byte, sent by console's CPU into  serial 8 bit communication done via SPI (this block was written in extreme optimal way to be fast and not consume more macrocell - it is clocked by clock from console),<br />- lots of lines of code written in 6502 assemler, responsible for communication with sd cart (detecting presence and type of cart, sending packets to cart),<br />- much more lines responsible for detecting partition, listing directories, reading files, traversing FAT entries (full FAT16/32 support, cluster size from 512 bytes to 64 KB), full VFAT Long File Name Entries.<br />All those elements were written by me from scratch. SD cart support (earlier: MMC cart) were written by me in 2012 during writing my Master of Thesis - at that time I had only MMC cart. Later, when I gathered some SD cards to test (&lt;= 2 GB) I found out that they works fine without any changes in communication. Just after testing larger SDHC &gt;4GB cards I found out they use different addressing mode - block number, instead of 0, 512, 1024 like on MMC is set 0, 1, 2, 3 (which is logical because block number is 32 bit number and the largest cart that can be addressed using old method is 4 GB).<br /><br />Also, I had couple of 4 GB cards (mainly made by SanDisk company) that were causing troubles in communication, when much larger 32 GB Kingston card worked fine.<br /><a href="http://obrazki.elektroda.pl/3639041900_1490100658.png" class="postlink"><img src="http://obrazki.elektroda.pl/3639041900_1490100658_thumb.jpg" alt="Image" /></a><br />Slight protocol modification that consited in adding additional idle clock cycles before each packet bring me to success.<br /><br /><strong>Optimalizing loading game time</strong><br />Initially, game loading time was not satisfacting. For example Contra Function 168-in-1 multicart took 2 minutes to load. During loading game time: <br />- flash  memory is erased (few seconds),<br />- portion of game program code is being read from selected ROM from SD cart sector-by-secttor and PRG-ROM memory is being programmed with this data,<br />- portion of game graphics data is being read from selected ROM from SD cart sector-by-secttor and CHR-RAM memory is being written with this data.<br /><br />Initially, writing algorithm was simple: read single byte, program it and then check if:<br />- reading next sector is neccessary?,<br />- switching to next memory bank is neccesary?<br />- is it end of programming?<br />If none of above, just read next byte and do another check, et cetera. Those series of checks after each byte reading was not very efficient. I remember spending one of evenings on thinking how to modify that. Replacing byte-by-byte algorithm by block-by-block (where one block is portion of 256 or less bytes to be programmed at once) would increase speed. Hovewer, before each block programming, its size need to be calculated and stored in Y register and then the main programming loop might look like:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp;;Y &lt;- 256 minus amount of bytes to be programmed<br />program_chunk_loop:<br />&nbsp; &nbsp;lda (ptr_src), Y<br />&nbsp; &nbsp;sta (ptr_dst), Y<br />&nbsp; &nbsp;iny<br />&nbsp; &nbsp;bne program_chunk_loop<br /></div><br />Even if calculating block size is not trivial and short, this algorithm has the advantage that each iteration of the loop above is very fast. But can it be speed up even more? Yes - because the whole programming routine is placed in RAM (it is impossible to both - program ROM and execute code from it), we can change the long, 5-cycle opcode of indirect read-write by zero-page pointer and Y register `lda (ptr_src), y` into absolute opcode `lda $ffff, y`, where $ffff address will be changed in RAM before each block-program algorithm start. On each loop we gain 1 extra cycle on read and 1 on write, and there are up to 256 read-write cycles, so this will be faster by 512 cycles.<br /><br />Programming Super Mario Bros 3 game (256 KB PRG-ROM + 128 KB CHR-ROM): 17 seconds:<br /><a href="http://obrazki.elektroda.pl/4989000100_1491217636.png" class="postlink"><img src="http://obrazki.elektroda.pl/4989000100_1491217636_thumb.jpg" alt="Image" /></a><br />Zoom showing what parts it consists of:<br /><a href="http://obrazki.elektroda.pl/4643916000_1491217912.png" class="postlink"><img src="http://obrazki.elektroda.pl/4643916000_1491217912_thumb.jpg" alt="Image" /></a><br />More zooming showing detailed sector operation:<br /><a href="http://obrazki.elektroda.pl/4650266300_1491218035.png" class="postlink"><img src="http://obrazki.elektroda.pl/4650266300_1491218035_thumb.jpg" alt="Image" /></a> <br />Comparing with CHR-RAM - writing to CHR-RAM is faster than programming PRG-ROM because it is 1 cycle instruction in contrary to 2 cycle and then polling PRG-ROM.<br /><a href="http://obrazki.elektroda.pl/2755119700_1491219941.png" class="postlink"><img src="http://obrazki.elektroda.pl/2755119700_1491219941_thumb.jpg" alt="Image" /></a> <br /><br /><strong>Additional mappers</strong><br />Adding support for additional mappers is not possible due to insufficient number of macrocells left in FPGA. Although, the cartridge PCB was projected in such manner that all CPU's address lines are wired to CPLD. Maximum granularity of PRG-Bank switching is 8 kB, CHR bank: 1 kB. This can be used to adding support for almost any other mapper in place of one of the currently implemented ones, for example VRC6 could be done instead of mapper 15/232 and maybe some others. Of course MMC5 is out of reach due to the lackness of external 1 kB of dual-port SRAM.<br /><br /><strong>Conclussion</strong><br />After doing prototype that was working 100% as expected I thought of making more units for sale as there is lack of programmable cartridges for famiclone consoles on the market (at least in Poland). Hard to buy and expensive competetive product (everdrive) is not in the reach of many people, so my project might be revolution - I made a lot more PCBs for each of you that is reading that!<br /><br /><a href="http://obrazki.elektroda.pl/6441842200_1491218281.jpg" class="postlink"><img src="http://obrazki.elektroda.pl/6441842200_1491218281_thumb.jpg" alt="Image" /></a> <a href="http://obrazki.elektroda.pl/3582259400_1491218408.jpg" class="postlink"><img src="http://obrazki.elektroda.pl/3582259400_1491218408_thumb.jpg" alt="Image" /></a> <a href="http://obrazki.elektroda.pl/9334281500_1491218411.jpg" class="postlink"><img src="http://obrazki.elektroda.pl/9334281500_1491218411_thumb.jpg" alt="Image" /></a> <a href="http://obrazki.elektroda.pl/7913888300_1491218414.jpg" class="postlink"><img src="http://obrazki.elektroda.pl/7913888300_1491218414_thumb.jpg" alt="Image" /></a> <a href="http://obrazki.elektroda.pl/6527020800_1491218416.jpg" class="postlink"><img src="http://obrazki.elektroda.pl/6527020800_1491218416_thumb.jpg" alt="Image" /></a> <a href="http://obrazki.elektroda.pl/7645391500_1491218418.jpg" class="postlink"><img src="http://obrazki.elektroda.pl/7645391500_1491218418_thumb.jpg" alt="Image" /></a> <br /><a href="http://obrazki.elektroda.pl/5144790300_1491065857.jpg" class="postlink"><img src="http://obrazki.elektroda.pl/5144790300_1491065857_thumb.jpg" alt="Image" /></a><br /><br />Promotion movie - english subtitles available:<br />[youtube]https://www.youtube.com/watch?v=NnNOtOE3YIQ[/youtube] <br /><br />------------------------------------------------------------<br /><strong>KrzysioCart Micro SD - FAQ</strong>:<br /><br />1. How to order:<br /><em>Feel free to send email at: <!-- e --><a href="mailto:krzysiocart@gmail.com">krzysiocart@gmail.com</a><!-- e --></em><br /><br />2. What is the price, what is contained in set<br /><em>Price is 250zl (65$) with included shipping to Poland. Shipping to other countries: + 5$,<br />The set contains of: PCB with shell (color can be chosen) + 4 GB micro SD card (random manufacturer) + MicroSD USB cart reader (random manufacturer and design)</em><br /><strong>Paypal payment accepted!</strong> I've sold a lot of those devices and no problems were encountered.<br /><br />3. What games are supported?<br /><em>Mapper #0 (NROM), #1 (MMC1), #2 (UNROM/UOROM), #3 (CNROM), #4 (MMC3), #7 (ANROM/AOROM), #15 (Contra 100/168-in-1), #71 (Camerica), #232 (Camerica Quattro).<br />Cart contains 1 MB PRG-ROM + 256 kB CHR-RAM/ROM + 8 kB PRG-RAM<br />No 4 screen mirroring or battery backed up RAM is supported.</em><br /><br />4. Will it work on my console??<br /><em>The cartridge was tested on the following console models:<br />- MT777DX<br />- IQ502 rev2/3<br />- SP60 (version based on integration circuits),<br />- RINCO (Thompsonic)<br />- two blob-top consoles (a'ka NOC = Nes on a Chip).<br />and no problems were discovered. I cannot guarantee that it will work on every one famiclone on Earth, because manufacturers are using different tricks for cutting-off price, which result in less compatibility, like replacing 7805 voltage regulator with zener diode, bypassing SND-OUT/IT pins from cart connector, bypassing CIRAM-!CE pin from cart connector. It should work on 99% of consoles from market. The cartridge does not draw a lot of current so it should also work on hand-held portable famiclones! After putting it on 60-to-72 pin adapter (with CIC), you can even play in on NES.</em><br /><br />5. Is it safe for my console?<br /><em>Yes! The cartridge was made out of 1 mm thickness PCB, so it wont expand the pins on your connector. Well fitted shell holds the cart firmly in the connector. I included voltage translating buffers for converting  5 V logic signals (from cartridge connector) to 3.3 V logic for low-voltage chips (memories, CPLD). It is protecting your console and the cartridge itself and is not driving any additinal current, like for example on cheap ali-express carts, which use 3.3 V memories connected to 5 V using zener diode (or even worse - without it) and driven with 5 V logicw ithout any series resistors limiting clamp diodes current </em><br /><br />6. Will any larger memory card be working?<br /><em>All microSD cart up to 32 GB should be working fine, as long as it is formatted as FAT16 or FAT21 with cluster site from 512 bytes to 64 KBs. Larger cards needs to be formatted in different filesystem and they are not supported at the moment. Cart must be capable of communicating over SPI. Some cards (SanDisk) has non-standard SPI mode and might cause troubles, which was taken into account during construction. Most of the card will be working fine</em><br /><br />7. Why game XXX is working correctly on emulator, but at this cartridge does not work at all/has garbage graphics/has no graphics at all?<br /><em>Generally, emulators:<br />i. is trying to idealize the surrounding environment, for example: they fills the whole RAM at startup with zeros,<br />ii. they block unallowed game operations, like for example blocking game's writes to CHR memory when game declares it uses CHR-ROM memory as graphics,<br />iii. they try to fix invalid NES headers, like when NES header declares that game uses 128 kB CHR-ROM and game is trying to use graphics past 128 kB bank, it will be wrapped modulo 128.<br /><br />First case is mainly about unlincensed (homebrew amateur) games, whose creators were not testing them on real hardware. If that happens, please contact game developer for issuing game fixing.<br />Second case is about games like Doki Doki Amusement Park, Krusty's Fun House - those games might ovevwrite some tiles used in title screens as they try to write to CHR memory despite using CHR-ROM.<br />Some homebrew games (especially those from Shiru - Alter Ego, Zooming Secretary) have invalid initializing memory function which fills whole CHR memory with zeros. Those games use CHR-ROM, but on real hardware where CHR-RAM is used in place of CHR-ROM, all game graphics will be destroyed and changed to black colour. There are fixes to those games already available at nesdev.com</em><br /><br />8. Why there is no progress bar during loading game, just the blinking screen?<br /><em>Console processor, during programming PRG/CHR memory is changing memory banks extensivelly, so trying to display something would lead to the need of reloading tiles to next bank, which would cause slowing programming process. Also when programming CHR, Picture Processing Unit in console cannot display anything. </em><br /><br />9. Is that all legal?<br /><em>According to law, game ROMS are copyrighted as other computer programs. It is lawful to have ROM only of those games that you have original cartridges (backup). Micro SD cart, included with this cartridge is blank - the owner is liable for putting only those games on it that he is able according to law. However, except official Nintendo's copyrighted games, there are hundreds of free home-brew games made by fans and enthusiasts of NES.</em>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Mon Apr 03, 2017 4:07 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: KrzysioCart - Home made cartridge that support&gt;80% NES g</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Looks cool! One minor nitpick I have is that the loading screen looks glitchy because of that white line that shows up whenever the color changes, which I'm guessing is there because the palette is changed mid-frame. Would it be possible to code that part so that the color change happens during vblank?<br /><br />Anyway, is this gonna be a product available to the general public? If so, how much will it cost?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Mon Apr 03, 2017 4:13 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: KrzysioCart - Home made cartridge that support&gt;80% NES g</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><strong>Why 8K?</strong><br /><br />My eyes opened wide when I saw that this was probably the first CF or SD based flash cart that can run 1 MB PRG ROM games. <a href="https://forums.nesdev.com/viewtopic.php?f=32&amp;t=15570" class="postlink">Action 53 volume 3</a> is 1 MB and on a mapper comparable in complexity to MMC1 (which currently is supported) that is a superset of UNROM (supported), CNROM (supported), and ANROM (supported). I imagined it could be the first flash cart to run Action 53 volume 3, as the competition can't because their PRG ROM capacity is only half that.<br /><br />But then I saw it has only 8K CHR RAM, and I felt a sinking feeling. <a href="https://forums.nesdev.com/viewtopic.php?p=189877#p189877" class="postlink">One of the games on this volume</a> is a CNROM with 16K of CHR data, and it can't go into the CHR ROM because the menu engine is designed for CHR RAM. It also means no chance to eventually run <em>Videomation</em> (CPROM, 32K PRG ROM, 16K CHR RAM) or <em>The Curse of Possum Hollow</em> (MMC3, 512K PRG ROM, 32K CHR RAM).<br /><br />The WRAM is also 8K. This means no Koei sims (MMC1, 8K VRAM, 16K WRAM) and no PR8 by Neil Baldwin (MMC1, 8K VRAM, 32K WRAM).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>byemu</b> [ Mon Apr 03, 2017 4:17 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: KrzysioCart - Home made cartridge that support&gt;80% NES g</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Very nice.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>krzysiobal</b> [ Mon Apr 03, 2017 4:20 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: KrzysioCart - Home made cartridge that support&gt;80% NES g</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />To be honest, the PRG-ROM capacity is 4MB, all address lines are wired up to FPGA so it can implement really big games (on current supported mapper set, the biggest game is 168-in-1 Contra Function with 1 MB PRG)<br /><br />The CHR-RAM capacity is 512 KB, however MMC3/MCM1 support only 256 KB CHR-ROM or 8 kB.<br /><br />WRAM capacity is 32 KB, but also MMC1/MMC3 games dont need more than 8kB (except modified MMC1 games which uses high CHR address lines for PRG-RAM bankswitching, but there is trouble with detecting them so i simply ommited them)<br /><br />So, the cart is physically prepared for supporting all possible kind of game (except MMC5 with external SRAM). Just matter of implementing proper mapper in VHDL.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Mon Apr 03, 2017 5:33 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: KrzysioCart - Home made cartridge that support&gt;80% NES g</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />For the sake of homebrewing, I think hardware makers should unlock any features that don't break existing software. Artificially locking the hardware to the scope of what commercial games are known to need makes it seem like your product is meant for piracy rather than encouraging innovation in homebrewing, which is a shame. In short, please don't design your products around the &quot;no games make use of this&quot; mentality.<br /><br />There's nothing preventing the MMC3 from accessing up to 256KB of CHR-RAM, since that's how much CHR-ROM it supports. It just so happens that no commercial games ever used more than 8. Just think about the cool dynamic graphics and animations new programs could have if they had access to the full 32KB! Things like 3D graphics, FMV video, extra smooth character animations... But no, let's limit the hardware to what SMB3 and Kirby need.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Mon Apr 03, 2017 5:49 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: KrzysioCart - Home made cartridge that support&gt;80% NES g</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Thanks for clarifying.<br /><br /><div class="quotetitle">krzysiobal wrote:</div><div class="quotecontent">The CHR-RAM capacity is 512 KB, however MMC3/MCM1 support only 256 KB CHR-ROM or 8 kB.</div><br />The MMC1 or MMC3 only outputs address values. It doesn't care whether the address is going to a ROM or a RAM. So if someone were to rewire a TGROM board to use a 62256 (32Kx8 SRAM) and run wires from CHR A13-A14 out of the MMC3 to A13-A14 on the memory, all 32K would be usable, and it could run <em>The Curse of Possum Hollow</em>. Games using large CHR RAM can be detected with NES 2.0 headers.<br /><br /><div class="quotetitle">krzysiobal wrote:</div><div class="quotecontent">WRAM capacity is 32 KB, but also MMC1/MMC3 games dont need more than 8kB (except modified MMC1 games which uses high CHR address lines for PRG-RAM bankswitching, but there is trouble with detecting them so i simply ommited them)</div><br />Games using large WRAM can be detected with NES 2.0 headers. This doesn't include anything using MMC3 because it can't switch WRAM. But it includes Koei's SOROM games, SXROM games by Squaresoft and Neil Baldwin because of the repurposed CHR address lines. It also includes a forthcoming Z-machine interpreter that uses FME-7 because FME-7 can switch RAM at $6000 the same way it switches ROM at $6000.<br /><br />If you do plan to mass-produce this, do you plan on having both 60- and 72-pin versions?<br /><br /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">For the sake of homebrewing, I think hardware makers should unlock any features that don't break existing software. </div><br />Perhaps the argument is that existing games unaware of large RAM may rely on being able to, say, write to one bank and read the same data out of other banks. But existing games that depend on this won't have NES 2.0 headers, in which case the mapper can assume an appropriate default RAM size. Homebrew will have an NES 2.0 header that specifies how many high address lines on the RAM to use.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Tue Apr 04, 2017 8:04 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: KrzysioCart - Home made cartridge that support&gt;80% NES g</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Looks cool. Since my powerpak stopped working and I never got any news when sending it for repair I guess I'll eventually have to aquire something else - this looks like a solid replacement for it. It being in famicom format is nice, too. (I have adapters for both ways so I don't really care).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>MottZilla</b> [ Tue Apr 04, 2017 11:22 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: KrzysioCart - Home made cartridge that support&gt;80% NES g</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />That's a really cool project. I like how it's home made. What do you think it cost for you in parts and materials for each cartridge?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Fisher</b> [ Tue Apr 04, 2017 2:09 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: KrzysioCart - Home made cartridge that support&gt;80% NES g</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />That's great!!

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>krzysiobal</b> [ Tue Apr 04, 2017 2:23 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: KrzysioCart - Home made cartridge that support&gt;80% NES g</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">The MMC1 or MMC3 only outputs address values. It doesn't care whether the address is going to a ROM or a RAM. So if someone were to rewire a TGROM board to use a 62256 (32Kx8 SRAM) and run wires from CHR A13-A14 out of the MMC3 to A13-A14 on the memory, all 32K would be usable, and it could run <em>The Curse of Possum Hollow</em>. Games using large CHR RAM can be detected with NES 2.0 headers.</div><br />And that's how it is implemented right now - if NES header says it is CHR-ROM, i am just filling CHR-RAM with the tiles. The game later can still switch bank or even try to write to modify tiles.<br /><br />Unfortunatelly that is no good because I found out that some games (Krusty's Fun House, Trolls In Crazyland), which use CHR-ROM, still writes to to the $0000-$1fff, which makes title screen in them garbled a little bit (tiles are overwritten)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Tue Apr 04, 2017 5:52 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: KrzysioCart - Home made cartridge that support&gt;80% NES g</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">krzysiobal wrote:</div><div class="quotecontent">Unfortunatelly that is no good because I found out that some games (Krusty's Fun House, Trolls In Crazyland), which use CHR-ROM, still writes to to the $0000-$1fff, which makes title screen in them garbled a little bit (tiles are overwritten)</div><br />Other games I know of that attempt to overwrite CHR ROM include B-Wings, Concentration Room, early games by Shiru (LAN Master, Lawn Mower, Zooming Secretary), and MineShaft by Nioreh (which uses the same runtime library version as Zooming Secretary). I've started a list of them on NESdev Wiki; can you think of others?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Tue Apr 04, 2017 6:12 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: KrzysioCart - Home made cartridge that support&gt;80% NES g</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Can't you just prevent writes from going through if the header indicates the use of CHR-ROM? I'm pretty sure that the PowerPak and the EverDrive do that.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Tue Apr 04, 2017 6:21 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: KrzysioCart - Home made cartridge that support&gt;80% NES g</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">Can't you just prevent writes from going through if the header indicates the use of CHR-ROM? I'm pretty sure that the PowerPak and the EverDrive do that.</div><br />That's a start. But some mappers need more sophisticated write enable logic. <em>Pinbot</em> and <em>High Speed</em> are on <a href="https://wiki.nesdev.com/w/index.php/TQROM" class="postlink">TQROM</a>, which has both CHR ROM and CHR RAM. (Banks 0-63 are ROM, and 64-71 are RAM.) So do <a href="https://wiki.nesdev.com/w/index.php/MMC3_with_CHR_ROM_and_CHR_RAM" class="postlink">a bunch of games from China</a>.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Tue Apr 04, 2017 6:23 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: KrzysioCart - Home made cartridge that support&gt;80% NES g</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />True.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>3</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>