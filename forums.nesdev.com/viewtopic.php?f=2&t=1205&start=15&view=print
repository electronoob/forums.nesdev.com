<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Efficient compression for NES graphics</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Efficient compression for NES graphics</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=1205">http://forums.nesdev.com/viewtopic.php?f=2&amp;t=1205</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>2</strong> of <strong>3</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Fri Mar 10, 2006 8:10 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />How much space might the scale2x unpacker take in PRG?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>baisoku</b> [ Fri Mar 10, 2006 8:30 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />As blargg has stated, the NES tile format is already "compressed". Running any other algorithm on top of that won't yield a whole lot of bang for the buck; it's comparable to using .zip on an .mp3.
<br />
<br />That being said, i have two suggestions:
<br />
<br /> * Procedural tiles. Write 6502 code to render to tile data (lines, text, etc).
<br /> * Multiple-bitplanes. Store 2 1-bit images per tile. Tricky. But worth it.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Fri Mar 10, 2006 9:18 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Yeah, they are already very compressed in the sense of color, but not really in the spatial sense. NES graphics usually have a lot of flat areas, and that is not explored by the use o lower bitdepth.
<br />
<br />I'm working on a variation of the HAAR wavelet transform, that is supposed to make images more compressable. It does not compress the image, but a simple RLE step after the transform is enough to achieve pretty good compression.
<br />
<br />My transform turns this:
<br /><img src="http://www.nesstuff.kit.net/before.gif" alt="Image" />
<br />
<br />Into this:
<br /><img src="http://www.nesstuff.kit.net/after.gif" alt="Image" />
<br />
<br />You have to agree that the second image is much more compressable, even with RLE. Maybe a zig-zag RLE, like in JPEG. The transformation was applied once to the image, some images may compress better after several transformations.
<br />
<br />The result after the transform is an image with the axact same size (byte-wise and dimension-wise) as the original, so, in the worst case I'll have no compression at all. But it's likely that I'll get some compression every time. At least my data will not expand.
<br />
<br />If I try to leave some flat areas or reduce detail a bit whenever possible, when the image goes through this filter it will be highly compressable.
<br />
<br />And the decompression (reverse transform, actually) is very simple, and could be implemented well in 6502 assembly.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Fri Mar 10, 2006 10:24 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Your image above is trying to fake more colors by using the alternating vertical line pattern. It'd be more easily RLE compressible if you used <em>more</em> bits per pixel, representing patterns as another color. For example, you could use 4 bits per pixel to represent the even and odd column colors. 0000 would mean even and odd columns use color 0, 1001 would mean that even columns use color 10 and odd columns use color 01. Combine this with doing things at half resolution and it should compare to your wavelet example, but be simpler to implement.
<br />
<br />This shows how it's important to avoid introducing any artifacts into the data that aren't in the original. Represent as close as possible the essence of the source graphics. If you can whittle down the mental idea of what your source graphics really are, you can find a compact representation.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Fri Mar 10, 2006 10:49 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">blargg wrote:</div><div class="quotecontent">Your image above is trying to fake more colors by using the alternating vertical line pattern.</div><br />But that was an isolated example. I doubt that there will be many of these in the game. The top part are grass tiles (just doesn't have the correct palette yet), and grass is usually drawn with vertical stripes, but I won't be using many "patterns to simulate colors" through the game.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">It'd be more easily RLE compressible if you used <em>more</em> bits per pixel, representing patterns as another color. For example, you could use 4 bits per pixel to represent the even and odd column colors. 0000 would mean even and odd columns use color 0, 1001 would mean that even columns use color 10 and odd columns use color 01. Combine this with doing things at half resolution and it should compare to your wavelet example, but be simpler to implement.</div><br />Yes, but I don't want to actually use lower resolution. I've been thinking <strong>A LOT</strong> about this lately. The wavelet way is the best I came up with so far, it is very adaptative, so that you can combine high and low resolution together. And it succeeded in removing the patterns. They were in fact turned into flat areas, wich will highly increase compression performance.<br /><br />I don't think the pattern thing will help me in this case, but I did like the idea. The fact that you could represent the tiles with lower resolution if you could also define patterns as colors, so that the resolution does not look so crappy. I liked it.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">This shows how it's important to avoid introducing any artifacts into the data that aren't in the original. Represent as close as possible the essence of the source graphics. If you can whittle down the mental idea of what your source graphics really are, you can find a compact representation.</div>
<br />But these lines were supposed to be in the original, it's grass. =)
<br />I know the graphics are rushed but... it's still grass.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Fri Mar 10, 2006 11:00 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">How much space might the scale2x unpacker take in PRG?</div>
<br />Did you check the page explaining it? It seems pretty simple, there are only a few simple rules to follow. Accessing individual pixels would be the real pain, in my opinion. Maybe the scaling should be handled in 8bpp, and then converted back to the NES format when uploading to CHR RAM. If done on small objects at once, it woudn't be a memory (RAM) problem.
<br />
<br />Also, checking the pixels near the borders may complicate it a bit, since there are some inexistent pixels the normal routine would be trying to check, and you must trap that.
<br />
<br />Can't say how much it would take, but I don't think it is minigame compo material. Dwedit's 1bpp implementation of it in Z80 assembly took 271 bytes (without the boundary checks?)...

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Wed Apr 12, 2006 2:42 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I haven't had much time to work on this, so it took me a while. I came up with a scheme to hold all the graphics in only 2432 (2048 + 256 + 128) bytes. It is kind of a crazy idea, but it seems very promising.
<br />
<br />If anyone is interested, it goes something like this:
<br />
<br />Blocks of 16x16 pixels are individually encoded, wich means there are 128 of them to fill the whole 512 tiles of the pattern tables. All graphics are drawn with rectangles (from 1x1 to 16x16 pixels in size, with any possible combination in between). Each block has a background color, wich is used to clear it. Each block also has a rectangle count, that tells how many rectangles are used in that block. Each rectangle has a starting position in the block, and it's width and height.
<br />
<br />2048 bytes are used to hold the positions and sizes of 1024 rectangles, to be used on all 128 blocks. Wich means the rectangles/block ratio is 8. That may seem little at first, but with the simple graphics this game requires it will be OK. Most background blocks can easily stay within this average, but most sprites will go a bit over that. The main character uses twice the average. Diagonal detail is practically forbidden, as they are hard to represent with rectangles. Maybe a future version will incorporate other shapes? The algorithm can't get too complicated though, as the goal here is to save space.
<br />
<br />128 bytes hold the background color and the rectangle count for each block. 256 bytes hold the colors of each of the 1024 rectangles. These bytes are interleaved with level map data (wich doesn't use the top bit), so they aren't of much impact.
<br />
<br />A preliminary version of the decoding algorithm is ready and working (although I should prepare some more meaningful test data, I'm using just a couple of random rectangles for now), and it takes between 2 to 3 seconds to decode all blocks. Wich means that is the time to wait before anything shows on the screen. I'll try to improve the algorithm a bit, but I don't think I'll be getting much of a speed increase. Do you think this is too much time? Are 3 seconds enough for people to think something is not right?
<br />
<br />I though about flashing the screen or something, but I'd rather use something that doesn't mess with $2006 (no palette changes), since I want to render all tiles at once, setting $2006 only once, in the beginning. I don't want to interrupt that. Maybe the color (de)emphasis bits? Anyway, I'll think of a simple effect to let the player know the game is alive.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Disch</b> [ Wed Apr 12, 2006 3:33 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">Maybe the color (de)emphasis bits? Anyway, I'll think of a simple effect to let the player know the game is alive.</div>
<br />
<br />Probably be better off using the monochrome mode bit.  Turns 0F black into 00 grey -- very noticalbe difference visually.  The emphasis bits are much more subtle.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Wed Apr 12, 2006 8:52 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Disch wrote:</div><div class="quotecontent">Probably be better off using the monochrome mode bit.  Turns 0F black into 00 grey -- very noticalbe difference visually.</div><br />hum... but then I'd be flashing 2 colors only... kinda boring! =)<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">The emphasis bits are much more subtle.</div>
<br />I wish I could do some sort of smoother effect, like cycling the emphasis bits, giving an idea of animation, rather than flashing. But I guess you are right, it will be much too subtle.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Mon Apr 24, 2006 9:21 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Heh, I didn't follow all the post, but do you really think that a *LOSSY* graphics compression could be good on a system with such low resolution like the NES ? If you're talking for a 1kb constest or something, okay, but for a 'real' NES game, wouldn't that just even limit more the NES graphics that what they are already limited ?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Mon Apr 24, 2006 10:01 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />You are 100% right. In the past few days I figured, what good would it be limiting myself even more... for a silly contest? So I decided I'd not lower the quality of a game so that it would fit in a smaller area.
<br />
<br />I'm not good at making decisions. And when I do make them, I seem to pick the wrong ones... =)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Mon Apr 24, 2006 11:10 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I'm not good at making decisions. And when I do make them, I seem to pick the wrong ones... =)</div>
<br />
<br />Hey, I think your scheming were perfectly suited for one of those contests. It'd be cool to have a game's graphics fit just right with a compact decompressor.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Mon Apr 24, 2006 12:50 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />In the case of the contest, maybe, but this isn't real NES developpement since your size is limited to ridiculous amount of data.
<br />In a normal NES game, having lossy compression would be a real shame, since the graphics themselves are already made a "compact" way, with 2x2 tiles attributes and 2 planes 8x8 tiles.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Mon Apr 24, 2006 1:52 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">this isn't real NES developpement since your size is limited to ridiculous amount of data.</div>
<br />Unless you want to clone WarioWare on the NES. Imagine putting two hundred minigames into a 512 KB Game Pak.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Mon Apr 24, 2006 2:28 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The idea was OK, but it was not optimum. The size of the decompression code was around a full page (256 bytes), if I remember correctly. And 18 bits per colored rectangle (2 for color, 8 for position and 8 for dimensions) also wasn't that good.
<br />
<br />It is a strangle battle to fight: If you have little space, that means you need compression. To better compress the data, the compression scheme becomes more complex. As it becomes complex, the decompression code gets bigger and starts eating ROM space. So, as the data shrinks, the decompressor gets bigger, so we have to find a healthy balance between the two. And that's not always so simple.
<br />
<br />I plan on doing more work on compression schemes, specially for graphics, but for now this is all I have, and it will remain like this since I'm not using it for my current project. If anyone wants to see the code as is, let me now and I'll look for it.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>2</strong> of <strong>3</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>