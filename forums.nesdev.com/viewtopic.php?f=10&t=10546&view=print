<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Programming an NSF player</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Programming an NSF player</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=10&amp;t=10546">http://forums.nesdev.com/viewtopic.php?f=10&amp;t=10546</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Limne</b> [ Mon Sep 30, 2013 11:52 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Programming an NSF player</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Hi, I'm interested in programming an NSF player but I have no real experience in sound programming. I know C and C++ and have a decent amount of experience in indie game development.<br /><br />To start off, I have a decent understanding of what each of registers $4000-$4017 but I have no idea how to turn that information into the sound that comes out of my speakers. Can anyone point me to a good tutorial on the subject? Preferably one geared towards ignorant newbies. If It makes any difference, I'm currently working with Windows 7.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Shiru</b> [ Mon Sep 30, 2013 12:32 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Programming an NSF player</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Tutorial on writing a NSF player or 2A03 sound hardware emulator for total newbies is something roughy equal to 'bulding a fusion reactor for newbies', i.e. it is a very specific area with very few people in the world ever interested in doing something like that.<br /><br />It is difficult to give recommendations on where to start, but I think, wrting a square wave generator, triangle wave generator, and pulse wave (variable duty cycle) generator could be one of such places. Make it render to a file first, then make it send the data to the sound card directly. Make controlable pitch and volume.<br /><br />Don't forget, NSF player includes a 6502 CPU emulator.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Mon Sep 30, 2013 12:39 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Programming an NSF player</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Which of the following is what you want to do?<br /><br />* You want to produce a file that can be loaded into an emulator or your Nintendo, and play music?<br />- If so, you should start at famitracker.com<br />* You want to write a piece of software that can load one of those files, and play it on your computer?<br />- You should start off by programming a 6502 emulator, and then either use blargg's blip_buf or directly emulate audio at 1.8MHz and use a good resampler.<br />* You want to build the hardware to load one of those files and play it on your Nintendo?<br />- Start off with kevtris's implementation and then maybe change things ( <!-- m --><a class="postlink" href="http://kevtris.org/Projects/hardnes/">http://kevtris.org/Projects/hardnes/</a><!-- m --> )

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Mon Sep 30, 2013 6:10 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Programming an NSF player</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />People don't really write tutorials for things like this. It's too specific a need. However, there's several open source NSF players you can take a look at to get an understanding. I maintain <a href="http://rainwarrior.ca/projects/nsfplay/" class="postlink">NSFPlay</a>. Maybe <a href="http://slickproductions.org/notsofatso.php" class="postlink">NotSoFatso</a> has the easiest to understand source code. Most of the open source NES emulators also play NSF (e.g. FCEUX, Nestopia) since a working NES emulator has really very little to add to support NSF.<br /><br />That you need to emulate the CPU is probably the most difficult part of making an NSF player; much more difficult than emulating the actual sound-producing bits. There are many open source 6502 emulations though, perhaps you can integrate one that has a suitable license for your project. Once you're over that hurdle, the sound hardware emulation isn't too bad, and it's fairly well documented on the wiki at this point, IMO.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Limne</b> [ Mon Sep 30, 2013 7:00 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Programming an NSF player</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Shiru: Thank you for the explanation. I think you're right about starting with simple waveform generators. I'll see what I can come up with through Google, but so far I'm not having much luck. I'm guessing this sort of thing is a lot more technical than I had anticipated and that finding the correct vocabulary to research this area would be the first step.<br /><br />Lidnariq: Isn't 1.8MHz a really high sample rate? Isn't CD quality audio 48k Hz or so? Why so much more for such an old machine? What's a resampler?<br /><br />Rainwarrior: Thanks, I'll take a look through both projects and see if I can't understand that audio components.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Mon Sep 30, 2013 7:10 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Programming an NSF player</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />1.8MHz is the NES' clock that drives the 2A03 (the NES' CPU and audio chip), so it's the samplerate the audio is natively being generated at. You don't actually need to render the audio at 1.8MHz, but it's the ideal quality level. The noise of the 2A03 in particular is hard to get to sound right without at least ~16x oversampling at 44kHz (you can get a passable result by oversampling just the noise, though).<br /><br />A lot of things are hard to emulate properly if you don't carefully count the native clock cycles (e.g. PCM audio played back by timed CPU loops), but you don't need to account for the audio output on every single clock. If you look at NotSoFatso you'll see that the audio updates are given a number of CPU clock cycles, and it just emulates that many cycles (at 44kHz this is ~42 CPU cycles per sample) and outputs the current audio state.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Mon Sep 30, 2013 7:37 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Programming an NSF player</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />By &quot;resampler&quot;, I mean <!-- m --><a class="postlink" href="https://en.wikipedia.org/wiki/Sample_rate_conversion">https://en.wikipedia.org/wiki/Sample_rate_conversion</a><!-- m -->

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Shiru</b> [ Mon Sep 30, 2013 7:49 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Programming an NSF player</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Another thing I think is worth to mention is the whole idea of how sound chips works. Generally they simply divide incoming clock frequency, which is pretty high (1.8 MHz in case with APU, as mentioned before) by constant and variable integer values. Resulting output could then go directly to audio output, like square wave - alternating 0 and 1, with value of the volume register used for 1, or drive a waveform generator, like advance pointer in a triangle waveform (16 steps, up 16 down - takes 32 clocks to repeat the waveform), or LFSR for noise generation. This explaination is basically covers up most of the 'theory' behind these things.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Mon Sep 30, 2013 11:23 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Programming an NSF player</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><a href="http://www.youtube.com/watch?v=gKXGDuKrCfA" class="postlink">Waveforms in Zelda title theme</a>.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>