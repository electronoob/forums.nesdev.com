<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Sleep Function</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Sleep Function</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=3&amp;t=9254">http://forums.nesdev.com/viewtopic.php?f=3&amp;t=9254</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>WedNESday</b> [ Mon Aug 27, 2012 8:10 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Sleep Function</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I'm currently using QueryperformanceFrequency/Counter to time my frames.<br /><br />However, after a frame has been processed and I need to wait x amount of time to produce 60 FPS how do I put the application into wait mode that doesn't use 100% CPU time?<br /><br />Sleep is too inaccurate. Sleep(1) through to Sleep(10) causes the program to sleep for 10ms and Sleep(11) through to Sleep(20) causes the program to sleep for 20ms and so forth.<br /><br />This means that Sleep rounds up the 1/1000ms to 10/1000ms which is too inaccurate.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>cpow</b> [ Mon Aug 27, 2012 8:27 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Sleep Function</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">WedNESday wrote:</div><div class="quotecontent">I'm currently using QueryperformanceFrequency/Counter to time my frames.<br /><br />However, after a frame has been processed and I need to wait x amount of time to produce 60 FPS how do I put the application into wait mode that doesn't use 100% CPU time?<br /><br />Sleep is too inaccurate. Sleep(1) through to Sleep(10) causes the program to sleep for 10ms and Sleep(11) through to Sleep(20) causes the program to sleep for 20ms and so forth.<br /><br />This means that Sleep rounds up the 1/1000ms to 10/1000ms which is too inaccurate.</div><br /><br />I had similar issues with Query* API.  Then I switched to audio-sample based timing.  I'm not trying to say my implementation is perfect...but Sleep, as you point out, is not reliable.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>WedNESday</b> [ Mon Aug 27, 2012 8:30 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Sleep Function</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">cpow wrote:</div><div class="quotecontent">I had similar issues with Query* API.  Then I switched to audio-sample based timing.  I'm not trying to say my implementation is perfect...but Sleep, as you point out, is not reliable.</div><br /><br />So how do you manage it?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Mon Aug 27, 2012 8:41 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Sleep Function</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />In fullscreen mode you can achieve a vsynch through your graphics API. Some API will let you wait for vsynch in windowed mode (even though the actual presentation of the video isn't synched).<br /><br />It's hard to get a precise framerate, but you can use QueryPerformanceCounter to time your frames, and using Sleep when you need to delay the next frame is normally an acceptable solution. Don't expect a consistent timing from Sleep, but obviously you can determine your exact timing with QueryPerformanceCounter and have the program react accordingly. Just accumulate the time elapsed and execute a frame every time it goes over 16.6ms.<br /><br />The resolution of Sleep varies depending on a lot of factors; it's not always as bad as 10ms. Also try Sleep(0), as it works a little different than Sleep(1). Increasing the priority of your program's thread can help with this problem. Calling Sleep(0) is healthy for a program to do, as it can reduce power usage and/or allow background programs to run, instead of a busy loop which will hog the CPU.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>cpow</b> [ Mon Aug 27, 2012 8:52 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Sleep Function</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">WedNESday wrote:</div><div class="quotecontent"><div class="quotetitle">cpow wrote:</div><div class="quotecontent">I had similar issues with Query* API.  Then I switched to audio-sample based timing.  I'm not trying to say my implementation is perfect...but Sleep, as you point out, is not reliable.</div><br /><br />So how do you manage it?</div><br /><br />I use SDL.  The SDL callback is timed based on the number of samples you tell it you'll queue up whenever asked.  Then when asked, I provide them.  My emulation core hangs on a semaphore when it's generated enough samples.  The SDL callback kicks that semaphore.  I think the key is to not tie the audio callback rate to video update...don't, in other words, lock yourself into the thought that you *need* to set up SDL to ask you for 735 samples at 44100Hz just so you know that *exactly* 60 frames will go by in a second.  I have my SDL callback set at 1024 samples.  My emulator core -- though I'm still playing around with this -- generates 2048 samples before hanging.  So on a powerful enough* system my emulator will always be one frame ahead.<br /><br />*My emulator core is trying to be ridiculously accurate and generate a ridiculous amount of debug information for the IDE...so it's a bit of a CPU hog.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Mon Aug 27, 2012 9:00 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Sleep Function</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />What I'm suggesting is something like this:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">Time accum = 0;<br />Time last = GetTime();<br />Time FRAME_TIME = 1000 * ms / 60;<br /><br />while ( quit != TRUE )<br />{<br />&nbsp; &nbsp; // execute one frame, remove one frame of time from the accumulated time<br />&nbsp; &nbsp; DoFrame();<br />&nbsp; &nbsp; accum -= FRAME_TIME;<br /><br />&nbsp; &nbsp; // while it is not time for the next frame, allow other programs to execute<br />&nbsp; &nbsp; while (accum + GetTime() - last &lt; 0)<br />&nbsp; &nbsp; {<br />&nbsp; &nbsp; &nbsp; &nbsp; Sleep(0);<br />&nbsp; &nbsp; }<br /><br />&nbsp; &nbsp; // account for time spent sleeping and proceed to the next frame<br />&nbsp; &nbsp; Time next = GetTime();<br />&nbsp; &nbsp; accum += next - last;<br />&nbsp; &nbsp; last = next;<br />}</div><br /><br />By keeping a running total of the time spent, you can make sure that even though your frames don't run precisely at 60hz, on average they will. If you try to slow down individual frames without accumulating earlier time, you end up just running at a consistently slower rate.<br /><br />You may wish to put a clamp on how big the accumulated time value can get. If a frame ends up taking 5 seconds, you don't necessarily want to run at max speed until it catches up. Probably a couple of frames is a good limit for accum. Similarly you may want to reset the accumulator after loading from disk, or other things you know will introduce a long pause.<br /><br />If you wish, you can change Sleep(0) in there to a Sleep using the expected number of milliseconds you need to wait. As you noticed, it will wait longer than you specified, but the accumulated time will account for that.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>WedNESday</b> [ Mon Aug 27, 2012 9:04 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Sleep Function</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />In an instance where no other programs were hogging the CPU wouldn't your example still result in 100% CPU usage?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Mon Aug 27, 2012 9:15 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Sleep Function</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Sleep(0) doesn't necessarily return right away, even if you think no other programs are running, but as I suggested at the bottom it might be better to Sleep with the predicted needed number of milliseconds. In practice the difference between using Sleep(0) in a wait loop and just doing nothing can be huge in terms of CPU resource consumed.<br /><br />Cpow's solution is also good, waiting on a semaphore for a hardware driven timed signal. If you're synching to audio that requires a working audio signal. APIs for vsynch usually work similarly. There are other kinds of timers you can use to drive your loop. The main thing for maintaining a consistent framerate is to keep track of how many frames you should have executed based on that timer, catch up when behind (if desired), and especially wait up when ahead (preferrably giving CPU back to the system with Sleep or a semaphore or something similar).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>WedNESday</b> [ Mon Aug 27, 2012 9:52 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Sleep Function</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I agree that using Sleep(0) is better than nothing at all but doesn't solve my problem. How do PC games achieve 60FPS without 100% CPU usage?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dwedit</b> [ Mon Aug 27, 2012 10:05 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Sleep Function</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I was trying to figure out how to get 60FPS, Vsync, and not 100% CPU usage, when I noticed that XNA does that stuff automatically, and it all just works.  So I guess we have to find out how XNA did it.<br /><br />Edit: checked out XNA, but the actual code responsible for performing the vblank wait is not .NET code.  The last .NET code used is &quot;GraphicsDevice.Present()&quot;.  Then it calls some native code after that.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>WedNESday</b> [ Mon Aug 27, 2012 10:09 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Sleep Function</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Dwedit wrote:</div><div class="quotecontent">I was trying to figure out how to get 60FPS, Vsync, and not 100% CPU usage, when I noticed that XNA does that stuff automatically, and it all just works.  So I guess we have to find out how XNA did it.</div><br /><br />Getting VSYNC windowed was gonna be my next question.<br /><br />Edit: But how can XNA help us with our C++?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Mon Aug 27, 2012 10:14 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Sleep Function</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />If you want to give up some CPU time, I already mentioned multiple ways to do this. Sleep, semaphores, timer callbacks, vsynch. Probably XNA does it via vsynch.<br /><br />The example code I provided was an example if you want to do it with Sleep.<br /><br />Regarding <a href="http://msdn.microsoft.com/en-us/library/windows/desktop/ms686298%28v=vs.85%29.aspx" class="postlink">Sleep(0)</a>:<br /><div class="quotetitle">MSDN wrote:</div><div class="quotecontent">If you specify 0 milliseconds, the thread will relinquish the remainder of its time slice but remain ready. Note that a ready thread is not guaranteed to run immediately. Consequently, the thread may not run until some time after the sleep interval elapses.</div><br /><br />As I said though, Sleep with the number of milliseconds you'd like to wait might be a little better. In practice, I don't think you'll find much of a difference; either way is fine for giving the CPU breathing room.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Mon Aug 27, 2012 10:28 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Sleep Function</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The default behaviour in Direct3D is to sleep your thread until vsynch when you call Present. This is customizable; you probably want to use D3DPRESENT_INTERVAL_ONE.<br /><br />See: <a href="http://msdn.microsoft.com/en-us/library/windows/desktop/bb174313%28v=vs.85%29.aspx" class="postlink">CreateDevice</a>, <a href="http://msdn.microsoft.com/en-us/library/windows/desktop/bb172585%28v=vs.85%29.aspx" class="postlink">D3DPRESENT</a>, and <a href="http://msdn.microsoft.com/en-us/library/windows/desktop/bb205908%28v=vs.85%29.aspx" class="postlink">Present</a>.<br /><br />This works in windowed mode as well. Note that in windowed mode, it won't prevent screen tearing, as the vsync isn't actually observed for flipping the screen, but it will still wait on Present. (Note also the timing will be a little bit variable; on average it will be called at the specified rate, but individual frames may run short or long.)<br /><br />Note that the actual rate it locks to is not guaranteed. You can query the framerate you're actually going to get, I believe. Most systems will support 60hz, but you may want to tweak things if you don't get it.<br /><br />I forget if there's an equivalent way to do this in OpenGL, but there likely is.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dwedit</b> [ Mon Aug 27, 2012 10:49 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Sleep Function</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />So, since XNA is calling Present(), that's the one to use for vblank waiting then.<br />Then I started doing web searches about present().  I was reading a blog post on virtualdub.org, where the author talks about input events (keyboard and mouse) being horribly delayed by 5 seconds.  XNA only calls Present() in an Application.Idle event handler, so this is after the windows message queue is empty, and it avoids that problem.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>WedNESday</b> [ Tue Aug 28, 2012 1:01 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Sleep Function</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="codetitle"><b>Code:</b></div><div class="codecontent">onepercent = cpuspeed / 100;<br />frame = cpuspeed / 60;<br />runframe();<br />frame -= frametime;<br />if (frame &gt; onepercent)<br />&nbsp; &nbsp; Sleep(10);<br /></div><br />This is what I am trying to achieve. This way I believe that my CPU can be put to sleep for at least 60% of its life to save energy.<br /><br />I've been calling QueryPerformanceFrequency to get my CPU speed in Hz but apparantly what it actually returns is something else?

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>