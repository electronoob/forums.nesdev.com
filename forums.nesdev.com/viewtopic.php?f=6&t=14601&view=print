<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Does this exist? (Atari 2600 TIA -&gt; NES 2A03 Note conv.)</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Does this exist? (Atari 2600 TIA -&gt; NES 2A03 Note conv.)</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=6&amp;t=14601">http://forums.nesdev.com/viewtopic.php?f=6&amp;t=14601</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>PacManPlus</b> [ Mon Aug 01, 2016 10:46 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Does this exist? (Atari 2600 TIA -&gt; NES 2A03 Note conv.)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Hi:<br /><br />Just a curiosity question here.  I am porting a game that I developed (an arcade port) on the Atari 7800 over to the NES.  I'd like to use the same sounds that I created on the 7800, but I am having great difficulty.  (The Atari 7800 uses the same TIA as the Atari 2600)<br /><br />I've adapted the sound driver that I used for the 7800 TIA over to the NES, and expanded it (from the 2 channels of the TIA to the 4 - two square, one triangle and one noise) for the 2A03.<br /><br />Is there any conversion chart available for notes and noises from one to the other?  I did a Google search but found nothing. <img src="./images/smilies/icon_sad.gif" alt=":(" title="Sad" /><br />I understand they won't sound exactly the same of course... I was hoping for 'close enough'. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /><br />Thank you for your help...<br />Bob

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>dougeff</b> [ Mon Aug 01, 2016 10:52 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Does this exist? (Atari 2600 TIA -&gt; NES 2A03 Note conv.)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I think you could fit every 7800 programmer in the world in a small closet. You might literally be the only person who's considering porting music from 7800 to NES.<br /><br />You may have to start from scratch.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>PacManPlus</b> [ Mon Aug 01, 2016 10:55 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Does this exist? (Atari 2600 TIA -&gt; NES 2A03 Note conv.)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">dougeff wrote:</div><div class="quotecontent">I think you could fit every 7800 programmer in the world in a small closet. You might literally be the only person who's considering porting music from 7800 to NES.<br /><br />You may have to start from scratch.</div><br /><br />Lol, I know.  I've done a bunch of arcade ports to the 7800: Astro Fighter, Astro Blaster, Jr. Pac-Man, Super Pac-Man, Rip-Off, Scramble, Berzerk/Frenzy (this is the one I'm trying to port to the NES - I'm just down to sound), Space Duel, Asteroids Deluxe, Space Invaders, etc..   and some 'originals'.<br />That's why I mentioned that it uses the same sound chip as the 2600. <img src="./images/smilies/icon_wink.gif" alt=";)" title="Wink" /><br /><br />Thanks,<br />Bob

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>mikejmoffitt</b> [ Mon Aug 01, 2016 11:14 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Does this exist? (Atari 2600 TIA -&gt; NES 2A03 Note conv.)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Principally, aren't both chips implementing the notes as periods to load a counter with? You should be able to apply some coefficient to your load values (and the 2A03 channels are 11-bit, not the 8-bit resolution of the TIA ones) and then it may &quot;just work&quot;.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>PacManPlus</b> [ Mon Aug 01, 2016 11:47 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Does this exist? (Atari 2600 TIA -&gt; NES 2A03 Note conv.)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Ok, I found a TIA note chart, so I'll look for a 2A03 note chart as well and do the connections myself.<br /><br />This wasn't my major concern, however, as sound effects make up 99% of the audio (I just have one short tune at the splash screen).  I liked the sounds I had come up with on the 7800 for the shot, explosion, and death, and I wanted to approximate them as close as possible here.  If anyone can help with that, it would be great.  I dislike re-inventing the wheel.<br /><br />I also have the voice sample data that I used for the 7800 version as well, and I'll use some of it here once I figure out the Digital channel.  The only thing is I'll be cutting some of the speech out as I don't have room for it all (it's 22K for the speech data alone on the 7800 version).  I'm trying to keep this at Mapper 0 so as you know I only have 32K total.<br /><br />Thanks, <br />Bob

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Mon Aug 01, 2016 12:29 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Does this exist? (Atari 2600 TIA -&gt; NES 2A03 Note conv.)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />As you know, the TIA has two channels; each with its own 4-bit volume channel and its own 5-bit frequency divider. Additionally, each channel is limited to one of 16 [tone color and additional frequency divider] choices.<br /><br />So, ignoring tone color, you can convert the frequency divider (AUDFx) and tone color (AUDCx) to a pure frequency by saying<br /><tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">31400Hz ÷ &#40;AUDFx+1&#41; ÷ table[AUDCx]</tt> <span style="font-size: 67%; line-height: normal">(table[n] is [inf,15,465,465,2,2,31,31,511,31,31,inf,6,6,93,93].)</span><br />In contrast, the NES's pulse wave frequencies are the simpler<br /><tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">111861Hz ÷ divider</tt><br />and its triangle wave is that÷2.<br /><br />The math is straightforward, at that point.<br /><br />Now, compensating for tone color is a good deal more annoying.<br />Each of the TIA's channels can produce one of eight different tone colors. The NES's tone colors are divided more by channel:<br />• The two pulse wave channels can make one of three tone colors.<br />• The triangle channel can make one tone color, but approximately has no volume control<br />• The noise channel can make two tone colors, but one is random.<br /><br />Sitting down with the 2600 docs and an FFT, the mapping is approximately:<br />AUDCx=0,B - silence<br />AUDCx=1 - LFSR equivalent to 1/15th duty pulse wave; closest match is pulse wave channel 1/8th duty<br />AUDCx=2 - very approximately the same as =1<br />AUDCx=3 - too complex for an analog<br />AUDCx=4,5,C,D - square wave. NES pulse waves support identical<br />AUDCx=6,A,E - 42% or 68% duty cycle pulse wave. Equally close to the NES's 1/4 and 1/2 duty cycle pulse.<br />AUDCx=7,9,F - LFSR equivalent to 1/31st duty pulse wave; no good match on the NES (closest is again 1/8th)<br />AUDCx=8 - 9-bit LFSR white noise. Closest is NES's 15-bit LFSR white noise<br /><br /><br />There's also <a href="http://www.qotile.net/files/2600_music_guide.txt" class="postlink">this document</a> from someone who used a 2600 as an instrument in a band.<br /><br /><span style="font-size: 67%; line-height: normal">edit#1: give up on summarizing AUDCx=3<br />edit#2: fix off-by-one<br />edit#3: fix typo of register name</span>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>PacManPlus</b> [ Mon Aug 01, 2016 12:40 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Does this exist? (Atari 2600 TIA -&gt; NES 2A03 Note conv.)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />This is awesome - thank you so much! <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>PacManPlus</b> [ Tue Aug 02, 2016 5:58 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Does this exist? (Atari 2600 TIA -&gt; NES 2A03 Note conv.)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Ugh.<br /><br />I am so lost with this.  The TIA and even the Pokey is so straight-forward when making music / sound effects, and the 2A03 is so.... not.<br /><br />I was trying to use the FamiTracker to get a sound (I downloaded some sound effects from the web), and I tried to convert them to the sound driver I'm using (I have a custom sound driver which I adapted from what I use for the TIA).  <br /><br />This is a quick description of how it is coded:<br />It reads 3 bytes per delta - Control/Volume, Note Low Byte, Frame Count / Note High Byte<br />Being that I'm using the Noise Channel, I am ignoring the 'Control' part of the first byte, and just using the Volume ORAing it with #$30 to turn off internal counters and writing that to $400C.<br />I am writing the second byte (the Sound Low Byte) to $400E.  <br />I am extracting the Frame Count from the 2nd byte, so I know how many frames to play the current sound.  There are only 16 sound types, so I am ignoring the Note High Byte from here.<br />I read somewhere on here that we have to put a non-zero byte in $400F, so I am forcing a '$01' there.<br /><br />I am trying to get this data written as an example (so I know how to convert the sounds to my driver):<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">PATTERN 00<br />ROW 00 : ... .. . ... : ... .. . ... : ... .. . ... : 5-# 00 D F01 : ... .. . ...<br />ROW 01 : ... .. . ... : ... .. . ... : ... .. . ... : 4-# 00 C ... : ... .. . ...<br />ROW 02 : ... .. . ... : ... .. . ... : ... .. . ... : 3-# 00 B F02 : ... .. . ...<br />ROW 03 : ... .. . ... : ... .. . ... : ... .. . ... : 2-# 00 A ... : ... .. . ...<br />ROW 04 : ... .. . ... : ... .. . ... : ... .. . ... : 1-# 00 9 F03 : ... .. . ...<br />ROW 05 : ... .. . ... : ... .. . ... : ... .. . ... : 0-# 00 8 ... : ... .. . ...<br />ROW 06 : ... .. . ... : ... .. . ... : ... .. . ... : ... .. 7 F04 : ... .. . ...<br />ROW 07 : ... .. . ... : ... .. . ... : ... .. . ... : ... .. 6 ... : ... .. . ...<br />ROW 08 : ... .. . ... : ... .. . ... : ... .. . ... : ... .. 5 F05 : ... .. . ...<br />ROW 09 : ... .. . ... : ... .. . ... : ... .. . ... : ... .. 4 ... : ... .. . ...<br />ROW 0A : ... .. . ... : ... .. . ... : ... .. . ... : ... .. 3 F06 : ... .. . ...<br />ROW 0B : ... .. . ... : ... .. . ... : ... .. . ... : ... .. 2 ... : ... .. . ...<br />ROW 0C : ... .. . ... : ... .. . ... : ... .. . ... : ... .. 1 F07 : ... .. . ...<br />ROW 0D : ... .. . ... : ... .. . ... : ... .. . ... : ... .. 0 ... : ... .. . ...<br />ROW 0E : ... .. . ... : ... .. . ... : ... .. . ... : ... .. . ... : ... .. . ...<br />ROW 0F : ... .. . ... : ... .. . ... : ... .. . ... : ... .. . ... : ... .. . ...<br /></div><br /><br />This is how I am doing it for both TIA and Pokey, and it works there.  For the 2A03, I seem to get only one sound (the shhhhhhhhhhhh sound). <br />I've tried the Low Bytes with and without the high bit set (for Mode-0 or Mode-1)<br /><br />I've also checked the contents to make sure I was writing the values that I think I'm writing, and they are correct.<br />Does anyone know what I am doing wrong to not be able to get the sound like I've shown above?<br /><br />This is my data:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">;&nbsp; &nbsp;FREQUENCY LOW BYTE - LOW BYTE OF NOTE (LFTUNEXX)<br />;&nbsp; &nbsp;FRAME/FREQUENCY - BIT 76543XXX CONTROL THE NUMBER OF FRAMES, BIT XXXXX210 CONTAIN THE HIGH BYTE OF NOTE (FHTUNEXX)<br />;&nbsp; &nbsp;VOICE/VOLUME - BITS 76--XXXX CONTAIN THE VOICE CONTROL, BITS XX--3210 CONTAIN THE VOLUME (CVTUNEXX)<br />;&nbsp; &nbsp;$00 IN ALL THREE BYTES ENDS THE SOUND<br />;&nbsp; &nbsp;TEMPOS<br />T01&nbsp; &nbsp;=&nbsp; &nbsp;$00<br />T02&nbsp; &nbsp;=&nbsp; &nbsp;$08<br />T03&nbsp; &nbsp;=&nbsp; &nbsp;$10<br />T04&nbsp; &nbsp;=&nbsp; &nbsp;$18<br />T05&nbsp; &nbsp;=&nbsp; &nbsp;$20<br />T06&nbsp; &nbsp;=&nbsp; &nbsp;$28<br />T07&nbsp; &nbsp;=&nbsp; &nbsp;$30<br />T08&nbsp; &nbsp;=&nbsp; &nbsp;$38<br />LFTUNE02:<br />&nbsp; &nbsp;.byte $05,$04,$03,$02,$01,$00,$00,$00<br />&nbsp; &nbsp;.byte $00,$00,$00,$00,$00,$00,$00,$00<br />FHTUNE02:<br />&nbsp; &nbsp;.byte T01,T01,T02,T02,T03,T03,T04,T04<br />&nbsp; &nbsp;.byte T05,T05,T06,T06,T07,T07,$00,$00<br />CVTUNE02:<br />&nbsp; &nbsp;.byte $0D,$0C,$0B,$0A,$09,$08,$07,$06<br />&nbsp; &nbsp;.byte $05,$04,$03,$02,$01,$00,$00,$00<br /></div><br /><br />Thank you, thank you, thank you all for any help.<br />Bob

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Tue Aug 02, 2016 6:48 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Does this exist? (Atari 2600 TIA -&gt; NES 2A03 Note conv.)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />One: on the 2A03, white noise (analogous to AUDCn = 8) can only come out of the 4th (&quot;noise&quot;) channel, and the 4th noise channel usually only produces white noise (the NES's noise channel has a tonal noise mode, but the harmonic content you get out is practically random: a function of the LFSR's exact contents when it's switched to tonal noise mode)<br /><br />Two: The NES's white noise channel is fairly constrained. Unlike the two pulse wave channels and the triangle wave channel, it's restricted to one of sixteen frequencies ( <!-- m --><a class="postlink" href="http://wiki.nesdev.com/w/index.php/APU_Noise">http://wiki.nesdev.com/w/index.php/APU_Noise</a><!-- m --> ).<br /><br />LFSR white noise sources (like in the AY-8910, 2A03, VIC-1, SN76489, TIA) clocked at sample rate X are approximately equivalent to an ideal white noise source followed by a first-order lowpass filter at that same frequency.<br /><br />So, with the TIA, the sixteen corner frequencies are 31400 Hz ÷ (1,2,3,…32) = (31400, 15700, 10466,…980)Hz, but on the NES it's restricted to instead a relatively constrained (and oddly musically related) set of periods going both much higher (rate 0 = period 4 = 447kHz) and lower (rate $F = period 4068 = 440Hz)<br /><br />The NES noise channel periods corresponding to the TIA's range are values $4 ( rate 28kHz ≈ AUDFn=0@31kHz) through $E (rate 880Hz ≈ AUDFn=31@980Hz)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>PacManPlus</b> [ Wed Aug 03, 2016 3:33 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Does this exist? (Atari 2600 TIA -&gt; NES 2A03 Note conv.)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Thank you for that, and I think I get most of it, but I guess putting it into use is the part that I am not understanding.<br /><br />I.E. my thing is, to get the above data:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">PATTERN 00<br />ROW 00 : ... .. . ... : ... .. . ... : ... .. . ... : 5-# 00 D F01 : ... .. . ...<br />ROW 01 : ... .. . ... : ... .. . ... : ... .. . ... : 4-# 00 C ... : ... .. . ...<br />ROW 02 : ... .. . ... : ... .. . ... : ... .. . ... : 3-# 00 B F02 : ... .. . ...<br />ROW 03 : ... .. . ... : ... .. . ... : ... .. . ... : 2-# 00 A ... : ... .. . ...<br />ROW 04 : ... .. . ... : ... .. . ... : ... .. . ... : 1-# 00 9 F03 : ... .. . ...<br />ROW 05 : ... .. . ... : ... .. . ... : ... .. . ... : 0-# 00 8 ... : ... .. . ...<br />ROW 06 : ... .. . ... : ... .. . ... : ... .. . ... : ... .. 7 F04 : ... .. . ...<br />ROW 07 : ... .. . ... : ... .. . ... : ... .. . ... : ... .. 6 ... : ... .. . ...<br />ROW 08 : ... .. . ... : ... .. . ... : ... .. . ... : ... .. 5 F05 : ... .. . ...<br />ROW 09 : ... .. . ... : ... .. . ... : ... .. . ... : ... .. 4 ... : ... .. . ...<br />ROW 0A : ... .. . ... : ... .. . ... : ... .. . ... : ... .. 3 F06 : ... .. . ...<br />ROW 0B : ... .. . ... : ... .. . ... : ... .. . ... : ... .. 2 ... : ... .. . ...<br />ROW 0C : ... .. . ... : ... .. . ... : ... .. . ... : ... .. 1 F07 : ... .. . ...<br />ROW 0D : ... .. . ... : ... .. . ... : ... .. . ... : ... .. 0 ... : ... .. . ...<br />ROW 0E : ... .. . ... : ... .. . ... : ... .. . ... : ... .. . ... : ... .. . ...<br />ROW 0F : ... .. . ... : ... .. . ... : ... .. . ... : ... .. . ... : ... .. . ...<br /></div><br /><br />What would be the bytes written to $400C and $400E (assuming $400F is constant at #$01)?  I am not using the internal length counter (I have it disabled).  I am keeping track of the number of frames myself, and writing to these registers once per frame.  If I write what I *think* these values translate to (see my data in my previous post), I get just a 'plink' when mode = 1 and a 'shhhhhh' when mode = 0.  In other words, nothing like what plays in Tracker.<br /><br />I'm just trying to figure out what I am translating incorrectly.<br /><br />Again, thank you, and I'm sorry that I am having a hard time with this. <img src="./images/smilies/icon_sad.gif" alt=":(" title="Sad" /><br />Bob

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Wed Aug 03, 2016 5:22 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Does this exist? (Atari 2600 TIA -&gt; NES 2A03 Note conv.)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />There's nothing too mystical about the noise channel if you disable the envelope and stop the length counter. Just make sure to reload the length counter after you stop it, so that it will have non-zero value.<br /><br />Show some code, maybe?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>PacManPlus</b> [ Wed Aug 03, 2016 4:01 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Does this exist? (Atari 2600 TIA -&gt; NES 2A03 Note conv.)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Thank you for the reply.  Here is the sound code I am using (please remember, it's adapted from the TIA driver I use):<br /><br />First, here is a video of the sound in FamiTracker, then what I get when I use 'Mode 0', and then 'Mode 1':<br /><!-- m --><a class="postlink" href="https://youtu.be/UUA6iNb8gFU">https://youtu.be/UUA6iNb8gFU</a><!-- m --><br /><br />The sounds I will eventually try to replicate (once I figure this example out) are attached.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">;&nbsp; &nbsp;TUNE ROUTINES ------------------------------------------------------------------------------------------------------------&gt;<br /><br />AUDC0T&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;EQU $4000&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;;Audio Control / Volume Channel 0<br />AUDF0T&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;EQU $4002&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;;Audio Frequency Channel 0<br /><br />;&nbsp; &nbsp;INITIALIZE SOUND HARDWARE<br />INITTUN<br />&nbsp; &nbsp;LDA #$1F&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;;ENABLE ALL CHANNELS (SQUARE1, SQUARE2, TRIANGLE, NOISE, DIGITAL)<br />&nbsp; &nbsp;STA $4015<br />&nbsp; &nbsp;LDA #$00&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;;SILENCE ALL CHANNELS<br />&nbsp; &nbsp;STA AUDF0T+$00<br />&nbsp; &nbsp;STA AUDC0T+$00<br />&nbsp; &nbsp;STA AUDF0T+$04<br />&nbsp; &nbsp;STA AUDC0T+$04<br />&nbsp; &nbsp;STA AUDF0T+$08<br />&nbsp; &nbsp;STA AUDC0T+$08<br />&nbsp; &nbsp;STA AUDF0T+$0C<br />&nbsp; &nbsp;STA AUDC0T+$0C<br />&nbsp; &nbsp;RTS<br /><br />;&nbsp; &nbsp;TURN OFF ALL SOUNDS<br />STOPTUN<br />&nbsp; &nbsp;LDA #$00&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;;TURN OFF SOUNDS<br />&nbsp; &nbsp;STA AUDF0T+$00<br />&nbsp; &nbsp;STA AUDC0T+$00<br />&nbsp; &nbsp;STA AUDF0T+$04<br />&nbsp; &nbsp;STA AUDC0T+$04<br />&nbsp; &nbsp;STA AUDF0T+$08<br />&nbsp; &nbsp;STA AUDC0T+$08<br />&nbsp; &nbsp;STA AUDF0T+$0C<br />&nbsp; &nbsp;STA AUDC0T+$0C<br />&nbsp; &nbsp;LDA #$01<br />&nbsp; &nbsp;STA TUNOFF<br />&nbsp; &nbsp;RTS<br /><br />;&nbsp; &nbsp;TURN ON ALL SOUNDS<br />STARTTUN<br />&nbsp; &nbsp;LDA #$00<br />&nbsp; &nbsp;STA TUNOFF<br />&nbsp; &nbsp;RTS<br /><br />;&nbsp; &nbsp;THIS ROUTINE ERASES ALL TUNES<br />;&nbsp; &nbsp;X AND Y ARE PRESERVED<br />CLEARTUN<br />&nbsp; &nbsp;TXA&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;;STACK REGISTERS<br />&nbsp; &nbsp;PHA<br />&nbsp; &nbsp;TYA<br />&nbsp; &nbsp;PHA<br />&nbsp; &nbsp;LDX #$03<br />CTLOOP<br />&nbsp; &nbsp;JSR ENDTUNE&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;;ERASE CURRENT TUNE<br />&nbsp; &nbsp;DEX<br />&nbsp; &nbsp;BPL CTLOOP<br />&nbsp; &nbsp;PLA&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;;UNSTACK REGISTERS<br />&nbsp; &nbsp;TAY<br />&nbsp; &nbsp;PLA<br />&nbsp; &nbsp;TAX<br />&nbsp; &nbsp;RTS<br /><br />;&nbsp; &nbsp;ROUTINE TO KILL A PARTICULAR TUNE - IF IT IS RUNNING<br />;&nbsp; &nbsp;INPUT: TUNE NUMBER IN A<br />;&nbsp; &nbsp;X AND Y ARE PRESERVED<br />KILLTUNE<br />&nbsp; &nbsp;STA TUNNUM&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;;SAVE IT<br />&nbsp; &nbsp;TXA&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;;STACK REGISTERS<br />&nbsp; &nbsp;PHA<br />&nbsp; &nbsp;TYA<br />&nbsp; &nbsp;PHA<br />&nbsp; &nbsp;LDX #$03&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;;CHECK ALL CHANNELS<br />KTLOOP<br />&nbsp; &nbsp;LDA TUNON,X&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;;SEE IF CHANNEL ON<br />&nbsp; &nbsp;BEQ KTNEXT<br />&nbsp; &nbsp;LDA TUNINDEX,X&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;;SEE IF HAS TUNE TO BE KILLED<br />&nbsp; &nbsp;CMP TUNNUM<br />&nbsp; &nbsp;BNE KTNEXT<br />&nbsp; &nbsp;JSR ENDTUNE&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;;ERASE IT<br />KTNEXT<br />&nbsp; &nbsp;DEX<br />&nbsp; &nbsp;BPL KTLOOP<br />&nbsp; &nbsp;PLA&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;;UNSTACK REGISTERS<br />&nbsp; &nbsp;TAY<br />&nbsp; &nbsp;PLA<br />&nbsp; &nbsp;TAX<br />&nbsp; &nbsp;RTS<br /><br />;&nbsp; &nbsp;THIS ROUTINE CLEARS OUT A TUNE CHANNEL<br />;&nbsp; &nbsp;INPUT: X IS CHANNEL<br />ENDTUNE<br />&nbsp; &nbsp;LDA #$00<br />&nbsp; &nbsp;STA TUNON,X&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;;INDICATE CHANNEL CLEAR<br />&nbsp; &nbsp;STA TUNINDEX,X&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;;CLEAR TUNE INDEX<br />&nbsp; &nbsp;TXA<br />&nbsp; &nbsp;ASL A<br />&nbsp; &nbsp;ASL A<br />&nbsp; &nbsp;TAY<br />&nbsp; &nbsp;LDA #$00<br />&nbsp; &nbsp;STA AUDF0T,Y&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;;SILENCE THE CHANNEL<br />&nbsp; &nbsp;STA AUDC0T,Y<br />&nbsp; &nbsp;RTS<br /><br />;&nbsp; &nbsp;THIS ROUTINE ENTERS A TUNE INTO ONE OF THE SOUND CHANNELS IF IT CAN<br />;&nbsp; &nbsp;INPUT:&nbsp; TUNE NUMBER IN A<br />;&nbsp; &nbsp;X AND Y ARE PRESERVED<br />DOTUNE<br />&nbsp; &nbsp;BMI DTEXIT&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;;$FF MEANS NO TUNE (FOR TABLE READS)<br />&nbsp; &nbsp;STA TUNNUM&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;;SAVE IT<br />&nbsp; &nbsp;;LDA AUTOPLAY&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;;IF IN AUTOPLAY - NO SOUND<br />&nbsp; &nbsp;;BEQ DTCONT<br />&nbsp; &nbsp;;RTS<br />DTCONT<br />&nbsp; &nbsp;TXA&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;;STACK REGISTERS<br />&nbsp; &nbsp;PHA<br />&nbsp; &nbsp;TYA<br />&nbsp; &nbsp;PHA<br />&nbsp; &nbsp;LDY TUNNUM&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;;SEE IF WE CAN PUT IT IN<br />&nbsp; &nbsp;LDX TUNCHANNL,Y&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;;GET WHAT CHANNEL TO TRY TO PUT IT IN<br />&nbsp; &nbsp;LDA TUNON,X&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;;SEE IF CHANNEL OPEN<br />&nbsp; &nbsp;BEQ DTDOIT<br />&nbsp; &nbsp;LDA TUNPRIRTY,Y&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;;SEE IF WE CAN BUMP CHANNEL<br />&nbsp; &nbsp;CMP TUNPRIOR,X<br />&nbsp; &nbsp;BMI DTOUT<br />DTDOIT<br />&nbsp; &nbsp;LDA TUNNUM<br />&nbsp; &nbsp;TAY&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;;PUT TUNE IN Y<br />&nbsp; &nbsp;STA TUNINDEX,X&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;;SET THE TUNE INDEX<br />&nbsp; &nbsp;LDA #$00&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;;TURN TUNE OFF WHILE CHANGING IT<br />&nbsp; &nbsp;STA TUNON,X<br />&nbsp; &nbsp;LDA TUNLOWFRQL,Y&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;;GET LOW BYTE OF FREQUENCY LOW ADDRESS<br />&nbsp; &nbsp;STA LOWFRQL,X<br />&nbsp; &nbsp;LDA TUNLOWFRQH,Y&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;;GET LOW BYTE OF FREQUENCY HIGH ADDRESS<br />&nbsp; &nbsp;STA LOWFRQH,X<br />&nbsp; &nbsp;LDA TUNFRMFRQL,Y&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;;GET TUNE DURATION AND FREQUENCY LOW ADDRESS<br />&nbsp; &nbsp;STA FRMFRQL,X<br />&nbsp; &nbsp;LDA TUNFRMFRQH,Y&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;;GET TUNE DURATION AND FREQUENCY HIGH ADDRESS<br />&nbsp; &nbsp;STA FRMFRQH,X<br />&nbsp; &nbsp;LDA TUNCTLVOLL,Y&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;;GET TUNE CNTL AND VOLUME LOW ADDRESS<br />&nbsp; &nbsp;STA CTLVOLL,X<br />&nbsp; &nbsp;LDA TUNCTLVOLH,Y&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;;GET TUNE CNTL AND VOLUME HIGH ADDRESS<br />&nbsp; &nbsp;STA CTLVOLH,X<br />&nbsp; &nbsp;LDA TUNPRIRTY,Y&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;;SET PRIORITY<br />&nbsp; &nbsp;STA TUNPRIOR,X<br />&nbsp; &nbsp;LDA #$01&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;;SET FREQ, CTL, AND VOL TO BE SET<br />&nbsp; &nbsp;STA TUNFRM,X<br />&nbsp; &nbsp;STA TUNON,X&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;;AND TURN THE TUNE ON!<br />DTOUT<br />&nbsp; &nbsp;PLA&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;;UNSTACK REGISTERS<br />&nbsp; &nbsp;TAY<br />&nbsp; &nbsp;PLA<br />&nbsp; &nbsp;TAX<br />DTEXIT<br />&nbsp; &nbsp;RTS<br /><br />;&nbsp; &nbsp;THIS ROUTINE IS CALLED EVERY VBLANK TO TAKE CARE OF TUNES<br />;&nbsp; &nbsp;REGISTERS ARE NOT SAVED<br />TUNER<br />&nbsp; &nbsp;LDX #$03&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;;TWO TUNES CHANNELS, START WITH LAST<br />&nbsp; &nbsp;LDA TUNOFF<br />&nbsp; &nbsp;BEQ TUNLOOP<br />&nbsp; &nbsp;RTS<br />TUNLOOP<br />&nbsp; &nbsp;LDA TUNON,X<br />&nbsp; &nbsp;BNE TUNBODY<br />&nbsp; &nbsp;TXA<br />&nbsp; &nbsp;ASL A<br />&nbsp; &nbsp;ASL A<br />&nbsp; &nbsp;TAY<br />&nbsp; &nbsp;LDA #$00<br />&nbsp; &nbsp;STA AUDC0T,Y&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;;IF THE CHANNEL IS OFF - MAKE SURE VOLUME IS OFF<br />&nbsp; &nbsp;JMP TUNNEXT<br />TUNBODY<br />&nbsp; &nbsp;DEC TUNFRM,X&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;;SEE IF WE'RE DONE WITH THIS SOUND<br />&nbsp; &nbsp;BEQ TUNCTLVOL<br />&nbsp; &nbsp;JMP TUNNEXT&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;;NOPE, CONTINUE<br />TUNCTLVOL<br />&nbsp; &nbsp;LDA CTLVOLL,X&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;;GET THE CURRENT DUTY CYCLE / VOLUME BYTE<br />&nbsp; &nbsp;STA SOUNDZP<br />&nbsp; &nbsp;LDA CTLVOLH,X<br />&nbsp; &nbsp;STA SOUNDZP+1<br />&nbsp; &nbsp;LDY #$00<br />&nbsp; &nbsp;LDA &#91;SOUNDZP&#93;,Y<br />&nbsp; &nbsp;BEQ TUNEND&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;;$00 HERE MEANS END OF TUNE<br />&nbsp; &nbsp;ORA #$30&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;;FORCE BITS 4 AND 5 TO BE ON (WE CONTROL FRAMES AND VOLUME)<br />&nbsp; &nbsp;PHA<br />&nbsp; &nbsp;TXA&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;;MAKE 'Y' AN INDEX INTO THE SOUND REGISTERS<br />&nbsp; &nbsp;ASL A<br />&nbsp; &nbsp;ASL A<br />&nbsp; &nbsp;TAY<br />&nbsp; &nbsp;PLA<br />&nbsp; &nbsp;STA AUDC0T,Y&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;;STORE CONTROL<br />&nbsp; &nbsp;INC CTLVOLL,X<br />&nbsp; &nbsp;BNE TUNFRMFRQ<br />&nbsp; &nbsp;INC CTLVOLH,X<br />TUNFRMFRQ<br />&nbsp; &nbsp;LDY #$00<br />&nbsp; &nbsp;LDA LOWFRQL,X&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;;GET THE LOW PERIOD ADDRESS<br />&nbsp; &nbsp;STA SOUNDZP<br />&nbsp; &nbsp;LDA LOWFRQH,X<br />&nbsp; &nbsp;STA SOUNDZP+1<br />&nbsp; &nbsp;LDA &#91;SOUNDZP&#93;,Y&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;;NOW GET THE LOW BYTE OF THE PERIOD<br />&nbsp; &nbsp;STA SOUNDTEMP<br />&nbsp; &nbsp;LDA FRMFRQL,X&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;;GET THE DURATION / HIGH PERIOD ADDRESS<br />&nbsp; &nbsp;STA SOUNDZP<br />&nbsp; &nbsp;LDA FRMFRQH,X<br />&nbsp; &nbsp;STA SOUNDZP+1<br />&nbsp; &nbsp;LDA &#91;SOUNDZP&#93;,Y&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;;GET THE CURRENT DURATION / HIGH PERIOD BYTE<br />&nbsp; &nbsp;STA SOUNDTEMP+1<br />&nbsp; &nbsp;TXA&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;;MAKE 'Y' AN INDEX INTO THE SOUND REGISTERS<br />&nbsp; &nbsp;ASL A<br />&nbsp; &nbsp;ASL A<br />&nbsp; &nbsp;TAY<br />&nbsp; &nbsp;LDA SOUNDTEMP<br />&nbsp; &nbsp;STA AUDF0T,Y&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;;STORE FREQUENCY<br />&nbsp; &nbsp;LDA SOUNDTEMP+1<br />&nbsp; &nbsp;CPX #$03&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;;WE NEED TO WRITE A DUMMY VALUE TO $400F IF WE ARE ON THE NOISE CHANNEL<br />&nbsp; &nbsp;BNE TUNNOTANOISE<br />&nbsp; &nbsp;LDA #$01<br />TUNNOTANOISE<br />&nbsp; &nbsp;AND #$07&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;;GET LOW THREE BITS OF THE HIGH FREQUENCY BYTE<br />&nbsp; &nbsp;STA AUDF0T+1,Y<br /><br />&nbsp; &nbsp;CPX #$02&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;;IF TRIANGLE OR NOISE, SKIP THIS PART<br />&nbsp; &nbsp;BPL TUNSKIPTN<br />&nbsp; &nbsp;LDA #$08<br />&nbsp; &nbsp;STA AUDC0T+1,Y<br />TUNSKIPTN<br />&nbsp; &nbsp;LDA SOUNDTEMP+1&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;;NOW EXTRACT THE NUMBER OF FRAMES<br />&nbsp; &nbsp;LSR A<br />&nbsp; &nbsp;LSR A<br />&nbsp; &nbsp;LSR A<br />&nbsp; &nbsp;STA TUNFRM,X&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;;STORE DURATION (IN FRAMES)<br />&nbsp; &nbsp;INC TUNFRM,X&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;;WE NEED THIS BECAUSE THE DURATION GETS DECREMENTED FIRST<br />&nbsp; &nbsp;INC LOWFRQL,X&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;<br />&nbsp; &nbsp;BNE TUNNXT1<br />&nbsp; &nbsp;INC LOWFRQH,X<br />TUNNXT1<br />&nbsp; &nbsp;INC FRMFRQL,X<br />&nbsp; &nbsp;BNE TUNNEXT<br />&nbsp; &nbsp;INC FRMFRQH,X<br />TUNNEXT<br />&nbsp; &nbsp;DEX<br />&nbsp; &nbsp;BMI TUNEXIT<br />&nbsp; &nbsp;JMP TUNLOOP<br />TUNEXIT<br />&nbsp; &nbsp;RTS<br /><br />TUNEND<br />&nbsp; &nbsp;LDA FRMFRQL,X&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;;SEE IF WE SHOULD REPEAT<br />&nbsp; &nbsp;STA SOUNDZP<br />&nbsp; &nbsp;LDA FRMFRQH,X<br />&nbsp; &nbsp;STA SOUNDZP+1<br />&nbsp; &nbsp;LDY #$00<br />&nbsp; &nbsp;LDA &#91;SOUNDZP&#93;,Y<br />&nbsp; &nbsp;BMI TUNRESTART<br />&nbsp; &nbsp;JSR ENDTUNE<br />&nbsp; &nbsp;JMP TUNNEXT<br />TUNRESTART<br />&nbsp; &nbsp;LDA TUNINDEX,X&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;;GET TUNE NUMBER<br />&nbsp; &nbsp;TAY<br />&nbsp; &nbsp;LDA TUNLOWFRQL,Y&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;;GET LOW BYTE OF FREQUENCY LOW ADDRESS<br />&nbsp; &nbsp;STA LOWFRQL,X<br />&nbsp; &nbsp;LDA TUNLOWFRQH,Y&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;;GET LOW BYTE OF FREQUENCY HIGH ADDRESS<br />&nbsp; &nbsp;STA LOWFRQH,X<br />&nbsp; &nbsp;LDA TUNFRMFRQL,Y&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;;GET TUNE DURATION AND FREQUENCY LOW ADDRESS<br />&nbsp; &nbsp;STA FRMFRQL,X<br />&nbsp; &nbsp;LDA TUNFRMFRQH,Y&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;;GET TUNE DURATION AND FREQUENCY HIGH ADDRESS<br />&nbsp; &nbsp;STA FRMFRQH,X<br />&nbsp; &nbsp;LDA TUNCTLVOLL,Y&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;;GET TUNE CNTL AND VOLUME LOW ADDRESS<br />&nbsp; &nbsp;STA CTLVOLL,X<br />&nbsp; &nbsp;LDA TUNCTLVOLH,Y&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;;GET TUNE CNTL AND VOLUME HIGH ADDRESS<br />&nbsp; &nbsp;STA CTLVOLH,X<br />&nbsp; &nbsp;LDA #$01&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;;SET FREQ, CTL, AND VOL TO BE SET<br />&nbsp; &nbsp;STA TUNFRM,X<br />&nbsp; &nbsp;JMP TUNNEXT<br /><br />;&nbsp; &nbsp;TUNE TABLES, BASE ADDRESSES FOR TUNES AND THE OFFSETS WITHIN THE TUNES WHERE<br />;&nbsp; &nbsp;THE CTL AND VOL INFORMATION START<br />TUNLOWFRQL<br />&nbsp; &nbsp;.byte LOW(LFTUNE00),LOW(LFTUNE01),LOW(LFTUNE02),LOW(LFTUNE03)<br />&nbsp; &nbsp;.byte LOW(LFTUNE04),LOW(LFTUNE05),LOW(LFTUNE06),LOW(LFTUNE07)<br />&nbsp; &nbsp;.byte LOW(LFTUNE08),LOW(LFTUNE09);,LOW(LFTUNE0A),LOW(LFTUNE0B)<br />TUNLOWFRQH<br />&nbsp; &nbsp;.byte HIGH(LFTUNE00),HIGH(LFTUNE01),HIGH(LFTUNE02),HIGH(LFTUNE03)<br />&nbsp; &nbsp;.byte HIGH(LFTUNE04),HIGH(LFTUNE05),HIGH(LFTUNE06),HIGH(LFTUNE07)<br />&nbsp; &nbsp;.byte HIGH(LFTUNE08),HIGH(LFTUNE09);,HIGH(LFTUNE0A),HIGH(LFTUNE0B)<br /><br />TUNFRMFRQL<br />&nbsp; &nbsp;.byte LOW(FHTUNE00),LOW(FHTUNE01),LOW(FHTUNE02),LOW(FHTUNE03)<br />&nbsp; &nbsp;.byte LOW(FHTUNE04),LOW(FHTUNE05),LOW(FHTUNE06),LOW(FHTUNE07)<br />&nbsp; &nbsp;.byte LOW(FHTUNE08),LOW(FHTUNE09);,LOW(FHTUNE0A),LOW(FHTUNE0B)<br />TUNFRMFRQH<br />&nbsp; &nbsp;.byte HIGH(FHTUNE00),HIGH(FHTUNE01),HIGH(FHTUNE02),HIGH(FHTUNE03)<br />&nbsp; &nbsp;.byte HIGH(FHTUNE04),HIGH(FHTUNE05),HIGH(FHTUNE06),HIGH(FHTUNE07)<br />&nbsp; &nbsp;.byte HIGH(FHTUNE08),HIGH(FHTUNE09);,HIGH(FHTUNE0A),HIGH(FHTUNE0B)<br /><br />TUNCTLVOLL<br />&nbsp; &nbsp;.byte LOW(CVTUNE00),LOW(CVTUNE01),LOW(CVTUNE02),LOW(CVTUNE03)<br />&nbsp; &nbsp;.byte LOW(CVTUNE04),LOW(CVTUNE05),LOW(CVTUNE06),LOW(CVTUNE07)<br />&nbsp; &nbsp;.byte LOW(CVTUNE08),LOW(CVTUNE09);,LOW(CVTUNE0A),LOW(CVTUNE0B)<br />TUNCTLVOLH<br />&nbsp; &nbsp;.byte HIGH(CVTUNE00),HIGH(CVTUNE01),HIGH(CVTUNE02),HIGH(CVTUNE03)<br />&nbsp; &nbsp;.byte HIGH(CVTUNE04),HIGH(CVTUNE05),HIGH(CVTUNE06),HIGH(CVTUNE07)<br />&nbsp; &nbsp;.byte HIGH(CVTUNE08),HIGH(CVTUNE09);,HIGH(CVTUNE0A),HIGH(CVTUNE0B)<br /><br />;&nbsp; &nbsp;TUNE CHANNEL TABLE - DEFINES WHICH CHANNEL THE TUNE BELONGS IN, INDEXED BY TUNE NUMBER<br />TUNCHANNL<br />&nbsp; &nbsp;.byte $00,$01,$03,$03,$00,$01,$01,$00<br />&nbsp; &nbsp;.byte $00,$00,$00,$00,$00,$00,$00,$00<br /><br />;&nbsp; &nbsp;TUNE PRIORITTY TABLE - DEFINES WHICH TUNES HAVE PRIORITY OVER OTHERS, INDEXED BY TUNE NUMBER<br />TUNPRIRTY<br />&nbsp; &nbsp;.byte $00,$00,$04,$04,$0D,$0D,$08,$04<br />&nbsp; &nbsp;.byte $04,$0F,$00,$00,$00,$00,$00,$00<br /><br />;&nbsp; &nbsp;DATA FOR TUNES<br /><br />;&nbsp; &nbsp;PRIORITY - FOUND IN TABLE ABOVE, INDEXED BY TUNE NUMBER<br />;&nbsp; &nbsp;CHANNEL - FOUND IN TABLE ABOVE, INDEXED BY TUNE NUMBER<br />;&nbsp; &nbsp;FREQUENCY LOW BYTE - LOW BYTE OF NOTE (LFTUNEXX)<br />;&nbsp; &nbsp;FRAME/FREQUENCY - BIT 76543XXX CONTROL THE NUMBER OF FRAMES, BIT XXXXX210 CONTAIN THE HIGH BYTE OF NOTE (FHTUNEXX)<br />;&nbsp; &nbsp;VOICE/VOLUME - BIT 76--XXXX CONTAIN THE VOICE CONTROL, BIT XX--3210 CONTAIN THE VOLUME (CVTUNEXX)<br />;&nbsp; &nbsp;$00 IN VOICE/VOLUME ENDS THE SOUND<br /><br />;&nbsp; &nbsp;TEMPOS<br />T01&nbsp; &nbsp;=&nbsp; &nbsp;$00<br />T02&nbsp; &nbsp;=&nbsp; &nbsp;$08<br />T03&nbsp; &nbsp;=&nbsp; &nbsp;$10<br />T04&nbsp; &nbsp;=&nbsp; &nbsp;$18<br />T05&nbsp; &nbsp;=&nbsp; &nbsp;$20<br />T06&nbsp; &nbsp;=&nbsp; &nbsp;$28<br />T07&nbsp; &nbsp;=&nbsp; &nbsp;$30<br />T08&nbsp; &nbsp;=&nbsp; &nbsp;$38<br /><br />LFTUNE02:&nbsp; &nbsp;; PLAYER SHOT<br />&nbsp; &nbsp;.byte $05,$04,$03,$02,$01,$00,$00,$00<br />&nbsp; &nbsp;.byte $00,$00,$00,$00,$00,$00,$00,$00<br />FHTUNE02:&nbsp; &nbsp;; PLAYER SHOT<br />&nbsp; &nbsp;.byte T01,T01,T02,T02,T03,T03,T04,T04<br />&nbsp; &nbsp;.byte T05,T05,T06,T06,T07,T07,$00,$00<br />CVTUNE02:<br />&nbsp; &nbsp;.byte $0D,$0C,$0B,$0A,$09,$08,$07,$06<br />&nbsp; &nbsp;.byte $05,$04,$03,$02,$01,$00,$00,$00<br /></div>

		
			<br clear="all" /><br />

			<table class="tablebg" width="100%" cellspacing="1">
			<tr>
				<td><b class="genmed">Attachments: </b></td>
			</tr>
			
				<tr>
					<td>
			<span class="genmed">
				<img src="./styles/subsilver2/imageset/icon_topic_attach.gif" width="14" height="18" alt="" title="" /> 
				<a href="./download/file.php?id=6410">RobotShot.mp3</a> [17.99 KiB]
			</span><br />
			<span class="gensmall">Downloaded 78 times</span>
		

		<br />
	</td>
				</tr>
			
				<tr>
					<td>
			<span class="genmed">
				<img src="./styles/subsilver2/imageset/icon_topic_attach.gif" width="14" height="18" alt="" title="" /> 
				<a href="./download/file.php?id=6409">RobotExplosion.mp3</a> [15.54 KiB]
			</span><br />
			<span class="gensmall">Downloaded 70 times</span>
		

		<br />
	</td>
				</tr>
			
				<tr>
					<td>
			<span class="genmed">
				<img src="./styles/subsilver2/imageset/icon_topic_attach.gif" width="14" height="18" alt="" title="" /> 
				<a href="./download/file.php?id=6408">PlayerShot.mp3</a> [29.01 KiB]
			</span><br />
			<span class="gensmall">Downloaded 73 times</span>
		

		<br />
	</td>
				</tr>
			
			</table>
		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>PacManPlus</b> [ Thu Aug 04, 2016 3:17 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Does this exist? (Atari 2600 TIA -&gt; NES 2A03 Note conv.)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Ok, I think I know what was going on...<br /><br />If you look at the FamiTracker data, <br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">PATTERN 00<br />ROW 00 : ... .. . ... : ... .. . ... : ... .. . ... : 5-# 00 D F01 : ... .. . ...<br />ROW 01 : ... .. . ... : ... .. . ... : ... .. . ... : 4-# 00 C ... : ... .. . ...<br />ROW 02 : ... .. . ... : ... .. . ... : ... .. . ... : 3-# 00 B F02 : ... .. . ...<br />ROW 03 : ... .. . ... : ... .. . ... : ... .. . ... : 2-# 00 A ... : ... .. . ...<br />ROW 04 : ... .. . ... : ... .. . ... : ... .. . ... : 1-# 00 9 F03 : ... .. . ...<br />ROW 05 : ... .. . ... : ... .. . ... : ... .. . ... : 0-# 00 8 ... : ... .. . ...<br />ROW 06 : ... .. . ... : ... .. . ... : ... .. . ... : ... .. 7 F04 : ... .. . ...<br />ROW 07 : ... .. . ... : ... .. . ... : ... .. . ... : ... .. 6 ... : ... .. . ...<br />ROW 08 : ... .. . ... : ... .. . ... : ... .. . ... : ... .. 5 F05 : ... .. . ...<br />ROW 09 : ... .. . ... : ... .. . ... : ... .. . ... : ... .. 4 ... : ... .. . ...<br />ROW 0A : ... .. . ... : ... .. . ... : ... .. . ... : ... .. 3 F06 : ... .. . ...<br />ROW 0B : ... .. . ... : ... .. . ... : ... .. . ... : ... .. 2 ... : ... .. . ...<br />ROW 0C : ... .. . ... : ... .. . ... : ... .. . ... : ... .. 1 F07 : ... .. . ...<br />ROW 0D : ... .. . ... : ... .. . ... : ... .. . ... : ... .. 0 ... : ... .. . ...<br />ROW 0E : ... .. . ... : ... .. . ... : ... .. . ... : ... .. . ... : ... .. . ...<br />ROW 0F : ... .. . ... : ... .. . ... : ... .. . ... : ... .. . ... : ... .. . ...<br /></div><br /><br />...the '5, 4, 3, 2, 1' down the left-hand side is actually the inverse of what the data is, for some reason.  I had to use $8<strong>A</strong>,$8<strong>B</strong>,$8<strong>C</strong>,$8<strong>D</strong>,$8<strong>E</strong>, and $8<strong>F</strong>.  Also, I thought the $00 in the second column was the mode, and I guess it isn't, because I had to use Mode-1 to get that sound (hence the $8X in my listed values above)...<br />Strange.<br /><br />So, it looks like the third column is the volume, and the fourth is the number of frames per sound.<br />At least I have a starting point now.<br />Bob

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Thu Aug 04, 2016 4:24 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Does this exist? (Atari 2600 TIA -&gt; NES 2A03 Note conv.)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">PacManPlus wrote:</div><div class="quotecontent">...the '5, 4, 3, 2, 1' down the left-hand side is actually the inverse of what the data is, for some reason.  I had to use $8<strong>A</strong>,$8<strong>B</strong>,$8<strong>C</strong>,$8<strong>D</strong>,$8<strong>E</strong>, and $8<strong>F</strong>.  Also, I thought the $00 in the second column was the mode, and I guess it isn't, because I had to use Mode-1 to get that sound (hence the $8X in my listed values above)...<br />Strange.</div><br />Yeah, this is actually not as strange as it sounds. In the APU noise channel, $0 means the lowest period (= highest frequency) and $F is the highest period (lowest frequency). It's reversed in FamiTracker, probably because for most people it would make most sense that &quot;bigger number&quot; should mean &quot;higher frequency&quot;.<br /><br />Simply EOR the value with $F and you're good to go.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>