<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=12&amp;t=6296" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2010-04-15T10:55:44-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=12&amp;t=6296</id>
<entry>
<author><name><![CDATA[mic_]]></name></author>
<updated>2010-04-15T10:55:44-07:00</updated>
<published>2010-04-15T10:55:44-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6296&amp;p=60051#p60051</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6296&amp;p=60051#p60051"/>
<title type="html"><![CDATA[snes-sdk code optimization]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6296&amp;p=60051#p60051"><![CDATA[
I've been using the <a href="http://code.google.com/p/snes-sdk/" class="postlink">snes-sdk</a> a lot lately, and it bugged me a bit that the assembly code generated by the C compiler is so inefficient. There's a Python script included with the snes-sdk that you can run on the generated assembly files to optimize them, but it doesn't go far enough IMO.<br /><br />So I decided to put together my own optimizer, based on bunch of optimizers I had written several years ago for other processors (like 68000 and Z80). It's just a simple pattern-matching optimizer that scans the code repeatedly, trying to find known patterns that it can replace with shorter ones, until no more improvement is made. It targets common constructs, such as IF-statements and FOR/WHILE-loops among other things, so it's still fairly general.<br /><br />The optimizer is meant to be placed after the Python script in the build chain. Something like this:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">..\bin\816-tcc.exe -Wall -I../include -o main.ps -c main.c<br /><br />..\bin\816-opt.py main.ps &gt; main.s<br /><br />optimore-816.exe main.s mainopt.s<br /><br />..\bin\wla-65816.exe -io mainopt.s main.obj<br /></div><br /><br />Currently there's a Windows version and a Linux version (both 32-bit), which both are included in the download. The source code is also included.<br /><br />Download link: <a href="http://jiggawatt.org/badc0de/optimore-816r2.zip" class="postlink">http://jiggawatt.org/badc0de/optimore-816r2.zip</a><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=1181">mic_</a> â€” Thu Apr 15, 2010 10:55 am</p><hr />
]]></content>
</entry>
</feed>