<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=3&amp;t=12132" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2014-12-25T18:48:07-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=3&amp;t=12132</id>
<entry>
<author><name><![CDATA[Boolean]]></name></author>
<updated>2014-12-25T18:48:07-07:00</updated>
<published>2014-12-25T18:48:07-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12132&amp;p=138043#p138043</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12132&amp;p=138043#p138043"/>
<title type="html"><![CDATA[Re: About Android NDK and GCC problem]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12132&amp;p=138043#p138043"><![CDATA[
<div class="quotetitle">rockcarry wrote:</div><div class="quotecontent"><br />How about your porting on android platform, does it work now.<br /></div><br /><br />Now, It can output video.<br /><br /><div class="quotetitle">Thread <span style="color: #80FF00">main</span> loop wrote:</div><div class="quotecontent"><br />Process Activity UI messages and insert menu requests to menu queue.(Java Code)<br /></div><br /><br /><div class="quotetitle">Thread <span style="color: #80FF00">Thread-FC87</span> loop wrote:</div><div class="quotecontent"><br />Emulation: A frame picture's pure emulation time is approximately <span style="color: #BF0000">20</span> milliseconds.(C/C++ Native Code)<br />Output: A frame picture's output(by SurfaceView) time is approximately <span style="color: #BF0000">4</span> milliseconds.(Java Code)<br />UI Response: Remove a menu request from menu queue(Java Code) and execute its real function.(C/C++ Native Code)<br /></div><br /><br />I consider to create a thread to process video output.<br />Audio output and User input are not implemented by me.<br /><br />I have a question about User input.<br />For Win32, When a game write 1 then 0 to $4016, I must call GetKeyState(Win32 API) to acquire User input info.<br />But for Android, I don't know whether User touch screen or not via C/C++ Native Code.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6322">Boolean</a> — Thu Dec 25, 2014 6:48 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[rockcarry]]></name></author>
<updated>2014-12-23T20:29:06-07:00</updated>
<published>2014-12-23T20:29:06-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12132&amp;p=137988#p137988</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12132&amp;p=137988#p137988"/>
<title type="html"><![CDATA[Re: About Android NDK and GCC problem]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12132&amp;p=137988#p137988"><![CDATA[
How about your porting on android platform, does it work now.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6728">rockcarry</a> — Tue Dec 23, 2014 8:29 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Boolean]]></name></author>
<updated>2014-12-23T19:29:30-07:00</updated>
<published>2014-12-23T19:29:30-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12132&amp;p=137984#p137984</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12132&amp;p=137984#p137984"/>
<title type="html"><![CDATA[Re: About Android NDK and GCC problem]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12132&amp;p=137984#p137984"><![CDATA[
When you two talk about CHAR_BIT macro, I realize I must search some related info.<br /><br />After some adjustments,<br /><br />1. I use &lt;stddef.h&gt; to typedef some types.<br />typedef uint8_t byte;<br />typedef int8_t int8; // relative addressing mode uses it<br />typedef int64_t int64;<br /><br />2. I use &lt;limits.h&gt; to validate normal int type must be great or equal 32 bits.<br /><br />What types I mainly used in my project are byte, int8, int, int64 and some custom types(i.e. struct, class, enum).<br />I think it should be OK.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6322">Boolean</a> — Tue Dec 23, 2014 7:29 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Joe]]></name></author>
<updated>2014-12-17T14:12:39-07:00</updated>
<published>2014-12-17T14:12:39-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12132&amp;p=137696#p137696</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12132&amp;p=137696#p137696"/>
<title type="html"><![CDATA[Re: About Android NDK and GCC problem]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12132&amp;p=137696#p137696"><![CDATA[
If CHAR_BIT is greater than 8, the conversion will not change the value, and the result will again be 0xC100.<br /><br />If CHAR_BIT is equal to 8, the result of the conversion is still not guaranteed to be -1 as expected:<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />When a value with integer type is converted to another integer type other than <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">_Bool</tt>, if [...] the new type is signed and the value cannot be represented in it[,] either the result is implementation-defined or an implementation-defined signal is raised.<br /></div>The vast majority of C compilers define CHAR_BIT as 8, and define unsigned to signed conversions as a simple reinterpretation of the bit pattern as a two's complement signed number. However, neither of these properties are guaranteed by the C standard.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5948">Joe</a> — Wed Dec 17, 2014 2:12 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2014-12-17T11:14:50-07:00</updated>
<published>2014-12-17T11:14:50-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12132&amp;p=137688#p137688</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12132&amp;p=137688#p137688"/>
<title type="html"><![CDATA[Re: About Android NDK and GCC problem]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12132&amp;p=137688#p137688"><![CDATA[
<div class="quotetitle">Joe wrote:</div><div class="quotecontent"><br />The conversion from unsigned char to signed char is still implementation-defined behavior.<br /></div><br />Based on differences in <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">CHAR_BIT</tt> or on something else?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Wed Dec 17, 2014 11:14 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Joe]]></name></author>
<updated>2014-12-17T10:36:32-07:00</updated>
<published>2014-12-17T10:36:32-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12132&amp;p=137685#p137685</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12132&amp;p=137685#p137685"/>
<title type="html"><![CDATA[Re: About Android NDK and GCC problem]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12132&amp;p=137685#p137685"><![CDATA[
<div class="quotetitle">Boolean wrote:</div><div class="quotecontent"><br />Instead of <span style="color: #FF0000">Result = 0xC001 + (char) c;</span>, I'll use <span style="color: #40FF00">Result = 0xC001 + (signed char) c;</span>.<br /></div><br />The conversion from unsigned char to signed char is still implementation-defined behavior. This will probably be fine on all of your target platforms, but be aware there are platforms where this will not do what you expect.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5948">Joe</a> — Wed Dec 17, 2014 10:36 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Boolean]]></name></author>
<updated>2014-12-16T18:54:46-07:00</updated>
<published>2014-12-16T18:54:46-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12132&amp;p=137654#p137654</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12132&amp;p=137654#p137654"/>
<title type="html"><![CDATA[Re: About Android NDK and GCC problem]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12132&amp;p=137654#p137654"><![CDATA[
<div class="quotetitle">lidnariq wrote:</div><div class="quotecontent"><br />To get the wrapping you want, I think you'll have to do this explicitly (e.g. (0xC001 &amp;~0xFF) | ((0xC001 + c)&amp;0xFF)<br /></div>It is OK.<br /><div class="quotetitle">thefox wrote:</div><div class="quotecontent"><br />Android NDK defaults char to unsigned, so both are correct.<br /></div><div class="quotetitle">Sik wrote:</div><div class="quotecontent"><br />...<br /></div><div class="quotetitle">Joe wrote:</div><div class="quotecontent"><br />...<br /></div>You three are right.<br />char equals<span style="color: #FF0000"> unsigned char</span>(arm-linux-gcc)<br />char equals signed char(gcc)<br />char equals signed char(vc)<br /><br />Thank you all. I find an evidence.<br /><br /><div class="quotetitle">n3337.pdf (Working Draft, Standard for Programming Language C++) Page 71 wrote:</div><div class="quotecontent"><br />In any particular implementation, a plain char object can take on<br />either the same values as a signed char or an unsigned char;which<br />one is implementation-defined<br /></div><br /><br />So when you use char type, you'd better add signed/unsigned keyword before char.<br />Instead of <span style="color: #FF0000">Result = 0xC001 + (char) c;</span>, I'll use <span style="color: #40FF00">Result = 0xC001 + (signed char) c;</span>.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6322">Boolean</a> — Tue Dec 16, 2014 6:54 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Joe]]></name></author>
<updated>2014-12-14T06:23:27-07:00</updated>
<published>2014-12-14T06:23:27-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12132&amp;p=137580#p137580</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12132&amp;p=137580#p137580"/>
<title type="html"><![CDATA[Re: About Android NDK and GCC problem]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12132&amp;p=137580#p137580"><![CDATA[
<div class="codetitle"><b>Code:</b></div><div class="codecontent">   Result = 0xC001 + (char) c;</div>If char is a signed type, this conversion is implementation defined behavior. Different compilers are free to produce different results, but within the same compiler the result will be consistent.<br /><br />If char is an unsigned type, the conversion does nothing and the result is 0xC100.<br /><br />Both compilers are correct.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5948">Joe</a> — Sun Dec 14, 2014 6:23 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Sik]]></name></author>
<updated>2014-12-14T03:59:21-07:00</updated>
<published>2014-12-14T03:59:21-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12132&amp;p=137579#p137579</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12132&amp;p=137579#p137579"/>
<title type="html"><![CDATA[Re: About Android NDK and GCC problem]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12132&amp;p=137579#p137579"><![CDATA[
Also the reason why char isn't the same type as either its signed or unsigned counterpart, the type of char is completely dependent on the implementation. This doesn't happen with any of the other basic types. Surprised that there's a modern platform that makes char unsigned by default, though.<br /><br />There's also the fact that a sign conversion that results in overflow (i.e. the value wouldn't fit in a signed integer of that size) is undefined, so if the compiler wanted it could skip the conversion, or skip the calculation, or make the program crash, or do whatever it wants, really.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4526">Sik</a> — Sun Dec 14, 2014 3:59 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[thefox]]></name></author>
<updated>2014-12-14T02:57:37-07:00</updated>
<published>2014-12-14T02:57:37-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12132&amp;p=137577#p137577</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12132&amp;p=137577#p137577"/>
<title type="html"><![CDATA[Re: About Android NDK and GCC problem]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12132&amp;p=137577#p137577"><![CDATA[
Android NDK defaults char to unsigned, so both are correct.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=80">thefox</a> — Sun Dec 14, 2014 2:57 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[lidnariq]]></name></author>
<updated>2014-12-13T22:08:56-07:00</updated>
<published>2014-12-13T22:08:56-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12132&amp;p=137572#p137572</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12132&amp;p=137572#p137572"/>
<title type="html"><![CDATA[Re: About Android NDK and GCC problem]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12132&amp;p=137572#p137572"><![CDATA[
<div class="quotetitle">Boolean wrote:</div><div class="quotecontent"><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">   unsigned char c = 0xFF;<br /><br />   Result = 0xC001 + (char) c;<br /></div><br /></div>MinGW's GCC is actually the wrong one here.<br /><br />C's type promotions say that addition always promotes smaller types to (at least) <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">int</tt>, so your cast here is ignored.<br /><br />To get the wrapping you want, I think you'll have to do this explicitly (e.g. (0xC001 &amp;~0xFF) | ((0xC001 + c)&amp;0xFF)<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3512">lidnariq</a> — Sat Dec 13, 2014 10:08 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Boolean]]></name></author>
<updated>2014-12-13T21:59:08-07:00</updated>
<published>2014-12-13T21:59:08-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12132&amp;p=137571#p137571</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12132&amp;p=137571#p137571"/>
<title type="html"><![CDATA[About Android NDK and GCC problem]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12132&amp;p=137571#p137571"><![CDATA[
Hello everyone.<br />I am porting my emulator to Android Platform.<br />At this point, I meet a strange thing.<br />See below.<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">// C/C++ code, modified from 6502 relative addressing mode of my emulator<br />   char Buf&#91;1025&#93;;<br />   int Result;<br />   unsigned char c = 0xFF;<br /><br />   Result = 0xC001 + (char) c;<br />   sprintf(Buf, &quot;c = %X, result = C001 + (char)c = %X\nCompiled by %d.%d.%d&quot;,<br />         c, Result, __GNUC__, __GNUC_MINOR__, __GNUC_PATCHLEVEL__);<br /><br />   cout&lt;&lt;Buf&lt;&lt;endl;<br /></div><br />MinGW outputs<br />--------------------------------------------------<br />c = FF, result = C001 + (char)c = C000<br />Compiled by 4.8.1<br />--------------------------------------------------<br /><br />Android outputs<br /><br />&lt;see attachment&gt;<br /><br />The result should be &quot;C000&quot;, but Android's output is error.<br />How to deal with it?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6322">Boolean</a> — Sat Dec 13, 2014 9:59 pm</p><hr />
]]></content>
</entry>
</feed>