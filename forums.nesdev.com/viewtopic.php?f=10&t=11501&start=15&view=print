<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Random questions (mostly APU)</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Random questions (mostly APU)</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=10&amp;t=11501">http://forums.nesdev.com/viewtopic.php?f=10&amp;t=11501</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>2</strong> of <strong>3</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Mon Aug 18, 2014 12:34 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Random questions (mostly APU)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The <a href="http://wiki.nesdev.com/w/index.php/APU_Length_Counter" class="postlink">length counter</a> loads a value from a built-in table. My recommendation is to disable the length counter and just use the volume to control on/off for the channel (except the triangle, which doesn't have volume). When it's disabled, though, you still need to enable the channel by writing to $4003/4007/400B/400F to load a non-zero value into the length counter. There's really nothing that can be done with the length counter that can't be done with software control of the volume, so it's probably only worth using for an extremely tiny music engine.<br /><br />The triangle's linear counter (different from the length counter) can be used to make very short blips, since it can operate at 240hz. Sunsoft used this for croaking noises, for example.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>za909</b> [ Mon Aug 18, 2014 1:09 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Random questions (mostly APU)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I never use the length counters for anything. My pulse channels are fed with volume/duty register writes every frame from a table accessed via a table of pointers (these are the instruments), so it's just a matter of always sending the correct bit to keep the length counter disabled. The triangle will not use it either (except that I should probably write 0000 1xxx to $400B  on every new note while using the linear counter so that it doesn't interfere) and since I use the envelope for the noise channel, I have nothing better to do than writing 0000 1000 to this length counter as well, so it doesn't cut anything. Sfx will be entirely done by software, so that won't be much of a problem either.<br /><br />What I couldn't figure out was that bit 7 of $4008 clear is not a toggle between the length/linear counter, but rather a switch for both, so while using the linear counter, the length counter can still mess the intended length up if it's in the range of the other. So really, what the linear counter essentially is, is an extension for the length counter, which allows 240Hz accuracy for the first 32 frames.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Mon Aug 18, 2014 1:58 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Random questions (mostly APU)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Yeah, the length counter and linear counter unfortunately have to both be on at the same time. It just means that you must select a long enough table entry for the length counter if you are using the linear counter.<br /><br />It's pretty dumb.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>za909</b> [ Fri Aug 22, 2014 1:08 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Random questions (mostly APU)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />ORA &amp; EOR vs. ADC &amp; SBC<br />So the situation is the following: Sometimes I need to set or clear certain bits in memory, but without affecting the rest of them. I figured this could be done by simply adding or subtracting in binary, but sometimes that bit is already set/clear, so a remainder is carried over, and destroys other bits, that's how I started using the two or-s instead (ora for setting new bits, eor for clearing)<br />But can I still use addition/subtraction if I'm 100% certain that the bit is in such a state before it hits the instruction, that it won't mess up anything?<br /><br />Example<br />Setting bit 4 in two ways:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">lda #%10000000<br />adc #%00010000</div><br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">lda #%10000000<br />ora #%00010000</div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Fri Aug 22, 2014 5:35 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Random questions (mostly APU)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Yes, but you need to make sure the carry flag is in a predictable state before the instruction.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Fri Aug 22, 2014 5:50 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Random questions (mostly APU)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">za909 wrote:</div><div class="quotecontent">ora for setting new bits, eor for clearing</div><br /><br />ORA sets bits, AND clears bits, EOR <em>flips</em> bits.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Fri Aug 22, 2014 6:23 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Random questions (mostly APU)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">za909 wrote:</div><div class="quotecontent">But can I still use addition/subtraction if I'm 100% certain that the bit is in such a state before it hits the instruction, that it won't mess up anything?</div><br />Can you give an example where using ADC/SBC to set/unset bits actually has benefits over AND and OR? If not, then don't use them, unless you want to intentionally obfuscate your code.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>za909</b> [ Fri Aug 22, 2014 7:01 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Random questions (mostly APU)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Ah ok, that makes sense. It's just simply the context that made it confusing for me, because the only thing that matters is that certain bits must be cleared by this code, it doesn't matter if I flip them or AND them with the right 2's complement, because when this fires off, both bits are 1 always. <br />But at least now I know why controller reading requires EOR a lot.<br /><br /><br />This is part of a three-way conditional jump, which decides which bits to clear in the &quot;susoff_flags&quot; variable. All 4 channels have a &quot;sustain level reached&quot;-bit and a &quot;note stop command was read, so process the key off part&quot;-bit, which need to be reset when a new note is read. Noise is handled entirely differently. The instructions in caps are what used to be EORs (with all bits flipped in their parameter) <br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">ClearPu1<br />; If X is 0<br />&nbsp; &nbsp;<br />&nbsp; &nbsp;AND #%01110111<br />&nbsp; &nbsp;jmp ClearPuCommon<br />&nbsp; &nbsp;<br />&nbsp; &nbsp;<br />&nbsp; &nbsp;<br />&nbsp;ClearPu2:<br />; If X is 2 or greater. If greater, advance to ClearTri<br /><br />&nbsp; &nbsp;bne ClearTri<br />&nbsp; &nbsp;AND #%10111011<br />&nbsp; &nbsp;<br />&nbsp;ClearPuCommon:<br />; Common parts of resetting pulse channels<br /><br />&nbsp; &nbsp;sta susoff_flags<br />&nbsp; &nbsp;lda #$00<br />&nbsp; &nbsp;sta p1_patchseq,x<br />&nbsp; &nbsp;sta p1_vibtimer,x<br />&nbsp; &nbsp;sta p1_vibphase,x<br />&nbsp; &nbsp;rts <br /><br />...</div><br /><br />I guess the JMP can be replaced with a conditional jump if I can find one that always succeeds.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Fri Aug 22, 2014 7:37 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Random questions (mostly APU)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />ClearPu2 starts with a BNE instruction. What sets the Z flag used by BNE before you jumped or branched to ClearPu2?<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">lda foo<br />ldx bar<br />beq ClearPu1 ; if X == 0<br />cpx #2<br />bcs ClearPu2 ; if X &gt;= 2<br />jmp XWasOne<br /><br />ClearPu1:<br />...<br />jmp ClearPuCommon<br /><br />ClearPu2:<br />bne ClearTri ; when you reach this point, the Z flag is still the result of cpx #2<br />...</div><br /><br />There's no pressing need to replace the jmp with a branch. It's not faster than a jmp, just saves a byte, and might even be slower if the branch crosses a page. Unless you're really out of space, I'd recommend against it, as it will make that area of code harder to edit in the future (as you need to review the branch and make sure the condition is still set).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>za909</b> [ Fri Aug 22, 2014 8:20 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Random questions (mostly APU)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />This<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">lda susoff_flags<br />&nbsp; &nbsp;cpx #$02<br />&nbsp; &nbsp;bcs ClearPu2</div><br /><br />This decides which channel bits have to be cleared.<br />X serves as an index, depending on which channel's turn it is <br />00 means Pulse 1, 02 means Pulse 2, 04 = Tri, 06 = Noise<br /><br />I don't know why I included the lda, but that's where I load, and then select a value to AND it with.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Movax12</b> [ Fri Aug 22, 2014 10:44 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Random questions (mostly APU)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />It looks like you are thinking of the branch instructions as &quot;if &lt;condition&gt;	goto label&quot;, which is okay, but it can sometimes work out better for code structure to invert the test and branch over the code that you want to execute.<br /><br />As a simple example if you wanted to do something if A &gt;30h<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">cmp #$30<br />beq skip<br />bcc skip<br />; do stuff here when A is greater than $30<br />skip:<br /></div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>za909</b> [ Sun Aug 24, 2014 4:34 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Random questions (mostly APU)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />So it's come to this yet again. So many really little things I just need to ask, but thank you all of you for the help up until now, you're aiding me to set sail and explore the amazing waters of asm and it's a wonderful experience (and who knows if I get experienced who's to stop me from moving on to other languages?)<br />My lack of knowledge this time somewhat is asm6 specific.<br /><br />Are constant declarations local between different assembly sources, and can I use declared constants in byte definitions like this?<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">; Data definitions<br /><br />OFF = #$00<br />A-0 = #$01<br />A#0 = #$02<br />B-0 = #$03<br />C-1 = #$04<br />...<br /><br />.db C-1,A-0,C-1,A-0,OFF...</div><br /><br />Is there any way to make a jump table or a &quot;read table&quot; more versatile? To be precise, is there any way to put a variable in the place of p2sfxvolTBL? In this code for example, I want to read the Y-th byte from one of many .db lines, and the absolute addresses of all those lines are stored in a table, but I need to specify which table, and that makes my code impossible to reuse like this.<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">lda sfx_p2,x<br />&nbsp; &nbsp;asl a<br />&nbsp; &nbsp;tay<br />&nbsp; &nbsp;lda p2sfxvolTBL,y<br />&nbsp; &nbsp;sta temp_E<br />&nbsp; &nbsp;lda p2sfxvolTBL+1,y<br />&nbsp; &nbsp;sta temp_F<br />&nbsp; &nbsp;ldy sfx_p2seq<br />&nbsp; &nbsp;lda (temp_E),y<br />&nbsp; &nbsp;sta sfx_p2vol,x</div><br /><br />Again, thank you for all your troubles, it'll take some time until I can give something back, and even longer to help back, but I'm willing to spend as much time and energy as I need to.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Movax12</b> [ Sun Aug 24, 2014 4:45 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Random questions (mostly APU)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">za909 wrote:</div><div class="quotecontent"> can I use declared constants in byte definitions like this?</div><br /><br />Sure, but you aren't going to be able to use some of those characters in your symbol names. This should work though:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">; Data definitions<br /><br />OFF = $00<br />A0 = $01<br />A_0 = $02<br />B_0 = $03<br />C_1 = $04<br />; ...<br /><br />.db C_1,A_0,C_1,A_0,OFF ; ...</div><br /><br />Using a subtraction symbol in your .db statement is going to result in a subtraction and you aren't going to be able to place it in a name to begin with. Plus you only want a number sign (hash mark) when specifying that an instruction is to be immediate mode. ( <!-- m --><a class="postlink" href="http://www.obelisk.demon.co.uk/6502/addressing.html">http://www.obelisk.demon.co.uk/6502/addressing.html</a><!-- m --> )<br /><br /><div class="quotetitle">za909 wrote:</div><div class="quotecontent">.. is there any way to put a variable in the place of p2sfxvolTBL? </div><br /><br />There may be a better way to approach that problem, but for that specific question, you may want to use a macro:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">; ca65 style macro:<br />.macro loadPtr table<br />&nbsp; &nbsp;lda table,y<br />&nbsp; &nbsp;sta temp_E<br />&nbsp; &nbsp;lda table+1,y<br />&nbsp; &nbsp;sta temp_F<br />.endmacro<br /><br />; ...<br />&nbsp; &nbsp;<br />&nbsp; &nbsp;lda sfx_p2,x<br />&nbsp; &nbsp;asl a<br />&nbsp; &nbsp;tay<br />&nbsp; &nbsp;loadPtr p2sfxvolTBL<br />&nbsp; &nbsp;ldy sfx_p2seq<br />&nbsp; &nbsp;lda (temp_E),y<br />&nbsp; &nbsp;sta sfx_p2vol,x<br /></div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>za909</b> [ Tue Aug 26, 2014 1:58 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Random questions (mostly APU)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Alright, now comes the final stretch. I got it to work, sort of. The triangle and noise channels work perfectly after a little bit of debugging and adding safety measures, and the whole thing is stable so I just need to find out what's wrong with the pulse channel code. Which brings me to a question. The FCEUX debugger really works wonders, but are there any other tools with more features you would recommend? One thing I could use a lot is adding breakpoints for certain CPU registers (stop if Y is loaded with the specified value, etc.) and that doesn't seem to be very common.<br /><br />I'm also not sure about how well I'm doing with using the resources, especially the RAM. The code is 1381 bytes at the moment with instrument/song/sfx data stripped, and my budget was 2k at most. The engine takes 1100-1300 cycles to run, though I'd expect a couple hundred more once everything in it is utilised. As for RAM, I gave it 32 bytes from zero page and 32 on page 3, plus it uses 10 bytes for temporary storage, which is going to be shared with all the other programes anyway so I'm not counting that. Not sure if it's ideal to give more RAM to sound of not (but if I want to add transposing and arpeggio, I'll have to)<br /><br />Though it says Bank 7 ($C000-$FFFF is another source file), I'm using NROMs to test it for now, since I'm devoting a single 16k bank to sound so there's no bankswitching needed in the engine.

		
			<br clear="all" /><br />

			<table class="tablebg" width="100%" cellspacing="1">
			<tr>
				<td><b class="genmed">Attachments: </b></td>
			</tr>
			
				<tr>
					<td>
			<span class="genmed">
				<img src="./styles/subsilver2/imageset/icon_topic_attach.gif" width="14" height="18" alt="" title="" /> 
				<a href="./download/file.php?id=1912">Bank 7.nes</a> [40.02 KiB]
			</span><br />
			<span class="gensmall">Downloaded 8 times</span>
		

		<br />
	</td>
				</tr>
			
			</table>
		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Tue Aug 26, 2014 6:42 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Random questions (mostly APU)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">za909 wrote:</div><div class="quotecontent">10 bytes for temporary storage, which is going to be shared with all the other programes anyway so I'm not counting that.</div><br />You should only share temporary variables within the same thread. If music runs in your NMI but your gameplay doesn't, for example, those variables will get clobbered by the music routine if it ever interrupts gameplay (e.g. if one frame runs long). Either divide your temporaries up by thread, or alternatively use the stack for them (the stack is always thread-safe).

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>2</strong> of <strong>3</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>