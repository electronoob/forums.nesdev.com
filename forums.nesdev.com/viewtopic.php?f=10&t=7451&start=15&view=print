<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - 8x16 and whatever else unreg wants to know</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">8x16 and whatever else unreg wants to know</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=10&amp;t=7451">http://forums.nesdev.com/viewtopic.php?f=10&amp;t=7451</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>2</strong> of <strong>83</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Tue Feb 08, 2011 10:56 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Gilbert wrote:</div><div class="quotecontent">(but then of course the gameboy only has 4 different shades in total, even after combining the sprites with the background plane, and so this works)</div><br />Exactly. That works fine for the GB, but NES games using only 4 colors isn't very impressive, so it kinda kills the point of having more sprites (or any other improvement you can think of).<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">(I wonder why this is needed, as 160x144 occupies only 360 8x8 tiles and you can just change the tile page used for background midscreen when it uses up 256 of them, instead of rewriting the memory, and there're still enough space for stuff such as border graphics, etc.)</div><br />It's probably not rewriting anything, just bankswitching (i.e. it has enough memory for the whole GB screen, and is able to select which parts of it can be seen by the NES), which is not much different from switching pattern pages. Maybe they just didn't want the 6502 to do much.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">That isn't much useful for FC/NES game making though, as the WB is just the gameboy hardware in whole.</div>
<br />It proves we can build a mapper with its own PPU that feeds its output to the NES through the pattern/name/attribute tables. But I agree that it's not very useful, because of the 4 colors per tile limitation.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Gilbert</b> [ Wed Feb 09, 2011 12:29 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">It's probably not rewriting anything, just bankswitching (i.e. it has enough memory for the whole GB screen, and is able to select which parts of it can be seen by the NES), which is not much different from switching pattern pages. Maybe they just didn't want the 6502 to do much.<br /></div><br /><br />I don't know, but as Chris wrote on the page (unless I misunderstood the wordings):<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">You see, the Famicom doesn't have enough BG tiles in VRAM to display an entire 160x144 Gameboy screen, so the WideBoy hardware has to write to the same RAM with different graphics halfway down the screen.</div>
<br />and we know that his information are mostly trustable so that made me wonder about its implementation.
<br />I'm not familiar with the cart port and such (too lazy to look this up from the wiki), but can the pins access the PPU ports directly? If it can then the PCB may be able to change the pattern tables itself and ignore the 6502 in the console. If it can't then yes, it's more likely to be bank-switching, as I suspect it's hard to rewrite that large amount of data given limited bankwidth in the middle of a single frame.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Wed Feb 09, 2011 12:49 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Gilbert wrote:</div><div class="quotecontent">I don't know, but as Chris wrote on the page (unless I misunderstood the wordings):<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">You see, the Famicom doesn't have enough BG tiles in VRAM to display an entire 160x144 Gameboy screen, so the WideBoy hardware has to write to the same RAM with different graphics halfway down the screen.</div></div><br />I see... Well, this might very well be the case if the WideBoy can write to the RAM at the same time as the NES PPU is reading from it. It would just be a matter of overwriting tiles that were already rendered by the NES. Few people have WideBoys, so we have to trust Chris.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I'm not familiar with the cart port and such (too lazy to look this up from the wiki), but can the pins access the PPU ports directly? If it can then the PCB may be able to change the pattern tables itself and ignore the 6502 in the console.</div>
<br />What do you mean by "the pins"? What I know is that NES code can only access VRAM through the PPU ports because the CPU has no direct access to that bus, but a mapper can have access to both buses, so it surely can manipulate VRAM without having to go through the PPU.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Gilbert</b> [ Wed Feb 09, 2011 1:23 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">What do you mean by "the pins"? What I know is that NES code can only access VRAM through the PPU ports because the CPU has no direct access to that bus, but a mapper can have access to both buses, so it surely can manipulate VRAM without having to go through the PPU.</div>
<br />I meant the pins on the <a href="http://wiki.nesdev.com/w/index.php/Cartridge_connector" class="postlink">cartridge port</a>, but yeah, I now see that you cannot access directly the PPU registers (in the case of switching pattern tables, the PPU port pointed to at $2000) by sending signals (whatever) via the connector pins, so we will need the 6502 to write to the register for this and so manipulating CHR-RAM contents or mapper bankswitching seems to be the simpler solution.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>unregistered</b> [ Fri Feb 18, 2011 9:57 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent"><div class="quotetitle">unregistered wrote:</div><div class="quotecontent">What are the limits of the  meta-sprite system?</div><br />That depends on the game. There is no standard for that, and each game  has its own implementation of a meta-sprite system designed according  to its specs.<br /><br />For example, some systems might require that all sprites are arranged  in a grid and use the same palette, so that the meta-sprite  definitions will use less ROM space (no need to store the coordinates  and attributes of each sprite). In my game I have a very versatile  system, where each sprite's position is relative to the object's  coordinates and has its own attributes. As a result, the definitions  are larger.</div>Wonderful to think about, thanks! <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /><br /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent"><div class="quotetitle">unregistered wrote:</div><div class="quotecontent">I remember reading about how  Punchout!! required special hardware to draw/animate the humungus  enemies.</div><br />I'm not aware of that. The mapper used in that game doesn't have any  features that would increase the sprite capacity of the system. What  you can do sometimes is draw game objects using background tiles, if  the background is flat enough. The ring is just a solid color, so it's  possible that one of the fighters is actually drawn with background  tiles rather than sprites, but I didn't check.</div> I can't find  where I read that.  <img src="./images/smilies/icon_sad.gif" alt=":(" title="Sad" />  Are the background tiles able to be collision detected?<br /><br /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent"><div class="quotetitle">unregistered wrote:</div><div class="quotecontent">Like <span style="color: cyan">what is the  largest meta-sprite we could use without improving cart hardware? </span>  (Question is from my artist!)</div><br />You are the programmer, so you're the one that should have the  answer!</div> <img src="./images/smilies/icon_redface.gif" alt=":oops:" title="Embarassed" /> : )<br /><br /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent"><div class="quotetitle">unregistered wrote:</div><div class="quotecontent"><span style="color: violet">Also... about  scrolling; what are possible width and height/depth for scrolling...  guess she is wondering how much of a level can we do?</span></div><br />Again, this is up to the programmer. Levels can be as large as you  want, it all comes down to the memory necessary to store the level  maps. Depending on the type of compression you use, your maps will  occupy more or less ROM space. If you implement a system where levels  are generated randomly, you could have an endless level.</div>Sweet!  Thank you for all (you are very good at teaching) of this information! <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /><br /><br /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent"><div class="quotetitle">unregistered wrote:</div><div class="quotecontent">Mario 3 has the type of scrolling she is  wanting. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /></div><br />You have to select the kind of compression that will work best with  the kind of levels you want to make, also taking into consideration  the decoding process (i.e. how you are going to read the map data, for  drawing and for collision with the objects).<br /><br />SMB3 has some limitations, like the height of the level, which is 2  NES screens tall (minus the status bar), and color glitches at the  right of the screen because of the way it uses the name tables  (horizontal mirroring). Status bars also affect the way you implement  the scrolling if you plan on scrolling vertically (which I assume you  do), so I need to know whether you want a status bar in your game and  whether your levels can be taller than 2 screens before I suggest the  optimal solution for your case.</div>
<br />Status bar would only be 8 pixels high and would have one or two text  stats, maybe it could be clear and at the top of the screen, like in  Mario (is that a status bar?).  We would like our levels to be 4 screens  tall. "It's our first game, we're just experimenting."  Thank you for your help! <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Fri Feb 18, 2011 10:44 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">unregistered wrote:</div><div class="quotecontent">Are the background tiles able to be collision detected?</div><br />Not by hardware... but then again, neither are the sprites. Unlike the Atari 2600 for example, the NES doesn't have any sort of hardware features for collision detection (the sprite 0 hit is not meant for testing object collisions, it's meant for detecting the position of the beam for raster effects). All collisions between objects, no matter if sprite or background, are done in software, through comparisons of their coordinates in the game world.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Status bar would only be 8 pixels high</div><br />Remember that some of the image is cropped by the television, so you shouldn't have important information too close to the screen edges. So even if your information only needs 1 row of tiles to be displayed, it should be 1 or 2 rows away from the edge of the picture.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">and would have one or two text  stats, maybe it could be clear and at the top of the screen, like in  Mario (is that a status bar?).</div><br />Yes, it's a status bar. It's not clear though, it just appears to be that way because it uses the same color as the sky for its background. There never is any background going behind it, because the status bar itself is drawn with background tiles, and the NES has only 1 background layer.<br /><br />If you have little information to display, you could use sprites to display the status, like in Mega Man or Sonic The Hedgehog (not NES, I know, but it's a good example). It's simpler that way, because you don't have to worry about splitting the background, something that can be particularly hard if you are scrolling vertically. The disadvantage of using sprites is that since you can only show 8 of them side by side, you can't have a lot of information laid out horizontally (hence why Mega Man's energy bar is vertical).<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">We would like our levels to be 4 screens  tall. "It's our first game, we're just experimenting."  Thank you for your help! <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /></div>
<br />Then SMB3's solution is not very good for you. You can use either vertical or horizontal mirroring (it depends on whether you prefer to have scrolling artifacts at the top and bottom or left and right of the screen - notice how SMB3 has some color issues at the right side because it uses horizontal mirroring) if you decide to display the status with sprites, and single-screen mirroring (one name table for the gameplay and the other for the status bar) if you stick to a background status bar.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Fri Feb 18, 2011 12:18 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent"><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Status bar would only be 8 pixels high</div><br />Remember that some of the image is cropped by the television, so you shouldn't have important information too close to the screen edges. So even if your information only needs 1 row of tiles to be displayed, it should be 1 or 2 rows away from the edge of the picture.</div><br /><img src="http://pics.pineight.com/nes/smb1_smaller_hud.png" alt="Image" /><br />Top: SMB1. Bottom: SMB1 with its status bar collapsed to 8 pixels tall (not unlike the GBC port) and 24 pixels from the top of the picture.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">If you have little information to display, you could use sprites to display the status, like in Mega Man or Sonic The Hedgehog (not NES, I know, but it's a good example).</div><br />Other examples include Super Mario Bros. 2, Contra, Metroid, Ikari Warriors, and this shop of SMB1 with a heavily Ikari-inspired status bar:<br /><img src="http://pics.pineight.com/nes/smb1_ikari_hud.png" alt="Image" /><br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Then SMB3's solution is not very good for you. You can use either vertical or horizontal mirroring (it depends on whether you prefer to have scrolling artifacts at the top and bottom or left and right of the screen - notice how SMB3 has some color issues at the right side because it uses horizontal mirroring) if you decide to display the status with sprites</div>
<br />I seem to remember that one of the Double Dragon games uses another solution: horizontal mirroring, and whenever the camera starts to move into the status bar, move the status bar to the other nametable. With a semi-unrolled loop, it should be possible to push up to 4 rows of status bar to VRAM plus the corresponding attributes during one NTSC vblank.
<br />
<br />
<br /><span style="font-size: 84%; line-height: normal">I won't go into Crystalis's solution because discrete mappers and current CPLD mappers lack the needed scanline counter, and dpcm_split is an even more advanced trick. Nor do I feel ready to go into the diagonal mirroring (CIRAM A10 = PA10 xor PA11) that MMC5 and T*SROM theoretically support. </span>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Fri Feb 18, 2011 12:38 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">I seem to remember that one of the Double Dragon games uses another solution: horizontal mirroring, and whenever the camera starts to move into the status bar, move the status bar to the other nametable. With a semi-unrolled loop, it should be possible to push up to 4 rows of status bar to VRAM plus the corresponding attributes during one NTSC vblank.</div>
<br />Yes, this is a valid solution that we don't talk about much (I didn't even know it was used in Double Dragon). The fact that you'd have to give up the regular PPU updates for a frame just to reposition the status bar makes this option less interesting IMO, but you could probably make a more dynamic system that progressively draws one status bar as the vertical scrolling changes (i.e. the closer the screen gets to one status bar the more of the other is drawn).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>unregistered</b> [ Sat Feb 26, 2011 11:08 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Thank you tokumaru and tepples! <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />   The scrolling is going to be a fun  challenge for me; but, i have not chosen an assembler yet.   From other threads i have learned that <span style="color: red">dasm</span> is rough to learn and that noone has used, from whayt i've read, <span style="color: orange">Ophis</span>.  Why dont yall use ophis?  It sounds really good... except that to reserve a variable you use <div class="codetitle"><b>Code:</b></div><div class="codecontent">.space variable 1</div>.  Thats a 5 character word and it must be used a lot!  <img src="./images/smilies/icon_sad.gif" alt=":(" title="Sad" />  Its two counters, one for the <div class="codetitle"><b>Code:</b></div><div class="codecontent">.data</div> sections and another for the <div class="codetitle"><b>Code:</b></div><div class="codecontent">.text</div> sections, sound really helpful and interesting; <span style="color: cyan">but, no-one uses Ophis; why?  Which assembler is best to use???</span>  I want to use the one that allows us to do the most.  ....................................<span style="color: violet">What  assembler did Nintendo use? Did they send the development studios that assembler?</span>  ............................<span style="color: white">What assembler to you use?  What do you like about it and what do you hate about it?</span>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>3gengames</b> [ Sat Feb 26, 2011 11:13 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Either go with NESASM for simplicity, but I'd go with something better like CA65 or whatever it's called. Seems alot nicer. I am going to dump NESASM for something that allows for + and - tags after I get done with this project.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dwedit</b> [ Sun Feb 27, 2011 12:05 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">unregistered wrote:</div><div class="quotecontent">Like <span style="color: cyan">what is the  largest meta-sprite we could use without improving cart hardware? </span></div>
<br />
<br />64x128.  That eats up all 64 sprite slots with each hardware sprite being 8x16 pixels in size.
<br />
<br />As for which assembler to use, I recommend ASM6 because it just works.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>unregistered</b> [ Sun Feb 27, 2011 12:09 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />^ Thank you 3gengames for answering! <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />  Ophis allows for + and - tags...    edit: and thank you Dwedit for mentioning ASM6... tokumaru like that one the best in 2009... will check it out, thanks! <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />
<br />
<br />It seems to me that the nes development community would be much easier to enter if we all used the same assembler...   <img src="./images/smilies/icon_confused.gif" alt=":?" title="Confused" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>3gengames</b> [ Sun Feb 27, 2011 12:14 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Yeah, but I like ease of use. NESASM is exactly that when you get it set up. It's just a standalone utility. But I am hurting for some other assemblers features. I will look into it late, but it also seems like ASM6 is popular and pretty good. I'm sure if you pick a big name other then NESASM3(.0.1), It will be better. But the way you set up the program files/roms might be different. I don't know if any other assemblers offer this, but NESASM also can include other files. I use this to keep all subroutines, engine(s), etc in seperate program files and combine them all when I need them in the main one with one line of code.
<br />
<br />
<br />If you want more help feel free to mail me, I'd be interested in learning a new assembler, too.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sun Feb 27, 2011 7:23 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">3gengames wrote:</div><div class="quotecontent">But the way you set up the program files/roms might be different. I don't know if any other assemblers offer this, but NESASM also can include other files.</div>
<br />Pretty much every assembler has the equivalent of C #include. But including one code file from another is considered bad practice in both C compilers and ca65. In these environments, the common practice is to #include a <a href="http://en.wikipedia.org/wiki/Header_file" class="postlink">header file</a> with definitions of constants and .global statements, compile each <a href="http://en.wikipedia.org/wiki/Translation_unit_%28programming%29" class="postlink">translation unit</a> (that is, source code file) separately to an object code file, and then <a href="http://en.wikipedia.org/wiki/Linker_%28computing%29" class="postlink">link</a> them all together at the end.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Memblers</b> [ Sun Feb 27, 2011 7:26 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">3gengames wrote:</div><div class="quotecontent">I don't know if any other assemblers offer this, but NESASM also can include other files.<br /></div>
<br />
<br />All of them do (I only remember DASM not having .incbin when I used it, but it had been added since).  With NESASM though you can't include any file larger than 8kB.  My sound data, for one thing tends to be bigger than that.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>2</strong> of <strong>83</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>