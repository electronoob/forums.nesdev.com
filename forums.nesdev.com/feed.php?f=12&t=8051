<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=12&amp;t=8051" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2014-04-06T15:52:38-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=12&amp;t=8051</id>
<entry>
<author><name><![CDATA[alekmaul]]></name></author>
<updated>2014-03-30T23:18:08-07:00</updated>
<published>2014-03-30T23:18:08-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8051&amp;p=127298#p127298</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8051&amp;p=127298#p127298"/>
<title type="html"><![CDATA[Re: SNES dev newbie questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8051&amp;p=127298#p127298"><![CDATA[
I did an update of gfx2snes to avoid 64x64 pix added for blank tile.<br />It is not yet commited on googlecode, sorry about that.<br />I will try to do this later this day.<br /><br />*DONE* Last version of source code available<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5277">alekmaul</a> — Sun Mar 30, 2014 11:18 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[juef]]></name></author>
<updated>2014-04-06T15:52:38-07:00</updated>
<published>2014-03-30T17:36:51-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8051&amp;p=127290#p127290</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8051&amp;p=127290#p127290"/>
<title type="html"><![CDATA[Re: SNES dev newbie questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8051&amp;p=127290#p127290"><![CDATA[
So I managed to complete a few tests / demos, but I have yet again come upon a problem I'm not sure I quite understand.<br /><br />This little project (<a href="https://dl.dropboxusercontent.com/u/19680817/snes/dev/2014-03-30_vram_test.7z" class="postlink">full code here</a>) only consists in displaying a picture. I used <a href="https://code.google.com/p/pvsneslib/source/browse/trunk/tools/gfx2snes/gfx2snes.c?r=25" class="postlink">gfx2snes</a> (a fork of pcx2snes I believe) on a 256px by 224px 8bpp PCX image, which resulted in tile data, a tilemap and palette. I chose to go with 16x16 tiles (because why not?) and stayed with 8bpp. The tile data was too big for one ROM bank so I put half of it in two different banks. Everything looks alright to me assembly-wise, but... I'll let screenshots from no$sns do the talking:<br /><br />Original image:<br /><img src="http://i.imgur.com/1SRkLhX.png" alt="Image" /><br /><br />Video output (same for higan accuracy):<br /><img src="http://i.imgur.com/MfN76R6.png" alt="Image" /><br /><br />BG1:<br /><img src="http://i.imgur.com/nFxZu8P.png" alt="Image" /><br /><br />Tile data:<br /><img src="http://i.imgur.com/ioOAmz8.png" alt="Image" /><br /><br />I did notice a few oddities when converting the image, however... gfx2snes (and presumably pcx2snes) inserted something like 64 null bytes at the beginning of the tile data...?! I stripped them and adjusted the code accordingly, without much change. Also, the tilemap it generates is quite huge: 2KB. I expected it to be (256*224) / (16*16) * 2 = 448 bytes. The Windows GUI version of eKid's pcx2snes did none of these, but the results were actually worse (which I guess isn't the tool's fault).<br /><br />Any help / hint / advice would be greatly appreciated. Thank you!<br /><br />[Edit] I'm still not sure why the generated tilemap is so big, nor why this doesn't work, but I got it working with pcx2snesWIN and 8x8 tiles rather than 16x16. I'll stick with that for now but I guess I know where to look should I decide to try 16x16 tiles again!<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4465">juef</a> — Sun Mar 30, 2014 5:36 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[juef]]></name></author>
<updated>2014-03-23T16:23:51-07:00</updated>
<published>2014-03-23T16:23:51-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8051&amp;p=127108#p127108</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8051&amp;p=127108#p127108"/>
<title type="html"><![CDATA[Re: SNES dev newbie questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8051&amp;p=127108#p127108"><![CDATA[
Indeed, <a href="http://www.drpaulcarter.com/pcasm/" class="postlink">the book</a> is mostly about old x86 CPUs. Thank you all for the help!<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4465">juef</a> — Sun Mar 23, 2014 4:23 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2014-03-23T16:10:15-07:00</updated>
<published>2014-03-23T16:10:15-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8051&amp;p=127107#p127107</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8051&amp;p=127107#p127107"/>
<title type="html"><![CDATA[Re: SNES dev newbie questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8051&amp;p=127107#p127107"><![CDATA[
A tutorial for another architecture might have described the ROL/ROR operations on non-65xx series CPUs, which tend to use the other kind of rotation that doesn't insert carry into the stream.<br /><br />6502 ROL/ROR is like 68000 ROXL/ROXR or x86 RCL/RCR.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Sun Mar 23, 2014 4:10 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[koitsu]]></name></author>
<updated>2014-03-23T15:59:06-07:00</updated>
<published>2014-03-23T15:59:06-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8051&amp;p=127106#p127106</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8051&amp;p=127106#p127106"/>
<title type="html"><![CDATA[Re: SNES dev newbie questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8051&amp;p=127106#p127106"><![CDATA[
<div class="quotetitle">juef wrote:</div><div class="quotecontent"><br />This makes perfect sense, thank you. The assembly tutorial I read didn't mention this, but then again it wasn't for 65816...<br /></div><br />In this case what's being described applies to 6502 and 65c02 as well.  There is nothing different about ROR/ROL on the 65816 compared to the 6502/65c02.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3">koitsu</a> — Sun Mar 23, 2014 3:59 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[juef]]></name></author>
<updated>2014-03-23T14:48:30-07:00</updated>
<published>2014-03-23T14:48:30-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8051&amp;p=127105#p127105</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8051&amp;p=127105#p127105"/>
<title type="html"><![CDATA[Re: SNES dev newbie questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8051&amp;p=127105#p127105"><![CDATA[
This makes perfect sense, thank you. The assembly tutorial I read didn't mention this, but then again it wasn't for 65816...<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4465">juef</a> — Sun Mar 23, 2014 2:48 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Jarhmander]]></name></author>
<updated>2014-03-23T14:00:35-07:00</updated>
<published>2014-03-23T14:00:35-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8051&amp;p=127104#p127104</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8051&amp;p=127104#p127104"/>
<title type="html"><![CDATA[Re: SNES dev newbie questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8051&amp;p=127104#p127104"><![CDATA[
The result is correct. Think of the rotate instructions as &quot;rotate operand and carry&quot;: if A is 8-bit, ROL/ROR rotate through 9 bits, A and carry. That means it requires 9 successive ROLs/RORs to get in A the original value, not 8. That's because the vacant bit gets the carry THEN the carry get the shifted-out bit. Example:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">   lda #2  ; assume A is 8 bits.<br />   clc     ; A = $02, C = 0<br />   ror a   ; A = $01, C = 0<br />   ror a   ; A = $00, C = 1<br />   ror a   ; A = $80, C = 0</div><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=336">Jarhmander</a> — Sun Mar 23, 2014 2:00 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[juef]]></name></author>
<updated>2014-03-23T13:13:08-07:00</updated>
<published>2014-03-23T13:13:08-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8051&amp;p=127103#p127103</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8051&amp;p=127103#p127103"/>
<title type="html"><![CDATA[Re: SNES dev newbie questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8051&amp;p=127103#p127103"><![CDATA[
Quick question about rotating bits in accumulator: in the following, I was expecting the 8-bit accumulator to become <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">$80</tt> after the final <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">ROR</tt>, but it seems like the set bit just disappeared. This is the bottom code of <a href="http://forums.nesdev.com/viewtopic.php?p=126773#p126773" class="postlink">this post</a>.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">$00/81EF AD 00 00    LDA $0000  &#91;$00:0000&#93;   A:0000 X:0000 Y:0000 P:envMXdiZc<br />$00/81F2 4A          LSR A                   A:0010 X:0000 Y:0000 P:envMXdizc<br />$00/81F3 4A          LSR A                   A:0008 X:0000 Y:0000 P:envMXdizc<br />$00/81F4 4A          LSR A                   A:0004 X:0000 Y:0000 P:envMXdizc<br />$00/81F5 6A          ROR A                   A:0002 X:0000 Y:0000 P:envMXdizc<br />$00/81F6 6A          ROR A                   A:0001 X:0000 Y:0000 P:envMXdizc<br />$00/81F7 2A          .....                   A:0000 X:0000 Y:0000 P:envMXdiZC</div><br />I understand that the carry flag becomes set, but I truly hoped for the bit to go around. What am I missing?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4465">juef</a> — Sun Mar 23, 2014 1:13 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[juef]]></name></author>
<updated>2014-03-19T16:27:49-07:00</updated>
<published>2014-03-19T16:27:49-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8051&amp;p=127008#p127008</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8051&amp;p=127008#p127008"/>
<title type="html"><![CDATA[Re: SNES dev newbie questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8051&amp;p=127008#p127008"><![CDATA[
Quoted from <a href="http://forums.nesdev.com/viewtopic.php?p=124549#p124549" class="postlink">this topic</a>:<br /><div class="quotetitle">byuu wrote:</div><div class="quotecontent"><br />It takes about 20 minutes to patch a game to use CD-audio: trace out writes to $214x, walk up the stack until you find it loading a track# and calling the &quot;play track&quot; function (every game I've looked at had one), and modify that routine to test if MSU1 is present. If so, play with MSU1. If not, call original function so the game still works just with the regular audio.<br /></div><br />I successfully managed to get SMW playing PCM audio tracks with MSU1, but that was with the help from <a href="http://www.smwcentral.net/?p=map&amp;type=rom" class="postlink">this document</a>. I did try to trace writes to $214x beforehand, but there sure were a lot of those. Typically, how does one find out where the &quot;play track&quot; function is located? Or more generally, how does one discriminate &quot;interesting&quot; writes to $214x versus the others which do something else?<br /><br />Other unrelated question: for another project, I used functions from <a href="http://wiki.superfamicom.org/snes/show/How+to+Write+to+DSP+Registers+Without+any+SPC-700+Code" class="postlink">this document</a> by blargg to make sure the SNES DSP isn't muted. Since this is the only single thing I am interested in doing with the DSP right now, I was wondering if I overlooked a faster way to do this? It's not too bad, but it seems to me it's still a lot just to make sure a bit isn't set.<br /><br />Thank you for reading!<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4465">juef</a> — Wed Mar 19, 2014 4:27 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[juef]]></name></author>
<updated>2014-03-13T20:23:21-07:00</updated>
<published>2014-03-13T20:23:21-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8051&amp;p=126780#p126780</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8051&amp;p=126780#p126780"/>
<title type="html"><![CDATA[Re: SNES dev newbie questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8051&amp;p=126780#p126780"><![CDATA[
Indeed! Thank you.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4465">juef</a> — Thu Mar 13, 2014 8:23 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[koitsu]]></name></author>
<updated>2014-03-13T20:20:15-07:00</updated>
<published>2014-03-13T20:20:15-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8051&amp;p=126779#p126779</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8051&amp;p=126779#p126779"/>
<title type="html"><![CDATA[Re: SNES dev newbie questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8051&amp;p=126779#p126779"><![CDATA[
I think you're missing <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">clc</tt> before your <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">adc</tt> statements.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3">koitsu</a> — Thu Mar 13, 2014 8:20 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[juef]]></name></author>
<updated>2014-03-13T18:29:31-07:00</updated>
<published>2014-03-13T18:29:31-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8051&amp;p=126773#p126773</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8051&amp;p=126773#p126773"/>
<title type="html"><![CDATA[Re: SNES dev newbie questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8051&amp;p=126773#p126773"><![CDATA[
Thanks to everyone, I'm finally feeling like I'm getting things done! <img src="http://forums.nesdev.com/images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" />  If anyone's curious, here's what I have so far:<ul><li><a href="https://dl.dropboxusercontent.com/u/19680817/snes/dev/2014-03-13%20-%20msu1_detect.7z" class="postlink">MSU1 detection</a>: screen turns green if MSU1 hardware is available, red otherwise. Includes the manifest and XML files to use with your favorite emulator or hardware MSU1 implementation.</li><li><a href="https://dl.dropboxusercontent.com/u/19680817/snes/dev/2014-03-13%20-%20seizure_trigger.7z" class="postlink">Seizure trigger</a>: WARNING, color changes every frame, epileptics beware!</li></ul><br />The color one, I made mostly to play around with instructions, WRAM, and other things I'm not experienced with. Basically, every color has its intensity increased by 1, 2 and 3 respectively (looping around), one color per frame. I would very much appreciate if someone could give my code a quick check to see if there are obvious no-no's or code that could be simplified (I know not everything's optimal, I could save a few jumps here and there, but I included them just for clarity):<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">lda #$80            ; Bit 7 of $4200 must be set to enable NMI...<br />sta $4200<br />sep #%00110000      ; Set the A, X/Y registers to 8-bit.<br /><br />lda #%00001111      ; Full brightness<br />sta $2100<br />wai<br /><br />; Define color addresses so I don't mess up<br />.define GREEN       $0000<br />.define RED         $0001<br />.define BLUE        $0002<br />.define NEXTCOLOR   $0003   ; 0 = GREEN, 1 = RED, 2 = BLUE<br /><br />; Set all colors to half intensity at first (because why not)<br />lda #%00010000<br />sta RED<br />sta BLUE<br />sta GREEN<br />   <br />Forever:<br /><br />   stz $2121         ; We'll want BG0 only<br /><br />   IncNextColor:      ; One color is updated per frame, find out which out for this iteration<br />      inc NEXTCOLOR<br />      lda NEXTCOLOR<br />      and #%00000011   ; This is a weird way I thought about to keep looping between 0 through 2<br />      sta NEXTCOLOR<br />      cmp #%00000011<br />      beq IncNextColor<br />   cmp #$00<br />   beq Update_Green<br />   cmp #$01<br />   beq Update_Red<br />   cmp #$02<br />   beq Update_Blue<br /><br />   ; The following blocks increment the colors by 1, 2 and 3 respectively<br />   Update_Green:      ; low: #%11100000, high: #%00000011<br />   lda GREEN<br />   adc #%00000001<br />   and #%00011111      ; so that it's never above 31<br />   sta GREEN<br />   jmp Update_Color<br />   <br />   Update_Red:         ; low: #%00011111, high: #%00000000<br />   lda RED<br />   adc #%00000010<br />   and #%00011111<br />   sta RED<br />   jmp Update_Color<br />   <br />   Update_Blue:      ; low: #%00000000, high: #%01111100<br />   lda BLUE<br />   adc #%00000011<br />   and #%00011111<br />   sta BLUE<br />   jmp Update_Color<br />   <br />   Update_Color:      ; let's &quot;build&quot; the full color bytes<br />      lda GREEN<br />      asl a<br />      asl a<br />      asl a<br />      asl a<br />      asl a<br />      adc RED<br />      sta $2122      ; low byte (#%GGGRRRRR)<br />      lda GREEN<br />      lsr a<br />      lsr a<br />      lsr a<br />      ror a<br />      ror a<br />      adc BLUE<br />      rol a<br />      rol a<br />      sta $2122      ; high byte (#%0BBBBBGG)<br />      wai<br /><br />jmp Forever</div><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4465">juef</a> — Thu Mar 13, 2014 6:29 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[byuu]]></name></author>
<updated>2014-03-09T22:08:38-07:00</updated>
<published>2014-03-09T22:08:38-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8051&amp;p=126607#p126607</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8051&amp;p=126607#p126607"/>
<title type="html"><![CDATA[Re: SNES dev newbie questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8051&amp;p=126607#p126607"><![CDATA[
&gt; Do otherwise unused DMA registers work as a readable A-bus address for this?<br /><br />No, $21xx, $40xx, $41xx, $42xx, $43xx don't work. You either get open bus or 0x00 (depending on register and model) when you specify them as the A-bus address.<br /><br />I don't even want to imagine how much &quot;fun&quot; you could have DMA'ing data directly to $420b (DMA enable)<br /><br />&gt; Okay, then that also means the ClearVRAM routine written by Neviksti is wrong as well.<br /><br />ClearVRAM should work fine. It's transferring from WRAM to VRAM.<br /><br />The problem is only with going from WRAM to WRAM.<br /><br />&gt; and since I don't know WLA and find its documentation a bit of a mess, I choose to opt out. :D<br /><br />Unfortunately we can't all agree to use the same assembler. Even when we make our own, we often want to improve it and remove past mistakes. All I can recommend for writing truly portable code is to stick to straight opcodes and labels:<br /><br />&quot;lda #$00&quot;, &quot;lda #$ffff&quot; (no .b, .w), &quot;label:&quot; (no -/+, no .label, etc.)<br /><br />Skip the macros, the directives, the defines, etc.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=375">byuu</a> — Sun Mar 09, 2014 10:08 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[koitsu]]></name></author>
<updated>2014-03-09T21:30:58-07:00</updated>
<published>2014-03-09T21:30:58-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8051&amp;p=126606#p126606</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8051&amp;p=126606#p126606"/>
<title type="html"><![CDATA[Re: SNES dev newbie questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8051&amp;p=126606#p126606"><![CDATA[
Okay, then that also means the ClearVRAM routine written by Neviksti is wrong as well.  *shakes head* So much broken code...<br /><br />I'm going to generally bow out of assisting at this point.  The reason has to do with the fact that all of this quickly becomes assembler-focused (meaning the code written has more and more of a dependency and requirement relating to the assembler being used and its related syntax requirements), and since I don't know WLA and find its documentation a bit of a mess, I choose to opt out.  :D<br /><br />The information being provided here is great/fantastic, however.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3">koitsu</a> — Sun Mar 09, 2014 9:30 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2014-03-09T20:18:02-07:00</updated>
<published>2014-03-09T20:18:02-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8051&amp;p=126605#p126605</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8051&amp;p=126605#p126605"/>
<title type="html"><![CDATA[Re: SNES dev newbie questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8051&amp;p=126605#p126605"><![CDATA[
Do otherwise unused DMA registers work as a readable A-bus address for this?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Sun Mar 09, 2014 8:18 pm</p><hr />
]]></content>
</entry>
</feed>