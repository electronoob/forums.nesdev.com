<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Controlling program ROM with a RPi or Arduino</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Controlling program ROM with a RPi or Arduino</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=9&amp;t=17448">http://forums.nesdev.com/viewtopic.php?f=9&amp;t=17448</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Milesy303</b> [ Thu Jun 14, 2018 2:59 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Controlling program ROM with a RPi or Arduino</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />So I have desoldered the program ROM from a UNROM pcb and put jumper headers in its place. <br /><br />All I want to do in this first experiment is see if I can load the data from the controller rather than EPROM. File I/O is likely slow so I'll load the data into a byte array. <br /><br />Firstly is there likely to be any issues here with actually doing this? Clock issues? <br /><br />Secondly what's the best way to get just the program data from the UNROM NES file?<br /><br />Many thanks <br /><br />Chris

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Thu Jun 14, 2018 3:10 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Controlling program ROM with a RPi or Arduino</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The device that you are attempting to make is called a &quot;ROM emulator&quot;.<br /><br />A Raspberry Pi or an arduino are completely unsuitable for this task; they simply lack the ability to respond dynamically to the 2A03 with low enough delay.<br /><br />The Atari 2600 has a device (the &quot;Harmony Cart&quot;) that uses a microcontroller as a ROM emulator, but it's using one with drastically lower latency than the RPi / most other ARM cores, and the 2600's CPU is 2/3 the speed of the NES's CPU.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Milesy303</b> [ Thu Jun 14, 2018 3:27 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Controlling program ROM with a RPi or Arduino</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Thanks for the response, I thought that was maybe going to be the answer. Yes the Pi is slow, experience there but I thought the atmega chip at least had some sort of capable speed? The Arduino is reasonably low level compared to the Pi. <br /><br />What sort of chips and circuitry are the likes of the NES ever drive using to get that sort of speed? <br /><br />Perhaps an alternative solution would be using the Arduino to program a chip on the fly, but that sounds not much different to just programming the chip manually on a donor.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Thu Jun 14, 2018 3:40 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Controlling program ROM with a RPi or Arduino</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Milesy303 wrote:</div><div class="quotecontent">Thanks for the response, I thought that was maybe going to be the answer. Yes the Pi is slow, experience there but I thought the atmega chip at least had some sort of capable speed? The Arduino is reasonably low level compared to the Pi. <br /></div>Yeah, still no. <br /><br />It turns out that usually when you get a microcontroller that's fast enough to serve as a ROM emulator, it also grows enough complexity that it can't manage the latency.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">What sort of chips and circuitry are the likes of the NES ever drive using to get that sort of speed? <br /></div>RAMs and an FPGA to emulate mapper hardware.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Perhaps an alternative solution would be using the Arduino to program a chip on the fly, but that sounds not much different to just programming the chip manually on a donor.<br /></div>It's true, but not having to physically unplug things and replug things does make it more convenient.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Memblers</b> [ Thu Jun 14, 2018 8:49 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Controlling program ROM with a RPi or Arduino</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />A while back I traced out and drew an (incomplete) schematic of the ROM emulator I used to always use.  Wasn't something I built, it was designed in '93 and I bought a used one in '99.  Connected to target board with an IDC to DIP adapter, you'd just plug that into an EPROM socket.  On the other end, it connected to a PC's parallel port through an RJ6 cable, the &quot;in&quot; connector on the schematic.  The &quot;out&quot; connector is so you could chain several of the boards together to emulate multiple EPROMs.  Pretty sure there are buffers on the other side of the RAM chip that I didn't trace out and put in the schematic.<br />edit: also, those &quot;reset&quot; outputs are used to reset the CPU on the target board<br /><br />That's pretty much the type of circuit you'd need to control the ROM with an MCU.  Obviously could be done differently and better with an MCU instead of a few pins from a parallel port.  If it's not helpful, I hope it's at least interesting.<br /><br />Here's a currently available product that does this.  At $175 + $12 it's kinda spendy, but it is very niche.<br /><a href="https://www.moates.net/ostrich-20-the-new-breed-p-169.html" class="postlink">https://www.moates.net/ostrich-20-the-new-breed-p-169.html</a><br /><a href="http://www.moates.net/emuc3206-emulation-cable-32pin-6inch-p-168.html?cPath=32" class="postlink">http://www.moates.net/emuc3206-emulation-cable-32pin-6inch-p-168.html?cPath=32</a>

		
			<br clear="all" /><br />

			<table class="tablebg" width="100%" cellspacing="1">
			<tr>
				<td><b class="genmed">Attachments: </b></td>
			</tr>
			
				<tr>
					<td>
			<span class="genmed">
				<img src="./styles/subsilver2/imageset/icon_topic_attach.gif" width="14" height="18" alt="" title="" /> 
				<a href="./download/file.php?id=12852">TurboROM schematic.PDF</a> [64.77 KiB]
			</span><br />
			<span class="gensmall">Downloaded 64 times</span>
		

		<br />
	</td>
				</tr>
			
			</table>
		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>krzysiobal</b> [ Sun Jun 17, 2018 4:33 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Controlling program ROM with a RPi or Arduino</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Then you can put Atmega16/32, USB, RAM (628512 - 4 MBit), battery backup and you got perfect EPROM emulator, you can project the PCB to make the EPROM pinout like for DIL28 NES Mask Roms or any DIP32.<br />Atmega has 32 pins, 2 for controlling USB and 30 for controlling RAM (A0-A18, D0-D7, /CE, /OE, /WE).<br />Atmega has 3 state outputs so it will perfectly act in this role (put all memory-pins in three state mode at powerup and set them to outputs only when receiving command from USB)<br /><br />With V-USB you can have 7kB/s real transfer rate so filling whole memory would take around minute.<br /><br />Building cost should not exceed 5$.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Milesy303</b> [ Mon Jun 18, 2018 1:43 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Controlling program ROM with a RPi or Arduino</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">lidnariq wrote:</div><div class="quotecontent"><div class="quotetitle">Milesy303 wrote:</div><div class="quotecontent">Thanks for the response, I thought that was maybe going to be the answer. Yes the Pi is slow, experience there but I thought the atmega chip at least had some sort of capable speed? The Arduino is reasonably low level compared to the Pi. <br /></div>Yeah, still no. <br /><br />It turns out that usually when you get a microcontroller that's fast enough to serve as a ROM emulator, it also grows enough complexity that it can't manage the latency.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">What sort of chips and circuitry are the likes of the NES ever drive using to get that sort of speed? <br /></div>RAMs and an FPGA to emulate mapper hardware.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Perhaps an alternative solution would be using the Arduino to program a chip on the fly, but that sounds not much different to just programming the chip manually on a donor.<br /></div>It's true, but not having to physically unplug things and replug things does make it more convenient.</div><br /><br />Thank you. I might just write something to play games on my C64 instead haha.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Milesy303</b> [ Mon Jun 18, 2018 1:46 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Controlling program ROM with a RPi or Arduino</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Memblers wrote:</div><div class="quotecontent">A while back I traced out and drew an (incomplete) schematic of the ROM emulator I used to always use.  Wasn't something I built, it was designed in '93 and I bought a used one in '99.  Connected to target board with an IDC to DIP adapter, you'd just plug that into an EPROM socket.  On the other end, it connected to a PC's parallel port through an RJ6 cable, the &quot;in&quot; connector on the schematic.  The &quot;out&quot; connector is so you could chain several of the boards together to emulate multiple EPROMs.  Pretty sure there are buffers on the other side of the RAM chip that I didn't trace out and put in the schematic.<br />edit: also, those &quot;reset&quot; outputs are used to reset the CPU on the target board<br /><br />That's pretty much the type of circuit you'd need to control the ROM with an MCU.  Obviously could be done differently and better with an MCU instead of a few pins from a parallel port.  If it's not helpful, I hope it's at least interesting.<br /><br />Here's a currently available product that does this.  At $175 + $12 it's kinda spendy, but it is very niche.<br /><a href="https://www.moates.net/ostrich-20-the-new-breed-p-169.html" class="postlink">https://www.moates.net/ostrich-20-the-new-breed-p-169.html</a><br /><a href="http://www.moates.net/emuc3206-emulation-cable-32pin-6inch-p-168.html?cPath=32" class="postlink">http://www.moates.net/emuc3206-emulation-cable-32pin-6inch-p-168.html?cPath=32</a><br /><br /></div><br /><br />Thank you I will look into this option.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Milesy303</b> [ Mon Jun 18, 2018 1:48 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Controlling program ROM with a RPi or Arduino</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">krzysiobal wrote:</div><div class="quotecontent">Then you can put Atmega16/32, USB, RAM (628512 - 4 MBit), battery backup and you got perfect EPROM emulator, you can project the PCB to make the EPROM pinout like for DIL28 NES Mask Roms or any DIP32.<br />Atmega has 32 pins, 2 for controlling USB and 30 for controlling RAM (A0-A18, D0-D7, /CE, /OE, /WE).<br />Atmega has 3 state outputs so it will perfectly act in this role (put all memory-pins in three state mode at powerup and set them to outputs only when receiving command from USB)<br /><br />With V-USB you can have 7kB/s real transfer rate so filling whole memory would take around minute.<br /><br />Building cost should not exceed 5$.</div><br /><br />I had considered using a couple of shift registers to reduce the number of pins needed. Thanks.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Milesy303</b> [ Mon Jun 18, 2018 2:33 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Controlling program ROM with a RPi or Arduino</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Could you do something with PFGA fast enough?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Milesy303</b> [ Thu Jun 21, 2018 4:59 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Controlling program ROM with a RPi or Arduino</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Can anyone recommend a FPGA dev board that would be suitable for this project? <br /><br />I see the everdrive N8 only uses a Cyclone II chip so should be cheaper than the IV to do something similar with that. <br /><br />What about the cheaper Chinese boards?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Thu Jun 21, 2018 5:10 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Controlling program ROM with a RPi or Arduino</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />All preëxisting current FPGA dev boards are strictly 3V only; the NES is 5V. You can't directly connect the two without damaging one or both.<br /><br />You might be able to find a historical one? I don't know.<br /><br />The PowerPak contains an (by now very) old XC2S30 (&quot;Spartan-2&quot;), two 512 KiB SRAMs, a 32 KiB SRAM, and a 64 KiB chunk of flash. Nowadays the cheap iCE40 FPGAs are comparable in ability, but will need voltage translation.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Milesy303</b> [ Fri Jun 22, 2018 1:42 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Controlling program ROM with a RPi or Arduino</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />This one takes 7.5 input. Can't see much about levels within though. <br /><br /><!-- m --><a class="postlink" href="https://www.digikey.co.uk/product-detail/en/intel-fpgas-altera/DK-CYCII-2C20N/544-1736-ND/1207144?utm_adgroup=Evaluation+Boards+-+Embedded+-+Complex+Logic+%28FPGA%2C+CPLD%29&amp;mkwid=sFCORBnES&amp;pcrid=259861725325&amp;pkw=&amp;pmt=&amp;pdv=m&amp;productid=1207144&amp;slid=&amp;gclid=EAIaIQobChMI0c39le7m2wIVWofVCh3nWwC_EAQYASABEgK2PfD_BwE">https://www.digikey.co.uk/product-detai ... gK2PfD_BwE</a><!-- m -->

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Fri Jun 22, 2018 10:16 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Controlling program ROM with a RPi or Arduino</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Sadly, even as old as that IC is, it's still not 5V tolerant.<br /><br />( <!-- m --><a class="postlink" href="https://www.altera.com/products/fpga/cyclone-series/cyclone-ii/support.html">https://www.altera.com/products/fpga/cy ... pport.html</a><!-- m --> § Cyclone II Device Handbook (All Sections) ; chapter 5 &quot;DC Characteristics and Timing Specifications&quot; says it supports a maximum voltage of 4.6V and makes no mention of tolerance of higher voltage (so it isn't).

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>