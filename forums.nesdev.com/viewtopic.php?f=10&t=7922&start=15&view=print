<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - How to compare to a value larger than $ff?</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">How to compare to a value larger than $ff?</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=10&amp;t=7922">http://forums.nesdev.com/viewtopic.php?f=10&amp;t=7922</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>2</strong> of <strong>2</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Canite</b> [ Wed Jun 29, 2011 10:12 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Kasumi wrote:</div><div class="quotecontent">My guess? You didn't indent those instructions. <br /></div>
<br />
<br />Oh wow, nice catch haha.  I didn't even think about that, would've been nicer if it said "Not indented" instead <img src="./images/smilies/icon_razz.gif" alt=":P" title="Razz" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>3gengames</b> [ Thu Jun 30, 2011 6:25 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Canite wrote:</div><div class="quotecontent"><div class="quotetitle">Kasumi wrote:</div><div class="quotecontent">My guess? You didn't indent those instructions. <br /></div><br /><br />Oh wow, nice catch haha.  I didn't even think about that, would've been nicer if it said "Not indented" instead <img src="./images/smilies/icon_razz.gif" alt=":P" title="Razz" /></div>
<br />
<br />Huh? You don't have to indent in NESASM to my knowledge, but I always put 2 spaces before instructions. So it's worth a try, but I don't remember that being a problem for me. Interesting. But anyway:
<br />
<br />I don't really see a problem with your code, the only problem is that your variables aren't spelled the same or capitalized the same, as the code you typed in should of worked. And FYI people who don't use NESASM and bag it, NESASM3 [Current versio everyone should have] supports pointer+1 and such. Use it again before you bag on it for being crap, as in my use, it's never created a bad binary or anything of that nature. It's awesome.
<br />
<br />Also, does everyone also code in all caps? I don't know why I do, I think it's so I can tell pointers and stuff away from instructions and numbers. <img src="./images/smilies/icon_razz.gif" alt=":P" title="Razz" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Canite</b> [ Thu Jun 30, 2011 7:06 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Yeah, indenting got rid of the errors, but the code doesn't work as expected still.. its just displaying a screen full of zeroes and near the bottom is a few rows of glitchy zeroes and other random tiles when its supposed to be just all black tiles.
<br />Although I think its more because I'm terrible with nametables and such rather than this loop.  Is there any order in which the backgrounds/sprite/pallettes should be loaded or does it not matter?  I also read somewhere that the background data needs to start at $2000, but in my code my bank 2 has .org $E000 (I think), could that be a problem?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>3gengames</b> [ Thu Jun 30, 2011 7:22 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The data in your ROM starts to $E000 I am guessing, not a problem, you upload it to the PPU with this code:
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">LDA $2002 ;Reset PPU RAM &quot;pointer&quot;<br />LDA #$20 ;A=20<br />STA $2006 ;Store high byte of pointer, $20xx<br />LDA #$00 ;A=0<br />STA $2006 ;Store low byte of pointer, PPU ram write to $2007 now to $2000, the first nametable tile/attribute data.<br /></div>
<br />
<br />That's what that code does.
<br />
<br />Now you need to write 1024 bytes to the nametable. The first $3C0 values are the tiles on the screen [$2000-$23BF] When you assign what table the background uses for tiles, you store the tile number you want here. After $3BF of your nametable, $3C0 starts the "attributes" bytes. Attributes give a 2x2 tile area a color palette. You assign the data from $3C0-$3FF the numbers you want on the palette.
<br />
<br />Do you get this? If not, seeing this may help: <a href="http://wiki.nesdev.com/w/index.php/Attribute_table" class="postlink">Wiki Link</a>
<br />
<br />As for uploading, I upload the palette and then the nametable, but the screen is off for both so I don't believe it really matters.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Thu Jun 30, 2011 7:27 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">3gengames wrote:</div><div class="quotecontent">As for uploading, I upload the palette and then the nametable, but the screen is off for both so I don't believe it really matters.</div>
<br />The only thing that matters regarding uploading palette, is that you might want to make sure you're in VBLANK while uploading it, otherwise the colors you're uploading will show up as visible streaks on the display even if rendering is disabled (because of a feature of the PPU where if rendering is off and PPU address points to the palette area, it'll render with whatever color the address is pointing at). It's OK to use the $2002 flag to check for VBLANK in this case as it doesn't matter if we miss frames.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Kasumi</b> [ Thu Jun 30, 2011 8:10 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Canite wrote:</div><div class="quotecontent">Oh wow, nice catch haha.  I didn't even think about that, would've been nicer if it said "Not indented" instead <img src="./images/smilies/icon_razz.gif" alt=":P" title="Razz" /></div><br />That would be nicer, but it actually makes less sense when you look at how nesasm works. See below.<br /><div class="quotetitle">3gengames wrote:</div><div class="quotecontent">Huh? You don't have to indent in NESASM to my knowledge, but I always put 2 spaces before instructions.</div>
<br />As far as I know, any number of spaces or tabs before actual code starts on a line is called indenting in programming. So two spaces before an instruction is indenting. 
<br />
<br />This code is valid is nesasm:
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">lda:;A label<br />&nbsp; lda lda<br /></div><br />This code is valid in nesasm:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">lda;a label doesn't need a colon in nesasm<br />&nbsp;lda lda;load the value stored at this label<br /></div><br />This code is valid in nesasm:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">lda lda lda<br /></div><br />All the code above does the exact same thing. So this is what happens when you don't indent an instruction in nesasm.<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">STA pointer+1<br /></div><br />Is interpreted the same way as:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">STA:<br />&nbsp;pointer+1<br /></div><br />So STA is a label. Pointer+1 is an unknown instruction. That's why it gives "unknown instruction" as an error, and rightly so. One could make the argument that nesasm should reserve the keywords used for an instruction, but as the program is now, an indentation error doesn't make sense. Another solution would be to make the program only accept labels that terminate with a colon, but this would likely not be backwards compatible with some code.<br /><br />The ability to place an instruction on the same line as a label is actually extremely useful. We indent so the assembler knows the difference between labels and instructions.<br /><br />Edit: I found something even MORE interesting. At first I thought, "Oh, wait. You should have actually encountered a 'label multiply defined' error if what I said was true." BUT... nesasm actually doesn't give an error for a label defined twice if it points to the same location.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">Pointer:<br />Pointer:<br /></div><br />gives no errors.<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">Pointer:<br />&nbsp;lda #$00;or any other random instruction<br />Pointer:<br /></div>
<br />gives "label multiply defined". 
<br />
<br />Since an unknown instruction doesn't increment nesasm's internal counter (after all, how many bytes would it know to increment by?), a string of not indented code just means that all the labels point to the same location, so no "label multiply defined". That's fascinating to me. Even if this behavior were changed, (And I can actually think of a few good uses for this behavior) it would only give you "label multiply defined" if you used the same instruction not indented more than once.
<br />
<br />To bring this back on topic, the fact that all your instructions are assembled to the same location ($E000) is the clue that you forgot to indent.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Canite</b> [ Thu Jun 30, 2011 11:03 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Ahh, I fixed it <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" />
<br />The problem was that I had the LDA #HIGH(pointer), etc., stuff right after I set the space for pointer (while the ppu was still at ram $0000), I'm not sure why I put it there in the first place.. So I moved it to right before the background loop and it works <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />
<br />
<br />Those are some interesting syntax quirks Kasumi, but very informative, thanks.  Should also help me interpret NESASM error messages a little better too.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dwedit</b> [ Thu Jun 30, 2011 12:12 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I checked how ASM6 handles things.  It turns any unrecognized keyword into a label regardless of how many spaces are before it, and treats any recognized keyword as an instruction or assembler command.
<br />
<br />So in ASM6, instruction names can't be labels.  But instructions do not require any spacing before them, and labels can be defined even with spaces before them.
<br />
<br />I also tried it on TASM.  In TASM, labels must be left-column aligned, and do not require a colon.  You can use instruction names as labels in that assembler.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>2</strong> of <strong>2</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>