<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - 8x16 and whatever else unreg wants to know</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">8x16 and whatever else unreg wants to know</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=10&amp;t=7451">http://forums.nesdev.com/viewtopic.php?f=10&amp;t=7451</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>5</strong> of <strong>83</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Mon Apr 04, 2011 12:55 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Most of the time, bad opcode means either A. you forgot the RTS at the end of a subroutine, B. you messed up a bankswitch, or C. you did RTS on a messed-up stack.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>unregistered</b> [ Mon Apr 04, 2011 1:10 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">Most of the time, bad opcode means either A. you forgot the RTS at the end of a subroutine, B. you messed up a bankswitch, or C. you did RTS on a messed-up stack.</div><br />tepples, thanks!  <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" />  I guess it was kind of A.  I put your code in the middle of a subroutine.  So it had the first part of the first subroutine missing an RTS at the end.... like <div class="codetitle"><b>Code:</b></div><div class="codecontent">&#91;subroutineA...&#91;subroutineB...rts&#93;...rts&#93;</div>[/quote]

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>unregistered</b> [ Thu Apr 07, 2011 11:56 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp;&nbsp; &nbsp;draw_sprite:<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; ; t0-t2 are temporary zero page locations holding<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; ; the address of a particular sprite layout and the<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; ; number of sprites left to draw<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; lda sprite_layouts_lo, x<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; sta t0<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; lda sprite_layouts_hi, x<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; sta t0+1<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; lda sprite_layouts_count, x<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; sta t2<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; ldy #0<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; ; oamIndex is a variable tracking how far you've written<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; ; into shadow OAM &#40;customarily at $0200-$02FF&#41;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; ldx oamIndex<br />&nbsp; &nbsp;&nbsp; &nbsp;@loop:<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; ; If you have the address of an array in a zero page pointer,<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; ; you use the &#40;d&#41;,y addressing mode and increase Y to go<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; ; to the next byte.<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; lda &#40;t0&#41;, y<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; iny<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; ;ect. start<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; sta sprite+4;+oamIndex<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; <br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; inx<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; inc oamIndex<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; ;end ect.&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; <br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; dec t2<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; bne @loop<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; stx oamIndex<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; rts<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; </div><br /><br />This is what I have so far.  <img src="./images/smilies/icon_redface.gif" alt=":oops:" title="Embarassed" />   <span style="color: #808080">My brain doesn't work right now, but</span> I want to make progress. <span style="color: orange">My code always draws the sprite with just one tile; how do i increase the size?  I used  </span><div class="codetitle"><b>Code:</b></div><div class="codecontent">sta sprite+oamIndex</div><span style="color: orange"> but that didnt help. And also, is that code possible... like for me, it is hard to understand why "sta sprite+aVariable" would work...?</span>  <span style="color: #808080">Found my assembly textbook from college and read the entire first chapter and going to finish the second chapter by today.  It is really fun reading it!  <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /> </span>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>3gengames</b> [ Thu Apr 07, 2011 5:36 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Nope, that code isn't possible. You have to store a sprite next to/below in the next sprite address.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>unregistered</b> [ Thu Apr 07, 2011 7:24 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Thank you 3gengames! <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>unregistered</b> [ Mon Apr 11, 2011 3:45 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I think I've found the problem... put tepples' code inside the code that runs before the <div class="codetitle"><b>Code:</b></div><div class="codecontent">cli</div>.  
<br />
<br />Inside the NES 101 Tutorial the only code that runs after <strong><span style="color: green">cli</span></strong> is the endless loop transfering control to the vblank interrupt, i think.  Where do you think tepples' code should go?  I'm asking beccause my skill with rearanging others' code is very poor; guess i could keep try ing though.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Jaffe</b> [ Wed Apr 13, 2011 6:44 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The code tepples posted is a subroutine. You can place it wherever you want (of course not in the middle of some other code). Was this what you meant, or do you mean where to place the actual calls (jsr) to the routine?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>unregistered</b> [ Thu Apr 14, 2011 8:47 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Jaffe wrote:</div><div class="quotecontent">The code tepples posted is a subroutine. </div>Yes, thank you; I agree. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /><br /><div class="quotetitle">Jaffe wrote:</div><div class="quotecontent">You can place it wherever you want (of course not in the middle of some other code). Was this what you meant, or do you mean where to place the actual calls (jsr) to the routine?</div>Well, i think i ment both...  My first problem was that I placed it in the middle of some other code.  I've moved the<br /> <br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">; Background data<br />bg:<br />.incbin &quot;charSelect1.nam&quot;<br />; Attribute table<br />.byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00<br />.byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00<br />.byte $00,$00,$00,$00,$00,$00,$00,$00,$F0,$F0,$F0,$F0,$F0,$F0,$F0,$F0<br />.byte $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$0F,$0F,$0F,$0F,$0F,$0F,$0F,$0F<br />;sprite data<br />hero_frame1:<br />.db aY,&nbsp; &nbsp; $80, $00, aX, aY,&nbsp; &nbsp; $81, $00, aX+8<br />.db aY+8,&nbsp; $90, $00, aX, aY+8,&nbsp; $91, $00, aX+8<br />.db aY+16, $a0, $00, aX, aY+16, $a1, $00, aX+8<br />.db aY+24, $b0, $00, aX, aY+24, $b1, $00, aX+8<br />hero_frame2:<br />.db aY,&nbsp; &nbsp; $80, $00, aX, aY,&nbsp; &nbsp; $81, $00, aX+8<br />.db aY+8,&nbsp; $90, $00, aX, aY+8,&nbsp; $91, $00, aX+8<br />.db aY+16, $a0, $00, aX, aY+16, $a1, $00, aX+8<br />.db aY+24, $b0, $00, aX, aY+24, $b1, $00, aX+8<br />hero_frame3:<br />.db aY,&nbsp; &nbsp; $80, $00, aX, aY,&nbsp; &nbsp; $81, $00, aX+8<br />.db aY+8,&nbsp; $90, $00, aX, aY+8,&nbsp; $91, $00, aX+8<br />.db aY+16, $a0, $00, aX, aY+16, $a1, $00, aX+8<br />.db aY+24, $b0, $00, aX, aY+24, $b1, $00, aX+8<br />hero_frame4:<br />.db aY,&nbsp; &nbsp; $80, $00, aX, aY,&nbsp; &nbsp; $81, $00, aX+8<br />.db aY+8,&nbsp; $90, $00, aX, aY+8,&nbsp; $91, $00, aX+8<br />.db aY+16, $a0, $00, aX, aY+16, $a1, $00, aX+8<br />.db aY+24, $b0, $00, aX, aY+24, $b1, $00, aX+8<br />;Operator &lt; produces the low byte of an address<br />sprite_layouts_lo:<br />.db &lt;hero_frame1, &lt;hero_frame2, &lt;hero_frame3, &lt;hero_frame4<br />;Operator &gt; produces the high byte of an address<br />sprite_layouts_hi:<br />.db &gt;hero_frame1, &gt;hero_frame2, &gt;hero_frame3, &gt;hero_frame4<br />;Number of hardware sprites in each layout<br />sprite_layouts_count:<br />.db 8, 8, 8, 8</div><br />that part underneath the background and attribute data code at the end... that was obvious to me; after i did it.  <img src="./images/smilies/icon_redface.gif" alt=":oops:" title="Embarassed" />  but, it's ok to make a mistake<span style="color: #808080"> and then learn from that</span>. : )  <br /><br /><div class="quotetitle">Jaffe wrote:</div><div class="quotecontent">...or do you mean where to place the actual calls (jsr) to the routine?</div>After many ideas and hours of reading I have decided to place the <strong>jsr</strong> in my vblank code because vblank is the period where you write to the sprite memory, <span style="color: #909090">right?</span><br /><br />Thank you Jaffe for helping me!  <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /><br /><span style="color: olive">This code has not worked for me, yet...  now, it draws the first sprite in the correct spot on the screen; but only the first sprite. <img src="./images/smilies/icon_confused.gif" alt=":?" title="Confused" />  Back to my assembly book.<br />3<br />edit: forgot to post my code</span><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp;&nbsp; &nbsp;draw_sprite:<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; ...<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; ldx oamIndex<br />&nbsp; &nbsp;&nbsp; &nbsp;@loop:<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; ; If you have the address of an array in a zero page pointer,<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; ; you use the &#40;d&#41;,y addressing mode and increase Y to go<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; ; to the next byte.<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; lda &#40;t0&#41;, y<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; iny<br /><br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; ;ect. start<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; sta sprite, x<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; inx<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; ;end ect.&nbsp; THIS IS THE END OF MY CODE.<br /><br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; dec t2<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; bne @loop<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; stx oamIndex<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; rts</div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Jaffe</b> [ Thu Apr 14, 2011 4:52 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I have a bit of a hard time getting an overview of your code. Could you post it in its entirety?
<br />
<br />The subroutine should <em>not</em> be called during vblank time, at least not before all PPU updates are done. You'll want the subroutine to store sprite data in a page of RAM, and let the contents of this page be copied into OAM by a DMA transfer during vblank (from reading this thread it seems you did this before?) That way you can use all of the non-vblank time to do complex calculations etc. to compute what objects are to be shown in the next frame, where they should be placed, etc. Then when vblank comes, you'll have the sprite data ready to be copied into OAM.
<br />
<br />I assume your game has some kind of a main loop that just runs over and over? This is usually where you'd like to place your call to the routine, but that requires that you have some way of controlling how often the loop runs. You could also place it at the end of your vblank code, after you're sure that all code accessing the PPU has run. If you just want to show one object now as a test, you can just as well call it once before your code enters the main infinite loop.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>unregistered</b> [ Fri Apr 15, 2011 7:07 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Jaffe wrote:</div><div class="quotecontent">I have a bit of a hard time getting an overview of your code. Could you post it in its entirety?</div><br /><br /><span style="color: #808080"><span style="font-size: 84%; line-height: normal">It's not really my code yet; it is really the code of Michael Martin in the NES 101 Tutorial and the code of tepples in his post on page 4, i think, of this thread.</span></span>  <br /> <br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp;; Transfer control to the VBLANK routines.<br />loop:&nbsp; &nbsp;jmp loop<br /><br />;80 81&nbsp; &nbsp; &nbsp; &nbsp;<br />;90 91&nbsp; &nbsp; &nbsp; &nbsp;<br />;a0 a1&nbsp; &nbsp; &nbsp; &nbsp;<br />;b0 b1&nbsp; &nbsp;<br />;&nbsp; &nbsp; &nbsp; &nbsp; .db aY, $80, $00, aX, aY, $81, $00, aX+8,<br />;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; aY+8, $90, $00, aX, aY+8, $91, $00, aX+8,<br />;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; aY+16, $a0, $00, aX, aY+16, $a1, $00, aX+8,<br />;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;aY+24, $b0, $00, aX, aY+24, $b1, $00, aX+8<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; <br />&nbsp; &nbsp;&nbsp; &nbsp;draw_sprite:<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; ; t0-t2 are temporary zero page locations holding<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; ; the address of a particular sprite layout and the<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; ; number of sprites left to draw<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; lda sprite_layouts_lo, x<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; sta t0<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; lda sprite_layouts_hi, x<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; sta t0+1<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; lda sprite_layouts_count, x<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; sta t2<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; ldy #0<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; ; oamIndex is a variable tracking how far you've written<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; ; into shadow OAM &#40;customarily at $0200-$02FF&#41;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; ldx oamIndex<br />&nbsp; &nbsp;&nbsp; &nbsp;@loop:<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; ; If you have the address of an array in a zero page pointer,<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; ; you use the &#40;d&#41;,y addressing mode and increase Y to go<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; ; to the next byte.<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; lda &#40;t0&#41;, y<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; iny<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; ;ect. start<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; sta sprite, x<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; inx<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; ;end ect.&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; <br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; dec t2<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; bne @loop<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; stx oamIndex<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; rts<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; <br />&nbsp; &nbsp;&nbsp; &nbsp;</div><br /><br /><br />Yes, I remember doing that from before in this thread.  Right now, my file for vblank looks like:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">jsr scroll_screen<br />jsr update_sprite<br />jsr react_to_input<br />rti<br /><br />scroll_screen:<br />&nbsp; &nbsp; &nbsp; &nbsp; ldx #$00&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ; Reset VRAM<br />&nbsp; &nbsp; &nbsp; &nbsp; stx $2006<br />&nbsp; &nbsp; &nbsp; &nbsp; stx $2006<br /><br />&nbsp; &nbsp; &nbsp; &nbsp; ldx scroll&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ; Do we need to scroll at all?<br />&nbsp; &nbsp; &nbsp; &nbsp; beq no_scroll<br />&nbsp; &nbsp; &nbsp; &nbsp; dex<br />&nbsp; &nbsp; &nbsp; &nbsp; stx scroll<br />&nbsp; &nbsp; &nbsp; &nbsp; lda #$00<br />&nbsp; &nbsp; &nbsp; &nbsp; sta $2005&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ; Write 0 for Horiz. Scroll value<br />&nbsp; &nbsp; &nbsp; &nbsp; stx $2005&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ; Write the value of 'scroll' for Vert. Scroll value<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <br />no_scroll:<br />&nbsp; &nbsp; &nbsp; &nbsp; rts<br />&nbsp;<br />update_sprite:<br />&nbsp; &nbsp; &nbsp; &nbsp; ldx #3<br />&nbsp; &nbsp;&nbsp; &nbsp;jsr draw_sprite<br />&nbsp; &nbsp;&nbsp; &nbsp;<br />&nbsp; &nbsp;&nbsp; &nbsp;lda #&gt;sprite<br />&nbsp; &nbsp; &nbsp; &nbsp; sta $4014 ;OAM_DMA register ; Jam page $200-$2FF into SPR-RAM<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ;takes 513 cycles.<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; <br />&nbsp; &nbsp; &nbsp; &nbsp;<br />react_to_input:<br />&nbsp; &nbsp; &nbsp; &nbsp; lda #$01&nbsp; &nbsp; &nbsp; &nbsp; ; strobe joypad<br />&nbsp; &nbsp; &nbsp; &nbsp; sta $4016<br />&nbsp; &nbsp; &nbsp; &nbsp; lda #$00<br />&nbsp; &nbsp; &nbsp; &nbsp; sta $4016<br /><br />&nbsp; &nbsp; &nbsp; &nbsp; lda $4016&nbsp; &nbsp; &nbsp; &nbsp; ; Is the A button down?<br />&nbsp; &nbsp; &nbsp; &nbsp; and #1<br />&nbsp; &nbsp;&nbsp; &nbsp;beq @b<br />&nbsp; &nbsp;&nbsp; &nbsp;jsr low_c<br />@b:&nbsp; &nbsp;&nbsp; &nbsp;lda $4016&nbsp; &nbsp;&nbsp; &nbsp;;Is the B button down?<br />&nbsp; &nbsp;&nbsp; &nbsp;and #1<br />&nbsp; &nbsp;&nbsp; &nbsp;beq not_dn<br />&nbsp; &nbsp;&nbsp; &nbsp;jsr high_c<br />not_dn: rts&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ; Ignore left and right, we don't use 'em<br /><br />low_c:<br />&nbsp; &nbsp; &nbsp; &nbsp; pha<br />&nbsp; &nbsp; &nbsp; &nbsp; lda #$84<br />&nbsp; &nbsp; &nbsp; &nbsp; sta $4000<br />&nbsp; &nbsp; &nbsp; &nbsp; lda #$AA<br />&nbsp; &nbsp; &nbsp; &nbsp; sta $4002<br />&nbsp; &nbsp; &nbsp; &nbsp; lda #$09<br />&nbsp; &nbsp; &nbsp; &nbsp; sta $4003<br />&nbsp; &nbsp; &nbsp; &nbsp; pla<br />&nbsp; &nbsp; &nbsp; &nbsp; rts<br /><br />high_c:<br />&nbsp; &nbsp; &nbsp; &nbsp; pha<br />&nbsp; &nbsp; &nbsp; &nbsp; lda #$86<br />&nbsp; &nbsp; &nbsp; &nbsp; sta $4000&nbsp; &nbsp;;audio<br />&nbsp; &nbsp; &nbsp; &nbsp; lda #$69<br />&nbsp; &nbsp; &nbsp; &nbsp; sta $4002<br />&nbsp; &nbsp; &nbsp; &nbsp; lda #$08<br />&nbsp; &nbsp; &nbsp; &nbsp; sta $4003<br />&nbsp; &nbsp; &nbsp; &nbsp; pla<br />&nbsp; &nbsp; &nbsp; &nbsp; rts<br /></div><br /><br /><div class="quotetitle">Jaffe wrote:</div><div class="quotecontent"> That way you can use all of the non-vblank time to do complex calculations etc. to compute what objects are to be shown in the next frame, where they should be placed, etc. Then when vblank comes, you'll have the sprite data ready to be copied into OAM. </div>So the first thing in vblank should be the copying of page 2 to OAM?  And then is it right to do all the updating of page 2 after vblank ends?  At vblank we are suspossed to make our changes known to OAM first and writes to page 2 are for between Vblank times.  That's what im learning right now, thank you.  <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /><br /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">The start of VBlank is an important event, so it makes sense to interrupt whatever the PPU is doing so that the full duration of VBlank can be used for VRAM updates.</div>What is VRAM? <img src="./images/smilies/icon_confused.gif" alt=":?" title="Confused" /> <br /><br /><div class="quotetitle">Jaffe wrote:</div><div class="quotecontent">If you just want to show one object now as a test, you can just as well call it once before your code enters the main infinite loop.</div>Ok, thanks! <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /> I changed it, but have the poblem again... it's only drawing the first of the 8 sprite object/meta-sprite.  It's in the right place though and it's the right sprite.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Fri Apr 15, 2011 10:14 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Yes, you can update the CPU's copy of OAM outside of vblank. In fact, you're supposed to.
<br />
<br />VRAM is any RAM mapped into PPU $0000-$2FFF. It includes CIRAM, the memory inside the NES used for nametables, and CHR RAM, the memory inside the cartridge used for pattern tables. Some cartridges have CHR ROM instead of CHR RAM; for these, the only VRAM is CIRAM.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Sat Apr 16, 2011 7:57 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Are you using the exact code you pasted here? You know it's incomplete, right? The sprite drawing routine is not copying all the bytes it's supposed to from the meta-sprite definitions, and it's not adding the coordinates to the object's coordinates either. That routine was provided as an example, not as something you can copy &amp; paste.
<br />
<br />I advise you start writing your own code, or at least read all the code you use very carefully so that you know exactly what it's doing. Making Frankenstein programs (copying blocks of code from different sources) is a terrible way to learn, because you have no idea of what is actually going on in the program and are only hoping that it will somehow work.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>unregistered</b> [ Wed Apr 20, 2011 10:52 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">Yes, you can update the CPU's copy of OAM outside of vblank. In fact, you're supposed to. </div>Thank you.  <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />   Would testing the input be ok for during vblank?  No, testing the input hasn't anything to do with VRAM... right?  <br /><br /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">VRAM is any RAM mapped into PPU $0000-$2FFF. It includes CIRAM, the memory inside the NES used for nametables, and CHR RAM, the memory inside the cartridge used for pattern tables. Some cartridges have CHR ROM instead of CHR RAM; for these, the only VRAM is CIRAM.</div>Thanks! <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /><br /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">Are you using the exact code you pasted here? You know it's incomplete, right? The sprite drawing routine is not copying all the bytes it's supposed to from the meta-sprite definitions, and it's not adding the coordinates to the object's coordinates either. That routine was provided as an example, not as something you can copy &amp; paste. <br /><br />I advise you start writing your own code, or at least read all the code you use very carefully so that you know exactly what it's doing. Making Frankenstein programs (copying blocks of code from different sources) is a terrible way to learn, because you have no idea of what is actually going on in the program and are only hoping that it will somehow work.</div>Yes ok, you are right on all points. Thank you for your help.  <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />  God really helped me with it and so it kind of works now! <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" />  The code... it's able to print out the entire meta-sprite now using tepples' code and my code!  Now i'm trying to figure out how to move it with the control pad... and I think maybe calling 
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">ldx #3<br />jsr draw_sprite</div><br />after each input-check would work... but how should I try this?<br />Here's code that appplies to this question. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp; &nbsp; &nbsp; lda #%00011110<br />&nbsp; &nbsp; &nbsp; &nbsp; sta $2001<br /><br />&nbsp; &nbsp;;matthew's init<br />&nbsp; &nbsp;<br />&nbsp; &nbsp;<br />&nbsp; &nbsp;cli<br />;----------------------------END OF RESET----------------------------------<br />&nbsp; &nbsp;; Transfer control to the VBLANK routines.<br />&nbsp; &nbsp;&nbsp; &nbsp; &nbsp; &nbsp; ldx #3<br />&nbsp; &nbsp;&nbsp; &nbsp;jsr draw_sprite<br /><br />loop:&nbsp; &nbsp;jmp loop<br /><br />;80 81&nbsp; &nbsp; &nbsp; &nbsp;<br />;90 91&nbsp; &nbsp; &nbsp; &nbsp;<br />;a0 a1&nbsp; &nbsp; &nbsp; &nbsp;<br />;b0 b1&nbsp; &nbsp;<br />;&nbsp; &nbsp; &nbsp; &nbsp; .db aY, $80, $00, aX, aY, $81, $00, aX+8,<br />;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; aY+8, $90, $00, aX, aY+8, $91, $00, aX+8,<br />;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; aY+16, $a0, $00, aX, aY+16, $a1, $00, aX+8,<br />;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;aY+24, $b0, $00, aX, aY+24, $b1, $00, aX+8<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; <br />&nbsp; &nbsp;&nbsp; &nbsp;draw_sprite:<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; ; t0-t2 are temporary zero page locations holding<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; ; the address of a particular sprite layout and the</div>
<br />Would <span style="color: yellow">jsr draw_sprite</span> be ok to include inside of the <span style="color: yellow">loop:  jmp loop</span>?
<br />Is that the only place I can put it?  <img src="./images/smilies/icon_confused.gif" alt=":?" title="Confused" />  (Because the rest of the file is subroutines and then data.)  I'm missing knowlege about a way to  organize my code with files.  <img src="./images/smilies/icon_confused.gif" alt=":?" title="Confused" />  I remember reading some post by tokumaru that's about organizing code with different files... will search for that tomorrow.  Good night.   <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Thu Apr 21, 2011 9:34 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">unregistered wrote:</div><div class="quotecontent">Would <span style="color: yellow">jsr draw_sprite</span> be ok to include inside of the <span style="color: yellow">loop:  jmp loop</span>?</div><br />It depends. There are 3 common ways to organize your frame logic in NES programs in order to make sure it will run 60 times per second (as it should):<br /><br /><strong>1.</strong> Put the game logic after VRAM-related operations in your NMI. The NMI routine is automatically called at the start of VBlank, and once the VRAM updates are finished, you are free to do other kinds of operations. Since the NES runs at 60fps, there are 60 VBlanks in a second, so your game logic will also run at 60 Hz. Many commercial games do this, including SMB and Final Fantasy. There are some problems with this method though, which make lag frames (these happen when the frame logic takes longer than a frame to complete) difficult to manage. SMB suffers from this when there are too many enemies on screen (apparently the status bar "jumps" and the music slows down). Most tutorials appear to use this.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">Loop:<br />&nbsp; &nbsp;jmp Loop<br /><br />NMI:<br />&nbsp; &nbsp;;DO PPU UPDATES HERE;<br /><br />&nbsp; &nbsp;;RUN THE GAME LOGIC HERE;<br /><br />&nbsp; &nbsp;rti</div><br /><br /><strong>2.</strong> Use the NMI just for signaling the start of VBlank, and both the frame logic and the VRAM-updating in the main thread (the "loop:  jmp loop" part). This is very similar to the above, only the order of the updates is different. Here we update the frame logic first and then we wait for VBlank (by checking a flag which is modified by the NMI when VBlank starts) before performing all VRAM updates. This technique suffers from the same lag frame problems. AFAIK, no commercial games did it like this.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">Loop:<br />&nbsp; &nbsp;;RUN THE GAME LOGIC HERE;<br /><br />&nbsp; &nbsp;;WAIT FOR THE NMI;<br /><br />&nbsp; &nbsp;;DO PPU UPDATES HERE;<br /><br />&nbsp; &nbsp;jmp Loop<br /><br />NMI:<br />&nbsp; &nbsp;;INDICATE THE START OF VBLANK;<br /><br />&nbsp; &nbsp;rti</div><br /><br /><strong>3.</strong> Separate your main thread from your NMI thread and run them in parallel. This is my favorite, because it allows for safe handling of lag frames. When the NMI fires, it can detect if the frame logic is complete or not, so it's able to detect lag frames and make sura that status bars, the music and other things still work even though the frame logic isn't finished. AFAIK, most commercial games use this.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">Loop:<br />&nbsp; &nbsp;;RUN THE GAME LOGIC HERE;<br /><br />&nbsp; &nbsp;;WAIT FOR THE PPU UPDATES TO COMPLETE;<br /><br />&nbsp; &nbsp;jmp Loop<br /><br />NMI:<br />&nbsp; &nbsp;;DO PPU UPDATES HERE;<br /><br />&nbsp; &nbsp;rti</div><br /><br />So, to answer your question more directly: If you just place the sprite-drawing call in the main loop without any other modifications, that routine will be called 100's of times in a frame, because there isn't any sort of timing control in there. In your case, the simplest fix would probably be to place that call right after the controller is checked and the player's coordinates are changed. Since it appears you are building this from a tutorial, it would be better to stick to the first solution I explained in this post. Just keep in mind that there are other options, and that you might want to take a look at them once your games become more complex and need more "robust" timing.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"> I remember reading some post by tokumaru that's about organizing code with different files...</div>
<br />How you organize your files doesn't make any difference in the program... Separating files and using includes is something that's supposed to help you keep track of what's where and make your code more easily maintainable, but in the end the assemble still sees all the code as if it were in a single huge file. What matters for NES programs is the order in which things are processed, which doesn't necessarily match the order in which they are written.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Thu Apr 21, 2011 9:55 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent"><strong>2.</strong> Use the NMI just for signaling the start of VBlank, and both the frame logic and the VRAM-updating in the main thread (the "loop:  jmp loop" part). [...] AFAIK, no commercial games did it like this.</div>
<br />Don't Squaresoft games such as Final Fantasy do it this way?
<br />
<br />I'll have to see if Nintendulator and NESICIDE can measure /NMI-to-RTI time.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>5</strong> of <strong>83</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>