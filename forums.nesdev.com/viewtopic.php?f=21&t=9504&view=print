<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - C# woes</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">C# woes</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=21&amp;t=9504">http://forums.nesdev.com/viewtopic.php?f=21&amp;t=9504</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>zkip</b> [ Tue Nov 20, 2012 2:06 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>C# woes</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Hello all!<br /><br />I'm trying to ultimately program a NES metatile editor with C# for this game I've been working on.. the only thing thus far I've been able to complete was drawing an 8x8 tile to a picturebox.. The whole C# class/stuct stuff really confuses me but I have a basic understanding of it. My question is what steps would I go through to program a routine to draw an entire CHR page rather than a single 8x8 tile.. It's probably simple and I'm over thinking it, but, I dunno. Than, I would like to know how to arrange those into an array of 8x8 tiles where I could draw a 16x16 tile by saying upper left for 16x16 tile 0x02 is 8x8 tile 0x1C and so on..<br /><br />Thanks.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>snarfblam</b> [ Tue Nov 20, 2012 3:53 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: C# woes</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">zkip wrote:</div><div class="quotecontent">What steps would I go through to program a routine to draw an entire CHR page rather than a single 8x8 tile</div><br /><br />Are you trying to draw a whole tile table, or a whole screen out of tiles?<br /><br />Personally, I tend to use very simple metatile structs.<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">struct MetaTile <br />{<br />&nbsp; &nbsp; public byte topLeft;<br />&nbsp; &nbsp; public byte topRight;<br />&nbsp; &nbsp; public byte bottomLeft;<br />&nbsp; &nbsp; public byte bottomRight;<br />}<br /></div><br />Some utility functions to extract metatiles from a byte array (and/or stream) and write them back are usually handy and simple to write.<br /><br />As far as drawing screens made out of tiles, I've written plenty of NES level editors, and in my experience, GDI+ simply isn't fast enough with tiled images to make anything more than a bare-bones quick-and-dirty editor. If that's what you're after then you're all set. For my needs I ended up writing my own drawing code that supports drawing tile-based images with palettes. If you're interested, I'd be glad to share the code.<br /><br />As far as actually drawing things out, I tend to use a set of classes along these lines:<br /><ul><li>GameScreen - Represents the data that defines a screen. The actual data would vary depending on whether you're using an object-based layout, a metatile-based layout, or something else.</li><li>NameTable - Represents an NES name table (32x30 tiles), tile and attribute data. The GameScreen would &quot;draw&quot; itself to the NameTable by telling it which tiles go where.</li><li>ScreenRenderer - Takes a NameTable and a tile source and renders a screen image to a bitmap.</li></ul><br />Again, if you're doing something Q&amp;D, you might not want to spend a ton of time architecturing. You could just declare a couple of arrays to represent your nametable and write a single function that loops over the nametable and draws each tile.<br /><br />If it sounds like I'm severely over-thinking things (yeah... I tend to do that on occasion), it basically breaks down to this:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">class Example {<br />&nbsp; &nbsp; byte&#91;,&#93; ntTiles = new byte&#91;32,30&#93;;<br />&nbsp; &nbsp; byte&#91;,&#93; ntPalettes = new byte&#91;32,30&#93;; // If applicable<br /><br />&nbsp; &nbsp; Bitmap screenImage = new Bitmap(256, 240, 32bppwhatever);<br />&nbsp; &nbsp; Graphics gScreenImage; // Initialize with screenImage (if you're using GDI)<br />&nbsp;<br />&nbsp; &nbsp; void DrawScreen() {<br />&nbsp; &nbsp; &nbsp; &nbsp; // lay out your nametable here<br />&nbsp; &nbsp; }<br /><br />&nbsp; &nbsp; void RenderScreen() {<br />&nbsp; &nbsp; &nbsp; &nbsp; for(tileY as int = 0; tileY &lt; 30; tileY++) {<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; for(tileX as int = 0; tileX &lt; 32; tileX++) {<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; DrawTile(tileX * 8, tileY * 8, ntTiles&#91;tileX, tileY&#93;, ntPalettes&#91;tileX, tileY&#93;);<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<br />&nbsp; &nbsp; &nbsp; &nbsp; }<br />&nbsp; &nbsp; }<br />&nbsp; &nbsp; <br />&nbsp; &nbsp; void DrawTile(blah blah) {<br />&nbsp; &nbsp; &nbsp; &nbsp; // It sounds like you've got this figured out<br />&nbsp; &nbsp; }<br />}<br /></div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>zkip</b> [ Tue Nov 20, 2012 5:51 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: C# woes</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Thanks a lot for writing such a detailed response.. but honestly I'm still sort of lost and so confused...  <img src="./images/smilies/icon_mad.gif" alt=":x" title="Mad" /> <br />Yes, eventually my plan is a level editor but at the moment, I just need this metatile editor.<br /><br />Also,<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp; void DrawScreen() {<br />&nbsp; &nbsp; &nbsp; &nbsp; // lay out your nametable here<br />&nbsp; &nbsp; }</div><br />What exactly goes here??<br /><br />Here is my 8x8 tile drawing routine:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp; &nbsp; &nbsp; private Bitmap _8x8(byte&#91;&#93; tileDat, Bitmap canvas, Color&#91;&#93; palDat)<br />&nbsp; &nbsp; &nbsp; &nbsp; {<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; byte plane0;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; byte plane1;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; byte final;<br /><br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; for (int y = 0; y &lt; canvas.Height; y++)<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; plane0 = 0;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; plane1 = 0;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; for (int x = 0; x &lt; canvas.Width; x++)<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; plane0 = 0;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; plane1 = 0;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; plane0 = Convert.ToByte(((tileDat&#91;y&#93;) &amp; (0x80 &gt;&gt; x)) &gt;&gt; (7 - x));<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; plane1 = Convert.ToByte(((tileDat&#91;y + 8&#93;) &amp; (0x80 &gt;&gt; x)) &gt;&gt; (7 - x));<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; final = Convert.ToByte((plane1 &lt;&lt; 1) + plane0);<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; canvas.SetPixel(x, y, palDat&#91;final&#93;);<br /><br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return canvas;<br />&nbsp; &nbsp; &nbsp; &nbsp; }</div><br />I'm not sure how to incorporate this into what you're talking about. I'm terribly sorry for the bother, but I'd really like to fully understand this.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>snarfblam</b> [ Wed Nov 21, 2012 6:57 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: C# woes</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">zkip wrote:</div><div class="quotecontent">Yes, eventually my plan is a level editor but at the moment, I just need this metatile editor.<br /></div><br />Well then you can safely ignore most of what I said for now. One thing I'll re-emphasize is that GDI+ is a little slow, but sometimes workable. On the other hand, using SetPixel makes GDI+ look like greased lightning. If you really want to avoid the much-more-complicated but oh-so-much-faster approach of directly modifying raw image data, then you might be able to get away using SetPixel to load the tiles. You'll have to try and see how fast it is.<br /><br />I would recommend drawing all your tiles to an image that is 8 pixels wide and 2048 (8 px * 256 tiles) pixels tall. Basically, you want to stack all your tiles together vertically. That way the location for tile <em>x</em> would be (0, 8 * <em>x</em>). <br /><br />It looks like you're already almost there. All you need to do is accept a tile number as a parameter and adjust where you draw your pixels based on the tile number. If you use a vertical arrangement like I described:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">canvas.SetPixel(x, y + tileNumber * 8, palDat&#91;final&#93;);</div><br /><br />I personally load the whole ROM into a single byte array, so if I snarf-ified your code a little it would look like this:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">Bitmap Load_8x8(int tileNum, byte&#91;&#93; rom, int tileOffset, Bitmap canvas, Color&#91;&#93; palDat)<br />&nbsp; &nbsp; &nbsp; &nbsp; {<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; byte plane0;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; byte plane1;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; byte final;<br /><br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; for (int y = 0; y &lt; 8; y++)<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; for (int x = 0; x &lt; 8; x++)<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; plane0 = Convert.ToByte(((rom&#91;tileOffset + y&#93;) &amp; (0x80 &gt;&gt; x)) &gt;&gt; (7 - x));<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; plane1 = Convert.ToByte(((rom&#91;tileOffset + y + 8&#93;) &amp; (0x80 &gt;&gt; x)) &gt;&gt; (7 - x));<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; final = Convert.ToByte((plane1 &lt;&lt; 1) + plane0);<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; canvas.SetPixel(x, y + tileNum * 8, palDat&#91;final&#93;);<br /><br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return canvas;<br />&nbsp; &nbsp; &nbsp; &nbsp; }<br /></div><br />Then you can load a whole page of contiguous CHR like so:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">void LoadWholeChrPage(int chrOffset) {<br />&nbsp; &nbsp; Bitmap chr = new Bitmap(8, 2048, PixelFormat.32bitgoodness);<br /><br />&nbsp; &nbsp; for(i as integer = 0; i &lt; 256; i++) {<br />&nbsp; &nbsp; &nbsp; &nbsp; int tileOffset = chrOffset + i * 16;<br />&nbsp; &nbsp; &nbsp; &nbsp; Load_8x8(i, _theRom, tileOffset, chr, _thePalette);<br />&nbsp; &nbsp; }<br />}<br /></div><br /><br />Hope that's a little more helpful.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Wed Nov 21, 2012 7:41 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: C# woes</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Unless you absolutely want to write your own editor, you could try <a href="http://forums.nesdev.com/viewtopic.php?p=100500#p100500" class="postlink">MapEd Pro</a>, it has a metatile editor.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>zkip</b> [ Wed Nov 21, 2012 3:03 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: C# woes</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Ugh, I'm terribly sorry.. I just can't grasp anything  <img src="./images/smilies/icon_redface.gif" alt=":oops:" title="Embarassed" /> .. I finally understand this, however, now I can't figure out how to define each 8x8 as separate tiles to use to construct a 16x16 tile in a separate picture box. Would this be the metatile structs you referred to earlier?<br /><br />Thanks again, and sorry for so much bother.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>snarfblam</b> [ Wed Nov 21, 2012 4:17 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: C# woes</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />It sounds like you're pretty new to C#. I'm not sure whether you're getting stuck on the C# side of things or the underlying concepts. I don't mind in the least trying to help, but right now I'm just basically guessing which blanks need to be filled in.<br /><br />I know you probably already understand this, but just to walk through the logic... A complete CHR table contains 256 tiles. Each tile is identified by its index. So if you load your tiles into a vertical strip, the top tile would be tile 0, the next one down would be 1, and so on.<br /><br />The metatile structure simply stores the four tile numbers that make up a metatile. So to store all your actual metatile data you could declare an array of MetaTile or a List&lt;MetaTile&gt;, depending on which one suits your needs better. An array might be simpler if you want a fixed number of metatiles. A List&lt;MetaTile&gt; would be easier if you want to be able to add/remove/insert MetaTile entries.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">List&lt;MetaTile&gt; metatiles = new List&lt;MetaTile&gt; ()<br /><br />void Example() {<br />&nbsp; &nbsp; // Create and initialize a metatile and add it to the list<br /><br />&nbsp; &nbsp; MetaTile mt = new MetaTile();<br />&nbsp; &nbsp; mt.topLeft = 0x40;<br />&nbsp; &nbsp; mt.topRight = 0x41;<br />&nbsp; &nbsp; mt.bottomLeft = 0x50;<br />&nbsp; &nbsp; mt.bottomRight = 0x51;<br /><br />&nbsp; &nbsp; metatiles.Add(mt);<br />}<br /></div><br /><br />The trickier part is presenting the data in the UI and letting the user manipulate it. If you want to draw a metatile, you'll probably want to start with a function that draws an individual tile by index.<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">void DrawTile(Graphics target, byte tileIndex, int x, int y) {<br />&nbsp; &nbsp; // Determine where we will grab the tile from, assuming tiles are stored in a vertical strip<br />&nbsp; &nbsp; var sourceRect = new Rectangle(0, tileIndex * 8, 8, 8);<br /><br />&nbsp; &nbsp; // Determine where it will be drawn<br />&nbsp; &nbsp; var destRect = new Rectangle(x, y, 8, 8);<br /><br />&nbsp; &nbsp; // Draw it<br />&nbsp; &nbsp; target.DrawImage(tileSourceImage, destRect, sourceRect);<br />}<br /></div><br />Then you can simply call this function four times to draw a metatile.<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">void DrawMetatile(MetaTile mt, int x, int y) {<br />&nbsp; &nbsp; DrawTile(mt.TopLeft, x, y);<br />&nbsp; &nbsp; DrawTile(mt.TopRight, someX, someY);<br />&nbsp; &nbsp; // ... and two more times for the bottom tiles<br />}<br /><br />void Usage() {<br />&nbsp; &nbsp; // Draw the first metatile (number 0) at the location 0,0<br />&nbsp; &nbsp; DrawMetatile(metatiles&#91;0&#93;, 0, 0);<br />}<br /></div><br /><br />Hopefully that clears things up a bit.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>zkip</b> [ Wed Nov 21, 2012 7:30 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: C# woes</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Thank you so much snarfblam.  <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /> I owe you man. I do have a few more questions though;  <img src="./images/smilies/icon_confused.gif" alt=":?" title="Confused" /> <br /><br />This is working like I wanted it to, however, any suggestions as to how to get everything all cleaned up and how to arrange it to where I have a page of metatiles displayed? Such as rows? I.E Row 0 contains metatiles 0-A etc.<br /><br />Edit: Erm.. I see what you mean now about the slowness.. It takes ~20 secs. to draw 49 metatiles..  <img src="./images/smilies/icon_confused.gif" alt=":?" title="Confused" />  I'd like for you to explain the faster method if possible. Thanks again.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Jsolo</b> [ Thu Nov 22, 2012 1:35 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: C# woes</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />How are you drawing the tiles? In my custom tool I can draw a whole screen of 240 16x16 metatiles many times per second without any slowdown at all, so it shouldn't take long to draw 50 metatiles. Have you tried profiling your code to find out where it's taking so long?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dwedit</b> [ Thu Nov 22, 2012 1:40 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: C# woes</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />In C#, if you still want to use the awful System.Drawing way of drawing images, at least use LockBits as your way to draw stuff.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>zkip</b> [ Thu Nov 22, 2012 1:46 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: C# woes</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Basically, I'm doing nothing more than what is already shared here in this thread... the 8x8 function to render the 8x8 and the DrawTile, and DrawMetatile functions from snarfblam to construct the full metatile.<br /><br />Anyways, <a href="http://pastebin.com/xvBNUEti" class="postlink">here</a> is the whole shabang complete with trimmings.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dwedit</b> [ Thu Nov 22, 2012 2:00 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: C# woes</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Don't use SetPixel, it's too slow.  Instead use LockBits and Marshal.Copy along with an int array.  <br />Something like this:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; int&#91;&#93; pixels = new int&#91;128 * 128&#93;;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //your code here, set the pixels.&nbsp; A value is like R + (G &lt;&lt; 8) + (B &lt;&lt; 16).&nbsp; The index in the array = X + Y * width<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Bitmap bmp = new Bitmap(128,128,&nbsp; System.Drawing.Imaging.PixelFormat.Format32bppRgb);<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; var bits = bmp.LockBits(new Rectangle(0, 0, 128, 128), System.Drawing.Imaging.ImageLockMode.WriteOnly, System.Drawing.Imaging.PixelFormat.Format32bppRgb);<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Marshal.Copy(pixels, 0, bits.Scan0, pixels.Length);<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; bmp.UnlockBits(bits);<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; //assign bmp somewhere like to a picture box or panel<br /></div><br /><br />If you already have a bitmap to store the new image into, there's no need to create a new one.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>zkip</b> [ Thu Nov 22, 2012 2:14 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: C# woes</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Erm.. could it really be ONLY the SetPixel doing this?? I just tried a class from <a href="http://www.codeproject.com/Tips/240428/Work-with-bitmap-faster-with-Csharp" class="postlink">here.</a> And it seems like it's even slower...  <img src="./images/smilies/icon_mad.gif" alt=":x" title="Mad" /> <br /><br />By doing this<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; LockBitmap lockBitmap = new LockBitmap(canvas);<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; lockBitmap.LockBits();<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; lockBitmap.SetPixel(x, y + tileNum * 8, palDat&#91;final&#93;);<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; lockBitmap.UnlockBits();</div><br />in the Load_8x8 function and using that class it still hasn't loaded yet so it's slower apparently.....

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dwedit</b> [ Thu Nov 22, 2012 2:27 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: C# woes</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Basically, you need to make ALL your drawing happen on the int array, then at the very very end, you copy that to a bitmap.  So you won't be making a 8x2048 image, and doing rectangle copies or anything like that.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>zkip</b> [ Thu Nov 22, 2012 2:33 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: C# woes</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Dwedit wrote:</div><div class="quotecontent">Basically, you need to make ALL your drawing happen on the int array, then at the very very end, you copy that to a bitmap.  So you won't be making a 8x2048 image, and doing rectangle copies or anything like that.</div><br />Argh... I'm so confused.. I'm sorry, but then what exactly do I need to do. Get rid of the .DrawImage parts?? I'm so lost..  <img src="./images/smilies/icon_confused.gif" alt=":?" title="Confused" /> <br /><br />I'm sorry for so much bother on everyone and thanks.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>