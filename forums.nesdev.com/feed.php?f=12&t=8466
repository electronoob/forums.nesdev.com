<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=12&amp;t=8466" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2012-01-13T17:00:13-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=12&amp;t=8466</id>
<entry>
<author><name><![CDATA[kevtris]]></name></author>
<updated>2012-01-13T17:00:13-07:00</updated>
<published>2012-01-13T17:00:13-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8466&amp;p=88822#p88822</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8466&amp;p=88822#p88822"/>
<title type="html"><![CDATA[FPGA SPC / SPC Test ROMs?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8466&amp;p=88822#p88822"><![CDATA[
<div class="quotetitle">lidnariq wrote:</div><div class="quotecontent"><br />What determines whether the echo buffer is displayed in purple or blue?<br /></div><br /><br />It depends on if it's read-only (purple) or read/write (blue).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=230">kevtris</a> — Fri Jan 13, 2012 5:00 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[lidnariq]]></name></author>
<updated>2012-01-13T12:04:54-07:00</updated>
<published>2012-01-13T12:04:54-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8466&amp;p=88820#p88820</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8466&amp;p=88820#p88820"/>
<title type="html"><![CDATA[FPGA SPC / SPC Test ROMs?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8466&amp;p=88820#p88820"><![CDATA[
What determines whether the echo buffer is displayed in purple or blue?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3512">lidnariq</a> — Fri Jan 13, 2012 12:04 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2012-01-13T11:52:03-07:00</updated>
<published>2012-01-13T11:52:03-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8466&amp;p=88819#p88819</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8466&amp;p=88819#p88819"/>
<title type="html"><![CDATA[FPGA SPC / SPC Test ROMs?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8466&amp;p=88819#p88819"><![CDATA[
The SNES is close enough conceptually to the NES that it shouldn't be too hard to get some sort of terminal running, should it?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Fri Jan 13, 2012 11:52 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[mic_]]></name></author>
<updated>2012-01-13T11:48:36-07:00</updated>
<published>2012-01-13T11:48:36-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8466&amp;p=88818#p88818</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8466&amp;p=88818#p88818"/>
<title type="html"><![CDATA[FPGA SPC / SPC Test ROMs?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8466&amp;p=88818#p88818"><![CDATA[
<div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />My biggest issue is not getting them out of the SPC, but getting the SNES to do what I want it to do, hehe. I haven't touched the SNES before with regards to coding it.<br /></div><br /><br />Sounds like you've done all the hard parts and have the easy stuff left <img src="http://forums.nesdev.com/images/smilies/icon_razz.gif" alt=":P" title="Razz" /><br />Hell, you can program the SNES <a href="http://jiggawatt.org/notmine/SNES_SDK_r67_Win32.zip" class="postlink">using C</a>, except for the most timing-critical stuff, which simplifies the work a bit. And unless you need a fancy-schmancy GUI there's no need to learn all the details of the PPU and DMA controller (until you start implementing the full FPGASNES).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=1181">mic_</a> — Fri Jan 13, 2012 11:48 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[kevtris]]></name></author>
<updated>2012-01-13T10:25:40-07:00</updated>
<published>2012-01-13T10:25:40-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8466&amp;p=88817#p88817</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8466&amp;p=88817#p88817"/>
<title type="html"><![CDATA[FPGA SPC / SPC Test ROMs?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8466&amp;p=88817#p88817"><![CDATA[
<div class="quotetitle">mic_ wrote:</div><div class="quotecontent"><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I suspect it will basically run, then spit the crc's back to the SNES which can store it in SRAM, then the SRAM can be backed up by a copier and read out that way. I might need some help on writing code to do this...<br /></div><br /><br />Or display it on the screen?  Unless you really want to keep the data for later.<br /><br /></div><br /><br />Yeah, I wanted to keep the 2K of CRC's so I could plug them back into the SPC so it can indicate pass/fail on the various tests.  I figure that on a real SNES, most of the tests will pass, through, so indicating the failures might be a valid way to go.<br /><br />My biggest issue is not getting them out of the SPC, but getting the SNES to do what I want it to do, hehe.  I haven't touched the SNES before with regards to coding it.  I was probably going to just take some kind of example code and convert it over to do my bidding or something.  <br /><br />Buut I've been busy with FPGA and running the SPC thereon, so I haven't had time nor inclination to do it yet.<br /><br />Speaking of, I got a video of it playing some SPC's posted to youtube:<br /><br /><!-- m --><a class="postlink" href="http://www.youtube.com/watch?v=_uDHCZGoHjM">http://www.youtube.com/watch?v=_uDHCZGoHjM</a><!-- m --><br /><br />I squashed a major echo bug after posting this, but I don't think it's terribly audible.  I had some channel "Cross pollination" of the echo, because the right channel N audio is written during channel time N+1, which means the echo enable bit had changed, turning echo on wrongly for channel N.  This was since fixed.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=230">kevtris</a> — Fri Jan 13, 2012 10:25 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[kevtris]]></name></author>
<updated>2012-01-13T10:19:26-07:00</updated>
<published>2012-01-13T10:19:26-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8466&amp;p=88816#p88816</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8466&amp;p=88816#p88816"/>
<title type="html"><![CDATA[FPGA SPC / SPC Test ROMs?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8466&amp;p=88816#p88816"><![CDATA[
<div class="quotetitle">byuu wrote:</div><div class="quotecontent"><br />&gt; I didn't go nuts with testing yet because I wasn't sure if the PC emulators could handle it. namely things like zeropage wrapping and pcall wrapping among other things.<br /><br />I would appreciate it if you ran the test on bsnes v085 to see if it fails anything. If so, I'll fix it.<br /></div><br /><br />Yeah I may need a bit of help on the SNES side of things, since I have never written anything for it.  Sure I can learn it and all that, but at this point I don't want to spend the time to learn it, hehe.  (Since I've been concentrating on SPC and the FPGA implementation thereof).<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />One of the pins on the S-SMP has to be /IRQ (but I can't find a complete pinout.) Wire it up to a switch to toggle +5V/GND (pull off the Vreg or something), and have fun with SLEEP =)<br /><br />I'd actually really like to emulate IRQs on the chip, even if there's no way to use them, just to have a complete core.<br /></div><br /><br />Yeah I was wondering if the pin(s) existed for an interrupt or two.  It seems silly to have the instruction if you cannot use it.  But it miight make a little sense if they used a "stock" core as a base for it.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Speaking of that ... you have any plans to attack the TEST register? Neither me, anomie nor blargg have been able to figure out every bit entirely.<br />We know: frequency adjust, RAM disable, RAM write disable, MMIO disable.<br />We are fuzzy on: two bits that each do weird things to the timers, one frequency setting that deadlocks every SMP we've tried it on to date.<br />No games use it at all, but again, fun to do it all the way.<br /></div><br /><br />Is is possible it controls something to do with the DSP's memory sharing or something?  From what I can tell, the DSP hits what amounts to RDY on the CPU for 2 out of 3 cycles.  This is how I implement it on my FPGA version anyways.  <br /><br />I guess the DSP could be running the show, too, when it comes to memory interleaving.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />&gt; Unfortunately, bsnes seems to have had its debugger 100% removed. I don't know why, but the debugger is totally gone now.<br /><br />Rewrote the GUI. Debugger takes a lot of time to remake. Plan in the future is to have the debugger be a separate GUI entirely. Trying to get it to work with ALL GUI features doesn't work very well.<br /><br />You wouldn't like the current one anyway. I threw out the official SPC700 mnemonics and made my own 6502-alike to match the S-CPU, eg:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">mov a,#$12 -&gt; lda #$12<br />push x -&gt; phx</div><br /></div><br /><br />Gotcha.  that's a good reason as any <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":-)" title="Smile" />   I wouldn't mind it TOO much, so long as it works.  I ended up using the MESS debugger, however.  It was good for dumping the SPC's RAM to disk so I could poke it later.<br /><br />The output of my test program is a 2K block of CRC's corresponding to all 256 instructions (4 bytes per, and 2 tests per opcode, so 512*4 bytes).  There is also a 512 byte field that indicates which tests passed and which failed (though that's not implemented  yet, it just shows when a test is run).<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />It works amazingly well. The chip was clearly a 6502 with the mnemonics changed last-minute (probably) for legal reasons.<br /><br />Anyway, v070 has probably the best debugger.<br /></div><br /><br />Yeah I was wondering about this, if it was meant to be a super-enhanced 6502 or not.  They sure added some weird instructions if so, like being able to OR/NOR/AND/NAND/XOR a single memory bit with the carry flag.  Does anything even USE those instructions?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=230">kevtris</a> — Fri Jan 13, 2012 10:19 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[byuu]]></name></author>
<updated>2012-01-12T08:39:05-07:00</updated>
<published>2012-01-12T08:39:05-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8466&amp;p=88775#p88775</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8466&amp;p=88775#p88775"/>
<title type="html"><![CDATA[FPGA SPC / SPC Test ROMs?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8466&amp;p=88775#p88775"><![CDATA[
&gt; I didn't go nuts with testing yet because I wasn't sure if the PC emulators could handle it. namely things like zeropage wrapping and pcall wrapping among other things.<br /><br />I would appreciate it if you ran the test on bsnes v085 to see if it fails anything. If so, I'll fix it.<br /><br />&gt; (since someone will probably ask, the two opcodes I cannot test are sleep and stop).<br /><br />One of the pins on the S-SMP has to be /IRQ (but I can't find a complete pinout.) Wire it up to a switch to toggle +5V/GND (pull off the Vreg or something), and have fun with SLEEP =)<br /><br />I'd actually really like to emulate IRQs on the chip, even if there's no way to use them, just to have a complete core.<br /><br />Speaking of that ... you have any plans to attack the TEST register? Neither me, anomie nor blargg have been able to figure out every bit entirely.<br />We know: frequency adjust, RAM disable, RAM write disable, MMIO disable.<br />We are fuzzy on: two bits that each do weird things to the timers, one frequency setting that deadlocks every SMP we've tried it on to date.<br />No games use it at all, but again, fun to do it all the way.<br /><br />&gt; Unfortunately, bsnes seems to have had its debugger 100% removed. I don't know why, but the debugger is totally gone now.<br /><br />Rewrote the GUI. Debugger takes a lot of time to remake. Plan in the future is to have the debugger be a separate GUI entirely. Trying to get it to work with ALL GUI features doesn't work very well.<br /><br />You wouldn't like the current one anyway. I threw out the official SPC700 mnemonics and made my own 6502-alike to match the S-CPU, eg:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">mov a,#$12 -&gt; lda #$12<br />push x -&gt; phx</div><br />It works amazingly well. The chip was clearly a 6502 with the mnemonics changed last-minute (probably) for legal reasons.<br /><br />Anyway, v070 has probably the best debugger.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=375">byuu</a> — Thu Jan 12, 2012 8:39 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[mic_]]></name></author>
<updated>2012-01-09T11:58:49-07:00</updated>
<published>2012-01-09T11:58:49-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8466&amp;p=88693#p88693</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8466&amp;p=88693#p88693"/>
<title type="html"><![CDATA[FPGA SPC / SPC Test ROMs?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8466&amp;p=88693#p88693"><![CDATA[
<div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />I suspect it will basically run, then spit the crc's back to the SNES which can store it in SRAM, then the SRAM can be backed up by a copier and read out that way. I might need some help on writing code to do this...<br /></div><br /><br />Or display it on the screen?  Unless you really want to keep the data for later.<br /><br />Sending data back to the SNES works the same way as for the other direction: you've got your four communication ports ($2140-$2143 on the S-CPU [SNES] side, and $F4-$F7 on the S-SMP [SPC] side).<br /><br />Pseudo-code:<br /><br />S-CPU<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">for &#40;i=0; i &lt; CRC_BYTES/2; i++&#41;<br />&#123;<br />   while &#40;R_SPCCOM0 != i&#41; ;  // Wait for indication of new data<br />   crc&#91;i*2&#93; = R_SPCCOM1;<br />   crc&#91;i*2 + 1&#93; = R_SPCCOM2;<br />   R_SPCCOM0 = i;  // echo the counter back to the S-SMP<br />&#125;<br /></div><br /><br />S-SMP<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">for &#40;i = 0; i &lt; CRC_BYTES/2; i++&#41;<br />&#123;<br />   R_PORT0 = i;    <br />   R_PORT1 = crc&#91;i*2&#93;;<br />   R_PORT2 = crc&#91;i*2 + 1&#93;;<br />   while &#40;R_PORT0 != i&#41; ;  // wait for echo from the S-CPU<br />&#125;<br /></div><br /><br />If you have more than 256 bytes of data to transfer you might want to use ports 0-1 as a 16-bit counter, and ports 2-3 for the actual data bytes.. Or some other combination.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=1181">mic_</a> — Mon Jan 09, 2012 11:58 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[kevtris]]></name></author>
<updated>2012-01-09T10:27:06-07:00</updated>
<published>2012-01-09T10:27:06-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8466&amp;p=88691#p88691</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8466&amp;p=88691#p88691"/>
<title type="html"><![CDATA[FPGA SPC / SPC Test ROMs?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8466&amp;p=88691#p88691"><![CDATA[
<div class="quotetitle">mic_ wrote:</div><div class="quotecontent"><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Unfortunately, bsnes seems to have had its debugger 100% removed. I don't know why, but the debugger is totally gone now. The webpage doesn't even hint that a debugger ever existed. I found links about it the forum here but it all just ends in 404's.<br /></div><br /><br />I've got a copy of the debugger version of BSNES v0.60 (for Windows) that I can put online, unless byuu has any objections.<br /><br />EDIT: <a href="http://jiggawatt.org/notmine/bsnes_v060d.zip" class="postlink">Here's</a> the BSNES 0.60 archive with the debugger.<br /><br />As for loading SPC files from the SNES side, I've got <a href="http://jiggawatt.org/badc0de/spcplayer-1.4.zip" class="postlink">something for that here</a> (source included) (<a href="http://jiggawatt.org/badc0de/spcplayer.htm" class="postlink">more info</a> on how it works).</div><br /><br />Cool thanks for the stuff.<br /><br />update:  The SPC test ROM is more or less done, and tests 254 of the 256 opcodes with around 8000 tests per opcode, followed by CRC32'ing of the results.<br /><br />I have used it to debug my FPGA SPC CPU, and it worked great for this.  I still have a few kinks to work out with the test code then I guess I can post the source to it.  It's not runnable on a real SNES yet, since I don't really know anything about the SNES to get it to spit back data in some usable form.<br /><br />I suspect it will basically run, then spit the crc's back to the SNES which can store it in SRAM, then the SRAM can be backed up by a copier and read out that way.  I might need some help on writing code to do this... I dunno yet.  After I post the source maybe someone can take a look at what I did and go from there.<br /><br />The tests are done fairly simply:  it just loads the registers with randomish values via some tables, runs the instruction, then CRC's all the registers afterwards (a, x, y, flags) and data bytes, if needed (i.e. instructions that modify memory).  This is done with two sets of data, and sometimes two slightly different testing methods.  i.e. page crosses and no page crosses.  <br /><br />I didn't go nuts with testing yet because I wasn't sure if the PC emulators could handle it.  namely things like zeropage wrapping and pcall wrapping among other things.<br /><br />(since someone will probably ask, the two opcodes I cannot test are sleep and stop).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=230">kevtris</a> — Mon Jan 09, 2012 10:27 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[mic_]]></name></author>
<updated>2012-01-05T12:46:28-07:00</updated>
<published>2012-01-05T12:46:28-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8466&amp;p=88470#p88470</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8466&amp;p=88470#p88470"/>
<title type="html"><![CDATA[FPGA SPC / SPC Test ROMs?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8466&amp;p=88470#p88470"><![CDATA[
<div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Unfortunately, bsnes seems to have had its debugger 100% removed. I don't know why, but the debugger is totally gone now. The webpage doesn't even hint that a debugger ever existed. I found links about it the forum here but it all just ends in 404's.<br /></div><br /><br />I've got a copy of the debugger version of BSNES v0.60 (for Windows) that I can put online, unless byuu has any objections.<br /><br />EDIT: <a href="http://jiggawatt.org/notmine/bsnes_v060d.zip" class="postlink">Here's</a> the BSNES 0.60 archive with the debugger.<br /><br />As for loading SPC files from the SNES side, I've got <a href="http://jiggawatt.org/badc0de/spcplayer-1.4.zip" class="postlink">something for that here</a> (source included) (<a href="http://jiggawatt.org/badc0de/spcplayer.htm" class="postlink">more info</a> on how it works).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=1181">mic_</a> — Thu Jan 05, 2012 12:46 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[kevtris]]></name></author>
<updated>2012-01-05T11:08:36-07:00</updated>
<published>2012-01-05T11:08:36-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8466&amp;p=88463#p88463</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8466&amp;p=88463#p88463"/>
<title type="html"><![CDATA[FPGA SPC / SPC Test ROMs?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8466&amp;p=88463#p88463"><![CDATA[
<div class="quotetitle">mic_ wrote:</div><div class="quotecontent"><br />BSNES's debugger let's you step/trace the S-SMP. There's also a memory viewer where you can look at various memory areas (select S-APU bus to look at the SPC RAM).<br /><br />If you trace the execution and everything looks correct from a CPU point-of-view, you could compare what's written to the ENVX registers ($x8) in BSNES and in your DSP implementation. If they don't match then you might have a problem in your envelope handling.<br /></div><br /><br />Unfortunately, bsnes seems to have had its debugger 100% removed.  I don't know why, but the debugger is totally gone now.  The webpage doesn't even hint that a debugger ever existed.  I found links about it the forum here but it all just ends in 404's.<br /><br />marshall did manage to find the source code to an old version and built it with the debugging on but it didn't work.  I could load/run ROMs but the debugger wouldn't work.  it'd just grey out the "step" buttons and do nothing.<br /><br />I spent a lot of time trying to find a debugger that worked, so I finally did.  The mess emulator's debugger has been working pretty good for me now and testing has been proceeding.  It's buggy but I have gotten most of the bugs in it fixed (a buggy debugger. lol).<br /><br />So far, I have come up with a basic opcode testing framework that works like this:<br /><br />There's a 4096 entry linked list table that is loaded into memory, then the code follows the list and uses the addresses generated as input into the opcode testing part, which uses bits of the address to index 4 more random tables (0-255 sequence, no repeats) to generate the psw, a, x, and y values to test the opcodes with.  My coverage is probably going to be pretty close to 100% this way.  I did it this way to remove as much testing bias as possible (I had a nasty bug where X and Y were flipped on indexing for example.. this would've immediately detected that).<br /><br />After running the opcode it builds into memory (using the old linked list address, so things like inc and dec actually modify the old pointers), it then crc32's the psw, a, x, and y registers and after the opcode performs all 4096 tests, it crc's the pointer table in case it was modified.  This final 32 bit crc is then the "fingerprint" for a particular opcode.  This is stuffed into a 2K table (256 opcodes, max of 2 tests per).<br /><br />It sounds complicated but the code is actually fairly small, and a single test routine is about 200 bytes long and tests 36 opcodes with two sets of addresses which does not, and then does cross pages.  That's 72 full tests.  It takes about 50 seconds to run those so a full test ROM run will probably take 10-15 minutes.  But that's the price of accuracy.<br /><br />The only hard part I am going to have is how to test this on a real SNES.  Some kind of snes ROM that loads the data into the SPC, runs it, then reads the results back and saves them into battery-backed RAM is probably the best.  Then a SNES copier (yeah I have one) can be used to save the battery backed RAM to a file to recover the CRCs on the real system.<br /><br />That won't be for a few days though, so any ideas on how to do that would be cool.<br /><br />I finally got the tester debugged and working now, so adding the other opcodes shouldn't take TOO much time.  Right now I have it testing all of the absolute instructions, and absolute indexed instructions.  Today I will round that out hopefully with all of the ALU functions.<br /><br />After this tester is done, it should be relatively easy to port it to the 6502 and have it run on the NES for a kind of "super 6502 tester".<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=230">kevtris</a> — Thu Jan 05, 2012 11:08 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[mic_]]></name></author>
<updated>2012-01-04T10:35:59-07:00</updated>
<published>2012-01-04T10:35:59-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8466&amp;p=88404#p88404</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8466&amp;p=88404#p88404"/>
<title type="html"><![CDATA[FPGA SPC / SPC Test ROMs?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8466&amp;p=88404#p88404"><![CDATA[
BSNES's debugger let's you step/trace the S-SMP. There's also a memory viewer where you can look at various memory areas (select S-APU bus to look at the SPC RAM).<br /><br />If you trace the execution and everything looks correct from a CPU point-of-view, you could compare what's written to the ENVX registers ($x8) in BSNES and in your DSP implementation. If they don't match then you might have a problem in your envelope handling.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=1181">mic_</a> — Wed Jan 04, 2012 10:35 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[kevtris]]></name></author>
<updated>2012-01-04T10:00:19-07:00</updated>
<published>2012-01-04T10:00:19-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8466&amp;p=88398#p88398</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8466&amp;p=88398#p88398"/>
<title type="html"><![CDATA[FPGA SPC / SPC Test ROMs?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8466&amp;p=88398#p88398"><![CDATA[
thanks for the tips so far.  I used that .vgm converter project to debug and that went pretty well.  I have since finished the DSP (well "finished" as in, I got it to play some samples that I stuck in memory and the ADSR seems to be working.<br /><br />All the instructions that are used in the .vgm player seem to be working good but I can't get any SPCs working other than it.  I must have more buggy CPU instructions kicking around.<br /><br />I got a few tunes from equinox to actually sorta work though.  I think I might have some more DSP bugs but haven't really put a lot of effort into it yet to try and fix them since the CPU's so buggy. <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":-)" title="Smile" /><br /><br />I think I will have to make up some kind of test ROM for it since no such ROMs exist that I could find.   Specifically, some kind of instruction test ROM.  I might make a CRC based one kinda like zexall. <br /><br />To help development, is there an SPC player that lets you save the RAM after loading and playing it?  Some of the SNES emulators might do this but it'd save time if someone could tell me of one that does it before I go through and check all of them for one that can do it.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=230">kevtris</a> — Wed Jan 04, 2012 10:00 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2011-12-28T16:14:45-07:00</updated>
<published>2011-12-28T16:14:45-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8466&amp;p=88075#p88075</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8466&amp;p=88075#p88075"/>
<title type="html"><![CDATA[FPGA SPC / SPC Test ROMs?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8466&amp;p=88075#p88075"><![CDATA[
I imagine that the "test cartridges" like the one Hias mentions were designed to test the common ways that an authentic Super NES could malfunction in the field, not exhaustively test that the hardware is authentic. If the SPC700 is authentic, and it can run the 64-byte bootloader, it's probably working enough to rule out most known SPC-related failure modes.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Wed Dec 28, 2011 4:14 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Hias]]></name></author>
<updated>2011-12-28T15:36:30-07:00</updated>
<published>2011-12-28T15:36:30-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8466&amp;p=88074#p88074</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8466&amp;p=88074#p88074"/>
<title type="html"><![CDATA[FPGA SPC / SPC Test ROMs?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8466&amp;p=88074#p88074"><![CDATA[
Do you know this already?<br /><!-- m --><a class="postlink" href="http://tcrf.net/SNES_Test_Program">http://tcrf.net/SNES_Test_Program</a><!-- m --><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5047">Hias</a> — Wed Dec 28, 2011 3:36 pm</p><hr />
]]></content>
</entry>
</feed>