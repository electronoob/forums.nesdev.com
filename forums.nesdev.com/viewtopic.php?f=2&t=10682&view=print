<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Filled second nametable, it blinks occasionally</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Filled second nametable, it blinks occasionally</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=10682">http://forums.nesdev.com/viewtopic.php?f=2&amp;t=10682</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>darkhog</b> [ Wed Nov 13, 2013 11:31 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Filled second nametable, it blinks occasionally</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />...when it shouldn't. Probably again my fault but well... Here's code:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">; Russian Roulette game for NES<br />; Copyright 2010 Damian Yerrick<br />;<br />; Copying and distribution of this file, with or without<br />; modification, are permitted in any medium without royalty<br />; provided the copyright notice and this notice are preserved.<br />; This file is offered as-is, without any warranty.<br />;<br />SCROLLY=$28<br />NMICOUNTER = $03<br />.include &quot;nes.h&quot;<br />.p02<br /><br />.segment &quot;ZEROPAGE&quot;<br /><br />.segment &quot;INESHDR&quot;<br />&nbsp; .byt &quot;NES&quot;,$1A<br />&nbsp; .byt 1&nbsp; ; 16 KiB PRG ROM<br />&nbsp; .byt 1&nbsp; ; 8 KiB CHR ROM<br />&nbsp; .byt 0&nbsp; ; horizontal mirroring; low mapper nibble: 0<br />&nbsp; .byt 0&nbsp; ; high mapper nibble: 0<br /><br />.segment &quot;VECTORS&quot;<br />&nbsp; .addr nmi, reset, irq<br /><br />.segment &quot;CODE&quot;<br /><br />; we don't use irqs yet<br />.proc irq<br />&nbsp; rti<br />.endproc<br /><br />.proc nmi<br />&nbsp; &nbsp;;skipping NMI if $05 is set to $FF<br />&nbsp; &nbsp;lda $05<br />&nbsp; &nbsp;cmp #$FF<br />&nbsp; &nbsp;beq eop<br />&nbsp; &nbsp;; Added this line to reset PPU address latches<br />&nbsp; &nbsp;bit PPUSTATUS<br />&nbsp; &nbsp;lda $28<br />&nbsp; &nbsp;clc<br />&nbsp; &nbsp;adc #$01<br />&nbsp; &nbsp;sta SCROLLY<br />&nbsp; &nbsp;lda #$00<br />&nbsp; &nbsp;sta PPUSCROLL<br />&nbsp; &nbsp;lda SCROLLY<br />&nbsp; &nbsp;sta PPUSCROLL<br />&nbsp; &nbsp;cmp #239<br />&nbsp; &nbsp;bne eop<br />&nbsp; &nbsp;jmp reset_scroll<br />&nbsp; &nbsp;eop:<br />&nbsp; &nbsp;inc NMICOUNTER<br />&nbsp; rti<br />&nbsp; &nbsp;reset_scroll:<br />&nbsp; &nbsp;lda #00<br />&nbsp; &nbsp;sta SCROLLY<br />&nbsp; &nbsp;lda #%00000010<br />&nbsp; &nbsp;eor $25<br />&nbsp; &nbsp;sta $25<br />&nbsp; &nbsp;sta PPUCTRL<br />&nbsp; &nbsp;rti<br />.endproc<br /><br /><br /><br />.proc reset<br />&nbsp; sei<br />&nbsp; ; Acknowledge and disable interrupt sources during bootup<br />&nbsp; stx PPUCTRL&nbsp; &nbsp; ; disable vblank NMI<br />&nbsp; stx PPUMASK&nbsp; &nbsp; ; disable rendering (and rendering-triggered mapper IRQ)<br />&nbsp; lda #$40<br />&nbsp; sta $4017&nbsp; &nbsp; &nbsp; ; disable frame IRQ<br />&nbsp; stx $4010&nbsp; &nbsp; &nbsp; ; disable DPCM IRQ<br />&nbsp; bit PPUSTATUS&nbsp; ; ack vblank NMI<br />&nbsp; bit $4015&nbsp; &nbsp; &nbsp; ; ack DPCM IRQ<br />&nbsp; cld&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ; disable decimal mode to help generic 6502 debuggers<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; http://magweasel.com/2009/08/29/hidden-messagin/<br />&nbsp; dex&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ; set up the stack<br />&nbsp; txs<br /><br />&nbsp; ; Wait for the PPU to warm up (part 1 of 2)<br />vwait1:<br />&nbsp; bit PPUSTATUS<br />&nbsp; bpl vwait1<br /><br />&nbsp; ; While waiting for the PPU to finish warming up, we have about<br />&nbsp; ; 29000 cycles to burn without touching the PPU.&nbsp; So we have time<br />&nbsp; ; to initialize some of RAM to known values.<br />&nbsp; ; Ordinarily the &quot;new game&quot; initializes everything that the game<br />&nbsp; ; itself needs, so we'll just do zero page and shadow OAM.<br />&nbsp; ldy #$00<br />&nbsp; lda #$F0<br />&nbsp; ldx #$01<br />clear_zp:<br />&nbsp; sty $00,x<br />&nbsp; inx<br />&nbsp; bne clear_zp<br />&nbsp; ; disabling NMI<br />&nbsp; lda #$FF<br />&nbsp; ;sta $05<br />&nbsp; <br />&nbsp; ; the most basic sound engine possible<br />&nbsp; ;lda #$0F<br />&nbsp; ;sta $4015<br /><br />&nbsp; ; Wait for the PPU to warm up (part 2 of 2)<br />vwait2:<br />&nbsp; bit PPUSTATUS<br />&nbsp; bpl vwait2<br /><br />&nbsp; ; Draw HELLO WORLD text<br />&nbsp; jsr drawHelloWorld<br />&nbsp; jsr drawface<br />&nbsp; ;setting $00 to detect &quot;soft&quot; reset<br />&nbsp; lda #$12<br />&nbsp; sta $00<br />&nbsp; ; Turn screen on<br />&nbsp; lda #0<br />&nbsp; sta PPUSCROLL<br />&nbsp; sta PPUSCROLL<br />&nbsp; lda #VBLANK_NMI|BG_1000<br />&nbsp; sta $25<br />&nbsp; sta PPUCTRL<br />&nbsp; lda #BG_ON<br />&nbsp; sta PPUMASK<br /><br /><br />mainLoop:<br />&nbsp; jmp mainLoop<br />.endproc<br /><br /><br />.proc cls<br />&nbsp; lda #VBLANK_NMI<br />&nbsp; sta PPUCTRL<br />&nbsp; sta $25<br />&nbsp; lda #$20<br />&nbsp; ldx #$00<br />&nbsp; stx PPUMASK<br />&nbsp; sta PPUADDR<br />&nbsp; stx PPUADDR<br />&nbsp; ldx #240<br />:<br />&nbsp; sta PPUDATA<br />&nbsp; sta PPUDATA<br />&nbsp; sta PPUDATA<br />&nbsp; sta PPUDATA<br />&nbsp; dex<br />&nbsp; bne :-<br />&nbsp; ldx #64<br />&nbsp; lda #0<br />:<br />&nbsp; sta PPUDATA<br />&nbsp; dex<br />&nbsp; bne :-<br />&nbsp; rts<br />.endproc<br /><br />.proc drawHelloWorld<br />&nbsp; jsr cls<br /><br />&nbsp; ; set monochrome palette<br />&nbsp; lda #$3F<br />&nbsp; sta PPUADDR<br />&nbsp; lda #$00<br />&nbsp; sta PPUADDR<br />&nbsp; ldx #8<br />:<br />&nbsp; &nbsp;lda $00<br />&nbsp; &nbsp;cmp #$12<br />&nbsp; &nbsp;beq resetpal<br />&nbsp; lda #$11<br />&nbsp; sta PPUDATA<br />&nbsp; sta PPUDATA<br />&nbsp; lda #$28<br />&nbsp; sta PPUDATA<br />&nbsp; lda #$31<br />&nbsp; sta PPUDATA<br />&nbsp; jmp contloading<br />resetpal:<br />&nbsp; &nbsp;lda #$DE<br />&nbsp; sta PPUDATA<br />&nbsp; sta PPUDATA<br />&nbsp; lda #$10<br />&nbsp; sta PPUDATA<br />&nbsp; lda #$30<br />&nbsp; sta PPUDATA<br />contloading:<br />&nbsp; dex<br />&nbsp; bne :-<br />&nbsp; &nbsp;<br />&nbsp; ; load source and destination addresses<br />&nbsp; lda #&gt;helloWorld<br />&nbsp; sta 1<br />&nbsp; lda #&lt;helloWorld<br />&nbsp; sta 0<br />&nbsp; lda #$20<br />&nbsp; sta 3<br />&nbsp; lda #$62<br />&nbsp; sta 2<br />&nbsp; ; fall through<br />.endproc<br />.proc printMsg<br />dstLo = 2<br />dstHi = 3<br />src = 0<br />&nbsp; lda dstHi<br />&nbsp; sta PPUADDR<br />&nbsp; lda dstLo<br />&nbsp; sta PPUADDR<br />&nbsp; ldy #0<br />loop:<br />&nbsp; lda (src),y<br />&nbsp; beq done<br />&nbsp; iny<br />&nbsp; bne :+<br />&nbsp; inc src+1<br />:<br />&nbsp; cmp #10<br />&nbsp; beq newline<br />&nbsp; sta PPUDATA<br />&nbsp; bne loop<br />newline:<br />&nbsp; lda #32<br />&nbsp; clc<br />&nbsp; adc dstLo<br />&nbsp; sta dstLo<br />&nbsp; lda #0<br />&nbsp; adc dstHi<br />&nbsp; sta dstHi<br />&nbsp; sta PPUADDR<br />&nbsp; lda dstLo<br />&nbsp; sta PPUADDR<br />&nbsp; jmp loop<br />done:<br />&nbsp; rts<br />.endproc<br /><br />.proc drawface<br />&nbsp; &nbsp;lda PPUSTATUS<br />&nbsp; &nbsp;lda #$2C<br />&nbsp; &nbsp;sta PPUADDR<br />&nbsp; &nbsp;lda #$00<br />&nbsp; &nbsp;sta PPUADDR<br />&nbsp; &nbsp;ldy #$00<br />&nbsp; &nbsp;loop:<br />&nbsp; &nbsp;lda face,y<br />&nbsp; &nbsp;sta PPUDATA<br />&nbsp; &nbsp;iny<br />&nbsp; &nbsp;sty $A1<br />&nbsp; &nbsp;lda $A1<br />&nbsp; &nbsp;cmp #160<br />&nbsp; &nbsp;bne loop<br />&nbsp; &nbsp;ldy #00<br />&nbsp; &nbsp;loop2:<br />&nbsp; &nbsp;lda face2,y<br />&nbsp; &nbsp;sta PPUDATA<br />&nbsp; &nbsp;iny<br />&nbsp; &nbsp;sty $A1<br />&nbsp; &nbsp;lda $A1<br />&nbsp; &nbsp;cmp #160<br />&nbsp; &nbsp;bne loop2<br />&nbsp; &nbsp;ldy #00<br />&nbsp; &nbsp;loop3:<br />&nbsp; &nbsp;lda face3,y<br />&nbsp; &nbsp;sta PPUDATA<br />&nbsp; &nbsp;iny<br />&nbsp; &nbsp;sty $A1<br />&nbsp; &nbsp;lda $A1<br />&nbsp; &nbsp;cmp #160<br />&nbsp; &nbsp;bne loop3<br />&nbsp; &nbsp;ldy #00<br />&nbsp; &nbsp;loop4:<br />&nbsp; &nbsp;lda face4,y<br />&nbsp; &nbsp;sta PPUDATA<br />&nbsp; &nbsp;iny<br />&nbsp; &nbsp;sty $A1<br />&nbsp; &nbsp;lda $A1<br />&nbsp; &nbsp;cmp #160<br />&nbsp; &nbsp;bne loop4<br />&nbsp; &nbsp;ldy #00<br />&nbsp; &nbsp;loop5:<br />&nbsp; &nbsp;lda face5,y<br />&nbsp; &nbsp;sta PPUDATA<br />&nbsp; &nbsp;iny<br />&nbsp; &nbsp;sty $A1<br />&nbsp; &nbsp;lda $A1<br />&nbsp; &nbsp;cmp #160<br />&nbsp; &nbsp;bne loop5<br />&nbsp; &nbsp;ldy #00<br />&nbsp; &nbsp;loop6:<br />&nbsp; &nbsp;lda face6,y<br />&nbsp; &nbsp;sta PPUDATA<br />&nbsp; &nbsp;iny<br />&nbsp; &nbsp;sty $A1<br />&nbsp; &nbsp;lda $A1<br />&nbsp; &nbsp;cmp #160<br />&nbsp; &nbsp;bne loop6<br />&nbsp; &nbsp;rts<br />.endproc<br /><br />.segment &quot;RODATA&quot;<br />helloWorld:<br />&nbsp; .byt 10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,&quot;Hello, player!&quot;,10,&quot;I'd like to give you this game&quot;,10,&quot;to play&quot;,10,&quot;&nbsp; &nbsp; &nbsp; &nbsp;this with your friends!&quot;,0<br />face:<br />&nbsp; .byt 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0<br />&nbsp; .byt 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0<br />&nbsp; .byt 0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0<br />&nbsp; .byt 0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0<br />&nbsp; .byt 0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0<br />face2:<br />&nbsp; .byt 0,0,0,0,0,0,0,0,0,2,0,0,2,2,0,0,2,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0<br />&nbsp; .byt 0,0,0,0,0,0,0,0,0,2,0,0,2,2,0,0,2,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0<br />&nbsp; .byt 0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0<br />&nbsp; .byt 0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0<br />&nbsp; .byt 0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0<br />face3:<br />&nbsp; .byt 0,0,0,0,0,0,0,0,0,2,0,2,0,0,0,0,0,0,2,0,2,0,0,0,0,0,0,0,0,0,0,0<br />&nbsp; .byt 0,0,0,0,0,0,0,0,0,2,0,0,2,2,2,2,2,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0<br />&nbsp; .byt 0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0<br />&nbsp; .byt 0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0<br />&nbsp; .byt 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0<br />face4:<br />&nbsp; .byt 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0<br />&nbsp; .byt 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0<br />&nbsp; .byt 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0<br />&nbsp; .byt 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0<br />&nbsp; .byt 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0<br />face5:<br />&nbsp; .byt 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0<br />&nbsp; .byt 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0<br />&nbsp; .byt 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0<br />&nbsp; .byt 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0<br />&nbsp; .byt 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0<br />face6:<br />&nbsp; .byt 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0<br />&nbsp; .byt 0,0,0,0,0,0,0,0,0,&quot;P&quot;,&quot;R&quot;,&quot;E&quot;,&quot;S&quot;,&quot;S&quot;,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0<br />&nbsp; .byt 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0<br />&nbsp; .byt 0,0,0,0,0,0,0,0,0,0,0,&quot;S&quot;,&quot;T&quot;,&quot;A&quot;,&quot;R&quot;,&quot;T&quot;,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0<br />&nbsp; .byt 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0</div><br /><br />and the rom:

		
			<br clear="all" /><br />

			<table class="tablebg" width="100%" cellspacing="1">
			<tr>
				<td><b class="genmed">Attachments: </b></td>
			</tr>
			
				<tr>
					<td>
			<span class="genmed">
				<img src="./styles/subsilver2/imageset/icon_topic_attach.gif" width="14" height="18" alt="" title="" /> 
				<a href="./download/file.php?id=942">hello_world.nes</a> [24.02 KiB]
			</span><br />
			<span class="gensmall">Downloaded 26 times</span>
		

		<br />
	</td>
				</tr>
			
			</table>
		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dwedit</b> [ Wed Nov 13, 2013 12:03 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Filled second nametable, it blinks occasionally</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />You are setting X scroll to 0 and leaving Y scroll at 239 when you reach Y = 239.<br />You should also be checking 240 instead of 239.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>darkhog</b> [ Wed Nov 13, 2013 6:04 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Filled second nametable, it blinks occasionally</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />When I check for 240, it stops for one frame which means not smooth scroll. And for the second I have only one thing to say: Whoops!

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>qbradq</b> [ Wed Nov 13, 2013 6:16 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Filled second nametable, it blinks occasionally</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />No worries. NES development has a lot of woopses involved <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /> More experienced developers don't necessarily have fewer, they just get better at debugging them on their own. I think you're skill is coming along very quickly comparatively. Do you have any prior experience with assembly?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>darkhog</b> [ Wed Nov 13, 2013 6:24 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Filled second nametable, it blinks occasionally</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Not with actual processor assembly, only with Notch's DCPU16, but I have experience with programming in general. Bitwise operators, binary/hex, things like that.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Movax12</b> [ Wed Nov 13, 2013 7:01 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Filled second nametable, it blinks occasionally</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">darkhog wrote:</div><div class="quotecontent">...when it shouldn't. Probably again my fault but well... Here's code:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">.proc nmi<br />&nbsp; &nbsp;;skipping NMI if $05 is set to $FF<br />&nbsp; &nbsp;lda $05<br />&nbsp; &nbsp;cmp #$FF<br />&nbsp; &nbsp;beq eop<br /></div><br /></div><br /><br />Careful here. I know your not there yet, but when you are: If your main thread isn't ready, and you exit NMI, you have changed the accumulator.. your main thread will have no idea that it has changed. You could save the accumulator first, but you could also use BIT to test the flag variable and branch on the N flag. A, X and Y will not be changed and RTI will restore the status register.   <br />( <!-- m --><a class="postlink" href="http://www.obelisk.demon.co.uk/6502/reference.html#BIT">http://www.obelisk.demon.co.uk/6502/reference.html#BIT</a><!-- m --> )<br /><br />I understand you are learning, so hopefully this helps as well:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp;<br />&nbsp; &nbsp;lda $28<br />&nbsp; &nbsp;clc<br />&nbsp; &nbsp;adc #$01<br />&nbsp; &nbsp;sta SCROLLY<br />&nbsp; &nbsp;lda #$00<br />&nbsp; &nbsp;sta PPUSCROLL<br />&nbsp; &nbsp;lda SCROLLY<br />&nbsp; &nbsp;sta PPUSCROLL<br /></div><br /><br />I like to optimize, or at least attempt to. Consider taking advantage of the other registers to optimize a bit, avoid incrementing with the accumulator:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp;<br />&nbsp; &nbsp;ldx SCROLLY<br />&nbsp; &nbsp;inx<br />&nbsp; &nbsp;stx SCROLLY<br />&nbsp; &nbsp;lda #$00<br />&nbsp; &nbsp;sta PPUSCROLL<br />&nbsp; &nbsp;stx PPUSCROLL<br /></div><br /><br />or maybe better yet:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp;<br />&nbsp; &nbsp;inc SCROLLY<br />&nbsp; &nbsp;lda #$00<br />&nbsp; &nbsp;sta PPUSCROLL<br />&nbsp; &nbsp;lda SCROLLY<br />&nbsp; &nbsp;sta PPUSCROLL<br /></div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>darkhog</b> [ Thu Nov 14, 2013 3:11 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Filled second nametable, it blinks occasionally</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Thanks for the tips!<br /><div class="quotetitle">Movax12 wrote:</div><div class="quotecontent">Careful here. I know your not there yet, but when you are: If your main thread isn't ready, and you exit NMI, you have changed the accumulator.. your main thread will have no idea that it has changed. You could save the accumulator first, but you could also use BIT to test the flag variable and branch on the N flag. A, X and Y will not be changed and RTI will restore the status register.   <br />( <!-- m --><a class="postlink" href="http://www.obelisk.demon.co.uk/6502/reference.html#BIT">http://www.obelisk.demon.co.uk/6502/reference.html#BIT</a><!-- m --> )</div><br />Or I could just reset accumulator at the start of main loop <img src="./images/smilies/icon_wink.gif" alt=";)" title="Wink" /><br /><br /><div class="quotetitle">Movax12 wrote:</div><div class="quotecontent">I understand you are learning, so hopefully this helps as well:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp;<br />&nbsp; &nbsp;lda $28<br />&nbsp; &nbsp;clc<br />&nbsp; &nbsp;adc #$01<br />&nbsp; &nbsp;sta SCROLLY<br />&nbsp; &nbsp;lda #$00<br />&nbsp; &nbsp;sta PPUSCROLL<br />&nbsp; &nbsp;lda SCROLLY<br />&nbsp; &nbsp;sta PPUSCROLL<br /></div><br /><br />I like to optimize, or at least attempt to. Consider taking advantage of the other registers to optimize a bit, avoid incrementing with the accumulator:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp;<br />&nbsp; &nbsp;ldx SCROLLY<br />&nbsp; &nbsp;inx<br />&nbsp; &nbsp;stx SCROLLY<br />&nbsp; &nbsp;lda #$00<br />&nbsp; &nbsp;sta PPUSCROLL<br />&nbsp; &nbsp;stx PPUSCROLL<br /></div><br /><br />or maybe better yet:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp;<br />&nbsp; &nbsp;inc SCROLLY<br />&nbsp; &nbsp;lda #$00<br />&nbsp; &nbsp;sta PPUSCROLL<br />&nbsp; &nbsp;lda SCROLLY<br />&nbsp; &nbsp;sta PPUSCROLL<br /></div></div><br />Thanks, will use that. Dunno why I didn't think about this before <img src="./images/smilies/icon_wink.gif" alt=";)" title="Wink" />.<br /><br />//edit: Also my programming is working like that: First I make sure code does work, then I optimize if it runs at unsatisfactory speed.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Kasumi</b> [ Thu Nov 14, 2013 4:24 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Filled second nametable, it blinks occasionally</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Or I could just reset accumulator at the start of main loop <img src="./images/smilies/icon_wink.gif" alt=";)" title="Wink" /></div><br />Err... no, that wouldn't fix what he's describing, and makes assumptions like &quot;the program will never take longer than a frame to run.&quot; (A bad assumption to make on NES.) The NMI interrupts the main loop to run itself. <br /><br />Here's a simple example: Say you've got a loop where you're storing zero a lot of times. Something like this.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">lda #$00<br />tay<br />loop:<br />sta someplace,y<br />dey<br />bne loop<br /></div><br /><br />You NMI fires right in the middle of this loop. Your NMI changes A somehow (let's say to #$FF). When you RTI from the NMI back to your loop, #$FF is now in A. Your loop has no idea that happened and is now storing #$FF to someplace,y instead of #$00 as you expect. This can result in hard to find bugs. So the idea is to save your registers (A, X and Y) at the beginning of the NMI, so that you can restore them to what what your code expects them to be before you return with RTI. Then the code can resume as if nothing has changed. Alternatively, straight up don't change them UNLESS the main loop is ready, which is why Movax suggested to use BIT for that test. BIT doesn't change A.<br /><br />Try not to dismiss those trying to help. I may be reading too much into it, but that wink was like, &quot;Yeah, yeah I know that.&quot; When there's more to the story.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>darkhog</b> [ Thu Nov 14, 2013 4:32 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Filled second nametable, it blinks occasionally</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Ah, okay... Will save registers to memory and restore at end of nmi like a good boy <img src="./images/smilies/icon_wink.gif" alt=";)" title="Wink" />.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>