<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=12&amp;t=9131" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2012-07-30T03:29:11-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=12&amp;t=9131</id>
<entry>
<author><name><![CDATA[byuu]]></name></author>
<updated>2012-07-30T03:29:11-07:00</updated>
<published>2012-07-30T03:29:11-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9131&amp;p=97294#p97294</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9131&amp;p=97294#p97294"/>
<title type="html"><![CDATA[The tools suck]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9131&amp;p=97294#p97294"><![CDATA[
<div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Converting practically might overwrite some ASM that can use the '';'' symbol<br /></div><br /><br />Replace ";" with "//"<br />Replace " : " with "; "<br />Done.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Plus defines and macros use a wierder format, I perfer this, for example:<br /><br />MACRO (you forgot name) value1, value2<br />LDA #value1<br /></div><br /><br />Me too, but it's far more limited.<br /><br />Let's say you wanted a macro that loads #$xx00.<br /><br />lda #$value00  //whoops, value00 not found<br />lda #${value}00  //hooray, works fine<br /><br />Let's say you have a macro inside a macro, so you want to build a label from two values.<br /><br />lda value1value2  //whoops, value1value2 not found<br />lda x{value1}{value2}y  //hooray, works fine<br /><br />What happens if you use a simple value name? Like say:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">macro add x, y<br />  lda x; clc; adc y; sta $00,x  //whoops, the x in sta $00,x gets replaced too<br />  lda &#123;x&#125;; clc; adc &#123;y&#125;; sta $00,x  //works fine<br />endmacro</div><br /><br />Now imagine that at the global scope?<br />define x $00  //prepare for hell<br /><br />What if I wanted a macro that turns another macro into a function?<br />(This is a great way to have a huge library of functions and only pay for what you use in ROM space.)<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">macro import name, arg1, arg2<br />  &#123;name&#125;:; &#123;&#123;name&#125; &#123;arg1&#125;, &#123;arg2&#125;&#125;; rts<br />endmacro<br /><br />macro importas alias, name, arg1, arg2<br />  &#123;alias&#125;:; &#123;&#123;name&#125; &#123;arg1&#125;, &#123;arg2&#125;&#125;; rts<br />endmacro<br /><br />&#123;import add, $10, $20&#125;<br />&#123;importas add2, add, $30, $40&#125;<br />jsr add<br />jsr add2</div><br /><br />How do you handle inline arguments?<br />lda #square(16)  //wait, is () part of an expression?<br />lda #{square 16}  //fully unambiguous<br /><br />How do you tell the difference between a label and define/macro quickly?<br /><br />And now I can't have labels that have the same name as defines or macros. The two are very different. A label can be defined after it is used (two pass assembly), a define must be declared first, and can be redeclared later on. Labels are value substitions (no formatting: lda label == lda 123); defines/macros are string substitutions (formatting: lda {defiine} = lda $0123)<br /><br />Bumpers on the left *and* right allow you a lot more control than no bumpers at all. Since macros are meant to <em>generate</em> code, they should have them. Since labels are meant to reference functions, they can omit them.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=375">byuu</a> — Mon Jul 30, 2012 3:29 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[koitsu]]></name></author>
<updated>2012-07-29T17:53:21-07:00</updated>
<published>2012-07-29T17:53:21-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9131&amp;p=97274#p97274</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9131&amp;p=97274#p97274"/>
<title type="html"><![CDATA[The tools suck]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9131&amp;p=97274#p97274"><![CDATA[
Tepples, did you do this?  Split this thread off from the other?  The Subject made me RL LOL.  You bastard you!<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3">koitsu</a> — Sun Jul 29, 2012 5:53 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Hamtaro126]]></name></author>
<updated>2012-07-29T17:38:36-07:00</updated>
<published>2012-07-29T17:38:36-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9131&amp;p=97273#p97273</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9131&amp;p=97273#p97273"/>
<title type="html"><![CDATA[The tools suck]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9131&amp;p=97273#p97273"><![CDATA[
X816 has no use anymore for me, Even in dosbox! Because Dos is practically not used anymore,<br /><br />About BASS: Comment Syntax Formatting also the problem, Converting practically might overwrite some ASM that can use the '';'' symbol when you convert to the C-based ''//'' and ''/* */'' formats, <br /><br />Plus defines and macros use a wierder format, I perfer this, for example:<br /><br />MACRO value1, value2<br />LDA #value1<br />STA store1<br />LDA #value2<br />STA store2<br />ENDMACRO ; or ENDM as an alias<br /><br />EDIT: Seperate Assembler-related problems to another post if needed.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=287">Hamtaro126</a> — Sun Jul 29, 2012 5:38 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[byuu]]></name></author>
<updated>2012-07-29T15:08:55-07:00</updated>
<published>2012-07-29T15:08:55-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9131&amp;p=97271#p97271</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9131&amp;p=97271#p97271"/>
<title type="html"><![CDATA[The tools suck]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9131&amp;p=97271#p97271"><![CDATA[
&gt; BASS is harder than XKAS as it is not in the original syntax.<br /><br />Different, not harder. You can even make it the same by dynamically adding instructions to the table file, or specifying your own table. I'll probably allow for the "lda.b" style syntax with v08 out of the box. There's really just no "nice" way of handling lda 0 being ($00, $0000, $000000) or lda #0 being (#$00 or #$0000). You either fuck up vertical alignment (.b, .w, .l) or you harm readability (#&lt;0, #&gt;0)<br /><br />The only real limitation is that bass is a patching assembler, and not a linker. It has always been intended to aid in translating JRPGs that you don't have the source to.<br />This makes it hard to make full-fledged games, because you don't get nice exports between ASM files. So to do that, you have to make a shared header for globals, and a calling system for functions between objects.<br /><br />Or you can do what I do, and just invoke bass one time, and have that file incsrc all the others. Along with namespace support, bass has no problems assembling 10MB+ of ASM code in under a second.<br /><br />WLA can link, but the mapping red tape compared to ... everything else, ever ... is far greater than the difference between MASM and YASM.<br /><br />&gt; I tend to stick to Norman Yen's x816 DOS-based assembler<br /><br />Nobody ever moves from their original software. I am just as guilty, I use Hex Workshop v2.54 and Winamp 2. At least you aren't using TRASM :D<br /><br />SNES assemblers in particular have tended to click with interesting cliques.<br /><br />Demo scene: x816<br />Homebrew scene: WLA-DX<br />ROM hacking scene: xkas v06<br />blargg alone: CA65<br />Anyone who has written their own assembler: their own assembler (for me, this is bass); userbase size: 1<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=375">byuu</a> — Sun Jul 29, 2012 3:08 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[koitsu]]></name></author>
<updated>2012-07-29T14:58:20-07:00</updated>
<published>2012-07-29T14:58:20-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9131&amp;p=97270#p97270</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9131&amp;p=97270#p97270"/>
<title type="html"><![CDATA[The tools suck]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9131&amp;p=97270#p97270"><![CDATA[
It sounds like the general <a href="http://nesdev.com/bbs/viewtopic.php?p=97265#97265" class="postlink">complaint</a> then is with the tools (assemblers) used, and not so much with the architecture.<br /><br />I haven't messed around with WLA DX (I've downloaded it but it has been many years since I've tinkered with it), and the whole CA65/CC65 suite I avoid like the plague (personal choice, not worth debating/discussing please).  I tend to stick to Norman Yen's x816 DOS-based assembler, although people end up trying to do crazy things with it like assemble source files which are &gt;1MByte in size (not enough XMS memory for that; it doesn't use EMS to my knowledge), blah blah.  There are ways around that too.<br /><br />Anyway, yep, the tools suck.  I'm hearing you on FM.  But there are workarounds for all of them to accomplish what you need, and that's pretty much what you're going to have to do.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3">koitsu</a> — Sun Jul 29, 2012 2:58 pm</p><hr />
]]></content>
</entry>
</feed>