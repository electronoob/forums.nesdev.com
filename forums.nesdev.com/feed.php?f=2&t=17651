<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=2&amp;t=17651" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2018-08-10T16:06:04-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=2&amp;t=17651</id>
<entry>
<author><name><![CDATA[DRW]]></name></author>
<updated>2018-08-10T05:35:39-07:00</updated>
<published>2018-08-10T05:35:39-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=17651&amp;p=223246#p223246</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=17651&amp;p=223246#p223246"/>
<title type="html"><![CDATA[Re: MMC3: What happens if a bank switch is interrupted by NM]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=17651&amp;p=223246#p223246"><![CDATA[
<div class="quotetitle">Kasumi wrote:</div><div class="quotecontent"><br />If it really resets the mirroring a wiki update may be in order.<br /></div><br />I'm not quite sure. I just suspected it, I didn't do actual tests.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6156">DRW</a> — Fri Aug 10, 2018 5:35 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Kasumi]]></name></author>
<updated>2018-08-10T05:32:13-07:00</updated>
<published>2018-08-10T05:32:13-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=17651&amp;p=223245#p223245</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=17651&amp;p=223245#p223245"/>
<title type="html"><![CDATA[Re: MMC3: What happens if a bank switch is interrupted by NM]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=17651&amp;p=223245#p223245"><![CDATA[
If it really resets the mirroring a wiki update may be in order. <br /><br />It says it rewrites Control OR $0C. That does force control to &quot;fix last bank at $C000 and switch 16 KB bank at $8000&quot;, but that's how I'd personally have it set up anyway. If the wiki is right (and I'm understanding the wiki correctly), the mirroring doesn't change and neither does CHR ROM bank mode. <br /><br />So you're correct that my method would not work if you preferred a different PRG mode (or switched at run time). Otherwise it might be fine. But code is king, so I'll just write a test ROM when I've got a minute.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3504">Kasumi</a> — Fri Aug 10, 2018 5:32 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[DRW]]></name></author>
<updated>2018-08-10T05:17:32-07:00</updated>
<published>2018-08-10T05:17:32-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=17651&amp;p=223244#p223244</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=17651&amp;p=223244#p223244"/>
<title type="html"><![CDATA[Re: MMC3: What happens if a bank switch is interrupted by NM]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=17651&amp;p=223244#p223244"><![CDATA[
Right. I just had a look at my code again: I indeed have that in the beginning of the program flow.<br />It resets the whole mapper, including the general bank setup (which one is the fixed bank, which one the variable) and the mirroring.<br /><br />Since there's probably no way to reset <em>just</em> the writes to $E000, I did the thing with the flag:<br /><br />After the start, before any write to $8000 for the mirroring or $E000 for the bank, a variable in incremented and later decremented again.<br /><br />If NMI hits and it detects that this variable is not 0, it immediately exits, even without updating the music. (Since music updates would require another bank switch.)<br /><br />In my setup, I never try to correct incomplete MMC1 writes because I make sure that there can never be any incomplete writes to begin with.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6156">DRW</a> — Fri Aug 10, 2018 5:17 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Kasumi]]></name></author>
<updated>2018-08-10T04:56:59-07:00</updated>
<published>2018-08-10T04:56:59-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=17651&amp;p=223243#p223243</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=17651&amp;p=223243#p223243"/>
<title type="html"><![CDATA[Re: MMC3: What happens if a bank switch is interrupted by NM]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=17651&amp;p=223243#p223243"><![CDATA[
By writing a set high bit to $8000, right?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3504">Kasumi</a> — Fri Aug 10, 2018 4:56 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[DRW]]></name></author>
<updated>2018-08-10T04:52:38-07:00</updated>
<published>2018-08-10T04:52:38-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=17651&amp;p=223242#p223242</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=17651&amp;p=223242#p223242"/>
<title type="html"><![CDATA[Re: MMC3: What happens if a bank switch is interrupted by NM]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=17651&amp;p=223242#p223242"><![CDATA[
So, how do you reset the MMC1 register, so that it definitely jumps back to zero writes, no matter how many writes have already happened?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6156">DRW</a> — Fri Aug 10, 2018 4:52 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Kasumi]]></name></author>
<updated>2018-08-10T03:13:18-07:00</updated>
<published>2018-08-10T03:13:18-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=17651&amp;p=223236#p223236</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=17651&amp;p=223236#p223236"/>
<title type="html"><![CDATA[Re: MMC3: What happens if a bank switch is interrupted by NM]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=17651&amp;p=223236#p223236"><![CDATA[
I admit I only skimmed this, so apologies if this method is already here.<br /><br />I write the intent of my bank switch to shadow RAM before I bank switch. At the end of my NMI, it reads the shadow RAM and does the intent unconditionally. I do this for MMC3, but I think it'd work for most mappers. <br /><br />My understanding of MMC1 might be shaky having not used it, but I think this might even work for it. Suppose an NMI interrupts after say... the third write.<br /><br />The NMI does whatever it will do, and then resets the shift register, loads the shadow RAM and does the five writes to swap in that bank that the code it interrupted was trying to swap in. It returns. The code does two more writes. Nothing happens because only the fifth write matters.<br /><br />But nothing happening doesn't matter because the right bank is already in thanks to the NMI. This does mean you have to reset the shift register for every bank swap, but that's not that bad. Let me know if that's wrong!<br /><br />For mappers where only one write swaps, you end up swapping in the bank that's already there (because the NMI already did it) in the worst case, but that also doesn't matter.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3504">Kasumi</a> — Fri Aug 10, 2018 3:13 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[calima]]></name></author>
<updated>2018-08-10T01:11:01-07:00</updated>
<published>2018-08-10T01:11:01-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=17651&amp;p=223233#p223233</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=17651&amp;p=223233#p223233"/>
<title type="html"><![CDATA[Re: MMC3: What happens if a bank switch is interrupted by NM]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=17651&amp;p=223233#p223233"><![CDATA[
<div class="quotetitle">Sumez wrote:</div><div class="quotecontent"><br />I'm curious about scenarios where it makes sense to bank switch outside of NMI, but also outside of timed code (ie. on a specific scanline, NMI guaranteed to not happen).<br />I'm guessing it would be related to a special case requiring you to read data from another bank? but I can't imagine a scenario where I really need to do that while rendering is turned on.<br /></div><br />Reading data or code along normal execution. Say common code is bank 0, enemy 0-3 code is bank 1, enemy 4-7 is bank 2, etc. If you have enemy 2 and enemy 6 visible, then you naturally need to switch there to execute their logic.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=7237">calima</a> — Fri Aug 10, 2018 1:11 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[rainwarrior]]></name></author>
<updated>2018-08-10T00:39:04-07:00</updated>
<published>2018-08-10T00:39:04-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=17651&amp;p=223230#p223230</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=17651&amp;p=223230#p223230"/>
<title type="html"><![CDATA[Re: MMC3: What happens if a bank switch is interrupted by NM]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=17651&amp;p=223230#p223230"><![CDATA[
Ah, verify and retry. I see. That makes sense.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5165">rainwarrior</a> — Fri Aug 10, 2018 12:39 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2018-08-10T00:31:43-07:00</updated>
<published>2018-08-10T00:31:43-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=17651&amp;p=223228#p223228</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=17651&amp;p=223228#p223228"/>
<title type="html"><![CDATA[Re: MMC3: What happens if a bank switch is interrupted by NM]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=17651&amp;p=223228#p223228"><![CDATA[
No, no, I actually meant for any mapper with non-atomic switching. Something like this:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">  lda #04 ;try to select bank 4<br />SelectBank:<br />  ;&#91;MAPPER-SPECIFIC CODE TO SELECT BANK GOES HERE&#93;<br />  cmp BankNumber ;see if the desired bank number matches what the ROM says is mapped<br />  bne SelectBank ;keep trying until you get a match...</div><br />MMC1 would require trashing the accumulator though, so you'd probably have to copy the bank number to X or Y for the comparison.<br /><br />Nothing groundbreaking or particularly innovative, it's just that sometimes we already have identifiers in every bank (like in the example rainwarrior mentioned), and also the bank number in a register, so this comparison can be cheaper than using flags and/or shadow registers.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Fri Aug 10, 2018 12:31 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[rainwarrior]]></name></author>
<updated>2018-08-10T16:06:04-07:00</updated>
<published>2018-08-10T00:04:21-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=17651&amp;p=223226#p223226</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=17651&amp;p=223226#p223226"/>
<title type="html"><![CDATA[Re: MMC3: What happens if a bank switch is interrupted by NM]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=17651&amp;p=223226#p223226"><![CDATA[
It's not a technique for MMC1, and probably not MMC3 either.<br /><br />It's useful for e.g. UxROM or AxROM that have more atomic state, if you need to bankswitch in an IRQ or NMI you can inspect the bank number to know what to put back afterward.<br /><br /><em>Edit: tokumaru was suggesting a diffferent technique than I thought: verify and retry. See below.</em><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5165">rainwarrior</a> — Fri Aug 10, 2018 12:04 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[DRW]]></name></author>
<updated>2018-08-10T00:02:23-07:00</updated>
<published>2018-08-10T00:02:23-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=17651&amp;p=223224#p223224</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=17651&amp;p=223224#p223224"/>
<title type="html"><![CDATA[Re: MMC3: What happens if a bank switch is interrupted by NM]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=17651&amp;p=223224#p223224"><![CDATA[
<div class="quotetitle">tokumaru wrote:</div><div class="quotecontent"><br />Just thought of another way to detect a botched PRG bankswitch that doesn't require flags: it's common practice to store the number of the bank at a fixed location in each bank, and if that's the case, you can just compare the desired bank number against that location after the switch is supposedly done, and repeat the process if there's no match.<br /></div><br />But how would you do this, for example, in MMC1?<br /><br />MMC1 requires five writes to the same register. How would you detect whether the NMI hit in the middle of these writes by simply comparing the bank?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6156">DRW</a> — Fri Aug 10, 2018 12:02 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2018-08-09T22:36:39-07:00</updated>
<published>2018-08-09T22:36:39-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=17651&amp;p=223217#p223217</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=17651&amp;p=223217#p223217"/>
<title type="html"><![CDATA[Re: MMC3: What happens if a bank switch is interrupted by NM]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=17651&amp;p=223217#p223217"><![CDATA[
Just thought of another way to detect a botched PRG bankswitch that doesn't require flags: it's common practice to store the number of the bank at a fixed location in each bank, and if that's the case, you can just compare the desired bank number against that location after the switch is supposedly done, and repeat the process if there's no match.<br /><br />There are better solutions for the MMC3, as has already been explained, but maybe this could work well for another mapper.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Thu Aug 09, 2018 10:36 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Jarhmander]]></name></author>
<updated>2018-08-09T21:47:26-07:00</updated>
<published>2018-08-09T21:47:26-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=17651&amp;p=223214#p223214</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=17651&amp;p=223214#p223214"/>
<title type="html"><![CDATA[Re: MMC3: What happens if a bank switch is interrupted by NM]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=17651&amp;p=223214#p223214"><![CDATA[
What I like about the FME-7 over the other mappers (like MMC3) is that its simple protocol for its functions lends to very simple and fool-proof code when dealing with its registers:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">;; calling with A: mapper register value, X: mapper register address<br />    stx mapper_reg  ; shadow register<br />    stx $8000<br />    sta $A000<br /></div><br />Moreover, you can as easily remember the PRG banks, should you need to change/restore them in NMI:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">switch_prgbank:<br />    sta mapper_prgbank_save - 8, x<br />    ; fallthrough to this function (optimized tail-call)<br />mapper_write:<br />    stx mapper_reg<br />    stx $8000<br />    sta $A000<br /></div><br /><br />Here, <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">mapper_prgbank_save</tt> is an array big enough for the 4 PRG bank registers, and we assume that this function is called only when switching PRG banks (where X=8..B) outside of NMI. The NMI just have to restore the PRG banks and write <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">mapper_reg</tt> to $8000 at its end.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=336">Jarhmander</a> — Thu Aug 09, 2018 9:47 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[thefox]]></name></author>
<updated>2018-08-09T13:29:51-07:00</updated>
<published>2018-08-09T13:29:51-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=17651&amp;p=223176#p223176</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=17651&amp;p=223176#p223176"/>
<title type="html"><![CDATA[Re: MMC3: What happens if a bank switch is interrupted by NM]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=17651&amp;p=223176#p223176"><![CDATA[
<div class="quotetitle">bleubleu wrote:</div><div class="quotecontent"><br />Oh thanks. I didn't consider the scanline IRQ could also interfere.<br /></div><br />NMI (or another IRQ) could technically interrupt your IRQ handler, but how often do you really have an IRQ at the bottom of the screen? So it depends.<br /><br />If you want to make it really foolproof, push shadow8000 on stack and restore as you'd CPU registers. Then you're only limited by the stack size.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=80">thefox</a> — Thu Aug 09, 2018 1:29 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[bleubleu]]></name></author>
<updated>2018-08-09T13:13:50-07:00</updated>
<published>2018-08-09T13:13:50-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=17651&amp;p=223175#p223175</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=17651&amp;p=223175#p223175"/>
<title type="html"><![CDATA[Re: MMC3: What happens if a bank switch is interrupted by NM]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=17651&amp;p=223175#p223175"><![CDATA[
<div class="quotetitle">tepples wrote:</div><div class="quotecontent"><br /><em>The Curse of Possum Hollow</em> has two shadow registers: $8000 bank and $A000 bank. They are always set through one subroutine that copies them to registers 6 and 7, called <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">mmc3_restore_bank</tt>, in this order:<br /></div><br /><br />Oh thanks. I didn't consider the scanline IRQ could also interfere. <br /><br />Wouldnt simply shadowing the 8000 reg work? <br /><br />Would something like that work? (Not shown: irq/nmi push/pop all registers and stuff). I cant help but feel like there is a flaw. Its too simple. <br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">main:<br />   lda ...<br />   sta shadow8000<br />   sta 8000<br />   ; ===&gt; IRQ OR NMI FIRES HERE!<br />   lda ...<br />   sta 8001<br /><br />irq:<br />   lda shadow8000<br />   sta shadow8000_copy<br />   <br />   lda ...<br />   sta shadow8000<br />   sta 8000<br />   ; ===&gt; NMI FIRES HERE!<br />   lda ...<br />   sta 8001<br />   <br />   lda shadow8000_copy<br />   sta shadow8000<br />   sta 8000<br />   <br />   rti<br /><br />nmi:<br /><br />   lda ...<br />   sta 8000<br />   lda ...<br />   sta 8001<br />   <br />   lda shadow8000<br />   sta 8000<br />   <br />   rti<br /></div><br /><br />-Mat<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9085">bleubleu</a> — Thu Aug 09, 2018 1:13 pm</p><hr />
]]></content>
</entry>
</feed>