<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - uc65, a Mid-Level Language Compiler READY FOR USE!</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">uc65, a Mid-Level Language Compiler READY FOR USE!</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=10242">http://forums.nesdev.com/viewtopic.php?f=2&amp;t=10242</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>11</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>qbradq</b> [ Wed Jul 03, 2013 5:47 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>uc65, a Mid-Level Language Compiler READY FOR USE!</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><strong>Update</strong><br /><br />uc65 is now recommended for use! Please report any bugs, issues or feature requests to this thread or the project's issue tracker.<br /><br /><strong>Status</strong><br /><br />Micro Code 65 is a mid-level language compiler targeting the cc65 tool chain with a focus on the NES target. The current release candidate of version 0.5 is feature complete and ready for testing for large-scale development. This release candidate is being tested through practical application prior to promotion for release.<br /><br />The project's source code, documentation and road map can be found on the <a href="http://code.google.com/p/uc65/" class="postlink">project site</a>.<br /><br />Attached to the thread is the latest binary distribution of the compiler along with Windows executables of the cc65 tool chain for your convenience. This package is also hosted on the project's page. The compiler should run on any platform supporting the Java Desktop profile. It has been confirmed to run correctly on 64-bit Linux and 32-bit Windows systems.

		
			<br clear="all" /><br />

			<table class="tablebg" width="100%" cellspacing="1">
			<tr>
				<td><b class="genmed">Attachments: </b></td>
			</tr>
			
				<tr>
					<td>
			<span class="genmed">
				<img src="./styles/subsilver2/imageset/icon_topic_attach.gif" width="14" height="18" alt="" title="" /> 
				<a href="./download/file.php?id=1093">uc65-release-0.5-rc6.zip</a> [741 KiB]
			</span><br />
			<span class="gensmall">Downloaded 42 times</span>
		

		<br />
	</td>
				</tr>
			
			</table>
		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Thu Jul 04, 2013 8:31 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: uc65, a Mid-Level Language Compiler  for the cc65 Toolch</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />My comments:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">; ROM statements tell the compiler what ROM bank to place ROM-able code and data<br />; into.<br />rom 0<br /><br />; RAM statements tell the compiler what RAM bank to place variables into.<br />ram 1</div><br />What's the reason for not using cc65's built-in segmentation ability?<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">; Anything declared as extern can be imported from another file<br />extern byte somePig</div><br />I don't like the naming of &quot;extern&quot; here. In C it's used for the exact opposite purpose (importing), and I read the word as &quot;external&quot; in that context. I would rather use &quot;export&quot;, but that maybe because I'm so used to ca65's use of that word.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">; Subroutines can have parameters, but do not return values<br />sub doesNothing byte first byte second</div><br />Not really a fan of this format for defining the parameter list, I think the parameters should be separated by something at least (for readability). Or the separator (comma) could be optional, I'm sure some masochists prefer not having it...<br /><br />Also why no return values? Maybe make it possible to define &quot;in&quot; and &quot;out&quot; parameters.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dwedit</b> [ Thu Jul 04, 2013 10:41 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: uc65, a Mid-Level Language Compiler  for the cc65 Toolch</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />In C, &quot;static&quot; means don't export it, and no qualifier means export it.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>qbradq</b> [ Thu Jul 04, 2013 10:57 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: uc65, a Mid-Level Language Compiler  for the cc65 Toolch</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Thank you for the feedback TheFox! The rom and ram statements are using segments under the hood. The default code generator used the names &quot;BSSn&quot; and &quot;ROMn&quot; for the respective banks. BSS0 is assumed to be in zero page. Do you have a suggestion for how I could handle this better? It's on the road map to improve this.<br /><br />I agree on the extern keyword naming. I had intended to name it export and kept confusing myself <img src="./images/smilies/icon_wink.gif" alt=";)" title="Wink" /><br /><br />As for subroutine parameter lists, we're getting into some forward-looking subjects. Let me run it down for you and see what you think.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">; Declare an array<br />byte someArray,4<br /><br />; Reference array members<br />someArray,0 = someArray,1 + someArray,2<br /><br />; Call a subroutine<br />someSub someArray,0 otherParam<br /></div><br /><br />As you can see, using the comma for array dimensions means we can't use commas to separate subroutine parameters during a call. I chose this style of array dimensions to reduce the total amount of punctuation and shifts required. With the parser I have now though I'll know in advance if something is an array or not and could handle it that way, but it still looks kinda strange.<br /><br />Thinking ahead to a few other features I want, maybe this would work better:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">; Declare an array<br />word dataPointers&#91;10&#93;<br /><br />; Define a subroutine<br />export sub doesSomething byte idx, byte offset<br />&nbsp; &nbsp; ; Declare a pointer<br />&nbsp; &nbsp; address dataAddress<br /><br />&nbsp; &nbsp; ; Reference an array<br />&nbsp; &nbsp; dataAddress = dataPointers&#91;idx&#93;<br /><br />&nbsp; &nbsp; ; Pointer manipulation<br />&nbsp; &nbsp; byte val1<br />&nbsp; &nbsp; val1 = (dataAddress)<br />&nbsp; &nbsp; val1 = (dataAddress),offset<br />&nbsp; &nbsp; dataAddress += 1<br />&nbsp; &nbsp; val1 = (dataAddress)<br /><br />&nbsp; &nbsp; ; Calling other subroutine<br />&nbsp; &nbsp; otherSub val1, (dataAddress), dataAddress<br />end sub<br /></div><br /><br />As for not having return values from subroutines, this is part of the language's design as a finite state machine description, much like the early BASIC dialects.<br /><br />I need to add functions to the road map. Early BASIC dialects allowed single-expression functions as a way to inline a computational expression in an abbreviated form. In uc65, a function will be a special case of subroutine which may only contain assignment and flow control statements and generates inline code.<br /><br />In this way there are no automatic or &quot;magic&quot; storage or intermediate variables.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>infiniteneslives</b> [ Thu Jul 04, 2013 11:10 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: uc65, a Mid-Level Language Compiler  for the cc65 Toolch</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />very awesome to see things getting started, great work!  Looking forward to playing around with this, and future releases.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Movax12</b> [ Thu Jul 04, 2013 11:26 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: uc65, a Mid-Level Language Compiler  for the cc65 Toolch</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />you could limit the return values to the a x y registers. if that is not enough for someone, they can return a pointer or set up a memory buffer somewere else.<br /><br />or maybe I'm just thinking too low level.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>infiniteneslives</b> [ Thu Jul 04, 2013 11:57 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: uc65, a Mid-Level Language Compiler  for the cc65 Toolch</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />While we all like return variables, it can be easy to get around not having them in your code by passing in the variable/pointer you want modified.  Is it pass by reference or value?  We're used to pass by value, and I'm guessing this is pass by reference for the global variables at least which makes this simpler.<br /><br />Instead of this:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">x = function (y, z)</div><br /><br />Just adopt a subroutine style/midset that the first/last parameter is 'returned'.<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">function (y, z, x)</div><br /><br />Are my presumptions correct?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>qbradq</b> [ Thu Jul 04, 2013 12:44 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: uc65, a Mid-Level Language Compiler  for the cc65 Toolch</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Passing an address to a subroutine is one way of getting data back. Another is to use a global variable to store the computed result.<br /><br />There's a key difference in mindset here though. Subroutines are for implementing behavior. Functions are for computing values in a convenient way. This is modeled after the early BASIC environments. This compiler is in many ways a compiled BASIC with a cleaned up syntax.<br /><br />I value the community input! Thank you all very much.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Thu Jul 04, 2013 1:21 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: uc65, a Mid-Level Language Compiler  for the cc65 Toolch</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">qbradq wrote:</div><div class="quotecontent">Thank you for the feedback TheFox! The rom and ram statements are using segments under the hood. The default code generator used the names &quot;BSSn&quot; and &quot;ROMn&quot; for the respective banks. BSS0 is assumed to be in zero page. Do you have a suggestion for how I could handle this better? It's on the road map to improve this.</div><br />Try syntax like this:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">word dataPointers&#91;10&#93; in BSS0<br /><br />export sub doesSomething byte idx, byte offset in CODE7<br />&nbsp; ; etc.<br />end sub<br /></div><br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">As for not having return values from subroutines, this is part of the language's design as a finite state machine description, much like the early BASIC dialects.</div><br />It's common practice at least in my 6502 programs for assembly language subroutines to act as functions, leaving results in C:A, X, and Y for the caller to pick up, as Movax12 suggested.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Subroutines are for implementing behavior. Functions are for computing values in a convenient way.</div><br />At least in my calling conventions, subroutines can also return whether a behavior was performed or not (a &quot;result code&quot;), or the number of behaviors that were performed, or whether a behavior results in other behaviors that need to be performed.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Hamtaro126</b> [ Thu Jul 04, 2013 2:24 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: uc65, a Mid-Level Language Compiler  for the cc65 Toolch</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The SUB function looks like how QuickBasic and FreeBasic does SUBs,<br /><br />The same math functions are also featured in the compilers mentioned above!

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bananmos</b> [ Thu Jul 04, 2013 2:28 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: uc65, a Mid-Level Language Compiler  for the cc65 Toolch</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Any reason why you are writing your own parser backend from scratch? In my humble opinion that choice often leads to lots of headache fixing bugs in your parsing that could be better spent making the compiler itself <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /><br /><a href="http://dinosaur.compilertools.net/" class="postlink">http://dinosaur.compilertools.net/</a>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>qbradq</b> [ Thu Jul 04, 2013 4:38 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: uc65, a Mid-Level Language Compiler  for the cc65 Toolch</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I've used Lex and Yacc in the past. I wrote my first several compilers with them. Then I read the excellent article series <a href="http://compilers.iecc.com/crenshaw/" class="postlink">Let's Build a Compiler</a> by Jack Crenshaw. Although dated (with example code in Pascal) it's still the most effective way to write a compiler, in my opinion. Jack even addresses the question of &quot;why not use a parser generator&quot; in the series. That's just the way I prefer to do things now.<br /><br />I guess I'm going to have to re-think the whole return value thing. Passing a return value through A works very well. Extending that to either the X/Y registers or the stack has a lot of problems though.<br /><br />So I've researched ca65's .dbg statement and wrote it up <a href="http://code.google.com/p/uc65/wiki/ca65dbg?ts=1372979690&amp;updated=ca65dbg" class="postlink">here</a>. If anyone knows what the &quot;type&quot; parameters are and what they mean I'd be very interested to know. Also, a clarification of the REGISTER storage type would be helpful.<br /><br />I've finally finished the second quest of the Legend of Zelda! So I might start making quicker progress on this now <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dwedit</b> [ Thu Jul 04, 2013 4:47 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: uc65, a Mid-Level Language Compiler  for the cc65 Toolch</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The thing is, you really have no idea how to effectively use LEX and YACC until after you've attempted to reinvent the wheel, then you see how to use them.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>infiniteneslives</b> [ Thu Jul 04, 2013 4:54 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: uc65, a Mid-Level Language Compiler  for the cc65 Toolch</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">qbradq wrote:</div><div class="quotecontent">I guess I'm going to have to re-think the whole return value thing. Passing a return value through A works very well. Extending that to either the X/Y registers or the stack has a lot of problems though.</div><br /><br />While restricting return values to a single byte is limiting, just having that small functionality alone is still pretty convenient/powerful.  I'd say imposing that limit is a good way to provide functionality that parallels the hardware, especially since it seems to be working well on your end.  Ignoring the mess of X/Y/stack, while it could have a use, it's not as straight forward or efficient so it's not a big loss IMO.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>qbradq</b> [ Thu Jul 04, 2013 6:48 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: uc65, a Mid-Level Language Compiler  for the cc65 Toolch</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Dwedit wrote:</div><div class="quotecontent">The thing is, you really have no idea how to effectively use LEX and YACC until after you've attempted to reinvent the wheel, then you see how to use them.</div><br /><br />I have done both, and have better success with this method.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>11</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>