<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=23&amp;t=10241" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2013-07-06T00:58:56-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=23&amp;t=10241</id>
<entry>
<author><name><![CDATA[lidnariq]]></name></author>
<updated>2013-07-06T00:58:56-07:00</updated>
<published>2013-07-06T00:58:56-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10241&amp;p=114667#p114667</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10241&amp;p=114667#p114667"/>
<title type="html"><![CDATA[Re: Electronics Question on Flash(ing) Memory]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10241&amp;p=114667#p114667"><![CDATA[
That Cypress part is the same one used in the Saleae Logic and its knockoffs. It contains a comparatively slow 8051 core (relative to USB data rates) and a bit of glue logic that allows for bulk 8- or 16- bit DMA in either direction over USB2.0 at up to 24MB/s without any involvement from the microcontroller.<br /><br />What it <strong>won't</strong> do is attain &quot;USB2.0 high speed&quot; speeds at any kind of nontrivial process, such as polling FLASH to see if it's done. (What it can do is provide or measure data either isochronously or in response to an external trigger) A megabyte or two per second should be doable, though.<br /><span style="font-size: 85%; line-height: normal"><br />(BUT: the flash can't be programmed that fast anyway. Getting the host side that fast won't help until you program RAM)</span><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3512">lidnariq</a> — Sat Jul 06, 2013 12:58 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[bazz]]></name></author>
<updated>2013-07-05T21:43:19-07:00</updated>
<published>2013-07-05T21:43:19-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10241&amp;p=114659#p114659</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10241&amp;p=114659#p114659"/>
<title type="html"><![CDATA[Re: Electronics Question on Flash(ing) Memory]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10241&amp;p=114659#p114659"><![CDATA[
I'm currently accessing Cypress forums. Asking how/if the Cypress can effectively read/write a parallel flash.<br /><br />I kind of have it figured out subconsciously. It's good to ask and learn more.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4992">bazz</a> — Fri Jul 05, 2013 9:43 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[infiniteneslives]]></name></author>
<updated>2013-07-05T21:32:25-07:00</updated>
<published>2013-07-05T21:32:25-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10241&amp;p=114657#p114657</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10241&amp;p=114657#p114657"/>
<title type="html"><![CDATA[Re: Electronics Question on Flash(ing) Memory]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10241&amp;p=114657#p114657"><![CDATA[
Looks legit.  With a specialized part like that though, I make sure you can figure out nearly everything you need to know/learn from the datasheet.  You probably won't find a lot of forum/internet help on a specialized part like that, so it's just you and the datasheet, and the cypress website.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4832">infiniteneslives</a> — Fri Jul 05, 2013 9:32 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[bazz]]></name></author>
<updated>2013-07-05T20:34:50-07:00</updated>
<published>2013-07-05T20:34:50-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10241&amp;p=114655#p114655</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10241&amp;p=114655#p114655"/>
<title type="html"><![CDATA[Re: Electronics Question on Flash(ing) Memory]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10241&amp;p=114655#p114655"><![CDATA[
Guys/Gals check this out:<br /><br /><!-- m --><a class="postlink" href="http://www.cypress.com/?id=193">http://www.cypress.com/?id=193</a><!-- m --><br /><br />I've been looking into it, and it sounds very useful and interesting.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4992">bazz</a> — Fri Jul 05, 2013 8:34 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[infiniteneslives]]></name></author>
<updated>2013-07-04T20:33:52-07:00</updated>
<published>2013-07-04T20:33:52-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10241&amp;p=114630#p114630</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10241&amp;p=114630#p114630"/>
<title type="html"><![CDATA[Re: Electronics Question on Flash(ing) Memory]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10241&amp;p=114630#p114630"><![CDATA[
<div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">As for the 'EPROM Emulator', not sure what your plans are.  But if you're trying to get a mcu to act as a ROM for the SNES, I'd stop right there.  Too much data, to fast, and too random for the SNES.  Just use memory to 'emulate' memory...<br /></div><br />That's what an &quot;EPROM emulator&quot; does. <a href="http://kevtris.org/Projects/epromemu/index.html" class="postlink">Kev made one, for instance</a>.</div><br /><br />Well kev's using RAM to act as ROM.  Not an mcu to act as ROM.  There is a significant difference between the two.  That was I why suggesting when I said memory to 'emulate' memory.  Bazz's flash/ram device would be similar, just not termed 'EPROM emulator' IMO as it's more of a flash/ram cart, so that's where I got confused I guess.<br /><br />Bazz, if you want my uncandid advice, I'd point out that you need to walk before you can run.  Start off with the simplest, easiest, and cheap entry option you can find.  Something that doesn't require you to really 'know' much about USB.  Perhaps something like arduino with provided USB libraries and everything.  Sure it may be slow as molasses to start, but there is quite a bit you can do to make it acceptable in speed.  If you're able to get something like that *working* you'll have a much better idea of what you need to get yourself into to program something in a few seconds.  If you try to start off with the most complicated, highest speed option you can find to kick off your project I'd imagine your doomed for failure based on what I'm gathering from this conversation.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4832">infiniteneslives</a> — Thu Jul 04, 2013 8:33 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2013-07-04T19:29:07-07:00</updated>
<published>2013-07-04T19:29:07-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10241&amp;p=114628#p114628</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10241&amp;p=114628#p114628"/>
<title type="html"><![CDATA[Re: Electronics Question on Flash(ing) Memory]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10241&amp;p=114628#p114628"><![CDATA[
<div class="quotetitle">infiniteneslives wrote:</div><div class="quotecontent"><br />I will point out though, that by taking this approach there is little regard to the cost of the device.  You're saying I'd rather pay 2-4 times as much so I can wait a few seconds vice a min.<br /></div><br />That depends on how many times one plans to push Build and Run, especially while tracking down an accidental reliance on emulator inaccuracy, and how much one makes per hour.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />As for the 'EPROM Emulator', not sure what your plans are.  But if you're trying to get a mcu to act as a ROM for the SNES, I'd stop right there.  Too much data, to fast, and too random for the SNES.  Just use memory to 'emulate' memory...<br /></div><br />That's what an &quot;EPROM emulator&quot; does. <a href="http://kevtris.org/Projects/epromemu/index.html" class="postlink">Kev made one, for instance</a>.<br /><br />This question comes from Phineas in <a href="http://phineasandferb.wikia.com/wiki/Tri-State_Area" class="postlink">Colorado</a>: Does the Super NES CPU let the cart bus float while in reset, or is it still driven?<br /><br /><br /><span style="font-size: 80%; line-height: normal">And who got the Phineas reference?</span><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Thu Jul 04, 2013 7:29 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[infiniteneslives]]></name></author>
<updated>2013-07-04T19:12:36-07:00</updated>
<published>2013-07-04T19:12:36-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10241&amp;p=114626#p114626</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10241&amp;p=114626#p114626"/>
<title type="html"><![CDATA[Re: Electronics Question on Flash(ing) Memory]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10241&amp;p=114626#p114626"><![CDATA[
<div class="quotetitle">bazz wrote:</div><div class="quotecontent"><br /><div class="quotetitle">infiniteneslives wrote:</div><div class="quotecontent"><br />*Using a micro-controller to receive data serially in any fashion will be slower than if the mcu can get data in byte chunks from what ever is handling the USB comms.  The less time the mcu has to handle recieving data, the more time it can devote to pumping data into the flash.<br /></div><br /><br />Get the data in byte chunks. What is this called? I am investigating High-Speed USB support with microcontrollers, and I started learning about USB specification, for instance Bulk transfer and - isochronous - is faster but not guaranteed, bulk is always guaranteed. I figured to go with Bulk for my first time around. Now I feel as to try isochronous. However, I don't very much understand the difference between serial transfer and receiving in byte chunks as you suggest. I don't even know where to start.</div><br /><br />That's about as much as I can give you, parallel vice serial.  Find a USB device, that will communicate to your mcu in parallel 'byte wide' interface, vice serially.  Or use a beefy (overly expensive) mcu which has built in USB interface, that will allow data to come in, without tying up the mcu.  (EDIT:  I will point out though, that by taking this approach there is little regard to the cost of the device.  You're saying I'd rather pay 2-4 times as much so I can wait a few seconds vice a min.)<br /><br />I don't know about this bulk/isochronous stuff, but you want reliable data regardless of what you're doing.<br /><br />As for the 'EPROM Emulator', not sure what your plans are.  But if you're trying to get a mcu to act as a ROM for the SNES, I'd stop right there.  Too much data, to fast, and too random for the SNES.  Just use memory to 'emulate' memory...<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4832">infiniteneslives</a> — Thu Jul 04, 2013 7:12 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[bazz]]></name></author>
<updated>2013-07-04T18:31:00-07:00</updated>
<published>2013-07-04T18:31:00-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10241&amp;p=114621#p114621</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10241&amp;p=114621#p114621"/>
<title type="html"><![CDATA[Re: Electronics Question on Flash(ing) Memory]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10241&amp;p=114621#p114621"><![CDATA[
<div class="quotetitle">infiniteneslives wrote:</div><div class="quotecontent"><br />*Using a micro-controller to receive data serially in any fashion will be slower than if the mcu can get data in byte chunks from what ever is handling the USB comms.  The less time the mcu has to handle recieving data, the more time it can devote to pumping data into the flash.<br /></div><br /><br />Get the data in byte chunks. What is this called? I am investigating High-Speed USB support with microcontrollers, and I started learning about USB specification, for instance Bulk transfer and - isochronous - is faster but not guaranteed, bulk is always guaranteed. I figured to go with Bulk for my first time around. Now I feel as to try isochronous. However, I don't very much understand the difference between serial transfer and receiving in byte chunks as you suggest. I don't even know where to start.[/quote]<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />*Writing to flash is gernally slow, especially old ones.  Current day chips (ones which are still in production) often have means to improve the programming time.  As I pointed out previously buffered writes is one of these tactics.  Another is accelerated voltage for faster programming, this is generally 12v you can apply to a specific pin for faster writes.<br /></div><br />Interesting,<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />*Optimizations can make a big difference depending on the application.  If you're developing a game, each build won't likely need the entire chip erased and reprogrammed.  If you do the extra work to sense what bytes/sectors were affected, then you could just transfer the data needed to make those modifications and reflash the needed sectors only.<br /></div><br />My plans exactly. Let's not forget I am programming a flasher first, and not the Eprom Emulator. Therefore, this method will only be useful for the RAM method. However, it could still be used to possibly narrow down segments of flash as well.[/quote]<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Some other optimizations could be taking advantage of the time the mcu is waiting on the flash chip to finish it's write.  Instead of sitting there and polling the flash for several micro-seconds, the mcu could be making use of that 'down time' to fetch the next chunk of serial data.<br /></div> no comment<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4992">bazz</a> — Thu Jul 04, 2013 6:31 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[infiniteneslives]]></name></author>
<updated>2013-07-04T18:14:11-07:00</updated>
<published>2013-07-04T18:14:11-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10241&amp;p=114620#p114620</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10241&amp;p=114620#p114620"/>
<title type="html"><![CDATA[Re: Electronics Question on Flash(ing) Memory]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10241&amp;p=114620#p114620"><![CDATA[
I'm not sure what you're looking for exactly... Speed factors?  What kind of details are you asking for?  I've tried to provide general input on the matter.  So if you can explain how that input isn't what you're looking for, or what kind of 'factors' your asking about perhaps I can re-direct my answer.<br /><br />Things to consider that might answer your question:<br /><br />*Using a micro-controller to receive data serially in any fashion will be slower than if the mcu can get data in byte chunks from what ever is handling the USB comms.  The less time the mcu has to handle recieving data, the more time it can devote to pumping data into the flash.<br /><br />*Writing to flash is gernally slow, especially old ones.  Current day chips (ones which are still in production) often have means to improve the programming time.  As I pointed out previously buffered writes is one of these tactics.  Another is accelerated voltage for faster programming, this is generally 12v you can apply to a specific pin for faster writes.<br /><br />*Optimizations can make a big difference depending on the application.  If you're developing a game, each build won't likely need the entire chip erased and reprogrammed.  If you do the extra work to sense what bytes/sectors were affected, then you could just transfer the data needed to make those modifications and reflash the needed sectors only.<br /><br />Some other optimizations could be taking advantage of the time the mcu is waiting on the flash chip to finish it's write.  Instead of sitting there and polling the flash for several micro-seconds, the mcu could be making use of that 'down time' to fetch the next chunk of serial data.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4832">infiniteneslives</a> — Thu Jul 04, 2013 6:14 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[bazz]]></name></author>
<updated>2013-07-04T17:56:25-07:00</updated>
<published>2013-07-04T17:56:25-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10241&amp;p=114618#p114618</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10241&amp;p=114618#p114618"/>
<title type="html"><![CDATA[Re: Electronics Question on Flash(ing) Memory]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10241&amp;p=114618#p114618"><![CDATA[
Can you fellas remind me of the most important speed factors in accomplishing a speedy upload/download of Flash Memory? Assuming this setup is through USB (hiSpeed, or Full), and uses a microcontroller. I can't be much more clearer than that (literally)<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4992">bazz</a> — Thu Jul 04, 2013 5:56 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2013-07-04T13:12:26-07:00</updated>
<published>2013-07-04T13:12:26-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10241&amp;p=114605#p114605</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10241&amp;p=114605#p114605"/>
<title type="html"><![CDATA[Re: Electronics Question on Flash(ing) Memory]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10241&amp;p=114605#p114605"><![CDATA[
If it takes only one to three seconds to reprogram the RAM while the cart is connected to a PC that's providing power, you don't really need to worry about volatility so much.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Thu Jul 04, 2013 1:12 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[infiniteneslives]]></name></author>
<updated>2013-07-04T11:17:46-07:00</updated>
<published>2013-07-04T11:17:46-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10241&amp;p=114596#p114596</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10241&amp;p=114596#p114596"/>
<title type="html"><![CDATA[Re: Electronics Question on Flash(ing) Memory]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10241&amp;p=114596#p114596"><![CDATA[
Yes RAM is a nice option when considering writability/erasability.  But it has it's drawbacks of being volatile, cost, and easy corruption.  When I realized my programming options were not going to cheaply/easily reach USB 2.0 programming speeds, RAM started loosing it's edge.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4832">infiniteneslives</a> — Thu Jul 04, 2013 11:17 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2013-07-04T05:35:48-07:00</updated>
<published>2013-07-04T05:35:48-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10241&amp;p=114588#p114588</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10241&amp;p=114588#p114588"/>
<title type="html"><![CDATA[Re: Electronics Question on Flash(ing) Memory]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10241&amp;p=114588#p114588"><![CDATA[
<div class="quotetitle">infiniteneslives wrote:</div><div class="quotecontent"><br />On a serious note, one thing to consider for target times is the erase time of the memory you're considering.  Large flash chips take ~1min or more to erase.<br /></div><br />I think that's why the OP is going with RAM instead: erase happens in the same 140 ns it takes to program each byte.<br /><br />In any case, if you're not using all the RAM in the console, there's always the option to make a cart that just receives 184 KiB of data, stashes it in $7E2000-$7FFFFF and VRAM $0000-$7FFF, and redirects the interrupt vectors. That might be the simplest thing that could possibly allow testing 1-level builds of your game.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Thu Jul 04, 2013 5:35 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[infiniteneslives]]></name></author>
<updated>2013-07-04T04:01:08-07:00</updated>
<published>2013-07-04T04:01:08-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10241&amp;p=114586#p114586</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10241&amp;p=114586#p114586"/>
<title type="html"><![CDATA[Re: Electronics Question on Flash(ing) Memory]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10241&amp;p=114586#p114586"><![CDATA[
I suggest cutting all the superfluous complicated electronics and just stick with the basics:<br /><div class="quotetitle">bazz wrote:</div><div class="quotecontent"><br />1) Get money<br />...<br />   f) be happy<br />...<br />10) Get money<br />...<br />11)  Stay happy. Have fun.<br /></div><br /><br />On a serious note, one thing to consider for target times is the erase time of the memory you're considering.  Large flash chips take ~1min or more to erase.  So in that situation having a 2 second programmer is kind of pointless.  Not that large flash is bad, or 2 seconds isn't valuable time savings.  But I'd consider things like that when considering the speed of the overall design.  If you've settled on slow erasing flash chips, then there isn't much point to jump through a bunch of hoops for sub-10second USB speeds.<br /><br />In regards to flash writing speeds using a chip with buffered writes can drastically reduce programing speeds.  I went from ~12min to ~3min with this switch on one of my projects just due to buffered writes alone.  It's also much more stable and reliable than programing individual bytes.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4832">infiniteneslives</a> — Thu Jul 04, 2013 4:01 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[lidnariq]]></name></author>
<updated>2013-07-04T03:16:24-07:00</updated>
<published>2013-07-04T03:16:24-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10241&amp;p=114585#p114585</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10241&amp;p=114585#p114585"/>
<title type="html"><![CDATA[Re: Electronics Question on Flash(ing) Memory]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10241&amp;p=114585#p114585"><![CDATA[
Sounds like a great plan!<br /><br />One of the best rules of thumb of inexpensive¹ engineering is: build the simplest thing that could possibly work. Figure out what you like, or don't like about it. <br /><br />Once you've got something to compare to, and with the experience of having built something, you'll now have the experience to know what to change, how to change, and where you need to do further research.<br /><br /><span style="font-size: 85%; line-height: normal">¹ Inexpensive means &quot;in terms of human life&quot; or &quot;lawsuits&quot;, so e.g. the space shuttle, medical research, and bridges don't count. Software, most electrical engineering, some bioengineering and mechanical engineering does.</span><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3512">lidnariq</a> — Thu Jul 04, 2013 3:16 am</p><hr />
]]></content>
</entry>
</feed>