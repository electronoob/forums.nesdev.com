<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=10&amp;t=7580" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2011-04-14T12:20:36-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=10&amp;t=7580</id>
<entry>
<author><name><![CDATA[picccca]]></name></author>
<updated>2011-04-14T12:20:36-07:00</updated>
<published>2011-04-14T12:20:36-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7580&amp;p=76720#p76720</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7580&amp;p=76720#p76720"/>
<title type="html"><![CDATA[Object Setup]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7580&amp;p=76720#p76720"><![CDATA[
Thanks, it's great to have this cleared up and confirmed.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4638">picccca</a> — Thu Apr 14, 2011 12:20 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2011-04-14T12:17:13-07:00</updated>
<published>2011-04-14T12:17:13-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7580&amp;p=76719#p76719</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7580&amp;p=76719#p76719"/>
<title type="html"><![CDATA[Object Setup]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7580&amp;p=76719#p76719"><![CDATA[
<div class="quotetitle">picccca wrote:</div><div class="quotecontent"><br />Oh, I think I get it. So let me ask, is it normal for a game to constantly overwrite the whole page 2 ($0200-$02FF) of RAM in order to shift the sprite data to another OAM location, like every frame?<br /></div><br />Yes, games commonly rewrite the whole sprite data every frame.<br /><br /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent"><br />So only copying the sprite definitions to page 2 once at startup and then just modifying the X and Y bytes of a sprite in page 2 to move it just doesn't cut it?<br /></div><br />For very simple programs (where you have a constant number of objects and know for sure no more than 8 sprites will ever be aligned in a row) it might, but for most applications, no.<br /><br /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent"><br />because 4 bytes per sprite and 64 sprites equals 256 byte, right?<br /></div><br />Yeah. After writing 64 sprites, the index will point back to the first one you wrote.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Thu Apr 14, 2011 12:17 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[picccca]]></name></author>
<updated>2011-04-14T08:35:29-07:00</updated>
<published>2011-04-14T08:35:29-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7580&amp;p=76704#p76704</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7580&amp;p=76704#p76704"/>
<title type="html"><![CDATA[Object Setup]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7580&amp;p=76704#p76704"><![CDATA[
<div class="quotetitle">tepples wrote:</div><div class="quotecontent"><br />The point is that on some frames you start from $0200 and write through $02FF, and on other frames you start from $0280 and write through $02FF, then wrap back to $0200 and write through $027F.<br /></div><br />Oh, I think I get it. So let me ask, is it normal for a game to constantly overwrite the whole page 2 ($0200-$02FF) of RAM in order to shift the sprite data to another OAM location, like every frame?<br /><br /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent"><br />What you can change is the order in which you fill that page while rendering meta-sprite definitions, which achieves basically the same result.<br /></div><br />So only copying the sprite definitions to page 2 once at startup and then just modifying the X and Y bytes of a sprite in page 2 to move it just doesn't cut it?<br /><br /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent"><br />All you have to do is make sure you don't output more than 64 sprites in a frame, otherwise you'll start overwriting the first ones you wrote.<br /></div><br />because 4 bytes per sprite and 64 sprites equals 256 byte, right?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4638">picccca</a> — Thu Apr 14, 2011 8:35 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2011-04-14T07:57:51-07:00</updated>
<published>2011-04-14T07:57:51-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7580&amp;p=76701#p76701</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7580&amp;p=76701#p76701"/>
<title type="html"><![CDATA[Object Setup]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7580&amp;p=76701#p76701"><![CDATA[
<div class="quotetitle">picccca wrote:</div><div class="quotecontent"><br />But if I start from $0208, $0216 or $0232 doesn't the DMA process go on for a whole page? like $0208-$0308?<br /></div><br />Like tepples said, the DMA will always copy from $xx00 to $xxFF... You only get to select the page the data is copied from, but you can't change the order in which the bytes in that page are copied. What you can change is the order in which you fill that page while rendering meta-sprite definitions, which achieves basically the same result.<br /><br />Like qbradq mentioned, a simple method of sprite cycling consists in starting using the sprite page at different locations every frame. Since the index registers (X and Y) are only 8 bits wide, once you reach the end of the sprite page they will automatically wrap back to the start. All you have to do is make sure you don't output more than 64 sprites in a frame, otherwise you'll start overwriting the first ones you wrote.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Thu Apr 14, 2011 7:57 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2011-04-14T07:31:48-07:00</updated>
<published>2011-04-14T07:31:48-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7580&amp;p=76700#p76700</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7580&amp;p=76700#p76700"/>
<title type="html"><![CDATA[Object Setup]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7580&amp;p=76700#p76700"><![CDATA[
The DMA process always starts at $xx00 and ends at $xxFF.<br /><br />The point is that on some frames you start from $0200 and write through $02FF, and on other frames you start from $0280 and write through $02FF, then wrap back to $0200 and write through $027F.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Thu Apr 14, 2011 7:31 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[picccca]]></name></author>
<updated>2011-04-14T07:22:47-07:00</updated>
<published>2011-04-14T07:22:47-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7580&amp;p=76698#p76698</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7580&amp;p=76698#p76698"/>
<title type="html"><![CDATA[Object Setup]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7580&amp;p=76698#p76698"><![CDATA[
<div class="quotetitle">qbradq wrote:</div><div class="quotecontent"><br />A simple example, and one that seems to work well for a lot of games, is to increment your starting address by 8, 16 or 32 every frame. You do this with an 8-bit index so it wraps back to 0, and you know you have reached the end of your buffer when your next index equals your starting value.<br /></div><br />And by "starting address" you mean the starting address of the DMA copy process? I mean this:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">   LDA #&gt;sprite<br />   STA $4014<br /></div><br />Where "sprite" is at $0200. But if I start from $0208, $0216 or $0232 doesn't the DMA process go on for a whole page? like $0208-$0308?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4638">picccca</a> — Thu Apr 14, 2011 7:22 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[qbradq]]></name></author>
<updated>2011-04-14T06:42:51-07:00</updated>
<published>2011-04-14T06:42:51-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7580&amp;p=76692#p76692</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7580&amp;p=76692#p76692"/>
<title type="html"><![CDATA[Object Setup]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7580&amp;p=76692#p76692"><![CDATA[
This is a problem when you need to start cycling the sprites (and trust me, you will even for them most simple of games). If you leave the sprites in a fixed location then when more than 8 of them appear on the same row only the first eight IN OAM ORDER will be displayed. To work around this (and get the NES's trademark flicker effect) you need to change which locations are being used in the OAM buffer for each object each frame.<br /><br />A simple example, and one that seems to work well for a lot of games, is to increment your starting address by 8, 16 or 32 every frame. You do this with an 8-bit index so it wraps back to 0, and you know you have reached the end of your buffer when your next index equals your starting value.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3706">qbradq</a> — Thu Apr 14, 2011 6:42 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[picccca]]></name></author>
<updated>2011-04-14T06:27:41-07:00</updated>
<published>2011-04-14T06:27:41-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7580&amp;p=76688#p76688</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7580&amp;p=76688#p76688"/>
<title type="html"><![CDATA[Object Setup]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7580&amp;p=76688#p76688"><![CDATA[
<div class="quotetitle">tepples wrote:</div><div class="quotecontent"><br />As I understand tokumaru, "fixed OAM location" means there is a direct mapping from game objects to addresses in OAM. The player goes in the first six entries, the player's missiles go in the next couple, etc.<br /></div><br />Yes, this is exactly what I'm doing, and why is this a bad thing?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4638">picccca</a> — Thu Apr 14, 2011 6:27 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2011-04-14T05:04:03-07:00</updated>
<published>2011-04-14T05:04:03-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7580&amp;p=76686#p76686</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7580&amp;p=76686#p76686"/>
<title type="html"><![CDATA[Object Setup]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7580&amp;p=76686#p76686"><![CDATA[
As I understand tokumaru, "fixed OAM location" means there is a direct mapping from game objects to addresses in OAM. The player goes in the first six entries, the player's missiles go in the next couple, etc.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Thu Apr 14, 2011 5:04 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[picccca]]></name></author>
<updated>2011-04-14T02:06:19-07:00</updated>
<published>2011-04-14T02:06:19-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7580&amp;p=76684#p76684</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7580&amp;p=76684#p76684"/>
<title type="html"><![CDATA[Object Setup]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7580&amp;p=76684#p76684"><![CDATA[
<div class="quotetitle">tokumaru wrote:</div><div class="quotecontent"><br />Whatever you do regarding sprites, just don't use fixed OAM locations. That's a terrible newbie mistake that makes it hard to use the entirety of OAM (because of fragmentation) and causes sprites to constantly disappear because there is no sprite cycling.<br /></div><br />Can you please explain more what you mean by "fixed OAM locations", I'm asking because this is probably exactly what I have done.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4638">picccca</a> — Thu Apr 14, 2011 2:06 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[qbradq]]></name></author>
<updated>2011-03-23T04:43:05-07:00</updated>
<published>2011-03-23T04:43:05-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7580&amp;p=75724#p75724</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7580&amp;p=75724#p75724"/>
<title type="html"><![CDATA[Object Setup]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7580&amp;p=75724#p75724"><![CDATA[
I meant an array of structs is slower and more difficult to program for.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3706">qbradq</a> — Wed Mar 23, 2011 4:43 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[ManicGenius]]></name></author>
<updated>2011-03-22T19:09:35-07:00</updated>
<published>2011-03-22T19:09:35-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7580&amp;p=75718#p75718</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7580&amp;p=75718#p75718"/>
<title type="html"><![CDATA[Object Setup]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7580&amp;p=75718#p75718"><![CDATA[
<div class="quotetitle">qbradq wrote:</div><div class="quotecontent"><br />You might also think about using tables instead of structs. Structs are very difficult to code for in ASM and they use more CPU cycles.<br /></div><br /><br />The structs were for pseudocode purposes and did not represent actual structs.  It's kinda how I lay out formats in my head.  Like self contained entities.<br /><br />I don't find ASM structs difficult to program for?<br /><br />variable:  .tag structName<br /><br />variable+structName::subVariable<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4461">ManicGenius</a> — Tue Mar 22, 2011 7:09 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[qbradq]]></name></author>
<updated>2011-03-22T18:47:19-07:00</updated>
<published>2011-03-22T18:47:19-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7580&amp;p=75714#p75714</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7580&amp;p=75714#p75714"/>
<title type="html"><![CDATA[Object Setup]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7580&amp;p=75714#p75714"><![CDATA[
I am using a system that meets your requirements. All sprites are rectangular and no pattern reuse is possible. If these limitations are acceptable then you might consider it.<br /><br />I lay out all of the unique frames of animation in CHR-RAM in sequential order. Each object type has an attribute table that tells me where the sprite pattern data starts in the ROM and how large the sprite is (in terms of 8x16 sprite tiles). Then when I am generating OAM data I just use nested for loops. It is a fairly simple scheme to implement if you can manage your CHR-RAM and you've got plenty of PRG-ROM for the uncompressed sprites.<br /><br />You might also think about using tables instead of structs. Structs are very difficult to code for in ASM and they use more CPU cycles.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3706">qbradq</a> — Tue Mar 22, 2011 6:47 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2011-03-22T17:19:14-07:00</updated>
<published>2011-03-22T17:19:14-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7580&amp;p=75708#p75708</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7580&amp;p=75708#p75708"/>
<title type="html"><![CDATA[Object Setup]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7580&amp;p=75708#p75708"><![CDATA[
<div class="quotetitle">ManicGenius wrote:</div><div class="quotecontent"><br />CNROM would allow me to use something like your tool, this method does not.<br /></div><br />You can still use Dwedit's method, you just have to add the base tile index to the tile index read from the meta-sprite data before writing to OAM. The sprite indexes in the meta-sprite definitions will be relative to the base address that you will know once the patterns are loaded.<br /><br />I use a very similar system, but instead of OR'ing an attribute byte with the attribute bytes from the meta-sprites I EOR them, which allows me to flip sprites, something I find much more useful than recoloring (nearly all objects have to be flipped, but usually only a handful are recolored). You can still recolor with EOR, but you have to arrange your palettes more carefully.<br /><br />Whatever you do regarding sprites, just don't use fixed OAM locations. That's a terrible newbie mistake that makes it hard to use the entirety of OAM (because of fragmentation) and causes sprites to constantly disappear because there is no sprite cycling.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Tue Mar 22, 2011 5:19 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[ManicGenius]]></name></author>
<updated>2011-03-22T16:54:41-07:00</updated>
<published>2011-03-22T16:54:41-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7580&amp;p=75704#p75704</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7580&amp;p=75704#p75704"/>
<title type="html"><![CDATA[Object Setup]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7580&amp;p=75704#p75704"><![CDATA[
Meh, I guess I still don't really know WTF I'm doing with all this, but my main issue is I'm trying to use arbitray object size.  I want to make a game where my main character is basically mario sized and can go up against enemies that use nearly the entirety of the OAM RAM.<br /><br />Therefore, having fixed character/object sizes is out of the question. I'm also not using CNROM, I'm using UNROM so pretty much all my CHR data has to be put into RAM and I won't quite know where I'm actually sticking it.  There is a variable I'm using that shows the start of the next available data and I calculate how much is left before sticking more graphics in.  Generally I do this during level load time.<br /><br />CNROM would allow me to use something like your tool, this method does not.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4461">ManicGenius</a> — Tue Mar 22, 2011 4:54 pm</p><hr />
]]></content>
</entry>
</feed>