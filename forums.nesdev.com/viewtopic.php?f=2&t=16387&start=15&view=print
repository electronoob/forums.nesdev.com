<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Nessemble - new NES assembler</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Nessemble - new NES assembler</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=16387">http://forums.nesdev.com/viewtopic.php?f=2&amp;t=16387</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>2</strong> of <strong>2</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Pokun</b> [ Wed Aug 23, 2017 1:45 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Nessemble - new NES assembler</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">snarf2888 wrote:</div><div class="quotecontent"><div class="quotetitle">snarf2888 wrote:</div><div class="quotecontent">I wanted people to opt in to optimizing and using zeropage addressing instead of trying to think for the programmer.</div>Programmers should be accountable for writing code optimized to their liking, even at such a low level.</div>Well if you do implement auto-zeropaging you'd want to offer options to manually override it. CA65 does it with the &quot;a:&quot; prefix:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; LDA a:$0001&nbsp; ;force absolute addressing</div><br />Likewise it can force zeropage addressing with the &quot;z:&quot; prefix.<br /><br />ASM6 offers no way of doing this AFAIK, being one of its flaws. Although a macro can get around it.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Oziphantom</b> [ Wed Aug 23, 2017 5:10 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Nessemble - new NES assembler</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />A more common way of forcing 16bits is the <span style="font-size: 150%; line-height: normal">~</span><br />so LDA <span style="font-size: 150%; line-height: normal">~</span>$0000 &lt;- forces 16 bits and not 8 bits. But I don't recommended it going forward. <br /><br />using @b, @w tends to be the new way so <br />LDA@b $0000 &lt;- ZP<br />LDA@w $0000 &lt;- 16bit<br /><br />This is basically a 68K like syntax, and extends better when you get to 65816 where you add<br />LDA@l $0000 &lt;- 24 bit<br />and then on immediates<br />LDA@w #0000 &lt;- 16 bit immediate mode<br /><br />Some assemblers use the ## form. <br />LDA ##0000  &lt;- 16 bit<br />LDA #0000 &lt;- 8 bit<br /><br />with (),y<br />if you make your parse collapse everything in brackets but not remove them, say given<br />lda (3*4)+(2*5),Y<br />lda (12)+(10),Y<br />then you can detect if there is a &quot;,y&quot; and if there is, to a scope check to count the ( and ) and see if you end up with a pair that encapsulates from the opcode to the final comma ,y. <br />Which is count the ( and then count down the ) until you hit 0, if you hit 0 and the next 2 non whitespace chars is not ,y then its not (ZP),y<br />If it does have full encapsulation and &quot;,y&quot; , you collapse and resolve until only the outer pair remain. <br />say<br />lda ((3*4)+(2*5)),Y<br />lda ((12)+(10)),Y<br />lda (12+10),y<br />lda (24),y<br />Then you can do a check to see if the contents of the last brackets are &lt;= 255 and then switch zp post indirect or abs. But in most cases I would say having the case above 255 is an error on the coders part and giving an error that it is over 255 is the more common use case. With a work around if they must do that way being<br />lda ((8*4)+(50*5))+0,y

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>zzo38</b> [ Thu Aug 24, 2017 7:34 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Nessemble - new NES assembler</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />One of the features I like in NESASM is that it does <em>not</em> do auto zero paging.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Thu Aug 24, 2017 9:12 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Nessemble - new NES assembler</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">zzo38 wrote:</div><div class="quotecontent">One of the features I like in NESASM is that it does <em>not</em> do auto zero paging.</div><br />I personally think you're crazy (I mean, why turn down an automatic 25% speed increase when accessing variables?), but I guess that the best solution would be to make this optimization optional.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Gilbert</b> [ Thu Aug 24, 2017 10:54 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Nessemble - new NES assembler</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Actually, as a happy user of ASM6 myself, I may migrate back to using NESASM because of the non-auto ZP thing. I'm interested in PCE development, and may reuse some of the codes if possible, so <em>not</em> being able to automatically force ZP addressing is a <em>necessity</em> (as the ZP on PCE Hu6280 starts from $2000, not $0000, and also, stack is at $2100).<br /><br />The best of both worlds, though, is to have a switch (either in command line or an assembler directive) to turn on or off whether ZP address modes are auto. I think there're some unofficial versions of NESASM that actually do this.<br /><br />Or even better, someone takes the time to add Hu6280 (thus automatically also 65C02) support to ASM6, and add the switch mentioned above also.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Oziphantom</b> [ Fri Aug 25, 2017 2:04 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Nessemble - new NES assembler</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />If you switch to Tass64 ( I know know broken record ) you can use the <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">.dpage</tt> option to make it automatically convert the right region for you. or if you want to do it manually you can do <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">.dpage ?</tt> then use the <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">,d</tt> instruction mode as so <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">LDA $02,d</tt> to force it into ZP mode.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">; PCE test<br />.cpu &quot;65c02&quot;<br />.dpage $2000<br /><br />lda $2002<br />sta 2<br />rts<br /><br />.dpage ?<br />lda #$02,d<br />lda 2,d<br />lda 2</div> generates <div class="codetitle"><b>Code:</b></div><div class="codecontent">; 64tass Turbo Assembler Macro V1.53.1515? listing file<br />; 64tass.exe -o D:\GitHub\test\pce.prg --no-caret-diag --dump-labels -l pce.tass -D BDD=0 -D CRT=0 -L pce.list --verbose-list --line-numbers -Wimmediate D:\GitHub\test\pce.asm<br />; Fri Aug 25 18:52:28 2017<br /><br />;Line&nbsp; &nbsp;;Offset&nbsp; &nbsp;;Hex&nbsp; &nbsp;&nbsp; &nbsp;;Monitor&nbsp; &nbsp;;Source<br /><br />:1&nbsp; &nbsp;;******&nbsp; Processing input file: D:\GitHub\test\pce.asm<br /><br />1&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;; PCE test<br />2&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;.cpu &quot;65c02&quot;<br />3&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;.dpage $2000<br /><br />5&nbsp; &nbsp;.0000&nbsp; &nbsp;a5 02&nbsp; &nbsp;&nbsp; &nbsp;lda $2002&nbsp; &nbsp;lda $2002<br />6&nbsp; &nbsp;.0002&nbsp; &nbsp;8d 02 00&nbsp; &nbsp;sta $0002&nbsp; &nbsp;sta 2<br />7&nbsp; &nbsp;.0005&nbsp; &nbsp;60&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;rts&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;rts<br /><br />9&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;.dpage ?<br />10&nbsp; &nbsp;.0006&nbsp; &nbsp;a5 02&nbsp; &nbsp;&nbsp; &nbsp;lda $02&nbsp; &nbsp;&nbsp; &nbsp;lda #$02,d<br />11&nbsp; &nbsp;.0008&nbsp; &nbsp;a5 02&nbsp; &nbsp;&nbsp; &nbsp;lda $02&nbsp; &nbsp;&nbsp; &nbsp;lda 2,d<br />12&nbsp; &nbsp;.000a&nbsp; &nbsp;ad 02 00&nbsp; &nbsp;lda $0002&nbsp; &nbsp; lda 2<br /><br /><br />;******&nbsp; End of listing</div><br />It sadly doesn't support the exclusive HuC6280 opcodes, I think the 6280 is a Rockwell 65c02 extensions so using R65c02 is probably a better match, and then you have to use Macros to get the others. I've asked about getting the extras in, but the author's code assumes a 3 letter opcode in a few places so its not a trivial thing to add sadly.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Pokun</b> [ Fri Aug 25, 2017 3:50 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Nessemble - new NES assembler</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Yeah the Hu6280 is like 65C02 with the additional Rockwell instructions (BBS, BBR and SMB etc) but missing STP and WAI that WDC added. It's too bad because STP is an easy way to make breakpoints, and WAI is useful when waiting for interrupts.<br /><br /><br /><div class="quotetitle">Gilbert wrote:</div><div class="quotecontent">Actually, as a happy user of ASM6 myself, I may migrate back to using NESASM because of the non-auto ZP thing. I'm interested in PCE development, and may reuse some of the codes if possible, so <em>not</em> being able to automatically force ZP addressing is a <em>necessity</em> (as the ZP on PCE Hu6280 starts from $2000, not $0000, and also, stack is at $2100).<br /><br />The best of both worlds, though, is to have a switch (either in command line or an assembler directive) to turn on or off whether ZP address modes are auto. I think there're some unofficial versions of NESASM that actually do this.<br /><br />Or even better, someone takes the time to add Hu6280 (thus automatically also 65C02) support to ASM6, and add the switch mentioned above also.</div><br />Yeah a 65816 fork for ASM6 already exists, so adding Hu6280 as well can't be that hard. Using the set direct page directive to set zero page to $2000 should do the trick. But I think ASM6 could also do with a way to force absolute addressing.<br /><br />Currently the best assembler for PC Engine is <a href="https://www.dropbox.com/s/r5qbcz4xapapgye/huc-2017-02-21.zip?dl=0" class="postlink">Elmer's fork</a> of PCEas (the PCEas exe is in the bin directory). It has done away with the 8 kB bank nonsense and recently got an option to pad the ROM to make 384 kB HuCards.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>2</strong> of <strong>2</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>