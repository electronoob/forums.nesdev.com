<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Rotating room collision.</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Rotating room collision.</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=12&amp;t=17308">http://forums.nesdev.com/viewtopic.php?f=12&amp;t=17308</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>2</strong> of <strong>3</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Sun Apr 29, 2018 5:01 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Rotating room collision.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">psycopathicteen wrote:</div><div class="quotecontent">I thought about that, but I realized the character's running speed would be wrong.  I'll show a drawing of what I mean by it.</div><br />Well, just to show you that the approach you were taking is equivalent, here's proof:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">A = cos(a)&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;(0)<br />B = sin(a)&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;(1)<br />AA + BB = 1&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; (2) definition of a circle<br /><br />X =&nbsp; Ax +&nbsp; By&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; (3) rotation matrix<br />Y = -Bx +&nbsp; Ay&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; (4) rotation matrix<br /><br />Ax =&nbsp; X -&nbsp; By&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; (5) from (3)<br />Ay =&nbsp; Y +&nbsp; Bx&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; (6) from (4)<br /><br />Ax = X - B(Y + Bx)/A&nbsp; &nbsp; &nbsp;(7) from (6) and (5)<br />AAx = AX - BY - BBx&nbsp; &nbsp; &nbsp; (8) from (7) multiplied by A<br />(AA + BB)x = AX - BY&nbsp; &nbsp; &nbsp;(9) from (8)<br /><br />x = AX - BY&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; (10) from (9) and (2)<br />y = BX + AY&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; (11) reached by similar set of steps</div><br />You had (5) and (6), but note that your equation for <em>x</em> included a <em>y</em> term and vice versa. Once you combine them (7) then you can eventually get back to just the simple rotation matrix (10/11) where <em>B</em> has been negated to reverse the rotation.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Oziphantom</b> [ Mon Apr 30, 2018 12:28 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Rotating room collision.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Espozo wrote:</div><div class="quotecontent">Making the hitbox of everything a circle has been brought up, but would it be at all feasible to check a rotated box against the collision map?</div><br />It depends upon the sizes of things, but basically you never really check rotated boxes against other things. You rotate the other things to be aligned to the box. So you find edges you think you might collide with(doing a holds all AABB check), rotate the edge -Angle Box is rotated, then do an AABB check of edge to box. <br /><br />However, if I was in mode 7 and doing rotated things on the SNES. I would use 'Minkowski collision', where I would expand the worlds box and drop all my moving things to points, hence a point in a box is still a point in a box no matter how the point is rotated in world space <img src="./images/smilies/icon_wink.gif" alt=";)" title="Wink" /> The flaw is, all things now must have the same size collision box, I think this is how Contra does it,  from memory I think everything you can shoot is the same size as the player for the most part. If you need different sizes you could shrink the &quot;box&quot; and then make a player say 4 points, and a pickup 1 point, and a large enemy 8 or 6 or 12 points etc.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Nicole</b> [ Mon Apr 30, 2018 2:01 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Rotating room collision.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Oziphantom wrote:</div><div class="quotecontent">I would use 'Minkowski collision', where I would expand the worlds box and drop all my moving things to points, hence a point in a box is still a point in a box no matter how the point is rotated in world space <img src="./images/smilies/icon_wink.gif" alt=";)" title="Wink" /> The flaw is, all things now must have the same size collision box</div><br /><a href="https://www.youtube.com/watch?v=UnU7DJXiMAQ" class="postlink">Super Mario 64 actually uses this approach</a>, believe it or not. Mario himself is just a point, with stuff like wall hitboxes extended out to compensate. Different hitboxes are used depending on Mario's state as well, like when he's standing, jumping, or swimming.<br /><br />I'm not sure what exactly it does for stuff like enemies colliding with the environment, though. I imagine some things could be simplified since they're controlled by AI.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Drew Sebastino</b> [ Tue May 01, 2018 4:26 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Rotating room collision.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Oziphantom wrote:</div><div class="quotecontent">However, if I was in mode 7 and doing rotated things on the SNES. I would use 'Minkowski collision', where I would expand the worlds box and drop all my moving things to points, hence a point in a box is still a point in a box no matter how the point is rotated in world space  The flaw is, all things now must have the same size collision box, I think this is how Contra does it,  from memory I think everything you can shoot is the same size as the player for the most part.</div><br />I remember reading in a developer interview that the player's collision in R-Type is done this way, and that the enemy and enemy bullet hitboxes are drawn larger to compensate. I presume it's done the same way in R-Type II, and even R-Type III. It explains how your collision with the stage is far more lenient than that of enemy objects.<br /><br /><div class="quotetitle">Oziphantom wrote:</div><div class="quotecontent">It depends upon the sizes of things, but basically you never really check rotated boxes against other things. You rotate the other things to be aligned to the box.</div><br />Well, it wouldn't make sense for the hitboxes to be rotated for object to object collision in the first place. The problem is checking it against the stage, in which case, if the object is not rotating visually with the stage, there will be a growing disparity between the object's appearance and the hitbox. I don't know if you already said this in a different way.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Oziphantom</b> [ Tue May 01, 2018 9:31 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Rotating room collision.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />No my point was when you do the actual collision check you don't do a rotated thing against another rotated thing, that is long and complicated math with accuracy issues.  What you do is you look at the two things you want to collide, in this case an edge from the world, and your hit box. You get the edge relative to your hit box, then rotate it - your angle of rotation. So now you have your hit box Axis Aligned, and the two edge points are relative to your origin. So now your hitbox is about the origin, and the edge is relative to the origin, the box is axis aligned, so you just need to check the points against an AABB. Which is fast.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Tue May 01, 2018 11:23 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Rotating room collision.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Maybe it's a little bit of a red herring to talk about point-vs-box as an alternative to box-vs-box in a thread about rotating stuff? It's really its own optimization, applicable without rotation.<br /><br /><br />With box vs box, you have to do some math to generate both boxes, then subtract and compare 4 pairs of sides against each other.<br /><br />If you're going to compare a player box against many bullets of the same size, instead of generating boxes for the bullets, you increase the size of the player box once, and compare against points. Still subtracting 4 sides for the test, but now you've skipped/batched the work for generating the bullet boxes by doing them one time. This is only really useful if you have multiple items with the same bounding box size; for a single collision it's roughly the same work.<br /><br />There's a further optimization if you have some kind of fast way of computing an absolute value, i.e. subtract centre point from centre point, and compare the absolute value of the difference with the sum of the widths of your two bounding boxes (precalculated once). Now you're just subtracting points on 2 axes and the absolute value operation fills in for the other two. This is great with floating point, but absolute value might be a wash for 6502 family.<br /><br />tepples suggestion of sphere collision is sort of an extension of point vs point to multiple dimensions, i.e. by squaring and summing the result on each axis you can compare against a single radius. Sphere collisions are <strong>invariant against rotation</strong>, which is why they're also highly applicable in this case. Taking the centre point and using a bounding box on the other hand isn't, but its still can be an effective optimization, and using centre points helps with the approximation anyway in a context that can rotate. (i.e. A box rotating around a centre point is probably a lot more useful hitbox approximation than a box rotating around its corner.)<br /><br /><br />Now there's also the question of whether when things are rotating you actually do want rectangular hitboxes, and when they're rotated, you want collision between those rotated shapes... that gets a lot more complicated. If both boxes have the same rotation, no problem, just do the original calculation in the space you had before the rotation. If one is rotated and the other isn't, you're now basically in the realm of colliding <a href="http://web.uvic.ca/~pgordon/geom/" class="postlink">arbitrary convex polygons</a>. I won't get into how to do that, but I'll just say that it's pretty difficult without an efficient multiply. That's the difference between an &quot;axis aligned bounding box&quot; (AABB) and boxes that can freely rotate.<br /><br /><br />Very often engines will do a sphere test or and AABB test with a shape that is large enough to encompass an entire object as a fast first step to check for potential collisions (with false positives) before doing more expensive collision tests to see where/if they actually collided. This presupposes that you want to do a more complicated collision than that first step, though.<br /><br />At a higher level still, you might also have some sort of <a href="https://en.wikipedia.org/wiki/Quadtree" class="postlink">space partitioning tree</a> or other structure to accelerate figuring out which objects are near another to collide. Not really important when you have a low number of objects but when there's a lot of stuff around, narrowing down that list of things that you have to check against each other for collision can reduce the workload by an order of magnitude. (Depends on how much work you have to begin with, whether it will pay off.)<br /><br /><br /><em>edit: tepples points out below that sphere tests might be fairly efficiently implemented on 6502</em>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Tue May 01, 2018 11:39 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Rotating room collision.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">rainwarrior wrote:</div><div class="quotecontent">tepples suggestion of sphere collision is sort of an extension of point vs point to multiple dimensions, i.e. by squaring and summing the result on each axis you can compare against a single radius. Again maybe not well suited to 6502 family because of the lack of multiply.</div><br />You don't really need multiply for this because squaring each displacement coordinate and the sum of radii is fast with a lookup table from x to x^2.<br /><br /><div class="quotetitle">rainwarrior wrote:</div><div class="quotecontent">At a higher level still, you might also have some sort of <a href="https://en.wikipedia.org/wiki/Quadtree" class="postlink">space partitioning tree</a> or other structure to accelerate figuring out which objects are near another to collide.</div><br />Or its one-dimensional counterpart, which is X- or Y-sorting.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Tue May 01, 2018 11:45 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Rotating room collision.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">You don't really need multiply for this because squaring each displacement coordinate and the sum of radii is fast with a lookup table from x to x^2.</div><br />Ah, yes squaring is a much simpler problem than multiplication.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>psycopathicteen</b> [ Tue May 01, 2018 5:16 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Rotating room collision.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />My collision uses a center point for walking on the ground, but uses 2 corner points when walking on an edge.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Oziphantom</b> [ Tue May 01, 2018 10:13 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Rotating room collision.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">rainwarrior wrote:</div><div class="quotecontent"><div class="quotetitle">tepples wrote:</div><div class="quotecontent">You don't really need multiply for this because squaring each displacement coordinate and the sum of radii is fast with a lookup table from x to x^2.</div><br />Ah, yes squaring is a much simpler problem than multiplication.</div><br />I would argue that on a 256x240 screen where you have an object that is 16x16 -&gt;32x32 the difference between a circle and slightly smaller square is neither here nor there. And thus you can skip the square and just do X<sub>1</sub>-X<sub>2</sub> &lt;AA1<sub>w</sub>+AA2<sub>w</sub> &amp; Y<sub>1</sub>-Y<sub>2</sub> &lt; AA1<sub>h</sub>+AA2<sub>h</sub> where in AA1 and AA2 are probably the same size anyway <img src="./images/smilies/icon_wink.gif" alt=";)" title="Wink" /><br /><br />Also should be noted this is the SNES portion of the forum and so yes it does have a decent mul, 7 clocks and done, so avoiding a square is not really that big a deal.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>psycopathicteen</b> [ Wed May 02, 2018 7:59 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Rotating room collision.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Wouldn't having circular tiles mean the floor will be bumpy?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Wed May 02, 2018 8:07 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Rotating room collision.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Colliding circular sprite hitboxes against axis-aligned square terrain is still reasonably efficient.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Oziphantom</b> [ Wed May 02, 2018 9:09 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Rotating room collision.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">psycopathicteen wrote:</div><div class="quotecontent">Wouldn't having circular tiles mean the floor will be bumpy?</div><br />For Ent to World you would use the Minkowski collision. I.e Point to axis aligned edges/bounding boxes/tiles etc

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Wed May 02, 2018 11:19 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Rotating room collision.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Oziphantom wrote:</div><div class="quotecontent">For Ent to World you would use the Minkowski collision. I.e Point to axis aligned edges/bounding boxes/tiles etc</div><br />I don't think there's really an effective way to convolve a tile grid with the player hitbox? psychopathicteen is already testing two edge points against the world, that's probably somewhat optimal.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Oziphantom</b> [ Wed May 02, 2018 11:35 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Rotating room collision.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Well I was thinking each tile would just have its own BB, so you work out what tile you are on, which way you are moving and then check against the right tiles, where if the tile is solid you check against the expanded box for the tile. <br />Having two points means you need to rotate said two points, so having a middle + 2 offsets. However thinking about it more said rotation can just be a LUT, to which doing the base + delta &gt; tile check tile x2 probably works out much of a muchness vs the oversampling of the other method..

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>2</strong> of <strong>3</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>