<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=3&amp;t=461" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2005-08-03T20:18:58-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=3&amp;t=461</id>
<entry>
<author><name><![CDATA[Anonymous]]></name></author>
<updated>2005-08-03T20:18:58-07:00</updated>
<published>2005-08-03T20:18:58-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=461&amp;p=3444#p3444</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=461&amp;p=3444#p3444"/>
<title type="html"><![CDATA[Looking for faster DDraw routines..]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=461&amp;p=3444#p3444"><![CDATA[
I've seen a pixel shader(OpenGL?) implementation of the HQ2x algorithm at a pixel shader archive once, but I'm too lazy to look it up. :p<p>Statistics: Posted by Guest — Wed Aug 03, 2005 8:18 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Marty]]></name></author>
<updated>2005-08-03T13:11:57-07:00</updated>
<published>2005-08-03T13:11:57-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=461&amp;p=3435#p3435</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=461&amp;p=3435#p3435"/>
<title type="html"><![CDATA[Looking for faster DDraw routines..]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=461&amp;p=3435#p3435"><![CDATA[
<div class="quotetitle">tepples wrote:</div><div class="quotecontent"><br />Hmmm... screen as a texture... Would it be possible to implement scale2x as a pixel shader on current DX9 hardware?<br /></div><br /><br />I think it's possible but it will require quite some work due to the heavy flow control in the algorithm. It would probably require version 1.2 or higher. But yeah, with a dose of creativity it should be doable.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=37">Marty</a> — Wed Aug 03, 2005 1:11 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2005-08-03T11:42:05-07:00</updated>
<published>2005-08-03T11:42:05-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=461&amp;p=3430#p3430</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=461&amp;p=3430#p3430"/>
<title type="html"><![CDATA[Looking for faster DDraw routines..]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=461&amp;p=3430#p3430"><![CDATA[
Hmmm... screen as a texture... Would it be possible to implement scale2x as a pixel shader on current DX9 hardware?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Wed Aug 03, 2005 11:42 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Muchaserres]]></name></author>
<updated>2005-08-03T11:39:28-07:00</updated>
<published>2005-08-03T11:39:28-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=461&amp;p=3429#p3429</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=461&amp;p=3429#p3429"/>
<title type="html"><![CDATA[Looking for faster DDraw routines..]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=461&amp;p=3429#p3429"><![CDATA[
Great. Thank you all for your replies.  <img src="http://forums.nesdev.com/images/smilies/icon_wink.gif" alt=":wink:" title="Wink" /><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=41">Muchaserres</a> — Wed Aug 03, 2005 11:39 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Anonymous]]></name></author>
<updated>2005-08-03T09:36:46-07:00</updated>
<published>2005-08-03T09:36:46-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=461&amp;p=3426#p3426</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=461&amp;p=3426#p3426"/>
<title type="html"><![CDATA[Looking for faster DDraw routines..]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=461&amp;p=3426#p3426"><![CDATA[
openGL anyone?<p>Statistics: Posted by Guest — Wed Aug 03, 2005 9:36 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Nessie]]></name></author>
<updated>2005-08-03T05:44:46-07:00</updated>
<published>2005-08-03T05:44:46-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=461&amp;p=3423#p3423</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=461&amp;p=3423#p3423"/>
<title type="html"><![CDATA[Looking for faster DDraw routines..]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=461&amp;p=3423#p3423"><![CDATA[
Btw, if anyone wants older DirectX SDKs - e.g. documentation for DirectDraw or DirectInput/DirectPlay older than DirectX 8.0, you can find them <a href="http://dev.icarusindie.com:2004/index.php?sortby=title&amp;dir=files%2Fsdks%2F" class="postlink">here</a>. DirectX 7 docs can be tricky to find.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=12">Nessie</a> — Wed Aug 03, 2005 5:44 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Anonymous]]></name></author>
<updated>2005-08-03T05:35:11-07:00</updated>
<published>2005-08-03T05:35:11-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=461&amp;p=3422#p3422</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=461&amp;p=3422#p3422"/>
<title type="html"><![CDATA[Looking for faster DDraw routines..]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=461&amp;p=3422#p3422"><![CDATA[
<div class="quotetitle">Quietust wrote:</div><div class="quotecontent"><br />Er, DirectDraw <strong>IS</strong> DirectX. Perhaps you're thinking of Direct<strong>3D</strong>, which is somewhat of a waste if all you're doing is 2D rendering...<br /></div><br /><br />I know that. "DirectX Graphics" is what MS began to call their graphic section in the introduction of DX8. The idea was to have Direct3D and DirectDraw combined but resulted in the end that DirectDraw was left behind. It's now completely outside their radar and haven't had an update ever since (that's almost six years). I deliberately said DirectX Graphics instead of Direct3D to avoid a 3D vs 2D debate but I can see it's too late now anyway. <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /><br />I wouldn't say it's a waste. DirectDraw is layered on top of Direct3D on almost every single 3D card today anyway and once you've set up your vertices and texture the process of rendering a frame isn't that different from DirectDraw.<br /><br />frameloop:<br />device-&gt;Clear(...); // clear screen<br />texture-&gt;LockRect(...); // lock the NES texture<br />PutPixels();<br />texture-&gt;UnlockRect(...);<br />device-&gt;BeginScene();<br />device-&gt;DrawPrimitive(...); // draw the NES textured quad<br />device-&gt;EndScene();<br />device-&gt;Present(...); // display screen<br />goto frameloop;<p>Statistics: Posted by Guest — Wed Aug 03, 2005 5:35 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Quietust]]></name></author>
<updated>2005-08-03T00:27:49-07:00</updated>
<published>2005-08-03T00:27:49-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=461&amp;p=3418#p3418</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=461&amp;p=3418#p3418"/>
<title type="html"><![CDATA[Looking for faster DDraw routines..]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=461&amp;p=3418#p3418"><![CDATA[
<div class="quotetitle">Marty wrote:</div><div class="quotecontent"><br />The *best* improvement however would be to ditch DirectDraw and move on to DirectX Graphics. It might involve a little more work but the pay off is better.<br /></div><br /><br />Er, DirectDraw <strong>IS</strong> DirectX. Perhaps you're thinking of Direct<strong>3D</strong>, which is somewhat of a waste if all you're doing is 2D rendering...<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=7">Quietust</a> — Wed Aug 03, 2005 12:27 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Marty]]></name></author>
<updated>2005-08-02T21:57:26-07:00</updated>
<published>2005-08-02T21:57:26-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=461&amp;p=3410#p3410</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=461&amp;p=3410#p3410"/>
<title type="html"><![CDATA[Looking for faster DDraw routines..]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=461&amp;p=3410#p3410"><![CDATA[
Me above.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=37">Marty</a> — Tue Aug 02, 2005 9:57 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Anonymous]]></name></author>
<updated>2005-08-02T21:55:27-07:00</updated>
<published>2005-08-02T21:55:27-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=461&amp;p=3409#p3409</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=461&amp;p=3409#p3409"/>
<title type="html"><![CDATA[Looking for faster DDraw routines..]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=461&amp;p=3409#p3409"><![CDATA[
A few things:<br /><br />Add the flag DDLOCK_WRITEONLY to the locking function if you're not going to read from the buffer (which you really shouldn't). Also, toss in the DDLOCK_NOSYSLOCK flag as well. New drivers usually include it automatically but you can never be sure.<br /><br />The locking time should be kept as short as possible to avoid stalling the GPU too much. Having an intermediate buffer and then blit everything in one go might be the better option. Alternative, if you have both the primary surface and off-screen surface in video memory the blit will be practically free. Manual writes to the off-screen buffer will be slower but if you can space them out and do other things between that combination might work better.<br /><br />The *best* improvement however would be to ditch DirectDraw and move on to DirectX Graphics. It might involve a little more work but the pay off is better.<p>Statistics: Posted by Guest — Tue Aug 02, 2005 9:55 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Quietust]]></name></author>
<updated>2005-08-02T12:00:47-07:00</updated>
<published>2005-08-02T12:00:47-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=461&amp;p=3388#p3388</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=461&amp;p=3388#p3388"/>
<title type="html"><![CDATA[Looking for faster DDraw routines..]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=461&amp;p=3388#p3388"><![CDATA[
That's probably the fastest you'll be able to get it, though it will likely cause problems on some video hardware. The "safe" method is to render into an alternate buffer and then lock/render/unlock/blit all at once, though that will consume a lot more memory bandwidth.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=7">Quietust</a> — Tue Aug 02, 2005 12:00 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Muchaserres]]></name></author>
<updated>2005-08-02T11:58:18-07:00</updated>
<published>2005-08-02T11:58:18-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=461&amp;p=3387#p3387</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=461&amp;p=3387#p3387"/>
<title type="html"><![CDATA[Looking for faster DDraw routines..]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=461&amp;p=3387#p3387"><![CDATA[
Hi all,<br /><br />As said above, I'm looking for better "putpixel" routines than mine, if any. This is how I actually handle graphics in my emu.<br /><br />1.- DDraw is initialized using this class: <!-- m --><a class="postlink" href="http://geocities.com/muchaserres/DDraw.cpp.txt">http://geocities.com/muchaserres/DDraw.cpp.txt</a><!-- m --><br />2.- When a frame starts, I call: Nes-&gt;DDraw-&gt;LockBuffer().<br />3.- When a scanline starts, I do: Buffer = ( unsigned char* )Nes-&gt;DDraw-&gt;DDraw.bpBuffer + ( Scln * Nes-&gt;DDraw-&gt;DDraw.iPitch ).<br />4.- When "putting" a pixel, I do: memcpy( Nes-&gt;Buffer + ClockTicks * Nes-&gt;DDraw-&gt;DDraw.bPixelWidth, &amp;RGBPal[ Color ], Nes-&gt;DDraw-&gt;DDraw.bPixelWidth ).<br />5.- And finally, when the full frame has been drawn, I do: Nes-&gt;DDraw-&gt;UnlockBuffer(); Nes-&gt;DDraw-&gt;Draw().<br /><br />I'm fearing this is a slow scheme, but I'm not too sure.. Well, any possible improvements?<br /><br />Lotsa thanks.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=41">Muchaserres</a> — Tue Aug 02, 2005 11:58 am</p><hr />
]]></content>
</entry>
</feed>