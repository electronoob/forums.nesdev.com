<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Tim Keal's Comprehensive Guide to Boolean Logic</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Tim Keal's Comprehensive Guide to Boolean Logic</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=5&amp;t=4301">http://forums.nesdev.com/viewtopic.php?f=5&amp;t=4301</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>jargon</b> [ Sat Aug 16, 2008 7:31 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Tim Keal's Comprehensive Guide to Boolean Logic</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />---Tim Keal's Comprehensive Guide to Boolean Logic---
<br />
<br />Reference Material for this lesson:
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">----------------------------------------------------+<br />Boolean Beakers &#40;plain/text version&#41;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; |<br />&#40;c&#41; Copyright Mon, 2007 12/17 Timothy Robert Keal&nbsp; &nbsp;|<br />-----+----------------------------------------------+<br />pop3 | jargon juno com&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; |<br />http | mediaplague.com&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; |<br />icq&nbsp; | 41981241&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|<br />yim&nbsp; | stereotypicalhacker&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; |<br />yim&nbsp; | stereotypicalhacker2pt0&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; |<br />aim&nbsp; | alias jargon&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|<br />msn&nbsp; | timkeal hotmail com&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; |<br />skype| trkeal&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|<br />-----+----------------------------------------------+<br />3 2 1 0&nbsp; Truth Table Power Of 2 Bit Index&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|<br />----------------------------------------------------+<br />0 0 0 1&nbsp; Neither&nbsp; A,B&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|<br />0 0 1 0&nbsp; Just&nbsp; &nbsp; &nbsp; &nbsp;B&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|<br />0 1 0 0&nbsp; Just&nbsp; &nbsp; &nbsp;A&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|<br />1 0 0 0&nbsp; Both&nbsp; &nbsp; &nbsp;A,B&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|<br />----------------------------------------------------+<br />1 1 0 0&nbsp; Input&nbsp; &nbsp; A&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|<br />1 0 1 0&nbsp; Input&nbsp; &nbsp; &nbsp; B&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|<br />----------------------+---------+---------+---------+<br />0 0 0 0&nbsp; &nbsp; NOT TRUE&nbsp; &nbsp;|FALSE&nbsp; &nbsp; |NULL&nbsp; &nbsp; &nbsp;|&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|<br />0 0 0 1&nbsp; A NOT&nbsp; &nbsp;OR B |NOR&nbsp; &nbsp;A,B|&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|<br />0 0 1 0&nbsp; A NOT LIMP B |NLIMP A,B|Just&nbsp; &nbsp; B|&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|<br />0 0 1 1&nbsp; A NOT&nbsp; &nbsp; &nbsp; &nbsp; |NOT&nbsp; &nbsp;A&nbsp; |&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|<br />0 1 0 0&nbsp; A NOT RIMP B |NRIMP A,B|NIMP&nbsp; A,B|Just&nbsp; A&nbsp; |<br />0 1 0 1&nbsp; &nbsp; NOT&nbsp; &nbsp; &nbsp; B |NOT&nbsp; &nbsp; &nbsp;B|&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|<br />0 1 1 0&nbsp; A NOT&nbsp; EQV B |NEQV&nbsp; A,B|XOR&nbsp; &nbsp;A,B|EOR&nbsp; &nbsp;A,B|<br />0 1 1 1&nbsp; A NOT&nbsp; AND B |NAND&nbsp; A,B|&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|<br />- - - - - - - - - - - + - - - - + - - - - + - - - - +<br />1 0 0 0&nbsp; A&nbsp; &nbsp; &nbsp; AND B |AND&nbsp; &nbsp;A,B|&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|<br />1 0 0 1&nbsp; A&nbsp; &nbsp; &nbsp; EQV B |EQV&nbsp; &nbsp;A,B|XNOR&nbsp; A,B|ENOR&nbsp; A,B|<br />1 0 1 0&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;B |&nbsp; &nbsp; &nbsp; &nbsp; B|&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|<br />1 0 1 1&nbsp; A&nbsp; &nbsp; &nbsp;RIMP B |RIMP&nbsp; A,B|IMP&nbsp; &nbsp;A,B|&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|<br />1 1 0 0&nbsp; A&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; |&nbsp; &nbsp; &nbsp; A&nbsp; |&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|<br />1 1 0 1&nbsp; A&nbsp; &nbsp; &nbsp;LIMP B |LIMP&nbsp; A,B|&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|<br />1 1 1 0&nbsp; A&nbsp; &nbsp; &nbsp; &nbsp;OR B |OR&nbsp; &nbsp; A,B|&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|<br />1 1 1 1&nbsp; &nbsp; &nbsp; &nbsp; TRUE&nbsp; &nbsp;|TRUE&nbsp; &nbsp; &nbsp;|Identity |&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|<br />----------------------+---------+---------+---------+<br /></div>
<br />
<br /><img src="http://mediaplague.com/gallery/jargon/Boolean%20Beakers%20Posters/the-logic-cube.png" alt="Image" />
<br />
<br />0, 1, 2 input "Boolean Beakers" overview thumbnail
<br /><img src="http://mediaplague.com/gallery/jargon/Boolean%20Beakers%20Posters/boolean%20beakers%20-%20thumb.gif" alt="Image" /> 
<br />
<br />0 input "Boolean Beakers" poster
<br /><img src="http://mediaplague.com/gallery/jargon/Boolean%20Beakers%20Posters/boolean%20beakers%20-%200%20input%20-%20poster.gif" alt="Image" />
<br />
<br />1 input "Boolean Beakers" poster
<br /><img src="http://mediaplague.com/gallery/jargon/Boolean%20Beakers%20Posters/boolean%20beakers%20-%201%20input%20-%20poster.gif" alt="Image" />
<br />
<br />2 input "Boolean Beakers" poster
<br /><img src="http://mediaplague.com/gallery/jargon/Boolean%20Beakers%20Posters/boolean%20beakers%20-%202%20input%20-%20poster.gif" alt="Image" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>jargon</b> [ Sat Aug 16, 2008 8:32 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Magic Faerie-Godmother &quot;Eureka&quot; Dust</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />And now... THE LESSON:
<br />
<br />In the <em>"Boolean Beakers Posters"</em>, notice the amount of inputs progressively does a doubling 'n' interval with each iteration of 'n'-ary splits through Boolean Space.
<br />
<br />Look here:
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">0000&nbsp; &nbsp;False&nbsp; &nbsp;| 1111&nbsp; &nbsp;Truth&nbsp; <br />n/a&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; n/a<br />n/a&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; n/a<br />n/a&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; n/a<br />n/a&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; n/a<br />n/a&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; n/a<br />n/a&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; n/a<br />n/a&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; n/a<br /></div><br />Notice, two ends of a <strong>Unit Segment</strong> for zero input <strong>Boolean Space</strong>.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">0000&nbsp; &nbsp;False&nbsp; &nbsp;| 1111&nbsp; &nbsp;Truth&nbsp; <br />n/a&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; n/a<br />n/a&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; n/a<br />0011 A Not&nbsp; &nbsp; &nbsp;| 1100 A&nbsp; &nbsp; &nbsp;<br />n/a&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; n/a<br />n/a&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; n/a<br />n/a&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; n/a<br />n/a&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; n/a<br /></div><br />Notice, 4 corners of a <strong>Unit Square</strong> for one input <strong>Boolean Space</strong>.<br />Notice 'X' is equivalent to 'XX'.<br />Notice the n/a gaps are quadrupling.<br /><br />The formula for the amount of gates is 2^2^(AmountOfInputs).<br /><br />0 inputs has 2^2^0 gates. (2)<br />1 inputs has 2^2^1 gates. (4)<br />2 inputs has 2^2^2 gates. (16)<br />3 inputs would therefore have 2^2^3 gates. (256)<br /><br />Each bit3 bit2 bit1 bit0 is a truth table for 2 inputs.<br />The truth table itself being <strong>left-endian</strong>, meaning the highest bit is the first bit in the series.<br />The lowest bit is always zero.<br /><br />for 0 inputs:<br />bit0 is a constant (whether it is set or not.)<br /><br />for 1 input:<br />bit1 is just a<br />bit0 is neither a,etcetera<br /><br />for 2 inputs:<br />bit3 is (just all) both a,b (but nothing else being set)<br />bit2 is just a (only a is set, and nothing else)<br />bit1 is just b (only b is set, and nothing else)<br />bit0 is neither a,b(,etcetera,...) (nothing is set)<br /><br />Remember that nothing else only pertains to the actual inputs within the amount included within the boolean operand.<br /><br />for 3 inputs:<br />bit7 all a,b,c<br />bit6 both a,b<br />bit5 both a,b<br />bit4 both a,c<br />bit3 both b,c<br />bit2 just b<br />bit1 just c<br />bit0 none<br /><br />By now you prolly see the pattern of permutation, that is the ordered series of possible match-ups between the inputs.<br /><br />Since if the result of the boolean operand is if any entry is bit expression holds its ground, therefore:<br />If any bit in the truth table filters through, the result is set as well, otherwise the result is not set.<br />for unknowns, the table simply collapses to the simplest table as already outlined below:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">0000&nbsp; &nbsp;False&nbsp; &nbsp;| 1111&nbsp; &nbsp;Truth&nbsp; <br />0001 A NOr&nbsp; &nbsp;B | 1110 A Or&nbsp; &nbsp; B<br />0010 A NLimp B | 1101 A LImp&nbsp; B<br />0011 A Not&nbsp; &nbsp; &nbsp;| 1100 A&nbsp; &nbsp; &nbsp; &nbsp; <br />0100 A NRImp B | 1011 A Rimp&nbsp; B<br />0101&nbsp; &nbsp;Not&nbsp; &nbsp;B | 1010&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;B<br />0110 A NEqv&nbsp; B | 1001 A Eqv&nbsp; &nbsp;B<br />0111 A Nand&nbsp; B | 1000 A And&nbsp; &nbsp;B<br /></div><br /><br />Notice, 16 vertices of a <strong>Unit Hypercube</strong> for two input <strong>Boolean Space</strong>.<br />Notice 'LR' is equivalent to 'LLRR'.<br />Also Notice, 'X' is equivalent to 'XXXX'<br /><br />Therfore: 'HiLo' is equivalent to 'HiHiLoLo'<br /><br />Thus you can reverse this behavior on either end of the series for so long as the unknowns do not fill that capacity.<br />Yes, I realize this last statement is very confusing, even I forget why that part is important in simplifying the overall expression.<br />I will come back to that later when I re-download my notes.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">0000&nbsp; &nbsp;False&nbsp; &nbsp;| 1111&nbsp; &nbsp;Truth&nbsp; <br />0001 A NOr&nbsp; &nbsp;B | 1110 A Or&nbsp; &nbsp; B<br />0010 A NLimp B | 1101 A LImp&nbsp; B<br />0011 A Not&nbsp; &nbsp; &nbsp;| 1100 A&nbsp; &nbsp; &nbsp; &nbsp; <br />0100 A NRImp B | 1011 A Rimp&nbsp; B<br />0101&nbsp; &nbsp;Not&nbsp; &nbsp;B | 1010&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;B<br />0110 A NEqv&nbsp; B | 1001 A Eqv&nbsp; &nbsp;B<br />0111 A Nand&nbsp; B | 1000 A And&nbsp; &nbsp;B<br /></div><br /><br />Notice the left side is the reverse of the right side of the table!<br />The left side is <strong>'Not'</strong> of the right side!<br />Also notice the bitmasks, that is, the series of bits, are the opposite setting from each side!<br />Thus the full set of possible truth tables counts upwards down the left side, then wraps 180 degrees around the rosie bush, and counts upwards back up the other side!<br /><br />Now refer to this again:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">----------------------+---------+---------+---------+<br />0 0 0 0&nbsp; &nbsp; NOT TRUE&nbsp; &nbsp;|FALSE&nbsp; &nbsp; |NULL&nbsp; &nbsp; &nbsp;|&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|<br />0 0 0 1&nbsp; A NOT&nbsp; &nbsp;OR B |NOR&nbsp; &nbsp;A,B|&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|<br />0 0 1 0&nbsp; A NOT LIMP B |NLIMP A,B|Just&nbsp; &nbsp; B|&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|<br />0 0 1 1&nbsp; A NOT&nbsp; &nbsp; &nbsp; &nbsp; |NOT&nbsp; &nbsp;A&nbsp; |&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|<br />0 1 0 0&nbsp; A NOT RIMP B |NRIMP A,B|NIMP&nbsp; A,B|Just&nbsp; A&nbsp; |<br />0 1 0 1&nbsp; &nbsp; NOT&nbsp; &nbsp; &nbsp; B |NOT&nbsp; &nbsp; &nbsp;B|&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|<br />0 1 1 0&nbsp; A NOT&nbsp; EQV B |NEQV&nbsp; A,B|XOR&nbsp; &nbsp;A,B|EOR&nbsp; &nbsp;A,B|<br />0 1 1 1&nbsp; A NOT&nbsp; AND B |NAND&nbsp; A,B|&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|<br />- - - - - - - - - - - + - - - - + - - - - + - - - - +<br />1 0 0 0&nbsp; A&nbsp; &nbsp; &nbsp; AND B |AND&nbsp; &nbsp;A,B|&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|<br />1 0 0 1&nbsp; A&nbsp; &nbsp; &nbsp; EQV B |EQV&nbsp; &nbsp;A,B|XNOR&nbsp; A,B|ENOR&nbsp; A,B|<br />1 0 1 0&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;B |&nbsp; &nbsp; &nbsp; &nbsp; B|&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|<br />1 0 1 1&nbsp; A&nbsp; &nbsp; &nbsp;RIMP B |RIMP&nbsp; A,B|IMP&nbsp; &nbsp;A,B|&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|<br />1 1 0 0&nbsp; A&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; |&nbsp; &nbsp; &nbsp; A&nbsp; |&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|<br />1 1 0 1&nbsp; A&nbsp; &nbsp; &nbsp;LIMP B |LIMP&nbsp; A,B|&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|<br />1 1 1 0&nbsp; A&nbsp; &nbsp; &nbsp; &nbsp;OR B |OR&nbsp; &nbsp; A,B|&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|<br />1 1 1 1&nbsp; &nbsp; &nbsp; &nbsp; TRUE&nbsp; &nbsp;|TRUE&nbsp; &nbsp; &nbsp;|Identity |&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|<br />----------------------+---------+---------+---------+<br /></div>
<br />
<br />Notice all the aliases for operands and constants from left to right.
<br />
<br />EOR means exclusive OR, this means either, but not both.
<br />LIMP means Left Implied, while RIMP means Right Implied.
<br />
<br />A RIMP B is A IMP B, a standard Implication.
<br />However, A LIMP B, is B IMP A. notice the order of the inputs reverses!
<br />
<br />Also notice EQV (Eqivalence) is the opposite of XOR (another common mnemonic device of EOR.)
<br />Thus, NEQV (Not Equivalent) is the same result as XOR (Exclusive Or!)
<br />Thus, XNOR also known by the mnemonic ENOR (Neither) is the opposite output of EQV (Equivalent!)
<br />
<br />This concludes the lesson, I am hell-ass tired and want to drive 50 miles home and go to bed.
<br />
<br />I don't have the money for a damn lear jet from this airport to that one so I have to drive.
<br />(Plus I would need a cargo jet anyways because I can't just leave my car at my damned friend's house.)
<br />
<br />I now smack you on the skull with the rod of holy virginity. You are now a super-geek. (once, you assimilate this tutorial completely.)
<br />
<br />END OF LESSON.
<br />
<br />(Just because I moulded you into a super-geek doesn't make me one, i lost my virginity a thousand plus times over, and I damn well am a steampunk industrial/grunge rocker with a 14 inch mohawk; possibly dyed, maybe even pigmented checker board; half the time anyways.)
<br />
<br />Plus I am hot as hell to chicks, did I ever tell the time I had to drive on two side wheels for 5000ft while disobeying Johnny Law and wrecklessly driving in order to defy certain death? Well maybe I share that story some other damn well time.
<br />
<br />Good luck in your Boolean Adventures.
<br />
<br /><em>Now piss off and <strong>GO MAKE YOUR CREATOR PROUD.</strong></em>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sun Aug 17, 2008 9:24 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I'm leaving this up long enough for you to copy this to your own blog or wiki.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>jargon</b> [ Sun Aug 17, 2008 11:52 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">I'm leaving this up long enough for you to copy this to your own blog or wiki.</div>
<br />
<br />um that was the rough draft, it is incomplete.
<br />
<br />btw i screwed up and listed RImp twice, the second time it was supposed to be Just B, that is prolly part of the confusion. (Fixed now.)
<br />
<br />plus i was awake for over 72 hours when i posted that. obviously, it is hard to comprehend.
<br />
<br />This is a comprehensive Boolean Logic Tutorial. It applies to everything logic related, btw I have not outlined the difference between logical boolean operators and bitwise boolean operators.
<br />
<br />Bitwise just means it applies to every digit of bits in the bitmask individually, logical means if any bit in a mask is set the entire mask is considered as Truth (set). Meaning -1 is 2's compliment mask 11111111 when using a "Signed Char". -2 would be 11111110. For, Unsigned Char 11111111 is 255, also under Unsigned Char 11111110 is 254. However in both, 00000001 is 1 and 00000010 is 2.
<br />
<br />this means when using logical boolean operands:
<br />
<br />if A is any of 111111111, 11111110, 00000001, 00000010; A is treated as 
<br />1. (Truth, Set)
<br />However, if A is 00000000, A is treated as 0. (False, Unset)
<br />
<br />Same goes for B for it's own input as how it is treated.
<br />
<br />the output would then be either 11111111 (Truth, Set) or otherwise 00000000 (False, Unset)
<br />
<br />This is how logical Boolean operands work.
<br />
<br />Bitwise Operands work as if each bit in the masks A, B were their own pair of inputs and bit in the mask of output.
<br />
<br />Thus 00000011 And 00001010 result is 0000010 when using Bitwise And,
<br />but 00000011 And 00001010 result is 11111111 when using Logical And.
<br />Some languages the result is 00000001 for logical for Truth, but I think NES uses the 11111111 (1 Byte) Logical Boolean Operand Truth (Set) mask.
<br />
<br />I haven't got to the actual Morysl Algorithm 100% yet.
<br />
<br />Also I haven't yet outlined the following, which I will do how:
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">3,2,1,0 applies to:<br /><br />Input1<br />n+-+-+<br />p|0|1|<br />u+-+-+<br />t|2|3|<br />2+-+-+<br /><br />where:<br /><br />left side us input 1 unset and right side is input 1 set. &#40;A&#41;<br /><br />-and-<br /><br />top half is input 2 unset and bottom half is input 2 set. &#40;B&#41;<br /></div><br /><br />for example:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">False<br />+-+-+<br />|0|0|<br />+-+-+<br />|0|0|<br />+-+-+<br /><br />Truth<br />+-+-+<br />|1|1|<br />+-+-+<br />|1|1|<br />+-+-+<br /><br />A And B<br />+-+-+<br />|0|0|<br />+-+-+<br />|0|1|<br />+-+-+<br /><br />A Nand B<br />+-+-+<br />|1|1|<br />+-+-+<br />|1|0|<br />+-+-+<br /><br />A Or B<br />+-+-+<br />|0|1|<br />+-+-+<br />|1|1|<br />+-+-+<br /><br />A Nor B<br />+-+-+<br />|1|0|<br />+-+-+<br />|0|0|<br />+-+-+<br /><br />A Xor B &#40;NEqv&#41;<br />+-+-+<br />|0|1|<br />+-+-+<br />|1|0|<br />+-+-+<br /><br />A Xnor B &#40;Eqv&#41;<br />+-+-+<br />|1|0|<br />+-+-+<br />|0|1|<br />+-+-+<br /><br />A Nor B<br />+-+-+<br />|1|0|<br />+-+-+<br />|0|0|<br />+-+-+<br /><br />A &#40;Input 1&#41;<br />+-+-+<br />|0|0|<br />+-+-+<br />|1|1|<br />+-+-+<br /><br />B &#40;Input 2&#41;<br />+-+-+<br />|0|1|<br />+-+-+<br />|0|1|<br />+-+-+<br /><br />A Nand B<br />+-+-+<br />|1|1|<br />+-+-+<br />|1|0|<br />+-+-+<br /><br />A Imp B &#40;RImp&#41;<br />+-+-+<br />|1|1|<br />+-+-+<br />|0|1|<br />+-+-+<br /><br />B Imp A &#40;LImp&#41;<br />+-+-+<br />|1|0|<br />+-+-+<br />|1|1|<br />+-+-+<br /><br />A NImp B &#40;NRImp&#41;<br />+-+-+<br />|0|0|<br />+-+-+<br />|1|0|<br />+-+-+<br /><br />B NImp A &#40;NLImp&#41;<br />+-+-+<br />|0|1|<br />+-+-+<br />|0|0|<br />+-+-+<br /></div><br /><br /><br />Thus:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">0000&nbsp; &nbsp;False&nbsp; &nbsp;| 1111&nbsp; &nbsp;Truth <br />0001 A NOr&nbsp; &nbsp;B | 1110 A Or&nbsp; &nbsp; B<br />0010 A NLimp B | 1101 A LImp&nbsp; B<br />0011 A Not&nbsp; &nbsp; &nbsp;| 1100 A&nbsp; &nbsp; &nbsp;<br />0100 A NRImp B | 1011 A RImp&nbsp; B<br />0101&nbsp; &nbsp;Not&nbsp; &nbsp;B | 1010&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;B<br />0110 A NEqv&nbsp; B | 1001 A Eqv&nbsp; &nbsp;B<br />0111 A Nand&nbsp; B | 1000 A And&nbsp; &nbsp;B <br /></div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dwedit</b> [ Mon Aug 18, 2008 12:00 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Are these the plans for Nature's harmonic simultaneous 4-day timecube?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>jargon</b> [ Mon Aug 18, 2008 12:10 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Dwedit wrote:</div><div class="quotecontent">Are these the plans for Nature's harmonic simultaneous 4-day timecube?</div>
<br />
<br />No, this is a comprehensive guide to Boolean Logic.
<br />
<br />All "The Logic Cube" is, is a unique way to organize an illustration of the 16 basic Boolean operands.
<br />
<br />All "The Morsyl Algorithm" is, is a way to dynamically dump the Boolean expression which is analogous to the logical gates on a printed circuit board for any MOSFET-based memory chip to demultiplex data in RAM or ROM, also known as an obsolete way to address data in memory physically.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Xkeeper</b> [ Mon Aug 18, 2008 2:41 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Dwedit wrote:</div><div class="quotecontent">Are these the plans for Nature's harmonic simultaneous 4-day timecube?</div>Hm. I suspect it would be more like the Synchronious 6-position Rubik's Cube's time-travelling breakdown ability, but I'm not sure.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Mon Aug 18, 2008 4:38 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Dwedit wrote:</div><div class="quotecontent">Are these the plans for Nature's harmonic simultaneous 4-day timecube?</div>
<br />I prefer <a href="http://pasareppu.fateback.com/joke/gamecube.html" class="postlink">Nintendo's portable simultaneous 4-player GameCube</a> myself.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Zepper</b> [ Mon Aug 18, 2008 7:57 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">jargon wrote:</div><div class="quotecontent"><div class="quotetitle">tepples wrote:</div><div class="quotecontent">I'm leaving this up long enough for you to copy this to your own blog or wiki.</div><br /><br />um that was the rough draft, it is incomplete.<br /><br />btw i screwed up and listed RImp twice, the second time it was supposed to be Just B, that is prolly part of the confusion. (Fixed now.)<br /><br />(junk)</div>
<br />
<br />He said about you taking out this junk and putting in your blog. He's NOT requesting more details about this junk.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>jargon</b> [ Mon Aug 18, 2008 10:48 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Fx3 wrote:</div><div class="quotecontent"><div class="quotetitle">jargon wrote:</div><div class="quotecontent"><div class="quotetitle">tepples wrote:</div><div class="quotecontent">I'm leaving this up long enough for you to copy this to your own blog or wiki.</div><br /><br />um that was the rough draft, it is incomplete.<br /><br />btw i screwed up and listed RImp twice, the second time it was supposed to be Just B, that is prolly part of the confusion. (Fixed now.)<br /><br />(junk)</div><br /><br />He said about you taking out this junk and putting in your blog. He's NOT requesting more details about this junk.</div>
<br />
<br />How is it junk? I haven't even gotten to the part where I show the op code list as 6502/2A03 machine code equivalents and their 2A03/6502 Assembly Mnemonic identifiers.
<br />
<br />(Btw, I meant 'B', not 'Just B'... fixed.)

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>