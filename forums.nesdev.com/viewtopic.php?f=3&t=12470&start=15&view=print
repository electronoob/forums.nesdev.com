<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - IRQ and NMI consume 7 CPU cycles</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">IRQ and NMI consume 7 CPU cycles</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=3&amp;t=12470">http://forums.nesdev.com/viewtopic.php?f=3&amp;t=12470</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>2</strong> of <strong>3</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>zeroone</b> [ Fri Mar 13, 2015 4:29 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: IRQ and NMI consume 7 CPU cycles</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I modified the way that my emulator detects NMI.  If (NMI_occurred AND NMI_output) changes from false to true, I set an NMI request flag in the CPU that is checked between instructions.  The NMI handler sets the flag to false.  <br /><br />With that in place, there should not be any lost NMI events resulting from a race condition between reading the PPU Status Register ($2002), which has the side effect of setting NMI_occurred to false, and detecting the start of VBlank.<br /><br />With that, I still had to introduce 2 minor hacks.  First, instead of setting NMI_occurred to true on dot 1 of scanline 241, the emulator sets it to true on dot 17 of that scanline.  With the hack in place, the NTSC and PAL versions of Marble Madness and Battletoads appear to function correctly.  <br /><br />The second level of Battletoads appears to be sensitive to NMI timing, sprite 0 hit detection and sprite overflow detection.  If NMI timing or sprite 0 hit detection is slightly off, the stage can freeze.  If the overflow detection is slightly off, then enemy hit detection can fail completely, making it impossible to advance (the player nor the enemies can get injured).  <br /><br />The second hack was to set the sprite overflow flag at dot 256 (at the beginning of HBlank).  But, it gets computed within the first 64 dots of the scanline.<br /><br />I would obviously like to remove these hacks at some point.  My emulator only passes a subset of Blargg's timing tests.  But, FCEUX 2.2.2 seems to fail the same tests that my emulator does.  So, I do not know which tests that the emulator really needs to pass to improve things.  Suggestions are welcome.<br /><br />Also, level 3 of Battletoads contains a bug.  When multiple rats are on the screen at the same time and the player punches one of them, the center (far) brain-like, background glitches.  You can see the effect in <a href="https://www.youtube.com/watch?v=til1jvC-Pys&amp;t=108" class="postlink">this video</a> of the game running on an actual NES.  We should probably mention that on the <a href="http://wiki.nesdev.com/w/index.php/Game_bugs" class="postlink">Game Bugs wiki page</a>, especially since I spent a while trying to get rid of the effect until I reproduced it on FCEUX and Nestopia.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Zepper</b> [ Fri Mar 13, 2015 5:33 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: IRQ and NMI consume 7 CPU cycles</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />You should measure the NMI time from another emulator... and compare it with yours. Putting a NMI time forward is not the way of fixing it. The NMI is nothing more than a PRG subroutine, probably for PPU in this game. Check what the NMI does - writes to $2006 are probably envolved there.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>zeroone</b> [ Fri Mar 13, 2015 5:41 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: IRQ and NMI consume 7 CPU cycles</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Zepper wrote:</div><div class="quotecontent">You should measure the NMI time from another emulator... and compare it with yours. Putting a NMI time forward is not the way of fixing it. The NMI is nothing more than a PRG subroutine, probably for PPU in this game. Check what the NMI does - writes to $2006 are probably envolved there.</div><br /><br />I tried exactly that, but I could not work out the differences.  <br /><br />Were you able to solve the Marble Madness text box issues in your emulator?  If not, could you post a screen shot of the glitch?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Zepper</b> [ Sat Mar 14, 2015 9:16 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: IRQ and NMI consume 7 CPU cycles</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The first image is a demo that uses midscanline writes(?). The other is Marble Madness.<br />Both have the same problem - glitched text boxes. The glitch isn't static, but &quot;moving&quot; left-&gt;right.

		
			<br clear="all" /><br />

			<table class="tablebg" width="100%" cellspacing="1">
			<tr>
				<td><b class="genmed">Attachments: </b></td>
			</tr>
			
				<tr>
					<td>
			<span class="genmed">
				<img src="./styles/subsilver2/imageset/icon_topic_attach.gif" width="14" height="18" alt="" title="" /> 
				<a href="./download/file.php?id=2824">midscanline.rar</a> [20.61 KiB]
			</span><br />
			<span class="gensmall">Downloaded 99 times</span>
		

		<br />
	</td>
				</tr>
			
				<tr>
					<td>
			<a href="./download/file.php?id=2823&amp;mode=view"><img src="./download/file.php?id=2823&amp;t=1" alt="Marble Madness (U) 000.bmp" /></a><br />
			<span class="gensmall">Marble Madness (U) 000.bmp [ 720.05 KiB | Viewed 3546 times ]</span>
		

		<br />
	</td>
				</tr>
			
				<tr>
					<td>
			<a href="./download/file.php?id=2822&amp;mode=view"><img src="./download/file.php?id=2822&amp;t=1" alt="midscanline_b 000.bmp" /></a><br />
			<span class="gensmall">midscanline_b 000.bmp [ 720.05 KiB | Viewed 3546 times ]</span>
		

		<br />
	</td>
				</tr>
			
			</table>
		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>zeroone</b> [ Sat Mar 14, 2015 9:39 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: IRQ and NMI consume 7 CPU cycles</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Zepper wrote:</div><div class="quotecontent">The first image is a demo that uses midscanline writes(?). The other is Marble Madness.<br />Both have the same problem - glitched text boxes. The glitch isn't static, but &quot;moving&quot; left-&gt;right.</div><br /><br />Here's mine without the hack:<br /><br /><img src="http://i.imgur.com/yviOWDJ.png" alt="Image" /><br /><br />And, just as you describe, those glitched tiles flicker.  But, as mentioned, if I trigger NMI at dot 17 instead of dot 1, they vanish.  You might want to try the same experiment.  <br /><br />I don't know if it is a coincidence, but dot 17 and dot 1 are exactly 2 tiles apart.  And, this hack prevents Battletoads level 2 from freezing.  It makes me wonder if the sprite 0 hit flag is actually set shortly after the 2 tiles are retrieved from memory, rather than when the pixels are rendered.  Meaning, a sprite 0 hit could potentially be detected up to 16 pixels ahead of time.<br /><br />Does Battletoads level 2 freeze in your emulator?  I've been using the Game Genie code to skip to level 2 for testing purposes.  Without the hack, it can still take a while to freeze.  See if you can pass the level a few times without freezing.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Zepper</b> [ Sat Mar 14, 2015 11:57 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: IRQ and NMI consume 7 CPU cycles</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Try the midscanline demo. I don't know exactly how you're &quot;delaying&quot; the NMI, but my emulator freezes if I try to change the NMI time. About Battletoads, well... the short answer is yes, it hangs during the level 2 due to a missing sprite zero hit.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>zeroone</b> [ Sat Mar 14, 2015 12:24 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: IRQ and NMI consume 7 CPU cycles</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Zepper wrote:</div><div class="quotecontent">Try the midscanline demo. I don't know exactly how you're &quot;delaying&quot; the NMI, but my emulator freezes if I try to change the NMI time. About Battletoads, well... the short answer is yes, it hangs during the level 2 due to a missing sprite zero hit.</div><br /><br /><img src="http://i.imgur.com/cOkuZbT.png" alt="Image" /><br /><br />Occasionally, I see the digit 1 glitch (it looks like a different tile appears instead of 1).  In Nestopia, the digit 1 is perfectly stable.  In FCEUX, the digit 1 and several other tiles are glitchy.  <br /><br />I am able to turn on and off the hack, and the hack does not appear to affect the glitched digit 1.<br /><br />In my emulator, the PPU drives the CPU.  For each scanline, the PPU executes the 341 dots.  Without the hack, it executes NMI at dot 1 of scanline 241.  With the hack turned on, it happens at dot 17 instead.<br /><br />That's not something you can add?<br /><br />Edit: Below is the results from midscanline_b.nes (I didn't realize you posted this one.)<br /><br /><img src="http://i.imgur.com/inhTgaR.png" alt="Image" /><br /><br />The image is completely stable.  No glitched tiles with the hack in place.  But, if I turn the hack off:<br /><br /><img src="http://i.imgur.com/V7t8qr1.png" alt="Image" /><br /><br />Up to 2 columns of flickering glitched tiles appear to the left of the text boxes, just like in your pic.  It seems likely you can fix your emulator by applying the same hack.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>daroou</b> [ Wed Mar 25, 2015 6:40 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: IRQ and NMI consume 7 CPU cycles</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Hi zeroone,<br /><br />I wanted to weigh in on this conversation because in my own emulator, I'm experiencing very similar results to yours. I've got the same one/two columns sprite flickering to the left of the Marble Madness text box; levels 1 and 2 not loading in Battletoads, and midscanline_b showing the same type of problem as you described and displayed in your screenshot.<br /><br />Interestingly, similar to you, by modifying my PPU code to trigger the NMI at line 241, dot ~25, many of the issues mostly disappear. I say mostly because in Battletoads, I seem to lock up randomly some times, and there's some pixel jitter near the top of the screen.<br /><br />I tried a different fix, which in my emulator seems to be much more stable and not glitchy. I continue to signal the NMI at 241.1, but in my CPU, when I handle the NMI, instead of counting it as 7 cycles, I now count it as 14. This hack seems to do the trick for me. One difference, though, between my emulator and yours, based on what you wrote, is that mine is driven by the CPU, not the PPU. So in my case, I attempt to execute a single CPU instruction, then advance the PPU by the number of CPU cycles elapsed. I'm not sure if this has any bearing on my fix, and whether it would work for you.<br /><br />As for why the fix works, I'm not exactly sure. I believe my emulator is as accurate as it can be, given that I'm using a CPU instruction as my &quot;atom&quot;. The one shortcut I've taken in terms of timing in my PPU is that for tile data, I fetch all 4 bytes (NT, AT, LowBG, HighBG) on every 8th cycle (the last cycle of the HighBG fetch). That's pretty much it. I don't believe this should have any effect on NMI timing, though.<br /><br />If you're so inclined, you can take a look at my code here: <!-- m --><a class="postlink" href="https://github.com/amaiorano/nes-emu">https://github.com/amaiorano/nes-emu</a><!-- m --><br /><br />I'd be curious to know if increasing your NMI cycle counting from 7 to 14 (or more?) also fixes the problem for you.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Zepper</b> [ Wed Mar 25, 2015 8:08 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: IRQ and NMI consume 7 CPU cycles</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I'd would like to request another NMI timing test ROM(s). Something graphically and with numbers, to see how much the timing is off.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>zeroone</b> [ Thu Mar 26, 2015 7:48 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: IRQ and NMI consume 7 CPU cycles</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">daroou wrote:</div><div class="quotecontent">Hi zeroone,<br /><br />I wanted to weigh in on this conversation because in my own emulator, I'm experiencing very similar results to yours. I've got the same one/two columns sprite flickering to the left of the Marble Madness text box; levels 1 and 2 not loading in Battletoads, and midscanline_b showing the same type of problem as you described and displayed in your screenshot.<br /><br />Interestingly, similar to you, by modifying my PPU code to trigger the NMI at line 241, dot ~25, many of the issues mostly disappear. I say mostly because in Battletoads, I seem to lock up randomly some times, and there's some pixel jitter near the top of the screen.<br /><br />I tried a different fix, which in my emulator seems to be much more stable and not glitchy. I continue to signal the NMI at 241.1, but in my CPU, when I handle the NMI, instead of counting it as 7 cycles, I now count it as 14. This hack seems to do the trick for me. One difference, though, between my emulator and yours, based on what you wrote, is that mine is driven by the CPU, not the PPU. So in my case, I attempt to execute a single CPU instruction, then advance the PPU by the number of CPU cycles elapsed. I'm not sure if this has any bearing on my fix, and whether it would work for you.<br /><br />As for why the fix works, I'm not exactly sure. I believe my emulator is as accurate as it can be, given that I'm using a CPU instruction as my &quot;atom&quot;. The one shortcut I've taken in terms of timing in my PPU is that for tile data, I fetch all 4 bytes (NT, AT, LowBG, HighBG) on every 8th cycle (the last cycle of the HighBG fetch). That's pretty much it. I don't believe this should have any effect on NMI timing, though.<br /><br />If you're so inclined, you can take a look at my code here: <!-- m --><a class="postlink" href="https://github.com/amaiorano/nes-emu">https://github.com/amaiorano/nes-emu</a><!-- m --><br /><br />I'd be curious to know if increasing your NMI cycle counting from 7 to 14 (or more?) also fixes the problem for you.</div><br /><br />Counting the NMI as 14 CPU cycles instead of 7 is equivalent to my hack.  I am triggering the NMI at dot 21 instead of dot 1, a delay of 7 CPU cycles.  I considered modifying my PPU to fetch all 4 bytes on the 8th cycle as you described, making all the tile data reads atomic.  But, currently, the tile data reads are spread out as described in the wiki (a read every 2 PPU cycles).  <br /><br />If instructions are executed atomically, the CPU and PPU will be out of sync by up to +/- 8 CPU cycles.  But, I'm not convinced that a cycle-by-cycle CPU implementation would make much of a difference because memory writes occur on the final instruction cycle.  Meaning, they are virtually atomic already.  <br /><br />For Battletoads level 2, my hack seems to prevent it from freezing.  There is a Game Genie code that gives you infinite lives and another to skip to level 2.  I've used them to play through the level over and over again without issues.  <br /><br />Level 2 freezes due to a missed sprite 0 hit.  The check happens at the lower-right corner of the status bar.  It is used to split the screen between the status bar and the vertical scrolling beneath it.  I think the miss is a consequence of the PPU background rendering not being enabled in time.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>daroou</b> [ Thu Mar 26, 2015 11:37 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: IRQ and NMI consume 7 CPU cycles</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Counting the NMI as 14 CPU cycles instead of 7 is equivalent to my hack. I am triggering the NMI at dot 21 instead of dot 1, a delay of 7 CPU cycles.</div><br />Yeah, I'm not sure if they are exactly the same. At 241.1, my PPU signals an NMI, then when my CPU is next updated, it handles it, and reports 14 cycles; this allows the PPU to execute 14*3 = 42 PPU cycles, whereas it would only have executed 7*3 = 21 PPU cycles previously. Maybe it's effectively the same seeing as in your emulator, the PPU drives everything.<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">If instructions are executed atomically, the CPU and PPU will be out of sync by up to +/- 8 CPU cycles. But, I'm not convinced that a cycle-by-cycle CPU implementation would make much of a difference because memory writes occur on the final instruction cycle. Meaning, they are virtually atomic already. </div><br />At some point, I'll take a look at Nintendulator, which is a cycle-by-cycle CPU implementation, and see if there's anything interesting in there.<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">For Battletoads level 2, my hack seems to prevent it from freezing. There is a Game Genie code that gives you infinite lives and another to skip to level 2. I've used them to play through the level over and over again without issues.</div><br />Perhaps it's not valid, but I tested my fixes by saving state just before level 2 loads. I was able to easily repro the problem, tweak values progressively, and eventually see it disappear, always by loading my save state file.<br /><br />Thanks for responding!

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Zepper</b> [ Thu Mar 22, 2018 8:56 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: IRQ and NMI consume 7 CPU cycles</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />necrobump  <img src="./images/smilies/icon_eek.gif" alt=":shock:" title="Shocked" /> <br /><br />Anything new? My emu STILL has the flickering problem. Any &quot;final word&quot; about this issue?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>daroou</b> [ Thu Mar 22, 2018 9:29 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: IRQ and NMI consume 7 CPU cycles</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Wow, how strange that you should bump this now as I had literally just chatted about this issue two days ago on <a href="https://www.twitch.tv/themexicanrunner" class="postlink">TMR's Twitch stream</a> while he was speed-running Battletoads!<br /><br />I haven't learned or seen anything more on this topic. I stopped working on my nes emulator a while ago, and had to re-read this thread a few times just to refresh my memory <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /> Would love to know if there's been any progress on why this seems to happen to so many of us that write emulators following the docs on the wiki.<br /><br />(P.S. Shameless plug: I've since been working on a Vectrex emulator, and have been streaming it on <a href="https://www.twitch.tv/daroou2/" class="postlink">Twitch here</a> in case that's interesting to anyone <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Donqustix</b> [ Tue Apr 17, 2018 12:55 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: IRQ and NMI consume 7 CPU cycles</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Speaking of Marble Madness, the glitched-text-box issue doesn't appear in my emulator, but there is another problem: a flickering on the top of the screen when the game starts.<br /><br />I don't know the cause of the problem, but as I remember correctly, FCEUX doesn't produce any of the mentioned glitches.

		
			<br clear="all" /><br />

			<table class="tablebg" width="100%" cellspacing="1">
			<tr>
				<td><b class="genmed">Attachments: </b></td>
			</tr>
			
				<tr>
					<td>
			<a href="./download/file.php?id=12385&amp;mode=view"><img src="./download/file.php?id=12385&amp;t=1" alt="glitch.png" /></a><br />
			<span class="gensmall">glitch.png [ 29.74 KiB | Viewed 1325 times ]</span>
		

		<br />
	</td>
				</tr>
			
			</table>
		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tdondich</b> [ Wed Apr 18, 2018 1:14 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: IRQ and NMI consume 7 CPU cycles</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Silly question.  But once the nestest runs, wouldn't it want to disable NMI in order to ensure the instructions are handled properly in order?  I would assume the only time nmi is enabled is when it's actually at the start screen waiting for test selection.  In fact, starting the emulator directly from the test address for all official opcode tests didn't show anything being written to PPU to enable NMI.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>2</strong> of <strong>3</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>