<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Stack instructions interfering with Subroutines and RTS??</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Stack instructions interfering with Subroutines and RTS??</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=3&amp;t=15970">http://forums.nesdev.com/viewtopic.php?f=3&amp;t=15970</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>PolarBITS</b> [ Mon May 22, 2017 9:24 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Stack instructions interfering with Subroutines and RTS??</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />So I've been having trouble implementing subroutines because of this strange problem. Supposedly its implied that the stack shouldn't be written to during subroutines, right? Since JSR writes the address of the next instruction to the stack and RTS reads that address to return, the stack shouldn't be written to, or should be trimmed so that the net effect is that the address written by JSR is at the top of the stack by the end of the subroutine. At least, this is what I'm assuming. Below are the instructions in the subroutine, and as you can see, several instructions push to the stack, but none pop off it except for RTS. After each instruction that changes the stack, I'll list an output of the stack at that point.<br /><br />JSR cbaa abs<br />[200, 7]<br />LDA 00 imm<br />STA 04 zp<br />LDA ff imm<br />JMP f0a1 abs<br />STA 03 zp<br />LDA 0f imm<br />PHA  <br />[15, 200, 7]<br />STA 0f zp<br />TXA  <br />PHA  <br />[255, 15, 200, 7]<br />TYA  <br />PHA  <br />[0, 255, 15, 200, 7]<br />LDA 00 zp<br />PHA  <br />[0, 0, 255, 15, 200, 7]<br />LDA 05 zp<br />PHA  <br />[0, 0, 0, 255, 15, 200, 7]<br />LDA 06 zp<br />PHA  <br />[0, 0, 0, 0, 255, 15, 200, 7]<br />LDA 07 zp<br />PHA  <br />[0, 0, 0, 0, 0, 255, 15, 200, 7]<br />LDA 08 zp<br />PHA  <br />[0, 0, 0, 0, 0, 0, 255, 15, 200, 7]<br />LDA 09 zp<br />PHA  <br />[0, 0, 0, 0, 0, 0, 0, 255, 15, 200, 7]<br />LDA 02 imm<br />STA 05 zp<br />LDA 0f zp<br />CMP 04 imm<br />BEQ 36 imm<br />LDA 0f imm<br />AND 03 zp<br />STA 07 zp<br />LDA 03 zp<br />LSR  acc<br />LSR  acc<br />LSR  acc<br />LSR  acc<br />STA 06 zp<br />TAX  <br />LDA 00 imm<br />CLC  <br />ADC 07 zp<br />DEX  <br />BNE fb imm<br />STA 08 zp<br />LDA 0f zp<br />BNE 06 imm<br />ISC aea5 abs<br />CLC  <br />ADC 01 imm<br />ASL  acc<br />ASL  acc<br />ASL  acc<br />ASL  acc<br />TAX  <br />RTS<br /><br />The initial address that was written to the stack is blocked by a bunch of values, and the program can't get to it. Can someone help?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Mon May 22, 2017 9:31 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Stack instructions interfering with Subroutines and RTS?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />It's possible to <a href="https://wiki.nesdev.com/w/index.php/RTS_Trick" class="postlink">push a new return address manually</a>, and pretty much every NES game I've ever written does that at least once.<br /><br />But the presence of unofficial instruction ISC hints that something probably went wrong in the disassembly or in the emulation of code prior to this: memory address $000F is zero when it shouldn't have been. And how did value $00 get into X, Y, $0000, and $0005-$0009? From which program is this disassembled?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>PolarBITS</b> [ Mon May 22, 2017 11:00 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Stack instructions interfering with Subroutines and RTS?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent"> From which program is this disassembled?</div><br /><br />I'm testing using the Japanese version of Donkey Kong. What makes you say that $000f shouldn't be zero?<br /><br />This code comes from the very beginning of the ROM during the startup procedure, before a frame has even passed. So if $000f isn't 0, it's probably a startup assignment, yet I haven't seen that specific address being set in the documentation, as $0000-$0100 is general RAM, right?<br /><br />Here's all the codes I've disssasembled to this point: <!-- m --><a class="postlink" href="https://pastebin.com/XNiTFmaD">https://pastebin.com/XNiTFmaD</a><!-- m --><br />I know for certain that the beginning is correct, at least. Let me know where I screwed up.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>adam_smasher</b> [ Mon May 22, 2017 11:08 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Stack instructions interfering with Subroutines and RTS?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Not to be rude, but is there no reason that you can't trace the execution of this code in another emulator to find that out for yourself?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>AWJ</b> [ Mon May 22, 2017 3:31 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Stack instructions interfering with Subroutines and RTS?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Your disassembly syntax is very non-standard, and the lack of addresses for each instruction makes it even harder to follow. Nevertheless, I've compared your output with a disassembly of the ROM and managed to work out where you're going wrong:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">BNE 06 imm<br />ISC aea5 abs</div><br /><br />This branch is incorrectly jumping backwards instead of forwards, into the middle of an instruction (that's why it's hitting an unofficial opcode) in a totally different routine. The operand of a branch instruction is a signed displacement. if it's between $00 and $7F it's a forward branch, if it's between $80 and $FF it's a backward branch. Your code is incorrectly turning a forward branch by 6 into a backwards branch by (6 - 256).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>PolarBITS</b> [ Mon May 22, 2017 4:03 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Stack instructions interfering with Subroutines and RTS?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Ah, thanks for that. Will fix now!

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>PolarBITS</b> [ Mon May 22, 2017 4:22 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Stack instructions interfering with Subroutines and RTS?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">AWJ wrote:</div><div class="quotecontent">if it's between $00 and $7F it's a forward branch, if it's between $80 and $FF it's a backward branch.</div><br /><br />Just to be clear, $80 is -127 and $FF is -1, right?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Mon May 22, 2017 4:32 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Stack instructions interfering with Subroutines and RTS?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />$80 is -128. There's no negative zero, so the negative range gets 1 extra unit compared to the positive range, which only goes up to 127.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Mon May 22, 2017 6:02 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Stack instructions interfering with Subroutines and RTS?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />This way of storing numbers is known as &quot;two's complement&quot;, if you're interested in reading more:<br /><a href="https://en.wikipedia.org/wiki/Two's_complement" class="postlink">Wikipedia article: Two's complement</a><br /><br />Most signed integer number formats use two's complement, so understanding it is good general knowledge for computer sceience.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>