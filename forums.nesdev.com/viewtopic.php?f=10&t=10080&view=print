<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Issues with scrolling both directions</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Issues with scrolling both directions</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=10&amp;t=10080">http://forums.nesdev.com/viewtopic.php?f=10&amp;t=10080</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Quackula</b> [ Tue May 07, 2013 12:28 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Issues with scrolling both directions</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I've been working at learning NES coding for several months now, and the incredible amount of information here and at NintendoAge have helped me out a lot. I'm stuck on this one though, so I decided to finally make a post and see if people can point me in the right direction.<br /><br />I've been trying to put together a short demo for scrolling combined with collision detection, and while I've gotten everything to work well enough going right, I run into issues when I go left. It seems as if the collision map isn't being updated properly when I scroll to the right, as my character suddenly is colliding with invisible walls, falling through the floor, and all manner of other odd behaviors.<br /><br />I tried to take a break from this for a bit and go back to it, but nothing I've done seems to be fixing it. <br /><br />Anyway, I've included some relevant snippets of my (probably really sloppy and messy) code. Hopefully someone knowledgeable can look at it and point me in the direction of what I'm doing wrong and how I can fix this.<br /><br />I have a feeling that the stuff I'm doing in @left here might be the cause of my problems.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">Column:<br />&nbsp; &nbsp;lda xscroll+1<br />&nbsp; &nbsp;and #%00001111&nbsp; &nbsp;&nbsp; &nbsp;;check bottom 4 bits to see if we need to draw a new column<br />&nbsp; &nbsp;bne @done2&nbsp; &nbsp;&nbsp; &nbsp;<br />&nbsp; &nbsp;lda drawn&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;;check the 'drawn' value to see if we've already drawn this value<br />&nbsp; &nbsp;bne @done2<br />&nbsp; &nbsp;lda #$01&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;;if we haven't drawn, set drawn value to #$01 and continue<br />&nbsp; &nbsp;sta drawn<br />&nbsp; &nbsp;<br />&nbsp; &nbsp;lda xscroll+1&nbsp; &nbsp;&nbsp; &nbsp;<br />&nbsp; &nbsp;and #%11110000&nbsp; &nbsp;&nbsp; &nbsp;<br />&nbsp; &nbsp;lsr<br />&nbsp; &nbsp;lsr<br />&nbsp; &nbsp;lsr<br />&nbsp; &nbsp;lsr<br />&nbsp; &nbsp;sta ColRam_Index&nbsp; &nbsp;;check upper bits of xscroll, shift, store in ColRam_Index<br />&nbsp; &nbsp;<br />&nbsp; &nbsp;lda render_direction&nbsp; &nbsp;<br />&nbsp; &nbsp;bne @left&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;;check which direction we're rendering in. If non zero, jump to @left<br />&nbsp; &nbsp;jsr findcolumnR&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;<br />&nbsp; &nbsp;jsr Loadcolumn&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;;find right hand column and buffer it.<br />&nbsp; &nbsp;jmp @done2<br />@left <br />&nbsp; &nbsp;lda ColRam_Index&nbsp; &nbsp;<br />&nbsp; &nbsp;sec<br />&nbsp; &nbsp;sbc #$01<br />&nbsp; &nbsp;sta ColRam_Index&nbsp; &nbsp;&nbsp; &nbsp;;subtract $#01 from ColRam_Index<br />&nbsp; &nbsp;lda ColRam_Index<br />&nbsp; &nbsp;bpl @.&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;;if the result is negative, we load $#0F and store that in ColRam_Index<br />&nbsp; &nbsp;lda #$0F<br />&nbsp; &nbsp;sta ColRam_Index<br />@.<br />&nbsp; &nbsp;jsr findcolumnL&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;;find left hand column and buffer it<br />&nbsp; &nbsp;jsr Loadcolumn<br />@done2<br />&nbsp; &nbsp;lda xscroll+1&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;<br />&nbsp; &nbsp;and #%00001111&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;;check lower bits of xscroll+1, if zero, go to @rts<br />&nbsp; &nbsp;beq @rts<br />&nbsp; &nbsp;lda #$00&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;;reset &quot;drawn&quot; to #$00<br />&nbsp; &nbsp;sta drawn<br />@rts&nbsp; &nbsp;<br /><br />&nbsp; JSR Movement<br />&nbsp; JSR Collision<br />&nbsp; JSR UpdateSprites<br />&nbsp; rts<br /></div><br /><br />I hope I'm providing enough information. If not, I'll be happy to clarify anything.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>3gengames</b> [ Tue May 07, 2013 12:45 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Issues with scrolling both directions</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />You're code is written wrong, if xscroll is a variable/piece of RAM. You're trying to do a LDA,CLC,ADC #$01 with your xscroll+1, when it loads A with the LOCATION of xscroll+1, so if it's at $0123, it loads from $0124. That would probably do it.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Quackula</b> [ Tue May 07, 2013 12:52 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Issues with scrolling both directions</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">3gengames wrote:</div><div class="quotecontent">You're code is written wrong, if xscroll is a variable/piece of RAM. You're trying to do a LDA,CLC,ADC #$01 with your xscroll+1, when it loads A with the LOCATION of xscroll+1, so if it's at $0123, it loads from $0124. That would probably do it.</div><br />No, that's intentional. Probably should've clarified before... xscroll is 3 bytes. One for subpixel stuff, the one that's manipulated here, and one that keeps track of which screen it's on (the lowest bit of xscroll+2 is used for the $2000 write to set the nametable arrangement thing.) <br /><br />Besides, if it were that, I don't think it would work very well when scrolling to the right. I'm only having problems when going left.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>unregistered</b> [ Tue May 07, 2013 9:45 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Issues with scrolling both directions</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Quackula wrote:</div><div class="quotecontent"><div class="codetitle"><b>Code:</b></div><div class="codecontent">@left <br />&nbsp; &nbsp;lda ColRam_Index&nbsp; &nbsp;<br />&nbsp; &nbsp;sec<br />&nbsp; &nbsp;sbc #$01<br />&nbsp; &nbsp;sta ColRam_Index&nbsp; &nbsp;&nbsp; &nbsp;;subtract $#01 from ColRam_Index<br />&nbsp; &nbsp;lda ColRam_Index<br />&nbsp; &nbsp;bpl @.&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;;if the result is negative, we load $#0F and store that in ColRam_Index<br />&nbsp; &nbsp;lda #$0F<br />&nbsp; &nbsp;sta ColRam_Index<br />@.<br /></div></div><br /><br />Just one thing I notice... wouldn't this also work? <div class="codetitle"><b>Code:</b></div><div class="codecontent">@left<br />&nbsp; &nbsp; &nbsp; &nbsp; dec ColRam_Index<br />&nbsp; &nbsp; &nbsp; &nbsp; lda ColRam_Index<br />&nbsp; &nbsp; &nbsp; &nbsp; bpl @.<br />&nbsp; &nbsp; &nbsp; &nbsp; lda #$0F<br />&nbsp; &nbsp; &nbsp; &nbsp; sta ColRam_Index<br />@.<br /></div><br />I know dec is 5 cycles... but it's only 5 cycles...  it replaces 2 + 2 + 2 <span style="color: #40BFFF">+ 2</span> = at least <s>6</s> <span style="color: #40BFFF">8</span> cycles.  FCEUX 2.1.5 likes simple code I'm learning too... <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /><br /><span style="color: #40BFFF">edit.</span>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>3gengames</b> [ Wed May 08, 2013 7:18 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Issues with scrolling both directions</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />It actually could be replaced with:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; DEC ColRam_Index<br />&nbsp; BPL @.<br />&nbsp; LDA #$0F<br />&nbsp; STA ColRam_Index<br />@.<br /></div><br /><br />Simpler in assembly is always better...the first example...avoid that, especially since more line=more errors.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>unregistered</b> [ Wed May 08, 2013 9:01 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Issues with scrolling both directions</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Quackula, I am sorry I can't help you how you want to be helped.  <img src="./images/smilies/icon_sad.gif" alt=":(" title="Sad" />  It's a problem I'll be facing too... my code almost works when scrolling right... doesn't scroll at all to the left.  I guess all of your function calls... like <strong>findColumnR</strong> and <strong>Loadcolumn</strong>... are all of those guarenteed to work?  Kasumi has helped me learn that it's important to start with small code and add to that a little bit and check it again.  Just slowly guarentee each function... that would be my plan of attack.  Hope someone else can help you with this.  God bless your codeing. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Quackula</b> [ Wed May 08, 2013 9:08 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Issues with scrolling both directions</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">3gengames wrote:</div><div class="quotecontent">Simpler in assembly is always better...the first example...avoid that, especially since more line=more errors.</div><br /><br />I think I'm learning that the hard way... man this entire routine is a complete mess and barely works as it is. Trying to just redo it from the ground up now and going to read up some more, hopefully I can make something a bit easier to troubleshoot.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Celius</b> [ Wed May 15, 2013 11:51 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Issues with scrolling both directions</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I ran into an issue with my code that would happen upon switching directions. If you're using kind of a &quot;rolling&quot; window, where the columns of your level get decoded one column at a time as they are revealed, make sure that you decode the next column immediately as the scrolling direction is switched. What happened to me is that I would only decode after crossing a column boundary. So I'd be moving left, and it would decode a column on the left, but then I'd move right and it would only decode the next right column after crossing a column boundary. Seems fine, but as soon as I moved ahead a screen, the collision map in RAM contained the information for the last column that was decoded as I was moving left. It never got overwritten after switching directions.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Wed May 15, 2013 12:18 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Issues with scrolling both directions</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I think people usually overthink this. If you think in terms of &quot;switching directions&quot; things will end up being more complicated than they should be, because you have to interrupt the task of scrolling in one direction to start the task of scrolling in another (and this interruption is probably what causes the data inconsistencies), while they could very well be the same task, and the direction only really affects where the tiles/attributes are read from and where they are written to.<br /><br />The logic for scrolling is pretty straight forward: when a metatile boundary is crossed, check the direction of the last movement to decide whether the new column comes from CameraX or CameraX + 256 in the level map, and whether it will be written to ScrollX or ScrollX + 256 in the name/attribute tables. This is all the direction should really affect, a couple of pointers. Once you have these pointers ready, the process should be exactly the same no matter the direction.<br /><br />Even when scrolling horizontally and vertically at the same time it can still be this simple, you just need to fully process one axis (move camera and scroll, check source and destination addresses, fill buffers) before processing the other, otherwise one axis won't take into consideration all the changes made to the other axis and the output will often be shifted by 1 metatile, resulting in corrupted backgrounds. The only thing that really complicates multi-directional scrolling are the attribute tables, you often have to come up with a trick to handle the crossing of vertical boundaries to get the colors right.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Wed May 15, 2013 2:54 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Issues with scrolling both directions</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">The logic for scrolling is pretty straight forward: when a metatile boundary is crossed, check the direction of the last movement to decide whether the new column comes from CameraX or CameraX + 256 in the level map, and whether it will be written to ScrollX or ScrollX + 256 in the name/attribute tables.</div><br />Yep. Just think of normal right-only scrolling. Scroll right one pixel. Any tile redrawing? If no, then you can still scroll left one pixel without needing to do anything. So there's an 8/16-pixel area where you can scroll freely back and forth without any tile drawing. Only going outside this do you need to redraw one edge.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Celius</b> [ Tue May 21, 2013 2:50 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Issues with scrolling both directions</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">I think people usually overthink this. If you think in terms of &quot;switching directions&quot; things will end up being more complicated than they should be..</div><br /><br />I'm pretty sure this is the case with everything; a golden rule is that the simplest explanation is often the most correct/accurate/reliable.<br /><br />I had kind of a bad feeling about needing to check for the switch of directions, like something I was doing was wrong. It might just be something wrong with the order in which I do things in my code. But I have a tendency to make fencepost errors; I'm often off by 1. With my game, which only scrolls two directions, I have a collision map in RAM that's $200 bytes. It's sort of a rolling window where if you move left, it writes the collision data to RAM for -$80 pixels off the screen, and if you move right, it writes data for +$80 pixels off the screen. The way it was working was that if you moved left, it might copy data to $340-$34F, but it might share that same buffer the second you turn right. If that buffer doesn't get updated the second you turn to have &quot;right&quot; data, it would keep the &quot;left&quot; data and you'd run into a garbage column of collision data once you move right a fair bit.<br /><br />Again, I'm sure there's some off by 1 logic error I overlooked. It works now, but I had a feeling there should be a way to simplify it.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>