<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Reading from PPU for background collision</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Reading from PPU for background collision</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=16792">http://forums.nesdev.com/viewtopic.php?f=2&amp;t=16792</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>2</strong> of <strong>2</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Thu Dec 07, 2017 1:37 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Reading from PPU for background collision</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />It has a few names, but the term I'm used to for this type of data structure is &quot;<a href="https://en.wikipedia.org/wiki/Ring_buffer" class="postlink">ring buffer</a>&quot;.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>DRW</b> [ Thu Dec 07, 2017 1:59 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Reading from PPU for background collision</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">dougeff wrote:</div><div class="quotecontent">Your game (DRW) has auto-scrolling. So, load if scroll multiple of 8 makes sense here. Any game where scroll can shift 2 pixels in 1 frame might miss a load.</div><br />In this case, you of course have to do a slightly different check.<br />For example<br /><tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">if &#40;&#40;NewScollingPosition &amp; 7&#41; &lt; &#40;OldScrollingPosition &amp; 7&#41;&#41;</tt><br />or something like that.<br /><br /><div class="quotetitle">na_th_an wrote:</div><div class="quotecontent">As a hint for future games, you can avoid having to shift the entire array if you use a circular array with a moving, &quot;virtual&quot; first index.</div><br />Yeah, I thought about that. But having to calculate the index offset for every time the x position of any character is checked (which is quite a bit for various collision checks and the x position is an integer instead of just a byte) would have been more problematic and would have wasted more ROM space (and therefore more CPU time) than simply shifiting a 34 byte array every eight frames. (I even did this shift in Assembly for maximum speed.)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>na_th_an</b> [ Thu Dec 07, 2017 9:48 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Reading from PPU for background collision</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">rainwarrior wrote:</div><div class="quotecontent">It has a few names, but the term I'm used to for this type of data structure is &quot;<a href="https://en.wikipedia.org/wiki/Ring_buffer" class="postlink">ring buffer</a>&quot;.</div><br /><br />Thanks for the info. I just translated literrally from Spanish <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /><br /><div class="quotetitle">DRW wrote:</div><div class="quotecontent">Yeah, I thought about that. But having to calculate the index offset for every time the x position of any character is checked (which is quite a bit for various collision checks and the x position is an integer instead of just a byte) would have been more problematic and would have wasted more ROM space (and therefore more CPU time) than simply shifiting a 34 byte array every eight frames. (I even did this shift in Assembly for maximum speed.)</div><br /><br />Yeah, I understand. It really depends on the size of your buffer.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Celius</b> [ Thu Dec 07, 2017 1:39 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Reading from PPU for background collision</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The circular buffer concept is really quite easy to work with, especially in projects that only scroll horizontally or vertically. For me, the trick was to dedicate 2 pages of RAM to house a 2-screen rolling window of collision data (I store it in $600-$7FF). The data is formatted so that every 16 bytes represents a column of 16x16 pixel metatiles in the window. No matter what direction the camera is scrolling, determining where to &quot;dump&quot; newly revealed columns of tiles is extremely easy. You just take the in-level X coordinate of the camera boundary (the left boundary for scrolling left, right for scrolling right), AND it with $01F0, and add $0600. So if the camera scrolls so that the right boundary is at pixel $1BC1, which reveals a new column of metatiles, that column of metatiles would be dumped at (($1BC1 AND $01F0) + $0600) = $07C0.<br /><br />Collision detection is just a step beyond this logic. After calculating the address of the column of tiles with the X coordinate, you divide the Y coordinate by 16 and use this as and use this as an index to that starting address.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">;XHigh/XLow/YLow represent a set of in-game X/Y coordinates. X is 16-bit, Y is 8-bit due to no vertical scrolling.<br /><br />lda XHigh<br />and #$01<br />clc<br />adc #$06<br />sta TempAddH<br /><br />lda XLow<br />and #$F0<br />sta TempAddL<br /><br />lda YLow<br />lsr a<br />lsr a<br />lsr a<br />lsr a<br />tay<br /><br />lda (TempAddL),y&nbsp; &nbsp;;Your tile type<br /></div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>na_th_an</b> [ Fri Dec 08, 2017 9:12 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Reading from PPU for background collision</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Exactly what I do. For 1 way scrollers, I usually have a 16x16 buffer (specially vertical games), and a two-screener for 2-way scrollers (left-right, mostly). Calculating where to write to the buffer is trival and collision detection is really easy this way.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Celius</b> [ Fri Dec 08, 2017 11:47 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Reading from PPU for background collision</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The main thing I like about it is that it just works by itself without a lot of &quot;special case&quot; intervention. The only issue I ran into was if I sized my rolling window to be exactly 2 screens, I saw bad things happen when changing directions. Since both the left and right boundary of the window are exactly 2 screens apart, the address of where to dump new columns in the circular buffer is exactly the same for both directions. If the left bound is at pixel $1BC2, the right bound is at pixel $1DC2, which both evaluate to start at $7C0 in the circular buffer. Long story short, I would run into issues where it would skip updating values in the buffer that needed to change, if the scrolling direction changed. You could easily end up with corrupt collision data.<br /><br />The easiest solution for me was to shrink my rolling window so that it's a little smaller than the width of the buffer. I just shrunk it down to like 480 pixels instead of 512.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>2</strong> of <strong>2</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>