<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Neoflash n64 carts out</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Neoflash n64 carts out</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=5&amp;t=5917">http://forums.nesdev.com/viewtopic.php?f=5&amp;t=5917</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>2</strong> of <strong>2</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sun Jan 10, 2010 6:52 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">peppers wrote:</div><div class="quotecontent">there would b less point in using the 3 in 1 since you would have to use its flash</div><br />All 256 Mbit of it. How many larger games were ever made? I can think of Resident Evil 64 and Conker but no others.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">and that's almost the same as the cart it comes with.</div><br />I wasn't aware that one was bundled, but at least it's a cheap way to expand capacity.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">so it may be ok for development if it could be used in a way that would allow it to always be connected to a computer</div><br />That would depend on building an adapter between the N64's PWM serial protocol and a USB port. The flash would have the BIOS; the 128 Mbit RAM would have the part of the game being developed.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Hacking it to use one of the other reasonably priced RAM adapter carts rather than the way overpriced NEO2 would be what I would want so I could use a memory card.</div><br />But then you'd have to make a BIOS for the SuperCard that uses MIPS R4K instructions and N64 I/O rather than ARM7 instructions and GBA I/O.<br /><br /><div class="quotetitle">MottZilla wrote:</div><div class="quotecontent"> <!-- m --><a class="postlink" href="http://64dev.retroactive.be/forum/viewtopic.php?t=52">http://64dev.retroactive.be/forum/viewtopic.php?t=52</a><!-- m --></div>
<br />I have no idea how that would work. As far as I can tell, a read from CF has to start at a 512-byte boundary, but a read from "RDROM" in an N64 cart does not. Otherwise, you'll only be able to run games that fit their code and data entirely into the N64's internal RAM, much like the GBA "multiboot" games that the GBA Movie Player could run.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>peppers</b> [ Sun Jan 10, 2010 2:23 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">But then you'd have to make a BIOS for the SuperCard that uses MIPS R4K instructions and N64 I/O rather than ARM7 instructions and GBA I/O.</div>
<br />Then how dose the NEO2 work?
<br /><img src="http://www.dcemu.co.uk/screens/NEO2-SD_Retail-6.jpg" alt="Image" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sun Jan 10, 2010 2:50 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Probably just like the PowerPak and the SuperCard: the console executes the adapter's firmware upon startup, and the firmware reads the list of games from the card, lets the user pick one, and copies the selected game into a RAM chip. To get it to work on an N64 instead of a GBA, you'd have to port the firmware to run on N64 hardware. Otherwise, it's like trying to run a Sega CD game on a PlayStation: even though they use the same media, they use different instruction sets and different I/O maps.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>peppers</b> [ Sun Jan 10, 2010 2:54 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />can't the N64 flash carts hardware be used to perform these tasks?
<br />
<br />what I ment was how dose the Neo2 gba SD card adapter work in Neoflashes new N64 flash cart as its memory source?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>MottZilla</b> [ Sun Jan 10, 2010 2:55 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent"><div class="quotetitle">peppers wrote:</div><div class="quotecontent">there would b less point in using the 3 in 1 since you would have to use its flash</div><br />All 256 Mbit of it. How many larger games were ever made? I can think of Resident Evil 64 and Conker but no others.<br /></div>
<br />
<br />I'm fairly certain there were 5 games that would 512mbit. Resident Evil, Conker, and Paper Mario are the ones I recall. But I believe there were 2 more.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>danntor</b> [ Sun Jan 10, 2010 10:46 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Pokemon Stadium 2, Ocarina of Time - Master Quest, BioHazard 2 are the other 512Mb dumps.
<br />
<br />So from this thread there are;
<br />
<br />Pokemon Stadium 2
<br />Ocarina of Time - Master Quest
<br />BioHazard 2
<br />Resident Evil 2
<br />Conker's Bad Furday
<br />Paper Mario

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>peppers</b> [ Sun Jan 10, 2010 11:27 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />it dose come with a 512 mbit cart.......

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>kyuusaku</b> [ Mon Jan 11, 2010 8:47 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Ogre Battle and Paper Mario are 320M. I believe Master Quest is just 256M.
<br />
<br />I'm pretty sure the N64 strictly reads ROM in 256 x 16-bit word bursts, page aligned.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Mon Jan 11, 2010 8:57 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">kyuusaku wrote:</div><div class="quotecontent">I'm pretty sure the N64 strictly reads ROM in 256 x 16-bit word bursts, page aligned.</div>
<br />If so, that's exactly the sort of burst a CF card, SD card, or DS Game Card puts out. But what access latency does the N64 expect from the ROM?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>kyuusaku</b> [ Tue Jan 19, 2010 4:31 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">If so, that's exactly the sort of burst a CF card, SD card, or DS Game Card puts out. But what access latency does the N64 expect from the ROM?</div>
<br />Oops, I lied. Found a logic analyzer trace showing that the address doesn't have to be page aligned nor does it always read in the full 256 word bursts. This still isn't necessarily a problem though, because the default (it's programmable) delay between latching the address and data I/O is sufficient to read a couple sectors into memory. Directing cartridge SRAM writes back to NAND when they aren't sector aligned is still tricky though; up to 2 sectors will need to be read, modified and written before, during and possibly after the access cycle.
<br />
<br />I bought a SD slot for my FPGA to give this a try.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>2</strong> of <strong>2</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>