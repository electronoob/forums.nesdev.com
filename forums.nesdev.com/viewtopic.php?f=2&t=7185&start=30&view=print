<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - ATALAN - new programming language for 6502</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">ATALAN - new programming language for 6502</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=7185">http://forums.nesdev.com/viewtopic.php?f=2&amp;t=7185</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>3</strong> of <strong>3</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rudla.kudla</b> [ Sun Mar 25, 2012 3:23 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Atalan tries to infer set of possible values of the result of every operator in the
<br />code. So it not only deduces, that the variable should be integer, but also
<br />the range of the integer.  
<br />  
<br />The following examples use type assert. 
<br /><strong>assert x:min..max</strong> makes sure the compiler at specified line 
<br />inferred the range of variable x to be min..max.
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">;Basic type inference <br />in x:10..20<br />y = x <br />assert y:10..20&nbsp; &nbsp;;For input variables, Atalan uses the defined type<br />y = x * 2 <br />assert y:20..40 <br />y = y + 5 <br />assert y:25..45 <br />z = y - 30 <br />assert z:-5..15 <br /><br />;Conditions are recognized<br />in x:10..20 <br />y = x * 2 <br />assert y:20..40 <br />if y &gt; 30 <br />&nbsp; &nbsp; y = 30 <br />assert y:20..30 <br />if y &lt;= 25 then y = 26 <br />assert y:26..30 <br /><br />;Some loops are supported<br />x = 10 <br />while x &lt; 100 <br />&nbsp; &nbsp; inc x <br />&nbsp; &nbsp; assert x:11..100 <br />assert x:100..100 <br />x = 3 <br />while x &lt;= 23 <br />&nbsp; &nbsp; inc x <br />&nbsp; &nbsp; assert x:4..24 <br />assert x:24..24<br />&nbsp;<br />;Dependent varibles in loop may be computed<br />y = 1 <br />for x:0..7 <br />&nbsp; &nbsp;inc y <br />assert y:9..9 <br /></div>
<br />
<br />Benefits of type inferencing
<br />
<br />- You don't need to declare types of local variables, leading to shorter,
<br />  more readable code. It is easier to introduce a new local variable,
<br />  so you can create some extra ones, with meaningfull names, which
<br />  will further improve code readability.
<br />  
<br />- With exact interval type inferencing, the compiler may statically check
<br />  array bounds errors, incorrect asignment errors etc.
<br />
<br />- Inferred types may be used for optimizations.
<br />
<br />- With proper interval type inferenced, compiler can produce correct code
<br />  in most situations. For example when computing expression like (a * b) / 128
<br />  where a and b are in range 0..127, compiler will correctly use 2 byte temporary
<br />  variable for the result of multiplication, even if the final result is only byte again.
<br />  
<br />- Types may be inferred for procedure arguments and local variables (these are two
<br />  diferents algorithms).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bananmos</b> [ Sun Mar 25, 2012 4:16 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Ok, I think I see what you mean... basically, you're saying that the compiler tracks the allowable range of variables from the range in their definitions to be able to produce more optimized code, as some of the bits should be known to be zero?
<br />
<br />That makes sense to me, but I still can't understand how this results in that
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">in joyP0@$15:byte<br /></div><br /><br />Should be any different from<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">joyP0@$15:byte<br /></div><br /><br />Both have the same 'byte' range (0..255) after all, so how come the 'in' keyword is required? How can that change the behavior?<br /><br />Also, the inferring of ranges did not seem to do what I would have expected in the code I tried:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">editCursorX:0..15<br />editCursorY:0..15<br />DrawEditCursor:proc =<br />&nbsp; &nbsp; DrawSpriteImage editCursorX*16 editCursorY*16 SpriteImageEditCursor<br /></div><br /><br />This would produce a call to a system routine for multiplication, even though the range is 0..15 multiplied by 16, and therefore fits within a byte and be achievable with four simple 'asl' instructions.<br /><br />But changing it to<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">editCursorX:0..15<br />editCursorY:0..15<br />DrawEditCursor:proc =<br />&nbsp; &nbsp; screenX:0..255 = editCursorX*16<br />&nbsp; &nbsp; screenY:0..255 = editCursorY*16<br />&nbsp; &nbsp; DrawSpriteImage screenX screenY SpriteImageEditCursor<br /></div>
<br />
<br />Would produce the four 'asl' instructions for each multiplication, as I expected. But the temporary variables will also result in redundant writes to RAM, as in the previous examples.
<br />
<br />Perhaps I am missing something, but it seems that at least in the trunk source code of Atalan, this range tracking isn't working as it should?
<br />
<br />EDIT: I guess what you said here:
<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">- Types may be inferred for procedure arguments and local variables (these are two<br />diferents algorithms).<br /></div>
<br />
<br />...could be the reason why the behavior changes when I introduce the intermediate variable? i.e., the inferring works for locals but *not* for procedure arguments?...

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rudla.kudla</b> [ Sun Mar 25, 2012 4:27 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The inferring does not work with global variables. That's what you use in your first example.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rudla.kudla</b> [ Thu Apr 05, 2012 2:14 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Improved optimization</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Being provoked by previous posts, I have decided to implement new optimizations (and thus introduce new bugs) instead of fixing bugs. <img src="./images/smilies/icon_smile.gif" alt=":-)" title="Smile" />
<br />
<br />For this code:
<br />
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">use NES<br /><br />const EDIT_CURSOR_TILEID = 100 <br /><br />const EditCursorCHR:array&#40;&#41; = 0,1,2,3,4,5,6,7<br /><br />ppu.ptr = EDIT_CURSOR_TILEID*16&nbsp; <br /><br />for i:0..7 ppu.data = 0 <br />for i:0..7 ppu.data = EditCursorCHR#i<br /></div><br /><br />Atalan now produces this:<br /><br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">ppu__data_adr equ 8198<br />ppu__data equ 8199<br />&nbsp; &nbsp;opt h-<br />&nbsp; &nbsp;.byte&#40;'N', 'E', 'S', $1A, $02, $01,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00&#41;<br />&nbsp; &nbsp;org $8000<br />RESET:<br />&nbsp; &nbsp;sei<br />&nbsp; &nbsp;cld<br />&nbsp; &nbsp;ldx #$FF<br />&nbsp; &nbsp;txs<br />;### opti_nesx2.atl&#40;7&#41; ppu.ptr = EDIT_CURSOR_TILEID*16&nbsp; <br />&nbsp; &nbsp;lda #6<br />&nbsp; &nbsp;sta ppu__data_adr<br />&nbsp; &nbsp;lda #64<br />&nbsp; &nbsp;sta ppu__data_adr<br />;### opti_nesx2.atl&#40;9&#41; for i:0..7 ppu.data = 0 <br />&nbsp; &nbsp;ldx #248<br />&nbsp; &nbsp;lda #0<br />_lbl6:<br />&nbsp; &nbsp;sta ppu__data<br />&nbsp; &nbsp;inx<br />&nbsp; &nbsp;jne _lbl6<br />;### opti_nesx2.atl&#40;10&#41; for i:0..7 ppu.data = EditCursorCHR#i<br />&nbsp; &nbsp;ldx #248<br />_lbl8:<br />&nbsp; &nbsp;lda EditCursorCHR-248,x<br />&nbsp; &nbsp;sta ppu__data<br />&nbsp; &nbsp;inx<br />&nbsp; &nbsp;jne _lbl8<br />&nbsp; &nbsp;rts<br />EditCursorCHR:<br />;### opti_nesx2.atl&#40;5&#41; const EditCursorCHR:array&#40;&#41; = 0,1,2,3,4,5,6,7<br />&nbsp; &nbsp;dta 0<br />&nbsp; &nbsp;dta 1<br />&nbsp; &nbsp;dta 2<br />&nbsp; &nbsp;dta 3<br />&nbsp; &nbsp;dta 4<br />&nbsp; &nbsp;dta 5<br />&nbsp; &nbsp;dta 6<br />&nbsp; &nbsp;dta 7<br />&nbsp; &nbsp;icl 'P:\atalan\src\atalan\platform\NES\NES.asm'<br />&nbsp; &nbsp;icl 'P:\atalan\src\atalan\cpu\m6502\m6502.asm'<br />&nbsp; &nbsp;.align $FFF9,$00<br />NMI:<br />&nbsp; &nbsp; rti<br />&nbsp; &nbsp;org $FFFA<br />&nbsp; &nbsp;.dw NMI<br />&nbsp; &nbsp;.dw RESET<br />&nbsp; &nbsp;.dw 0<br /></div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>slobu</b> [ Fri Apr 13, 2012 11:49 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I am running Vista 32-bit.
<br />
<br />When I first tried "atalan -P nes snake" Atalan complained about missing MCVCR100.dll.
<br />
<br />I downloaded and installed Microsoft Visual C++ 2010 Redistributable Package.
<br />
<br />It still errors out with this information:
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">Problem signature:<br />&nbsp; Problem Event Name:&nbsp; &nbsp;APPCRASH<br />&nbsp; Application Name:&nbsp; &nbsp;atalan.exe<br />&nbsp; Application Version:&nbsp; &nbsp;0.0.0.0<br />&nbsp; Application Timestamp:&nbsp; &nbsp;4d84e642<br />&nbsp; Fault Module Name:&nbsp; &nbsp;atalan.exe<br />&nbsp; Fault Module Version:&nbsp; &nbsp;0.0.0.0<br />&nbsp; Fault Module Timestamp:&nbsp; &nbsp;4d84e642<br />&nbsp; Exception Code:&nbsp; &nbsp;c0000005<br />&nbsp; Exception Offset:&nbsp; &nbsp;00002650<br />&nbsp; OS Version:&nbsp; &nbsp;6.0.6002.2.2.0.768.3<br />&nbsp; Locale ID:&nbsp; &nbsp;1033<br />&nbsp; Additional Information 1:&nbsp; &nbsp;03d5<br />&nbsp; Additional Information 2:&nbsp; &nbsp;c62ce54d72177dd32c2e4ef275293885<br />&nbsp; Additional Information 3:&nbsp; &nbsp;c99c<br />&nbsp; Additional Information 4:&nbsp; &nbsp;af763b56a93ceca5ccfc6d5f0fa3b625</div>
<br />
<br />I put all the snake.* files into the same folder as atalan.exe.  What could I be doing wrong?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>zzo38</b> [ Thu Apr 19, 2012 1:25 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">rudla.kudla wrote:</div><div class="quotecontent">As for indentation, Atalan supports syntax with parentheses, in such case it ignores indent.</div>Haskell allows both explicit {;} and implicit by layout. I always use the explicit mode although the layout mode is more commonly used by Haskell programmers in general. If your programming language does not need delimiters between commands (such as semicolons) then what you gave in example should be working too; that is good too
<br />
<br />And, where is document of macros?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bananmos</b> [ Thu Apr 19, 2012 12:12 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I put all the snake.* files into the same folder as atalan.exe. What could I be doing wrong?</div>
<br />
<br />Sounds like the same issues I was having whenever I tried compiling anything with the "-p NES" option. 
<br />
<br />The only solution I found was ignoring the win32 build on the webpage and building it from the latest source grabbed from the repository.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>3</strong> of <strong>3</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>