<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=10&amp;t=1741" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2006-08-13T06:55:38-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=10&amp;t=1741</id>
<entry>
<author><name><![CDATA[Disch]]></name></author>
<updated>2006-08-13T06:55:38-07:00</updated>
<published>2006-08-13T06:55:38-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1741&amp;p=16211#p16211</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1741&amp;p=16211#p16211"/>
<title type="html"><![CDATA[DELAYS??]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1741&amp;p=16211#p16211"><![CDATA[
Did you try making a tracelog with FCEUXD and see what the code is doing?<br /><br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Well #1 ive come to find out i really dont need them just one INX will do.<br /></div><br /><br />Well what I was getting at... was it is really doing what you thought?  The only time you're using X is in your tile lookup "LDA TILE,X" -- and even then you're never setting X to any initial value, and you're not preventing it from being greater than 8 -- so most of the time you're probably reading garbage.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />#2 i have to put the branch there becasue my nmni wont work if its not there.<br /></div><br /><br />That's not what I meant.  And in fact.. .the NMI probably IS working without it... you're just not doing something else right.  Instead of plugging in random lines of code and seeing the result... you should really try to understand what each line does.  You'll never solve a problem by <em>guessing</em> which lines you <em>might</em> have to insert -- the only way to solve the problem is to understand it.<br /><br />'BNE' will branch if the Z flag is clear.... right?  So what line of code above that BNE changes the Z flag?  Does it set or clear the Z flag?  When does it set it and when does it clear it?<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />#3 i know what number to display next casue im just changing tile numbers and i can see the numbers changing only really really fast.<br /></div><br /><br />Well I gather that's sort of what X is tracking -- but if you'll notice, you never set X to anything when you enter NMI.  So the tile you draw is never specified.<br /><br />What I was hinting at before was that you should be keeping a variable which is tracking the tile you want to draw.  You should never keep long-term variables like that just in a register.. registers are just for work and quick temporary stuff.  For something you want remembered between frames, you definately want to have a variable for it.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />#4 i figured it would write to sprite DMA after each increment to update the tile number.<br /></div><br /><br />But how often is that?  Does it make any sense to update sprite RAM more than once per frame?  How many times per frame are you actually doing it?<br /><br /><br /><br />You really should pick up a copy of FCEUXD... run your ROM in it and make a trace log so you can see what your ROM is <em>actually</em> doing.  If it isn't <em>exactly</em> following what you expect it to, then you can ask yourself "why is it doing it this way", and you can examine the log to find the answer, and fix the problem in your code.<br /><br />To be a little more direct with the main problem you're having (but without giving away the solution):<br /><br />Your TOGGLE section is an infinite loop, the only time your program is escaping it is when ANOTHER NMI triggers (adding onto the previous NMI, and eventually overflowing your stack).  Basically, it's just a really nasty infinite loop your program gets caught up in on the very first NMI.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=33">Disch</a> — Sun Aug 13, 2006 6:55 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[nineTENdo]]></name></author>
<updated>2006-08-12T21:48:35-07:00</updated>
<published>2006-08-12T21:48:35-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1741&amp;p=16205#p16205</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1741&amp;p=16205#p16205"/>
<title type="html"><![CDATA[DELAYS??]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1741&amp;p=16205#p16205"><![CDATA[
<div class="quotetitle">Disch wrote:</div><div class="quotecontent"><br />1) What purpose do those 'INX' lines serve?  Are they really doing what you expect them to?<br />2) When do you want that BNE to branch?  and when do you want it NOT to branch?  Is it really branching how you'd expect?<br />3) How are you keeping track of which number you are currently displaying?  And how do you know which number to display next?<br />4) How many times is this code <em>actually</em> writing to the sprite DMA register ($4014) per frame?  How many times do you want it to write to sprite DMA?<br /></div><br /><br />Sorry for the late reply.  Been busy.  <br />           Well #1 ive come to find out i really dont need them just one INX will do.  i used them becasue i though it would increment the $0701 register to $0704 for the tile number but i figured i was only using one sprite and just switching the tile number.  but in any case that wouldnt do that anyway.<br /><br />         #2 i have to put the branch there becasue my nmni wont work if its not there.  i would have thought that the NMI would still run it anyways, but it dosent.<br /><br />          #3 i know what number to display next casue im just changing tile numbers and i can see the numbers changing only really really fast.<br /><br />          #4 i figured it would write to sprite DMA after each increment to update the tile number.<br /><br />What i want is to run the code so each tile is updated slowly casue it to look like the numbers where changing.  but i can seem to get past the BNE part it seem you can run an inner branch for time delays with out letting the BNE MOVE1 keep incrementing.  Do you know what i mean???  im thinking i might have to use some varibles.  What do you think???  Any tips?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=352">nineTENdo</a> — Sat Aug 12, 2006 9:48 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Disch]]></name></author>
<updated>2006-07-30T06:41:21-07:00</updated>
<published>2006-07-30T06:41:21-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1741&amp;p=15796#p15796</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1741&amp;p=15796#p15796"/>
<title type="html"><![CDATA[DELAYS??]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1741&amp;p=15796#p15796"><![CDATA[
I didn't want to answer this directly -- rather I wanted to try and point you in the right direction, so that you can see what's wrong and try to fix it on your own.<br /><br />Your 'TOGGLE' section is very strange.  Ask yourself the following questions:<br /><br />1) What purpose do those 'INX' lines serve?  Are they really doing what you expect them to?<br />2) When do you want that BNE to branch?  and when do you want it NOT to branch?  Is it really branching how you'd expect?<br />3) How are you keeping track of which number you are currently displaying?  And how do you know which number to display next?<br />4) How many times is this code <em>actually</em> writing to the sprite DMA register ($4014) per frame?  How many times do you want it to write to sprite DMA?<br /><br />Once you answer these questions, you will be on your way to solving this problem.<br /><br />In times like these, it's often useful to create a trace log and watch what the ROM is doing.  Run your ROM in FCEUXD, go to Tools | Trace Logger, and trace a few frames... then look to see what the code is doing.  If it isn't behaving like you expect it to, try and figure out why... then you'll find the problem in your code.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=33">Disch</a> — Sun Jul 30, 2006 6:41 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[nineTENdo]]></name></author>
<updated>2006-07-30T02:57:14-07:00</updated>
<published>2006-07-30T02:57:14-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1741&amp;p=15794#p15794</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1741&amp;p=15794#p15794"/>
<title type="html"><![CDATA[Inner Loops]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1741&amp;p=15794#p15794"><![CDATA[
Hello Again,<br />         Ive been working on a number demo that toggles through tiles each set with 1,2,3,etc.  When i run it in my NMI i can see that the numbers are changing but its going way to fast.  Can i use inner loops to slow it down?  So far ive been using outer loops but i doesnt seem to be working.  Any ideas?<br />Heres the code:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">nmi<br />   pha<br />   txa<br />   pha<br />   tya<br />   pha<br /><br />   LDA #$50<br />   STA X_POS<br />   STA Y_POS<br /><br /><br /><br />TOGGLE   <br />   LDA TILE,X<br />   STA $0701<br />   INX<br />   INX<br />   INX<br /><br />   LDA #$7<br />   STA $4014<br />   <br />   BNE TOGGLE           &lt;--Does this really need to be there?<br />   <br /><br />END      <br />   <br />   <br />   pla<br />   tay<br />   pla<br />   tax<br />   pla<br />   <br />   rti<br /><br />irq:<br />   rti<br /><br />TILE<br />   .DB 02,03,04,05,06,07,08,09<br /></div><br /><br />Anything to spify up what im doing here will help.<br /><br />Thanks in Advance,<br /><br />EL<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=352">nineTENdo</a> — Sun Jul 30, 2006 2:57 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2006-07-08T00:20:24-07:00</updated>
<published>2006-07-08T00:20:24-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1741&amp;p=15201#p15201</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1741&amp;p=15201#p15201"/>
<title type="html"><![CDATA[DELAYS??]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1741&amp;p=15201#p15201"><![CDATA[
<div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Also, i usually don't worry about real physics, I set the values to what looks and feels best for a game. Real physics aren't fun in a platformer. Don't you hate games where you can't change your direction in the middle of a jump?<br /></div><br />So true. I like projectiles that goes at constant speed anyways. And if you can play Castlevania for a while without be frustrated by its horrible jump control, I don't know how you do.<br />Anyway this all depend how you plan to code your game engine.<br />Tokumaru : You're speaking of signed speed variables. In my game engine I'm writing for my action-adventure game, I only have speed on projectiles, but monsters are animated by their own AI so they can move at constant or variable speed if they have a programm to move them their way, and the player always move at the constant speed of 1.5 pixels per frame (assuming it moves). I don't use signed variables for speed, but rather another direction variable. So it is easier for a monster to create a new projectile with the same speed, but another direction. The direction byte also serves to determine wich sprite is shown on player/monster (and possibly projectiles too if they're not bland round). I didn't say it is the best way, but it is like I did, and my game engine isn't finished yet.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Sat Jul 08, 2006 12:20 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2006-07-07T19:02:07-07:00</updated>
<published>2006-07-07T19:02:07-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1741&amp;p=15189#p15189</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1741&amp;p=15189#p15189"/>
<title type="html"><![CDATA[DELAYS??]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1741&amp;p=15189#p15189"><![CDATA[
<div class="quotetitle">Bregalad wrote:</div><div class="quotecontent"><br />I like working with 8 bit speed variable, the high 4 bits being the pixel increment per frame and the 4 low bits represents the 1/16 internal counter increment.<br /></div><br />I like it this way too.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />You'd never want to move a sprite slower than 1/16 pixel a frame, and never faster than 8+7/16 pixels a frame<br /></div><br />Then again, there is Sonic... but that's another story!<br /><br />Also, i usually don't worry about real physics, I set the values to what looks and feels best for a game. Real physics aren't fun in a platformer. Don't you hate games where you can't change your direction in the middle of a jump?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Fri Jul 07, 2006 7:02 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2006-07-07T14:45:33-07:00</updated>
<published>2006-07-07T14:45:33-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1741&amp;p=15179#p15179</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1741&amp;p=15179#p15179"/>
<title type="html"><![CDATA[DELAYS??]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1741&amp;p=15179#p15179"><![CDATA[
<div class="quotetitle">Bregalad wrote:</div><div class="quotecontent"><br />You'd never want to move a sprite slower than 1/16 pixel a frame<br /></div><br />But you may want to <em>accelerate</em> a sprite slower than 1/16 pixel per frame per frame. For instance, at 16 pixels = 1 meter and 60.0988 frames = 1 second, standard Earth gravity is 0.0434 pixels per frame per frame, or 0.695 of your units.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Fri Jul 07, 2006 2:45 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2006-07-07T14:37:58-07:00</updated>
<published>2006-07-07T14:37:58-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1741&amp;p=15177#p15177</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1741&amp;p=15177#p15177"/>
<title type="html"><![CDATA[DELAYS??]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1741&amp;p=15177#p15177"><![CDATA[
I like working with 8 bit speed variable, the high 4 bits being the pixel increment per frame and the 4 low bits represents the 1/16 internal counter increment.<br />You'd never want to move a sprite slower than 1/16 pixel a frame, and never faster than 8+7/16 pixels a frame, so this enable you to work with easy 8-bit speeds, $10 being the standard 1 pixel per frame speed.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Fri Jul 07, 2006 2:37 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2006-07-07T14:21:12-07:00</updated>
<published>2006-07-07T14:21:12-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1741&amp;p=15175#p15175</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1741&amp;p=15175#p15175"/>
<title type="html"><![CDATA[Re: DELAYS??]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1741&amp;p=15175#p15175"><![CDATA[
<div class="quotetitle">Memblers wrote:</div><div class="quotecontent"><br />another possibility is to change that movement_speed to be a table and use an index register during the ADCs to select from some pre-defined speeds.<br /></div><br />Or you could make "speed" a variable and perform some math on it. Often when I implement movement, the keys act on the speed variable (as opposed to the player's position). The right key would increase the value of "speed" (until a max positive value) and the right key would decrease it (until a min negative value). When neither is pressed, it's progressively forced toward 0. And "speed" is always (every frame) added to the player's coordinates.<br /><br />This adds a nice acceleration and inertia effect to the game. I often have acceleration on the Y axis too, wich means that all you have to do to jump is place a way high value on "speedY". No floor under the player causes "speedY" to increase (until a max positive value), simulating gravity (wich is what brings you down after a jump). If you find good values for the step you use to increment/decrement and the max/min values, it can look and feel very nice.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Fri Jul 07, 2006 2:21 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Memblers]]></name></author>
<updated>2006-07-07T13:24:05-07:00</updated>
<published>2006-07-07T13:24:05-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1741&amp;p=15169#p15169</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1741&amp;p=15169#p15169"/>
<title type="html"><![CDATA[Re: DELAYS??]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1741&amp;p=15169#p15169"><![CDATA[
<div class="quotetitle">nineTENdo wrote:</div><div class="quotecontent"><br /><div class="quotetitle">Memblers wrote:</div><div class="quotecontent">[code]<br /><br />movement_speed = $011C ; this is a little bit faster than 1 pixel per frame<br />                                       ; $0100 would be one pixel/frame exactly.<br /></div><br /><br />*LIGHTBULB*<br /><br />So this a good way to adjust speed of sprite movements huh?</div><br /><br />Yep, it's just great (wish I had known of it a long time ago).  That example is just hard-coded to one speed though, another possibility is to change that movement_speed to be a table and use an index register during the ADCs to select from some pre-defined speeds.  That's what I did in Munchie Attack.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=10">Memblers</a> — Fri Jul 07, 2006 1:24 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[nineTENdo]]></name></author>
<updated>2006-07-07T12:22:12-07:00</updated>
<published>2006-07-07T12:22:12-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1741&amp;p=15167#p15167</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1741&amp;p=15167#p15167"/>
<title type="html"><![CDATA[Re: DELAYS??]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1741&amp;p=15167#p15167"><![CDATA[
<div class="quotetitle">Memblers wrote:</div><div class="quotecontent"><br />[code]<br /><br />movement_speed = $011C ; this is a little bit faster than 1 pixel per frame<br />                                       ; $0100 would be one pixel/frame exactly.<br /></div><br /><br />*LIGHTBULB*<br /><br />So this a good way to adjust speed of sprite movements huh?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=352">nineTENdo</a> — Fri Jul 07, 2006 12:22 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2006-07-07T05:40:16-07:00</updated>
<published>2006-07-07T05:40:16-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1741&amp;p=15145#p15145</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1741&amp;p=15145#p15145"/>
<title type="html"><![CDATA[Re: DELAYS??]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1741&amp;p=15145#p15145"><![CDATA[
<div class="quotetitle">Memblers wrote:</div><div class="quotecontent"><br />This isn't the simplest (simplest would be just to INC or ADC to a byte in RAM), but here is a good way to do it that gives accuracy down to 1/256th of a pixel for smooth movement at any speed.<br /></div><br />nineTENdo: If you're interested in the technique Memblers describes, it's called <a href="http://en.wikipedia.org/wiki/Fixed-point_arithmetic" class="postlink">fixed-point arithmetic</a>.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Fri Jul 07, 2006 5:40 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Memblers]]></name></author>
<updated>2006-07-07T05:21:53-07:00</updated>
<published>2006-07-07T05:21:53-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1741&amp;p=15144#p15144</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1741&amp;p=15144#p15144"/>
<title type="html"><![CDATA[Re: DELAYS??]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1741&amp;p=15144#p15144"><![CDATA[
<div class="quotetitle">nineTENdo wrote:</div><div class="quotecontent"><br />Do you know of a simple algorithm to just add X of a sprite movement?<br /></div><br /><br />This isn't the simplest (simplest would be just to INC or ADC to a byte in RAM), but here is a good way to do it that gives accuracy down to 1/256th of a pixel for smooth movement at any speed.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent"><br />x_position_lo = $00   ; anywhere in RAM<br />x_position_hi = $203 ; in your sprite-RAM buffer<br />                               ; $203 is sprite #0 just for example<br /><br />movement_speed = $011C ; this is a little bit faster than 1 pixel per frame<br />                                       ; $0100 would be one pixel/frame exactly.<br /><br /> lda x_position_lo<br /> clc<br /> adc #&lt;movement_speed<br /> sta x_position_lo<br /> lda x_position_hi<br /> adc #&gt;movement_speed<br /> sta x_position_hi<br /></div><br /><br />In my NMI routines I stick to only handling VRAM, Sprite-RAM DMA, and also music.  Because even if the game engine slows down, you don't want the music to slow down.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=10">Memblers</a> — Fri Jul 07, 2006 5:21 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2006-07-07T02:02:09-07:00</updated>
<published>2006-07-07T02:02:09-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1741&amp;p=15141#p15141</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1741&amp;p=15141#p15141"/>
<title type="html"><![CDATA[DELAYS??]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1741&amp;p=15141#p15141"><![CDATA[
Yes, I also had been very happy when I discovered all the debuggin features of FCEUXD. It really rocks.<br /><br />I recommand to do you sprite position calculating outise of the NMI in the game logic, but it is up to you to know.<br />For example, most Konami and Nintendo games like to do EVERYTHING in NMI and just do infinite jumps outside of NMI. After some experitmenation I think it is the worst way to work, but they still did it.<br />Square seems to like do NOTHING in NMI, just return and continue the previous code that was just waiting a VBlank trigger.<br />Most other game companies (Capcom, Enix, HAL, etc...) seems to do timing critical routine in NMI plus other things like sound, and the game logic outinde of the NMI, wich is definitely the best way, for my viewpoint.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Fri Jul 07, 2006 2:02 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[nineTENdo]]></name></author>
<updated>2006-07-07T01:42:08-07:00</updated>
<published>2006-07-07T01:42:08-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1741&amp;p=15138#p15138</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1741&amp;p=15138#p15138"/>
<title type="html"><![CDATA[DELAYS??]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1741&amp;p=15138#p15138"><![CDATA[
<div class="quotetitle">Bregalad wrote:</div><div class="quotecontent"><br />you'd want to enable NMI and keep them enabled always exept when loading a new level or something in that genre.<br /></div><br /><br />Does that include updating Sprite positions?  <br /><br />Just wanted to say that The Hex Editor in FCEUXD has changed my entire view of reading/writing code!!!!!<br /><br />Thanks FCEUXD!!!!!!<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=352">nineTENdo</a> — Fri Jul 07, 2006 1:42 am</p><hr />
]]></content>
</entry>
</feed>