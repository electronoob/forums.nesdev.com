<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Physics Newbie needing direction</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Physics Newbie needing direction</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=10&amp;t=5192">http://forums.nesdev.com/viewtopic.php?f=10&amp;t=5192</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>2</strong> of <strong>2</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Fri May 22, 2009 4:47 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Celius wrote:</div><div class="quotecontent">I didn't think a linear increase of velocity would suffice for gravity</div><br />That's how it works in real life, at least at the classical scale we're familiar with.<br />g = dv/dt<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I was thinking at first of multiplying velocity by like 1.1 or something every frame</div><br />Multiplying velocity by a value just below 1 is good to simulate wind resistance, and it can be done with a few shifts and two adds.<br />dy -= dy &gt;&gt; 4; dx -= dx &gt;&gt; 4<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">So I've taken some advice from what I've read and there each object will be "displaced" based on it's velocity. Of course, velocity is signed and has more precision than just integer values (for example, velocity can be 1.235 instead of just 1 or 2). So if an object has no velocity, it won't move. If it has velocity, it does move. Simple as that.</div><br />Now you're thinking with balloons on your back. Good job.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Then I don't want the player to not have control on how high they jump, so I think I can do the following to implement some control on how high they jump:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">If Player.Jumping = True Then<br />&nbsp; &nbsp;If Player.VelocityY &lt; 0 Then<br />&nbsp; &nbsp;&nbsp; &nbsp;If Controller.JumpButton = NotPressed Then<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;Player.VelocityY = 0<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;Player.Jumping = False<br />&nbsp; &nbsp;&nbsp; &nbsp;End If<br />&nbsp; &nbsp;End If<br />End If<br /></div></div><br />With this code, you hit a hard ceiling when you let go. I'd just increase gravity if the player is jumping and moving upward and the jump button is not held. But then I'm biased toward physics like those of Super Mario Bros. because it was the second video game I ever played on an NES (after Duck Hunt).<br /><br /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">For collisions I guess I just avoid making collision boxes too small. If they are never smaller than the maximum displacement for objects, you're not likely to miss a hit unless both objects are moving at the maximum speed, but how often does that happen?</div><br />Imagine a head-on collision between a hedgehog running in one direction and an echidna running in the other. The "correct" solution is to extend hitboxes by the velocity of the associated object, and then use some post-processing step to reject false corner strikes.<br /><br /><div class="quotetitle">Celius wrote:</div><div class="quotecontent">I'm sorry, I don't quite get what you mean by this... Why would you be decreasing the velocity?</div><br />Possibly speaking relative to another quadrant. Some games operate in quadrant I (increasing Y is higher); others operate in quadrant IV (increasing Y is lower).<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Nothing gets on my nerves more than enemies CONSTANTLY respawning (It makes me want to kill someone when some dumbass enemy keeps walking on screen even though I've killed it 1000 times =).)</div>
<br />I'm pretty sure that has something to do with lack of memory to keep track of which items have been destroyed. SMB3 doesn't have this problem, but then it has 8 KB PRG RAM.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Fri May 22, 2009 5:14 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Celius wrote:</div><div class="quotecontent">I'm sorry, I don't quite get what you mean by this... Why would you be decreasing the velocity?</div><br />Because negative velocities move the player up, and we want the possibility to have the player go higher.<br /><br />We have similar ideas, but while I'm thinking of extending the jump, you are thinking of cutting it short. I'll try to explain as I go along.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Player.YCoord = Player.YCoord + Player.VelocityY<br /><br />And also every frame, gravity does this:<br /><br />#DEFINE Gravity 0.14<br /><br />Player.VelocityY = Player.VelocityY + Gravity</div><br />That's perfect.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">However, when the player jumps, assuming the player is allowed to jump, here's what I do:<br /><br />Player.VelocityY = -2.5</div><br />Great, we're on the same page. We just disagree on what comes next.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I initialize the VelocityY with a value of -2.5, and the gravity adds .14 to that value every frame. Since VelocityY gets added to PlayerY every frame, that means -2.5 gets added one frame, -2.36 gets added the next, -2.22 the next, -2.08, etc.</div><br />OK, but then the instant you release the button the player stops rising. Sounds weird to me, because I can't remember of any games working like this (no matter the current speed, releasing the button just acts like hitting an invisible ceiling or something? Seems weird!). I'm more familiar with inertia, i.e. after applying the force, you have to wait for it to "wear off", you can't suddenly cut it.<br /><br />My suggestion is basically this: once the jump officially starts, as well as setting Player.VelocityY to -2.5, you initialize a counter to, say, 16 (notice that I just got this number out of my ass, you'd have to test in order to find a good value). Then every frame, as well as adding the gravity to the velocity you will decrement this counter, and as long as it's &gt; 0 and the jump button is still pressed, you add, say, -.10 (out of my ass, find a good value) to prevent gravity from working too quickly too soon.<br /><br />Pseudo code:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">//Counter was already initialized and the player is in &quot;jumping&quot; state<br /><br />Player.VelocityY = Player.VelocityY + Gravity<br /><br />Counter = Counter - 1<br /><br />if JumpButtonPressed and &#40;Counter &gt; 0&#41; and Player.Jumping then<br />&nbsp; &nbsp;Player.VelocityY = Player.VelocityY - 0.10<br />end if<br /><br />Player.YCoord = Player.YCoord + Player.VelocityY</div><br /><br />That way, after the initial velocity of -2.5 has been set, it will change into -2.36 the next frame, but if you do the above, it will move back to -2.46, and so on. The player will be able to "hold gravity back" for up to 16 (the value put into the counter) frames, thus making the jump higher. What he does with the button (keep it pressed or release it) after those 16 frames doesn't matter, the character will still rise until gravity has the velocity go over 0 and it starts falling. This should look and feel more natural than suddenly cutting off all vertical velocity.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Sorry if this isn't making any sense, or if I just explained the obvious, or if the above is just a bunch of crap text for any reason at all =).</div><br />You were perfectly clear, I hope I have too this time.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Just hope for the best, like you said. But it's important to still recognize these problems/glitches, as one day you could realize that they are the reason your program isn't working the way you expected.</div>
<br />Take a look at the <strong>"Sonic 3 and Knuckles Glitches and Oversights"</strong> series on YouTube. The videos are very interesting from a programming point of view, as we programmers can in many cases tell what went wrong, and be prepared to avoid similar glitches in our own programs.
<br />
<br /><a href="http://www.youtube.com/watch?v=XEOsmMOc_BA&amp;fmt=18" class="postlink">http://www.youtube.com/watch?v=XEOsmMOc_BA&amp;fmt=18</a>
<br /><a href="http://www.youtube.com/watch?v=zJ5LsMeL0g8&amp;fmt=18" class="postlink">http://www.youtube.com/watch?v=zJ5LsMeL0g8&amp;fmt=18</a>
<br /><a href="http://www.youtube.com/watch?v=us93F4qvSVQ&amp;fmt=18" class="postlink">http://www.youtube.com/watch?v=us93F4qvSVQ&amp;fmt=18</a>
<br /><a href="http://www.youtube.com/watch?v=TxxmbcxNorA&amp;fmt=18" class="postlink">http://www.youtube.com/watch?v=TxxmbcxNorA&amp;fmt=18</a>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Jarhmander</b> [ Fri May 22, 2009 6:34 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Just a question: would it be wise to have two hitboxes per object: one for floors, ceils, wall etc. that never resize and another one for collision with object that can resize and another one, normally smaller than the first one, that can resize depending of the velocity and such?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Celius</b> [ Fri May 22, 2009 12:38 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">Now you're thinking with balloons on your back. Good job.</div><br /><br />It's funny you say that, because all this talk of velocity was totally making me think of Balloon Fight!<br /><br /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">With this code, you hit a hard ceiling when you let go. I'd just increase gravity if the player is jumping and moving upward and the jump button is not held. But then I'm biased toward physics like those of Super Mario Bros. because it was the second video game I ever played on an NES (after Duck Hunt)</div><br /><br />I'm also kind of biased to SMB1's jump mechanic. I think most other people would be too, so I think I'll try and make my mechanic similar.<br /><br /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">We just disagree on what comes next.<br /><br /><div class="quotetitle">Celius wrote:</div><div class="quotecontent">I initialize the VelocityY with a value of -2.5, and the gravity adds .14 to that value every frame. Since VelocityY gets added to PlayerY every frame, that means -2.5 gets added one frame, -2.36 gets added the next, -2.22 the next, -2.08, etc.<br /></div><br /><br />OK, but then the instant you release the button the player stops rising. Sounds weird to me, because I can't remember of any games working like this (no matter the current speed, releasing the button just acts like hitting an invisible ceiling or something? Seems weird!). I'm more familiar with inertia, i.e. after applying the force, you have to wait for it to "wear off", you can't suddenly cut it. </div><br /><br />I agree, and I'm going to take care of this. But it's actually not as bad as it would seem as is. Though by fixing the issue, I'm making the jump mechanic better, and that's really important to do.<br /><br />Your suggestion about the counter is interesting... But I think what I'm going to do is upon the jump button being released, if the current Y velocity is less than something like -.6, force it to equal -.6. If it's greater than -.6, just do nothing. This will make the player still rise up a little after releasing the button.<br /><br /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">You were perfectly clear, I hope I have too this time.</div><br /><br />Yes, I understood everything you said.<br /><br /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">Take a look at the "Sonic 3 and Knuckles Glitches and Oversights" series on YouTube.</div><br /><br />Those are actually really bad glitches! It just goes to show that you really have to think of all possibilities when programming a game. I really hate glitches that happen because something's not on screen. But when the player no longer has control of Sonic, that's unacceptable.<br /><br /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">I'm pretty sure that has something to do with lack of memory to keep track of which items have been destroyed. SMB3 doesn't have this problem, but then it has 8 KB PRG RAM.</div><br /><br />Even if you go back to an area and the enemies are alive, it's better than an enemy infinitely respawning and walking on screen. That sort of glitch is avoidable. I say enemies can spawn as soon as they come half a screen beyond the edge of the screen. Then they should remain "inactive" until they are at the edge of the screen. That way, the player will have to walk almost 128 pixels in that direction in order for it to start doing anything, so that by the time you kill it, you are probably past the point at which it would respawn. Though that's just a quick improvement (not a fix).<br /><br />I will probably take the time to make sure this problem does not occur in my game. All it takes is one bit for each object. Though this could take up a lot of RAM if you have a ton of objects.<br /><br /><div class="quotetitle">~J-@D!~ wrote:</div><div class="quotecontent">Just a question: would it be wise to have two hitboxes per object: one for floors, ceils, wall etc. that never resize and another one for collision with object that can resize and another one, normally smaller than the first one, that can resize depending of the velocity and such?</div>
<br />
<br />Hmm, I'm not sure about that. I can't really see the advantage of having one that you can't change the size of, but maybe I'm not thinking clearly. If you could find a way to have a hit polygon that isn't square then you could eliminate a ton of problems.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>2</strong> of <strong>2</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>