<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=2&amp;t=3857" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2008-01-27T18:24:27-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=2&amp;t=3857</id>
<entry>
<author><name><![CDATA[Disch]]></name></author>
<updated>2008-01-27T18:24:27-07:00</updated>
<published>2008-01-27T18:24:27-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3857&amp;p=30423#p30423</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3857&amp;p=30423#p30423"/>
<title type="html"><![CDATA[SMB1/MMC3 - Status bar IRQ routine and more needed for hack]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3857&amp;p=30423#p30423"><![CDATA[
<div class="quotetitle">Hamtaro126 wrote:</div><div class="quotecontent"><br />Disch: Thanks for the help, One thing though, Can you please add the ''caveat'' stuff to your MMC3 document, unless it is already mentioned.<br /></div><br /><br />It is already mentioned.<br /><br />See "Basic IRQ Operation"... "Therefore, you must follow these rules:" -- it's rule 4.  And explanation further of why it must be that way is explained near the end of "Detailed IRQ Operation"<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=33">Disch</a> — Sun Jan 27, 2008 6:24 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Hamtaro126]]></name></author>
<updated>2008-01-27T11:01:03-07:00</updated>
<published>2008-01-27T11:01:03-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3857&amp;p=30418#p30418</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3857&amp;p=30418#p30418"/>
<title type="html"><![CDATA[SMB1/MMC3 - Status bar IRQ routine and more needed for hack]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3857&amp;p=30418#p30418"><![CDATA[
<div class="quotetitle">tepples wrote:</div><div class="quotecontent"><br /><div class="quotetitle">Hamtaro126 wrote:</div><div class="quotecontent"><div class="quotetitle">tepples wrote:</div><div class="quotecontent"><div class="quotetitle">Hamtaro126 wrote:</div><div class="quotecontent">And I could do it in SMB3, But the problem is that I cannot do a full disassembly for SMB3. as opposed to the currently used SMB1 disassembly.<br /></div><br />You'd have to distribute a symbol table for the disassembly along with a source code patch</div><br />That sounds like a good idea, Since that is supported in X816, In which I use mostly</div><br />If you are using a proprietary disassembler and assembler designed to run on MS-DOS, then you won't have much of an audience unless you also distribute instructions to 1. get x816 and 2. get x816 working on the most popular operating systems that are still in print. (MS-DOS and Windows 9x are not.) This leaves Windows XP, Windows Vista, Mac OS X, and Ubuntu. Does x816 work in DOSBox?</div><br /><br />It should, But now I should put a notice for X816 to ASM6/CA65 ASM file conversion for every ASM file I make for now on, Just to insure<br />compatibility with OSes.<br /><br />Note that using I am using Windows 2000 right now, and it works, unless you have XP or above (I think).<br /><br />Disch: Thanks for the help, One thing though, Can you please add the ''caveat'' stuff to your MMC3 document, unless it is already mentioned.<br /><br />By the way: I might need Blargg's MMC3 document(s) to understand things properly,<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=287">Hamtaro126</a> — Sun Jan 27, 2008 11:01 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2008-01-27T05:38:41-07:00</updated>
<published>2008-01-27T05:38:41-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3857&amp;p=30407#p30407</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3857&amp;p=30407#p30407"/>
<title type="html"><![CDATA[SMB1/MMC3 - Status bar IRQ routine and more needed for hack]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3857&amp;p=30407#p30407"><![CDATA[
<div class="quotetitle">Hamtaro126 wrote:</div><div class="quotecontent"><br /><div class="quotetitle">tepples wrote:</div><div class="quotecontent"><div class="quotetitle">Hamtaro126 wrote:</div><div class="quotecontent">And I could do it in SMB3, But the problem is that I cannot do a full disassembly for SMB3. as opposed to the currently used SMB1 disassembly.<br /></div><br />You'd have to distribute a symbol table for the disassembly along with a source code patch</div><br />That sounds like a good idea, Since that is supported in X816, In which I use mostly</div><br />If you are using a proprietary disassembler and assembler designed to run on MS-DOS, then you won't have much of an audience unless you also distribute instructions to 1. get x816 and 2. get x816 working on the most popular operating systems that are still in print. (MS-DOS and Windows 9x are not.) This leaves Windows XP, Windows Vista, Mac OS X, and Ubuntu. Does x816 work in DOSBox?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Sun Jan 27, 2008 5:38 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Disch]]></name></author>
<updated>2008-01-26T23:45:57-07:00</updated>
<published>2008-01-26T23:45:57-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3857&amp;p=30404#p30404</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3857&amp;p=30404#p30404"/>
<title type="html"><![CDATA[SMB1/MMC3 - Status bar IRQ routine and more needed for hack]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3857&amp;p=30404#p30404"><![CDATA[
Oh blah... I'm sorry Hamtaro -- I feel kind of dumb.  For some reason my brain blocked out all the times you mentioned MMC3 (it's even in the thread title)<br /><br />My apologies.<br /><br />Anyway setting up an IRQ is pretty simple on MMC3, but there is a big caveat:<br /><br />All sprites must use right-hand pattern table &amp; BG must use lefthand pattern table.<br /><br />I believe this is the opposite of how SMB does it.  *checks*  Yeah it is.  You technically can get away with SMB as it is now -- but it's ill advised.  Especially if you plan to move to 8x16 sprites -- in which case the BG <strong>MUST</strong> be using the left pattern table.<br /><br />To make this change, simply flip around the CHR in the ROM and change what gets written to $2000 (specifically, you'll need to switch bits 3 and 4).  Make sure you catch and fix every $2000 write SMB does -- there probably aren't too many of them.<br /><br /><br />That caveat aside.. IRQs are pretty simple.  You'll need to set up the IRQ counter in VBlank so that it fires on the desired scanline.  Then when it fires, you just split the screen's scroll and acknowlege/disable the IRQ:<br /><br />To enable/set up the IRQs (done in VBlank):<br />1) Write N to $C000, where 'N' is the number of scanlines you want the IRQ to fire after minus 1.  (This sets the reload value)<br /><br />2) write any value to $C001 (this clears the actual IRQ counter)<br /><br />3) write any value to $E000 (this enables IRQs)<br /><br />4) clear the I flag with a CLI instruction<br /><br />also) I don't think SMB has other IRQ sources enabled, but if it does you may have to disable them.  The only one that's a concern really is APU frame IRQs.  Just make sure that whenever SMB writes to $4017, bit 6 is set.<br /><br /><br />To acknowledge/disable IRQs (do in your IRQ routine):<br /><br />1) write any value to $E001<br /><br /><br />For example -- if you want the IRQ to happen after 32 ($20) scanlines, you'd do the following:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">;  in VBlank &#40;probably in NMI&#41;<br />  LDA #$1F<br />  STA $C000  ; write $20 - 1<br />  STA $C001<br />  STA $E000<br /><br />; IRQs now up and running<br />; make sure the CPU doesn't mask them<br />  CLI<br /><br /><br />;  in your IRQ routine, you need to acknowledge the IRQ:<br />  STA $E001   ; that's it!<br /></div><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=33">Disch</a> — Sat Jan 26, 2008 11:45 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Zepper]]></name></author>
<updated>2008-01-26T20:28:25-07:00</updated>
<published>2008-01-26T20:28:25-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3857&amp;p=30402#p30402</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3857&amp;p=30402#p30402"/>
<title type="html"><![CDATA[Re: SMB1/MMC3 - Status bar IRQ routine and more needed for h]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3857&amp;p=30402#p30402"><![CDATA[
<div class="quotetitle">Hamtaro126 wrote:</div><div class="quotecontent"><br />How do i create an IRQ routine, I am creating a status bar for SMB1 NES and not use sprite 0 just like SMB2j. It is possible, Just needed some help!<br /><br />Also. I should use Sprite 0 for eyes like Super mario 2 (USA). and I could probrably need some help making (or rewrite) the SMB player engine to use 32x32 using 8x16 tilesize instead of using 16x32 using 8x8 tilesize, but using the same bounding box.<br /><br />But what I really need, Most notably is the SMB1/MMC3 IRQ setup for the Status bar and Sprite 0 setup to be a free sprite space.<br /></div><br /><br />Nobody knows for sure, though you have the chance to hack a MMC3 game and study its IRQ subroutine. Depending of what you want to do, it won't be so much different. An IRQ is merely a "branch" to a subroutine. Usually, you can take advantage of score bars or raster effects.<br /><br />You're asking this because you *probably* have played SMB1 hacks that do NOT use mapper 0, right? Try asking some rom hacker...<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=39">Zepper</a> — Sat Jan 26, 2008 8:28 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Hamtaro126]]></name></author>
<updated>2008-01-26T20:15:04-07:00</updated>
<published>2008-01-26T20:15:04-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3857&amp;p=30399#p30399</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3857&amp;p=30399#p30399"/>
<title type="html"><![CDATA[SMB1/MMC3 - Status bar IRQ routine and more needed for hack]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3857&amp;p=30399#p30399"><![CDATA[
Tepples posts:<br /><br /><div class="quotetitle">tepples wrote:</div><div class="quotecontent"><br /><div class="quotetitle">Hamtaro126 wrote:</div><div class="quotecontent">And I could do it in SMB3, But the problem is that I cannot do a full disassembly for SMB3. as opposed to the currently used SMB1 disassembly.<br /></div><br />If you are disassembling the program, editing large parts of the source code, and reassembling it, how are you going to distribute the result? For patches that do not relocate subroutines, such as fan translations, binary diff formats such as .ips are popular, but as far as I can tell, these formats can't handle relocating subroutines. You'd have to distribute a symbol table for the disassembly along with a source code patch, and then require the end user to disassemble an existing ROM (obtained "elsewhere") using your symbol table, apply your patch, and then reassemble the result.</div><br /><br /><br />That sounds like a good idea, Since that is supported in X816, In which I use mostly<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">So probably scratch the sprites part<br /></div><br />Case in point: SMB1 in <em>Super Mario All-Stars</em> still uses the 8x8 pixel sprites.</div><br /><br /><br />I know, Just wanted to scratch it because it might require a engine rewrite, I think.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I also tried to make SMB1 use different music (something in the size of 0000-3fff (the size of Hebereke.NSF without the Header and DPCM data) in a hex editor), But I could not. It is something in the line of ''SMB2 and 3 uses a very hard-to-do techniqe to put music in a hidden place in the unknown'' (Possibly a case of Program Bankswitching with $8000-$BFFF during Initialization?)<br /></div><br />Yes, the bigger games bankswitch the music code and data.</div><br /><br />If you or anyone is interested in helping me with the music bankswitching<br />stuff, PM me please.<br /><br />Disch's posts:<br /><br /><div class="quotetitle">Disch wrote:</div><div class="quotecontent"><br /><div class="quotetitle">Hamtaro126 wrote:</div><div class="quotecontent">How do i create an IRQ routine, I am creating a status bar for SMB1 NES and not use sprite 0 just like SMB2j. It is possible, Just needed some help!<br /></div><br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Mapper 0 has no way to generate IRQs for raster effects (at least -- none that would allow you to remove sprite 0 hit -- you could use DMC IRQs for a rough timing, but sprite 0 hit would still need to be there so you can get the time right)<br /></div><br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />SMB2j was for the FDS, which had an additional CPU cycle counting IRQ generator (why they didn't put something this simple on the NES, I'll never understand).<br /></div><br /><br />I know mapper 0 does not support it, That is why I'm using MMC3 or some other mapper/variant<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Anyway -- to do this you'd need to switch to a mapper that has IRQs (like mapper 4).  But this involves other headaches in the form of rerouting the reset vector so it lands in the fixed page, and prepping a bunch of mapper regs at system startup.<br /></div><br /><br />You also mentioned the rerouting thing in the post, I knew that<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Doesn't sound like much work, but with how little free space SMB has... additional code means you'll either have to gut and remove an exising routine or two... or you'll have to expand the ROM.<br /></div></div><br /><br />I am thinking about editing and useing the E000.asm included with Loopy's SMB2J-NES project. and remove the code I will not need (Will use the leftover space that I deleted, I also deleted SMB1's music).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=287">Hamtaro126</a> — Sat Jan 26, 2008 8:15 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[LocalH]]></name></author>
<updated>2008-01-26T18:38:35-07:00</updated>
<published>2008-01-26T18:38:35-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3857&amp;p=30394#p30394</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3857&amp;p=30394#p30394"/>
<title type="html"><![CDATA[SMB1/MMC3 - Status bar IRQ routine and more needed for hack]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3857&amp;p=30394#p30394"><![CDATA[
<div class="quotetitle">tepples wrote:</div><div class="quotecontent"><br />Case in point: SMB1 in <em>Super Mario All-Stars</em> still uses the 8x8 pixel sprites.<br /></div><br />I would expect that all of the SMAS games utilize the SNES much more like an NES than other games written specifically for the SNES since they're basically source-level ports, and much of the game logic is identical.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=325">LocalH</a> — Sat Jan 26, 2008 6:38 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2008-01-26T18:31:03-07:00</updated>
<published>2008-01-26T18:31:03-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3857&amp;p=30392#p30392</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3857&amp;p=30392#p30392"/>
<title type="html"><![CDATA[SMB1/MMC3 - Status bar IRQ routine and more needed for hack]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3857&amp;p=30392#p30392"><![CDATA[
<div class="quotetitle">Hamtaro126 wrote:</div><div class="quotecontent"><br />And I could do it in SMB3, But the problem is that I cannot do a full disassembly for SMB3. as opposed to the currently used SMB1 disassembly.<br /></div><br />If you are disassembling the program, editing large parts of the source code, and reassembling it, how are you going to distribute the result? For patches that do not relocate subroutines, such as fan translations, binary diff formats such as .ips are popular, but as far as I can tell, these formats can't handle relocating subroutines. You'd have to distribute a symbol table for the disassembly along with a source code patch, and then require the end user to disassemble an existing ROM (obtained "elsewhere") using your symbol table, apply your patch, and then reassemble the result.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />So probably scratch the sprites part<br /></div><br />Case in point: SMB1 in <em>Super Mario All-Stars</em> still uses the 8x8 pixel sprites.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />I also tried to make SMB1 use different music (something in the size of 0000-3fff (the size of Hebereke.NSF without the Header and DPCM data) in a hex editor), But I could not. It is something in the line of ''SMB2 and 3 uses a very hard-to-do techniqe to put music in a hidden place in the unknown'' (Possibly a case of Program Bankswitching with $8000-$BFFF during Initialization?)<br /></div><br />Yes, the bigger games bankswitch the music code and data.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Sat Jan 26, 2008 6:31 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Disch]]></name></author>
<updated>2008-01-26T17:05:15-07:00</updated>
<published>2008-01-26T17:05:15-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3857&amp;p=30389#p30389</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3857&amp;p=30389#p30389"/>
<title type="html"><![CDATA[Re: SMB1/MMC3 - Status bar IRQ routine and more needed for h]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3857&amp;p=30389#p30389"><![CDATA[
<div class="quotetitle">Hamtaro126 wrote:</div><div class="quotecontent"><br />How do i create an IRQ routine, I am creating a status bar for SMB1 NES and not use sprite 0 just like SMB2j. It is possible, Just needed some help!<br /></div><br /><br />Mapper 0 has no way to generate IRQs for raster effects (at least -- none that would allow you to remove sprite 0 hit -- you could use DMC IRQs for a rough timing, but sprite 0 hit would still need to be there so you can get the time right)<br /><br />SMB2j was for the FDS, which had an additional CPU cycle counting IRQ generator (why they didn't put something this simple on the NES, I'll never understand).<br /><br />Anyway -- to do this you'd need to switch to a mapper that has IRQs (like mapper 4).  But this involves other headaches in the form of rerouting the reset vector so it lands in the fixed page, and prepping a bunch of mapper regs at system startup.<br /><br />Doesn't sound like much work, but with how little free space SMB has... additional code means you'll either have to gut and remove an exising routine or two... or you'll have to expand the ROM.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=33">Disch</a> — Sat Jan 26, 2008 5:05 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Hamtaro126]]></name></author>
<updated>2008-01-26T11:02:45-07:00</updated>
<published>2008-01-26T11:02:45-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3857&amp;p=30384#p30384</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3857&amp;p=30384#p30384"/>
<title type="html"><![CDATA[SMB1/MMC3 - Status bar IRQ routine and more needed for hack]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3857&amp;p=30384#p30384"><![CDATA[
<div class="quotetitle">tepples wrote:</div><div class="quotecontent"><br />If you make the player use 8x16 pixel sprites, you'll have to do the same for the enemies, like in SMB3. Then you'll probably have to go and make the squid of 2-2 smaller like they are in SMB3 too. At this rate, wouldn't it be easier to port SMB1's maps to the SMB3 engine?<br /></div><br /><br />Yes, I was going to say the same for the enemies.<br /><br />And I could do it in SMB3, But the problem is that I cannot do a full disassembly for SMB3. as opposed to the currently used SMB1 disassembly. So probably scratch the sprites part, <br /><br />I also tried to make SMB1 use different music (something in the size of 0000-3fff (the size of Hebereke.NSF without the Header and DPCM data) in a hex editor), But I could not. It is something in the line of ''SMB2 and 3 uses a very hard-to-do techniqe to put music in a hidden place in the unknown'' (Possibly a case of Program Bankswitching with $8000-$BFFF during Initialization?)<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=287">Hamtaro126</a> — Sat Jan 26, 2008 11:02 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2008-01-25T22:20:32-07:00</updated>
<published>2008-01-25T22:20:32-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3857&amp;p=30376#p30376</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3857&amp;p=30376#p30376"/>
<title type="html"><![CDATA[SMB1/MMC3 - Status bar IRQ routine and more needed for hack]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3857&amp;p=30376#p30376"><![CDATA[
If you make the player use 8x16 pixel sprites, you'll have to do the same for the enemies, like in SMB3. Then you'll probably have to go and make the squid of 2-2 smaller like they are in SMB3 too. At this rate, wouldn't it be easier to port SMB1's maps to the SMB3 engine?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Fri Jan 25, 2008 10:20 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Hamtaro126]]></name></author>
<updated>2008-01-25T20:50:18-07:00</updated>
<published>2008-01-25T20:50:18-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3857&amp;p=30373#p30373</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3857&amp;p=30373#p30373"/>
<title type="html"><![CDATA[SMB1/MMC3 - Status bar IRQ routine and more needed for hack]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3857&amp;p=30373#p30373"><![CDATA[
How do i create an IRQ routine, I am creating a status bar for SMB1 NES and not use sprite 0 just like SMB2j. It is possible, Just needed some help!<br /><br />Also. I should use Sprite 0 for eyes like Super mario 2 (USA). and I could probrably need some help making (or rewrite) the SMB player engine to use 32x32 using 8x16 tilesize instead of using 16x32 using 8x8 tilesize, but using the same bounding box.<br /><br />But what I really need, Most notably is the SMB1/MMC3 IRQ setup for the Status bar and Sprite 0 setup to be a free sprite space.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=287">Hamtaro126</a> — Fri Jan 25, 2008 8:50 pm</p><hr />
]]></content>
</entry>
</feed>