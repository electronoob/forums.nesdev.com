<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Another nametable compression format</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Another nametable compression format</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=22&amp;t=12445">http://forums.nesdev.com/viewtopic.php?f=22&amp;t=12445</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>JRoatch</b> [ Sun Mar 01, 2015 9:21 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Another nametable compression format</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />While working on redoing <a href="http://forums.nesdev.com/viewtopic.php?f=22&amp;t=11957" class="postlink">Solar Wars</a> I decided to take the whole month of February researching nametable compression. I gathered a bunch of raw picture data to develop another nametable compression format. I don't know what to name it so I currently call it &quot;Nametable format D&quot;.<br /><br />Edit: I've changed my format, to accommodate a few more features. The compression ratio is not impacted much.<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp; 000nnnnn ...&nbsp; &nbsp; : 32-N literal bytes.<br />&nbsp; &nbsp; 00111111&nbsp; &nbsp; &nbsp; &nbsp; : End stream.<br />&nbsp; &nbsp; 00111110 xx yy&nbsp; : * Set PPU_ADDR to yyxx<br />&nbsp; &nbsp; 001nnnnn xx yy&nbsp; : For 32-N times, emit alternately X and Y.<br />&nbsp; &nbsp; 01011111&nbsp; &nbsp; &nbsp; &nbsp; : * toggle BG transperency. (initially opaque)<br />&nbsp; &nbsp; 010nnnnn xx&nbsp; &nbsp; &nbsp;: 32-N run of X.<br />&nbsp; &nbsp; 01111111 xx&nbsp; &nbsp; &nbsp;: Set BG to X. (initially BG = 0)<br />&nbsp; &nbsp; 011nnnnn xx&nbsp; &nbsp; &nbsp;: 32-N incrementing run starting at X.<br />&nbsp; &nbsp; 1nnnnnnn&nbsp; &nbsp; &nbsp; &nbsp; : 128-N Run of BG.<br />&nbsp; &nbsp; * = Not present in lite variant.<br /></div><br />On average it saves about 710 (69%) bytes per nametable. That's compared to PackBits which saves about 562 (55%) bytes.<br /><br />A decoder used to be attached, but there's not much sense in attaching a decoder without an encoder. You can find the current encoder plus the data I worked off of at <!-- m --><a class="postlink" href="https://jroatch.nfshost.com/2015/nes/nametable-compression.zip">https://jroatch.nfshost.com/2015/nes/na ... ession.zip</a><!-- m -->

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Mon Mar 02, 2015 1:34 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Another RLE nametable compression format</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />This sounds similar to RLEINC2 algorithm that is included in <a href="http://www.romhacking.net/utilities/882/" class="postlink">CompressTools</a>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>JRoatch</b> [ Mon Mar 02, 2015 10:44 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Another RLE nametable compression format</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">This sounds similar to RLEINC2 algorithm that is included in <a href="http://www.romhacking.net/utilities/882/" class="postlink">CompressTools</a></div><br />It is similar because I directly copied the double byte run idea from RLEINC2.<br />The improvements in decoder simplicity and stream size comes from carefully arranging the code points and reducing the space taken by ordinary runs.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Mon Mar 02, 2015 1:55 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Another RLE nametable compression format</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Oh ok, so it's like some kind of RLEINC3, then <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dwedit</b> [ Tue Mar 03, 2015 12:35 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Another RLE nametable compression format</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />It wouldn't take much to turn it into a LZ format...

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Tue Mar 03, 2015 1:56 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Another RLE nametable compression format</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />It already is an LZ format, just with a window length of 2. The limiting factor for LZ on NES is work RAM for decompression, as window lengths longer than your existing VRAM transfer buffer become impractical. Random read access to video memory isn't very efficient, and video memory readback is in fact unreliable while a DPCM sample is playing.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>JRoatch</b> [ Tue Mar 03, 2015 4:01 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Another RLE nametable compression format</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Initially I did think I would use a 64 byte window with some metatile interleaving, but I found that a 2 byte window worked quite well. I should probably take a look at aPLib and LZMPi (<a href="http://forums.nesdev.com/viewtopic.php?p=88314#p88314" class="postlink">mentioned a while ago in this forum</a>) to see how that's dome and how well they work.<br /><br />The thing that's currently annoying me with my current format is that it leaves way too many '0' bytes in the literals.<br />And yes I should probably stop calling it RLE.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Tue Mar 03, 2015 4:11 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Another RLE nametable compression format</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />But then &quot;RLE&quot; in 4-bit Windows bitmaps could likewise be considered LZ with a 2-pixel window.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>JRoatch</b> [ Mon Mar 09, 2015 8:42 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Another nametable compression format</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I changed my format a bit to reduce the decoder size to 110 bytes. On the side, I made a 46 byte PackBits decoder.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>koitsu</b> [ Mon Mar 09, 2015 9:29 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Another nametable compression format</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I used a simple/basic RLE compression mechanism (for CHR data) in my FF2e intro, which I've been revamping as of late.  I was going for size (due to limited ROM space) and not speed.  It got a 1264 byte CHR file down to 610 bytes.  One drawback is that it can only handle lengths between 0 and 127.  Here's the code, since I figure it would benefit someone somewhere:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">; Copyright (C) 1998-2015 Jeremy Chadwick. All rights reserved.<br />;<br />; Redistribution and use in source and binary forms, with or without<br />; modification, are permitted provided that the following conditions<br />; are met:<br />;<br />; 1. Redistributions of source code must retain the above copyright<br />;&nbsp; &nbsp; notice, this list of conditions and the following disclaimer.<br />; 2. Redistributions in binary form must reproduce the above copyright<br />;&nbsp; &nbsp; notice, this list of conditions and the following disclaimer in the<br />;&nbsp; &nbsp; documentation and/or other materials provided with the distribution.<br />;<br />; THIS SOFTWARE IS PROVIDED BY AUTHOR AND CONTRIBUTORS ``AS IS'' AND<br />; ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE<br />; IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE<br />; ARE DISCLAIMED.&nbsp; IN NO EVENT SHALL AUTHOR OR CONTRIBUTORS BE LIABLE<br />; FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL<br />; DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS<br />; OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)<br />; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT<br />; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY<br />; OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF<br />; SUCH DAMAGE.<br /><br />; This is an RLE decompression routine for CHR data.&nbsp; LOGO_ADDR (a<br />; 16-bit pointer) is used to reference the base address of the data in<br />; question.&nbsp; The format of the data is simple:<br />;<br />; Offset 0: Count: Number of times Value should be repeated.<br />;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;If the MSB is set, indicates this is the last entry to be<br />;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;handled.&nbsp; Number of times is therefore limited to $00-7F<br />; Offset 1: Value: Raw 8-bit value (i.e. tile number)<br />; ...repeat...<br />;<br />; An example set of compressed data would be:<br />;<br />;&nbsp; &nbsp;.byte $10, $32&nbsp; &nbsp;; Repeat sixteen ($10) times the value $32<br />;&nbsp; &nbsp;.byte $06, $FA&nbsp; &nbsp;; Repeat six ($06) times the value $FA<br />;&nbsp; &nbsp;.byte $9F, $1D&nbsp; &nbsp;; Repeat thirty-one ($1F) times the value $1D, then done<br />;<br />.proc Load_RLE_Data<br />L1: ldy #0<br />&nbsp; &nbsp; lda (LO_ADDR),y&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ; Get Count from data structure<br />&nbsp; &nbsp; pha&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ; ...and temporarily back it up for later use<br />&nbsp; &nbsp; and #$7f&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; Strip off the MSB<br />&nbsp; &nbsp; tax&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ; ...and use the result as our loop counter<br />&nbsp; &nbsp; iny&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ; Move on to next byte in data structure<br />&nbsp; &nbsp; lda (LO_ADDR),y&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ; Get Value from data structure<br />:&nbsp; &nbsp;sta $2006&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ; Write it $2006<br />&nbsp; &nbsp; dex&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ; Decrement the iteration count (for this value)<br />&nbsp; &nbsp; bne :-&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; ...and repeat writing until 0<br />&nbsp; &nbsp; pla&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ; Restore the original Count value<br />&nbsp; &nbsp; bmi Done&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; If MSB is set (negative flag set), we're done<br />&nbsp; &nbsp; lda LO_ADDR&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ; ...otherwise increment LO_ADDR (low byte) by 2<br />&nbsp; &nbsp; clc<br />&nbsp; &nbsp; adc #2<br />&nbsp; &nbsp; sta LO_ADDR&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ; ...if the ADC set the carry (indicating unsigned<br />&nbsp; &nbsp; bcc :+&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; ...overflow), then we know we wrapped ($FF-&gt;00)<br />&nbsp; &nbsp; inc LO_ADDR+1&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ; ...and need to increment the high byte<br />:&nbsp; &nbsp;jmp L1&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; Move on to the next entry<br />Done:<br />&nbsp; &nbsp; rts&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ; ...and we're completely done<br />.endproc<br /></div>

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>