<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Does interrupt check happen after fetch?</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Does interrupt check happen after fetch?</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=20&amp;t=16836">http://forums.nesdev.com/viewtopic.php?f=20&amp;t=16836</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>zeroone</b> [ Fri Dec 15, 2017 7:04 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Does interrupt check happen after fetch?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Here's the <a href="https://github.com/Gekkio/mooneye-gb/blob/master/src/cpu/mod.rs" class="postlink">fetch function from Gekkio's source</a>:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; fn fetch_cycle&lt;H: Bus&gt;(&amp;mut self, bus: &amp;mut H) {<br />&nbsp; &nbsp; let result = bus.fetch_cycle(self.regs.pc);<br />&nbsp; &nbsp; let interrupt = match self.ime {<br />&nbsp; &nbsp; &nbsp; Ime::Enabled =&gt; result.interrupt,<br />&nbsp; &nbsp; &nbsp; Ime::Enabling =&gt; {<br />&nbsp; &nbsp; &nbsp; &nbsp; self.ime = Ime::Enabled;<br />&nbsp; &nbsp; &nbsp; &nbsp; false<br />&nbsp; &nbsp; &nbsp; },<br />&nbsp; &nbsp; &nbsp; _ =&gt; false,<br />&nbsp; &nbsp; };<br />&nbsp; &nbsp; if interrupt {<br />&nbsp; &nbsp; &nbsp; self.dispatch_interrupt(bus)<br />&nbsp; &nbsp; } else {<br />&nbsp; &nbsp; &nbsp; self.regs.pc = self.regs.pc.wrapping_add(1);<br />&nbsp; &nbsp; &nbsp; ops::decode((self, bus), result.opcode)<br />&nbsp; &nbsp; }<br />&nbsp; }</div><br /><br />It appears to perform the interrupt check after fetch rather than in between instructions.  Is that actually the case?  And, does this mean that a return from interrupt jumps to the byte after the opcode?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>zeroone</b> [ Sat Dec 16, 2017 12:02 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Does interrupt check happen after fetch?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I studied the code a bit further.  Here's the Bus fetch_cycle function:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; fn fetch_cycle(&amp;mut self, addr: u16) -&gt; FetchResult {<br />&nbsp; &nbsp; let interrupt = self.has_interrupt();<br />&nbsp; &nbsp; self.emu_time += EmuDuration::machine_cycles(1);<br />&nbsp; &nbsp; self.emulate();<br /><br />&nbsp; &nbsp; let opcode = self.read_internal(addr);<br />&nbsp; &nbsp; FetchResult {<br />&nbsp; &nbsp; &nbsp; opcode,<br />&nbsp; &nbsp; &nbsp; interrupt,<br />&nbsp; &nbsp; }<br />&nbsp; }</div><br /><br />self.emulate() steps the OAM module, the timer, the GPU and the APU.  That step potentially transfers 1 byte via OAM, it increments the timer register by 4, etc.  In other words, the opcode read takes 1 M-cycle, as expected.<br /><br />However, before it calls self.emulate(), it checks the interrupt flags.  Meaning, if the interrupt flags change during the read M-cycle, that change is not reflected in the returned pair.<br /><br />Again, here's the code that invokes it:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; fn fetch_cycle&lt;H: Bus&gt;(&amp;mut self, bus: &amp;mut H) {<br />&nbsp; &nbsp; let result = bus.fetch_cycle(self.regs.pc);<br />&nbsp; &nbsp; let interrupt = match self.ime {<br />&nbsp; &nbsp; &nbsp; Ime::Enabled =&gt; result.interrupt,<br />&nbsp; &nbsp; &nbsp; Ime::Enabling =&gt; {<br />&nbsp; &nbsp; &nbsp; &nbsp; self.ime = Ime::Enabled;<br />&nbsp; &nbsp; &nbsp; &nbsp; false<br />&nbsp; &nbsp; &nbsp; },<br />&nbsp; &nbsp; &nbsp; _ =&gt; false,<br />&nbsp; &nbsp; };<br />&nbsp; &nbsp; if interrupt {<br />&nbsp; &nbsp; &nbsp; self.dispatch_interrupt(bus)<br />&nbsp; &nbsp; } else {<br />&nbsp; &nbsp; &nbsp; self.regs.pc = self.regs.pc.wrapping_add(1);<br />&nbsp; &nbsp; &nbsp; ops::decode((self, bus), result.opcode)<br />&nbsp; &nbsp; }<br />&nbsp; }</div><br /><br />Note that if an interrupt did not occur, then PC is incremented and the opcode is decoded, completing the fetch.<br /><br />But, if an interrupt occurs, then PC is not incremented.  Rather, this happens:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; fn dispatch_interrupt&lt;H: Bus&gt;(&amp;mut self, bus: &amp;mut H) {<br />&nbsp; &nbsp; self.halt = false;<br />&nbsp; &nbsp; self.ime = Ime::Disabled;<br />&nbsp; &nbsp; self.internal_cycle(bus);<br />&nbsp; &nbsp; self.internal_cycle(bus);<br />&nbsp; &nbsp; let pc = self.regs.pc;<br />&nbsp; &nbsp; self.push_u8(bus, (pc &gt;&gt; 8) as u8);<br />&nbsp; &nbsp; let interrupt = bus.ack_interrupt();<br />&nbsp; &nbsp; self.push_u8(bus, pc as u8);<br />&nbsp; &nbsp; self.regs.pc = interrupt.map(|i| i.get_addr()).unwrap_or(0x0000);<br />&nbsp; }</div><br /><br />Both self.internal_cycle() and self.push_u8() consume an M-cycle.  So, the opcode read + the 2 internal cycles + the 2 push cycles = 5 M-cycles, the expected duration of interrupt handling.  It's just very odd that the opcode read cycle happens as part of that chain rather than just having 3 internal cycles prior to the 2 pushes.  <br /><br />It's also interesting that the IF bit is cleared in between the pushes.  I wonder if that was motivated by some timing test.<br /><br />Long story short, all the timings make sense.  It does check for interrupts in between instructions.  And, of course, it handles interrupts only in between instructions.  What is unusual is that the opcode read happens even when the interrupt is handled.  Since it's reading from PC as opposed to a memory mapped register address, it seems unlikely that opcode read would make much of a difference as compared to an idle M-cycle.  That said, why the code was written this was is unclear.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>zeroone</b> [ Sat Dec 16, 2017 2:59 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Does interrupt check happen after fetch?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I just realized that Gekkio's emulator <a href="https://github.com/Gekkio/mooneye-gb" class="postlink">doesn't pass</a> most of the test roms that I was actually interested in.  Gekkio created the tests, but doesn't provide the solutions <img src="./images/smilies/icon_sad.gif" alt=":(" title="Sad" />  The strange code above might not explain much at all.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>