<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Use of parallel ports in NES/PC interfaces</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Use of parallel ports in NES/PC interfaces</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=9&amp;t=9910">http://forums.nesdev.com/viewtopic.php?f=9&amp;t=9910</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>5</strong> of <strong>5</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Sik</b> [ Sun Mar 31, 2013 4:05 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Use of parallel ports in NES/PC interfaces</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">Can you run a 64-bit OS in a virtual machine inside a 32-bit OS and keep the benefits of a 64-bit OS?</div><br />No (or you shouldn't at least), unless the 32-bit OS is designed to explicitly allow this (in which case it can switch to long mode when needed). Of course this assumes you aren't emulating the CPU, if you are then pretty much anything is possible.<br /><br />Or you could cheat and go the Windows 3.11 way, where the kernel was 32-bit but all the other software (including pretty much the rest of the OS) were 16-bit. In this case you'd have a 64-bit kernel but the rest of the OS could be 32-bit. Does that count?<br /><br /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">Can you run a real-time OS in a virtual machine inside a non-real-time OS and keep the benefits of a real-time OS?</div><br />You can run a real-time OS inside a VM (since the real-time part is the kernel scheduler), but the benefits probably are thrown away by the unguaranteed timeslices of the non-RTOS host. Between the different tasks of the RTOS it should stay real-time, though (although not against real life time), so I guess at least a <em>minimum</em> amount of the benefits stay (probably only useful in very few specific cases though).<br /><br />Also reading back the thread... Wait a second, are you arguing about software compatibility with parallel ports? Huh, that isn't the biggest issue here really, the real issue is the hardware connection (parallel port to FDS). This is why USB is pretty much hated for this kind of stuff, without a microcontroller in the way you're pretty much screwed - unless you somehow feel like emulating an USB device on the other end, that is (can you even get enough speed to make it in-spec?).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sun Mar 31, 2013 9:34 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Use of parallel ports in NES/PC interfaces</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />My point was that to bit-bang successfully on a parallel port, you pretty much need an RTOS, and no, running the RTOS in a VM on a mainstream desktop OS isn't going to help. So going forward, to communicate with devices through bit-banging, you'll really need a microcontroller on the other end of a USB cable.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Sik</b> [ Sun Mar 31, 2013 10:08 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Use of parallel ports in NES/PC interfaces</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I'm not sure a RTOS is going to help either... Hardware isn't perfect, oscillators can end up being slightly off, and that can in the long term drift the signals enough as to break things. You're going to need some sort of synchronization regardless of what you do, even if you go with a single tasking OS (which is even more accurate than RTOS as nothing can interrupt you).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Cybertronic</b> [ Sun Mar 31, 2013 9:20 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Use of parallel ports in NES/PC interfaces</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Ok, so new direction with things, how about this...Getting a Commodore 64 OR an Apple ][e to communicate with a modern PC isn't all that difficult or that big of a deal to do. Get the NES to communicate with either a C64 or Apple ][e I got both of those and they are a dime a dozen. I have an IDE64 as well. (Its expensive as hell but it saved me lots of pain with 5.25 floppies <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /> ) I know a bit of Basic and 6502 assembly. Maybe I will fool around with it over the summer and see what I come up with. I want to go with the apple II because of the RS-232 port and I can even run TCIP over it, but a commodore 64 is a bit smaller and easier to store and I could rig up something to the cassette or serial ports and with the IDE64 and the USB link capabilities it will make development so much easier.... but oh wait.... that's been done too...<br /><br /><!-- l --><a class="postlink-local" href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=9909">viewtopic.php?f=2&amp;t=9909</a><!-- l --><br /><br />Anything that works on a C64DTV will work with a real C64..., and they are literally available at nearly any yard sale or local ad. I bought mine from the basement of an old church.<br /><br />I used to use Star Commander with a x1541 cable off a boot CD to write .D64 files onto Floppies with my 1541 drive. I really got sick of that and got the IDE64.<br /><br />I guess what I am getting at is if people want a cheap solution to something without spending a lot of money or messing around with programmable ICs, they are going to get stuck with a Parallel port or some other Serial port. It's just how it is. Cheap = Serial.<br /><br />So if an RTOS cant be run reliably within windows then I guess a Boot CD like with Star Commander for the 1541 drive would be the next option, and have this RTOS on a CD address the hardware in question via PCIE or that USB to Parallel adapter full legacy support on it to accommodate modern computers. <br /><br />I also strongly disagree with the short life expectancy of a PC. Moving parts aside, such as the fan or HDD most computers will outlive us all, and even if a HDD did fail, it isn't something that couldn't be easily replaced with something more reliable such as a USB stick. (for the purposes of this PC being used for Serial communications a full featured HDD isnt needed) Cooling fans are dirt cheap and so are low end power supplies, which if kept dust free work fine. The real problem is the people who smoke around their computers and the tar makes all the dust stick to everything, and then the system overheats and they wonder why their computer doesn't last more than 3 or 4 years. I have a Powerbook 190 (18 years old) with Lead acid batteries and it still works just as well as it did the day I got it, with all original parts, and Powerbook G3 Pismo (13 years old) and also a Blue and White G3 PowerMac (14 years old) that works as well. I had to replace the RTC battery on it because it showed signs of leakage, but that is easy enough for any simpleton to replace. I really want an Amgia 4000T and the USB add-on card.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>kyuusaku</b> [ Mon Apr 01, 2013 9:33 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Use of parallel ports in NES/PC interfaces</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Interfacing with C64 peripherals etc is a completely different matter, FDSLoadr must somewhat accurately shift out/sample a ~100 kHz raw disk head signal whereas many other protocols are data layer, and handshaked such that jitter is irrelevant. Clearly one of the design principles of FDSLoadr was minimal hardware; if you give FDSLoadr an external timebase (oscillator, register, missed bit flag) the LPT can easily keep up in Windows and the jitter won't be of concern.<br /><br />So the options are:<br /><br />a) figure out how to reuse FDSLoadr in Windows through kernel sorcery<br />b) give the LPT an external timebase<br />c) custom USB MCU firmware<br />d) FTDI module or maybe Arduino or something

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Mon Apr 01, 2013 9:44 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Use of parallel ports in NES/PC interfaces</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />For Game Boy development, I hooked it to my SNES since that was the most accessible device I had that could do the protocol and timing easily. So I have the PC to the SNES via bit-banged serial on the SNES, and then the SNES to the GB via bit-banged clocked serial. I used to use a Tandy 102 (8085-based portable computer) for my I/O needs. Now I'd probably just use a Teensy 2.0 that I have.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>ccovell</b> [ Mon Apr 01, 2013 5:55 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Use of parallel ports in NES/PC interfaces</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Another option: give this guy some support  <!-- l --><a class="postlink-local" href="http://forums.nesdev.com/viewtopic.php?f=22&amp;t=9631">viewtopic.php?f=22&amp;t=9631</a><!-- l -->

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>5</strong> of <strong>5</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>