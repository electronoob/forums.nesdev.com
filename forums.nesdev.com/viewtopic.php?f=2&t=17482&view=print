<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Modify a tile from background</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Modify a tile from background</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=17482">http://forums.nesdev.com/viewtopic.php?f=2&amp;t=17482</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>kikutano</b> [ Fri Jun 29, 2018 9:44 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Modify a tile from background</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><img src="https://thumbs.gfycat.com/LazyRipeGrayfox-max-1mb.gif" alt="Image" /><br /><br />Hello! I'm working on an Arkanoid Clone for NES. I need to understand what's the best way to change the bricks tile on the background after a collision. For now I'm loading the background on the screen in this way:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">LoadPlayScreen:&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;;load playfield screen<br />&nbsp; LDA $2002&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; read PPU status to reset the high/low latch<br />&nbsp; LDA #$20<br />&nbsp; STA $2006&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; write the high byte of $2000 address<br />&nbsp; LDA #$00<br />&nbsp; STA $2006&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; write the low byte of $2000 address<br /><br />&nbsp; LDA #LOW( TileLevel_1 )<br />&nbsp; STA ADDR_LOW<br />&nbsp; LDA #HIGH( TileLevel_1 )<br />&nbsp; STA ADDR_HIGH<br />&nbsp;<br />&nbsp; LDX #$04&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ; Loop X 4 times<br />&nbsp; LDY #$00&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ; Loop Y 256 times<br />LoadBgLvlLoop:<br />&nbsp; LDA &#91; ADDR_LOW &#93;, y<br />&nbsp; STA $2007<br />&nbsp; INY<br />&nbsp; BNE LoadBgLvlLoop<br />; Outer loop<br />&nbsp; INC ADDR_HIGH&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ; increment high byte of address backg to next 256 byte chunk<br />&nbsp; DEX&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ; one chunk done so X = X - 1.<br />&nbsp; BNE LoadBgLvlLoop&nbsp; &nbsp; &nbsp; &nbsp; ; if X isn't zero, do again</div><br /><br />I understand that the only way to communicate with the PPU is trough $2006/$2007, so, what's the best way to change a tile on a XY position that's already on the screen? The entire tile is on the VRAM right? So can I modify a tile and update the background?<br /><br />Thanks!

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Fri Jun 29, 2018 10:10 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Modify a tile from background</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />1. Calculate at what address to draw it: $2000 plus 32 times the vertical position of the tile (in 8-pixel units) plus the horizontal position of the tile (in 8-pixel units)<br />2. Calculate what tile to draw, in your case the empty background tile<br />3. Wait for vertical blanking<br />4. Write the high byte of the address to $2006: this is usually values $20 to $23<br />5. Write the low byte of the address to $2006<br />6. Write the new tile number to $2007<br /><br />Are you looking for more detailed instruction about how to &quot;Calculate at what address to draw it&quot; in 6502 assembly language?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>kikutano</b> [ Fri Jun 29, 2018 10:51 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Modify a tile from background</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">1. Calculate at what address to draw it: $2000 plus 32 times the vertical position of the tile (in 8-pixel units) plus the horizontal position of the tile (in 8-pixel units)<br />2. Calculate what tile to draw, in your case the empty background tile<br />3. Wait for vertical blanking<br />4. Write the high byte of the address to $2006: this is usually values $20 to $23<br />5. Write the low byte of the address to $2006<br />6. Write the new tile number to $2007<br /><br />Are you looking for more detailed instruction about how to &quot;Calculate at what address to draw it&quot; in 6502 assembly language?</div><br /><br /><br />Why from $20 and $23? There is some example that I can read? Thanks! <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>dougeff</b> [ Fri Jun 29, 2018 12:07 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Modify a tile from background</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />PPU memory map.<br /><br />0-1fff = tiles<br />2000-23ff = nametable 0<br />etc.<br /><br />nametable is a silly word that means tile map, which tiles go where on the screen.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Fri Jun 29, 2018 4:58 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Modify a tile from background</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />In your other thread I posted an example of how to access an individual tile in the level map. You can use that exact same code to calculate the address of a tile in VRAM, the only differences are that the base address should be the base address of the name table in VRAM (e.g. $2000) and the final result will have to be written to $2006, instead of being used as a pointer.<br /><br />Note that the formula tepples posted (BASE + Y * 32 + X) takes X and Y in 8-pixel units, while the routine I posted takes them in pixel units. I wrote it that way because I assumed you'd be calculating those coordinates from sprite coordinates, which are in pixel units, so you save a little bit of CPU time by not shifting Y right 3 times just to shift it left 5 times... clearing the lower 3 bits and shifting it left twice (like in my routine) does the same job in less time.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>kikutano</b> [ Sat Jun 30, 2018 3:24 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Modify a tile from background</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Ok thanks, I can change the background without problem now. But now I've another couple of questions  <img src="./images/smilies/icon_redface.gif" alt=":oops:" title="Embarassed" /> . And that's about the collision test. Now I've the entire background on VRAM, theoretically I can access to any position on VRAM by <br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">LDA $2002<br />&nbsp; LDA #$20<br />&nbsp; STA $2006<br />&nbsp; LDA #$01<br />&nbsp; STA $2006<br />&nbsp; LDX $2007<br />&nbsp; LDX $2007</div><br /><br />So by reading $2007 I can now witch tile is in $2001. Modify and store it again, but I read in another thread that this is slow. So, I want to understand if can I copy the ENTIRE ( for now ) background tile in RAM and work on it for the collision detections. I tried to do the same thing that I do for copying the background on VRAM, but for some reason this doesn't work.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">LDA #LOW( TileLevel_1 )<br />&nbsp; STA ADDR_LOW<br />&nbsp; LDA #HIGH( TileLevel_1 )<br />&nbsp; STA ADDR_HIGH<br />&nbsp;<br />&nbsp; LDX #$04&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ; Loop X 4 times<br />&nbsp; LDY #$00&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ; Loop Y 256 times<br />LoadBgLvlLoop:<br />&nbsp; LDA &#91; ADDR_LOW &#93;, y<br />&nbsp;<br />&nbsp; STA $0400, y<br />&nbsp; <br />&nbsp; INY<br />&nbsp; BNE LoadBgLvlLoop<br />; Outer loop<br />&nbsp; INC ADDR_HIGH&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ; increment high byte of address backg to next 256 byte chunk<br />&nbsp; DEX&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ; one chunk done so X = X - 1.<br />&nbsp; BNE LoadBgLvlLoop&nbsp; &nbsp; &nbsp; &nbsp; ; if X isn't zero, do again</div><br /><br />I'm storing from $0400. But when I try to read, after the loading on RAM, at $0401 I can't find my tile. Probably I'm doing something wrong. Any suggest? What's the best way to that?<br /><br />Thanks a lot! You are saving my life in this code adventure <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>dougeff</b> [ Sat Jun 30, 2018 5:43 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Modify a tile from background</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />STA $0400, y can only reach from $400-4ff. 256 bytes. So, on the second pass of the larger loop, you're overwriting $400-4ff multiple times.<br /><br />You seem to be moving 4x256=1024 bytes.<br /><br />You need a second pointer to sta.<br /><br />LDA #0<br />STA ADDR_LOW2<br />LDa #4<br />STA ADDR_HIGH2 ; ptr now points to $400<br />...<br />...<br />LDA [ADDR_LOW], y<br />STA [ADDR_LOW2], y<br />...<br />...<br />;and increase both high bytes<br />INC ADDR_HIGH<br />INC ADDR_HIGH2

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>kikutano</b> [ Sat Jun 30, 2018 6:36 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Modify a tile from background</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">dougeff wrote:</div><div class="quotecontent">STA $0400, y can only reach from $400-4ff. 256 bytes. So, on the second pass of the larger loop, you're overwriting $400-4ff multiple times.<br /><br />You seem to be moving 4x256=1024 bytes.<br /><br />You need a second pointer to sta.<br /><br />LDA #0<br />STA ADDR_LOW2<br />LDa #4<br />STA ADDR_HIGH2 ; ptr now points to $400<br />...<br />...<br />LDA [ADDR_LOW], y<br />STA [ADDR_LOW2], y<br />...<br />...<br />;and increase both high bytes<br />INC ADDR_HIGH<br />INC ADDR_HIGH2</div><br /><br />It works! <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /> Thanks a lot!

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>kikutano</b> [ Sat Jun 30, 2018 7:46 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Modify a tile from background</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="codetitle"><b>Code:</b></div><div class="codecontent">UpdateBGScreen:<br />&nbsp; <br />&nbsp; LDA TILE_COLLISION_NUM<br />&nbsp; CMP #$00<br />&nbsp; BEQ _NoCollision<br /><br />&nbsp; LDA $2000<br />&nbsp; STA VRAM_ADDRESS_COLLISION<br />&nbsp; LDA VRAM_ADDRESS_COLLISION<br />&nbsp; CLC<br />&nbsp; ADC TILE_COLLISION_NUM<br />&nbsp; STA VRAM_ADDRESS_COLLISION<br /><br />&nbsp; LDA LOW( VRAM_ADDRESS_COLLISION )<br />&nbsp; STA ADDR_LOW<br />&nbsp; LDA HIGH( VRAM_ADDRESS_COLLISION )<br />&nbsp; STA ADDR_HIGH<br /><br />&nbsp; LDA $2002<br />&nbsp; LDA ADDR_HIGH<br />&nbsp; STA $2006<br />&nbsp; LDA ADDR_LOW<br />&nbsp; STA $2006<br /><br />&nbsp; LDA #$30<br />&nbsp; STA $2007<br /><br />&nbsp; LDA #$00<br />&nbsp; STA TILE_COLLISION_NUM<br /><br />_NoCollision:<br />&nbsp;<br />&nbsp; RTS</div><br /><br />When I catch a collision, I save the tile Number in TILE_COLLISION_NUM, so when I call UpdateBGScreen I check if there is some collision to update the BG. The code above translate the tile number in the RAM in a VRAM Address by adding $2000+tile_number ( VRAM and RAM are now 1:1 ) but for some reason, only some bricks are update, other bricks are remain the same, but when the brick is changed, is changed the right brick in the right position. I'm doing some mistake, I've no problem with the formula (BASE + Y * 32 + X), I want to know how to write the correct address format.<br /><br />Thanks! <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Sat Jun 30, 2018 9:24 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Modify a tile from background</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />It's true that read-modify-write operations on VRAM are usually considered too slow, specially if the &quot;modify&quot; step consists in something complex like collision logic, but in this specific case, you only need to check one or two tiles, so the 20 scanlines of vblank time are way more than enough to do it.<br /><br />It's cool that you chose to go with a RAM mirror of the map though, because that allows for better separation of the game logic and graphics rendering, so it scales better once you move on to more complex games.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>kikutano</b> [ Thu Jul 05, 2018 12:13 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Modify a tile from background</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Hello again! Some progress here, now I can destroy my bricks without problem. But only until the 255 tile <img src="./images/smilies/icon_razz.gif" alt=":P" title="Razz" />. Here is my problem. I've stored on RAM a 1:1 map of the background for now, I compute the Tile number where the collision occurs and I store it on BALL_POS_X_ON_TILE. But BALL_POS_X_ON_TILE can count from 0 to 255, so, if I have a collision on the 300 tile, in BALL_POS_X_ON_TILE probably I've something wrong ( 45 maybe? ).<br /><br />The code above show how i compute the Tile position and I load the tile on ram by <br /><br />LDX BALL_POS_X_ON_TILE<br />LDA $0400, x<br /><br />But, if the collision is on tile 300 ( 1AF ) how can I load the 300° tile on RAM if BALL_POS_X_ON_TILE can hold only 0 - 255 values? Thanks! <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent"><br />LDA BALL_POS_X_ON_TILE&nbsp; &nbsp; &nbsp; &nbsp; ; we need this for collision detection<br />&nbsp; STA BALL_POS_X_ON_TILE_PREV<br />&nbsp; LDA BALL_POS_Y_ON_TILE<br />&nbsp; STA BALL_POS_Y_ON_TILE_PREV<br /><br />&nbsp; LDA #$00<br />&nbsp; STA BALL_POS_X_ON_TILE<br />&nbsp; STA BALL_POS_Y_ON_TILE<br /><br />&nbsp; LDA BALL_POS_X<br />&nbsp; LSR A<br />&nbsp; &nbsp;LSR A<br />&nbsp; &nbsp;LSR A&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ; Divide by 8<br />&nbsp; STA BALL_POS_X_ON_TILE<br /><br />&nbsp; LDA BALL_POS_Y&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <br />&nbsp; <br />&nbsp; LSR A<br />&nbsp; LSR A<br />&nbsp; LSR A&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; Divide by 8<br />&nbsp; STA BALL_POS_Y_ON_TILE<br /><br />_ContinueCheckColl:<br />&nbsp; LDX #$00<br />ComputeXYOnTile:<br />&nbsp; LDA BALL_POS_X_ON_TILE<br />&nbsp; CLC<br />&nbsp; ADC #$20<br />&nbsp; STA BALL_POS_X_ON_TILE<br />&nbsp; INX <br />&nbsp; CPX BALL_POS_Y_ON_TILE<br />&nbsp; BNE ComputeXYOnTile<br /><br />&nbsp; ;Verify the collision with the left part of the brick<br />PerformBallColWithBrickLeft:<br />&nbsp; LDX BALL_POS_X_ON_TILE<br />&nbsp; LDA $0400, x<br />&nbsp; CMP #$2D<br />&nbsp; BEQ PerformBallCollisionWithBrick<br /></div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Thu Jul 05, 2018 1:15 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Modify a tile from background</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Like I said before: use a 16-bit pointer instead of an 8-bit index. Calculate the tile offset (TileY * 32 + TileX) and then add the base address ($0400, is it?). This will give you a pointer you can use to access any part of the map.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>psycopathicteen</b> [ Thu Jul 05, 2018 8:24 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Modify a tile from background</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">Like I said before: use a 16-bit pointer instead of an 8-bit index. Calculate the tile offset (TileY * 32 + TileX) and then add the base address ($0400, is it?). This will give you a pointer you can use to access any part of the map.</div><br /><br />You can do the TileX amount with indexing.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Thu Jul 05, 2018 10:22 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Modify a tile from background</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Yup. The Pointer can be just <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">$0400 + TileY * 32</tt>, while index register Y holds TileX.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>kikutano</b> [ Sat Jul 07, 2018 3:45 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Modify a tile from background</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Ok, I'm working on it. Thanks a lot! <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>