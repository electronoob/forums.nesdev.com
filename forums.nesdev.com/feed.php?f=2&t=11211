<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=2&amp;t=11211" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2015-03-18T09:25:48-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=2&amp;t=11211</id>
<entry>
<author><name><![CDATA[Movax12]]></name></author>
<updated>2014-05-11T12:15:47-07:00</updated>
<published>2014-05-11T12:15:47-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11211&amp;p=128666#p128666</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11211&amp;p=128666#p128666"/>
<title type="html"><![CDATA[Re: lazy65 - a ca65 pre-parser]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11211&amp;p=128666#p128666"><![CDATA[
I like the res command. I did that too (macros):<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent"> ; Example of declaring variables using .struct syntax.<br />        resZP { \<br />                foo     .byte ,     \<br />                bar     .word ,     \<br />                test    .addr 6     \<br />        }<br /> <br />        resBSS { myVar  .byte, yourVar  .addr 4 }<br />        resBSS  baz     .byte<br /></div><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4680">Movax12</a> — Sun May 11, 2014 12:15 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[miau]]></name></author>
<updated>2014-05-11T09:21:00-07:00</updated>
<published>2014-05-11T09:21:00-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11211&amp;p=128650#p128650</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11211&amp;p=128650#p128650"/>
<title type="html"><![CDATA[Re: lazy65 - a ca65 pre-parser]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11211&amp;p=128650#p128650"><![CDATA[
Updated. Fixed a couple of bugs and added the custom commands .reszp and .resbss.<br /><br />This:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">.proc func<br />    .segment &quot;ZEROPAGE&quot;<br />        localvar: .res 1<br />    .segment &quot;CODE&quot;<br />    rts<br />.endproc<br /></div><br />can now be written like this:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">.proc func<br />    localvar: .reszp 1<br />    rts<br />.endproc<br /></div><br />.reszp and .resbss use the ca65 commands .pushseg and .popseg when translated so the segment you are in will be automatically restored.<br /><br />I also got rid of the .py extensions so now the tools can be called the same way in both Windows and Linux (by just typing &quot;lazy65&quot; or &quot;lazymake&quot;).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=1377">miau</a> — Sun May 11, 2014 9:21 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[thefox]]></name></author>
<updated>2014-05-03T17:54:52-07:00</updated>
<published>2014-05-03T17:54:52-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11211&amp;p=128372#p128372</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11211&amp;p=128372#p128372"/>
<title type="html"><![CDATA[Re: lazy65 - a ca65 pre-parser]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11211&amp;p=128372#p128372"><![CDATA[
<div class="quotetitle">lidnariq wrote:</div><div class="quotecontent"><br />Zip doesn't preserve the executable bit either<br /></div><br />True.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=80">thefox</a> — Sat May 03, 2014 5:54 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[lidnariq]]></name></author>
<updated>2014-05-03T16:59:27-07:00</updated>
<published>2014-05-03T16:59:27-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11211&amp;p=128371#p128371</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11211&amp;p=128371#p128371"/>
<title type="html"><![CDATA[Re: lazy65 - a ca65 pre-parser]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11211&amp;p=128371#p128371"><![CDATA[
Zip doesn't preserve the executable bit either, so it already requires finessing: zip is poorly suited to unixy things. The options are &quot;accept having .py at your command line&quot;, &quot;use a different compressor&quot; (tgz, 7z, rar), or &quot;rename the files to not end with .py&quot;<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3512">lidnariq</a> — Sat May 03, 2014 4:59 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[thefox]]></name></author>
<updated>2014-05-03T16:27:54-07:00</updated>
<published>2014-05-03T16:27:54-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11211&amp;p=128369#p128369</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11211&amp;p=128369#p128369"/>
<title type="html"><![CDATA[Re: lazy65 - a ca65 pre-parser]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11211&amp;p=128369#p128369"><![CDATA[
<div class="quotetitle">lidnariq wrote:</div><div class="quotecontent"><br />*nix support <em>should</em> just involve having the right #! line in the original python script... and preferably not having &quot;.py&quot; in the command name, which is probably best solved with symlinks.<br /></div><br />How do you plan to put a symlink in a zip file?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=80">thefox</a> — Sat May 03, 2014 4:27 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[lidnariq]]></name></author>
<updated>2014-05-03T15:48:29-07:00</updated>
<published>2014-05-03T15:48:29-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11211&amp;p=128368#p128368</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11211&amp;p=128368#p128368"/>
<title type="html"><![CDATA[Re: lazy65 - a ca65 pre-parser]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11211&amp;p=128368#p128368"><![CDATA[
*nix support <em>should</em> just involve having the right #! line in the original python script... and preferably not having &quot;.py&quot; in the command name, which is probably best solved with symlinks.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3512">lidnariq</a> — Sat May 03, 2014 3:48 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[miau]]></name></author>
<updated>2014-05-03T14:40:21-07:00</updated>
<published>2014-05-03T14:40:21-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11211&amp;p=128367#p128367</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11211&amp;p=128367#p128367"/>
<title type="html"><![CDATA[Re: lazy65 - a ca65 pre-parser]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11211&amp;p=128367#p128367"><![CDATA[
Woops, fixed.<br />Cool. I am going to look into that.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=1377">miau</a> — Sat May 03, 2014 2:40 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[thefox]]></name></author>
<updated>2014-05-05T02:29:46-07:00</updated>
<published>2014-05-03T14:12:50-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11211&amp;p=128366#p128366</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11211&amp;p=128366#p128366"/>
<title type="html"><![CDATA[Re: lazy65 - a ca65 pre-parser]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11211&amp;p=128366#p128366"><![CDATA[
Trivial error on line 85 in Assembler.py:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">C:\Users\f\Downloads\lazy65-011\examples\basic&gt;lazymake<br />lazy65 --sym-only -s &quot;src&quot; -o &quot;obj&quot; Module<br />Traceback (most recent call last):<br />  File &quot;C:\Users\f\Downloads\lazy65-011\lazy65.py&quot;, line 8, in &lt;module&gt;<br />    from src.Assembler import Assembler<br />  File &quot;C:\Users\f\Downloads\lazy65-011\src\Assembler.py&quot;, line 85<br />    raise tempy.Error('Could not create symbol file for module '+moduleName+')<br />                                                                             ^<br />SyntaxError: EOL while scanning string literal<br />lazymake.py: Error 1<br /></div><br /><br />And if you want to add *nix support, this &quot;npm&quot; shell script from node.js may be a good template to base &quot;lazy65&quot; and &quot;lazymake&quot; on:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">#!/bin/sh<br /><br />basedir=`dirname &quot;$0&quot;`<br /><br />case `uname` in<br />    *CYGWIN*) basedir=`cygpath -w &quot;$basedir&quot;`;;<br />esac<br /><br />if &#91; -x &quot;$basedir/node.exe&quot; &#93;; then<br />  &quot;$basedir/node.exe&quot; &quot;$basedir/node_modules/npm/bin/npm-cli.js&quot; &quot;$@&quot;<br />else<br />  node &quot;$basedir/node_modules/npm/bin/npm-cli.js&quot; &quot;$@&quot;<br />fi<br /></div><br />EDIT: In hindsight, I'm not sure if this script is the same one that ships with the *nix installations of node.js.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=80">thefox</a> — Sat May 03, 2014 2:12 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[miau]]></name></author>
<updated>2014-05-03T13:49:49-07:00</updated>
<published>2014-05-03T13:49:49-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11211&amp;p=128365#p128365</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11211&amp;p=128365#p128365"/>
<title type="html"><![CDATA[Re: lazy65 - a ca65 pre-parser]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11211&amp;p=128365#p128365"><![CDATA[
<div class="quotetitle">Movax12 wrote:</div><div class="quotecontent"><br />I did a kind of hacky thing with macros to scope macros that are a part of a header interface:<br /><!-- l --><a class="postlink-local" href="http://forums.nesdev.com/viewtopic.php?p=112437#p112437">viewtopic.php?p=112437#p112437</a><!-- l --><br /></div><br />Oh, I never checked that topic again. Interesting. A bit of nasty boilerplate code, but still, it goes to show how powerful ca65 really is.<br /><br /><div class="quotetitle">thefox wrote:</div><div class="quotecontent"><br />lazy65.cmd and lazymake.cmd could look like this...<br /></div><br />Thanks, added them!<br /><br /><div class="quotetitle">thefox wrote:</div><div class="quotecontent"><br />Aaaand, not sure if I just messed something up with my changes, but when I run lazymake, it occasionally picks a different compilation order and fails to compile the &quot;basic&quot; example.<br /></div><br />It was most likely a race condition with the multi-threaded compilation going on. Anyway, thanks for your feedback, I added dependency file generation and based the build system around it which will hopefully eliminate these errors.<br /><br />Updated download link in first post.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=1377">miau</a> — Sat May 03, 2014 1:49 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[thefox]]></name></author>
<updated>2014-05-03T04:30:38-07:00</updated>
<published>2014-05-03T04:30:38-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11211&amp;p=128358#p128358</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11211&amp;p=128358#p128358"/>
<title type="html"><![CDATA[Re: lazy65 - a ca65 pre-parser]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11211&amp;p=128358#p128358"><![CDATA[
Seems cool.<br /><br />I don't know if I'm in the minority here, but when I installed Python on Windows, it didn't by default associate .py files to run with Python. So just typing &quot;lazymake.py&quot; doesn't work here (I have .py associated with a text editor).<br /><br />One way to fix that could be to provide lazy65.cmd and lazymake.cmd (for Windows) and lazy65 and lazymake shell scripts (for *nix) in the base directory. Then a simple &quot;lazy65&quot; or &quot;lazymake&quot; could be used to invoke the scripts.<br /><br />lazy65.cmd and lazymake.cmd could look like this:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">@echo off<br />python %~dpn0.py %*<br /></div><br />Not sure what the *nix counterparts would be. Also need to change LAZY65 in lazymake.py from lazy65.py to lazy65. I think I may have missed some other place where it tries to run lazy65.py, because when I run lazymake, lazy65.py opens in my text editor. <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /><br />Aaaand, not sure if I just messed something up with my changes, but when I run lazymake, it occasionally picks a different compilation order and fails to compile the &quot;basic&quot; example.<br /><br />Here's a run that failed (didn't compile Graphics before main):<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">C:\Users\f\Downloads\lazy65-0.1.0\examples\basic&gt;lazymake<br />lazy65 -s &quot;src&quot; -o &quot;obj&quot; Global<br />lazy65 -s &quot;src&quot; -o &quot;obj&quot; Module<br />lazy65 -s &quot;src&quot; -o &quot;obj&quot; Graphics.Sprite<br />lazy65 -s &quot;src&quot; -o &quot;obj&quot; Graphics.Tile<br />lazy65 -s &quot;src&quot; -o &quot;obj&quot; main<br />Traceback (most recent call last):<br />  File &quot;C:\Users\f\Downloads\lazy65-0.1.0\lazy65.py&quot;, line 92, in &lt;module&gt;<br />    main()<br />  File &quot;C:\Users\f\Downloads\lazy65-0.1.0\lazy65.py&quot;, line 80, in main<br />    lines = parser.parse() #2nd pass<br />  File &quot;C:\Users\f\Downloads\lazy65-0.1.0\src\tempy.py&quot;, line 46, in parse<br />    self.lineCallback()<br />  File &quot;C:\Users\f\Downloads\lazy65-0.1.0\lazy65.py&quot;, line 20, in lineCallback<br />    asm.parse()<br />  File &quot;C:\Users\f\Downloads\lazy65-0.1.0\src\Assembler.py&quot;, line 185, in parse<br />    self.command(tok.text)<br />  File &quot;C:\Users\f\Downloads\lazy65-0.1.0\src\Assembler.py&quot;, line 385, in command<br />    self.importModule(moduleName, scopeName, True, True)<br />  File &quot;C:\Users\f\Downloads\lazy65-0.1.0\src\Assembler.py&quot;, line 115, in importModule<br />    self.importSingleModule(moduleName, scopeName, generateIncludes)<br />  File &quot;C:\Users\f\Downloads\lazy65-0.1.0\src\Assembler.py&quot;, line 85, in importS<br />ingleModule<br />    with open(symfile,'rb') as f:<br />IOError: &#91;Errno 2&#93; No such file or directory: 'obj/Graphics.sym'<br />lazymake.py: Error 1<br /></div><br />And here's a one that succeeded (I did lazymake clean inbetween):<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">C:\Users\f\Downloads\lazy65-0.1.0\examples\basic&gt;lazymake<br />lazy65 -s &quot;src&quot; -o &quot;obj&quot; Global<br />lazy65 -s &quot;src&quot; -o &quot;obj&quot; Module<br />lazy65 -s &quot;src&quot; -o &quot;obj&quot; Graphics.Sprite<br />lazy65 -s &quot;src&quot; -o &quot;obj&quot; Graphics.Tile<br />lazy65 -s &quot;src&quot; -o &quot;obj&quot; Graphics<br />lazy65 -s &quot;src&quot; -o &quot;obj&quot; main<br />ca65 &quot;obj/Global.s&quot; -o &quot;obj/Global.o&quot;<br />ca65 &quot;obj/main.s&quot; -o &quot;obj/main.o&quot;<br />ca65 &quot;obj/Module.s&quot; -o &quot;obj/Module.o&quot;<br />ca65 &quot;obj/Graphics/Sprite.s&quot; -o &quot;obj/Graphics/Sprite.o&quot;<br />ca65 &quot;obj/Graphics/Tile.s&quot; -o &quot;obj/Graphics/Tile.o&quot;<br />ca65 &quot;obj/Graphics.s&quot; -o &quot;obj/Graphics.o&quot;<br />ld65 -o &quot;basic.nes&quot; -C linker.cfg &quot;obj/Global.o&quot; &quot;obj/main.o&quot; &quot;obj/Module.o&quot; &quot;ob<br />j/Graphics/Sprite.o&quot; &quot;obj/Graphics/Tile.o&quot; &quot;obj/Graphics.o&quot;<br />basic.nes: Build complete<br /></div><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=80">thefox</a> — Sat May 03, 2014 4:30 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Movax12]]></name></author>
<updated>2014-05-02T19:23:05-07:00</updated>
<published>2014-05-02T19:23:05-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11211&amp;p=128355#p128355</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11211&amp;p=128355#p128355"/>
<title type="html"><![CDATA[Re: lazy65 - a ca65 pre-parser]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11211&amp;p=128355#p128355"><![CDATA[
I did a kind of hacky thing with macros to scope macros that are a part of a header interface:<br /><!-- l --><a class="postlink-local" href="http://forums.nesdev.com/viewtopic.php?p=112437#p112437">viewtopic.php?p=112437#p112437</a><!-- l --><br /><br />Not sure if I will keep it, but the idea isn't too messy and it does work, with the only downside being you can't access a variable constant, as in:<br /><tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">myscope::foo .set 1</tt><br />Since it will be interpreted as a macro call. Also, if there is an error in a macro call you'll get a couple of extra error messages as the errors trace through the macro calls. (You may need higher verbosity setting to see this.)<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4680">Movax12</a> — Fri May 02, 2014 7:23 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[miau]]></name></author>
<updated>2015-03-18T09:25:48-07:00</updated>
<published>2014-05-02T18:11:16-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11211&amp;p=128353#p128353</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11211&amp;p=128353#p128353"/>
<title type="html"><![CDATA[lazy65 - a ca65 pre-parser]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11211&amp;p=128353#p128353"><![CDATA[
Hey folks,<br /><br />I got fed up with having to write header files and with ca65's limitations when working with scopes so I created this little tool.<br />This is what it allows you to do:<br /><br />File: Module.z<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">.segment &quot;CODE&quot;<br />func1:<br /><br />.proc func2<br />   var1: .reszp 1<br />.endproc<br /><br />.macro someMacro arg1, arg2<br />.endmacro<br /></div><br />File: main.z<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">.use Module<br /><br />main:<br />   jsr Module.func1<br />   <br />   lda #0<br />   sta Module.func2.var<br />   jsr Module.func2<br />   <br />   Module.someMacro 1, 2<br /></div><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&gt; lazy65 Module<br />&gt; lazy65 main<br /></div><br />This will generate ca65-compatible header and source files that you can integrate into your build process. However, a generic build script (lazymake) is also included which can take care of everything for you.<br /><a href="https://www.python.org" class="postlink">Python 2</a> is required.<br /><br />==============<br /><strong>DOWNLOAD</strong><br /><strong><a href="http://morphcat.de/files/lazy65-0.1.3.zip" class="postlink">lazy65 V0.1.3 (latest)</a></strong><br /><a href="http://morphcat.de/files/lazy65-0.1.2.zip" class="postlink">lazy65 V0.1.2</a><br /><a href="http://morphcat.de/files/lazy65-0.1.1.zip" class="postlink">lazy65 V0.1.1</a><br /><a href="http://morphcat.de/files/lazy65-0.1.0.zip" class="postlink">lazy65 V0.1.0</a><br />==============<br /><br /><strong>Planned features</strong><br /><ul>- python macros (.pymacro)</ul><ul>- automatic generation of linker config files for common mappers</ul><ul>- maybe a couple of extra commands that make life easier</ul><br />The tool is still in a somewhat early stage and currently identifies and replaces symbols in a rather <em>lazy</em> way which may result in cryptic error messages, I'm hoping to fix that in a later version. If you decide to give it a try, please let me know if you encounter any problems. There may be unresolved bugs with certain ca65 commands (.struct?) that need fixing.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=1377">miau</a> — Fri May 02, 2014 6:11 pm</p><hr />
]]></content>
</entry>
</feed>