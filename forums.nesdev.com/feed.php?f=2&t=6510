<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="https://forums.nesdev.com/feed.php?f=2&amp;t=6510" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="https://forums.nesdev.com/index.php" />
<updated>2010-07-03T08:05:53-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>https://forums.nesdev.com/feed.php?f=2&amp;t=6510</id>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2010-07-03T08:05:53-07:00</updated>
<published>2010-07-03T08:05:53-07:00</published>
<id>https://forums.nesdev.com/viewtopic.php?t=6510&amp;p=63616#p63616</id>
<link href="https://forums.nesdev.com/viewtopic.php?t=6510&amp;p=63616#p63616"/>
<title type="html"><![CDATA[Taken branch delays interrupt]]></title>

<content type="html" xml:base="https://forums.nesdev.com/viewtopic.php?t=6510&amp;p=63616#p63616"><![CDATA[
I updated the <a href="http://wiki.nesdev.com/w/index.php/Emulator_tests#CPU" class="postlink">cpu_interrupts_v2</a>test to include the correct output, and also renamed 4-nmi_and_dma to 4-irq_and_dma, since it wasn't NMI that it was testing. If you have further questions about this test, start a new thread, since 4-irq_and_dma isn't related to this branch timing issue (5-branch_delays_irq is the one that is).<p>Statistics: Posted by <a href="https://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Sat Jul 03, 2010 8:05 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Zepper]]></name></author>
<updated>2010-07-02T06:54:19-07:00</updated>
<published>2010-07-02T06:54:19-07:00</published>
<id>https://forums.nesdev.com/viewtopic.php?t=6510&amp;p=63589#p63589</id>
<link href="https://forums.nesdev.com/viewtopic.php?t=6510&amp;p=63589#p63589"/>
<title type="html"><![CDATA[Taken branch delays interrupt]]></title>

<content type="html" xml:base="https://forums.nesdev.com/viewtopic.php?t=6510&amp;p=63589#p63589"><![CDATA[
- What should be the correct output for test <em>4-nmi_and_dma</em> ? I don't know an emulator that passes ok.<p>Statistics: Posted by <a href="https://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=39">Zepper</a> — Fri Jul 02, 2010 6:54 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2010-07-01T14:30:59-07:00</updated>
<published>2010-07-01T14:30:59-07:00</published>
<id>https://forums.nesdev.com/viewtopic.php?t=6510&amp;p=63557#p63557</id>
<link href="https://forums.nesdev.com/viewtopic.php?t=6510&amp;p=63557#p63557"/>
<title type="html"><![CDATA[Taken branch delays interrupt]]></title>

<content type="html" xml:base="https://forums.nesdev.com/viewtopic.php?t=6510&amp;p=63557#p63557"><![CDATA[
A page-crossing taken branch doesn't have this oddity; it acts like a normal 4-cycle instruction. See timing results in first post. Apparently it only applies to taken non-page-crossing branches.<p>Statistics: Posted by <a href="https://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Thu Jul 01, 2010 2:30 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2010-07-01T13:11:20-07:00</updated>
<published>2010-07-01T13:11:20-07:00</published>
<id>https://forums.nesdev.com/viewtopic.php?t=6510&amp;p=63547#p63547</id>
<link href="https://forums.nesdev.com/viewtopic.php?t=6510&amp;p=63547#p63547"/>
<title type="html"><![CDATA[Taken branch delays interrupt]]></title>

<content type="html" xml:base="https://forums.nesdev.com/viewtopic.php?t=6510&amp;p=63547#p63547"><![CDATA[
Oh I guess this make sense altough it's weird. The 3rd cycle (that is adding the 2nd fetched byte to PC) is considered part of the next instruction. But does this apply as well to branch which cross pages ?<br /><br />You should ask this question to 6502.org I think.<p>Statistics: Posted by <a href="https://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Thu Jul 01, 2010 1:11 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2010-07-01T08:29:47-07:00</updated>
<published>2010-07-01T08:29:47-07:00</published>
<id>https://forums.nesdev.com/viewtopic.php?t=6510&amp;p=63538#p63538</id>
<link href="https://forums.nesdev.com/viewtopic.php?t=6510&amp;p=63538#p63538"/>
<title type="html"><![CDATA[Taken branch delays interrupt]]></title>

<content type="html" xml:base="https://forums.nesdev.com/viewtopic.php?t=6510&amp;p=63538#p63538"><![CDATA[
I further just found/realized that this effectively increases the number of cycles the next instruction takes. It behaves just as if the taken non-page-crossing branch was a two-cycle instruction, but then the instruction branched to is one cycle longer. This means that if the instruction branched to is an ROL $1234,X, then interrupts will be delayed longer than you thought possible; it means that you must consider the longest instruction 8 cycles with regard to calculating maximum interrupt latency, rather than 7. This is very significant when doing critical timing, and makes me wonder whether the 6502 suffers from it as well, and not just the NES CPU.<p>Statistics: Posted by <a href="https://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Thu Jul 01, 2010 8:29 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2010-06-18T22:03:21-07:00</updated>
<published>2010-06-18T22:03:21-07:00</published>
<id>https://forums.nesdev.com/viewtopic.php?t=6510&amp;p=63094#p63094</id>
<link href="https://forums.nesdev.com/viewtopic.php?t=6510&amp;p=63094#p63094"/>
<title type="html"><![CDATA[Taken branch delays interrupt]]></title>

<content type="html" xml:base="https://forums.nesdev.com/viewtopic.php?t=6510&amp;p=63094#p63094"><![CDATA[
I've discovered that a taken non-page-crossing branch ignores IRQ/NMI during its last clock, so that next instruction executes before the IRQ. Other instructions would execute the NMI before the next instruction in this case. This doesn't occur for non-taken branch, or one that crosses a page. It also doesn't occur for JMP. The <a href="http://wiki.nesdev.com/w/index.php/Emulator_tests#CPU" class="postlink">cpu_interrupts_v2</a> test on the Wiki now tests this behavior.<br /><br />I encountered this while improving the new PPU synchronization scheme. I was using a HERE: BCC HERE wait loop for NMI, and was having my NMI occur later than expected. When I changed it back to JMP HERE, it worked fine. It made absolutely no sense, as I thought they were identical. I made sure there was no page crossing, that the carry flag wasn't being set, etc. and finally realized that its timing must actually be different. This behavior is probably already known in 6502 circles, maybe even here, but it was definitely news to me.<br /><br />The test has an IRQ occur at each cycle within a test sequence, starting at some arbitrary point, and shows how many clocks delayed the IRQ was. T+ is how many clocks since the arbitrary starting point the IRQ was requested, and CK is how many clocks delayed it was, also relative to some arbitrary value. Only the relative values of these matter. PC is the saved PC of the next instruction that was on the stack within the IRQ handler, relative to some starting point. The example code has comments showing the offsets, so you can see where the IRQ was actually vectored.<br /><br />The first three tests show nothing out of the ordinary, but not the fourth:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">        nop<br />        ; 04<br />        jmp :+<br />        ; 07<br />:       nop<br />        ; 08<br />:       jmp :-<br /><br />test_jmp<br />T+ CK PC<br />00 02 04 NOP<br />01 01 04 <br />02 03 07 JMP<br />03 02 07 <br />04 01 07 <br />05 02 08 NOP<br />06 01 08 <br />07 03 08 JMP<br />08 02 08 <br />09 01 08 <br /><br />        clc<br />        ; 04<br />        bcs :+<br />        ; 06<br />        nop<br />        ; 07<br />:       lda $100<br />        ; 0A<br />:       jmp :-<br /><br />test_branch_not_taken<br />T+ CK PC<br />00 02 04 CLC<br />01 01 04 <br />02 02 06 BCS<br />03 01 06 <br />04 02 07 NOP<br />05 01 07 <br />06 04 0A JMP<br />07 03 0A <br />08 02 0A <br />09 01 0A JMP<br /><br />        clc<br />        ; 0D<br />        bcc :+<br />        ; 0F<br />        nop<br />        ; 00<br />:       lda $100<br />        ; 03<br />:       jmp :-<br /><br />test_branch_taken_pagecross<br />T+ CK PC<br />00 02 0D CLC<br />01 01 0D <br />02 04 00 BCC<br />03 03 00 <br />04 02 00 <br />05 01 00 <br />06 04 03 LDA $100<br />07 03 03 <br />08 02 03 <br />09 01 03 <br /><br />        clc<br />        ; 04<br />        bcc :+<br />        ; 06<br />        nop<br />        ; 07<br />:       lda $100<br />        ; 0A<br />:       jmp :-<br /><br />test_branch_taken<br />T+ CK PC<br />00 02 04 CLC<br />01 01 04 <br />02 03 07 BCC<br />03 02 07 <br />04 05 0A LDA $100 *** This is the special case<br />05 04 0A <br />06 03 0A <br />07 02 0A <br />08 01 0A <br />09 03 0A JMP</div><br /><br />The timing looks similar to the NOT taken branch. Note how the IRQ being requested during the last cycle of the BCC doesn't cause an IRQ immediately after (07), but rather after the LDA (0A). So you get a 5-cycle delay for this case, even though there are no 5-cycle instructions in the test sequence.<p>Statistics: Posted by <a href="https://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Fri Jun 18, 2010 10:03 pm</p><hr />
]]></content>
</entry>
</feed>