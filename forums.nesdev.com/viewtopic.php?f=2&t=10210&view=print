<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - CPU budget questions</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">CPU budget questions</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=10210">http://forums.nesdev.com/viewtopic.php?f=2&amp;t=10210</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>sonder</b> [ Thu Jun 27, 2013 9:28 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>CPU budget questions</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />In my experiments last night I tried to update the attribute table for a single screen with 64 random values.<br /><br />Boy was I in for a surprise - 64 random values within the vblank is out of the question for the NES.  Glitch city.  I was able to make a for loop in C that wrote 54 immediate values without glitching the screen.  However, by my calculations I should have been able to do something in the area of 80 values.  If there are 113.667 CPU cycles per scanline and 20 scanlines in the vblank, and an itteration of my loop was around 27 cycles (I counted the CA65 output's cycles) that's what it works out to (working very roughly here - my math habits are often fuzzy.)  But that's well more than 54 iterations. What's going on here?  Assuming I counted the instruction timings correctly.<br /><br />Here's my setup:  I do everything in the NMI - and the very first thing is to call the main loop routine, therefore anything done there first should be within vblank.  And here is the asm of the main routine:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">.segment&nbsp; &nbsp;&quot;CODE&quot;<br /><br />.proc&nbsp; &nbsp;_main: near<br /><br />&nbsp; &nbsp;.dbg&nbsp; &nbsp;func, &quot;main&quot;, &quot;00&quot;, extern, &quot;_main&quot;<br /><br />.segment&nbsp; &nbsp;&quot;CODE&quot;<br /><br />;<br />; poke( PPU_CTRL, 0x90 );<br />;<br />&nbsp; &nbsp;.dbg&nbsp; &nbsp;line, &quot;game.c&quot;, 57<br />&nbsp; &nbsp;lda&nbsp; &nbsp; &nbsp;#$90<br />&nbsp; &nbsp;sta&nbsp; &nbsp; &nbsp;$2000<br />;<br />; vram_adr( 0x23c0 );<br />;<br />&nbsp; &nbsp;.dbg&nbsp; &nbsp;line, &quot;game.c&quot;, 58<br />&nbsp; &nbsp;ldx&nbsp; &nbsp; &nbsp;#$23<br />&nbsp; &nbsp;lda&nbsp; &nbsp; &nbsp;#$C0<br />&nbsp; &nbsp;jsr&nbsp; &nbsp; &nbsp;_vram_adr<br />;<br />; for ( i=0; i != 50; i++ ) {<br />;<br />&nbsp; &nbsp;.dbg&nbsp; &nbsp;line, &quot;game.c&quot;, 59<br />&nbsp; &nbsp;lda&nbsp; &nbsp; &nbsp;#$00<br />L003E:&nbsp; &nbsp;sta&nbsp; &nbsp; &nbsp;_i<br />&nbsp; &nbsp;cmp&nbsp; &nbsp; &nbsp;#$32<br />&nbsp; &nbsp;beq&nbsp; &nbsp; &nbsp;L002F<br />;<br />; poke( PPU_DATA, 1 );<br />;<br />&nbsp; &nbsp;.dbg&nbsp; &nbsp;line, &quot;game.c&quot;, 60<br />&nbsp; &nbsp;lda&nbsp; &nbsp; &nbsp;#$01<br />&nbsp; &nbsp;sta&nbsp; &nbsp; &nbsp;$2007<br />;<br />; for ( i=0; i != 50; i++ ) {<br />;<br />&nbsp; &nbsp;.dbg&nbsp; &nbsp;line, &quot;game.c&quot;, 59<br />&nbsp; &nbsp;lda&nbsp; &nbsp; &nbsp;_i<br />&nbsp; &nbsp;clc<br />&nbsp; &nbsp;adc&nbsp; &nbsp; &nbsp;#$01<br />&nbsp; &nbsp;jmp&nbsp; &nbsp; &nbsp;L003E<br />;<br />; j++;<br />;<br />&nbsp; &nbsp;.dbg&nbsp; &nbsp;line, &quot;game.c&quot;, 62<br />L002F:&nbsp; &nbsp;lda&nbsp; &nbsp; &nbsp;_j<br />&nbsp; &nbsp;clc<br />&nbsp; &nbsp;adc&nbsp; &nbsp; &nbsp;#$01<br />&nbsp; &nbsp;sta&nbsp; &nbsp; &nbsp;_j<br />;<br />; }<br />;<br />&nbsp; &nbsp;.dbg&nbsp; &nbsp;line, &quot;game.c&quot;, 67<br />&nbsp; &nbsp;rts<br />&nbsp; &nbsp;.dbg&nbsp; &nbsp;line<br /></div><br /><br />Just curious here.  If 6502's listed timings are different on the NES for some reason that would be good to know.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Shiru</b> [ Thu Jun 27, 2013 9:44 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: CPU budget questions</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />There is really short period when the VRAM access is possible - ~2700t, and 513+ are needed to do sprite DMA. So, if you need to put many values into VRAM, you have to write this part in assembly. Even further, you should prepare the values before getting into NMI, and use unrolled loops. If you have enough RAM, you can even generate a pusher subroutine, like sequence of 'lda #nn sta PPU_DATA', this way you'll get 6t/byte for sequental write and will be able to push a sequence of ~350 bytes. Much less for random writes, like 100 bytes.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Thu Jun 27, 2013 10:43 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: CPU budget questions</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />You can use <a href="http://kkfos.aspekt.fi/projects/nes/tools/nintendulatordx/" class="postlink">NintendulatorDX</a> to figure out how many cycles a piece of code is taking. Simply write to $4020 when you want to start the timing and to $4030 when you want it to end. The README file has more info.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>sonder</b> [ Thu Jun 27, 2013 11:08 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: CPU budget questions</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Shiru wrote:</div><div class="quotecontent">There is really short period when the VRAM access is possible - ~2700t, and 513+ are needed to do sprite DMA. So, if you need to put many values into VRAM, you have to write this part in assembly. Even further, you should prepare the values before getting into NMI, and use unrolled loops. If you have enough RAM, you can even generate a pusher subroutine, like sequence of 'lda #nn sta PPU_DATA', this way you'll get 6t/byte for sequental write and will be able to push a sequence of ~350 bytes. Much less for random writes, like 100 bytes.</div><br /><br />ohhhh, THAT was what was causing the glitches!  the other stuff in the nmi routine.  d'oh.  no wonder i was actually also seeing flashing colors and shearing.  on a side note the glitches were actually quite beautiful to me.  i have a mind to see how i can abuse the PPU to produce these kinds of effects intentionally.<br /><br />yeah, I agree, asm is definitely a better way to go here, and preparing &quot;batches&quot; beforehand as i see is already set up in your code.  I was just using these tests as a way to get a handle on C and performance.  those are some good ideas for optimization / squeezing out more from the hardware.<br /><br />Thanks for the tip, thefox.  I use NDX, but I will have to look into that.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Thu Jun 27, 2013 11:25 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: CPU budget questions</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />For this on-the-fly code, you can use X and Y for commonly used values. Do the updates to each 256-byte page of VRAM together and then X can hold $20 for the first few, then $21, etc., and Y whatever the most common value is. So you get code like<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">ldx #$20<br />ldy #$00<br />stx $2006<br />lda #$08<br />sta $2006<br />sty $2007<br />stx $2006<br />lda #$25<br />sta $2006<br />lda #$10<br />sta $2007<br />stx $2006</div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>sonder</b> [ Mon Jul 01, 2013 2:10 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: CPU budget questions</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I thought I should mention that I've settled on a hybrid NMI approach - vram updates and music in the VMI, with a &quot;callback&quot; in the NMI to do whatever custom stuff needs doing, and controller polling and game logic in the main thread.  Trying to poll controllers in the NMI was a disaster, not sure why.  Anyway I think splitting the threads is a good idea in general for framerate and CPU control.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>