<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=3&amp;t=1603" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2006-06-03T01:33:38-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=3&amp;t=1603</id>
<entry>
<author><name><![CDATA[Anes]]></name></author>
<updated>2006-06-03T01:33:38-07:00</updated>
<published>2006-06-03T01:33:38-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1603&amp;p=13768#p13768</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1603&amp;p=13768#p13768"/>
<title type="html"><![CDATA[dd routines interface]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1603&amp;p=13768#p13768"><![CDATA[
thanks again for the pitch info and the code, i think maybe i didnt have problems cos i always used nvidia cards (at least since i started the emu).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=72">Anes</a> — Sat Jun 03, 2006 1:33 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[byuu]]></name></author>
<updated>2006-06-02T23:35:11-07:00</updated>
<published>2006-06-02T23:35:11-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1603&amp;p=13765#p13765</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1603&amp;p=13765#p13765"/>
<title type="html"><![CDATA[dd routines interface]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1603&amp;p=13765#p13765"><![CDATA[
If your filter is 32bpp-only, eg HQ2x, then you rewrite it to be 16-bit :D<br /><br />Ask blargg, he has a really highly optimized c++ version of the HQ2x filter that outputs at 16bpp. Or get it from bsnes/src/snes/video/filter_hq2x.cpp.<br /><br />Anyway, I don't think templates will do what I want. I know I can't insert expressions into functions, and I don't even think I can build larger labels from arguments to the templates, eg :<br />void op_&lt;template argument&gt;_w()<br />would only work with #defines.<br /><br />Perhaps a nasty #define / template hybrid would do the trick...<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=375">byuu</a> — Fri Jun 02, 2006 11:35 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[kyuusaku]]></name></author>
<updated>2006-06-02T20:04:56-07:00</updated>
<published>2006-06-02T20:04:56-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1603&amp;p=13763#p13763</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1603&amp;p=13763#p13763"/>
<title type="html"><![CDATA[dd routines interface]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1603&amp;p=13763#p13763"><![CDATA[
The Famicom Titler has a RGB PPU, there is an external NTSC encoder like most game consoles.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=20">kyuusaku</a> — Fri Jun 02, 2006 8:04 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2006-06-02T19:23:06-07:00</updated>
<published>2006-06-02T19:23:06-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1603&amp;p=13761#p13761</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1603&amp;p=13761#p13761"/>
<title type="html"><![CDATA[dd routines interface]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1603&amp;p=13761#p13761"><![CDATA[
<div class="quotetitle">byuu wrote:</div><div class="quotecontent"><br />Well, with DD and D3D, along with every video card made in the past eight years or so, they support automatic conversion of bit depths, so even if the user is running at 16bpp or 32bpp, you can blit a 16bpp buffer to the screen. Why does this matter? You <em>halve</em> the video data being transferred from the system RAM to the video card.<br /></div><br />But if one filter can take only 16-bit data and another filter can take only 32-bit data, then your PlayChoice PPU emulator[1] still needs to be able to generate pixels in more than one format.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Now if only god would create <em>good</em> c++ macros XD<br /></div><br />If you want Common Lisp, you know where to find it <img src="http://forums.nesdev.com/images/smilies/icon_wink.gif" alt=";-)" title="Wink" /><br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Something like :<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">macro opw_type1&#40;name, math&#41; &#123;<br />  void op_%&#123;name&#125;w&#40;&#41; &#123;<br />    rd.l = op_read&#40;&#41;;<br />    rd.h = op_read&#40;&#41;;<br />    regs.a.w %&#123;math&#125; rd.w;<br />    flags_%&#123;name&#125;_w&#40;&#41;;<br />  &#125;<br />&#125;</div><br /></div><br />I think you might be able to shoehorn that into the C++ template system.<br /><br />[1] A Famicom or NES generates a composite signal. A Famicom Titler generates an S-video signal, encoding the sum and difference of each pixel's high and low levels on separate wire pairs. Only a PlayChoice or Vs. system generates an RGB signal similar to that generated by the vast majority of PC based NES emulators.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Fri Jun 02, 2006 7:23 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[byuu]]></name></author>
<updated>2006-06-02T15:47:27-07:00</updated>
<published>2006-06-02T15:47:27-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1603&amp;p=13759#p13759</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1603&amp;p=13759#p13759"/>
<title type="html"><![CDATA[dd routines interface]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1603&amp;p=13759#p13759"><![CDATA[
Well, with DD and D3D, along with every video card made in the past eight years or so, they support automatic conversion of bit depths, so even if the user is running at 16bpp or 32bpp, you can blit a 16bpp buffer to the screen. Why does this matter? You <em>halve</em> the video data being transferred from the system RAM to the video card. Huge speedup, even with something as intensive as my emulator. That speedup would be even more significant for NES emulators.<br /><br />As far as (pitch - screen_width), if you're always using 16-bit pixels, just right shift that value by one when you first retrieve it, then you can add that halved value to your word pointer.<br /><br />Anyway, yeah. If you support 16 and 32bpp depths, no reason to remove the code that's there. Carry on ;)<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />As far as less lines = better -- that's why God created macros ;D<br /></div><br /><br />Now if only god would create <em>good</em> c++ macros XD<br /><br />Something like :<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">macro opw_type1&#40;name, math&#41; &#123;<br />  void op_%&#123;name&#125;w&#40;&#41; &#123;<br />    rd.l = op_read&#40;&#41;;<br />    rd.h = op_read&#40;&#41;;<br />    regs.a.w %&#123;math&#125; rd.w;<br />    flags_%&#123;name&#125;_w&#40;&#41;;<br />  &#125;<br />&#125;<br /><br />opw_type1&#40;lda, &quot;=&quot;&#41;;<br />opw_type1&#40;adc, &quot;+=&quot;&#41;;<br />opw_type1&#40;sbc, &quot;-=&quot;&#41;;</div><br /><br />Mmmmm.... being able to embed syntax and not requiring \ after every line.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=375">byuu</a> — Fri Jun 02, 2006 3:47 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Disch]]></name></author>
<updated>2006-06-02T13:29:51-07:00</updated>
<published>2006-06-02T13:29:51-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1603&amp;p=13756#p13756</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1603&amp;p=13756#p13756"/>
<title type="html"><![CDATA[dd routines interface]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1603&amp;p=13756#p13756"><![CDATA[
<div class="quotetitle">byuu wrote:</div><div class="quotecontent"><br />Why use a byte* if you always access video_out as a dword?<br /></div><br /><br />In my emu I do it for two reasons:<br /><br />1)  So I can have that 'vid_pitch_add' variable which is the number of bytes to add between scanlines.<br /><br />2)  So I can easily switch between 16 and 32 bit video modes with something like:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">video_out += bytes_per_pixel;</div><br /><br />where bytes_per_pixel can be 2 or 4 depending on the mode.<br /><br /><br />As far as less lines = better -- that's why God created macros ;D<br /><br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Or if you're going to be using both 16-bit <em>and</em> 32-bit rendering for god knows what reason<br /></div><br /><br />User configurability I guess is one reason -- although the main reason is because some graphics filters take an input format of a certain type.  2xSai or something I think only takes 16-bit  and Hq2x only takes 32-bit input -- or something like that... I might have them backwards.<br /><br />Plus I just like to avoid making my code having to assume that I'm always running under a certain bit depth.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=33">Disch</a> — Fri Jun 02, 2006 1:29 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[byuu]]></name></author>
<updated>2006-06-02T12:48:56-07:00</updated>
<published>2006-06-02T12:48:56-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1603&amp;p=13753#p13753</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1603&amp;p=13753#p13753"/>
<title type="html"><![CDATA[dd routines interface]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1603&amp;p=13753#p13753"><![CDATA[
You're just getting lucky that ignoring the pitch is working for you. The reason is because most video cards use the pitch to round textures (surfaces) up to powers of two, and 256 just happens to be 2^8. It's just a minor video card alignment optimization. Still, you should account for it anyway because it's good practice, and you just never know these days. 224 multiplications a second are the least of your problems in emulating an NES, anyway.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />*((DWORD*)video_out) = pixel;<br />video_out += 4;  // move pointer to point to next pixel<br /></div><br /><br />Why use a byte* if you always access video_out as a dword? Use :<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">DWORD *video_out;<br />  ...<br />  *video_out++ = pixel;</div><br /><br />Or if you're going to be using both 16-bit <em>and</em> 32-bit rendering for god knows what reason :<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">*&#40;DWORD*&#41;video_out++ = pixel;</div><br /><br />No speed hit / loss either way, but less lines == better :D<br /><br />By the way, you guys really integrate the emu with the host OS, hm? DirectDraw blitting code immediately below the NES palette lookup. That must make porting (even to a different Windows graphics API ala D3D/OGL) a real PITA :/<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />(I think it works, but pitch is always 0 for me, so I can't really test it)<br /></div><br /><br />Allocate a DDraw surface of 305x305 instead. It should still work if you did things right (and you properly set your source rect when blitting the surface to the backbuffer / screen).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=375">byuu</a> — Fri Jun 02, 2006 12:48 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[James]]></name></author>
<updated>2006-06-02T12:28:19-07:00</updated>
<published>2006-06-02T12:28:19-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1603&amp;p=13752#p13752</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1603&amp;p=13752#p13752"/>
<title type="html"><![CDATA[dd routines interface]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1603&amp;p=13752#p13752"><![CDATA[
Cool -- thanks for the link... that picture is worth a thousand words.  I did modify the code to account for this (I think it works, but pitch is always 0 for me, so I can't really test it).  I haven't looked at this code in a long time and it's kind of a mess.  Needs to account for different bit depths, etc.<br /><br />Anyway, I've been running Linux on my PC for a few months now and miss playing Mega Man <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" />  I started porting nemulator a couple of days ago and am using SDL, so I guess I'll be addressing these issues soon.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=88">James</a> — Fri Jun 02, 2006 12:28 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Disch]]></name></author>
<updated>2006-06-02T12:21:47-07:00</updated>
<published>2006-06-02T12:21:47-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1603&amp;p=13751#p13751</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1603&amp;p=13751#p13751"/>
<title type="html"><![CDATA[dd routines interface]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1603&amp;p=13751#p13751"><![CDATA[
Yeah you have the same problem.  You're just assuming that scanlines are tightly packed within the surface -- which often times they're not (Though I guess it can be relatively common with surfaces that are a power-of-2 width -- either way that behavior should definately not be relied on).<br /><br /><a href="http://msdn.microsoft.com/archive/default.asp?url=/archive/en-us/dnardirdraw/html/msdn_directd5.asp" class="postlink">Check this page</a> -- this was the best link I could find on MSDN since DDraw isn't really supported any more.  about 80% down the page there's a brief section titled "Width vs. pitch" which gives the general idea.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=33">Disch</a> — Fri Jun 02, 2006 12:21 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[James]]></name></author>
<updated>2006-06-02T12:29:24-07:00</updated>
<published>2006-06-02T10:37:30-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1603&amp;p=13748#p13748</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1603&amp;p=13748#p13748"/>
<title type="html"><![CDATA[dd routines interface]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1603&amp;p=13748#p13748"><![CDATA[
You can obtain a pointer to the DirectDraw surface that is linear no matter what video mode you're in.  You still have to adjust for pitch, however.  Check out how I do it in my emulator (look at the DrawFrame function): <a href="http://nemulator.com/websvn/filedetails.php?repname=nemulator&amp;path=%2Fnemulator%2FGraphics.cpp&amp;rev=0&amp;sc=0" class="postlink">http://nemulator.com/websvn/filedetails.php?repname=nemulator&amp;path=%2Fnemulator%2FGraphics.cpp&amp;rev=0&amp;sc=0</a><br /><br />Basically, the PPU writes palette values into a 256x240 buffer.  When it's time to draw, I iterate over the buffer and surface pointer writing the correct color values to the surface.  When I reach the end of the line, I increment the surface pointer to adjust for pitch.<br /><br />edit: I wasn't accounting for surface pitch and modified the code.  Thanks, Disch, for the pitch explaination.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=88">James</a> — Fri Jun 02, 2006 10:37 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Disch]]></name></author>
<updated>2006-06-02T08:24:41-07:00</updated>
<published>2006-06-02T08:24:41-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1603&amp;p=13743#p13743</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1603&amp;p=13743#p13743"/>
<title type="html"><![CDATA[dd routines interface]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1603&amp;p=13743#p13743"><![CDATA[
Your code is flawed in that you assume the pitch of the surface to be even with the width -- which is often not the case.<br /><br />For plotting individual pixels like that, multiplication is UNAVOIDABLE.  However individual pixels plotting (and thus, multiplication) can be avoided.  Note to plot a pixel, the correct way to do it is:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">void* out = &#40;&#40;BYTE*&#41;surface_pointer&#41; + &#40;Y * surface_pitch&#41; + &#40;X * bytes_per_pixel&#41;;<br /><br />*&#40;&#40;DWORD*&#41;out&#41; = pixel;  // assuming 32-bit<br /></div><br /><br />Note that the surface width is used <em>nowhere</em> in the calculations.  You MUST use the pitch to determine where each scanline starts.  There's no way around it.  Failure to do so will cause terrible effects for many people -- if it's working now, it's just a coincidence.<br /><br /><br />Anyway -- for something like an NES emulator where the entire surface can be written to in "like-a-book" type fashion -- you don't need this kind of pixel plotting, you can just adjust the surface pointer as you render pixels (as augnober suggested in his post):<br /><br />vars to keep:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">BYTE* video_out;   // output pointer<br />int  vid_pitch_add;  // number of bytes of padding between end of one scanline and start of the next<br /></div><br /><br />When frame starts (assumes you will always render 256 pixels for every scanline):<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">video_out = ddraw_surface_pointer;<br />vid_pitch_add = surface_pitch - &#40;256 * bytes_per_pixel&#41;;<br /></div><br /><br />When you render a pixel (assuming 32-bit):<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">*&#40;&#40;DWORD*&#41;video_out&#41; = pixel;<br />video_out += 4;  // move pointer to point to next pixel<br /></div><br /><br />At the end of a scanline:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">video_out += vid_pitch_add;  // skip over padding to start of next scanline<br /></div><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=33">Disch</a> — Fri Jun 02, 2006 8:24 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[augnober]]></name></author>
<updated>2006-06-02T03:07:33-07:00</updated>
<published>2006-06-02T03:07:33-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1603&amp;p=13739#p13739</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1603&amp;p=13739#p13739"/>
<title type="html"><![CDATA[Re: dd routines interface]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1603&amp;p=13739#p13739"><![CDATA[
This response isn't specific to emulation, since I haven't written an emulator.  Anyway.. A putpixel routine is a nice thing to have if you're learning graphics programming and you want to play around with it.. but it's basically never efficient in practice.  When you've got to redraw the whole surface using elements as small as pixels, it's generally better to begin at a known location (usually the beginning -- 0) and step forward as you write through the whole surface.  You're going to write every pixel anyway.  View the surface as a 1-dimensional memory buffer, and write numbers into the current location as you step to get the colors you want.  When it gets to the end of the row, the next address begins on the next row.. so the vertical step occurs naturally.  Sometimes this can even allow you to gain extra efficiency by writing more than one pixel in a single write.  So.. Do it this way, and you don't need to keep recalculating your position from x and y.<br /><br />Sometimes your position is implicit in the way you write the routine.. or sometimes you have a variable for the pointer to the current memory address.. or sometimes it's a combination of each.  Whatever you do, avoid unnecessary calculations.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=278">augnober</a> — Fri Jun 02, 2006 3:07 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Anes]]></name></author>
<updated>2006-06-02T02:24:42-07:00</updated>
<published>2006-06-02T02:24:42-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1603&amp;p=13737#p13737</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1603&amp;p=13737#p13737"/>
<title type="html"><![CDATA[dd routines interface]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1603&amp;p=13737#p13737"><![CDATA[
i just want to know if there are better methods to implement ddraw interface to the emu. I have a secondary buffer on on board graphics card mem (of course). i mean having it in PC memory is a pain in the performance.<br />Im using 32 bit per pixel and i have a func like : DDPutPixel(DWORD x, DWORD y, DWORD Color)<br /><br />What im currently doing is:<br /><br />1- Lock the surface<br />3 - I put the pixels while NES is rendering pixels (sl 0 - 239)<br />4 - Then i unlock and blt the surface to the primary -&gt; go back to 1<br /><br />One thing to mention is that as screen witdh in NES is 256 this "DDPutPixel()" makes a:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">DDPutPixel&#40;DWORD x, DOWRD y, DWORD Color&#41;<br />&#123;<br /><br />     *&#40;&#40;LPDWORD&#41;lpSurfacePtr + &#40;Y &lt;&lt; 8&#41; + X&#41; = Color;<br /><br />&#125;<br /></div><br /><br />In other words: &lt;&lt; 8 to avoid multiplication. That's the only thing i can optimize  <img src="http://forums.nesdev.com/images/smilies/icon_sad.gif" alt=":(" title="Sad" /> .<br /><br />Anyone having a ddraw implementation different from that?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=72">Anes</a> — Fri Jun 02, 2006 2:24 am</p><hr />
]]></content>
</entry>
</feed>