<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" dir="ltr" lang="en-gb" xml:lang="en-gb">
<head>

<link rel="icon" href="/favicon.ico" type="image/x-icon" />
<link rel="shortcut icon" href="/favicon.ico" type="image/x-icon" />
<meta http-equiv="content-type" content="text/html; charset=UTF-8" />
<meta http-equiv="content-language" content="en-gb" />
<meta http-equiv="content-style-type" content="text/css" />
<meta http-equiv="imagetoolbar" content="no" />
<meta name="resource-type" content="document" />
<meta name="distribution" content="global" />
<meta name="keywords" content="" />
<meta name="description" content="" />

<title>nesdev.com &bull; View topic - the Power Glove</title>

<link rel="alternate" type="application/atom+xml" title="Feed - nesdev.com" href="http://forums.nesdev.com/feed.php" /><link rel="alternate" type="application/atom+xml" title="Feed - News" href="http://forums.nesdev.com/feed.php?mode=news" /><link rel="alternate" type="application/atom+xml" title="Feed - All forums" href="http://forums.nesdev.com/feed.php?mode=forums" /><link rel="alternate" type="application/atom+xml" title="Feed - New Topics" href="http://forums.nesdev.com/feed.php?mode=topics" /><link rel="alternate" type="application/atom+xml" title="Feed - Active Topics" href="http://forums.nesdev.com/feed.php?mode=topics_active" /><link rel="alternate" type="application/atom+xml" title="Feed - Forum - NESdev" href="http://forums.nesdev.com/feed.php?f=2" /><link rel="alternate" type="application/atom+xml" title="Feed - Topic - the Power Glove" href="http://forums.nesdev.com/feed.php?f=2&amp;t=5854" />

<link rel="stylesheet" href="./style.php?id=1&amp;lang=en" type="text/css" />

<script type="text/javascript">
// <![CDATA[


function popup(url, width, height, name)
{
	if (!name)
	{
		name = '_popup';
	}

	window.open(url.replace(/&amp;/g, '&'), name, 'height=' + height + ',resizable=yes,scrollbars=yes,width=' + width);
	return false;
}

function jumpto()
{
	var page = prompt('Enter the page number you wish to go to:', '3');
	var per_page = '15';
	var base_url = './viewtopic.php?f=2&amp;t=5854';

	if (page !== null && !isNaN(page) && page == Math.floor(page) && page > 0)
	{
		if (base_url.indexOf('?') == -1)
		{
			document.location.href = base_url + '?start=' + ((page - 1) * per_page);
		}
		else
		{
			document.location.href = base_url.replace(/&amp;/g, '&') + '&start=' + ((page - 1) * per_page);
		}
	}
}

/**
* Find a member
*/
function find_username(url)
{
	popup(url, 760, 570, '_usersearch');
	return false;
}

/**
* Mark/unmark checklist
* id = ID of parent container, name = name prefix, state = state [true/false]
*/
function marklist(id, name, state)
{
	var parent = document.getElementById(id);
	if (!parent)
	{
		eval('parent = document.' + id);
	}

	if (!parent)
	{
		return;
	}

	var rb = parent.getElementsByTagName('input');
	
	for (var r = 0; r < rb.length; r++)
	{
		if (rb[r].name.substr(0, name.length) == name)
		{
			rb[r].checked = state;
		}
	}
}



// ]]>
</script>
</head>
<body class="ltr">

<a name="top"></a>

<div id="wrapheader">

	<div id="logodesc">
	</div>

	<div id="menubar">

		<table width="100%" cellspacing="0">
		<tr>
			<td rowspan="2"><a href="./index.php"><img src="./styles/subsilver2/imageset/site_logo.gif" alt="" title="" /></a></td>
			<td width="100%" align="center"><h1>nesdev.com</h1><span class="gen">NES Development and Strangulation Records message boards</span></td>
		</tr>
		<tr>
			<td align="center">
				<a href="./faq.php"><img src="./styles/prosilver/theme/images/icon_mini_faq.gif" width="12" height="13" alt="*" /> FAQ</a>
				&nbsp; &nbsp;<a href="./search.php"><img src="./styles/prosilver/theme/images/icon_mini_search.gif" width="12" height="13" alt="*" /> Search</a>
				<br />	
				 &nbsp;<a href="./ucp.php?mode=register"><img src="./styles/prosilver/theme/images/icon_mini_register.gif" width="12" height="13" alt="*" /> Register</a>
					&nbsp; &nbsp;<a href="./ucp.php?mode=login"><img src="./styles/prosilver/theme/images/icon_mini_login.gif" width="12" height="13" alt="*" /> Login</a>&nbsp;
			</td>
		</tr>
		</table>
	</div>

	<div id="datebar">
		<table width="100%" cellspacing="0">
		<tr>
			<td class="gensmall"></td>
			<td class="gensmall" align="right">It is currently Thu Aug 30, 2012 7:58 am<br /></td>
		</tr>
		</table>
	</div>

</div>

<div id="wrapcentre">

	
	<p class="searchbar">
		<span style="float: left;"><a href="./search.php?search_id=unanswered">View unanswered posts</a> | <a href="./search.php?search_id=active_topics">View active topics</a></span>
		
	</p>
	

	<br style="clear: both;" />

	<table class="tablebg" width="100%" cellspacing="1" cellpadding="0" style="margin-top: 5px;">
	<tr>
		<td class="row1">
			<p class="breadcrumbs"><a href="./index.php">Board index</a> &#187; <a href="./viewforum.php?f=24">NES / Famicom</a> &#187; <a href="./viewforum.php?f=2">NESdev</a></p>
			<p class="datetime">All times are UTC - 7 hours </p>
		</td>
	</tr>
	</table>

	<br />

<div id="pageheader">
	<h2><a class="titles" href="./viewtopic.php?f=2&amp;t=5854&amp;start=30">the Power Glove</a></h2>


	<p class="moderators">Moderator: <a href="./memberlist.php?mode=group&amp;g=320">Moderators</a></p>

</div>

<br clear="all" /><br />

<div id="pagecontent">

	<table width="100%" cellspacing="1">
	<tr>
		<td align="left" valign="middle" nowrap="nowrap">
		<a href="./posting.php?mode=post&amp;f=2"><img src="./styles/subsilver2/imageset/en/button_topic_new.gif" alt="Post new topic" title="Post new topic" /></a>&nbsp;<a href="./posting.php?mode=reply&amp;f=2&amp;t=5854"><img src="./styles/subsilver2/imageset/en/button_topic_reply.gif" alt="Reply to topic" title="Reply to topic" /></a>
		</td>
		
			<td class="nav" valign="middle" nowrap="nowrap">&nbsp;Page <strong>3</strong> of <strong>4</strong><br /></td>
			<td class="gensmall" nowrap="nowrap">&nbsp;[ 52 posts ]&nbsp;</td>
			<td class="gensmall" width="100%" align="right" nowrap="nowrap"><b><a href="#" onclick="jumpto(); return false;" title="Click to jump to pageâ€¦">Go to page</a> <a href="./viewtopic.php?f=2&amp;t=5854&amp;start=15">Previous</a>&nbsp;&nbsp;<a href="./viewtopic.php?f=2&amp;t=5854">1</a><span class="page-sep">, </span><a href="./viewtopic.php?f=2&amp;t=5854&amp;start=15">2</a><span class="page-sep">, </span><strong>3</strong><span class="page-sep">, </span><a href="./viewtopic.php?f=2&amp;t=5854&amp;start=45">4</a> &nbsp;<a href="./viewtopic.php?f=2&amp;t=5854&amp;start=45">Next</a></b></td>
		
	</tr>
	</table>

	<table class="tablebg" width="100%" cellspacing="1">
	<tr>
		<td class="cat">
			<table width="100%" cellspacing="0">
			<tr>
				<td class="nav" nowrap="nowrap">&nbsp;
				<a href="./viewtopic.php?f=2&amp;t=5854&amp;start=30&amp;view=print" title="Print view">Print view</a>
				</td>
				<td class="nav" align="right" nowrap="nowrap"><a href="./viewtopic.php?f=2&amp;t=5854&amp;view=previous">Previous topic</a> | <a href="./viewtopic.php?f=2&amp;t=5854&amp;view=next">Next topic</a>&nbsp;</td>
			</tr>
			</table>
		</td>
	</tr>

	</table>


	<table class="tablebg" width="100%" cellspacing="1">
	
		<tr>
			<th>Author</th>
			<th>Message</th>
		</tr>
	<tr class="row1">

			<td align="center" valign="middle">
				<a name="p94371"></a>
				<b class="postauthor">nocash</b>
			</td>
			<td width="100%" height="25">
				<table width="100%" cellspacing="0">
				<tr>
				
					<td class="gensmall" width="100%"><div style="float: left;">&nbsp;<b>Post subject:</b> <a href="#p94371"></a></div><div style="float: right;"><a href="./viewtopic.php?p=94371#p94371"><img src="./styles/subsilver2/imageset/icon_post_target.gif" width="12" height="9" alt="Post" title="Post" /></a><b>Posted:</b> Wed May 23, 2012 5:59 pm&nbsp;</div></td>
				</tr>
				</table>
			</td>
		</tr>

		<tr class="row1">

			<td valign="top" class="profile">
				<table cellspacing="4" align="center" width="150">
			
				<tr>
					<td><img src="./styles/subsilver2/imageset/en/icon_user_offline.gif" alt="Offline" title="Offline" /></td>
				</tr>
			
				</table>

				<span class="postdetails">
					<br /><b>Joined:</b> Fri Feb 24, 2012 12:09 pm<br /><b>Posts:</b> 72
				</span>

			</td>
			<td valign="top">
				<table width="100%" cellspacing="5">
				<tr>
					<td>
					

						<div class="postbody">Good work &amp; very interesting! But... you haven't examined the existing power glove games yet? When looking at how they are accessing the glove, some details can be figured out easily - and some things are getting ways more complicated.
<br />
<br /><strong>---- TRANSMIT (INIT/CONFIG) ----</strong>
<br />
<br />Transmission is started by outputting a long high level.
<br />
<br />The chart at <!-- m --><a class="postlink" href="http://i49.tinypic.com/ff1hd0.jpg">http://i49.tinypic.com/ff1hd0.jpg</a><!-- m --> does have it preceeded by a short high-level &amp; four clk pulses - I can't see the existing games doing that, so I think that that part is total nonsense... Can you try accessing the glove with that part removed?
<br />
<br />After that long high level, the first transferred byte indicates the number of following bytes. In your example, that would be 06h, and then followed by 6 other bytes. But in other packets, the length value can (at least) range from 05h to 32h.
<br />
<br />In Super Glove Ball, the packet transfer function is at DC94h, with incoming packet number (00h or 01h) in lower 7bit of A register. The corresponding packets defined in ROM are:
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">super_glove_ball_tx_packet_00h:<br />&nbsp;db&nbsp; &nbsp;06,C1,08,00,02,FF,01<br />super_glove_ball_tx_packet_01h:<br />&nbsp;db&nbsp; &nbsp;2E,49,01,38,01,3C,01,A1,01,7D,20,08,10,0C,01,83<br />&nbsp;db&nbsp; &nbsp;01,07,01,3E,1A,19,81,82,70,23,84,14,83,70,27,58<br />&nbsp;db&nbsp; &nbsp;98,28,82,70,81,70,21,81,12,82,15,A7,16,88,87<br /></div><br />Normally, the game seems to be using packet 00h only. I haven't spotted a place where it sends packet 01h, maybe it doesn't ever use it at all.<br /><br />In Bad Street Brawler, the transfer function is at E696h, with packet number (00h..0Ch) in X register. The corresponding packets defined in ROM are:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">brawler_tx_packet_00h:<br />&nbsp;db&nbsp; &nbsp;2D,49,01,38,01,3C,01,A1,01,7D,20,08,08,0C,02,83<br />&nbsp;db&nbsp; &nbsp;02,07,01,3E,19,19,81,82,73,23,84,14,83,77,27,58<br />&nbsp;db&nbsp; &nbsp;98,28,82,C1,76,21,81,12,82,15,A7,16,88,87<br />brawler_tx_packet_01h:<br />&nbsp;db&nbsp; &nbsp;13,64,48,0E,50,08,44,0C,20,0C,09,11,84,72,22,82<br />&nbsp;db&nbsp; &nbsp;13,81,14,83<br />brawler_tx_packet_02h:<br />&nbsp;db&nbsp; &nbsp;19,64,10,0C,20,0C,02,94,41,3A,0F,14,B0,13,87,10<br />&nbsp;db&nbsp; &nbsp;21,52,88,84,60,70,21,88,12,84<br />brawler_tx_packet_03h:<br />&nbsp;db&nbsp; &nbsp;25,67,60,0C,01,28,01,2C,1D,18,00,00,08,0C,10,0C<br />&nbsp;db&nbsp; &nbsp;15,11,2E,82,C1,72,22,44,91,2E,89,FE,33,45,92,2E<br />&nbsp;db&nbsp; &nbsp;BE,66,16,98,17,A7<br />brawler_tx_packet_04h:<br />&nbsp;db&nbsp; &nbsp;12,64,02,B7,02,71,10,03,41,3A,08,11,82,12,81,13<br />&nbsp;db&nbsp; &nbsp;A7,14,88<br />brawler_tx_packet_05h:<br />&nbsp;db&nbsp; &nbsp;23,67,01,34,01,30,01,31,01,35,20,0C,10,0C,44,0C<br />&nbsp;db&nbsp; &nbsp;13,15,98,16,A7,11,52,53,54,21,81,12,82,13,83,14<br />&nbsp;db&nbsp; &nbsp;84,67,77,80<br />brawler_tx_packet_06h:<br />&nbsp;db&nbsp; &nbsp;32,69,04,0C,01,28,01,2C,1D,18,00,00,01,41,01,45<br />&nbsp;db&nbsp; &nbsp;20,0C,42,84,98,B0,19,87,16,84,17,83,11,20,88,2F<br />&nbsp;db&nbsp; &nbsp;82,C1,BF,62,70,22,44,81,33,45,82,18,98,00,00,00<br />&nbsp;db&nbsp; &nbsp;00,57,57<br />brawler_tx_packet_07h:<br />&nbsp;db&nbsp; &nbsp;14,65,01,B1,01,B5,01,B4,01,B0,50,0C,08,15,84,8B<br />&nbsp;db&nbsp; &nbsp;11,52,54,53,88<br />brawler_tx_packet_08h:<br />&nbsp;db&nbsp; &nbsp;21,68,10,0E,02,60,02,48,01,80,01,84,01,26,01,22<br />&nbsp;db&nbsp; &nbsp;64,18,0F,18,70,24,81,15,82,16,84,17,83,11,23,97<br />&nbsp;db&nbsp; &nbsp;12,98<br />brawler_tx_packet_09h:<br />&nbsp;db&nbsp; &nbsp;23,67,01,34,01,30,01,31,01,35,20,0C,10,0C,44,0C<br />&nbsp;db&nbsp; &nbsp;13,15,98,16,A7,11,52,53,54,21,82,12,81,13,84,14<br />&nbsp;db&nbsp; &nbsp;83,67,77,80<br />brawler_tx_packet_0Ah:<br />&nbsp;db&nbsp; &nbsp;1A,66,01,26,10,0C,01,25,20,0C,02,71,02,06,0C,11<br />&nbsp;db&nbsp; &nbsp;87,12,84,13,83,14,88,15,81,16,82<br />brawler_tx_packet_0Bh:<br />&nbsp;db&nbsp; &nbsp;16,65,20,0C,10,0C,08,0E,04,0C,01,1E,0A,11,93,12<br />&nbsp;db&nbsp; &nbsp;92,13,94,14,91,15,88<br />brawler_tx_packet_0Ch:<br />&nbsp;db&nbsp; &nbsp;05,41,20,0F,01,89<br /></div><br />When played via joypad, the game supports two actions via joypad A and B buttons per level. Something like PUNCH and KICK in one level, and whatever... SEX and ROCK'n'ROLL in another level.<br />So, one guess: maybe the above packets are defining different gestures for that actions.<br />EDIT: After reading the power glove manual:<br />The glove BIOS has 14 built-in "programs", numbered 1-14 (for games like Bubble Bobble and Castlevania). The Bad Street Bawler game cartridge has 9 extra "programs",  named A-I (for games like Gyruss and Gunsmoke). So, nine of the above 13 packets are apparently used for that purpose.<br /><br /><strong>---- RECEIVE ----<br /></strong><br />I haven't discovered a "read packet" procedure in Bad Street Brawler yet. It does have a read-byte function at D836h, and it's calling that function in several places. But it's hard to tell if those calls are intended to read glove data or joypad data.<br />If the game is actually using "gestures handled inside of the glove" then it might simply receive data in form of "gesture flags" (rather than receiving lower-level position and rotation info).<br /><br />Super Glove Ball is having a very straight read packet function at DCDCh, works like so:<br /><br />Read 1 byte from glove in EVERY frame. This bytes indicates if the glove is ready to send data. 5Fh (or A0h, if you've XORed it by FFh) indicates ready. If so, the function reads 9 further bytes.<br /><br />The details about variable conversion time are interesting (and good to know about them!), but with that "ready" byte, one fortunately doesn't need to care about them too much in practice.<br /><br />Counting the ready-byte plus following 9 data bytes... then... one would read 10 bytes in total. Well. Obviously.<br />So far, I've no idea where that "12 byte" idea came from. No, stop! I got it. Look at the <!-- m --><a class="postlink" href="http://i49.tinypic.com/ff1hd0.jpg">http://i49.tinypic.com/ff1hd0.jpg</a><!-- m --> chart:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">The headline says 12 bytes, for now, trust that.<br />The actual diagram shows only 10 bytes, that's a bug.<br />To fix that: Assume two extra bytes after &quot;byte 8&quot;.<br /></div>Now you have 10 continous bytes. Plus, two final bytes (both preceeded by a long delays) - that are the "not-ready" bytes for the NEXT packet.<br /><br />So, actually, the 2 ending FFh bytes in 12-byte packets aren't part of that packets, they are only 10-byte long.<br /><br />And the ready and not-ready values are...<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; 5Fh&nbsp; &nbsp;&#40;or A0h, when XORed by FFh&#41; --&gt; ready<br />&nbsp; 00h?&nbsp; &#40;or FFh?, when XORed by FFh&#41; --&gt; not ready<br /></div>Is that correct? Or is it vice-versa for "not ready"? 
<br />Ie. FFh (or 00h, when XORed)?
<br />
<br /><strong>---- GENERAL STUFF/QUESTIONS ----<br /></strong>
<br />Now, are there 3 or 4 flex sensors? Does somebody else have a glove, and could run the ROM-image from LoneKiltedNinja's test program on a NES?
<br />That way it should be very easy to see if the thing does react to flexing a fourth finger, or if it doesn't.
<br />
<br />Did somebody ever disassemble the glove hardware? I haven't found any schematics, nor photos of the various PCBs anywhere.
<br />Well, except for a few pics of modded gloves... but they aren't showing the complete PCBs, and for the visible parts... it's hard to say how the PCB originally looked like before modding.
<br />Photos &amp; component list would be interesting. The BIOS is probably contained in some on-chip ROM in the CPU. But you never now, maybe it's on a separate EPROM with a "dump-me" sticker on top of it.
<br />
<br />From your readme.rtf at <!-- m --><a class="postlink" href="http://www.psychsoftware.org/portfolio/software.html#Other">http://www.psychsoftware.org/portfolio/ ... html#Other</a><!-- m --> :
<br />&gt;   rotation (clock-hour position minus 1; 0-11)
<br />Ah, but elsewhere you've said that 0 is up? With the "minus one", 0 would mean turned by 30 degrees? Is that correct? Or did you mean something like "modulo 12" instead of "minus 1"?
<br />
<br />And, it isn't clear to me where the rotation occurs - around which axis?
<br />Probably difficult to get that clearly described... by assigning a a X,Y,Z coordinate system to the hand... or, probably better: to the TV-set. 
<br />
<br />For the power glove's rotation part... wikipedia is linking to a page that shows yaw, pitch, and roll of an airplane as an example. But, I am almost sure that only the speakers &amp; microphones are involved... not airplanes!
<br />
<br />NB. where exactly are those 2 speakers located in the glove?</div>

					
							<br /><br />
							<span class="gensmall">Last edited by <a href="./memberlist.php?mode=viewprofile&amp;u=5211">nocash</a> on Thu May 24, 2012 12:01 pm, edited 1 time in total.</span>
						<br clear="all" /><br />

						<table width="100%" cellspacing="0">
						<tr valign="middle">
							<td class="gensmall" align="right">
							
							</td>
						</tr>
						</table>
					</td>
				</tr>
				</table>
			</td>
		</tr>

		<tr class="row1">

			<td class="profile"><strong><a href="#wrapheader">Top</a></strong></td>
			<td><div class="gensmall" style="float: left;">&nbsp;<a href="./memberlist.php?mode=viewprofile&amp;u=5211"><img src="./styles/subsilver2/imageset/en/icon_user_profile.gif" alt="Profile" title="Profile" /></a> &nbsp;</div> <div class="gensmall" style="float: right;">&nbsp;</div></td>
	
		</tr>

	<tr>
		<td class="spacer" colspan="2" height="1"><img src="images/spacer.gif" alt="" width="1" height="1" /></td>
	</tr>
	</table>

	<table class="tablebg" width="100%" cellspacing="1">
	<tr class="row2">

			<td align="center" valign="middle">
				<a name="p94411"></a>
				<b class="postauthor">nocash</b>
			</td>
			<td width="100%" height="25">
				<table width="100%" cellspacing="0">
				<tr>
				
					<td class="gensmall" width="100%"><div style="float: left;">&nbsp;<b>Post subject:</b> <a href="#p94411"></a></div><div style="float: right;"><a href="./viewtopic.php?p=94411#p94411"><img src="./styles/subsilver2/imageset/icon_post_target.gif" width="12" height="9" alt="Post" title="Post" /></a><b>Posted:</b> Thu May 24, 2012 8:26 am&nbsp;</div></td>
				</tr>
				</table>
			</td>
		</tr>

		<tr class="row2">

			<td valign="top" class="profile">
				<table cellspacing="4" align="center" width="150">
			
				<tr>
					<td><img src="./styles/subsilver2/imageset/en/icon_user_offline.gif" alt="Offline" title="Offline" /></td>
				</tr>
			
				</table>

				<span class="postdetails">
					<br /><b>Joined:</b> Fri Feb 24, 2012 12:09 pm<br /><b>Posts:</b> 72
				</span>

			</td>
			<td valign="top">
				<table width="100%" cellspacing="5">
				<tr>
					<td>
					

						<div class="postbody">Found a good description of the rotation here: <!-- m --><a class="postlink" href="http://mellottsvrpage.com/glove.htm">http://mellottsvrpage.com/glove.htm</a><!-- m --> - it's "roll" and requires the glove speakers to be aimed at the microphones. Or, in other words, the airplane flying towards the TV-Set.
<br />The page also states what happens if you turn your hand into other directions: The speakers are no longer aimed at the microphones, and so, the thing can't sense the position.
<br />
<br />And, I've found a few photos here <!-- m --><a class="postlink" href="http://www.instructables.com/id/Power-Glove-20th-Anniversary-Edition/">http://www.instructables.com/id/Power-G ... y-Edition/</a><!-- m --> it's a bit hard to get through that page... as far as I understood, the guy is telling that he had a "B" in maths, and he's explaining how to create custom cables (cut them at desired length!), anyways, back to the pictures:
<br />
<br />PCB at the front of the glove (on the hand): <!-- m --><a class="postlink" href="http://www.instructables.com/files/deriv/FOZ/BKA3/FT17YOV5/FOZBKA3FT17YOV5.LARGE.jpg">http://www.instructables.com/files/deri ... .LARGE.jpg</a><!-- m --> (component side), and <!-- m --><a class="postlink" href="http://www.instructables.com/files/deriv/F2S/ZDBG/FT17VT0N/F2SZDBGFT17VT0N.LARGE.jpg">http://www.instructables.com/files/deri ... .LARGE.jpg</a><!-- m --> (solder side). The two speakers seem to be the round black things above index finder and little finger. And, there seems to be a third speaker glued to the middle of the casing; I guess that's where the "beep" sounds are coming from.
<br />
<br />PCB for the button part (on the arm): <!-- m --><a class="postlink" href="http://www.instructables.com/files/deriv/FWB/0JZC/FT1816N4/FWB0JZCFT1816N4.LARGE.jpg">http://www.instructables.com/files/deri ... .LARGE.jpg</a><!-- m --> (showing a fragment of the solder side only). Not much seen there, judging from the solder pads, it doesn't look as if there's a CPU on the component side (unless it'd be a SMD chip). So far, I'd guess that the CPU is located in that mysterious "junction box" (the small box that most photographers never mind taking pictures of when they are posing with their glove).
<br />
<br />For the button byte, Super Glove Ball checks for at least five values: 0Ah, 0Ch, 82h, 83h should be as you've described them. And, FFh - is that the value showing up when no button is pressed?
<br />
<br />Oh, and here's a typed-up copy of the glove manual: <!-- m --><a class="postlink" href="http://home.hiwaay.net/~lkseitz/cvg/power_glove.shtml">http://home.hiwaay.net/~lkseitz/cvg/power_glove.shtml</a><!-- m --> - it's mentioning the "middle finger" and "last 3 fingers" - if that's correct, then there should be at least one more flex sensor beyond the middle finger.
<br />Maybe your's is actually broken, or one needs to enable via special bytes/bits in init command. Or, you could key-in that "PROGRAM 12", and check if and how the output differs for "middle" and "last 3".</div>

					<br clear="all" /><br />

						<table width="100%" cellspacing="0">
						<tr valign="middle">
							<td class="gensmall" align="right">
							
							</td>
						</tr>
						</table>
					</td>
				</tr>
				</table>
			</td>
		</tr>

		<tr class="row2">

			<td class="profile"><strong><a href="#wrapheader">Top</a></strong></td>
			<td><div class="gensmall" style="float: left;">&nbsp;<a href="./memberlist.php?mode=viewprofile&amp;u=5211"><img src="./styles/subsilver2/imageset/en/icon_user_profile.gif" alt="Profile" title="Profile" /></a> &nbsp;</div> <div class="gensmall" style="float: right;">&nbsp;</div></td>
	
		</tr>

	<tr>
		<td class="spacer" colspan="2" height="1"><img src="images/spacer.gif" alt="" width="1" height="1" /></td>
	</tr>
	</table>

	<table class="tablebg" width="100%" cellspacing="1">
	<tr class="row1">

			<td align="center" valign="middle">
				<a name="p94454"></a>
				<b class="postauthor">LoneKiltedNinja</b>
			</td>
			<td width="100%" height="25">
				<table width="100%" cellspacing="0">
				<tr>
				
					<td class="gensmall" width="100%"><div style="float: left;">&nbsp;<b>Post subject:</b> <a href="#p94454"></a></div><div style="float: right;"><a href="./viewtopic.php?p=94454#p94454"><img src="./styles/subsilver2/imageset/icon_post_target.gif" width="12" height="9" alt="Post" title="Post" /></a><b>Posted:</b> Thu May 24, 2012 5:07 pm&nbsp;</div></td>
				</tr>
				</table>
			</td>
		</tr>

		<tr class="row1">

			<td valign="top" class="profile">
				<table cellspacing="4" align="center" width="150">
			
				<tr>
					<td><img src="./styles/subsilver2/imageset/en/icon_user_offline.gif" alt="Offline" title="Offline" /></td>
				</tr>
			
				</table>

				<span class="postdetails">
					<br /><b>Joined:</b> Mon Jul 07, 2008 7:40 pm<br /><b>Posts:</b> 40
				</span>

			</td>
			<td valign="top">
				<table width="100%" cellspacing="5">
				<tr>
					<td>
					

						<div class="postbody">You're covering a lot of ground here, nocash, and I'm having a bit of trouble figuring out what is empirical and what is guesswork.
<br />
<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">The chart at <!-- m --><a class="postlink" href="http://i49.tinypic.com/ff1hd0.jpg">http://i49.tinypic.com/ff1hd0.jpg</a><!-- m --> does have it preceeded by a short high-level &amp; four clk pulses - I can't see the existing games doing that, so I think that that part is total nonsense... Can you try accessing the glove with that part removed?<br /><br />After that long high level, the first transferred byte indicates the number of following bytes. In your example, that would be 06h, and then followed by 6 other bytes. But in other packets, the length value can (at least) range from 05h to 32h. </div><br /><br />The initial four-bit read at startup is definitively not necessary given that I can re-flash the glove from any arbitrary point at runtime.  I initially supposed that the glove might return something unique-ish to disambiguate itself from other controllers in those 4 reads, but I see no evidence to support that in my testing.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">After that long high level, the first transferred byte indicates the number of following bytes. In your example, that would be 06h, and then followed by 6 other bytes. But in other packets, the length value can (at least) range from 05h to 32h. </div><br />My best conjecture based on testing was that it was the number of following bytes in the init message, but given that I was able to fudge it up and down and not completely break functionality, I couldn't pin this down for certain.  The additional messages you put forward do certainly lend weight to this argument, though.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Normally, the game seems to be using packet 00h only. I haven't spotted a place where it sends packet 01h, maybe it doesn't ever use it at all. <br /><em>etc.</em></div><br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">EDIT: After reading the power glove manual:<br />The glove BIOS has 14 built-in "programs", numbered 1-14 (for games like Bubble Bobble and Castlevania). The Bad Street Bawler game cartridge has 9 extra "programs", named A-I (for games like Gyruss and Gunsmoke). So, nine of the above 13 packets are apparently used for that purpose. </div><br />If you want to explore the preprogrammed modes, go right ahead.  I've been mainly focusing on the "high-res" mode that lets you get at the "raw" sensor data.  But I agree- there's probably some init functionality that lets a game blink the glove into a joypad-emulation mode of choice, or perhaps even define its own mode.  In this case, I'd expect the game to send some packet like the ones you listed, then poll only the first byte of data every frame, as you seem to have observed if I'm reading you right.  In this case, the glove would likely be sending back generic joypad 8-bit button data where each bit was mapped to some detectable parameter.<br />As a starting point, the first byte of the init message being the message length as already established, the second byte seems to be, with surprising frequency, $49,  or in the $64 - $69 range.  I'm not going to put those into binary right away, but I'd suggest that as a starting point  for further analysis.  Also at a glance, the fact that the start of so many programs has $01 as every other value smacks of significance.  A break byte between individual button function-descriptors?<br /><br />The Brawler tx packet 0C has caught my attention.  It looks like another non-program mode variant, but that leading $41 I believe would crash the glove in any of my prior tests.  Any idea where it's called?  With that many other tx packets, if it's not a high-res mode (and I may be able to test if it is...), there's an off-chance it's setting the glove into a listen-for-program-switch-between-the-modes-I've-just-described mode...?<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Super Glove Ball is having a very straight read packet function at DCDCh, works like so:<br /><br />Read 1 byte from glove in EVERY frame. This bytes indicates if the glove is ready to send data. 5Fh (or A0h, if you've XORed it by FFh) indicates ready. If so, the function reads 9 further bytes. </div><br />That matches my current documented observation, yes.  But I'd advise knowing something about the timing anyway, since I can't empirically guarantee the glove <em>won't</em> occasionally return 0xA0 when not ready, particularly if you're e.g. accidentally reading fewer fields than you've asked for each loop.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Counting the ready-byte plus following 9 data bytes... then... one would read 10 bytes in total. Well. Obviously.<br />So far, I've no idea where that "12 byte" idea came from. No, stop! I got it. Look at the <!-- m --><a class="postlink" href="http://i49.tinypic.com/ff1hd0.jpg">http://i49.tinypic.com/ff1hd0.jpg</a><!-- m --> chart:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">The headline says 12 bytes, for now, trust that.<br />The actual diagram shows only 10 bytes, that's a bug.<br />To fix that: Assume two extra bytes after &quot;byte 8&quot;.</div><br />Now you have 10 continous bytes. Plus, two final bytes (both preceeded by a long delays) - that are the "not-ready" bytes for the NEXT packet. </div><br />The 12-byte read is spurious, as I've already documented.  To avoid entering wonky undefined states, you "must" read as many bytes as you've asked for (via the field mask bytes in the init message) plus one for the header, plus one extra.  Any reads beyond that are strictly optional.  The diagram likely reads 12 bytes (header + 11 bytes) because it asked for 9 fields and was being generous in its trailing reads.  The single long delay is approximately the length of a vblank wait, indicating they're breaking the read across 2 frames; I have no idea why it's in there since with the init packet documented in the same chart, that delay actually makes the data less stable, but I can readily demonstrate that the first byte after the break is still within the packet, so if they're listening for the next header at that point, they don't know how to operate the glove either.  But incidentally, thanks for isolating the tx block in Glove Ball- we now know as conclusively as we're going to where that canonical trace diagram came from <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Now, are there 3 or 4 flex sensors? Does somebody else have a glove, and could run the ROM-image from LoneKiltedNinja's test program on a NES?<br />That way it should be very easy to see if the thing does react to flexing a fourth finger, or if it doesn't. </div>
<br />I'll be testing this as soon as I can get my hands on a second glove.  I really don't know what to expect right now.  On the one hand, the alignment of the return data suggests room for a 4th finger and all the ambiguously-sourced online reviews claim the glove does thumb+3 with nothing on the pinky.  On the other hand, none of the gestures  in the program sets in the manual (which I do have in original print, btw) use the ring finger, meaning it may be awkward and/or flakey and/or just not there.
<br />But yes, if  anyone else can test this before I can, please report back!
<br />
<br />And your analysis of the rotation is correct- 1 axis ("roll" along the wrist) with 12 detectable positions, 0 being back-of-the-hand faces up (12:00), proceeding clockwise to 11 (11:00).  I remember the description you quoted, but the one in the current readme in the devkit does make it a little clearer.
<br />I also had the mics and emitters swapped for a good long time, but I think  I have them the right way 'round in the current readme.  The two lobes on the top of the glove are (apparently high-volume, from what I can tell) speakers/emitters of, so I've heard, 40kHz pulses (all I can pick up on iPhone spectrum analysis are faint aliases at acoustic frequencies which would not be readily detectable at the recommended 3-5').  The 3 corners of the frame on the TV are microphones/receivers.  And one return field of at least one operating mode will give you a clear indicator of which receivers can/can't hear the pings of which emitters.</div>

					<br clear="all" /><br />

						<table width="100%" cellspacing="0">
						<tr valign="middle">
							<td class="gensmall" align="right">
							
							</td>
						</tr>
						</table>
					</td>
				</tr>
				</table>
			</td>
		</tr>

		<tr class="row1">

			<td class="profile"><strong><a href="#wrapheader">Top</a></strong></td>
			<td><div class="gensmall" style="float: left;">&nbsp;<a href="./memberlist.php?mode=viewprofile&amp;u=3570"><img src="./styles/subsilver2/imageset/en/icon_user_profile.gif" alt="Profile" title="Profile" /></a> &nbsp;</div> <div class="gensmall" style="float: right;">&nbsp;</div></td>
	
		</tr>

	<tr>
		<td class="spacer" colspan="2" height="1"><img src="images/spacer.gif" alt="" width="1" height="1" /></td>
	</tr>
	</table>

	<table class="tablebg" width="100%" cellspacing="1">
	<tr class="row2">

			<td align="center" valign="middle">
				<a name="p94466"></a>
				<b class="postauthor">nocash</b>
			</td>
			<td width="100%" height="25">
				<table width="100%" cellspacing="0">
				<tr>
				
					<td class="gensmall" width="100%"><div style="float: left;">&nbsp;<b>Post subject:</b> <a href="#p94466"></a></div><div style="float: right;"><a href="./viewtopic.php?p=94466#p94466"><img src="./styles/subsilver2/imageset/icon_post_target.gif" width="12" height="9" alt="Post" title="Post" /></a><b>Posted:</b> Thu May 24, 2012 9:35 pm&nbsp;</div></td>
				</tr>
				</table>
			</td>
		</tr>

		<tr class="row2">

			<td valign="top" class="profile">
				<table cellspacing="4" align="center" width="150">
			
				<tr>
					<td><img src="./styles/subsilver2/imageset/en/icon_user_offline.gif" alt="Offline" title="Offline" /></td>
				</tr>
			
				</table>

				<span class="postdetails">
					<br /><b>Joined:</b> Fri Feb 24, 2012 12:09 pm<br /><b>Posts:</b> 72
				</span>

			</td>
			<td valign="top">
				<table width="100%" cellspacing="5">
				<tr>
					<td>
					

						<div class="postbody"><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">My best conjecture based on testing was that it was the number of following bytes in the init message, but given that I was able to fudge it up and down and not completely break functionality, I couldn't pin this down for certain. The additional messages you put forward do certainly lend weight to this argument, though. <br /></div><br />And the program is using that byte as loop counter, so it's 100% proof. If you send less bytes than specified, the glove will probably timeout after a while, or treat your next some read-attempts as writes. If you send more than specified, then it'll probably treat the extra-writes as read-attempts.<br />And finally, if you send &amp; specify less than required, then it might re-use whatever values that were in the input buffers (=uninitialized data on power up). That'd explain some of the effects that you've described.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">$49, or in the $64 - $69 range</div><br />Yeah, looks like bit7=0 for the "program" packets. Except that Brawler #0Ch has that bit cleared, too. The first byte should be some sort of a command byte, but I can't make any sense of it yet. Maybe the whole packet can be broken down to several command+data pairs.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">the start of so many programs has $01 as every other value<br /></div><br />Yup, noticed that one, too. Maybe just an often used parameter value. Or the MSB of a 16bit value.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">The Brawler tx packet 0C has caught my attention. It looks like another non-program mode variant... Any idea where it's called?</div><br />Yes, looks like a non-program packet. Can you try it on real hardware? (I don't have a glove.) And the various Brawler packets, let's see:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">Packet 00h - called when STARTING the game &#40;right after selecting 1-2 players&#41;<br />Packet 01h - doesn't seem to be used anywhere.<br />Packet 02h..06h - these are &quot;Program A-E&quot; &#40;for use with other games&#41;<br />Packet 07h..0Ah - these are intended to be &quot;Program F-I&quot; &#40;but the menu<br />&nbsp; &nbsp; &nbsp; &nbsp; selection is bugged; it handles only the cursor's row, and ignores <br />&nbsp; &nbsp; &nbsp; &nbsp; the cursor's column; so trying to select programs F-I in right column<br />&nbsp; &nbsp; &nbsp; &nbsp; actually mirrors to A-D in left column&#41;.<br />Packet 0Bh - doesn't seem to be used anywhere.<br />Packet 0Ch - called when BOOTING the game<br /></div><br /><br />So, Packet 0Ch must be something for detection and/or main menu controls. And Packet 00h for the actual game controls; it doesn't send further packets when entering the second level, so that packet seems to be used for the whole game (or... the game has sensed that I don't have glove, and doesn't send further packets for that reason).<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I can't empirically guarantee the glove won't occasionally return 0xA0 when not ready, particularly if you're e.g. accidentally reading fewer fields than you've asked for each loop.</div><br />The game uses A0h that way, so it should be stable. Unless, yes, if you read fewer than asked, then it won't be stable.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">The 12-byte read is spurious, as I've already documented.</div><br />Yup, I know. I was just talking about how and why manfredo came up with the 12-byte idea.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">The diagram likely reads 12 bytes (header + 11 bytes) because it asked for 9 fields and was being generous in its trailing reads.</div><br />No, no. It's showing how Super Glove Ball is reading the glove (as seen with an oscilloscope). Absolutely sure. It's matching perfectly with the games program code:<br /><br />Read the status byte, plus 9 data bytes. Finish.<br /><br />The two extra reads in following frames are just showing when the NMI handler checks further status bytes. They have absolutely nothing to do with the packet data-reading. But when seeing them on the oscilloscope, it's easy to think that they are part of the packet data.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">you "must" read as many bytes as you've asked for (via the field mask bytes in the init message) plus one for the header, plus one extra.<br /></div><br />I am not too sure if "one extra" is really required. The game isn't doing that (except indirectly: by the following status read in next frame).<br />What happens if you are doing it the same way? (read 1 status byte per frame, plus 9 bytes upon status=A0h)<br />Would be interesing to know which status value (or values) you are receiving in that case; ie. particulary, the values that aren't A0h.<br /><br />Btw. for the flex byte, Glove Ball is checking the lower 6bits. So it seems to be using all 3 fingers; and leave the upper 2bit unused (that'd be thumb as far as I've understood).<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I remember the description you quoted, but the one in the current readme in the devkit does make it a little clearer.</div><br />How new is that? I've downloaded the readme just yesterday. Moment, just downloaded it again. No, it still says "minus 1"! That is: in the summary section. It doesn't match up with the more detailed description section later on in the doc.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I'm having a bit of trouble figuring out what is empirical</div>
<br />Phew. Glad to hear that. I was getting afraid that I am the only person who doesn't understand that expressions <img src="./images/smilies/icon_smile.gif" alt=":-)" title="Smile" /> canonical is giving me a hard time, too.
<br />For the guesswork part... I think I've worked carefully, and results should be around 99..100% proof - hopefully. Please verify everything as possible &amp; correct me if I got something wrong! Obvious guesses, like the purpose of Brawler packet 0Ch, are of course just guesses.</div>

					<br clear="all" /><br />

						<table width="100%" cellspacing="0">
						<tr valign="middle">
							<td class="gensmall" align="right">
							
							</td>
						</tr>
						</table>
					</td>
				</tr>
				</table>
			</td>
		</tr>

		<tr class="row2">

			<td class="profile"><strong><a href="#wrapheader">Top</a></strong></td>
			<td><div class="gensmall" style="float: left;">&nbsp;<a href="./memberlist.php?mode=viewprofile&amp;u=5211"><img src="./styles/subsilver2/imageset/en/icon_user_profile.gif" alt="Profile" title="Profile" /></a> &nbsp;</div> <div class="gensmall" style="float: right;">&nbsp;</div></td>
	
		</tr>

	<tr>
		<td class="spacer" colspan="2" height="1"><img src="images/spacer.gif" alt="" width="1" height="1" /></td>
	</tr>
	</table>

	<table class="tablebg" width="100%" cellspacing="1">
	<tr class="row1">

			<td align="center" valign="middle">
				<a name="p94562"></a>
				<b class="postauthor">nocash</b>
			</td>
			<td width="100%" height="25">
				<table width="100%" cellspacing="0">
				<tr>
				
					<td class="gensmall" width="100%"><div style="float: left;">&nbsp;<b>Post subject:</b> <a href="#p94562"></a></div><div style="float: right;"><a href="./viewtopic.php?p=94562#p94562"><img src="./styles/subsilver2/imageset/icon_post_target.gif" width="12" height="9" alt="Post" title="Post" /></a><b>Posted:</b> Sat May 26, 2012 11:47 am&nbsp;</div></td>
				</tr>
				</table>
			</td>
		</tr>

		<tr class="row1">

			<td valign="top" class="profile">
				<table cellspacing="4" align="center" width="150">
			
				<tr>
					<td><img src="./styles/subsilver2/imageset/en/icon_user_offline.gif" alt="Offline" title="Offline" /></td>
				</tr>
			
				</table>

				<span class="postdetails">
					<br /><b>Joined:</b> Fri Feb 24, 2012 12:09 pm<br /><b>Posts:</b> 72
				</span>

			</td>
			<td valign="top">
				<table width="100%" cellspacing="5">
				<tr>
					<td>
					

						<div class="postbody">Got the transmit packets more or less fully reversed. The overall transmit packet format is:
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; 1. Length Byte &#40;total number of following bytes&#41;<br />&nbsp; 2. 16bit Opcode Area &#40;convert analog positions to temporary flags&#41;<br />&nbsp; 3. 8bit Opcode Area &#40;forward temporary flags to joypad bits; can use logic&#41;<br />&nbsp; 4. Optional 6 extra bytes &#40;whatever purpose, used only in one program&#41;<br /></div><br />The "opcodes" are probably just tokens. Though I am a bit afraid that they <em>might</em> be actual processor opcodes... in that case, my research my appear pretty foolish, and it might have been ways easier to read the datasheet... would be REALLY nice if somebody could look inside the glove and <strong>scribble down the part number</strong> of the chips. <strong>Please!</strong><br />Anyways, 16bit Opcode area:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">Header Byte for 16bit Opcode Area<br />&nbsp; 7&nbsp; &nbsp; Low level mode&nbsp; &#40;0=Digital Joypad Emulation, 1=Analog Low-Level Mode&#41;<br />&nbsp; 6&nbsp; &nbsp; Unknown &#40;always 1 in known packets&#41;<br />&nbsp; 5&nbsp; &nbsp; Configure glove for use with other games &#40;1=Survive POWER-OFF ?&#41;<br />&nbsp; 4&nbsp; &nbsp; Unknown &#40;always 0 in known packets&#41; &quot;prevent re-flash later&quot;?<br />&nbsp; 3-0&nbsp; Number of following 16bit commands &#40;used range is 01h..09h&#41;<br /><br />16bit Opcodes<br />The upper 8bit &#40;first byte&#41; are:<br />&nbsp; 15&nbsp; &nbsp;Unknown &#40;always 0 in known packets&#41;<br />&nbsp; 14&nbsp; &nbsp;Unknown&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ;-can be used together with bit13-8<br />&nbsp; 13&nbsp; &nbsp;Examine thumb finger flex&nbsp; &nbsp; &nbsp; &nbsp; ;\<br />&nbsp; 12&nbsp; &nbsp;Examine index finger flex&nbsp; &nbsp; &nbsp; &nbsp; ; only one of these<br />&nbsp; 11&nbsp; &nbsp;Examine middle finger flex&nbsp; &nbsp; &nbsp; &nbsp;; bits should be set<br />&nbsp; 10&nbsp; &nbsp;Examine ring finger flex&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; &#40;usually&#41;<br />&nbsp; 9&nbsp; &nbsp; Examine wrist rotation angle&nbsp; &nbsp; &nbsp;;<br />&nbsp; 8&nbsp; &nbsp; Examine X/Y/Z coordinate&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;;/<br />The lower 8bit &#40;second byte&#41; can have following uses:<br />For Finger Flex:<br />&nbsp; 7-4&nbsp; Unknown &#40;usually 0&#41;<br />&nbsp; 3-2&nbsp; Wanted flex or so&nbsp; &nbsp;&#40;3 or 2=Flex, 0=Want NO Flex&#41;<br />&nbsp; 1-0&nbsp; Unwanted flex or so &#40;0=Want Flex, 3=Want NO Flex&#41;<br />For Wrist Rotation:<br />&nbsp; 7-4&nbsp; Max Angle &#40;00h..0Bh&#41;&nbsp; ;\eg. wanted clock range 3:00 .. 6:00<br />&nbsp; 3-0&nbsp; Min Angle &#40;00h..0Bh&#41;&nbsp; ;/should be Min=3, Max=6; or maybe Max=7, or so<br />For X/Y/Z Coordinate:<br />&nbsp; 7-3&nbsp; Unknown, maybe flag&#40;s&#41; and/or boundary value<br />&nbsp; 2&nbsp; &nbsp; Select Direction &#40;0=Right/Up/Back, 1=Left/Down/Forward&#41; &#40;EDIT&#41;<br />&nbsp; 1-0&nbsp; Select Parameter &#40;0=X, 1=Y, 2=Z, 3=Fourth Axis??&#41;<br />The opcodes are computing if the glove is moved in the specified way,<br />and the result is then stored in the flag array: Flg&#40;1&#41; = 1st opcode's<br />result, Flg&#40;2&#41; for 2nd opcode, and so on.<br /><br />Used 16bit Opcodes<br />First of, the opcodes used in the two &quot;short packets&quot; &#40;with only 1 opcode<br />each&#41;, might have some purpose, or might just be dummies &#40;in case one<br />cannot specify &quot;0 opcodes&quot;&#41;:<br />&nbsp; 0800&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;;request data or dummy or so &#40;glove ball analog mode&#41;<br />&nbsp; 200F&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;;init/detect/disable/dummy or so &#40;used in brawler at power up&#41;<br />Next, the &quot;normal&quot; position/flex opcodes. Seems as if they can be used<br />with differet sensitivity boundaries. Below is listing all used values, and<br />as often as they are used &#40;eg. for thumb, 200C is more common than 2008&#41;:<br />&nbsp; 0128 0128 0130 0130 0138 0138 0180 01B0&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ;hand right &#40;EDIT&#41;<br />&nbsp; 012C 012C 0134 0134 013C 013C 0184 01B4&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ;hand left &#40;EDIT&#41;<br />&nbsp; 0131 0131 0141 01A1 01A1 01B1&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ;hand up<br />&nbsp; 0125 0135 0135 0145 017D 017D 01B5&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;;hand down<br />&nbsp; 0122 413A 413A&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;;hand back<br />&nbsp; 0126 0126 013E 013E&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ;hand forward<br />&nbsp; 0107 0183&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ;hand axis #4 ???<br />&nbsp; 040C 440C&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ;ring bent?<br />&nbsp; 080C 080C 080E 480E&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ;middle bent<br />&nbsp; 1003&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;;index NOT bent<br />&nbsp; 100C 100C 100C 100C 100C 100C 100C 100E 5008 500C&nbsp; &nbsp; &nbsp; ;index bent<br />&nbsp; 2008 2008 200C 200C 200C 200C 200C 200C 200C 600C&nbsp; &nbsp; &nbsp; ;thumb bent<br />Then, the various wrist rotation opcodes. Again, I have no clue if the<br />specified range does include/exclode the &quot;max&quot; value &#40;ie. 0283 might<br />mean 0..8 or 0..7&#41;. But it should be easy enough to test that on real<br />hardware.<br />&nbsp; value ;=expl.&nbsp; ;description from manual<br />&nbsp; 0283&nbsp; ;=3..8&nbsp; &nbsp;;hand 3 o'clock?<br />&nbsp; 0294&nbsp; ;=4..9&nbsp; &nbsp;;hand 6 o'clock<br />&nbsp; 02B7&nbsp; ;=7..B&nbsp; &nbsp;;hand 10 o'clock<br />&nbsp; 0271&nbsp; ;=1..7&nbsp; &nbsp;;hand 3 o'clock<br />&nbsp; 4284&nbsp; ;=4..8&nbsp; &nbsp;;hand 6 o'clock<br />&nbsp; 0260&nbsp; ;=0..6&nbsp; &nbsp;;hand 2 o'clock?<br />&nbsp; 0207&nbsp; ;=7..0&nbsp; &nbsp;;hand 11 o'clock? ;\these seem to wrap from AM to PM<br />&nbsp; 0248&nbsp; ;=8..4&nbsp; &nbsp;;hand 10 o'clock? ;/<br />&nbsp; 0271&nbsp; ;=1..7 ? ;hand 11 o'clock&nbsp; ;\according to manual, these should be<br />&nbsp; 0206&nbsp; ;=6..0 ? ;hand 2 o'clock&nbsp; &nbsp;;/vice-versa &#40;maybe a bug&#41;<br />Then some very strange ones:<br />&nbsp; 1D18&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;;&nbsp; &nbsp;right??&nbsp; &nbsp; &nbsp; &nbsp;;\these are used in combination with<br />&nbsp; 0000&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;;&nbsp; &nbsp;left ??&nbsp; &nbsp; &nbsp; &nbsp;; &quot;normal&quot; left/right opcodes...<br />&nbsp; 1D18&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; ...&nbsp; &nbsp; &nbsp;?&nbsp; &nbsp; &nbsp; &nbsp;; might be somehow related to near &amp; far<br />&nbsp; 0000&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; ...&nbsp; &nbsp; &nbsp; ?&nbsp; &nbsp; &nbsp; ;/transformed to slow/pulsed &amp; fast/normal<br />And some other odd ones:<br />&nbsp; 440C&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;;\maybe... true if ring finger is NEWLY bent?<br />&nbsp; 440C&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;;/<br />&nbsp; 040C&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;;-looks like &quot;ring&quot;, but is undocumented in manual<br />&nbsp; 6418&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;;-two fingers bent?<br />&nbsp; 011E&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;;-looks like hand forward, but is undocumented in manual<br /></div><br />And, the 8bit Opcode area:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">Header Byte for 8bit Opcode Area<br />&nbsp; 7&nbsp; &nbsp; Append EXTRA SIX BYTES after 8bit Opcode Area &#40;0=Normal, 1=Yes&#41;<br />&nbsp; 6-5&nbsp; Unknown &#40;always 0 in known packets&#41;<br />&nbsp; 4-0&nbsp; Number of following 8bit commands &#40;used range is 01h..18h&#41;<br /><br />Registers used with 8bit Opcodes<br />&nbsp; Input&#40;0&#41;&nbsp; &nbsp; &nbsp; General purpose flag &#40;can be used to memorize current &quot;mode&quot;&#41;<br />&nbsp; Input&#40;1..9&#41;&nbsp; &nbsp;Results from 1st..9th 16bit Opcode<br />&nbsp; Input&#40;0Ah..&#41;&nbsp; Unused?<br />&nbsp; Input&#40;0Eh&#41;&nbsp; &nbsp; Another general purpose flag &#40;used as frame-toggle or so&#41;<br />&nbsp; Input&#40;0Fh&#41;&nbsp; &nbsp; Another general purpose flag &#40;used as frame-toggle or so&#41;<br />&nbsp; Output&#40;0&#41;&nbsp; &nbsp; &nbsp;Should be BEEP sound &#40;judging from description in manual&#41;<br />&nbsp; Output&#40;1..8&#41;&nbsp; Joypad Shift Register &#40;R,L,D,U,?,?,B,A&#41;&nbsp; &#40;?,?=probably sta,sel&#41; &#40;EDIT&#41;<br />&nbsp; Output&#40;9&#41;&nbsp; &nbsp; &nbsp;Used in Brawler init and in &quot;Joust&quot; program &#40;... LED?&#41;<br />&nbsp; Output&#40;0Ah&#41;&nbsp; &nbsp;Unused?<br />&nbsp; Output&#40;0Bh&#41;&nbsp; &nbsp;Maybe abort opcode execution... or LED control?<br />&nbsp; Output&#40;0Ch..0Fh&#41; Unused?<br /><br />8bit Opcodes<br />&nbsp; 0nh&nbsp; &nbsp;Unknown/unused<br />&nbsp; 1nh&nbsp; &nbsp;flg = Input&#40;n&#41;<br />&nbsp; 2nh&nbsp; &nbsp;if flg THEN BEGIN CONDITIONAL AREA, and set flg=Input&#40;0..9&#41; &#40;?&#41;<br />&nbsp; 3nh&nbsp; &nbsp;Used... 33h is related to Input&#40;3&#41; and related to CONDITION?<br />&nbsp; 4nh&nbsp; &nbsp;flg = flg AND Input&#40;n&#41;<br />&nbsp; 5nh&nbsp; &nbsp;flg = flg OR&nbsp; Input&#40;n&#41;<br />&nbsp; 6nh&nbsp; &nbsp;Used... somehow related to CONDITIONAL stuff? &#40;ELSE/ELSEIF?&#41;<br />&nbsp; 7nh&nbsp; &nbsp;Exchange flg &lt;--&gt; Input&#40;n&#41; &#40;?&#41;<br />&nbsp; 8nh&nbsp; &nbsp;Output&#40;n&#41; = flg<br />&nbsp; 9nh&nbsp; &nbsp;Output&#40;n&#41; = flg AND PulseA<br />&nbsp; Anh&nbsp; &nbsp;Output&#40;n&#41; = flg AND PulseB<br />&nbsp; Bnh&nbsp; &nbsp;Input&#40;n&#41; = Input&#40;n&#41; XOR flg &#40;?&#41;<br />&nbsp; Cnh&nbsp; &nbsp;Output&#40;n&#41; = NOT flg &#40;?&#41;<br />&nbsp; Dnh&nbsp; &nbsp;Unknown/unused<br />&nbsp; Enh&nbsp; &nbsp;Unknown/unused<br />&nbsp; Fnh&nbsp; &nbsp;Used... FEh is used, related to Input&#40;n&#41;<br /><br />Extra Six<br />Finally, &quot;PROGRAM E&quot; has those EXTRA SIX BYTES after the 8bit opcode area. The bytes there are 00,00,00,00,57,57, purpose is unknown.<br /></div>
<br />
<br />The overall format seems to apply to the "analog" mode packet, too. Namely, the "number of 16bit opcodes" and "number of 8bit" opcodes seem to be there; except that, in analog mode, the two "8bit opcodes" are actually those 16 flags that you've described.
<br />
<br />The "direction bit" in the 16bit opcodes doesn't match up with the readme.rtf - are you sure about "right/up/away-from-screen is positive
<br />"? From the direction bit, I'd expect "right/down/away" being all positive (or all negative).
<br />
<br />Aside from the "last 3 fingers" in Program 1, ring finger is also mentioned in Program E and G. Either the glove manual is wrong, or your glove is really broken - did you check it for shortcut &amp; broken wire?
<br />
<br />NB. as far as I can see, Bad Street Brawler is having only "faked" glove support; it's simply configuring the glove to emulate a joypad. So it's using only 2D digital input, not using the 3D analog feature at all.
<br />
<br />PS. The button/priority in your doc is a bit confusing; a bit like saying that generally the week starts on wednesday, but tuesday comes earlier, and monday is right after the weekend <img src="./images/smilies/icon_smile.gif" alt=":-)" title="Smile" /> As far as I figured out, you mean ordering like so - from highest to lowest priority:
<br />  Left/Right, Up/Down, Enter, Select, Start, Center, 0,1,2,3,4,5,6,7,8,9, A,B
<br />Or did I get that wrong?</div>

					
							<br /><br />
							<span class="gensmall">Last edited by <a href="./memberlist.php?mode=viewprofile&amp;u=5211">nocash</a> on Thu May 31, 2012 1:10 pm, edited 2 times in total.</span>
						<br clear="all" /><br />

						<table width="100%" cellspacing="0">
						<tr valign="middle">
							<td class="gensmall" align="right">
							
							</td>
						</tr>
						</table>
					</td>
				</tr>
				</table>
			</td>
		</tr>

		<tr class="row1">

			<td class="profile"><strong><a href="#wrapheader">Top</a></strong></td>
			<td><div class="gensmall" style="float: left;">&nbsp;<a href="./memberlist.php?mode=viewprofile&amp;u=5211"><img src="./styles/subsilver2/imageset/en/icon_user_profile.gif" alt="Profile" title="Profile" /></a> &nbsp;</div> <div class="gensmall" style="float: right;">&nbsp;</div></td>
	
		</tr>

	<tr>
		<td class="spacer" colspan="2" height="1"><img src="images/spacer.gif" alt="" width="1" height="1" /></td>
	</tr>
	</table>

	<table class="tablebg" width="100%" cellspacing="1">
	<tr class="row2">

			<td align="center" valign="middle">
				<a name="p94638"></a>
				<b class="postauthor">nocash</b>
			</td>
			<td width="100%" height="25">
				<table width="100%" cellspacing="0">
				<tr>
				
					<td class="gensmall" width="100%"><div style="float: left;">&nbsp;<b>Post subject:</b> <a href="#p94638"></a></div><div style="float: right;"><a href="./viewtopic.php?p=94638#p94638"><img src="./styles/subsilver2/imageset/icon_post_target.gif" width="12" height="9" alt="Post" title="Post" /></a><b>Posted:</b> Sun May 27, 2012 9:39 am&nbsp;</div></td>
				</tr>
				</table>
			</td>
		</tr>

		<tr class="row2">

			<td valign="top" class="profile">
				<table cellspacing="4" align="center" width="150">
			
				<tr>
					<td><img src="./styles/subsilver2/imageset/en/icon_user_offline.gif" alt="Offline" title="Offline" /></td>
				</tr>
			
				</table>

				<span class="postdetails">
					<br /><b>Joined:</b> Fri Feb 24, 2012 12:09 pm<br /><b>Posts:</b> 72
				</span>

			</td>
			<td valign="top">
				<table width="100%" cellspacing="5">
				<tr>
					<td>
					

						<div class="postbody">Found more info on buttons, <!-- m --><a class="postlink" href="http://www.cse.unsw.edu.au/~waleed/tml/data/glovedata.h">http://www.cse.unsw.edu.au/~waleed/tml/data/glovedata.h</a><!-- m -->
<br />Does mostly match up with the readme.rtf info. But has two additional definitions:
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">#define PGLOVE_PROG&nbsp; &#40;0x84&#41;<br />#define PGLOVE_NOKEY &#40;0xFF&#41; /* No key pressed is indicated by FF */<br /></div><br />That should solve the "what-if-no-button-pressed" question. And 84h for PROG button... do you get that value, too? And if it switches to program mode, does the 84h show up only for a short moment?<br />And the directions...<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">#define PGLOVE_UP&nbsp; &nbsp; &#40;0x0C&#41;<br />#define PGLOVE_RIGHT &#40;0x0D&#41;<br />#define PGLOVE_DOWN&nbsp; &#40;0x0E&#41;<br />#define PGLOVE_LEFT&nbsp; &#40;0x0F&#41;<br /></div>
<br />Damn, that's all different than in the readme.rtf, except, DOWN is same. Can you double-check the DPAD button numbers? I've no clue which of the different values are correct.
<br />The floating point values &amp; extra pitch/yaw entries in glovedata.h are obviously some custom format, not based on the real hardware. But the button numbers seem to be taken as-in from hardware.</div>

					<br clear="all" /><br />

						<table width="100%" cellspacing="0">
						<tr valign="middle">
							<td class="gensmall" align="right">
							
							</td>
						</tr>
						</table>
					</td>
				</tr>
				</table>
			</td>
		</tr>

		<tr class="row2">

			<td class="profile"><strong><a href="#wrapheader">Top</a></strong></td>
			<td><div class="gensmall" style="float: left;">&nbsp;<a href="./memberlist.php?mode=viewprofile&amp;u=5211"><img src="./styles/subsilver2/imageset/en/icon_user_profile.gif" alt="Profile" title="Profile" /></a> &nbsp;</div> <div class="gensmall" style="float: right;">&nbsp;</div></td>
	
		</tr>

	<tr>
		<td class="spacer" colspan="2" height="1"><img src="images/spacer.gif" alt="" width="1" height="1" /></td>
	</tr>
	</table>

	<table class="tablebg" width="100%" cellspacing="1">
	<tr class="row1">

			<td align="center" valign="middle">
				<a name="p94778"></a>
				<b class="postauthor">LoneKiltedNinja</b>
			</td>
			<td width="100%" height="25">
				<table width="100%" cellspacing="0">
				<tr>
				
					<td class="gensmall" width="100%"><div style="float: left;">&nbsp;<b>Post subject:</b> <a href="#p94778"></a></div><div style="float: right;"><a href="./viewtopic.php?p=94778#p94778"><img src="./styles/subsilver2/imageset/icon_post_target.gif" width="12" height="9" alt="Post" title="Post" /></a><b>Posted:</b> Tue May 29, 2012 7:26 pm&nbsp;</div></td>
				</tr>
				</table>
			</td>
		</tr>

		<tr class="row1">

			<td valign="top" class="profile">
				<table cellspacing="4" align="center" width="150">
			
				<tr>
					<td><img src="./styles/subsilver2/imageset/en/icon_user_offline.gif" alt="Offline" title="Offline" /></td>
				</tr>
			
				</table>

				<span class="postdetails">
					<br /><b>Joined:</b> Mon Jul 07, 2008 7:40 pm<br /><b>Posts:</b> 40
				</span>

			</td>
			<td valign="top">
				<table width="100%" cellspacing="5">
				<tr>
					<td>
					

						<div class="postbody">In the order of fastest to most esoteric...
<br />
<br />I'm clarifying a few spots in the readme in parallel with writing this.
<br />
<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">And the program is using that byte as loop counter, so it's 100% proof.</div><br />99% proof.  Until I see a design doc for the glove, it's impossible to tell intentional vs convenient behavior, and particularly, at what value any undefined/error states begin.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">The "direction bit" in the 16bit opcodes doesn't match up with the readme.rtf - are you sure about "right/up/away-from-screen is positive<br />"? From the direction bit, I'd expect "right/down/away" being all positive (or all negative). </div><br />Just re-confirmed on glovetest, and that's the orientation I also used on Nesglovphone.  Yes, that does mean Y is inverted from screen coordinates, and yes, that does mean you need to correct for it in your own code, but since this was WAY before the dominance of OpenGL and DirectX, I'm utterly unsurprised at it being a traditional math-class x/y plus right-handed Z.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Aside from the "last 3 fingers" in Program 1, ring finger is also mentioned in Program E and G. Either the glove manual is wrong, or your glove is really broken - did you check it for shortcut &amp; broken wire? </div><br />The cabling inside the frame is twisted something fierce, but I'm not going to chop up my glove for science.  It does what I need it to, it's complete-with-box/docs, and I don't have a spare.  Same goes for questions on the chip inside, although I do recall seeing a variety of "how to take your glove apart" docs in my own research which may have info on the innards, since iirc they do things like change the clock rate.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">So, Packet 0Ch must be something for detection and/or main menu controls.</div><br />It results in the glove not sending any data, so it's not a high-res mode.  If it's used at power-on, then I'd say the likelihood is that it sets the glove to "listen" for other program commands.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I am not too sure if "one extra" is really required.</div><br />I've tried reading precisely the requested number plus header.  It makes the LEDs unhappy, so I wouldn't trust the read data with my life.  If the code only uses the first 9 data bytes, either they got lucky or they're intentionally saving a read by knowing that the glove won't be ready for a few frames anyway.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><div class="codetitle"><b>Code:</b></div><div class="codecontent">Documentation!!!!!11</div></div><br />Again with the "what's empirical vs conjecture and/or what sources are you finding??"<br />That's a lot of data to pull out of thin air, particularly if you're going to use it to challenge direct on-hardware testing.  Also, you call my function descriptions confusing? <img src="./images/smilies/icon_wink.gif" alt=";)" title="Wink" /><br /><br />Anyway... <br />if I read you right (and it would help to throw one or two concrete verified examples as context if you are going to dump that much data)<br />our canonical packet<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">06 C1 08 00 02 FF 01</div><br />reads as<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">06</div><br />6 bytes in the message<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">C1</div><br />header byte for the 16-bit commands.  In binary, <br />1 - low-level / high-res mode<br />1 - 1/unknown<br />0 - (don't) configure for other games / survive power off (have you tested this??)<br />0 - 0/unknown<br />0001 - 1 16-bit command<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">08 00</div><br />16-bit command 0008, the 08 of which just happens to serve functionally as a mode selector per my own testing, the 00 of which remains unknown save for the fact that in my testing it seemed to have little if any effect unless the whole "opcode" was *F*F (*=wildcard).  But according to your docs,<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Enable middle finger flex</div><br />or if you got your byte order reversed (which, honestly, I'd architecturally half-suspect; little-endian makes for much simpler chip design)<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">usually 0</div><br />... enlightening.<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">02</div><br />2 8-bit opcodes/data; so far so correct<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">FF 01</div><br />I think my docs win here; interpreting those bytes as header/opcode makes very little sense.<br /><br />BUT... now that I've gone through that exercise, I'm guessing you're probably deriving stuff based on your own use-case code observation of the programming packets, not the raw-mode inits.  Which means analyzing the canonical packet is probably meaningless.  But congrats on cracking the format, at least, because I think it still holds, and it makes great practical sense and good architectural sense, and it does line up with my observation... mostly... for parsing the raw-init.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">06</div> bytes in the header<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">C1</div> high-res mode, 1 command.  Although I'd put a question mark next to that "high res mode" since 1 positive example does not a specification make, and I've royally wrecked things with values other than C in that nybble.<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">08 00</div> who knows, just don't make it 0F0F or similar. ... *tries something*  oh... Oh myyyyyyy...  yes, very interesting!  *notes to report later*<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">02</div> 8-bit fields<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">FF 01</div> raw return field masks<br /><br />Now that's a nice looking packet.  But... *digs out aforementioned notes* it begs the question: why do we need 1 16-bit opcode?  Isn't<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">04 C0 02 FF 01</div>
<br />a valid init string, assuming we're reading things right?
<br />
<br />As it turns out... *drumroll* <strong><em>it is!</em></strong> (at least, on a warm re-flash)
<br /><span style="text-decoration: underline">BUT</span>
<br />there's a catch: the glove took it's dear sweet time to go back into an operating state.  Meaning, speculatively, that nybble probably loads a countdown timer that moves on when it hits 0.  And if it starts at 0, it resets to max on its first step and you need to wait for it.  It seems odd that it would count that far without actually reading, though, so the fact that the glove still works when flashed that way from a prior good state may mean that somehow the prior-good values were never flushed because the glove went undefined.  But it may mean that you can indeed have 0 opcodes and the glove correctly handles it, it just takes awhile.
<br />...
<br />*does another test*
<br />Iiiiinterresting.   Okay.  Scratch half of that.  On a warm re-init, the glove takes its time.  On a "cold" re-init (unplug the glove and plug it back in while the NES is still running; given the bootloader on my flashcart I can't actually do a true cold start), it works quite quickly.  So it may be one of those "better safe than sorry" dummy values just to fill a blank in the glove memory and prevent mildly-undefined behavior.
<br />
<br />...
<br />
<br />...
<br />
<br />okay, if I've missed some things, I may need to come back later.  Getting too distracted transcribing this stuff into the readme <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /></div>

					<br clear="all" /><br />

						<table width="100%" cellspacing="0">
						<tr valign="middle">
							<td class="gensmall" align="right">
							
							</td>
						</tr>
						</table>
					</td>
				</tr>
				</table>
			</td>
		</tr>

		<tr class="row1">

			<td class="profile"><strong><a href="#wrapheader">Top</a></strong></td>
			<td><div class="gensmall" style="float: left;">&nbsp;<a href="./memberlist.php?mode=viewprofile&amp;u=3570"><img src="./styles/subsilver2/imageset/en/icon_user_profile.gif" alt="Profile" title="Profile" /></a> &nbsp;</div> <div class="gensmall" style="float: right;">&nbsp;</div></td>
	
		</tr>

	<tr>
		<td class="spacer" colspan="2" height="1"><img src="images/spacer.gif" alt="" width="1" height="1" /></td>
	</tr>
	</table>

	<table class="tablebg" width="100%" cellspacing="1">
	<tr class="row2">

			<td align="center" valign="middle">
				<a name="p94783"></a>
				<b class="postauthor">LoneKiltedNinja</b>
			</td>
			<td width="100%" height="25">
				<table width="100%" cellspacing="0">
				<tr>
				
					<td class="gensmall" width="100%"><div style="float: left;">&nbsp;<b>Post subject:</b> <a href="#p94783"></a></div><div style="float: right;"><a href="./viewtopic.php?p=94783#p94783"><img src="./styles/subsilver2/imageset/icon_post_target.gif" width="12" height="9" alt="Post" title="Post" /></a><b>Posted:</b> Tue May 29, 2012 7:54 pm&nbsp;</div></td>
				</tr>
				</table>
			</td>
		</tr>

		<tr class="row2">

			<td valign="top" class="profile">
				<table cellspacing="4" align="center" width="150">
			
				<tr>
					<td><img src="./styles/subsilver2/imageset/en/icon_user_offline.gif" alt="Offline" title="Offline" /></td>
				</tr>
			
				</table>

				<span class="postdetails">
					<br /><b>Joined:</b> Mon Jul 07, 2008 7:40 pm<br /><b>Posts:</b> 40
				</span>

			</td>
			<td valign="top">
				<table width="100%" cellspacing="5">
				<tr>
					<td>
					

						<div class="postbody">wait... that 0x01 in the $C1 is what I had as a mode selector, not the $0800.
<br />Pay no attention to my discussion of those bytes in the prior post.  Something odd is going on here- either the glove was already hot so $C0 and no "16-bit opcode" didn't actually change the operating mode, or else the operating mode defaults to my Mode 1, or else my fiddling with that nybble in prior testing caused it to read more or fewer subsequent bytes which just so happened to have mode-like effects in conjunction with other pre-heated config that didn't get overwritten, or... gah.  This makes an amount of almost-but-not-quite-but-really-kinda sense that I'm going to need to test and sleep on.</div>

					
						<div class="postbody"><br />_________________<br />Psych Software- games like they used to be, and some other stuff too!
<br /><!-- m --><a class="postlink" href="http://www.andrew.cmu.edu/~spkelly">http://www.andrew.cmu.edu/~spkelly</a><!-- m --></div>
					<br clear="all" /><br />

						<table width="100%" cellspacing="0">
						<tr valign="middle">
							<td class="gensmall" align="right">
							
							</td>
						</tr>
						</table>
					</td>
				</tr>
				</table>
			</td>
		</tr>

		<tr class="row2">

			<td class="profile"><strong><a href="#wrapheader">Top</a></strong></td>
			<td><div class="gensmall" style="float: left;">&nbsp;<a href="./memberlist.php?mode=viewprofile&amp;u=3570"><img src="./styles/subsilver2/imageset/en/icon_user_profile.gif" alt="Profile" title="Profile" /></a> &nbsp;</div> <div class="gensmall" style="float: right;">&nbsp;</div></td>
	
		</tr>

	<tr>
		<td class="spacer" colspan="2" height="1"><img src="images/spacer.gif" alt="" width="1" height="1" /></td>
	</tr>
	</table>

	<table class="tablebg" width="100%" cellspacing="1">
	<tr class="row1">

			<td align="center" valign="middle">
				<a name="p94788"></a>
				<b class="postauthor">LoneKiltedNinja</b>
			</td>
			<td width="100%" height="25">
				<table width="100%" cellspacing="0">
				<tr>
				
					<td class="gensmall" width="100%"><div style="float: left;">&nbsp;<b>Post subject:</b> <a href="#p94788"></a></div><div style="float: right;"><a href="./viewtopic.php?p=94788#p94788"><img src="./styles/subsilver2/imageset/icon_post_target.gif" width="12" height="9" alt="Post" title="Post" /></a><b>Posted:</b> Tue May 29, 2012 8:38 pm&nbsp;</div></td>
				</tr>
				</table>
			</td>
		</tr>

		<tr class="row1">

			<td valign="top" class="profile">
				<table cellspacing="4" align="center" width="150">
			
				<tr>
					<td><img src="./styles/subsilver2/imageset/en/icon_user_offline.gif" alt="Offline" title="Offline" /></td>
				</tr>
			
				</table>

				<span class="postdetails">
					<br /><b>Joined:</b> Mon Jul 07, 2008 7:40 pm<br /><b>Posts:</b> 40
				</span>

			</td>
			<td valign="top">
				<table width="100%" cellspacing="5">
				<tr>
					<td>
					

						<div class="postbody">Okay.  I still need to sleep, but I've tested enough to verify that nocash is on more the right track.  After a canonical init, there are enough warmed values in the system that the low nybble of that 16-bit-header byte functions as a de-facto "mode switch" likely by "reading" more and more not-actually-provided garbage from the aether while never getting around to overwriting the 8-bit values, meaning the mask bits persist.
<br />
<br />Likewise, when there is no 16-bit opcode provided, the most recent opcode used seems to persist even through re-plugs, yielding canonical behavior if the canonical 0x0800 was the last init.
<br />
<br />This means I'm going to need to rewrite my test tool to accept FAR more bytes if I want to properly test all the functionality of the glove.</div>

					
						<div class="postbody"><br />_________________<br />Psych Software- games like they used to be, and some other stuff too!
<br /><!-- m --><a class="postlink" href="http://www.andrew.cmu.edu/~spkelly">http://www.andrew.cmu.edu/~spkelly</a><!-- m --></div>
					<br clear="all" /><br />

						<table width="100%" cellspacing="0">
						<tr valign="middle">
							<td class="gensmall" align="right">
							
							</td>
						</tr>
						</table>
					</td>
				</tr>
				</table>
			</td>
		</tr>

		<tr class="row1">

			<td class="profile"><strong><a href="#wrapheader">Top</a></strong></td>
			<td><div class="gensmall" style="float: left;">&nbsp;<a href="./memberlist.php?mode=viewprofile&amp;u=3570"><img src="./styles/subsilver2/imageset/en/icon_user_profile.gif" alt="Profile" title="Profile" /></a> &nbsp;</div> <div class="gensmall" style="float: right;">&nbsp;</div></td>
	
		</tr>

	<tr>
		<td class="spacer" colspan="2" height="1"><img src="images/spacer.gif" alt="" width="1" height="1" /></td>
	</tr>
	</table>

	<table class="tablebg" width="100%" cellspacing="1">
	<tr class="row2">

			<td align="center" valign="middle">
				<a name="p94789"></a>
				<b class="postauthor">LoneKiltedNinja</b>
			</td>
			<td width="100%" height="25">
				<table width="100%" cellspacing="0">
				<tr>
				
					<td class="gensmall" width="100%"><div style="float: left;">&nbsp;<b>Post subject:</b> <a href="#p94789"></a></div><div style="float: right;"><a href="./viewtopic.php?p=94789#p94789"><img src="./styles/subsilver2/imageset/icon_post_target.gif" width="12" height="9" alt="Post" title="Post" /></a><b>Posted:</b> Tue May 29, 2012 9:00 pm&nbsp;</div></td>
				</tr>
				</table>
			</td>
		</tr>

		<tr class="row2">

			<td valign="top" class="profile">
				<table cellspacing="4" align="center" width="150">
			
				<tr>
					<td><img src="./styles/subsilver2/imageset/en/icon_user_offline.gif" alt="Offline" title="Offline" /></td>
				</tr>
			
				</table>

				<span class="postdetails">
					<br /><b>Joined:</b> Mon Jul 07, 2008 7:40 pm<br /><b>Posts:</b> 40
				</span>

			</td>
			<td valign="top">
				<table width="100%" cellspacing="5">
				<tr>
					<td>
					

						<div class="postbody">... and upon further FURTHER one-more-idea-before-bed testing, no, even that's half wrong.  Because when I go to $C2 for the header, say
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">06 C2 xx xx xx xx 00</div>
<br />which would technically be a valid 2 16-bit opcodes, 0 8-bit opcodes (keeping the old field masks), NONE of the bytes of what ought to be the "16-bit opcodes" seems to have any effect (other than, reading 2 opcodes, I can now jam the glove with 0x_F_F in the second opcode rather than just the first).
<br />
<br />So my best remaining guess is EITHER
<br />(a) in raw mode, that header nybble really ~is~ some kind of mode switch and the glove is smart enough to persist any existing setup even though it still half-heartedly reads and "processes" opcodes, or
<br />(b) the glove persists enough setup that if you give it screwy/incomplete/nonsense opcodes, it doesn't completely break, but all the same its behavior is undefined if it doesn't get a good and full and complete packet with nonzero-length opcode blocks for everything.
<br />
<br />And, although it makes NO technological sense given the wiring, peripherals should NOT be able to do this, I half suspect that something in the cached program on the glove causes the glove to somehow talk memory with the NES &gt;.&lt;  I could <em>swear</em> the mysterious inexplicable sprite glitches I occasionally see in my glove demos have changed since I started throwing odd over/underdefined over/undersized packets at the glove, and one re-plug after a particularly tenuous config even caused my system to lock/reset for the first time since I got the glove (when I first plugged it in, it was a good dozen replug/resets before anything would run, even commercial titles).</div>

					
						<div class="postbody"><br />_________________<br />Psych Software- games like they used to be, and some other stuff too!
<br /><!-- m --><a class="postlink" href="http://www.andrew.cmu.edu/~spkelly">http://www.andrew.cmu.edu/~spkelly</a><!-- m --></div>
					<br clear="all" /><br />

						<table width="100%" cellspacing="0">
						<tr valign="middle">
							<td class="gensmall" align="right">
							
							</td>
						</tr>
						</table>
					</td>
				</tr>
				</table>
			</td>
		</tr>

		<tr class="row2">

			<td class="profile"><strong><a href="#wrapheader">Top</a></strong></td>
			<td><div class="gensmall" style="float: left;">&nbsp;<a href="./memberlist.php?mode=viewprofile&amp;u=3570"><img src="./styles/subsilver2/imageset/en/icon_user_profile.gif" alt="Profile" title="Profile" /></a> &nbsp;</div> <div class="gensmall" style="float: right;">&nbsp;</div></td>
	
		</tr>

	<tr>
		<td class="spacer" colspan="2" height="1"><img src="images/spacer.gif" alt="" width="1" height="1" /></td>
	</tr>
	</table>

	<table class="tablebg" width="100%" cellspacing="1">
	<tr class="row1">

			<td align="center" valign="middle">
				<a name="p94835"></a>
				<b class="postauthor">nocash</b>
			</td>
			<td width="100%" height="25">
				<table width="100%" cellspacing="0">
				<tr>
				
					<td class="gensmall" width="100%"><div style="float: left;">&nbsp;<b>Post subject:</b> <a href="#p94835"></a></div><div style="float: right;"><a href="./viewtopic.php?p=94835#p94835"><img src="./styles/subsilver2/imageset/icon_post_target.gif" width="12" height="9" alt="Post" title="Post" /></a><b>Posted:</b> Wed May 30, 2012 1:22 pm&nbsp;</div></td>
				</tr>
				</table>
			</td>
		</tr>

		<tr class="row1">

			<td valign="top" class="profile">
				<table cellspacing="4" align="center" width="150">
			
				<tr>
					<td><img src="./styles/subsilver2/imageset/en/icon_user_offline.gif" alt="Offline" title="Offline" /></td>
				</tr>
			
				</table>

				<span class="postdetails">
					<br /><b>Joined:</b> Fri Feb 24, 2012 12:09 pm<br /><b>Posts:</b> 72
				</span>

			</td>
			<td valign="top">
				<table width="100%" cellspacing="5">
				<tr>
					<td>
					

						<div class="postbody"><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I do recall seeing a variety of "how to take your glove apart" docs in my own research which may have info on the innards</div>
<br />Aren't those docs just saying that it has "four screws"? Not the type of component list that I was looking for... I've spent <strong>hours</strong> on searching, and no matter what I was doing, the "best" results for glove+cpu have been Arduino, ARM, and Intel Dual Core. Well, and of course, that damn "four screws".
<br />
<br />But wait, when I was more than endless frustated, I started guessing: Maybe a 8031/8051? That led to <!-- m --><a class="postlink" href="http://www.electrongate.com/wpd/page7.html">http://www.electrongate.com/wpd/page7.html</a><!-- m --> Okay, Miracle Piano with 80C31 sounds just right, the SGS J004 is just that: a miracle (no clue what it is, but the piano is a different story).
<br />And, a COPS888CL in the glove? Hmmmm, let's remove the "S" and "CL" then it'd be COP888, then we have this: Datasheets (eg. at <!-- m --><a class="postlink" href="http://www.datasheetarchive.com/">http://www.datasheetarchive.com/</a><!-- m -->), and two webpages that do actually talk about the glove:
<br />
<br />Here, <!-- m --><a class="postlink" href="http://www.embeddedrelated.com/usenet/embedded/show/118004-1.php">http://www.embeddedrelated.com/usenet/e ... 8004-1.php</a><!-- m --> somebody has tried to extract the BIOS ROM from the glove - which seems to be difficult; so far it may be possible only by decapping the chip.
<br />
<br />And a long mailing list log <!-- m --><a class="postlink" href="http://psg.mtu.edu/pub/tf/programming/gla-91o">http://psg.mtu.edu/pub/tf/programming/gla-91o</a><!-- m --> there's plenty of messy text in there, I haven't read all of it. Only Tim Deagan's cpu pinouts:
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">pin #&nbsp; &nbsp;cop888&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; PowerGlove<br />-----------------------------------------------<br />1&nbsp; &nbsp; &nbsp; &nbsp;C2,I/O, , ,&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;INPUT C on 4021<br />2&nbsp; &nbsp; &nbsp; &nbsp;C3,I/O, , ,&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;INPUT D on 4021<br />3&nbsp; &nbsp; &nbsp; &nbsp;G4,I/O,SO, ,&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ?<br />4&nbsp; &nbsp; &nbsp; &nbsp;G5,I/O,SK, ,&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; DATA LATCH<br />5&nbsp; &nbsp; &nbsp; &nbsp;G6,I,SI, ,ME&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; DATA CLOCK<br />6&nbsp; &nbsp; &nbsp; &nbsp;G7,I/CKO,HALT RESTART, ,XTAL<br />7&nbsp; &nbsp; &nbsp; &nbsp;CKI, , , ,&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; XTAL<br />8&nbsp; &nbsp; &nbsp; &nbsp;Vcc&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;+5VDC<br />9&nbsp; &nbsp; &nbsp; &nbsp;I0,I, , ,&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;R1 pullup,SW8&#40;Bdn&#41;,SW0,RGHT<br />10&nbsp; &nbsp; &nbsp; I1,I, , ,&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;R2 pullup,SW9&#40;Boff&#41;,SW1&#40;Aup&#41;,LEFT<br />11&nbsp; &nbsp; &nbsp; I2,I, , ,&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;R3 pullup,SW2&#40;Aon&#41;,ENTER,DOWN<br />12&nbsp; &nbsp; &nbsp; I3,I, , ,&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;R4 pullup,SW3&#40;Bup&#41;,PROG,UP<br />13&nbsp; &nbsp; &nbsp; I4,I, , ,&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;R5 pullup,SW4&#40;Bon&#41;,START<br />14&nbsp; &nbsp; &nbsp; I5,I, , ,&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;R6 pullup,SW5&#40;SloMo&#41;,SELECT<br />15&nbsp; &nbsp; &nbsp; I6,I, , ,&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;R7 pullup,SW6&#40;Adn&#41;,B<br />16&nbsp; &nbsp; &nbsp; I7,I, , ,&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;R8 pullup,SW7&#40;Aoff&#41;,A<br />17&nbsp; &nbsp; &nbsp; L0,I/O,MIWU, ,&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; R26 gnd,THUMB<br />18&nbsp; &nbsp; &nbsp; L1,I/O,MIWU, ,&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; R27 gnd,INDEX<br />19&nbsp; &nbsp; &nbsp; L2,I/O,MIWU, ,&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; R28 gnd,MIDDLE<br />20&nbsp; &nbsp; &nbsp; L3,I/O,MIWU, ,&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; R29 gnd,RING<br />21&nbsp; &nbsp; &nbsp; C4,I/O, , ,&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;?<br />22&nbsp; &nbsp; &nbsp; C5,I/O, , ,&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;SW0-7 &amp; CENTER<br />23&nbsp; &nbsp; &nbsp; C6,I/O, , ,&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;ENTER<br />24&nbsp; &nbsp; &nbsp; C7,I/O, , ,&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;GND<br />25&nbsp; &nbsp; &nbsp; L4,I/O,MIWU,T2A,&nbsp; &nbsp; &nbsp; &nbsp; CLK on 4021<br />26&nbsp; &nbsp; &nbsp; L5,I/O,MIWU,T2B,&nbsp; &nbsp; &nbsp; &nbsp; RC net to LBlu,-&gt;|- red finger wires<br />27&nbsp; &nbsp; &nbsp; L6,I/O,MIWU, ,&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ?<br />28&nbsp; &nbsp; &nbsp; L7,I/O,MIWU, ,&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; GRY from top of glove &#40;XMTR2 ?&#41;<br />29&nbsp; &nbsp; &nbsp; D0,O, , ,I/O BIT 0&nbsp; &nbsp; &nbsp; YEL from top of glove &#40;XMTR1&#41;<br />30&nbsp; &nbsp; &nbsp; D1,O, , ,I/O BIT 1&nbsp; &nbsp; &nbsp; GRN from top of glove &#40;XMTR2&#41;<br />31&nbsp; &nbsp; &nbsp; D2,O, , ,I/O BIT 2&nbsp; &nbsp; &nbsp; BLU from top of glove &#40;BEEPER&#41;<br />32&nbsp; &nbsp; &nbsp; D3,O, , ,I/O BIT 3&nbsp; &nbsp; &nbsp; PUR from top of glove &#40;XMTR1 ?&#41;<br />33&nbsp; &nbsp; &nbsp; D4,O, , ,I/O BIT 4&nbsp; &nbsp; &nbsp; INPUT E on 4021<br />34&nbsp; &nbsp; &nbsp; D5,O, , ,I/O BIT 5&nbsp; &nbsp; &nbsp; INPUT F on 4021<br />35&nbsp; &nbsp; &nbsp; D6,O, , ,I/O BIT 6&nbsp; &nbsp; &nbsp; INPUT G on 4021<br />36&nbsp; &nbsp; &nbsp; D7,O, , ,I/O BIT 7&nbsp; &nbsp; &nbsp; INPUT H on 4021<br />37&nbsp; &nbsp; &nbsp; GND&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;GND<br />38&nbsp; &nbsp; &nbsp; RESET#&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ?<br />39&nbsp; &nbsp; &nbsp; G0,I/O,INT, ,ALE&nbsp; &nbsp; &nbsp; &nbsp; ?<br />40&nbsp; &nbsp; &nbsp; G1,WDOUT, , ,&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;?<br />41&nbsp; &nbsp; &nbsp; G2,I/O,T1B, ,WR#&nbsp; &nbsp; &nbsp; &nbsp; BRN to junct box &#40;pin1 LM324 near rcvrs&#41;<br />42&nbsp; &nbsp; &nbsp; G3,I/O,T1A, ,RD#&nbsp; &nbsp; &nbsp; &nbsp; ORG to junct box &#40;RCs to LM324 nr rcvrs&#41;<br />43&nbsp; &nbsp; &nbsp; C0,I/O, , ,&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;INPUT A on 4021<br />44&nbsp; &nbsp; &nbsp; C1,I/O, , ,&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;INPUT B on 4021<br /></div>
<br />Note: The exact part number of the cpu seems to be unclear for whatever reason (maybe a custom variant, or maybe it's only a black blob?). The pin names in the middle column are as for a COP888CLMH, but Tim mentioned that the glove might actually use a different COP888xxx variant. Anyways, the overall pinouts are probably correct, and it looks as if he knew what he was doing.
<br />
<br />Don't know if that info will be of any use. But I am feeling much better if I know <strong>what</strong> I am rev-engineering. The known chipset has now increased from poor 0 chips to at least 3 chips: COP888, 4021, LM324.</div>

					<br clear="all" /><br />

						<table width="100%" cellspacing="0">
						<tr valign="middle">
							<td class="gensmall" align="right">
							
							</td>
						</tr>
						</table>
					</td>
				</tr>
				</table>
			</td>
		</tr>

		<tr class="row1">

			<td class="profile"><strong><a href="#wrapheader">Top</a></strong></td>
			<td><div class="gensmall" style="float: left;">&nbsp;<a href="./memberlist.php?mode=viewprofile&amp;u=5211"><img src="./styles/subsilver2/imageset/en/icon_user_profile.gif" alt="Profile" title="Profile" /></a> &nbsp;</div> <div class="gensmall" style="float: right;">&nbsp;</div></td>
	
		</tr>

	<tr>
		<td class="spacer" colspan="2" height="1"><img src="images/spacer.gif" alt="" width="1" height="1" /></td>
	</tr>
	</table>

	<table class="tablebg" width="100%" cellspacing="1">
	<tr class="row2">

			<td align="center" valign="middle">
				<a name="p94866"></a>
				<b class="postauthor">nocash</b>
			</td>
			<td width="100%" height="25">
				<table width="100%" cellspacing="0">
				<tr>
				
					<td class="gensmall" width="100%"><div style="float: left;">&nbsp;<b>Post subject:</b> <a href="#p94866"></a></div><div style="float: right;"><a href="./viewtopic.php?p=94866#p94866"><img src="./styles/subsilver2/imageset/icon_post_target.gif" width="12" height="9" alt="Post" title="Post" /></a><b>Posted:</b> Thu May 31, 2012 12:03 pm&nbsp;</div></td>
				</tr>
				</table>
			</td>
		</tr>

		<tr class="row2">

			<td valign="top" class="profile">
				<table cellspacing="4" align="center" width="150">
			
				<tr>
					<td><img src="./styles/subsilver2/imageset/en/icon_user_offline.gif" alt="Offline" title="Offline" /></td>
				</tr>
			
				</table>

				<span class="postdetails">
					<br /><b>Joined:</b> Fri Feb 24, 2012 12:09 pm<br /><b>Posts:</b> 72
				</span>

			</td>
			<td valign="top">
				<table width="100%" cellspacing="5">
				<tr>
					<td>
					

						<div class="postbody"><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">traditional math-class x/y</div><br />Thanks for checking! Added glove emulation in my no$nes emulator yesterday (via dual-analog gamepad for X,Y,Z,Rotation axis). That also confirmed that your directions are correct (tested with the glove ball game).<br />The thing that was puzzling me was that the direction bits in 16bit opcodes don't match up with the sign bits of the analog values...<br />Oh, oh, oh, I think I got them all wrong, and left/right are vice versa in the opcodes! I have been using the Gyruss program description (from glove manual) as reference. It's a bit confusing, but essentially it does say "hand clockwise = ship clockwise = joypad left". But now it seems to me as if they got that wrong, and did actually mean "hand clockwise = ship anti-clockwise = joypad right".<br />The only other reference to left/right is the Knight Rider program description (which is actually vice-versa as the Gyruss one). And as third reference, treating 8bit opcodes as 81h=right and 82h=left would also better match to the bit-ordering in NES joypad shift register. And accordingly, in 16bit opcodes, bit2 would be 0=right, 1=left.<br />EDIT: I've EDITed the opcode descriptions (in the post from 24 Feb) that way; I hope left/right directions are now correct.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">&gt; Packet 0Ch must be something for detection and/or main menu controls.<br /></div>It results in the glove not sending any data<br /></div><br />What do you by "not sending any data"?<br />Do you receive all 00h bytes, or all FFh bytes, or something else?<br />Does the data change when pressing dpad/select/start buttons?<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I've tried reading precisely the requested number plus header. It makes the LEDs unhappy</div><br />Unhappy LEDs? I've never seen a glove in action, so I don't know how happy they can be... From the manual, in joypad-emulation mode, the upper four LEDs should indicate DPAD directions. And lower two LEDs are unclear: either the plain "rapid fire" PulseA/PulseB generators... or more probably: the Button A/B signals (ANDed with the pulse generators if they are used/enabled).<br /><br />And in analog mode, the manual doesn't seem to say anything there. From Tim's pin-outs, the joypad shift register (4021) seems to be located right in the glove and then passed to the NES. If the LEDs are squeezed through the same shift register... then they should reflect the most recently transferred data bits. Does that match up with what you are seeing on hardware?<br /><br />If you are reading the glove the "official" way: Last received byte in frames with packet should be 3Fh (error flags all good) of which LSB (Fh) would be upper four LEDs. And in frames without new packet available it should be... well, that "not ready byte" - which is STILL UNKNOWN, mind that!<br /><br />Can you test what value that "not ready byte" has? Please! <br />At NMI: Read one packet (ready_byte=A0h, plus next 9 bytes).<br />At next NMI: Read one byte (not_ready_byte = has WHAT value?)<br />At next NMI: Read one byte (another not_ready_byte = has SAME value?)<br /><br />EDIT: Another idea: Maybe there is no "not_ready" byte at all - and the glove just returns normal joypad data when it isn't ready. In that case, the byte should change when you press DPAD/SEL/STA/A/B on control pad... can you see any such effects in the "not_ready" byte?<br /><br />Ah, and back to the LEDs. You could test the shift-register theory if you read the analog data in slow-motion (one bit per minute or so) then you should see bits moving this way: RightLED --&gt; LeftLED --&gt; LowerLED --&gt; UpperLED.<br />Of course, such slow-motion might cause timeouts in the glove, so it may shift-in trash; but the bits that were already in the shift-register (before starting slow-motion transfer) should be still visible.<br />Or, to make things more simple: One could use a multimeter to check if the LEDs are connected to the joypad shift-register outputs.<br />EDIT: Or just cover the speakers/mics with your hand, and check if the Error Flag bits change the corresponding LEDs bits. Bit0=Right LED and so on.<br /><br />Btw. do you have the Super Glove Ball game? And checked how the LEDs should "officially" look like in analog mode?<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">survive power off (have you tested this??)<br /></div><br />No, I still don't have a glove. The survive 30-second-power-off feature is described in the manual; and the bit is set only in packets that do use that feature. And you also mentioned something about "glove doesn't forget data until powered-off TWICE" or so. I guess the bit is causing that effect.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">or if you got your byte order reversed (which, honestly, I'd architecturally half-suspect; little-endian makes for much simpler chip design)</div><br />The command "cc" and data "dd" bytes just look nicer in 16bit "ccdd" form than in "ddcc" form. In reality, they seem to be two 8bit values. The 16bit notation is just for easy of discussion: "Bit15" is a bit shorter than "Bit7 of 1st Byte of the opcode".<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">04 C0 02 FF 01</div><br />Risky. My theory about dummy opcodes was that there must be at least one opcode. With the long delay that you are getting, it sounds as like an 8bit counter decremented till zero; ie. treated as 256 opcodes in this case. Interesting that the glove survives it (I'd have expected it to fill RAM by 256 result bytes).<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">06 C2 xx xx xx xx 00</div><br />Risky, too. Maybe "06 C2 xx xx xx xx 02 yy yy" would be more stable. You could change the "yy yy" bytes, and then check if the glove does mask return values accordingly.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">the mysterious inexplicable sprite glitches</div><br />After adding the glove emulation yesterday, I started getting sprite glitches in your test program, too. A flickering character, usually showing up near middle of screen, and sometimes at other locations.<br />Must be a bug in your program - are you trying to access SPR-RAM outside of vblank, maybe?<br /><br />EDIT: Did you check with no$nes vram viewer (or similar debugger)? You have 61 unused OBJs, two used OBJs with "2P" symbols... and one garbage OBJ (without glove emulation it's an "invisble" tile, located in middle of screen; the position changes "randomly" when you press joypad buttons; can been seen when moving the mouse on the lower-right OBJ cell).<br /><br />---<br /><br />Oh, and my experiences with Super Glove Ball &amp; emulated glove: It works somehow strange.<br /><br />First of, the game doesn't use the full 8bit range for X,Y,Z. Only these ranges:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">X = -40h..+3Fh &#40;128 steps, out of 256 possible steps&#41;<br />Y = -28h..+27h &#40;80 steps, out of 256 possible steps&#41;<br />Z = -18h..+01h &#40;20 steps, out of 256 possible steps&#41;<br /></div><br />This may be just subject to how the game is programmed - the glove itself does probably support full range of -80h..+7Fh (all 256 steps) on X/Y/Z ... right?<br /><br />Btw. does the glove calibrate itself on farthest-seen X,Y,Z values? In similar fashion as how you've described it for flex sensors?<br /><br />And back to Super Glove Ball. When moving the glove (or actually: my gamepad's analog sticks): The sprite on the screen goes terror. After some hours, I figured out that it's a bug in the game, not in my emulation.<br /><br />Since the glove is too slow to return data in every frame, the programmer did have the "great" idea to interpolate data by moving the glove like so in each frame:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; HalfDistance = &#40;GlovePosition - SpritePosition&#41;/2<br />&nbsp; SpritePosition = SpritePosition + HalfDistance<br /></div><br />Now, how is it possible to get that wrong? It is possible:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; sbc&nbsp; a,&#91;xx&#93;&nbsp; &nbsp;;parameters are 8bit unsigned, result is 9bits signed<br />&nbsp; cmp&nbsp; a,80&nbsp; &nbsp; &nbsp;;outch, treats bit7 as sign-bit<br />&nbsp; rcr&nbsp; a&nbsp; &nbsp; &nbsp; &nbsp; ;make HalfDistance with garbage in sign-bit<br /></div><br />Correct would be, of course:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; sbc&nbsp; a,&#91;xx&#93;&nbsp; &nbsp;;parameters are 8bit unsigned, result is 9bits signed<br />&nbsp; rcr&nbsp; a&nbsp; &nbsp; &nbsp; &nbsp; ;make HalfDistance, shift-in cy=&#40;not sign&#41;<br />&nbsp; xor&nbsp; a,80&nbsp; &nbsp; &nbsp;;fix inversion of sign-bit<br /></div>
<br />If somebody wants to patch/bugfix the game, the opcodes are found at A52Ah (X) and A4EFh (Y).
<br />
<br />In practice, the bugs show up as so: For X: FAST glove movements on RIGHT side, cause sprite to move in LEFT half of screen. And for Y: FAST movement from BOTTOM to TOP is ignored (the sprite STAYS at bottom of screen, no matter how much and how long you are moving up).
<br />
<br />But, I am doing that FAST movements with a thumb-flip on the gamepad sticks, which is apparently faster than expected by the programmer. Maybe, you can't move the glove that fast in real life (unless you are Bruce Lee), and thus won't ever see the problem on real hardware...
<br />
<br />Does somebody have the Super Glove Ball game &amp; a glove, and can test if that fast-motion-bug appears on real hardware, too?</div>

					<br clear="all" /><br />

						<table width="100%" cellspacing="0">
						<tr valign="middle">
							<td class="gensmall" align="right">
							
							</td>
						</tr>
						</table>
					</td>
				</tr>
				</table>
			</td>
		</tr>

		<tr class="row2">

			<td class="profile"><strong><a href="#wrapheader">Top</a></strong></td>
			<td><div class="gensmall" style="float: left;">&nbsp;<a href="./memberlist.php?mode=viewprofile&amp;u=5211"><img src="./styles/subsilver2/imageset/en/icon_user_profile.gif" alt="Profile" title="Profile" /></a> &nbsp;</div> <div class="gensmall" style="float: right;">&nbsp;</div></td>
	
		</tr>

	<tr>
		<td class="spacer" colspan="2" height="1"><img src="images/spacer.gif" alt="" width="1" height="1" /></td>
	</tr>
	</table>

	<table class="tablebg" width="100%" cellspacing="1">
	<tr class="row1">

			<td align="center" valign="middle">
				<a name="p94945"></a>
				<b class="postauthor">LoneKiltedNinja</b>
			</td>
			<td width="100%" height="25">
				<table width="100%" cellspacing="0">
				<tr>
				
					<td class="gensmall" width="100%"><div style="float: left;">&nbsp;<b>Post subject:</b> <a href="#p94945"></a></div><div style="float: right;"><a href="./viewtopic.php?p=94945#p94945"><img src="./styles/subsilver2/imageset/icon_post_target.gif" width="12" height="9" alt="Post" title="Post" /></a><b>Posted:</b> Sat Jun 02, 2012 3:27 pm&nbsp;</div></td>
				</tr>
				</table>
			</td>
		</tr>

		<tr class="row1">

			<td valign="top" class="profile">
				<table cellspacing="4" align="center" width="150">
			
				<tr>
					<td><img src="./styles/subsilver2/imageset/en/icon_user_offline.gif" alt="Offline" title="Offline" /></td>
				</tr>
			
				</table>

				<span class="postdetails">
					<br /><b>Joined:</b> Mon Jul 07, 2008 7:40 pm<br /><b>Posts:</b> 40
				</span>

			</td>
			<td valign="top">
				<table width="100%" cellspacing="5">
				<tr>
					<td>
					

						<div class="postbody">I was somewhat preoccupied last weekend and this work week, but I've finally had tome to start applying some of your findings.  The glove devkit has been updated to allow init packets of up to 32 bytes and the readme has been substantially revised with a bit cleaner presentation of known info, a bit more thorough discussion of supposed info, and a new couple pages worth of your findings on the Program Mode.
<br />
<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Unhappy LEDs? I've never seen a glove in action, so I don't know how happy they can be... From the manual, in joypad-emulation mode, the upper four LEDs should indicate DPAD directions. And lower two LEDs are unclear: either the plain "rapid fire" PulseA/PulseB generators... or more probably: the Button A/B signals (ANDed with the pulse generators if they are used/enabled). <br /><br />And in analog mode, the manual doesn't seem to say anything there. From Tim's pin-outs, the joypad shift register (4021) seems to be located right in the glove and then passed to the NES. If the LEDs are squeezed through the same shift register... then they should reflect the most recently transferred data bits. Does that match up with what you are seeing on hardware? <br /><br />If you are reading the glove the "official" way: Last received byte in frames with packet should be 3Fh (error flags all good) of which LSB (Fh) would be upper four LEDs. And in frames without new packet available it should be... well, that "not ready byte" - which is STILL UNKNOWN, mind that! <br /><br />Can you test what value that "not ready byte" has? Please! <br />At NMI: Read one packet (ready_byte=A0h, plus next 9 bytes). <br />At next NMI: Read one byte (not_ready_byte = has WHAT value?) <br />At next NMI: Read one byte (another not_ready_byte = has SAME value?) <br /><br />EDIT: Another idea: Maybe there is no "not_ready" byte at all - and the glove just returns normal joypad data when it isn't ready. In that case, the byte should change when you press DPAD/SEL/STA/A/B on control pad... can you see any such effects in the "not_ready" byte?</div><br />If there's a byte that returns the LEDs, I haven't seen it (and I did go looking, particularly when I noticed one field towards the very end of the return which changed roughly in sync with the LEDs).  In raw mode, both when Glove Ball does it and when I do it, all 6 LEDs on the frame blink on and off in pretty-close-to-unison whenever the glove is polled.  In program modes, they do reflect whether the glove has identified and is sending directional/A/B gestures.<br /><br />And after you read the last field you asked the glove for in the init, the glove returns continuous FFs (post-inversion, so the raw line data would be 00s) until the header byte of the next packet.  Hence my observation that when Glove Ball requests 9 fields but only reads 8 of them, that first read on the next frame is going to return the 9th field, and the read following that would either return the next header (if the glove is ready) or FF (more likely, since giving the glove only 3 frames for 9 fields is cutting it close).<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">If you are reading the glove the "official" way: Last received byte in frames with packet should be 3Fh (error flags all good) of which LSB (Fh) would be upper four LEDs. And in frames without new packet available it should be... well, that "not ready byte" - which is STILL UNKNOWN, mind that! </div><br />"Error flags all good?"  Where are you getting that?  I see no evidence of a consistent final byte of the packet other than whatever field you ask for.  The canonical glove ball packet asks for 9 fields, the last of which is the occlusion data- 2 0s and 6 bits which are 1 if the corresponding speaker-mic pairing is unobstructed.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">The survive 30-second-power-off feature is described in the manual; and the bit is set only in packets that do use that feature. And you also mentioned something about "glove doesn't forget data until powered-off TWICE" or so. I guess the bit is causing that effect.</div><br />Good observation.  I never really saw the joypad-program modes as practically playable, so I didn't catch that level of detail in the manual.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">My theory about dummy opcodes was that there must be at least one opcode. With the long delay that you are getting, it sounds as like an 8bit counter decremented till zero; ie. treated as 256 opcodes in this case. Interesting that the glove survives it (I'd have expected it to fill RAM by 256 result bytes). </div><br />Actually, I spoke too soon when reporting that.  I've gotten it with no delay now as well.  But yes, I would advise at least one opcode in each block to avoid undefined behavior.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Risky, too. Maybe "06 C2 xx xx xx xx 02 yy yy" would be more stable. You could change the "yy yy" bytes, and then check if the glove does mask return values accordingly.</div><br />There's commentary on this in the new readme.  I'm now fully convinced the raw-init packet follows the same basic structure as the program-inits, but it's beyond me what the 16-bit opcodes do.  What I was previously identifying as "program modes" were almost certainly the glove getting malformed packets of increasing insufficiency, and thus reading increasingly further into some internal memory bank and treating that cold-start garbage as opcode.  But as soon as I start sending well-formed packets, even using the data from the malformed ones as a starting point, the glove goes into more or less its canonical raw operation.  But the undocumented "mode" behavior does still appear to be deterministic once I let the glove cool and restart, so I'm kinda curious whether it's identical across all gloves or just a function of silicon manufacturing that will differ from unit to unit with the particular electrical properties at startup...  Regardless, the fact that certain previously-dubbed "modes" contain complex-behavior fields like "gesture" which aren't present in the canonical configuration tells me there's something programmatic going on if only we could figure out what data is being used to engage it.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">EDIT: Did you check with no$nes vram viewer (or similar debugger)? You have 61 unused OBJs, two used OBJs with "2P" symbols... and one garbage OBJ (without glove emulation it's an "invisble" tile, located in middle of screen; the position changes "randomly" when you press joypad buttons; can been seen when moving the mouse on the lower-right OBJ cell).</div><br />I develop on Mac, so I work against Nestopia which is highly accurate but has no debugger.  I do indeed use only 3 of the 64 hardware sprites- 2 are pointers marked "2p" (to suggest anyone who hasn't read the manual to try the 2nd controller) and the third, in canonical operation, will move in X/Y with the glove (remember as you implement your emulator that the data is 2's complement with 0 being center and -128 to 127 being the extremes), change tile from 0 through B with rotation, and change color with the status of the first few fingers.  If you're only using joypad input, yes, movement will appear random because the joypad buttons will be read into every field the tester expects to contain glove return data.<br />The glitches I'm seeing are things like e.g. the red 2p sprite flickering by +/- 3 or so pixels every frame when ever the position-tracker sprite gets to certain areas of the screen.  In Nesglovphone for awhile I had issues of sprites disappearing entirely.  My first suspicion was overrunning vblank or not zeroing $2003, but what ended up solving the problem was changing which sprite indices I used.  Which is frustrating, but leads me to think it might be an issue with the PowerPak devcart, which does claim to give some games sprite issues (and gives other games other issues which it doesn't even claim).<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Btw. does the glove calibrate itself on farthest-seen X,Y,Z values? In similar fashion as how you've described it for flex sensors?</div><br />I do not believe so.  I don't know what goes on under the hood, but it seems to track fairly consistently wherever, up until it loses contact with the sensors.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Does somebody have the Super Glove Ball game &amp; a glove, and can test if that fast-motion-bug appears on real hardware, too?</div>
<br />I can get some odd wrap-around errors by e.g. holding the glove to screen-left and then slamming it right, but the glove always gets back to the right position within a few frames.  Also of note, the glove-on-screen only uses the middle region of the screen, so it makes some sense that it would clamp the values after reading them.</div>

					<br clear="all" /><br />

						<table width="100%" cellspacing="0">
						<tr valign="middle">
							<td class="gensmall" align="right">
							
							</td>
						</tr>
						</table>
					</td>
				</tr>
				</table>
			</td>
		</tr>

		<tr class="row1">

			<td class="profile"><strong><a href="#wrapheader">Top</a></strong></td>
			<td><div class="gensmall" style="float: left;">&nbsp;<a href="./memberlist.php?mode=viewprofile&amp;u=3570"><img src="./styles/subsilver2/imageset/en/icon_user_profile.gif" alt="Profile" title="Profile" /></a> &nbsp;</div> <div class="gensmall" style="float: right;">&nbsp;</div></td>
	
		</tr>

	<tr>
		<td class="spacer" colspan="2" height="1"><img src="images/spacer.gif" alt="" width="1" height="1" /></td>
	</tr>
	</table>

	<table class="tablebg" width="100%" cellspacing="1">
	<tr class="row2">

			<td align="center" valign="middle">
				<a name="p94946"></a>
				<b class="postauthor">LoneKiltedNinja</b>
			</td>
			<td width="100%" height="25">
				<table width="100%" cellspacing="0">
				<tr>
				
					<td class="gensmall" width="100%"><div style="float: left;">&nbsp;<b>Post subject:</b> <a href="#p94946"></a></div><div style="float: right;"><a href="./viewtopic.php?p=94946#p94946"><img src="./styles/subsilver2/imageset/icon_post_target.gif" width="12" height="9" alt="Post" title="Post" /></a><b>Posted:</b> Sat Jun 02, 2012 4:08 pm&nbsp;</div></td>
				</tr>
				</table>
			</td>
		</tr>

		<tr class="row2">

			<td valign="top" class="profile">
				<table cellspacing="4" align="center" width="150">
			
				<tr>
					<td><img src="./styles/subsilver2/imageset/en/icon_user_offline.gif" alt="Offline" title="Offline" /></td>
				</tr>
			
				</table>

				<span class="postdetails">
					<br /><b>Joined:</b> Mon Jul 07, 2008 7:40 pm<br /><b>Posts:</b> 40
				</span>

			</td>
			<td valign="top">
				<table width="100%" cellspacing="5">
				<tr>
					<td>
					

						<div class="postbody">Also, the COP888EK looks mildly promising.  The CL datasheet I found lists that half-ish of the I pins are left dangling.  The EK has a full set of I pins which double as analog comparator inputs (although that doesn't appear to be how they are wired to be used if your chart is right).  At very least, it's interesting to notice that the I-pins, while mapped to button inputs, sound to be on analog pull-up circuits, which would be consistent with my quick-skim of the EK.</div>

					
						<div class="postbody"><br />_________________<br />Psych Software- games like they used to be, and some other stuff too!
<br /><!-- m --><a class="postlink" href="http://www.andrew.cmu.edu/~spkelly">http://www.andrew.cmu.edu/~spkelly</a><!-- m --></div>
					<br clear="all" /><br />

						<table width="100%" cellspacing="0">
						<tr valign="middle">
							<td class="gensmall" align="right">
							
							</td>
						</tr>
						</table>
					</td>
				</tr>
				</table>
			</td>
		</tr>

		<tr class="row2">

			<td class="profile"><strong><a href="#wrapheader">Top</a></strong></td>
			<td><div class="gensmall" style="float: left;">&nbsp;<a href="./memberlist.php?mode=viewprofile&amp;u=3570"><img src="./styles/subsilver2/imageset/en/icon_user_profile.gif" alt="Profile" title="Profile" /></a> &nbsp;</div> <div class="gensmall" style="float: right;">&nbsp;</div></td>
	
		</tr>

	<tr>
		<td class="spacer" colspan="2" height="1"><img src="images/spacer.gif" alt="" width="1" height="1" /></td>
	</tr>
	</table>

	<table class="tablebg" width="100%" cellspacing="1">
	<tr class="row1">

			<td align="center" valign="middle">
				<a name="p94948"></a>
				<b class="postauthor" style="color: #AA0000">tepples</b>
			</td>
			<td width="100%" height="25">
				<table width="100%" cellspacing="0">
				<tr>
				
					<td class="gensmall" width="100%"><div style="float: left;">&nbsp;<b>Post subject:</b> <a href="#p94948"></a></div><div style="float: right;"><a href="./viewtopic.php?p=94948#p94948"><img src="./styles/subsilver2/imageset/icon_post_target.gif" width="12" height="9" alt="Post" title="Post" /></a><b>Posted:</b> Sat Jun 02, 2012 4:25 pm&nbsp;</div></td>
				</tr>
				</table>
			</td>
		</tr>

		<tr class="row1">

			<td valign="top" class="profile">
				<table cellspacing="4" align="center" width="150">
			
				<tr>
					<td><img src="./styles/subsilver2/imageset/en/icon_user_offline.gif" alt="Offline" title="Offline" /></td>
				</tr>
			
				<tr>
					<td><img src="http://pineight.com/nes/terrible/PSRFX.png" width="100" height="56" alt="User avatar" /></td>
				</tr>
			
				</table>

				<span class="postdetails">
					<br /><b>Joined:</b> Sun Sep 19, 2004 11:12 pm<br /><b>Posts:</b> 9045<br /><b>Location:</b> NE Indiana, USA (NTSC)
				</span>

			</td>
			<td valign="top">
				<table width="100%" cellspacing="5">
				<tr>
					<td>
					

						<div class="postbody"><div class="quotetitle">LoneKiltedNinja wrote:</div><div class="quotecontent">What I was previously identifying as "program modes" were almost certainly the glove getting malformed packets of increasing insufficiency, and thus reading increasingly further into some internal memory bank and treating that cold-start garbage as opcode.  But as soon as I start sending well-formed packets, even using the data from the malformed ones as a starting point, the glove goes into more or less its canonical raw operation.</div><br />Once we figure out more about the glove's operation, this might end up being the beginning of a way to dump the internal ROM.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I develop on Mac, so I work against Nestopia which is highly accurate but has no debugger.</div><br />FCEUX for Windows works without sound in Wine for Ubuntu. Does FCEUX for Windows work in Wine for Intel Mac?<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">My first suspicion was overrunning vblank or not zeroing $2003, but what ended up solving the problem was changing which sprite indices I used.  Which is frustrating, but leads me to think it might be an issue with the PowerPak devcart, which does claim to give some games sprite issues (and gives other games other issues which it doesn't even claim).</div>
<br />If you turn off rendering early at the wrong time, you might get problems with some sprites overwriting other sprites. I had issues with LJ65 on my PowerPak, and others had the same issues on their real hardware, until blargg figured out that turning off rendering early is safest just <em>before</em> hblank on a scanline with no sprites.</div>

					<br clear="all" /><br />

						<table width="100%" cellspacing="0">
						<tr valign="middle">
							<td class="gensmall" align="right">
							
							</td>
						</tr>
						</table>
					</td>
				</tr>
				</table>
			</td>
		</tr>

		<tr class="row1">

			<td class="profile"><strong><a href="#wrapheader">Top</a></strong></td>
			<td><div class="gensmall" style="float: left;">&nbsp;<a href="./memberlist.php?mode=viewprofile&amp;u=9"><img src="./styles/subsilver2/imageset/en/icon_user_profile.gif" alt="Profile" title="Profile" /></a> &nbsp;</div> <div class="gensmall" style="float: right;">&nbsp;</div></td>
	
		</tr>

	<tr>
		<td class="spacer" colspan="2" height="1"><img src="images/spacer.gif" alt="" width="1" height="1" /></td>
	</tr>
	</table>

	<table width="100%" cellspacing="1" class="tablebg">
	<tr align="center">
		<td class="cat"><form name="viewtopic" method="post" action="./viewtopic.php?f=2&amp;t=5854&amp;start=30"><span class="gensmall">Display posts from previous:</span> <select name="st" id="st"><option value="0" selected="selected">All posts</option><option value="1">1 day</option><option value="7">7 days</option><option value="14">2 weeks</option><option value="30">1 month</option><option value="90">3 months</option><option value="180">6 months</option><option value="365">1 year</option></select>&nbsp;<span class="gensmall">Sort by</span> <select name="sk" id="sk"><option value="a">Author</option><option value="t" selected="selected">Post time</option><option value="s">Subject</option></select> <select name="sd" id="sd"><option value="a" selected="selected">Ascending</option><option value="d">Descending</option></select>&nbsp;<input class="btnlite" type="submit" value="Go" name="sort" /></form></td>
	</tr>
	</table>
	

	<table width="100%" cellspacing="1">
	<tr>
		<td align="left" valign="middle" nowrap="nowrap">
		<a href="./posting.php?mode=post&amp;f=2"><img src="./styles/subsilver2/imageset/en/button_topic_new.gif" alt="Post new topic" title="Post new topic" /></a>&nbsp;<a href="./posting.php?mode=reply&amp;f=2&amp;t=5854"><img src="./styles/subsilver2/imageset/en/button_topic_reply.gif" alt="Reply to topic" title="Reply to topic" /></a>
		</td>
		
			<td class="nav" valign="middle" nowrap="nowrap">&nbsp;Page <strong>3</strong> of <strong>4</strong><br /></td>
			<td class="gensmall" nowrap="nowrap">&nbsp;[ 52 posts ]&nbsp;</td>
			<td class="gensmall" width="100%" align="right" nowrap="nowrap"><b><a href="#" onclick="jumpto(); return false;" title="Click to jump to pageâ€¦">Go to page</a> <a href="./viewtopic.php?f=2&amp;t=5854&amp;start=15">Previous</a>&nbsp;&nbsp;<a href="./viewtopic.php?f=2&amp;t=5854">1</a><span class="page-sep">, </span><a href="./viewtopic.php?f=2&amp;t=5854&amp;start=15">2</a><span class="page-sep">, </span><strong>3</strong><span class="page-sep">, </span><a href="./viewtopic.php?f=2&amp;t=5854&amp;start=45">4</a> &nbsp;<a href="./viewtopic.php?f=2&amp;t=5854&amp;start=45">Next</a></b></td>
		
	</tr>
	</table>

</div>

<div id="pagefooter"></div>

<br clear="all" />
<table class="tablebg" width="100%" cellspacing="1" cellpadding="0" style="margin-top: 5px;">
	<tr>
		<td class="row1">
			<p class="breadcrumbs"><a href="./index.php">Board index</a> &#187; <a href="./viewforum.php?f=24">NES / Famicom</a> &#187; <a href="./viewforum.php?f=2">NESdev</a></p>
			<p class="datetime">All times are UTC - 7 hours </p>
		</td>
	</tr>
	</table>
	<br clear="all" />

	<table class="tablebg" width="100%" cellspacing="1">
	<tr>
		<td class="cat"><h4>Who is online</h4></td>
	</tr>
	<tr>
		<td class="row1"><p class="gensmall">Users browsing this forum: <a href="./memberlist.php?mode=viewprofile&amp;u=25" style="color: #AA0000;" class="username-coloured">WhoaMan</a> and 3 guests</p></td>
	</tr>
	</table>


<br clear="all" />

<table width="100%" cellspacing="1">
<tr>
	<td width="40%" valign="top" nowrap="nowrap" align="left"></td>
	<td align="right" valign="top" nowrap="nowrap"><span class="gensmall">You <strong>cannot</strong> post new topics in this forum<br />You <strong>cannot</strong> reply to topics in this forum<br />You <strong>cannot</strong> edit your posts in this forum<br />You <strong>cannot</strong> delete your posts in this forum<br />You <strong>cannot</strong> post attachments in this forum<br /></span></td>
</tr>
</table>

<br clear="all" />

<table width="100%" cellspacing="0">
<tr>
	<td><form method="get" name="search" action="./search.php"><span class="gensmall">Search for:</span> <input class="post" type="text" name="keywords" size="20" /> <input class="btnlite" type="submit" value="Go" /><input type="hidden" name="t" value="5854" />
<input type="hidden" name="sf" value="msgonly" />
</form></td>
	<td align="right">
	<form method="post" name="jumpbox" action="./viewforum.php" onsubmit="if(document.jumpbox.f.value == -1){return false;}">

	<table cellspacing="0" cellpadding="0" border="0">
	<tr>
		<td nowrap="nowrap"><span class="gensmall">Jump to:</span>&nbsp;<select name="f" onchange="if(this.options[this.selectedIndex].value != -1){ document.forms['jumpbox'].submit() }">

		
			<option value="-1">Select a forum</option>
		<option value="-1">------------------</option>
			<option value="24">NES / Famicom</option>
		
			<option value="2" selected="selected">&nbsp; &nbsp;NESdev</option>
		
			<option value="3">&nbsp; &nbsp;NESemdev</option>
		
			<option value="21">&nbsp; &nbsp;NES Graphics</option>
		
			<option value="6">&nbsp; &nbsp;NES Music</option>
		
			<option value="9">&nbsp; &nbsp;NES Hardware and Flash Equipment</option>
		
			<option value="22">&nbsp; &nbsp;Homebrew Projects</option>
		
			<option value="10">&nbsp; &nbsp;Newbie Help Center</option>
		
			<option value="11">&nbsp; &nbsp;FCdev</option>
		
			<option value="18">&nbsp; &nbsp;NESdev China</option>
		
			<option value="19">&nbsp; &nbsp;NESdev International</option>
		
			<option value="25">Other</option>
		
			<option value="5">&nbsp; &nbsp;General Stuff</option>
		
			<option value="4">&nbsp; &nbsp;Membler Industries</option>
		
			<option value="12">&nbsp; &nbsp;SNESdev</option>
		
			<option value="20">&nbsp; &nbsp;GBDev</option>
		
			<option value="23">&nbsp; &nbsp;Other Retro Dev</option>
		
			<option value="15">&nbsp; &nbsp;Test Forum</option>
		
			<option value="26">Site Issues</option>
		
			<option value="13">&nbsp; &nbsp;phpBB Issues</option>
		
			<option value="14">&nbsp; &nbsp;Web Issues</option>
		
			<option value="16">&nbsp; &nbsp;nesdevWiki</option>
		

		</select>&nbsp;<input class="btnlite" type="submit" value="Go" /></td>
	</tr>
	</table>

	</form>
</td>
</tr>
</table>


</div>

<div id="wrapfooter">
	
	<span class="copyright">Powered by <a href="http://www.phpbb.com/">phpBB</a>&reg; Forum Software &copy; phpBB Group
	</span>
</div>

</body>
</html>