<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - 8x16 and whatever else unreg wants to know</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">8x16 and whatever else unreg wants to know</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=10&amp;t=7451">http://forums.nesdev.com/viewtopic.php?f=10&amp;t=7451</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>35</strong> of <strong>83</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>unregistered</b> [ Fri May 04, 2012 3:33 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">RTS without JSR is indeed a nasty bug, you have to be careful about that. If a return address wasn't put on the stack, the RTS will get anything that is at the top of the stack and jump to a bad location.</div><br /><br />Yes, thank you  <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /> , I agree... maybe the same thing happens here... it reaches the rts at the bottom and then pulls $37 and $C0 off the stack and goes to $C201 ???? Why?????????????????????????<br /><br />Then $C201 is listed as "<span style="color: red">UNDEFINED</span>" (because that instruction starts at $C200) and so then it runs an incorrect byte again ($C203, shows "<span style="color: red">PLP</span>").  Then it runs the code at $C204<br /><span style="color: darkred">sta $0029</span>.  Something happens next I don't understand why!  <img src="./images/smilies/icon_sad.gif" alt=":(" title="Sad" /> It ends up at $C336 <span style="color: orange">RTI</span> and never does anything else...  <img src="./images/smilies/icon_confused.gif" alt=":?" title="Confused" /> <br /> <br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">0C15E&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;see:&nbsp; <br />0C15E&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<br />0C15E A0 00&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;ldy #$00<br />0C160 A2 00&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;ldx #$00<br />0C162 A9 91&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;lda #&lt;lvl1Screen1start<br />0C164 85 10&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;sta $10<br />0C166 A9 C8&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;lda #&gt;lvl1Screen1start<br />0C168 85 11&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;sta $11<br />0C16A&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<br />0C16A&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<br />0C16A A9 20&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;lda #$20<br />0C16C 8D 06 20&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; sta $2006;Sets the high byte of the address $2007 will write to.<br />0C16F A9 00&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;lda #$00<br />0C171 8D 06 20&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; sta $2006;Sets the low bylte of the address $2007 will write to.<br />0C174&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<br />0C174&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;;a is still 0<br />0C174 85 20&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;sta r <br />0C176 48&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; pha ;---------------------------&gt;<br />0C177&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<br />0C177 B6 10&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;-- ldx &#40;$10&#41;, y<br />0C179 BD 57 C3&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; lda MetatileTile0, x<br />0C17C 8D 07 20&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; sta $2007;Writes to PPU address $2000. &#40;which is the first tile of the first name table&#41;<br />0C17F BD 36 C4&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; lda MetatileTile1, x<br />0C182 8D 07 20&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; sta $2007;Writes to PPU address $2001. &#40;which is the tile to the right of the first tile&#41;<br />0C185 C8&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; iny<br />0C186 E6 20&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;inc r<br />0C188&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;;&nbsp; pla ;&lt;--------------------------<br />0C188&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;;&nbsp; tax<br />0C188&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;;&nbsp; inx<br />0C188&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;;&nbsp; txa<br />0C188&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;;&nbsp; pha ;--------------------------&gt;<br />0C188 A5 20&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;lda r<br />0C18A 29 0F&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;and #00001111b<br />0C18C F0 03&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;beq +&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ;branch if it a multiple of 16<br />0C18E 4C 77 C1&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; jmp --<br />0C191&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<br />0C191&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<br />0C191 C8&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; +&nbsp; iny&nbsp; <br />0C192&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<br />0C192 B6 10&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;-&nbsp; ldx &#40;$10&#41;, y<br />0C194 BD 15 C5&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; lda MetatileTile2, x<br />0C197 8D 07 20&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; sta $2007;Writes to PPU address $2010. &#40;which is the third tile, first tile on second row, of the first name table&#41;<br />0C19A BD F4 C5&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; lda MetatileTile3, x<br />0C19D 8D 07 20&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; sta $2007;Writes to PPU address $2011. &#40;which is the tile to the right of the third tile&#41;<br />0C1A0 C8&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; iny<br />0C1A1 E6 20&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;inc r<br />0C1A3&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;;&nbsp; pla ;&lt;--------------------------<br />0C1A3&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;;&nbsp; tax<br />0C1A3&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;;&nbsp; inx<br />0C1A3&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;;&nbsp; txa<br />0C1A3&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;;&nbsp; pha ;---------------------------&gt;<br />0C1A3 A5 20&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;lda r<br />0C1A5 C9 F0&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;cmp #11110000b ;if &#40;r &gt;= 240&#41;<br />0C1A7 90 07&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;bcc +done<br />0C1A9 29 0F&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;and #00001111b<br />0C1AB F0 CA&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;beq --<br />0C1AD 4C 92 C1&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; jmp -<br />0C1B0&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<br />0C1B0&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;+done:&nbsp; <br />0C1B0 60&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; rts 0C1B1&nbsp; &nbsp; </div><br /><br /><div class="quotetitle">Kasumi wrote:</div><div class="quotecontent">I'm not 100% clear. You're saying fceux's debugger is stopping your code at $C336 despite you not having any active breakpoints? That's pretty strange. <span style="color: cyan">Is break on bad opcode checked? </span>That's about my only guess. Are there any problems on a different emulator? <span style="color: violet">Does anything else "run into" that RTI?</span><br />Something like:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NMI:<br />&nbsp; &nbsp;;NMI code here, without an rti<br />IRQ<br />&nbsp; &nbsp;RTI<br /></div><br />?</div>
<br />
<br /><span style="color: cyan">No, break on bad opcode isn't checked.</span>  <span style="color: violet">No, right before the rti is an rts.</span>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Kasumi</b> [ Fri May 04, 2012 4:01 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="codetitle"><b>Code:</b></div><div class="codecontent">0C1A3&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;;&nbsp; pha ;---------------------------&gt;<br />0C1A3 A5 20&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;lda r<br />0C1A5 C9 F0&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;cmp #11110000b ;if &#40;r &gt;= 240&#41;<br />0C1A7 90 07&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;bcc +done<br />0C1A9 29 0F&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;and #00001111b<br />0C1AB F0 CA&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;beq --<br />0C1AD 4C 92 C1&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; jmp -<br />0C1B0&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<br />0C1B0&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;+done:&nbsp; <br />0C1B0 60&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; rts 0C1B1&nbsp; &nbsp; </div>
<br />I could be wrong about this (I sorta have trouble following + and - branches):
<br />
<br />Edit: CPOW points out the PHA here is commented out. I don't believe in mangling my posts even when I'm wrong, so see my next post for another guess.
<br />
<br />Let's pretend we're at this point in the code. We push a value to the stack. We load 'r'. 'r' is less than #%11110000. We brach to done because the carry is clear. We RTS.
<br />
<br />But the value we pushed to the stack is never pulled off. This is super bad, because then we return to the wrong place.
<br />
<br />Example:
<br />
<br />We jsr to the routine. On the top of the stack is: $00 $80. If we RTS'd right away, we'd return there.
<br />
<br />But if you push something else to the stack (like $56 or whatever else) without pulling it off, your stack looks like this. $56 $00 $80. And you'll RTS to $0056(-1?) instead of where you jsr'd from.
<br />
<br />Edit: I don't see much need to use pha and pla at all, but I may be missing something in the logic. It seems that a zero page variable would work just as well for this code, and would actually end up faster (but larger) and you wouldn't need to worry about stack corruption. PHA would become sta sometempvariable, and PLA would become lda sometempvariable. And I <em>think</em> it would work exactly the same.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>cpow</b> [ Fri May 04, 2012 4:09 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Kasumi wrote:</div><div class="quotecontent">[code]<br />0C1A3                           ;  pha ;---------------------------&gt;<br />0C1A3 A5 20                       lda r<br /></div>
<br />
<br />The &#91;code&#93;pha&#91;/code&#93; is commented out...

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Kasumi</b> [ Fri May 04, 2012 4:11 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Oh, weird. Sorry, then. I assumed it was a disassembly, so I wasn't looking for comments. The addresses should have still been a clue, though. I'll keep looking then.
<br />
<br />Edit: Maybe the issue is that he forgot to comment out one pha, then? There's one pha still uncommented, and I don't see a corresponding uncommented pla.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>cpow</b> [ Fri May 04, 2012 4:23 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Kasumi wrote:</div><div class="quotecontent">Edit: Maybe the issue is that he forgot to comment out one pha, then? There's one pha still uncommented, and I don't see a corresponding uncommented pla.</div>
<br />Certainly looks that way.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Fri May 04, 2012 6:18 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />unregistered, it seems to me that all your problems are stack-related. Double check everything you do with it (pay attention to all PHA, PLA, JSR, RTS and RTI instructions) and make sure that everything that's put on the stack is pulled back in the proper order.
<br />
<br />Avoid using PHA/PLA in places with lots of decisions (conditional branches), because depending on the combination of taken branches it's easy to forget data on the stack or pull more than was put there in the first place.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>unregistered</b> [ Fri May 04, 2012 9:57 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">cpow wrote:</div><div class="quotecontent"><div class="quotetitle">Kasumi wrote:</div><div class="quotecontent">Edit: Maybe the issue is that he forgot to comment out one pha, then? There's one pha still uncommented, and I don't see a corresponding uncommented pla.</div><br />Certainly looks that way.</div><br />Thank you so much Kasumi!  <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" />  All your work is really helpful to me.  And thank you cpow for helping us again too; you're quite kind. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /> <br />It was that way... now after commenting out that pha it works kind of well!  There's a screen now... it's not displaying correctly but it shows up and you can see/move the character again. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /><br /><br /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">unregistered, it seems to me that all your problems are stack-related. Double check everything you do with it (pay attention to all PHA, PLA, JSR, RTS and RTI instructions) and make sure that everything that's put on the stack is pulled back in the proper order.<br /><br />Avoid using PHA/PLA in places with lots of decisions (conditional branches), because depending on the combination of taken branches it's easy to forget data on the stack or pull more than was put there in the first place.</div>
<br />Thank you so much tokumaru! <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /> I will try tomorrow, what you've told me here, to make the screen appear correctly, i hope.  
<br />
<br />Yall are awesome! <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>unregistered</b> [ Mon May 07, 2012 3:47 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />About Attribute Tables
<br /><div class="quotetitle">Kasumi<span style="color: brown">, on page 29,</span> wrote:</div><div class="quotecontent">For attributes, you do kind of the same thing. Write the address of the attribute tile you want to update to $2006, then write the actual attribute to $2007. Because of your metatile format, this might actually be really easy for you to figure out. (It's hard as hell to do in my format  <img src="./images/smilies/icon_lol.gif" alt=":lol:" title="Laughing" /> ...  I digress)<br /><br />That's... about all I will say. Good luck! Try it, and post some code if you get stuck!</div><br /><div class="quotetitle"><span style="color: violet">...from </span><a href="http://wiki.nesdev.com/w/index.php/Attribute_table" class="postlink">here</a> wrote:</div><div class="quotecontent"><div class="codetitle"><b>Code:</b></div><div class="codecontent">value = &#40;topleft &lt;&lt; 0&#41; | &#40;topright &lt;&lt; 2&#41; | &#40;bottomleft &lt;&lt; 4&#41; | &#40;bottomright &lt;&lt; 6&#41;</div><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">,---+---+---+---.<br />|&nbsp; &nbsp;|&nbsp; &nbsp;|&nbsp; &nbsp;|&nbsp; &nbsp;|<br />+ D1-D0 + D3-D2 +<br />|&nbsp; &nbsp;|&nbsp; &nbsp;|&nbsp; &nbsp;|&nbsp; &nbsp;|<br />+---+---+---+---+<br />|&nbsp; &nbsp;|&nbsp; &nbsp;|&nbsp; &nbsp;|&nbsp; &nbsp;|<br />+ D5-D4 + D7-D6 +<br />|&nbsp; &nbsp;|&nbsp; &nbsp;|&nbsp; &nbsp;|&nbsp; &nbsp;|<br />`---+---+---+---'</div></div>
<br />
<br />Ok this is how I understand this now...
<br />1.) Each byte has bits in this order: <span style="color: orange"><strong>76543210</strong></span>
<br />
<br />2.) So starting with each corner palette being a binary <span style="color: yellow">2bit</span> value (0,1,2,or 3) at the bottom of a byte (i.e. <span style="color: black">#</span><span style="color: #aaaaaa">000000</span><span style="color: yellow">XX</span><span style="color: black">b</span>)
<br />
<br />3.) and from the first line of code in the <span style="color: violet">...from</span> box, each <span style="color: cyan">&lt;&lt; </span><span style="color: blue">X</span> means <span style="color: cyan">shift left</span><span style="color: blue"> X</span> spaces.  
<br />And each <span style="color: #00af64">|</span> means <span style="color: #00af64">or</span>.  
<br /><span style="color: green">TRUE</span> <span style="color: #00af64">or</span> <span style="color: green">TRUE</span> = <span style="color: green">TRUE</span>
<br /><span style="color: green">TRUE</span> <span style="color: #00af64">or</span> <span style="color: red">FALSE</span> = <span style="color: green">TRUE</span>
<br /><span style="color: red">FALSE</span> <span style="color: #00af64">or</span> <span style="color: green">TRUE</span> = <span style="color: green">TRUE</span>
<br /><span style="color: red">FALSE</span> <span style="color: #00af64">or</span> <span style="color: red">FALSE</span> = <span style="color: red">FALSE</span>
<br />
<br />4.) Starting out 
<br />    top left = <span style="color: black">#</span><span style="color: #aaaaaa">000000</span><span style="color: yellow">XX</span><span style="color: black">b</span>
<br />    top right = <span style="color: black">#</span><span style="color: #aaaaaa">000000</span><span style="color: yellow">XX</span><span style="color: black">b</span>
<br />    bottom left =<span style="color: black">#</span><span style="color: #aaaaaa">000000</span><span style="color: yellow">XX</span><span style="color: black">b</span>
<br />    bottom right =<span style="color: black">#</span><span style="color: #aaaaaa">000000</span><span style="color: yellow">XX</span><span style="color: black">b</span>
<br />
<br />5.) After <span style="color: cyan">shifting left</span>
<br />    top left = <span style="color: black">#</span><span style="color: #aaaaaa">000000</span><span style="color: yellow">XX</span><span style="color: black">b</span>
<br />    top right = <span style="color: black">#</span><span style="color: #aaaaaa">0000</span><span style="color: #ffdd00">XX</span><span style="color: #aaaaaa">00</span><span style="color: black">b</span>
<br />    bottom left =<span style="color: black">#</span><span style="color: #aaaaaa">00</span><span style="color: #bdf400">XX</span><span style="color: #aaaaaa">0000</span><span style="color: black">b</span>
<br />    bottom right =<span style="color: black">#</span><span style="color: #ffa100">XX</span><span style="color: #aaaaaa">000000</span><span style="color: black">b</span>
<br />
<br />6.) After <span style="color: #00af64">or</span>ing
<br />    value = <span style="color: black">#</span><span style="color: #ffa100">XX</span><span style="color: #bdf400">XX</span><span style="color: #ffdd00">XX</span><span style="color: yellow">XX</span><span style="color: black">b</span>
<br />
<br />...this is here to remind me of this cause I always get confused over this.  Hope it helps a few of yall too.  <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>unregistered</b> [ Thu May 10, 2012 9:50 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Is there an assembly case statement?  How would  you code this:
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">case bla<br />&nbsp; &nbsp; 0: &#40;run code for zero&#41; <br />&nbsp; &nbsp; 1: &#40;run code for one&#41;<br />&nbsp; &nbsp; 2: &#40;run code for two&#41;<br />&nbsp; &nbsp; 3: &#40;run code for three&#41;<br /></div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Thu May 10, 2012 10:19 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Yes. It's called a <a href="http://wiki.nesdev.com/w/index.php/Jump_table" class="postlink">jump table</a>.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>cpow</b> [ Thu May 10, 2012 10:23 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">unregistered wrote:</div><div class="quotecontent">Is there an assembly case statement?  How would  you code this:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">case bla<br />&nbsp; &nbsp; 0: &#40;run code for zero&#41; <br />&nbsp; &nbsp; 1: &#40;run code for one&#41;<br />&nbsp; &nbsp; 2: &#40;run code for two&#41;<br />&nbsp; &nbsp; 3: &#40;run code for three&#41;<br /></div></div>
<br />
<br />I decided to find out what CC65 does.  I borrowed AlterEgo code and added a simple switch statement to see.  Note, the assembly displayed is not contiguous...almost to the point of being utterly confusing.  But that's what you get with mixed-mode disassembly/source views.
<br />
<br />$9ABF: load switch comparison value into A.
<br />$9AC2-$9ACA: case comparisons with compare and branch-if-equal to case handling code.
<br />$9ACD-$9AD4: case 1 handling code.
<br />$9AD7-$9AE1: case 2 handling code.
<br />$9AE2: default fall-through.
<br />
<br /><img src="http://i.imgur.com/b8az8.png" alt="Image" />
<br />
<br />There certainly are many other ways to skin this cat.  EDIT: The previous statement is meant as a deterrent to those quick to reply that the solution I posted is suboptimal.   <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Thu May 10, 2012 12:42 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">unregistered wrote:</div><div class="quotecontent">Is there an assembly case statement?</div>
<br />Assembly doesn't have this kind of complex structures. In assembly, everything is branches and jumps based on the results of calculations/comparisons.
<br />
<br />If you have just a few cases you can just use a few CMPs and branches, but with lots of possible cases it's better to use a jump table, or else it will be too slow.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Kasumi</b> [ Thu May 10, 2012 1:25 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="codetitle"><b>Code:</b></div><div class="codecontent">;y contains the case number<br />lda jumptablelow,y<br />sta tempaddress<br />lda jumptablehigh,y<br />sta tempaddress+1<br /><br />jmp &#91;tempaddress&#93;<br /><br />jumptablehigh:<br />.db high&#40;case0&#41;<br />.db high&#40;case1&#41;<br />.db high&#40;case2&#41;<br />jumptablelow:<br />.db low&#40;case0&#41;<br />.db low&#40;case1&#41;<br />.db low&#40;case2&#41;<br />case0:<br /><br />case1:<br /><br />case2:<br /></div>
<br />
<br />Underneath each case label would be the code corresponding to the case. Then, we store the addresses of all the cases in two tables. We load the low and high byte of the address we want, and store them in two contiguous bytes in low/high order. Then we jmp indirect to byte where the low part of the address was stored which will take us to the case label.
<br />
<br />There's actually a small bug with the 6502 jmp indirection instruction. From <a href="http://www.obelisk.demon.co.uk/6502/reference.html#JMP" class="postlink">here:</a>
<br />
<br />An original 6502 has does not correctly fetch the target address if the indirect vector falls on a page boundary (e.g. $xxFF where xx is and value from $00 to $FF). In this case fetches the LSB from $xxFF as expected but takes the MSB from $xx00. This is fixed in some later chips like the 65SC02 so for compatibility always ensure the indirect vector is not at the end of the page.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dwedit</b> [ Thu May 10, 2012 1:48 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />When using jump tables, be very careful about safety.  Don't allow out-of-range values to be used.  Use bounds checking, or bit masking and dummy entries.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Thu May 10, 2012 4:08 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Dwedit wrote:</div><div class="quotecontent">When using jump tables, be very careful about safety.  Don't allow out-of-range values to be used.  Use bounds checking, or bit masking and dummy entries.</div>
<br />I was gonna say something like that... Jump tables are great when your cases are all consecutive numbers (and you should always try to make it so, since it's easier that way), but when the cases are scattered values or ranges of different sizes, jump tables are not so good.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>35</strong> of <strong>83</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>