<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Nes C - Char comparison returning True when clearly not</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Nes C - Char comparison returning True when clearly not</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=10&amp;t=14947">http://forums.nesdev.com/viewtopic.php?f=10&amp;t=14947</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>team_disposable</b> [ Sat Oct 15, 2016 7:10 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Nes C - Char comparison returning True when clearly not</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I'm trying to compare two unsigned char variables in an if statement.<br />For some reason, even when I hard code the two values to be different, the if statement keeps returning true.<br /><br />Clearly I'm doing something wrong here - would anyone be able to point out what?<br /><br />Originally I was trying to pull a value from an array and compare it:<br /><br />So I would declare and set my array and my check digit:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">unsigned char enemy_onscreen_value = 1;<br />unsigned char enemy_onscreen_check&#91;&#93; = {<br />0,0,0,0<br />};<br /></div><br /><br />And then later, in a function, compare the two:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">void update_Enemies(void) {<br />&nbsp; &nbsp;<br />&nbsp; &nbsp;for(index2 = 0; index2 &lt; sizeof(enemy_onscreen_check); ++index2){<br />&nbsp; &nbsp;&nbsp; &nbsp;<br />&nbsp; &nbsp;&nbsp; &nbsp;if(enemy_onscreen_check&#91;index2&#93; &gt;= enemy_onscreen_value) {<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp;update_Enemy_Sprite(index2);<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;<br />&nbsp; &nbsp;&nbsp; &nbsp;}<br />&nbsp; &nbsp;<br />&nbsp; &nbsp;}<br />&nbsp; &nbsp;&nbsp; &nbsp;<br />} <br /></div>   <br /><br />These seems to return true for all four values in the array, even though all of them are zero! It does the same if i set it to ==.<br /><br />I then tested with just the if statement:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">unsigned char enemy_onscreen_value = 1;<br />unsigned char enemy_onscreen_1 = 0;<br /><br />void update_Enemies(void) {<br />&nbsp; &nbsp;if(enemy_onscreen_value == enemy_onscreen_1) {<br />&nbsp; &nbsp;&nbsp; &nbsp;update_Enemy_Sprite(index2);&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;<br />&nbsp; &nbsp;}<br />}<br /></div><br /><br />Both of these run update_Enemy_Sprite, even though both should be false.<br /><br />I can find nothing on the internet that says I am doing this incorrectly. Where am I going wrong?<br /><br />Thanks,

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Sat Oct 15, 2016 7:17 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Nes C - Char comparison returning True when clearly not</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />CC65 emits assembly output. Maybe try checking to see if it's doing something vaguely correct?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Kasumi</b> [ Sat Oct 15, 2016 7:23 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Nes C - Char comparison returning True when clearly not</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Not too familiar with the cc65 setup, but just out of curiosity, what happens when you use const?<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">const unsigned char enemy_onscreen_value = 1;<br /></div><br />Also curious, if you reverse the condition, does it still do the same thing? Just throwing out things I'd try based on what's here, but checking assembly output would be best.<br /><br />Especially in the second example, I'd wonder if something else is modifying it, or if update_Enemy_Sprite is just run elsewhere.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>koitsu</b> [ Sat Oct 15, 2016 8:11 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Nes C - Char comparison returning True when clearly not</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Does the behaviour change if you use <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">int</tt> rather than <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">char</tt>?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>dullahan</b> [ Sat Oct 15, 2016 9:04 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Nes C - Char comparison returning True when clearly not</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Bummer. Two questions:<br /><br />1. How are you invoking the compiler? Specifically are you using any optimizer flags (-O, -Oi, etc...)? The optimizer sometimes has issues with comparisons; e.g. <!-- m --><a class="postlink" href="https://github.com/cc65/cc65/issues/167">https://github.com/cc65/cc65/issues/167</a><!-- m --><br /><br />2. What version of CC65 are you running?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>team_disposable</b> [ Sun Oct 16, 2016 12:45 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Nes C - Char comparison returning True when clearly not</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />These were all immensely helpful, thank you.<br /><br />I checked the assembly code being made. There were no problems with the for loop (code below).<br /><br />I applied a const to the declaration of the array, and then everything seemed to work! The only visible change in the assembly is that it has moved the decleration of the array from the DATA section to the RODATA section.<br /><br />The &quot;IF statement now also works with a hardcoded 1,, which it didn't before:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp;if(enemy_onscreen_check&#91;index2&#93; == 1) {<br /></div><br /><br />Does anyone have any ideas why the move from DATA to RODATA changes this? I intended to use the array as alive or dead flags and change them based on the enemies status, so would prefer them to be in RAM. Am I overwriting them somehow? This might be a stupid question, but can I set that piece of ram as protected, or assign it to a space?<br /><br />In answer to previous questions:<br /><br />1. Ints don't seem to make a difference<br />2. I'm using CC 2.15<br />3. reversing the condition is broken without the const, works with the const<br /><br />Here is the assembly:<br />Declaration of array. With const this is in RODATA, without it is in DATA:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">_enemy_onscreen_check:<br />&nbsp; &nbsp;.byte&nbsp; &nbsp;$01<br />&nbsp; &nbsp;.byte&nbsp; &nbsp;$00<br />&nbsp; &nbsp;.byte&nbsp; &nbsp;$01<br />&nbsp; &nbsp;.byte&nbsp; &nbsp;$00<br /></div><br /><br />Here is the if statement:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">;<br />; for(index2 = 0; index2 &lt; sizeof(enemy_onscreen_check); ++index2){<br />;<br />&nbsp; &nbsp;lda&nbsp; &nbsp; &nbsp;#$00<br />&nbsp; &nbsp;sta&nbsp; &nbsp; &nbsp;_index2<br />L054E:&nbsp; &nbsp;lda&nbsp; &nbsp; &nbsp;_index2<br />&nbsp; &nbsp;cmp&nbsp; &nbsp; &nbsp;#$04<br />&nbsp; &nbsp;bcs&nbsp; &nbsp; &nbsp;L03FE<br />;<br />; if(enemy_onscreen_check&#91;index2&#93; == 1) {<br />;<br />&nbsp; &nbsp;ldy&nbsp; &nbsp; &nbsp;_index2<br />&nbsp; &nbsp;lda&nbsp; &nbsp; &nbsp;_enemy_onscreen_check,y<br />&nbsp; &nbsp;cmp&nbsp; &nbsp; &nbsp;#$01<br />&nbsp; &nbsp;bne&nbsp; &nbsp; &nbsp;L054F<br />;<br />; update_Enemy_Sprite(index2);<br />;<br />&nbsp; &nbsp;lda&nbsp; &nbsp; &nbsp;_index2<br />&nbsp; &nbsp;ldx&nbsp; &nbsp; &nbsp;#$00<br />&nbsp; &nbsp;jsr&nbsp; &nbsp; &nbsp;_update_Enemy_Sprite<br />;<br />; for(index2 = 0; index2 &lt; sizeof(enemy_onscreen_check); ++index2){<br />;<br />L054F:&nbsp; &nbsp;inc&nbsp; &nbsp; &nbsp;_index2<br />&nbsp; &nbsp;jmp&nbsp; &nbsp; &nbsp;L054E<br />;<br />; }<br />;<br />L03FE:&nbsp; &nbsp;rts<br /></div><br /><br />For anyone else reading this who is just starting out, I found an excellent explanation of the different assembly functions here:<br /><br /><a href="https://www.c64-wiki.com/index.php/CMP" class="postlink">https://www.c64-wiki.com/index.php/CMP</a><br /><br />Thanks for the help, that was driving me crazy!

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Sun Oct 16, 2016 1:06 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Nes C - Char comparison returning True when clearly not</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />My guess would be that the DATA segment is not getting initialized on startup. The CRT should do this for you before calling main, but you could be bypassing that somehow.<br /><br />If you'd run it in a <a href="http://www.fceux.com/web/help/Debugger.html" class="postlink">debugger</a> and put a breakpoint on writes to that variable, you'd find out if and when it's getting initialized, or if it's getting overwritten later by something else misbehaving, etc.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>team_disposable</b> [ Sun Oct 16, 2016 1:36 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Nes C - Char comparison returning True when clearly not</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Thanks, Rainwarrior.<br /><br />I think you're right! Looking at the assembly, every var in the DATA section is something I'm not yet using, and trying to reference anything else in there gets the same result.<br /><br />I managed to set a breakpoint using Dougeffs excellent guides, but wasn't too sure what I was looking at. Instead, I added a few assignments to the very beginning of main, before anything else ran. The comparison then worked.<br /><br />How would I initialize the data section? I'm presuming this would be part of nes.cfg?<br /><br />I have this line in there already:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; DATA:&nbsp; &nbsp; &nbsp;load = PRG, run = RAM, type = rw,&nbsp; define = yes;<br />&nbsp;</div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Sun Oct 16, 2016 1:39 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Nes C - Char comparison returning True when clearly not</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />In CC65 it would normally be initialized by the subroutine &quot;copydata&quot; found in the CRT before it calls main.<br /><a href="https://github.com/cc65/cc65/blob/master/libsrc/common/copydata.s" class="postlink">https://github.com/cc65/cc65/blob/master/libsrc/common/copydata.s</a>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Sun Oct 16, 2016 7:01 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Nes C - Char comparison returning True when clearly not</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Dougeff's init code (reset.s) indeed doesn't seem to be calling <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">copydata</tt>.<br /><br />While it's a good idea to use <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">copydata</tt> to restore the standard C behavior, alternatively you can simply make sure to initialize the global variables in your own code before using them.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>dougeff</b> [ Sun Oct 16, 2016 8:02 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Nes C - Char comparison returning True when clearly not</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />crt0.s has...<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">JSR&nbsp; &nbsp;zerobss&nbsp; &nbsp;&nbsp; &nbsp;; Clear BSS segment.<br />JSR&nbsp; &nbsp;copydata&nbsp; &nbsp;; Initialize DATA segment.<br />JSR&nbsp; &nbsp;initlib&nbsp; &nbsp;&nbsp; &nbsp;; Run constructors.</div><br /><br />Which I have omitted, when I rewrote this. Should I have included them?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Sun Oct 16, 2016 9:18 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Nes C - Char comparison returning True when clearly not</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">thefox wrote:</div><div class="quotecontent">While it's a good idea to use <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">copydata</tt> to restore the standard C behavior, alternatively you can simply make sure to initialize the global variables in your own code before using them.</div><br />It's a standard C language feature, and the C compiler depends on it. Omitting it silently breaks your code, as we've seen. It has no way of knowing that you've removed that essential step in the CRT init, so there's no way it can produce an error to prevent you from using the feature.<br /><br />I don't think it's merely a good idea. The alternative is disabling basic C language stuff for no good reason while leaving yourself prone to silent errors.<br /><br /><div class="quotetitle">dougeff wrote:</div><div class="quotecontent"><div class="codetitle"><b>Code:</b></div><div class="codecontent">JSR&nbsp; &nbsp;zerobss&nbsp; &nbsp;&nbsp; &nbsp;; Clear BSS segment.<br />JSR&nbsp; &nbsp;copydata&nbsp; &nbsp;; Initialize DATA segment.<br />JSR&nbsp; &nbsp;initlib&nbsp; &nbsp;&nbsp; &nbsp;; Run constructors.</div><br />Which I have omitted, when I rewrote this. Should I have included them?</div><br /><br />zerobss just sets all RAM to 0. I don't think it's strictly necessary, but it does provide a consistent startup state. (You may already be doing this yourself, if you follow <a href="https://wiki.nesdev.com/w/index.php/Init_code" class="postlink">common suggestions</a> from the NESDev community about startup code.)<br /><br />copydata, or something that duplicates it is <em>essential</em>.<br /><br />initlib is only needed if you use the constructor/destructor feature of CC65. It's a nonstandard extension of C that you probably don't need (not related to C++ constructors either). Some of its library stuff uses that feature but you don't necessarily need to include those things, and if your linker CFG doesn't have the CONDES feature specified, you'll get an error preventing you from accidentally using it. (Library modules are lazily linked on demand, so it's possible to have sleeper modules in the library that need CONDES that you haven't noticed cause you just haven't used them. Simple to find them with a text search though.)<br /><br />Info on CC65 constructors:<br />Feature explanation: <a href="http://cc65.github.io/doc/ca65.html#s16" class="postlink">http://cc65.github.io/doc/ca65.html#s16</a><br />Linker config setup: <a href="http://cc65.github.io/doc/ld65.html#ss5.9" class="postlink">http://cc65.github.io/doc/ld65.html#ss5.9</a><br /><br />(As I said, though, there's little harm in just ignoring the CONDES feature. You'll get an error if you do anything wrong with this by accident, as long as you didn't use the CONDES feature in your linker CFG.)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Sun Oct 16, 2016 9:36 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Nes C - Char comparison returning True when clearly not</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">rainwarrior wrote:</div><div class="quotecontent"><div class="quotetitle">thefox wrote:</div><div class="quotecontent">While it's a good idea to use <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">copydata</tt> to restore the standard C behavior, alternatively you can simply make sure to initialize the global variables in your own code before using them.</div><br />It's a standard C language feature, and the C compiler depends on it. Omitting it silently breaks your code, as we've seen. It has no way of knowing that you've removed that essential step in the CRT init, so there's no way it can produce an error to prevent you from using the feature.</div><br />There's one way to get warnings -- set the DATA segment type to &quot;bss&quot;, linker should then give a warning when initialized data is placed in the segment.<br /><br />Anyway, I moreso meant to present manual initialization as a quick hack rather than a real alternative for fixing the initialization code. I could've been more clear about that.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Sun Oct 16, 2016 9:45 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Nes C - Char comparison returning True when clearly not</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Ah, yes you could intentionally disable the DATA segment. Heh.<br /><br />I was looking at dougeff's reset.s (found in lesson1.zip <a href="https://nesdoug.com/2015/11/17/3-our-first-program/" class="postlink">here</a>) and aside from the missing copydata, I noticed it tries to initialize sprites via $4014 during init. This will work on most emulators, but on a real NES any data you upload to OAM there is going to decay before you turn rendering on, so whatever you upload will end up basically random on the real thing. $4014 is normally only useful if done within vblank immediately before a rendered frame.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>