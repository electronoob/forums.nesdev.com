<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Super Mario Bros. on the PC-Engine?</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Super Mario Bros. on the PC-Engine?</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=4248">http://forums.nesdev.com/viewtopic.php?f=2&amp;t=4248</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>cd_vision</b> [ Thu Jul 24, 2008 1:52 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Super Mario Bros. on the PC-Engine?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I've got this rom for the PC-Engine that is a port of Super Mario Bros. Does anybody know the history on this? It seems to also be found in a 6-in-1 fami collection.  
<br />
<br />Did they use the original code from the famicom game, or is this programmed from the ground up? Because except for the colors and sound being a little off, it's indistinguishable from the original to me.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>mic_</b> [ Thu Jul 24, 2008 2:13 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />You could try comparing the ROMs and see if you find any chunks of code that are the same in both of them. Anything that accesses  the APU, PPU or joypads would've had to be partially or completely rewritten, but the main game "engine" should've been possible to move from the NES to the PCE with few changes.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>ccovell</b> [ Thu Jul 24, 2008 6:42 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />NES games can be hacked (with considerable effort) to run on the PCE.
<br />
<br />Those NES hacks are from Image, a Finnish cracking group. Since Image were Finnish, they used the PAL ROM of Super Mario Bros. for their PCE conversion, thus the colours are a bit off and the speed is wrong on NTSC systems such as the PCE/Turbo.  Image also hid a few pictures at the end (?) of their PCE ROMs; go have a look for them in some tile editors.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>doppelganger</b> [ Thu Jul 24, 2008 2:04 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Very interesting.  I had no idea such a port even existed.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>LoneKiltedNinja</b> [ Thu Jul 24, 2008 6:37 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Out of curiosity, I've never thought seriously about PCE dev work.  I'm sure I could pick up the basic ISA, but how different is the theory behind the sound and graphics systems?  Iirc PCE uses mainly PCM sound, but is it strictly sampled or can you play arbitrary bitsrings?  And how much more complex is it working with the greater range of sprite sizes?  FractalEngine looks like it has some direct-draw.  Is that for-real, or did you have to rig a clever raster hack?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>ccovell</b> [ Thu Jul 24, 2008 7:41 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The PC-Engine was clearly designed by Hudson to be as easy to program for as the Famicom, yet much more powerful, in order to lure FC developers to the system.
<br />
<br />The graphics system on the PCE is tile-based like the FC, meaning that graphics are always composed of a tilemap of adjustable size, and then tile characters taking up the rest of VRAM.  There is enough VRAM on the PCE for an uncomprssed/unoptimized 512x240 pixel image, which is what I set up in FractalEngine.  My program sets up such a screen, then fills in the tile characters as it renders the fractal.  It just so happens that each 8x1 horizontal line in a graphic tile takes up 4 bytes, so to get this "direct draw" thing going, I just had to have it change the VRAM addresses accordingly and write the fractal image to VRAM, 8 pixels at a time.  There was no need to read previously-drawn tiles because of the tile bitplane layout.
<br />
<br />Sprites are easy to use and set up for large sizes, the only headache being figuring out the VRAM offset for sprite tiles.  Really stupidly, the sprite tile format on the PCE is different from the BG tile format, so sprites and BG can't use the same CHR graphics.  I don't know why Hudson did it this way...
<br />
<br />Sound on the PCE can be PCM, but it really is just a glorified PSG chip.  It is a WSG: a PSG chip with a single user-definable waveform cycle for each sound channel   Most games set up a waveform for each channel, using 4 or 5 channels as regular WSG, with perhaps the 6th channel set up with a CPU timer for PCM drum effects.  Very few games use all the channels for PCM, because it is a bit tougher to do, and more CPU intensive.  The PCE's sound chip is no SPC-700.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Thu Jul 24, 2008 9:37 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">ccovell wrote:</div><div class="quotecontent">Sound on the PCE can be PCM, but it really is just a glorified PSG chip.  It is a WSG: a PSG chip with a single user-definable waveform cycle for each sound channel</div>
<br />Like the Game Boy's counterpart to the NES triangle channel, right?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>mic_</b> [ Fri Jul 25, 2008 1:08 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Yeah, the samples are 4-bit on the GB and 5-bit on the PCE, but it's the same concept.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>LoneKiltedNinja</b> [ Fri Jul 25, 2008 4:56 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">ccovell wrote:</div><div class="quotecontent">My program sets up such a screen, then fills in the tile characters as it renders the fractal.  It just so happens that each 8x1 horizontal line in a graphic tile takes up 4 bytes, so to get this "direct draw" thing going, I just had to have it change the VRAM addresses accordingly and write the fractal image to VRAM, 8 pixels at a time.  There was no need to read previously-drawn tiles because of the tile bitplane layout.</div>
<br />
<br />So let me see if I'm parsing this correctly- you still compose the background of tiles, but you basically fill in the tiles at runtime via the CPU, as opposed to the NES architecture which (to my knowledge) makes it a pain for the CPU to get directly at the CHR data, and doesn't give you enough distinct tiles to fill more than a fraction of the screen anyway?
<br />The best easy hack I could think of for the NES was a premade CHR bank with every possible combination of 4 quarter-tiles x 4 colors...

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>MottZilla</b> [ Fri Jul 25, 2008 5:12 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I'm sure the PC-Engine still has VBlank rules. You update the graphical hardware while it's between frames. I would guess the PC-Engine has a large amount of VRAM that the CPU loads tiles into through memory mapped registers similar to the NES. But I know the PC-Engine can remap its 64K of address space so maybe you can map VRAM into CPU space.
<br />
<br />Honestly I don't see what you mean about the NES. The CPU can modify PPU memory well enough for some amazing games. Sure it's not fast enough to compare to how you do things on modern PCs with a frame buffer and tons of bitmaps. But it works pretty damn well when you consider how limited the hardware was back then. 
<br />
<br />What are you talking about a premade CHR bank with every possible combo of 4 quarter tiles x 4 colors? Hacking NES games to PC-Engine wouldn't require duplicating tiles for each palette. I don't really know that much about PC-Engine, but it's from the same era as the Genesis/MegaDrive and SNES. 
<br />
<br />But anyway, the NES may seem like a pain to work with, but if you take your time and think about what you are doing I really don't think it's as hard as you think it is.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>ccovell</b> [ Fri Jul 25, 2008 6:45 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The PCE still has VBlank rules, but the VDC can still be written to during the active display.  I'll quote Charles MacDonald:
<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"> During the active display period of a scanline, the VDC can do one 16-bit<br /> access to VRAM on each cycle of the dot clock. Bits 1-0 of MWR tell the VDC<br /> how to divide this amongst several sources:<br /><br /> 1. CPU (reading or writing a word via register $02)<br /> 2. Background character pattern generator data (one read is for bitplanes<br />    0 and 1, another is for bitplanes 2 and 3, either one or two are needed<br />    per character)<br /> 3. BAT data (character name and palette, one fetch needed per character)<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp;Bit&nbsp; &nbsp;Dot&nbsp; &nbsp;Dot cycles within an 8-dot unit<br />&nbsp;1 0&nbsp; Width&nbsp; &nbsp;0&nbsp; &nbsp;1&nbsp; &nbsp;2&nbsp; &nbsp;3&nbsp; &nbsp;4&nbsp; &nbsp;5&nbsp; &nbsp;6&nbsp; &nbsp;7<br />&nbsp;-------------------------------------------<br />&nbsp;0 0&nbsp; &nbsp; 1&nbsp; &nbsp; CPU BAT CPU ??? CPU CG0 CPU CG1<br />&nbsp;0 1&nbsp; &nbsp; 2&nbsp; &nbsp; --BAT-- --CPU-- --CG0-- --CG1--<br />&nbsp;1 0&nbsp; &nbsp; 2&nbsp; &nbsp; --BAT-- --CPU-- --CG0-- --CG0--<br />&nbsp;1 1&nbsp; &nbsp; 4&nbsp; &nbsp; ------BAT------ ----CG0/CG1----</div><br /> CPU - A read or write to register $02<br /> BAT - The palette block and character name from the BAT<br /> ??? - Unknown, possibly an unused 'dummy' access<br /> CG0 - Bitplanes 0, 1 from the character generator<br /> CG1 - Bitplanes 2, 3 from the character generator<br /><br /> The default mode all games use is 0, as far as I can tell, modes 1, 2 are<br /> identical, and mode 3 enables the CG mode bit as described later.</div>
<br />I never quite understood this exactly.  VRAM can be written to at any time, but the access that the CPU is given is spread between VDC VRAM accesses.  At any rate, I got small graphical corruption when I tried writing freely to the VDC in my Fractal Engine program, so I set up writes to occur during HBlank interrupts.  I guess this slows down the program a little bit, but fractal computation stil takes longer than one scanline, I figured.
<br />
<br />I might go back to my program someday and see if I can get it to write to VRAM at any time, speeding up writing.
<br />
<br />On the NES, yes CHR-RAM writing is limited, but it can still be optimized -- look at what carts like Videomation do.  I think for fractals, your 4x4 CHR bank is good enough, because who wants to watch a fractal on the NES render four times slower than it already is?  <img src="./images/smilies/icon_razz.gif" alt=":P" title="Razz" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>MottZilla</b> [ Fri Jul 25, 2008 11:17 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I'm not sure what a fractal engine is, but I don't see the point. These machines are meant for games. They are perfectly capable of performing rich and enjoyable games. 
<br />
<br />As for CHR-RAM and the NES in general, just look at Battletoads. :p You can do alot with the NES. You just can't be as wasteful as you can with newer platforms. But when you consider how simple most games are, and how much fun simple games can be, the NES can get the job done. And it does quite well if you pair the NES with a beefy memory mapper like the MMC5. Though even with a MMC3, you can accomplish alot in your games.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>ccovell</b> [ Sat Jul 26, 2008 6:27 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">MottZilla wrote:</div><div class="quotecontent">I'm not sure what a fractal engine is,</div><br /><!-- m --><a class="postlink" href="http://www.disgruntleddesigner.com/chrisc/fractalengine.html">http://www.disgruntleddesigner.com/chri ... ngine.html</a><!-- m --><br /><br /><div class="quotetitle">MottZilla wrote:</div><div class="quotecontent">but I don't see the point.These machines are meant for <a href="http://www.disgruntleddesigner.com/chrisc/TMLogic.html" class="postlink">games</a>.</div> <img src="./images/smilies/icon_sad.gif" alt=":(" title="Sad" /> <br /><div class="quotetitle">MottZilla wrote:</div><div class="quotecontent">They are perfectly capable of performing rich and enjoyable <a href="http://www.disgruntleddesigner.com/chrisc/solarwars.html" class="postlink">games</a>. </div><br />True, but they are also capable of running various other kinds of software.  You probably also don't see the point of <a href="http://www.pouet.net/" class="postlink">demos</a>, either.<br /><br /><div class="quotetitle">MottZilla wrote:</div><div class="quotecontent">As for CHR-RAM and the NES in general, just look at Battletoads. :p You can do alot with the NES. You just can't be as wasteful as you can with newer platforms. But when you consider how simple most games are, and how much fun simple games can be, the NES can get the job done. And it does quite well if you pair the NES with a beefy memory mapper like the MMC5. Though even with a MMC3, you can accomplish alot in your games.</div>
<br />This, at least, is true.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Sat Jul 26, 2008 10:15 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">ccovell wrote:</div><div class="quotecontent">You probably also don't see the point of <a href="http://www.pouet.net/" class="postlink">demos</a>, either.</div>
<br />To me, the main point of demos is showing uncommon amazing effects, that couldn't be normally used in games because they require too much CPU time/ROM/RAM/whatever.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sat Jul 26, 2008 10:18 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Demos vs. games</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">MottZilla wrote:</div><div class="quotecontent">I don't see the point. These machines are meant for games.</div><br />Are Nintendo platforms also meant just for games? If so, are these games?<br /><ol style="list-style-type: lower-alpha"><li>Videomation </li><li>Mario Paint </li><li>Workboy </li><li>PictoChat </li><li>Electroplankton </li><li>Animal Crossing: Wild World </li><li>Play-Yan </li><li>MoonShell </li><li>DSOrganize </li></ol> All of these run on a Nintendo platform, but for each one, I can think of at least one objection to calling it a game.<br /><br /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">amazing effects, that couldn't be normally used in games because they require too much CPU time/ROM/RAM/whatever.</div>
<br />Have you played Recca? It's a shooter that looks like a demo with sprites on top.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>