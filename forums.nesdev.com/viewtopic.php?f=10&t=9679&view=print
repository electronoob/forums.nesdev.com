<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Writing data to an address...</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Writing data to an address...</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=10&amp;t=9679">http://forums.nesdev.com/viewtopic.php?f=10&amp;t=9679</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>v!rg!n</b> [ Sun Jan 06, 2013 7:00 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Writing data to an address...</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I'm not new to programming, but I'm new to assembly and low-level programming concepts and so far I'm having an easy time grasping the concepts and everything, but there's one thing right now that I'm having trouble with.  Can you write and hold multiple pieces of data (such as multiple sprites) in a single address, like $2007, or can it only hold a single piece of datum (such as a single sprite) at a time?  If you can write multiple pieces of data, what's the limit that it can hold?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>3gengames</b> [ Sun Jan 06, 2013 7:05 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Writing data to an address...</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Each address is one entity in memory. It's just the entities might not really go to the location, but to somewhere else that does something to them. You can write to $2007, but it doesn't hold anything. It passes it to the PPU which saves it to RAM. RAM is $0000-$07FF, and each entity REALLY holds the value written. All other locations from (2000-2007,4000-401whatever) all go to other parts. Most of the time they're not stored at the location as RAM is, but perform a function on a piece of the hardware.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>v!rg!n</b> [ Sun Jan 06, 2013 7:13 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Writing data to an address...</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">3gengames wrote:</div><div class="quotecontent">Each address is one entity in memory. It's just the entities might not really go to the location, but to somewhere else that does something to them. You can write to $2007, but it doesn't hold anything. It passes it to the PPU which saves it to RAM. RAM is $0000-$07FF, and each entity REALLY holds the value written. All other locations from (2000-2007,4000-401whatever) all go to other parts. Most of the time they're not stored at the location as RAM is, but perform a function on a piece of the hardware.</div><br /><br />So, how does it handle managing multiple pieces of data written to it?  Does it act similar to an array?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Sun Jan 06, 2013 7:14 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Writing data to an address...</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Does the wikipedia article on <a href="http://en.wikipedia.org/wiki/MMIO" class="postlink">Memory-mapped I/O</a> make sense to you?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>v!rg!n</b> [ Sun Jan 06, 2013 7:38 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Writing data to an address...</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">lidnariq wrote:</div><div class="quotecontent">Does the wikipedia article on <a href="http://en.wikipedia.org/wiki/MMIO" class="postlink">Memory-mapped I/O</a> make sense to you?</div><br /><br />Yes...I have a basic understanding of memory maps.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>3gengames</b> [ Sun Jan 06, 2013 7:40 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Writing data to an address...</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">v!rg!n wrote:</div><div class="quotecontent"><div class="quotetitle">3gengames wrote:</div><div class="quotecontent">Each address is one entity in memory. It's just the entities might not really go to the location, but to somewhere else that does something to them. You can write to $2007, but it doesn't hold anything. It passes it to the PPU which saves it to RAM. RAM is $0000-$07FF, and each entity REALLY holds the value written. All other locations from (2000-2007,4000-401whatever) all go to other parts. Most of the time they're not stored at the location as RAM is, but perform a function on a piece of the hardware.</div><br /><br />So, how does it handle managing multiple pieces of data written to it?  Does it act similar to an array?</div><br /><br />It depends, read the Wiki on NESDev on how the registers work. As for $2007, it usually increments by one through the memory, but sometimes it inc's by 32 if you set it to. Yes, basically everything is an array.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Movax12</b> [ Sun Jan 06, 2013 7:40 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Writing data to an address...</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />With a system like the NES, every address can be read from or written to with 8 bits of information only. What is on the other end of the address is determined by the hardware. If it is RAM it will return or store the 8 bits of information as requested. If it is something else, what happens is determined by that hardware's function.<br /><br />The NES is almost like two systems (CPU and PPU) with their own RAM, ROM (on the game cart) and communication buses. The NES CPU and PPU communicate through a few memory mapped I/O registers at $2000 to $2007. See: <!-- m --><a class="postlink" href="http://wiki.nesdev.com/w/index.php/PPU_registers">http://wiki.nesdev.com/w/index.php/PPU_registers</a><!-- m --><br /><br />Edit: for clarity.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sun Jan 06, 2013 8:22 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Writing data to an address...</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />There are two different buses in the NES. The CPU can see only the CPU bus, with RAM at $0000-$07FF, MMIO at $2000-$401F, and ROM at $8000-$FFFF. There is a separate bus connected to the PPU, with pattern tables at $0000-$1FFF, nametables at $2000-$2FFF, and the palette at $3F00-$3F1F. The only way to write to memory on the PPU bus is through the PPU's MMIO ports $2006 and $2007. When you write something to $2007 during vertical blanking or forced blanking, it doesn't actually get stored at $2007 anywhere. The PPU sees it as a request to do the following:<br /><ol style="list-style-type: decimal"><li>Write the value at the current VRAM address, which could be pointing to pattern table memory, nametable memory, or palette memory, depending on how $2006 was set </li><li>Add 1 or 32 to the current VRAM address, depending on the increment setting in $2000 </li></ol>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Sun Jan 06, 2013 10:40 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Writing data to an address...</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Rather, the CPU can send a 16-bit value + 8-bit value pair to the outside world (write), or send a 16-bit value to the outside world along with a request for an 8-bit value back (read). Hardware can do anything with this, as long as the requests for instructions give something meaningful for the CPU to execute. Usually this means giving a meaningful value for the requests from 0xFFFC and 0xFFFD, and then meaningful values for the address formed by those two requests, and whatever else that interpreted as 6502 instructions causes. Read-only memory gives the same value back for a given address, and ignores values sent. Read/write memory (RAM) gives the last sent value back. Things like the PPU's $2007 act as a cursor within some other memory space.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Mon Jan 07, 2013 4:38 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Writing data to an address...</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Just for clarification, when you write to $2007 technically you're always writing to the same address, which is a register inside the PPU.<br /><br />Then the PPU will immediately detect the write to $2007 and transfer it to VRAM. However, it was the PPU that wrote the data to VRAM, not the CPU.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Jeroen</b> [ Tue Jan 08, 2013 10:47 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Writing data to an address...</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />No time to read the whole thread, but I always felt this page explained very well how a cpu interacts with the rom/adressing. <br /><!-- m --><a class="postlink" href="http://lateblt.tripod.com/6502prj1.htm">http://lateblt.tripod.com/6502prj1.htm</a><!-- m --><br /><br />Maybe that'll help you figure out what is actually happening.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>