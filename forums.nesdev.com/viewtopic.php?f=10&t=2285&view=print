<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Is this code okay?</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Is this code okay?</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=10&amp;t=2285">http://forums.nesdev.com/viewtopic.php?f=10&amp;t=2285</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>oxymoron</b> [ Wed Oct 18, 2006 5:18 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Is this code okay?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I've been messing around with the 6502 simulator and tried making a program that counts up from $00 to $1F and stores the numbers in memory in as few steps as possible. Could this code be made shorter somehow?
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp;.ORG $8000<br />&nbsp; &nbsp;LDA #$20<br />&nbsp; &nbsp;sta $8088<br />&nbsp; &nbsp;LDX #$00&nbsp; &nbsp;<br />loop:&nbsp; &nbsp;<br />&nbsp; &nbsp;TXA<br />&nbsp; &nbsp;CMP $8088<br />&nbsp; &nbsp;beq end<br />&nbsp; &nbsp;sta $8040,x<br />&nbsp; &nbsp;INX<br />&nbsp; &nbsp;jmp loop<br />end:&nbsp; &nbsp;</div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Memblers</b> [ Wed Oct 18, 2006 6:15 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="codetitle"><b>Code:</b></div><div class="codecontent">.org $8000<br /><br />&nbsp;ldx #0<br />loop:<br />&nbsp;txa<br />&nbsp;sta $8040,x<br />&nbsp;inx<br />&nbsp;cpx #$20<br />&nbsp;bne loop<br /></div>
<br />
<br />Originally 20 bytes, now 11 bytes.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>dvdmth</b> [ Wed Oct 18, 2006 7:59 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />If you use zero page memory and count down from $1F to $00, you can make the code even shorter:
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; LDX #$1F<br />loop:<br />&nbsp; TXA<br />&nbsp; STA &lt;$40, X<br />&nbsp; DEX<br />&nbsp; BPL loop</div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>oxymoron</b> [ Wed Oct 18, 2006 10:25 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />thanks memblers... I forgot about cpx.  <img src="./images/smilies/icon_rolleyes.gif" alt=":roll:" title="Rolling Eyes" /> I was hoping to make it so you could dynamically change the value of the counter from within the program though. Can it be made shorter if that was a consideration?
<br />
<br />(btw it's just a brain excersize)
<br />
<br />thanks too dvdmth. I thought about that but I wanted it to be able to store the numbers anywhere in memory.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Thu Oct 19, 2006 1:31 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />It's still shorter (two bytes) and faster (2 clocks per iteration) to count down than up, due to DEX doing an implicit CMP #0 after decrementing X. Replace &lt;$40 with $8040 and you have the same result as your code. Note that this will only work for counting down from $80 or less, since greater values would cause the loop to terminate after the first iteration.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Thu Oct 19, 2006 2:34 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />To count up to number greather than $80, you'll have to trick a bit :
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp; &nbsp;ldx #$ff<br />-&nbsp; &nbsp; txa<br />&nbsp; &nbsp; &nbsp;sta Somewhere,X<br />&nbsp; &nbsp; &nbsp;dex<br />&nbsp; &nbsp; &nbsp;bne -<br />&nbsp; &nbsp; &nbsp;stx Somewhere</div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Memblers</b> [ Thu Oct 19, 2006 12:21 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />If you wanted to be evil, you could do self-modifying code in RAM (going from dvdmth's code).
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">loop_value = label+1<br />&nbsp;lda #$40-1 ;&#40;do 64&#41;<br />&nbsp;sta loop_value<br /><br />.org somewhere_in_RAM<br />label:<br />&nbsp; LDX #$1F<br />loop:<br />&nbsp; TXA<br />&nbsp; STA &lt;$40, X<br />&nbsp; DEX<br />&nbsp; BPL loop<br /></div>
<br />
<br />Or the easier way, put an RTS at the end and do an LDX then JSR to the loop label.  But JSR/RTS together costs something like 12 cycles, JMP is only 3, so the self-modifying code is good if speed really counts.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Thu Oct 19, 2006 1:15 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Easy guys, or you'll confuse the poor guy. This battle for speed/size is eventually important, but for now, as long as the code does what it's supposed to, it's OK.
<br />
<br />Oxymoron, it doesn't really matter if there is a better/shorter way to do some task when you're learning 6502 assembly. Because, you know, there <strong>always</strong> is a faster way to do things. What is important now is that you understand how each instruction behaves and affects the CPU, and that you can successfully code a program that will do what you expect it to.
<br />
<br />I say that because sometimes, when you look at clever, tight code, it isn't always clear what it's supposed to do, 'cause often there are "tricks" involved. And learning through tricks is not a good way to start.
<br />
<br />In the future, when you start thinking the same way as the processor works, these kind of improvemnts/shortcuts will also start to appear clearly in your head. Don't worry about that too much right now.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Thu Oct 19, 2006 1:33 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">This battle for speed/size is eventually important, but for now, as long as the code does what it's supposed to, it's OK. </div>
<br />Well, it's important in up to a certain point, but Memblers tend to be a bit too "evil" usually, and well, my opinion is that you should always with code that is understandable and easily modifiable/fixable, even if you do a minimun of tricks to gain ROM space.
<br />If you really need trick, it is recommanded to comment them very well and/or to have a commented "untricked" version of the code in order to have yourself understand what you was doing when you look at code you wrote 6 months ago.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Memblers</b> [ Thu Oct 19, 2006 4:13 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Well he did say it was just a brain exercise, rather than some project code.  So I figure anything goes, I didn't post my fastest methods though since the goal was size. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />  Just some (partially or fully) unrolled loops anyways.
<br />
<br />But I definitely agree though that code should be kept easy to read and understand.  Except inside of loops that run several times per frame, then you definitely should use little tricks like the one dvdmth posted wherever possible.  Ditching that compare when copying 32 bytes saves 64 cpu cycles (over half a scanline), the 2 less ROM bytes only matter if you're writing a 1024 byte game or something. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />
<br />
<br />Also nothing wrong with writing code that works, then coming back later and optimizing if needed.  Like when I first wrote Roadkill (while still learning how to code), most of the frame was taken up by hit detection code.  When I optimized it some years later, the results were the same but the code was something like 300% faster.  When handling 62 sprites, that's a tremendously, ridiculously huge difference.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>oxymoron</b> [ Thu Oct 19, 2006 7:40 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I appreciate the tips guys. I don't know what the &lt; in "&lt;$40" means? But otherwise those examples mostly make sense. Although like I said, I didn't want to make the code do something different (ie count down instead of up, although I didn't think about DEX setting the Z flag - is that what you mean when you say "implicit CMP #0" blargg?) or make it incporporate "tricks", I just wanted to know if I had missed something obvious that would have reduced the number of steps. I can't even think of a reason to actually use this routine off the top of my head, I had just written a bunch of things in the simulator and decided to try cutting them down to make them as small as possible as an excersize.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Thu Oct 19, 2006 8:17 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">oxymoron wrote:</div><div class="quotecontent">I appreciate the tips guys. I don't know what the &lt; in "&lt;$40" means?</div>
<br />In 65xx assembly language, &lt; means bits 7-0, &gt; means bits 15-8 ("page"), and | means bits 23-16 ("bank", generally 65816 only). If you know C, I can explain a lot of 65xx concepts in terms of C.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Thu Oct 19, 2006 8:33 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />He probably did that to make sure that the instruction would be assembled to the zero-page addressing version (where the high byte of the address is implied, $00). Otherwise, it could be assembled to the equivalent of "STA $0040, X", which would be wasteful (both in space and time) in this case. I wouldn't usually do that, and assume that the assembler is smart enough to use the appropriate instruction.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Memblers</b> [ Thu Oct 19, 2006 9:43 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />NESASM is the only assembler I'm aware of that requires you to force it to use zero-page.  Actually though when making my NSF player I ran across a few games that never use zero-page, always stuff like STA $0000 (whoops!).
<br />
<br />But for a practical example of using &lt; and &gt;, you'll very often see stuff like this:
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">filething = $C032<br /><br />&nbsp;lda #&gt;filething ; $C0<br />&nbsp;sta addr_hi<br />&nbsp;lda #&lt;filething ; $32<br />&nbsp;sta addr_lo<br /></div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Fri Oct 20, 2006 8:43 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />WLA-DX almost forces you to either default to zero page and force to non-zero page or the other way arround (like NESASM does).
<br />
<br />In NESASM (and ONLY in NESASM) :
<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">lda &lt;Label</div>
<br />means like
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">lda Label.b</div><br />would in WLA-DX<br /><br />In WLA-DX it is use to just say<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">lda Label</div><br />for zero page and to have<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">lda Label.w</div>
<br />for non-zero page instruction.
<br />This is isn't all that bad because it forces the programmer to know wich varaiables aren't in zero page, and you can use "sta $2000" without mention "sta $2000.w", so it is just for variables and not for registers you have to do the .w trick.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>