<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Need help with where to get started in NES Dev</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Need help with where to get started in NES Dev</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=5&amp;t=12275">http://forums.nesdev.com/viewtopic.php?f=5&amp;t=12275</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>drk421</b> [ Sun Jan 18, 2015 10:53 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Need help with where to get started in NES Dev</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />So I'm finally looking to work on a NES game, but I'd like to prototype it in a higher level language first.<br /><br />I really see this as 2 parts -<br />1) writing larger side 6502 programs<br />2) know the PPU inside and out<br /><br />My 6502 assembly language skills aren't that great, so I was thinking...<br />Wouldn't it be neat if I could write my game in C (or Python even) code and just talk to an emulated PPU through a function (or port), and get a function callback when an IRQ occurs.<br />This would allow me to get familiar with the PPU before I have to deal with 8 bit assembly.<br /><br />Are there any emulators that support this kind of thing?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Espozo</b> [ Sun Jan 18, 2015 11:51 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Need help with where to get started in NES Dev</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />You mean write a game in C, compile it, run it through a debugger and see exactly what instructions it is doing in ASM? (I really don't know anything about the NES, but I bet any debugging emulator will do if I'm right.) I don't know If you plan on making the entire game in C or Python and then doing this, but It would seem like it would take more effort to essentially write the game twice then to just have a slower first time.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Mon Jan 19, 2015 1:05 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Need help with where to get started in NES Dev</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Shiru does have the &quot;how to write NES games in C&quot; guide: <!-- m --><a class="postlink" href="http://shiru.untergrund.net/articles/programming_nes_games_in_c.htm">http://shiru.untergrund.net/articles/pr ... s_in_c.htm</a><!-- m --><br /><br />Yes, it's somewhat restricted, but is definitely a good way to get something made with minimal barrier to entry.<br /><br />If you want something a little less constrained but less helpful, but still allowing you to use C in general, I've found thefox's <a href="http://kkfos.aspekt.fi/projects/nes/libraries/knes-library-for-cc65/" class="postlink">KNES</a> to be a good replacement/augment for CC65's neslib.<br /><br />You could also look at the Mojon Twins' <a href="http://forums.nesdev.com/viewtopic.php?t=10783" class="postlink">games</a>, which <a href="http://forums.nesdev.com/viewtopic.php?t=10123" class="postlink">are</a> written in a C/asm blend and source is included.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Mon Jan 19, 2015 8:16 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Need help with where to get started in NES Dev</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I think he's talking about writing the prototype in C (or another high-level language) while still having access to an emulated PPU, so he can get the hang of how to talk to the PPU without having to learn a whole new language. He orobably does want to learn 6502 eventually, and by then, writing NES software might be easier.<br /><br />I'm not sure it will work as you expect, but FCEUX can run Lua scripts in parallel with the game. Maybe you can start with a blank ROM (except for graphics) and write the game itself using Lua?<br /><br />All things considered, I don't think the PPU needs such a big learning curve. Once you understand how the graphics are formed (something you can do with little to no programming experience by looking at the PPU debuggers in FCEUX or Nintendulator) you can get some graphics up very quickly. Learning how the CPU works is harder, if you don't have any experience with that, but the hardest thing of all is the logic that controls the game: the object management, interactions, level processing, that kind of stuff, no matter what language you use.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Espozo</b> [ Mon Jan 19, 2015 8:31 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Need help with where to get started in NES Dev</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />How can you &quot;talk&quot; to the PPU without actually making a game, which, if it is like the SNES, will go to the CPU and then the PPU? Are you wondering if you can essentially skip the processor altogether and just feed the PPU information directly?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Mon Jan 19, 2015 8:48 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Need help with where to get started in NES Dev</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I think once I or someone else should really do a deep reseach about existing high level alternatives for the NES (or the 6502 in general). <a href="http://www.dwheeler.com/6502/" class="postlink">Someone</a> already did it, but he does not mention any numbers when it comes to efficiency of those solutions.<br /><br />What exists so far :<br />1) Home-made tools done by random enthusiasts<br />1.1) <a href="http://atalan.kutululu.org" class="postlink">ATALAN</a><br />1.2) <a href="https://code.google.com/p/uc65/" class="postlink">uc65</a><br /><br />Pros : Designed to produce efficient 6502 assembly code<br />Con : Have to learn a specific programing language, exe. Both are in development phase, not &quot;stable&quot; yet. Atalan doesn't seem under active devlopment anymore.<br /><br />2) Virtual Machine solutions<br />2.1) <a href="http://atariwiki.strotmann.de/wiki/Wiki.jsp?page=A+FORTH+ASSEMBLER+FOR+THE+6502" class="postlink">FORTH</a><br />2.2) <a href="http://www.white-flame.com/acheron/" class="postlink">AcheronVM</a> (<a href="https://github.com/AcheronVM/acheronvm" class="postlink">github repository</a>)<br />2.3) <a href="http://schmenk.is-a-geek.com/PLASMA.html" class="postlink">Plasma</a><br /><br />Pros : Better code density than native 6502 code -&gt; good for saving ROM space<br />Cons : Have to learn a specific programming language (except for FORTH which is widely recognized, but still not so well known). Slow, many parts will have to be developped in assembly, the learning cuve to learn VM and assembly could be high. Debugging could get complex<br /><br />3) C compilers<br />3.1) <a href="http://www.cc65.org" class="postlink">CC65</a>(Pros : open source, has been in development until recently. Con : Maintained by one author who did not allow other people to contribute (non-free, despite being costless and open-source), produces terrible code unless you are tuning both your code and the compile options at a point it becomes ridiculous and no C anymre, does not accept all C standard, not in development anymore.<br />3.11) <a href="http://forum.6502.org/viewtopic.php?p=9290#p9290" class="postlink">Any random CC65 fork done by people who wanted it to make it more efficient</a>. (Pros : Generates better code, Cons : Not officially maintained, not under active development)<br />3.2) <a href="http://www.kdef.com/geek/vic/quetz.html" class="postlink">Quezacoatl</a>(Pros : Is free software, does not use this ridiculous &quot;software stack&quot; CC65 uses. Cons : Does not accept all C standard, is not under active development since long)<br />3.3) <a href="http://www.ace.nl/compiler/cosy.html" class="postlink">CoSy</a> A compiler that is supposed to be re-targettable and very efficient. Con : Proprietary software, probably very expensive, but if many people raises funds pehaps it'd be possible to finally have a good 6502 C compiler, without spending years of non-paid development time for existing free software solutions that does not support the 6502 as a backend ?<br /><br />4) Other well known language compilers<br />Does any ADA, Fortran or other compilable langauge compilers exist for the 6502 ? Are those language more suited to 6502 than C, which is often said to be in terrible mismatch with the 6502 ?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Mon Jan 19, 2015 9:46 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Need help with where to get started in NES Dev</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Espozo wrote:</div><div class="quotecontent">It would seem like it would take more effort to essentially write the game twice then to just have a slower first time.</div><br />It can still be faster to first prototype the physics and AI in a higher-level language that lets the programmer make large-scale changes more rapidly. Then the basic game design can be considered set in stone to an extent, and one can at least figure out how memory is likely to be laid out. This is how Mr. Podunkian made <em>STREEMERZ</em>: first make it in some Game Maker-type environment and then outsource the NES port to thefox.<br /><br />Consider the constructed language Esperanto. Studies have shown that learning Esperanto then some other language like French is <a href="https://en.wikipedia.org/wiki/Propaedeutic_value_of_Esperanto" class="postlink">faster than just learning French</a> because it prepares the mind to understand how languages differ, and Esperanto has fewer* fiddly irregularities in spelling and morphology than French.<br /><br /><div class="quotetitle">Espozo wrote:</div><div class="quotecontent">How can you &quot;talk&quot; to the PPU without actually making a game</div><br />An emulator contains an emulated CPU together with an emulated PPU that exposes port read and port write commands. This setup would include only an emulated PPU, and a game engine in native code for the PC would execute these port read and port write commands. Think of it as like pulling the PPU from the NES motherboard and putting it on a circuit board that's connected to a PC.<br /><br /><span style="font-size: 85%; line-height: normal">* I'm not saying Esperanto is perfect; I'm aware of <a href="http://www.xibalba.demon.co.uk/jbr/ranto/" class="postlink">JBR's &quot;Ranto&quot;</a>. The point is that Esperanto is still not quite as hard as a major European language.</span>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>drk421</b> [ Mon Jan 19, 2015 11:16 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Need help with where to get started in NES Dev</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I think tepples understands exactly what I want to do. Sorry if I wasn't able to clearly convey what I'd like to do.<br /><br />I understand the game will have to be re-written twice. It's just to make the learning process easier.<br />I've written games before in high level languages Java/Python/ObjC from scratch (no frameworks), so I understand game loops, objects, collision detection, cameras, etc...<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Think of it as like pulling the PPU from the NES motherboard and putting it on a circuit board that's connected to a PC.</div><br /><br />I actually thought about doing this, but it could be tricky getting the timing to work.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Mon Jan 19, 2015 11:47 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Need help with where to get started in NES Dev</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">drk421 wrote:</div><div class="quotecontent">I actually thought about doing this, but it could be tricky getting the timing to work.</div><br /><a href="http://forums.nesdev.com/viewtopic.php?p=109786#p109786" class="postlink">It has been done</a>. Unfortunately I can't find the original information.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Movax12</b> [ Mon Jan 19, 2015 12:34 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Need help with where to get started in NES Dev</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">I think once I or someone else should really do a deep reseach about existing high level alternatives for the NES.. </div><br /><br />Also, (not a language, but) my extension to ca65: <!-- m --><a class="postlink" href="https://www.assembla.com/spaces/ca65hl/wiki">https://www.assembla.com/spaces/ca65hl/wiki</a><!-- m --><br />I also like (even though I don't understand Lisp) (see links at bottom of the page) <!-- m --><a class="postlink" href="http://ahefner.livejournal.com/20528.html">http://ahefner.livejournal.com/20528.html</a><!-- m --><br /><br />But if you just want to poke the PPU in an emulator, try thefox's NintendulatorDX. You can code everything in Lua, rather than assembly. Then when you are ready, start coding in assembly. <!-- l --><a class="postlink-local" href="http://forums.nesdev.com/viewtopic.php?t=6773">viewtopic.php?t=6773</a><!-- l -->

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Mon Jan 19, 2015 12:53 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Need help with where to get started in NES Dev</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I'm developing my game by writing it in C++ with a framework that fits the function/shape of the NES including its PPU operation. When parts of the code stop changing much, I port them to NES assembly.<br /><br />I don't know what I'd suggest for you, though. I'm not willing to share my framework at this time. Writing an ersatz PPU layer kinda requires knowing how to use the PPU already, and to learn that you probably need to learn 6502 assembly.<br /><br />Shiru's NES screen tool might be a good way to learn how NES background graphics work without having to learn the programming details: <a href="http://shiru.untergrund.net/software.shtml" class="postlink">http://shiru.untergrund.net/software.shtml</a>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Kasumi</b> [ Mon Jan 19, 2015 1:14 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Need help with where to get started in NES Dev</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Part of the issue I see with this is that the PPU is so based on how much you can cram in before rendering starts. How do you make sure whatever C++ code you're writing doesn't massively blow through this limit? Counting int x = 3 as five cycles? What about loops or whatever? The framework works for rainwarrior because he's familiar with nesdev and would know how to limit that aspect.<br /><br />Even if you hard limited yourself like &quot;I can't write more than 80 bytes to the PPU in a frame,&quot; it's still massively difficult to write code that would set up and write these bytes in 6502. <br /><br />You run into a similar problem just creating enemies and such for the game. It's very easy to create game logic in C that would slow your game down to a crawl. And again, I'd say those who prototype know what to avoid because they have already worked through the part you're trying to skip. (Or at least the part you don't want to do first.)<br /><br />I think using Shiru's C library is about the best you can do. If you write unfeasible code, you'll at least immediately be able to tell. It would kind of suck to design your level format, then find you have to completely change it because it's not fast enough to decode once you start the NES version. Or find you're doing too many PPU updates, and have to change your game's design. I feel these are traps you'd fall into if what you were seeking was available.<br /><br />Edit: Though actually most of that only matters if you plan to update things in the PPU during gameplay. If you don't (like for a non scrolling game with no background HUD), the PPU is actually super easy to deal with.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>