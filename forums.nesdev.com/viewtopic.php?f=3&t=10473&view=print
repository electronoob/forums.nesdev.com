<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Debugging the cpu core</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Debugging the cpu core</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=3&amp;t=10473">http://forums.nesdev.com/viewtopic.php?f=3&amp;t=10473</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>3</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dartht33bagger</b> [ Sun Sep 08, 2013 7:30 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Debugging the cpu core</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I thought I'd just make a new thread for this.  I've been trying for weeks now to debug my cpu core and I just don't know where to go from here.  My core passes some of blarg's tests.  Here are what each of the tests do:<br /><br />01-basics: passes<br />02-implied: passes<br />03-immediate: Doesn't pass.  $6000 = $80 no matter how much time passes.  Goes into an infinite BRK instruction after INC instruction is carried out at $03A1<br />04-zero_page: Doesn't pass.  $6000 = $80 no matter how much time passes.  Goes into infinite BRK after $03A1<br />05-zp_xy: Doesn't pass. $6000 = $80 no matter how much time passes. <br />06-absolute: Doesn't pass. $6000 = $80 no matter how much time passes. <br />07-abs_xy: Doesn't pass. $6000 = $80 no matter how much time passes. <br />08-ind_x: Fails but only illegal opcodes are output as being wrong (I'm only testing official opcodes)<br />09-ind_y: Same as ind_x<br />10-branches: passes<br />11-stack: passes<br />12-jmp_jsr: passes<br />13-rts: passes<br />14-rti:passes<br />15-brk: fails. $6000 = $80 no matter how much time passes. <br />16-special: fails. $6000 = $80 no matter how much time passes. <br /><br />I have a debug function written that outputs all instructions like this, but the text file gets so big that I have no idea how it's helpful:<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">E883  78        SEI                             A:00 X:00 Y:00 P:30 SP:FD CYC:  0<br />E884  4C B3 EC  JMP $ECB3                       A:00 X:00 Y:00 P:34 SP:FD CYC:  6<br />ECB3  8D 24 02  STA $0224 = 00                  A:00 X:00 Y:00 P:34 SP:FD CYC: 15<br />ECB6  A9 00     LDA #$00                        A:00 X:00 Y:00 P:34 SP:FD CYC: 27<br />ECB8  8D 00 20  STA $2000 = 00                  A:00 X:00 Y:00 P:36 SP:FD CYC: 33<br />ECBB  8D 01 20  STA $2001 = 00                  A:00 X:00 Y:00 P:36 SP:FD CYC: 45<br />ECBE  4C 87 E8  JMP $E887                       A:00 X:00 Y:00 P:36 SP:FD CYC: 57</div><br /><br />So, what is the best way of going about debugging this CPU core?  All of the tests that fail get off track some way or another and never actually print any output ($6000 is always $80, so it's still running) because it gets stuck in an infinite BRK.  I have no idea what opcodes to even start looking at.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Sun Sep 08, 2013 8:09 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Debugging the cpu core</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />There's always <a href="http://wiki.nesdev.com/w/index.php/Emulator_tests#CPU" class="postlink">nestest with a log of correct execution</a> to compare your CPU with. Pinpoints exactly where you go astray.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dartht33bagger</b> [ Sun Sep 08, 2013 11:11 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Debugging the cpu core</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I was using that test originally, but I switched over to yours because the nestest tests illegal opcodes.  My cpu is correct up until the illegal opcodes start.  Some of my illegal opcodes aren't right and I couldn't figure out the correct behavior for their flags, so I turned them off.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Mon Sep 09, 2013 12:56 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Debugging the cpu core</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />My individual CPU tests also try unofficial opcodes, I'm pretty sure. Only the large multi-test ROMs have a version of only official opcodes. It's not too hard to have your core just skip unofficial instructions.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dartht33bagger</b> [ Mon Sep 09, 2013 1:04 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Debugging the cpu core</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I tried a variant of my cpu core once before that moved the PC counter accordingly for the unoffical opcodes but nothing more.  This caused a lot of issues on the nestest, however, because the processor status flags weren't correct when branch instructions came up.  Maybe it would have a different affect on your tests?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Mon Sep 09, 2013 1:47 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Debugging the cpu core</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />My instruction tests do each one individually, so that a failing one won't affect others (unless it's an instruction used by the tests, like say CMP # or something basic). It'd be interesting to make the CPU test immune to emulators that treat unofficial instructions as one-byte NOPs. Maybe it could try executing them with zero-byte operands and if a BRK occurs, skip that instruction.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Grapeshot</b> [ Mon Sep 09, 2013 2:20 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Debugging the cpu core</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />You can generate known good logs of the tests you're failing with Nintendulator's debugger and then diff them with yours (assuming the format is the same). A lot of programs have trouble with 300mb log files, but <a href="http://www.scootersoftware.com/" class="postlink">Beyond Compare</a> worked for that when I needed it.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dartht33bagger</b> [ Mon Sep 09, 2013 11:35 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Debugging the cpu core</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I took Grapeshot's suggestion and went with it.  I'm running through 03-immediate right now.<br /><br />Somehow my $2C BIT test isn't working right.  Everything matches up for 9000+ lines until Nestendulator just randomly switches up how $2C works.  I can't post the lines in question because the formatting gets messed up, but here is what happens the best I can explain it:<br /><br />A long loop occurs where $2C bit and BMI/BNE are alternated between.  Opcode $2C is reading address $2002 during the entire loop which is always set to $FF.  This leaves the processor status flags as $26 whenever the $2C opcode is ran UNTIL the last one that throws off my emulator.  The last $2C opcode that breaks out of the loop sets the negative flag (making the processor status $A6 so that the next BMI branches) even though it's still bit testing $FF.  I cannot for the life of me figure out why.<br /><br />Here is my code for $2C.  Originally, my processor status flags were wrong when running $2C. The wiki said that V and N were set to bits 6 and 7 of the data read.  That didn't work so I tried the not of the bits and it worked up until the last bit test I mentioned above. So theres that for you.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">case 0x2C:&nbsp; &nbsp;//Absolute bit test<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;temp = absolute(memory, ppu);<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;data = memory-&gt;readRAM(temp, ppu);<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;Z = !(A &amp; data);<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;V = !(data &amp; 0x40);&nbsp; &nbsp;//Gets the 6th bit only<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;N = !(data &amp; 0x80);&nbsp; &nbsp;//Gets the 7th bit only<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;debugAbs(opcode, memory-&gt;readRAM(PC + 1, ppu), memory-&gt;readRAM(PC, ppu), data, &quot;BIT&quot;); <br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;cycles =&nbsp; 4;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;PC += 2;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;break;</div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Mon Sep 09, 2013 11:51 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Debugging the cpu core</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />$2002 should definitely not return $FF forever. At the very least, the MSB should be cleared after you read from it.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Tue Sep 10, 2013 12:08 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Debugging the cpu core</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />You're setting N and V to the opposite of what they should be. Add a bang:<br /><br />V = !!(data &amp; 0x40);   //Gets the 6th bit only<br />N = !!(data &amp; 0x80);   //Gets the 7th bit only

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dartht33bagger</b> [ Tue Sep 10, 2013 12:31 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Debugging the cpu core</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">lidnariq wrote:</div><div class="quotecontent">$2002 should definitely not return $FF forever. At the very least, the MSB should be cleared after you read from it.</div><br /><br />That's what my code originally did but it was wrong according to Nintendulator.  Nintendulator kept $FF in $2002 and I had $7F in $2002, which vimdiff didn't like since the log files didn't match.<br /><br /><div class="quotetitle">blargg wrote:</div><div class="quotecontent">You're setting N and V to the opposite of what they should be. Add a bang:<br /><br />V = !!(data &amp; 0x40);   //Gets the 6th bit only<br />N = !!(data &amp; 0x80);   //Gets the 7th bit only</div><br /><br />My original code looked like this, but my log file would have the wrong processor status after the first bit test occured.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">V = data &amp; 0x40;&nbsp; &nbsp;//Gets the 6th bit only<br />N = data &amp; 0x80;&nbsp; &nbsp;//Gets the 7th bit only</div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Tue Sep 10, 2013 8:47 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Debugging the cpu core</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Dartht33bagger wrote:</div><div class="quotecontent">My original code looked like this, but my log file would have the wrong processor status after the first bit test occured.<br /><br />V = data &amp; 0x40;   //Gets the 6th bit only<br />N = data &amp; 0x80;   //Gets the 7th bit only</div><br />Maybe the data was wrong, rather than the instruction behavior?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dartht33bagger</b> [ Tue Sep 10, 2013 1:57 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Debugging the cpu core</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Alright, I'm just going to post the lines in question from the two logs files the best that I can.  My log file will be using code that doesn't not the V and N bits and clears bit 7 of $2002 after read.<br /><br />From Nintendulator's log:<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">E944  2C 02 20  BIT $2002 = FF A:00 X:01 Y:18 P:24 SP:FB CYC:  0 SL:171<br />E947  2C 02 20  BIT $2002 = FF A:00 X:01 Y:18 P:26 SP:FB CYC: 12 SL:171<br />E94A  30 06     BMI $E952                       A:00 X:01 Y:18 P:26 SP:FB CYC: 24 SL:171<br />E94C  CA        DEX                             A:00 X:01 Y:18 P:26 SP:FB CYC: 30 SL:171<br />E94D  D0 F8     BNE $E947                       A:00 X:00 Y:18 P:26 SP:FB CYC: 36 SL:171<br />E94F  88        DEY                             A:00 X:00 Y:18 P:26 SP:FB CYC: 42 SL:171<br />E950  10 F5     BPL $E947                       A:00 X:00 Y:17 P:24 SP:FB CYC: 48 SL:171<br />E947  2C 02 20  BIT $2002 = FF                  A:00 X:00 Y:17 P:24 SP:FB CYC: 57 SL:171<br /></div><br /><br />From my log on the same lines:<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">E944  2C 02 20  BIT $2002 = FF                  A:00 X:01 Y:18 P:24 SP:FB CYC:  0 SL:171<br />E947  2C 02 20  BIT $2002 = 7F                  A:00 X:01 Y:18 P:E6 SP:FB CYC: 12 SL:171<br />E94A  30 06     BMI $E952                       A:00 X:01 Y:18 P:66 SP:FB CYC: 24 SL:171<br />E94C  CA        DEX                             A:00 X:01 Y:18 P:66 SP:FB CYC: 30 SL:171<br />E94D  D0 F8     BNE $E947                       A:00 X:00 Y:18 P:66 SP:FB CYC: 36 SL:171<br />E94F  88        DEY                             A:00 X:00 Y:18 P:66 SP:FB CYC: 42 SL:171<br />E950  10 F5     BPL $E947                       A:00 X:00 Y:17 P:64 SP:FB CYC: 48 SL:171<br />E947  2C 02 20  BIT $2002 = 7F                  A:00 X:00 Y:17 P:64 SP:FB CYC: 57 SL:171</div><br /><br />Nintendulators N and V flags are always opposite to mine.  It also keeps reading $FF from $2002.  I'm stumped.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Tue Sep 10, 2013 2:31 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Debugging the cpu core</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Nintendulator's log doesn't even make sense, or it's lying about the value read from $2002.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Zepper</b> [ Tue Sep 10, 2013 2:38 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Debugging the cpu core</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />...

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>3</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>