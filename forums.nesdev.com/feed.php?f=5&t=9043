<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=5&amp;t=9043" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2012-07-01T13:58:20-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=5&amp;t=9043</id>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2012-07-01T13:58:20-07:00</updated>
<published>2012-07-01T13:58:20-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9043&amp;p=96326#p96326</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9043&amp;p=96326#p96326"/>
<title type="html"><![CDATA[Best programmed NES games/Games that pushed the limits]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9043&amp;p=96326#p96326"><![CDATA[
Wow, so they programmed something different for different levels !!<br />I must admit that's a little crazy, but after all why not ?<br /><br />Also the status bar is lower (and the extended VBlank bigger) for the Snake Pit and the Cylindrical Level in the NTSC version. There is still no extended VBlank in the PAL version though.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Sun Jul 01, 2012 1:58 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Dwedit]]></name></author>
<updated>2012-07-01T13:40:38-07:00</updated>
<published>2012-07-01T13:40:38-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9043&amp;p=96324#p96324</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9043&amp;p=96324#p96324"/>
<title type="html"><![CDATA[Best programmed NES games/Games that pushed the limits]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9043&amp;p=96324#p96324"><![CDATA[
Sprite 0 in the Turbo Tunnel is at scanline 141.  It's a black 1-pixel high horizontal line placed at X position 6.  You can visibly see it if you look carefully at how the background disappears at that point.<br /><br />In other levels, sprite 0 is indeed inside the status bar.  But not the Turbo Tunnel.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=53">Dwedit</a> — Sun Jul 01, 2012 1:40 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2012-07-01T13:33:29-07:00</updated>
<published>2012-07-01T13:33:29-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9043&amp;p=96323#p96323</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9043&amp;p=96323#p96323"/>
<title type="html"><![CDATA[Best programmed NES games/Games that pushed the limits]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9043&amp;p=96323#p96323"><![CDATA[
<div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />In the Turbo Tunnel, they use a sprite 0 hit that happens after the top part is done scrolling.<br /></div><br />I doubt it. Battletoads uses the sprite zero hit in the status bar, for the separation between the status bar and the playfield. The sound driver is called after the VBlank (which is constant timed) ends and the screen is enabled (late, after the extended VBlank). The sound driver is variable-timed, so they need the sprite zero hit in the status bar to split to the playfield accuracely.<br /><br />I guess all other effects mentioned is simply timed code after this split. This reduces CPU usage for the game, of course. Apparently they managed it to be fast enough, even when most of the screen is taken by raster effects, which means the game engine is very fast and efficient. When playing a sound effect via $4011, they ignore this part apparently, which causes weird scrolling glitches when you punch enemies.<br /><br />In Battletoads &amp; DoubleDragon, they did it the other way around, the timed code continues to run, but the PCM sound effects are distorted when there is a raster effect on the screen.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Sun Jul 01, 2012 1:33 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Dwedit]]></name></author>
<updated>2012-07-01T13:24:00-07:00</updated>
<published>2012-07-01T13:24:00-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9043&amp;p=96322#p96322</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9043&amp;p=96322#p96322"/>
<title type="html"><![CDATA[Best programmed NES games/Games that pushed the limits]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9043&amp;p=96322#p96322"><![CDATA[
I think that screen just times all code from NMI.  Notice how after the purple stuff is scrolled line-by-line, the rest of the screen scrolls very simply.<br /><br />In the Turbo Tunnel, they use a sprite 0 hit that happens after the top part is done scrolling.  Then they use a simplified screen renderer if it's playing PCM samples (game paused, etc.)<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=53">Dwedit</a> — Sun Jul 01, 2012 1:24 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Shiru]]></name></author>
<updated>2012-07-01T13:20:51-07:00</updated>
<published>2012-07-01T13:20:51-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9043&amp;p=96321#p96321</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9043&amp;p=96321#p96321"/>
<title type="html"><![CDATA[Best programmed NES games/Games that pushed the limits]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9043&amp;p=96321#p96321"><![CDATA[
I'm sure it is done with timed code. Since you only would need to put precalculated offsets, and you have most of frame time (at bottom part of the screen) to calculate them for the next frame, it shouldn't be too difficult.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4205">Shiru</a> — Sun Jul 01, 2012 1:20 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Denine]]></name></author>
<updated>2012-07-01T13:15:09-07:00</updated>
<published>2012-07-01T13:15:09-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9043&amp;p=96320#p96320</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9043&amp;p=96320#p96320"/>
<title type="html"><![CDATA[Best programmed NES games/Games that pushed the limits]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9043&amp;p=96320#p96320"><![CDATA[
I guess so. But this would require different level designs.<br /><br />And sorry about that off top. Back to games that push limits.<br />I actually played BattleToads(never bothered to do so before) and I'm amazed by the level where you fly on plane(Level7).<br />The mapper is AOROM.It has no IRQ. So how did they make <a href="http://youtu.be/qMuCefynmtA?t=1m56s" class="postlink">this effect</a>?<br />I mean those violet flames at the top of the screen.<br />The only way that comes to my mind is to wait for the end of status bar code, then time the code carefully so it'll wait for Hblank, change Horizontal scrolling on every scanline. But that's....insanely hard to do. For me, at least.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4239">Denine</a> — Sun Jul 01, 2012 1:15 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Dwedit]]></name></author>
<updated>2012-07-01T11:34:53-07:00</updated>
<published>2012-07-01T11:34:53-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9043&amp;p=96315#p96315</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9043&amp;p=96315#p96315"/>
<title type="html"><![CDATA[Best programmed NES games/Games that pushed the limits]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9043&amp;p=96315#p96315"><![CDATA[
I guess if you need a wide variety of background colors, try doing it without using color #0, but Attribute Clash would be a problem.<br />So backgrounds near the bottom use one set of palettes, and the sky color shares colors with that, then backgrounds near the middle of the screen use another set of colors, and the sky colors are shared with that, then different colors at the top of the screen.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=53">Dwedit</a> — Sun Jul 01, 2012 11:34 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Denine]]></name></author>
<updated>2012-07-01T11:21:02-07:00</updated>
<published>2012-07-01T11:21:02-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9043&amp;p=96313#p96313</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9043&amp;p=96313#p96313"/>
<title type="html"><![CDATA[Best programmed NES games/Games that pushed the limits]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9043&amp;p=96313#p96313"><![CDATA[
I'm sorry, I didn't understand, Shiru.<br />Anyway, Dithering can't be used for background color, color0(the"invisible" color, at $3F00), can it?<br />@Drag<br />That looks really good!<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4239">Denine</a> — Sun Jul 01, 2012 11:21 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Drag]]></name></author>
<updated>2012-07-01T10:27:52-07:00</updated>
<published>2012-07-01T10:27:52-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9043&amp;p=96312#p96312</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9043&amp;p=96312#p96312"/>
<title type="html"><![CDATA[Best programmed NES games/Games that pushed the limits]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9043&amp;p=96312#p96312"><![CDATA[
<div class="quotetitle">Shiru wrote:</div><div class="quotecontent"><br />I didn't mean that the palette update used in games, I mean that the 'dithering' used to make better gradient using just a few colors in many NES games. <a href="http://analpenis.bravehost.com/darkwing.JPG" class="postlink">Something like this</a>.<br /></div><br />If you want one that looks even crazier, try <a href="http://media.gamespy.com/columns/image/article/101/1013829/the-worst-nes-endings-and-why-we-deserved-better-20090813014456003.gif" class="postlink">the ending from Goonies 1</a>. (Which looks really nice on a real NES, by the way <img src="http://forums.nesdev.com/images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" />)<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=21">Drag</a> — Sun Jul 01, 2012 10:27 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Shiru]]></name></author>
<updated>2012-07-01T09:33:32-07:00</updated>
<published>2012-07-01T09:33:32-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9043&amp;p=96309#p96309</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9043&amp;p=96309#p96309"/>
<title type="html"><![CDATA[Best programmed NES games/Games that pushed the limits]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9043&amp;p=96309#p96309"><![CDATA[
I didn't mean that the palette update used in games, I mean that the 'dithering' used to make better gradient using just a few colors in many NES games. <a href="http://analpenis.bravehost.com/darkwing.JPG" class="postlink">Something like this</a>.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4205">Shiru</a> — Sun Jul 01, 2012 9:33 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Denine]]></name></author>
<updated>2012-07-01T09:27:47-07:00</updated>
<published>2012-07-01T09:27:47-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9043&amp;p=96308#p96308</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9043&amp;p=96308#p96308"/>
<title type="html"><![CDATA[Best programmed NES games/Games that pushed the limits]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9043&amp;p=96308#p96308"><![CDATA[
<div class="quotetitle">Shiru wrote:</div><div class="quotecontent"><br />Such gradients with just a few color steps could work much better with dithering, it is seen in many NES games (horizontal color lines of varying height).<br /></div><br />Can you give some titles? My code isn't prefect-I can change 1 color every 8 vertical pixels(need to restore scrolling with $2006).Maybe I can learn something from these games.<br /><br />@Bananmos<br />If I'm not mistaken, Shiru just said that this effect is seen in many NES games, so i think it is possible even on real hardware(provided that all this games use it for another things than cutscenes with no sprites).<br />Also, I can remember bug with corrupted sprited, on emulator. I got around it somehow.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />The sprite CHR patterns to be displayed on the next scanline get fetched during the first half of the hblank period, and there's just not enough cycles in the second half to turn rendering off, write $2006, write $2007, then restore scrolling with $2006 and possible $2005 and finally turn rendering back on again. So you'll end up with corrupted CHR graphics for your sprites...<br /></div><br />Is there really no way around this?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4239">Denine</a> — Sun Jul 01, 2012 9:27 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bananmos]]></name></author>
<updated>2012-06-29T14:17:03-07:00</updated>
<published>2012-06-29T14:17:03-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9043&amp;p=96232#p96232</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9043&amp;p=96232#p96232"/>
<title type="html"><![CDATA[Best programmed NES games/Games that pushed the limits]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9043&amp;p=96232#p96232"><![CDATA[
That palette trick might work fine in most emulators, but will glitch horribly on real hardware if you use any sprites at all. <br /><br />The sprite CHR patterns to be displayed on the next scanline get fetched during the first half of the hblank period, and there's just not enough cycles in the second half to turn rendering off, write $2006, write $2007, then restore scrolling with $2006 and possible $2005 and finally turn rendering back on again. So you'll end up with corrupted CHR graphics for your sprites...<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=106">Bananmos</a> — Fri Jun 29, 2012 2:17 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Shiru]]></name></author>
<updated>2012-06-29T02:56:29-07:00</updated>
<published>2012-06-29T02:56:29-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9043&amp;p=96207#p96207</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9043&amp;p=96207#p96207"/>
<title type="html"><![CDATA[Best programmed NES games/Games that pushed the limits]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9043&amp;p=96207#p96207"><![CDATA[
Such gradients with just a few color steps could work much better with dithering, it is seen in many NES games (horizontal color lines of varying height).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4205">Shiru</a> — Fri Jun 29, 2012 2:56 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Denine]]></name></author>
<updated>2012-06-29T02:47:11-07:00</updated>
<published>2012-06-29T02:47:11-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9043&amp;p=96206#p96206</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9043&amp;p=96206#p96206"/>
<title type="html"><![CDATA[Best programmed NES games/Games that pushed the limits]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9043&amp;p=96206#p96206"><![CDATA[
That reminded me.<br />Long time ago I started a MMC5 game project(which will not be finished soon, it progresses slowly) which use IRQ interrupt to change BG color.<br />I don't know if this "trick" is known(probably is) and if any games use this(again, probably yes). But this enables me to change one color of pallete with no glitches. In MMC5 project, I use it as sort of gradient.<br /><img src="http://i48.tinypic.com/1zp5vmc.png" alt="Image" /><br />I know, effect is poor, but it's because of NES's color number.<br /><br />I tested this extensively and works perfectly with any emulator. I have no means to check it with real hardware, though.<br /><br />Anyway, I think this could be done tih sprite0, but you can have only one hit per frame.<br /><br />I just thought it might be worth mentioning, as a contrast to turning rendering off.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4239">Denine</a> — Fri Jun 29, 2012 2:47 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2012-06-28T21:19:39-07:00</updated>
<published>2012-06-28T21:19:39-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9043&amp;p=96199#p96199</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9043&amp;p=96199#p96199"/>
<title type="html"><![CDATA[Best programmed NES games/Games that pushed the limits]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9043&amp;p=96199#p96199"><![CDATA[
<div class="quotetitle">Drag wrote:</div><div class="quotecontent"><br />I'm not familiar with the assembler commands in that code<br /></div><br />That code is meant to run on <a href="http://exifpro.com/utils.html" class="postlink">Michal Kowalski's 6502 simulator</a>. I always use it to test new ideas.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Duff's device is basically a combination of using an unrolled loop and a regular loop, used to copy memory from one location to another. In Startropics II, there's an unrolled loop of 8 LDA/STA's, so the game uploads stuff to the PPU 8 bytes at a time using this unrolled loop (fast). Afterwards, the remainder (for when the string length isn't divisible by 8 ) is uploaded using a regular loop (slower).<br /></div><br />I see... Yeah, not exactly what my code does, which is completely unrolling the copy loop and using a jump table to land on the appropriate part of it to copy the desired amount of bytes.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />It basically uses A, X, and Y to quickly cram bytes into the palette right at hblank, and then it uses a cycle timed loop to get to the next hblank, to do it again. It still has to turn off rendering, but not for long.<br /></div><br />I guess that the ~28 cycles of HBlank are indeed enough to update all 4 entries of a palette when rendering is disabled, and in the end the VRAM address will point to color 0 of the next palette, so there are no visible glitches (well, except maybe for the overscan area). It would take 8 scanlines to update all the colors though, but I guess that's acceptable in some cases.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Thu Jun 28, 2012 9:19 pm</p><hr />
]]></content>
</entry>
</feed>