<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - NES vs GB(C) (vs SNES vs GBA) in terms of emulation?</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">NES vs GB(C) (vs SNES vs GBA) in terms of emulation?</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=3&amp;t=11280">http://forums.nesdev.com/viewtopic.php?f=3&amp;t=11280</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>ArsonIzer</b> [ Tue May 27, 2014 6:37 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>NES vs GB(C) (vs SNES vs GBA) in terms of emulation?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />So, I have no clue if this is the correct forum to post this in, but this seems to be the most active emulation forum on this site so what the heck.<br /><br />I took a break of several months (only slightly ashamed) from the scene after having implemented the CPU and most of the PPU for my NES emulator in Java. I got stuck on some MMC1 stuff and it overloaded my brain so I quit for a while.<br /><br />Anyway, it's all pulling me back again, but this time I'm thinking of trying to emulate the GB(C) rather than finishing the NES.<br /><br />Does anyone have any experience with emulating both? What's the difference in complexity of emulation between them? I know that the GB(C) CPU is a modified Z80 compared to the 6502 and that graphics are rendered very similarly with a couple more/less colors/tiles etc. Which is harder to emulate? The only reason I see to not emulate the GB(C) yet is due to the combination of: meager experience in emulation and the lack of abundant documentation like the NES has. What do you think?<br /><br />Furthermore, if anyone has done the SNES and/or GBA, what's the difficulty on those? I have noticed people talking about how those are much much more complex since they have many more quirks that one needs to keep in mind, but how much does this add to complexity compared to the NES/GB(C)?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>MottZilla</b> [ Tue May 27, 2014 9:10 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: NES vs GB(C) (vs SNES vs GBA) in terms of emulation?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />NES is definitely the easiest to emulate in most ways. It does have some tricky details to get right. But the Gameboy and Gameboy Color have alot more going on. The SNES ofcourse even more so as you have two CPUs. The GBA I'm not sure, it might be less quirky and more straight forward to emulate but if you are writing your own CPU cores it's definitely more work than the little old 6502 based CPU of the NES. I'd say stick with the NES, when you get bored try Gameboy and later GBC.<br /><br />The MMC1 shouldn't be stopping you. If it's confusing then skip it and do other mappers. UNROM is easy (mapper 2) and many great games use it. You also have AxROM (mapper 7) used by plenty of games that will test your emulator's accuracy and behaviors. Then ofcourse there is MMC3. Not too tricky to implement.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>ArsonIzer</b> [ Wed May 28, 2014 2:48 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: NES vs GB(C) (vs SNES vs GBA) in terms of emulation?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">MottZilla wrote:</div><div class="quotecontent">NES is definitely the easiest to emulate in most ways. It does have some tricky details to get right. But the Gameboy and Gameboy Color have alot more going on. The SNES ofcourse even more so as you have two CPUs. The GBA I'm not sure, it might be less quirky and more straight forward to emulate but if you are writing your own CPU cores it's definitely more work than the little old 6502 based CPU of the NES. I'd say stick with the NES, when you get bored try Gameboy and later GBC.<br /><br />The MMC1 shouldn't be stopping you. If it's confusing then skip it and do other mappers. UNROM is easy (mapper 2) and many great games use it. You also have AxROM (mapper 7) used by plenty of games that will test your emulator's accuracy and behaviors. Then ofcourse there is MMC3. Not too tricky to implement.</div><br /><br />Indeed, the NES does seem to be the easiest. The GameBoy (Color)'s CPU alone seems like a hell to implement, seeing how I took way too long implementing the NES CPU. Probably wouldn't be a good idea for a beginner like me to jump onto the SNES/GBA-train, especially considering the lack of extensive documentation/supporting communities (as far as I could tell). <br /><br />Mappers didn't stop me at all. I had already implemented NROM, UNROM, CNROM and AxROM successfully. Almost all the games for these mappers worked perfectly, aside from some minor sprite 0 hit issues which are not even mapper-related for the most part. The MMC1 mapper however, seems to load the wrong nametables. Whenever I'm playing a game that does not actually crash, it either renders gibberish or it renders something from the wrong nametable. I suppose I'll make a separate topic about that if I get back to the NES.<br /><br />Thanks for the info. If anyone has more details about the difference in complexity between the systems, I'd be happy to be informed.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>sronsse</b> [ Wed May 28, 2014 9:40 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: NES vs GB(C) (vs SNES vs GBA) in terms of emulation?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Hello,<br /><br />I actually have a pretty different opinion - I have not worked on GBC emulation but only GB, so my comments below may not be completely applicable.<br /><br />1) NES<br />I find the NES to be overwhelming at times, first of all due to the many mappers out there, which often do more than just &quot;map&quot;. Also, implementing cycle-accurate PPU was a tough task for me, and I'm not even done with it. I often feel that my PPU code is like black magic, and that there is little I can do about it. The documentation out there (for instance the skinny on NES scrolling) is quite daunting, leading to source code usually as complex as the information used as a reference. I find it helpful to refer to pieces of the original documentation (using comments within the code) in order to remember what the code is about months later (check ppu_writeb function in <!-- m --><a class="postlink" href="https://code.google.com/p/emux/source/browse/controllers/video/ppu.c">https://code.google.com/p/emux/source/b ... ideo/ppu.c</a><!-- m -->).<br /><br />2) Game Boy<br />The Game Boy on the other hand doesn't have many mappers, and their role is limited. The graphics emulation seemed easier to me, and less prone to timing issues. For instance, there was no need to rely on &quot;invisible&quot; sprite hits for a game to know which scanline was just rendered - developers could rely on a scanline interrupt. This means more natural code for game developers and cleaner code for emulator developers. I don't remember finding the GB CPU (stripped down Z80) to be more or less complex than the 6502.<br /><br />Overall, the NES hardware feels somehow more extensible, but hacky in many ways, making it harder for emulator developers to produce clean code. This is of course just my opinion, I am certain that a lot of people on this forum would completely disagree with this statement <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /><br />Regards,<br />Sebastien

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>3gengames</b> [ Wed May 28, 2014 9:44 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: NES vs GB(C) (vs SNES vs GBA) in terms of emulation?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Ask kevtris how easy it is to get the GBA timing system down. Until recently, it wasn't really known about, but GB timings make the NES PPU look like a joke, from what I could understand. Think of it as a rendering pipeline where all actions took a little more time from the pipe and to get it right, but the display still rendered correctly when 100% as-is emulation will fail drastically.<br /><br /><!-- l --><a class="postlink-local" href="http://forums.nesdev.com/viewtopic.php?t=7861">viewtopic.php?t=7861</a><!-- l -->

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>ArsonIzer</b> [ Wed May 28, 2014 10:26 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: NES vs GB(C) (vs SNES vs GBA) in terms of emulation?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">3gengames wrote:</div><div class="quotecontent">Ask kevtris how easy it is to get the GBA timing system down. Until recently, it wasn't really known about, but GB timings make the NES PPU look like a joke, from what I could understand. Think of it as a rendering pipeline where all actions took a little more time from the pipe and to get it right, but the display still rendered correctly when 100% as-is emulation will fail drastically.<br /><br /><!-- l --><a class="postlink-local" href="http://forums.nesdev.com/viewtopic.php?t=7861">viewtopic.php?t=7861</a><!-- l --></div><br /><br />Are you talking about the GBA or GB or both respectively?<br /><br />If the latter is true, does it mean the GBA timing is pretty easy while the GB timing is hard? Or are you implying something else?<br /><br />From what ssronse said, the GB's PPU actually sounds like it's not that much to worry about, especially since the mappers and sprite 0 hit are my main problems at this point in time. Some clarification on this would really be appreciated.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Wed May 28, 2014 10:26 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: NES vs GB(C) (vs SNES vs GBA) in terms of emulation?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I'm under the impression that compared to NES games, far fewer popular Game Boy games other than Prehistorik Man's intro actually require high-precision timing because the Game Boy has an MMC5-class scanline counter built in.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>ArsonIzer</b> [ Wed May 28, 2014 3:04 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: NES vs GB(C) (vs SNES vs GBA) in terms of emulation?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">I'm under the impression that compared to NES games, far fewer popular Game Boy games other than Prehistorik Man's intro actually require high-precision timing because the Game Boy has an MMC5-class scanline counter built in.</div><br /><br />Overlooked this because we posted at the exact same time.<br /><br />What components does this affect? Does it mean that a scanline-based GB emulator will work for more games than a scanline-based NES emulator? Does this also make the GB PPU easier to implement, or is it just easier to synchronize with the CPU?<br /><br />I'm trying to read through the Pan Docs of the GB and this document called &quot;GB CPU Manual&quot;, and other than having to ingest a ton of new information, I'm not seeing anything that really seems to make it easier/harder. It's just different, but recognizable.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>MottZilla</b> [ Wed May 28, 2014 9:43 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: NES vs GB(C) (vs SNES vs GBA) in terms of emulation?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I think that's the idea, since few if any games will require precise CPU/PPU timing unlike on the NES where a great many games use Sprite 0 and/or careful cycle timing for background splits. <br /><br />The GB probably isn't that much harder to emulate decently than the NES but I do think there is a bit more to it that makes it probably a harder target than the NES for a decent level of accuracy. The GBC complicates it more. <br /><br />The GB CPU I think as a whole is a bit more complicated than the NES 6502. It's not a huge difference. The GB certainly is easier when it comes to memory mapping since there are so few MBCs and they all behave very similar.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>ArsonIzer</b> [ Thu May 29, 2014 8:18 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: NES vs GB(C) (vs SNES vs GBA) in terms of emulation?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">MottZilla wrote:</div><div class="quotecontent">I think that's the idea, since few if any games will require precise CPU/PPU timing unlike on the NES where a great many games use Sprite 0 and/or careful cycle timing for background splits. </div><br />Seems like the GB isn't THAT hard to implement. Not having to resort to cycle-precision to get many games working, and the fact that it has no sprite 0 hit and only a few mappers is really a huge relief.<br /><br /><div class="quotetitle">MottZilla wrote:</div><div class="quotecontent">The GB probably isn't that much harder to emulate decently than the NES but I do think there is a bit more to it that makes it probably a harder target than the NES for a decent level of accuracy. The GBC complicates it more. </div><br />I will make the GB my priority, and afterwards implement the &quot;C&quot; so to speak. Would you happen to know how much more complex a scanline-based GBC is compared to the GB? I presume the CPU and APU (although sound is at the bottom of my list) remain the same.<br /><br /><div class="quotetitle">MottZilla wrote:</div><div class="quotecontent">The GB CPU I think as a whole is a bit more complicated than the NES 6502. It's not a huge difference.</div><br />Well, the Z80 does have over 200 opcodes if I'm looking at it correctly. Most of them are probably &quot;duplicates&quot; with a different addressing mode I suppose, but it's still more work. I just hope the instructions themselves are not more complex than the 6502's, otherwise 1 little mistake might get me stuck for days if not weeks.<br /><br />Thanks for the info. I think I'm going to start on my Z80 emulator in a while. I hope it won't kick me in the delicates anytime soon though.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Thu May 29, 2014 10:50 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: NES vs GB(C) (vs SNES vs GBA) in terms of emulation?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">ArsonIzer wrote:</div><div class="quotecontent">Would you happen to know how much more complex a scanline-based GBC is compared to the GB?</div><br />Probably like the difference between NES with a &quot;typical&quot; mapper (UNROM, MMC1, etc.) and NES with MMC5 ExGrafix. Game Boy Color's PPU can flip background tiles, place background tiles in front of sprites, pull each tile from one of two pages of CHR RAM, and color each tile with one of several sets of four colors. Its CPU can run at double speed, and it has <s>general-purpose</s> <span style="text-decoration: underline">more versatile</span> DMA to match the &quot;Blast Processing&quot; in Sega's Nomad system as well as CHR HDMA to load dozens of tiles per frame.<br /><br />That and players of Tetris and Pokemon will expect you to emulate two Game Boy systems connected through an SPI serial link.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dwedit</b> [ Thu May 29, 2014 11:09 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: NES vs GB(C) (vs SNES vs GBA) in terms of emulation?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Not general purpose DMA, just DMA targeted only at VRAM.<br /><br />As for how complicated the Z80 instruction set is?  Besides the DAA instruction, everything is straightforward.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>ArsonIzer</b> [ Thu May 29, 2014 4:13 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: NES vs GB(C) (vs SNES vs GBA) in terms of emulation?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">Probably like the difference between NES with a &quot;typical&quot; mapper (UNROM, MMC1, etc.) and NES with MMC5 ExGrafix. Game Boy Color's PPU can flip background tiles, place background tiles in front of sprites, pull each tile from one of two pages of CHR RAM, and color each tile with one of several sets of four colors. Its CPU can run at double speed, and it has general-purpose DMA to match the &quot;Blast Processing&quot; in Sega's Nomad system as well as CHR HDMA to load dozens of tiles per frame.</div><br />Wow, there goes my motivation... well, not really, although that does sound painful to figure out.<br /><br /><div class="quotetitle">Dwedit wrote:</div><div class="quotecontent">As for how complicated the Z80 instruction set is? Besides the DAA instruction, everything is straightforward.</div><br />Then I suppose I'll find that out as I implement it. I guess you'll be seeing me spam the GBDev (or whatever) section soon.<br /><br />Thanks for all the info guys, it's really helpful.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>byuu</b> [ Thu Jun 12, 2014 11:55 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: NES vs GB(C) (vs SNES vs GBA) in terms of emulation?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I've emulated all of these. As for difficulty, it all comes down to completeness.<br /><br />Simple NES emulator (no mappers, no accuracy) = one day project.<br />Simple GB emulator (no accuracy) = two day project.<br />Simple GBA emulator (no accuracy) = two week project.<br />Simple SNES emulator (no special chips, no accuracy) = one month project.<br /><br />Good NES emulator (decent accuracy, most major mappers) = two month project.<br />Good GB emulator (dot-based PPU renderer, nearly all mappers) = one month project.<br />Good GBA emulator (good cycle timings) = doesn't exist yet. But probably three months. [requires your own hardware research]<br />Good SNES emulator (decent accuracy, most major special chips) = four year project. (maybe 2-3 now that all the coprocessor firmware is available for LLE.)<br /><br />Great NES emulator (every mapper/controller/add-on device you can find info on) = two year project.<br />Great GB emulator (handle all of the quirks, obscure mappers like MMM01/HuC) = two year project. [requires your own hardware research]<br />Great GBA emulator (handle all of the quirks, weird hardware like sun sensor and rumble) = doesn't exist yet. But probably four years. [requires your own hardware research]<br />Great SNES emulator (dot-based PPU, all special chips) = eight year project. [requires your own hardware research]<br /><br />By your own research, I mean you need to write your own tests and run them on the real thing to figure out how stuff works, because you won't find it all in documentation.<br /><br />If you plug in other peoples' code (like blargg's SNES DSP, or an existing ARM CPU core), you can drastically reduce the above times, but what's the point of writing an emulator if you're not actually writing it?<br /><br />Documentation levels:<br />NES = best-in-class, very low-level timing information readily available.<br />GB = absolutely atrocious. Most documentation is from the '90s. Writing a great GB emulator would be much easier if someone would document it.<br />GBA = somewhat decent. But not much on low-level stuff like ROM prefetch operation, hardware quirks, etc.<br />SNES = very good. Research up to 2008 or so is available. Died off after anomie left.<br /><br />The SNES and GBA PPUs are leagues beyond the NES and GB/C PPUs. Still doable, but the complexity goes way, way up. Without copying an existing implementation, the SNES sound core is the hardest to deal with, but the easiest to &quot;perfect&quot; (since it's mostly digital.)<br /><br />The SNES SuperFX, SA-1 and ST018 each make the NES MMC5 look like child's play, so keep that in mind if you think NES mappers are hard.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>MottZilla</b> [ Fri Jun 13, 2014 11:59 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: NES vs GB(C) (vs SNES vs GBA) in terms of emulation?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">byuu wrote:</div><div class="quotecontent"> but what's the point of writing an emulator if you're not actually writing it?<br /></div><br /><br />One possibility would be if you were trying to get an emulator on a new or different platform and none is available yet. For example if one didn't already exist maybe you'd want to write an emulator to run on your PSP, or some other portable or maybe an obscure PC platform.<br /><br />I do agree though that it's more interesting if you are wanting just to write an emulator if you work on things like the CPU core, sound, etc. all on your own. But that isn't always the goal. Sometimes the goal is just more like a good enough emulator on a new platform.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>