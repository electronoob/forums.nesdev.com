<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Emulation where to start?</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Emulation where to start?</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=3&amp;t=4352">http://forums.nesdev.com/viewtopic.php?f=3&amp;t=4352</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Chesso</b> [ Sat Aug 30, 2008 9:36 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Emulation where to start?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I'm sure some of you just love this question <img src="./images/smilies/icon_razz.gif" alt=":P" title="Razz" />.
<br />
<br />Ahhh well here goes anyway:
<br />
<br />
<br />I generally just want to write a console/handheld emulator for the reason I presume most people do..... cause I feel like it <img src="./images/smilies/icon_razz.gif" alt=":P" title="Razz" /> (and have wanted to for some time, but always intimidated by the mass of information I cannot seem to comprehend if a fashion that would enable me to even begin writing a single character of code.... heh).
<br />
<br />Preferably for my first serious attempt, the easiest one to emulate (and that has or can have reasonably simple to obtain information), at this stage the NES is my target?
<br />
<br />The target OS is Windows Vista (or Windows in general) and the language Object Pascal (or Delphi 2007 more specifically).
<br />
<br />Now to get a bit ahead of myself, I plan on using DirectX for graphics and sound, that's the easy bit, I can already program using Delphi and various other languages in general, it's what to do about the NES's hardware and game file format that has me stumbled.
<br />
<br />Or to be more precise interpreting/emulating some other hardware (knowing what to do with it).
<br />
<br />So the first question really is, am I barking up the wrong tree with attempting the NES if my goal is start with the simplest?
<br />
<br />If not, how the heck do I get started? I have documents and source and blah blah, sure I can understand bits and pieces, I do have a tiny bit of ASM experience and C/C++ and even some electronic engineering (very basic without full understanding at this stage),  but still cannot get started.
<br />
<br />Basically the only thing I have learnt is I should start with emulating the CPU and to fiddle with these Operation Codes and emulating the registers for the CPU etc.
<br />
<br />So.... can't think of anything else at the moment, but thanks for reading haha <img src="./images/smilies/icon_razz.gif" alt=":P" title="Razz" />.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>loopy</b> [ Sat Aug 30, 2008 9:53 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />If you're looking for simple, you could try CHIP8.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Chesso</b> [ Sat Aug 30, 2008 11:21 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />CHIPS, haven't heard of that one?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dwedit</b> [ Sat Aug 30, 2008 11:54 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />If you want something relatively simple, try the TI83.  It's a Z80, with a display, some supporting hardware, 256k of ROM, and 32k of RAM.
<br />
<br />I don't think any Chip-8 hardware ever existed, it's just a binary interpreted ASM-style language.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Chesso</b> [ Sun Aug 31, 2008 12:04 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Ok so hypothetically speaking and this is what I am thinking, starting with things like emulating a calculator or simpler hardware that has similarities would help to later tackle bigger things.
<br />
<br />what sort of information is floating around for CHIP8 (thought it was CHIPS ROFL) and the other mentioned ones? (I am about to google it now).
<br />
<br />EDIT: Indeed CHIP8 looks like some sort of language.
<br />
<br />
<br />EDIT: I would rather learn how to emulate the 6502 which is what the NES uses, or specifically the NES 6502 (if it's any different), if I am going to go onto that, but whatever gets me started.
<br />
<br />I cannot find bugger all on Z80/6502 or a TI 83 (that uses a Z80 processor), any small bits of information assume I know things that I really can't know without finding out what it all is somewhere else..... which I cannot find hahaha!

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Coldberg</b> [ Sun Aug 31, 2008 4:16 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Z80 is much more complex then 6502 to emulate :X.
<br />I've been looking at it's manual some time ago and has a ton of instructions
<br />I'd rather emulate 6502 <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /> something like KIM-1 i suppose

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Sun Aug 31, 2008 11:51 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The NES is like an emulator author's training ground, everyone seems to start with it. However, it's only partially true that it's easy to emulate. I believe you can get some games running pretty quickly, the ones that don't rely on tiny hardware details. Now, accurately emulating all those details is hard like hell.
<br />
<br />The consensus is that the NES already has too many bad emulators (since so many people try it at first), so if you're not serious about it, meaning you don't plan on making an accurate emulator with new interesting features, you'd better keep it to yourself as a learning experience and not release it.
<br />
<br />Anyway, you can start out by emulating all the instructions of the 6502, there are tons of information on it. The CPU used in the NES is an exact replica of the 6502, it just doesn't have decimal mode (the original will perform math operations in decimal mode when the decimal flag is set, the one on the NES won't).
<br />
<br />Then you have to take into account how the addressable memory is divided: part of it is RAM, part of it is ROM, and part of it is used for communicating with the rest of the system (such as the PPU). When you implement the PPU (the unit that converts all the data in memory into graphics), it will be controlled by CPU reads and writes to certain memory locations.
<br />
<br />Emulating the CPU, the memory map and the PPU should be enough to get something running. After that there is input, audio, memory mappers, and so on. And this is all much harder if you plan on being 100% compatible with the original hardware, because you have to take into account the exact time that each operation takes to keep everything synchronized, as well as every little quirk involving NMIs, IRQs, internal PPU operation... the amount of detail an accurate emulator must be aware of is insane!

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>MottZilla</b> [ Sun Aug 31, 2008 12:10 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Chesso, what I did when I was in your shoes was I went to the main NESDEV webpage ( <!-- m --><a class="postlink" href="http://nesdev.com">http://nesdev.com</a><!-- m --> ) and downloaded NES Technical documents and 6502 technical documents. Read over them. 
<br />
<br />The first step is easy, you just need to setup your project. You'll need to figure out how you want to program it and declare your variables for everything. The important things would be declaring CPU registers and RAM and ROM memory. After all that you will probably want to build a iNES ROM loader, which looks at the 16 byte header and figures out how to load the NES file. Once you've got the ROMs loaded, you'll probably want your program to do something, that's when you'll want to write a CPU interpreter. Basically you fetch an address from a fixed position which is the "Reset Vector" and set the CPU to start executing Opcodes from there. Your interpreter will just keep fetching bytes (opcodes) from ROM and then executing the opcode, whatever that may be. 
<br />
<br />You'll probably want output of some kind so you can see on screen or in a text log what your program is doing. The CPU emulation is the most important thing to worry about when you start. If your cpu emulation is bad you will have all kinds of problems.
<br />
<br />Anyway, one thing to remember with it being your first emulator, don't aim too high at first. Don't expect to be emulating every game there is perfectly. Work your way up.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Chesso</b> [ Sun Aug 31, 2008 5:19 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Well this is just for the hell of it (to learn), but if it goes well, I might as well make it as good as possible.
<br />
<br />The only issue I have is finding enough information that I can understand to start out with, this 6502 replica has op codes (operation codes, short codes pretty much meaning internal functions?), registers (some sort of memory storage I assume) etc.
<br />
<br />And also how to read the NES files and understand them, I assume they must be read in binary mode or some such.
<br />
<br />
<br />For now my primary focus is understand just exactly what the hell to do <img src="./images/smilies/icon_razz.gif" alt=":P" title="Razz" />, I figured the file format and it's structure would be firstly important as well as the CPU and so on and so forth, I could care less for speed meaning i'll do what ever it takes for it to work and fiddle with it later, it's the understanding and then pulling it off in my language is my first barrier).
<br />
<br />I'll take a look at that site and read what I can, once I understand how the stuff works and how I can relate it in programming the rest will be far easier for me.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Sun Aug 31, 2008 5:50 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Chesso wrote:</div><div class="quotecontent">this 6502 replica has op codes (operation codes, short codes pretty much meaning internal functions?), registers (some sort of memory storage I assume) etc.</div><br />Not only the 6502, but every CPU in the world! The 6502 has a very limited number of operations it can perform, each one has a code and a well defined behavior. The memory that's internal to the CPU exists in the form of registers. Some are accessible by programs, others are just for internal use.<br /><br />One very important register is the PC (program counter). It's a 16-bit value that points to the current instruction being executed, meaning it's used to fetch instructions sequentially from main memory.<br /><br />Simple 6502 emulation is pretty straightforward. The value at the reset vector (please read about the 6502 vectors somewhere) is the initial value of the PC. Once the PC is set, there can be a loop to:<br /><br />1. read a instruction from the address pointed by the PC and increment the PC;<br /><br />2. depending on the instruction, you might have to read more parameters (multi-byte instruction), and increment the PC accordingly;<br /><br />3. execute the instruction, simulating the behavior described in the docs;<br /><br />4. go back to step 1;<br /><br />Instructions can manipulate flags, registers, memory values, etc, so you must program each one of them very carefully. If they don't behave exactly like the originals, the games will much likely to crash.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">And also how to read the NES files and understand them, I assume they must be read in binary mode or some such.</div>
<br />Yes, you should handle everything in binary, because the opcodes are byte-sized and you must be able to read single bytes.
<br />
<br />NES files are usually composed by a 16-byte header, followed by the contents of the program chip (this is what you'll run through the 6502 emulator), and then the contents of the CHR chip (these are the tiles used to compose the screens).
<br />
<br />However, keep in mind that the NES can only see 32KB of PRG-ROM and 8KB of CHR-ROM without any mappers. The games that respect those limitations are known as NROM games, or mapper 0 games, so you should start with one of those. If a game uses a mapper other than 0, you must be able to emulate the mapper before emulating the game, and now is really not the time for this.
<br />
<br />Now, if you don't know that stuff, you got some reading to do. Go read about the iNES header (the first thing you'll have to interpret), the NES memory map (so that you know where to put the contents of the NES file). Once the PRG-ROM is in place you can start emulating the CPU. Reading the basics of computer architecture could help you a lot, since you seem to not have a clue about how a computer works at the lowest level.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Chesso</b> [ Sun Aug 31, 2008 10:15 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Ok I have obtained some more information to go through when I have a bit more time, and hopefully I can at least start on reading the file format and getting my head around the 6502 CPU.
<br />
<br />If anyone knows where I might find some basic/test NES roms that would be very helpful if I get things kick started (following the iNES format, but only containing basic CPU stuff, and any others that aren't to complex).
<br />
<br />I really have probably too many documents at the moment..... but the more the merrier <img src="./images/smilies/icon_razz.gif" alt=":P" title="Razz" />.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>MottZilla</b> [ Mon Sep 01, 2008 1:14 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Good "test roms" would be Donkey Kong, Donkey Kong Jr, Mario Bros (not Super), 1942, Pac-man, Joust. 
<br />
<br />If you aren't familiar with Pointers you need to learn them. Without the use of Pointers it will be harder to emulate memory mappers and mirroring things. 
<br />
<br />About the 6502, there is a text file 6502.txt that lists every single opcode, detailing what each one does. With that alone you should be able to build a decent CPU core as the document contains pretty much everything you need to know.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dwedit</b> [ Mon Sep 01, 2008 1:52 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I always thought Balloon Fight was the quintessential test game?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Chesso</b> [ Mon Sep 01, 2008 3:08 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I know pointers, least of my worries lol.
<br />
<br />Unfortunately Delphi and Binary files are, and although earlier I felt quite stupid (seen as other Delphi programmers have not been able to give a straight answer either, I don't as much anymore), but basically I attempt to read byte 6 from the NES rom, yay great, now to convert that to it's individual bits......
<br />
<br />Then again i'm coming down with the flu and it's early morning here, it's probably something simple that will pop into my head as the day goes by.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Mon Sep 01, 2008 5:18 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Dwedit wrote:</div><div class="quotecontent">I always thought Balloon Fight was the quintessential test game?</div>
<br />I seem to remember reading that Balloon Trip uses a timed loop starting at NMI to handle the scroll split, not sprite 0 like SMB1 uses. That might glitch until the CPU is cycle-accurate.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>