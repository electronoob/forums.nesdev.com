<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=12" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2019-05-25T06:00:44-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=12</id>
<entry>
<author><name><![CDATA[supercat]]></name></author>
<updated>2019-05-25T06:00:44-07:00</updated>
<published>2019-05-25T06:00:44-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10696&amp;p=239252#p239252</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10696&amp;p=239252#p239252"/>
<title type="html"><![CDATA[SNESdev • Re: Bad Apple demo for SNES]]></title>

<category term="SNESdev" scheme="http://forums.nesdev.com/viewforum.php?f=12" label="SNESdev"/>
<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10696&amp;p=239252#p239252"><![CDATA[
<div class="quotetitle">tokumaru wrote:</div><div class="quotecontent"><br />Well, I couldn't resist and I reduced the pattern count down to 256. Each pattern past 256 got mapped to one of the 256 most frequent ones (the one with least different pixels). I must say that the result is surprisingly good:<br /></div><br /><br />Have you tried porting that to the NES?  I'd say it looks pretty good.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=14271">supercat</a> — Sat May 25, 2019 6:00 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[noyen1973]]></name></author>
<updated>2019-05-25T00:07:03-07:00</updated>
<published>2019-05-25T00:07:03-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=18889&amp;p=239248#p239248</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=18889&amp;p=239248#p239248"/>
<title type="html"><![CDATA[SNESdev • YMAS 0.0180c]]></title>

<category term="SNESdev" scheme="http://forums.nesdev.com/viewforum.php?f=12" label="SNESdev"/>
<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=18889&amp;p=239248#p239248"><![CDATA[
Since I no longer had the original X816 assembler source code I began rebuilding a new 65816 assembler a few months ago using Free Pascal but I've gotten to the point where it needs some real world testing and suggestions.  The archive contains only the executable and a readme which is the actual directive/opcode table embedded into the .exe.  It's a brief rundown of all the current and some future planned directives and functions.  Scroll further down the readme and you will see the opcode tables for 65816, 6502, SPC700 (both native and 65816-style), as well as a partial SuperFX implementation.<br /><br />Here's a short example of the setup, with a couple of nested repeats and a final bin save.<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">.snes lorom<br />.list <br />.symbol<br />.verbose off<br />.repeat 3,@y<br />.repeat 10,@x<br />nop<br />.echox &quot;current address:&quot;,@pc<br />.echox @x+@y*10<br />.endrepeat<br />.endrepeat<br />.snes savebin<br /></div><br />How functionable is it?  I've been able to convert some older simple source codes, including the Tricks Zoomer which I recoded into mode 21 and use some direct page addressing just for testing.  Really only the 65816 side has been regularly tested.  I cut/pasted some SPC700 instructions with deliberate errors to test but that's about it.<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">   36 00008042                                               .cpu      spc700                  <br />.target cpu SPC700<br />   37 00000000                                               .base     $0000                   <br />   38 00000000 39                                            and       (x),(y)                 ;$39,1,0,<br />   39 00000001 28 34                                         and       a,#$1234                ;$28,2,4,<br />*** error #2 line 39 value out of range &gt;255<br />   40 00000003 26                                            and       a,(x)                   ;$26,1,0,<br />   41 00000004 37 34                                         and       a,&#91;$1234&#93;+y             ;$37,2,1,<br />*** error #3 line 41 address out of range &gt;255<br />   42 00000006 27 35                                         and       a,&#91;$1234+1+x&#93;           ;$27,2,1,<br />*** error #4 line 42 address out of range &gt;255<br />   43 00000008 24 12                                         and       a,$12                   ;$24,2,1,<br />   44 0000000A 34 12                                         and       a,$12+x                 ;$34,2,1,<br />   45 0000000C 25 34 12                                      and       a,$1234                 ;$25,3,2,<br />   46 0000000F 35 35 12                                      and       a,$1234+1+x             ;$35,3,2,<br />   47 00000012 36 35 12                                      and       a,$1234+1+y             ;$36,3,2,<br />   48 00000015 38 34 34                                      and       $1234,#$1234            ;$38,3,33,<br />*** error #5 line 48 value out of range &gt;255<br />   49 00000018 29 34 34                                      and       $1234,$1234             ;$29,3,32,<br />*** error #6 line 49 address out of range &gt;255<br />   50 0000001B 6A 34 32                                      and1      c,/$1234.1              ;$6a,3,42,<br />   51 0000001E 4A 34 52                                      and1      c,$1234.2               ;$4a,3,42,<br />   52 00000021 88 21                                         adc       a,#$4321                <br />*** error #7 line 52 value out of range &gt;255<br />   53 00000023 97 70                                         adc       a,&#91;main&amp;$ff&#93;+y          <br />   54 00000025 0A 34 72                                      or1       c,$1234.3               <br />   55 00000028 3B 12                                         rol       $12+x                   <br />   56 0000002A 75 59 01                                      cmp       a,345+x                 <br />   57 0000002D 6F                                            ret                               <br />   58 00008042 &#91;00002E&#93;                                      .endb                             <br />   59 00008070                                                                                 <br />   60 00008070                                               .cpu      65816                   <br />.target cpu 65816<br />   61 00008070                             main:                                               <br />   62 00008070 4C 70 80                    -                 jmp       -                       <br /></div><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9466">noyen1973</a> — Sat May 25, 2019 12:07 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[psycopathicteen]]></name></author>
<updated>2019-05-24T18:47:39-07:00</updated>
<published>2019-05-24T18:47:39-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6393&amp;p=239246#p239246</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6393&amp;p=239246#p239246"/>
<title type="html"><![CDATA[SNESdev • Re: Fastrom patches?]]></title>

<category term="SNESdev" scheme="http://forums.nesdev.com/viewforum.php?f=12" label="SNESdev"/>
<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6393&amp;p=239246#p239246"><![CDATA[
The guy who started the project found out that the bubbles in stage 2 use a grid for collision instead of using circular collision.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4383">psycopathicteen</a> — Fri May 24, 2019 6:47 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[supercat]]></name></author>
<updated>2019-05-24T14:54:32-07:00</updated>
<published>2019-05-24T14:54:32-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10696&amp;p=239234#p239234</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10696&amp;p=239234#p239234"/>
<title type="html"><![CDATA[SNESdev • Re: Bad Apple demo for SNES]]></title>

<category term="SNESdev" scheme="http://forums.nesdev.com/viewforum.php?f=12" label="SNESdev"/>
<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10696&amp;p=239234#p239234"><![CDATA[
<div class="quotetitle">tepples wrote:</div><div class="quotecontent"><br />This gives 262-176=86 lines of blanking, and at 14 bytes per line with a straightforward unrolled copy, you can fill 86*14 = 1204 bytes, which is just shy of the 32*44 = 1408 bytes of nametable data for 128x88. But decompression of that much data on a 1.8 MHz 6502 at 30 fps might be a pain.<br /></div><br /><br />How about using 8K WRAM to hold 1410 instruction pairs of the form &quot;LDA #xx / STA $20xx&quot;, storing five groups of 51 bytes of data for the LDA in each page of ROM, interleaved (so an unrolled sequence of 51 consecutive &quot;ldy #0 [or 5, 10, 15...] / lda (src),y / sta (dest),y&quot; will copy 51 bytes), and then use a separately-stored sequence of bytes to indicate which sta instructions need to store to $2006 instead of $2007.  For the scenario where all 1410 stores are needed, the time during vblank would be 8260 cycles and the time to prepare all the stores would be 18330 cycles.  In the cases where stores are going to be patched to hit $2006 instead of $2007, some time would be required to do that patching before running the code in WRAM and then undo it afterward, but since fewer loads would need to be prepped, the time spent patching would still be a net &quot;win&quot;.<br /><br />If replacing every sequence of three or more bytes that match a previous frame with the two byte address of the next sequence of bytes requiring updates would be adequate to meet compression requirements, I don't think there would be any problem running the uncompressor in real time if audio doesn't gobble too much CPU.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=14271">supercat</a> — Fri May 24, 2019 2:54 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[marioxb]]></name></author>
<updated>2019-05-24T09:48:02-07:00</updated>
<published>2019-05-24T09:48:02-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8617&amp;p=239228#p239228</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8617&amp;p=239228#p239228"/>
<title type="html"><![CDATA[SNESdev • Re: Need Help Dumping Nintendo Campus Challenge Reproduction]]></title>

<category term="SNESdev" scheme="http://forums.nesdev.com/viewforum.php?f=12" label="SNESdev"/>
<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8617&amp;p=239228#p239228"><![CDATA[
So I know this topic is a few years old, but I'm not sure where else to post. I just downloaded the Campus Challenge roms from here and ran them through Icarus and renamed them as program.rom and slot1-3.rom and all that. I even applied the patches here:<br /><br /><!-- m --><a class="postlink" href="https://helmet.kafuka.org/byuubackup2/viewtopic.php@f=21&amp;t=987.html">https://helmet.kafuka.org/byuubackup2/v ... t=987.html</a><!-- m --><br /><br />to &quot;fix&quot; the title screen and get the proper SHAs for the 3 games. However, with and without the patches applied, Pilotwings is very glitchy and unplayable. Yes I have the dsp roms in the &quot;Game Pak&quot; as well. I can get the regular Pilotwings rom (and JJ's Powerfest 94) working in Higan 106 just fine, however the NCC version looks like this:<br /><br />Played via NCC (after F-Zero of course):<br /><br /><img src="https://i.ibb.co/MksV5bY/power.png" alt="Image" /><br /><br />Standalone:<br /><br /><img src="https://i.ibb.co/vzhcKkm/wings.png" alt="Image" /><br /><br />Why is this happening? I tried redownloading and re-everything, but nothing works.<br /><br />P.S. If anyone would like to share the million point version of scoring.sfc for Powerfest 94, or at least come up with a patch that changes the 10,000 to a million points (even if not authentic), that would be awesome. Ditto for the NES Campus Challenge.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=8460">marioxb</a> — Fri May 24, 2019 9:48 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[psycopathicteen]]></name></author>
<updated>2019-05-21T21:58:48-07:00</updated>
<published>2019-05-21T21:58:48-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=18874&amp;p=239170#p239170</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=18874&amp;p=239170#p239170"/>
<title type="html"><![CDATA[SNESdev • Re: M1TE - Tile Editor]]></title>

<category term="SNESdev" scheme="http://forums.nesdev.com/viewforum.php?f=12" label="SNESdev"/>
<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=18874&amp;p=239170#p239170"><![CDATA[
It's a nice thing that I have several tile sets I've made that I didn't get to implement yet, because of how tedious making tile maps are.  Your program is helping a lot.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4383">psycopathicteen</a> — Tue May 21, 2019 9:58 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Revenant]]></name></author>
<updated>2019-05-21T21:00:55-07:00</updated>
<published>2019-05-21T21:00:55-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=18882&amp;p=239169#p239169</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=18882&amp;p=239169#p239169"/>
<title type="html"><![CDATA[SNESdev • Re: Nintendo &quot;Game Processor&quot; info thread]]></title>

<category term="SNESdev" scheme="http://forums.nesdev.com/viewforum.php?f=12" label="SNESdev"/>
<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=18882&amp;p=239169#p239169"><![CDATA[
The mouse interaction is described rather thoroughly in the patent that I linked in the OP, along with drawings of the unit itself and mockups of the system software. (Throughout the body of the patent, the words &quot;mouse&quot; and &quot;click&quot; appear 38 and 46 times, respectively). I didn't really want to quote the relevant parts directly in the post just because it's so verbose and spread out through the entire document, but there's a pretty intriguing amount of info to be found about that part of it in particular.<br /><br />(The SNES mouse certainly already existed at this point; the patent is from two years after Mario Paint was released)<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6992">Revenant</a> — Tue May 21, 2019 9:00 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[koitsu]]></name></author>
<updated>2019-05-21T20:23:03-07:00</updated>
<published>2019-05-21T20:23:03-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=18882&amp;p=239168#p239168</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=18882&amp;p=239168#p239168"/>
<title type="html"><![CDATA[SNESdev • Re: Nintendo &quot;Game Processor&quot; info thread]]></title>

<category term="SNESdev" scheme="http://forums.nesdev.com/viewforum.php?f=12" label="SNESdev"/>
<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=18882&amp;p=239168#p239168"><![CDATA[
Emphasis mine:<br /><div class="quotetitle">Revenant wrote:</div><div class="quotecontent"><br />Basically, the &quot;Game Processor&quot; was some kind of system developed by Nintendo to allow people to develop simple SNES games <span style="text-decoration: underline">using a point-and-click interface on specialized hardware</span>, which wrote the games onto SRAM-based cartridges for play on regular SNES/SFC consoles.<br /></div><br />Do we have any details on this part of the setup?  Photos, technical details, or even best guesses (even things like &quot;gut feeling the SNES mouse may have started here&quot;)?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3">koitsu</a> — Tue May 21, 2019 8:23 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Revenant]]></name></author>
<updated>2019-05-21T17:26:18-07:00</updated>
<published>2019-05-21T17:26:18-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=18882&amp;p=239167#p239167</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=18882&amp;p=239167#p239167"/>
<title type="html"><![CDATA[SNESdev • Nintendo &quot;Game Processor&quot; info thread]]></title>

<category term="SNESdev" scheme="http://forums.nesdev.com/viewforum.php?f=12" label="SNESdev"/>
<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=18882&amp;p=239167#p239167"><![CDATA[
I want to start a general info thread about this thing just because I picked up one of the RAM cartridges for it recently, but the whole thing isn't very well-known or documented at this point.<br /><br />Basically, the &quot;Game Processor&quot; was some kind of system developed by Nintendo to allow people to develop simple SNES games using a point-and-click interface on specialized hardware, which wrote the games onto SRAM-based cartridges for play on regular SNES/SFC consoles. I'm not aware of the system itself ever appearing &quot;in the wild&quot;, but it's described fairly in-depth in this <a href="https://patents.google.com/patent/US6115036A/en" class="postlink">1994 US patent</a> along with some mockups of the so-called &quot;Mario Factory&quot; game creation software that would run on it, as well as details about the &quot;RAM Cassette&quot; cartridges used for storing users' games.<br /><br />There have been a few of these cartridges popping up on auction sites every once in a while, but without a lot of context behind them. There's at least one (badly corrupted) dump of one of these floating around, but given that mine was manufactured all the way out in 1999 and the battery was completely dead by the time I got it, it's probably safe to assume (sadly) that these are basically all toast by now.<br /><br />An old dump of a RAM cartridge by d4s circa 2008: <!-- m --><a class="postlink" href="https://project.satellaview.org/snes/gpc4m.zip">https://project.satellaview.org/snes/gpc4m.zip</a><!-- m --> (note: it's basically unplayable due to bit rot)<br />Some images of the game contained on it: <!-- m --><a class="postlink" href="https://twitter.com/LuigiBlood/status/1110878990699585536">https://twitter.com/LuigiBlood/status/1 ... 0699585536</a><!-- m --><br /><br />Interestingly, kukun kun's recent treasure trove of Satellaview broadcast videos have included footage of an event in 1995 where some of these games were made available as downloads via Satellaview, with the presenters mentioning the system by name at least a couple of times over the course of the broadcast. I'm not sure how much they actually talk about the specifics of it, though, or what the actual circumstances of this event were (if anyone could pick out some choice info to translate from these videos that would be awesome!)<br /><br />Video 1: <!-- m --><a class="postlink" href="https://www.youtube.com/watch?v=ez79CMBcFe8">https://www.youtube.com/watch?v=ez79CMBcFe8</a><!-- m --> (featuring &quot;Easy Racer&quot; and &quot;Sweet Honey Action&quot;)<br />Video 2: <!-- m --><a class="postlink" href="https://www.youtube.com/watch?v=5fokITLC8F8">https://www.youtube.com/watch?v=5fokITLC8F8</a><!-- m --> (featuring &quot;Puzzle &amp; Bread&quot; and &quot;Flower&quot;)<br />Video 3: <!-- m --><a class="postlink" href="https://www.youtube.com/watch?v=UJStIhjTgRA">https://www.youtube.com/watch?v=UJStIhjTgRA</a><!-- m --> (featuring &quot;ラジパズ&quot; (&quot;Radio Puzzle&quot; or something) and &quot;Wonderful My Race&quot;)<br /><br />I've also seen speculation in the past that this system was used at Digipen at some point, which might explain why Nintendo filed patents for it in both the US and Japan (for contrast, the Satellaview only has a Japanese patent).<br /><br />Hardware-wise, the cart contains 4Mbit of battery-backed SRAM (in place of ROM) and some additional ICs for memory mapping and write protection. The RAM itself is mapped like a normal HiROM/mode 21 cart would be. The SRAM is normally write-protected; this is controlled by a 4-bit counter mapped to $6000-7FFF and $E000-FFFF in banks $20-3F (that is, any address with A23=0, A22=0, A21=1, A14=1, A13=1). Maxing out the counter by writing any value to these addresses 15 times will make the RAM writeable; writing to the counter again will overflow it and re-enable write protection. There's also a jumper (CL5) to keep the SRAM permanently writeable, and unused footprints for a write-enable indicator LED near the battery.<br /><br />Programming the cartridge, in short:<br /><ul><li>Write any value to $206000 fifteen times (timing doesn't matter)</li><li>Write your program to $C00000-C7FFFF</li><li>Write to $206000 again to re-enable write protection</li></ul><br />Basically everything on the cart (the SRAM chips and other logic) is also protected by a 74LS123 multivibrator which takes in the SNES master clock signal and turns it into a constant high input to SRAM chip enables and parts of the write-enable logic. This is to allow safely removing/hot-swapping the carts from the Game Processor unit while it's powered on, since disconnecting MCK would disable both the write-enable circuitry and all four SRAM chips. This also means that if you want to read/write anything from the cartridges you'll need something that can actually supply the master clock (I used a Super UFO for testing purposes). None of the other expansion pins are connected to anything.<br /><br />Cart/board photos: <!-- m --><a class="postlink" href="https://imgur.com/a/hvK1ohX">https://imgur.com/a/hvK1ohX</a><!-- m --><br />Partial chip pinouts: <!-- m --><a class="postlink" href="https://docs.google.com/spreadsheets/d/1fElt_SZ4UmPGr0_XPh63u4nPhQVvfldjlBZPPgwGecM/edit?usp=sharing">https://docs.google.com/spreadsheets/d/ ... sp=sharing</a><!-- m --><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6992">Revenant</a> — Tue May 21, 2019 5:26 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[rchoudhary]]></name></author>
<updated>2019-05-21T12:15:41-07:00</updated>
<published>2019-05-21T12:15:41-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=18808&amp;p=239163#p239163</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=18808&amp;p=239163#p239163"/>
<title type="html"><![CDATA[SNESdev • Re: [SOLVED] Any tutorials on how to add music to a SNES gam]]></title>

<category term="SNESdev" scheme="http://forums.nesdev.com/viewforum.php?f=12" label="SNESdev"/>
<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=18808&amp;p=239163#p239163"><![CDATA[
Ah thanks for pointing that out, I downloaded it and updated my own binary files and then updated my poost.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=14145">rchoudhary</a> — Tue May 21, 2019 12:15 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[calima]]></name></author>
<updated>2019-05-21T00:28:27-07:00</updated>
<published>2019-05-21T00:28:27-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=18808&amp;p=239151#p239151</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=18808&amp;p=239151#p239151"/>
<title type="html"><![CDATA[SNESdev • Re: Any tutorials on how to add music to a SNES game?]]></title>

<category term="SNESdev" scheme="http://forums.nesdev.com/viewforum.php?f=12" label="SNESdev"/>
<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=18808&amp;p=239151#p239151"><![CDATA[
Just FYI, that github repo is third-party and ancient. You will get issues on hardware if you used such an old version of snesgss.exe to export your music. Use the latest from Shiru's site.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=7237">calima</a> — Tue May 21, 2019 12:28 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[rchoudhary]]></name></author>
<updated>2019-05-21T12:15:02-07:00</updated>
<published>2019-05-20T21:57:50-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=18808&amp;p=239147#p239147</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=18808&amp;p=239147#p239147"/>
<title type="html"><![CDATA[SNESdev • Re: Any tutorials on how to add music to a SNES game?]]></title>

<category term="SNESdev" scheme="http://forums.nesdev.com/viewforum.php?f=12" label="SNESdev"/>
<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=18808&amp;p=239147#p239147"><![CDATA[
<span style="font-size: 200%; line-height: normal"><strong>I'VE GOTTEN SOUND TO WORK!!!</strong></span><br /><span style="font-size: 150%; line-height: normal">I am posting this so that anyone who stumbles across this thread on Google will not be <a href="https://imgs.xkcd.com/comics/wisdom_of_the_ancients.png" class="postlink">left hanging</a></span><br /><br /><em>Sorry in advance for this being long, the goal is for it to be comprehensive more than anything.</em><br /><br /><ul><strong>NOTE:</strong> My specific solution is for ca65, not wla dx; however, I'm sure the crux of it carries over.<br /></ul><br />So first I made the track in SNES GSS. Then I did <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">File &gt; Export</tt> and it produced 4 files:<br /><ul>1. <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">spc700.bin</tt> - the driver file for the SPC700<br />2. <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">music_1.bin</tt> - the music data<br />3. <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">sounds.asm</tt> - unused, I <span style="text-decoration: underline">deleted</span> this because I didn't need it<br />4. <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">sounds.h</tt> - unused, I <span style="text-decoration: underline">deleted</span> this one too for the same reason<br /></ul><br /><ul><strong>NOTE:</strong> Originally when I would do <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">File &gt; Export</tt> it wouldn't work (it said <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">I/O Error 123</tt>). I think the issue was I needed to do <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">File &gt; Save and Export</tt> <em>first</em>. I had done <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">File &gt; Save</tt> earlier but I guess that doesn't cut it. Anyways, if you also find yourself in a spot like that, simply do <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">snesgss.exe filename.gsm -e [optional export path]</tt>. That also produces those 4 files I mentioned earlier.<br /></ul><br /><ul><strong>NOTE:</strong> By the way, when you do <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">File &gt; Export</tt>, a dialog pops up which lets you choose where to save the binary files. If you do <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">File &gt; Save and Export</tt>, it exports the binary files in the same folder you save the <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">.gsm</tt> file.<br /></ul><br />My driver file was quite small since I used the sawtooth and triangle waveforms that came with SNES GSS (located in the <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">instruments</tt> folder). As a result, it fit in one ROM bank.<br /><br />The secret sauce came from this <a href="https://github.com/AntiheroSoftware/sfc-Kung-Fu-Master" class="postlink">Kung Fu Master port (Github link)</a> written by Antihero Software. Thanks to KungFuFurby for linking me to that! (Post is earlier in this thread)<br /><br />The files I needed were <a href="https://github.com/AntiheroSoftware/sfc-Kung-Fu-Master/blob/master/src/snesgss.asm" class="postlink"><tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">src/snesgss.asm</tt></a> and <a href="https://github.com/AntiheroSoftware/sfc-Kung-Fu-Master/blob/master/src/includes/snesgss.inc" class="postlink"><tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">src/includes/snesgss.inc</tt></a>. I downloaded them and added them to my project folder. <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">snesgss.asm</tt> had all the subroutines I needed to call. <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">snesgss.inc</tt> contained the <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">.import</tt> directives needed to access these subroutines.<br /><br /><ul><strong>NOTE:</strong> These files were written for the ca65 assembler. Unfortunately, they will not work if you're using wla dx. You could port it over manually, or in that post by KungFuFurby, the other two repos use wla dx assembler (I believe).<br /></ul><br /><ul><span style="font-size: 120%; line-height: normal"><strong>EXTREMELY IMPORTANT NOTE:</strong></span> If you search online you will see some posts on this forum itself that say that the first two bytes of <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">spc700.bin</tt> contain the size of the driver file and as a result should NOT be transferred to the SPC700. This is 100% correct <em>however</em> do <strong>NOT</strong> fix this by opening up a hex editor and deleting the first two bytes! The <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">snessgss.asm</tt> file takes care of this for you by having the <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">.incbin</tt> directive skip over the first two bytes. Basically, <em>don't touch <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">spc700.bin</tt>!!</em><br /></ul><br />I had to make one change in <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">snesgss.asm</tt>. On line 169, there's a macro expansion:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">_GSSDataGenerator &quot;../ressource/music&quot;, 1, &quot;BANK7&quot;<br /></div><br /><br />The first parameter (the string) was the location of <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">spc700.bin</tt> and <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">music_1.bin</tt> <em>relative</em> to <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">snesgss.asm</tt>. I changed that string to <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">&quot;music&quot;</tt>.<br /><br /><ul><strong>NOTE:</strong> You need to keep <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">spc700.bin</tt> and <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">music_1.bin</tt> in the same directory for the macro expansion to work!<br /></ul><br />The next parameter was the number of songs. I kept that as <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">1</tt>.<br /><br />Finally, the last parameter was the bank to put all the data in. I changed it to <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">&quot;BANK4&quot;</tt> cuz I only was using banks 1-3 up until that point. <br /><br /><ul><strong>NOTE:</strong> if <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">spc700.bin</tt> and <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">music_1.bin</tt> don't fit in a bank together (i.e. their combined sizes is &gt; 32 KB) then you'll have to modify the macro to break up the files and place them into 2 separate banks.<br /></ul><br />Moving on, at the top of my <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">main.asm</tt> I added <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">.include &quot;snesgss.inc&quot;</tt>. Then to my startup routine, I added the following lines of code to my startup routine:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">    jsl         gss_init<br />    jsl         gss_setStereo<br /><br />    lda         #$00                    ; Play music_1.bin<br />    jsl         gss_playTrack<br /></div><br /><br />These lines needed to go after SNES initialization (of course) but <em><span style="text-decoration: underline"><strong>before VBlank is enabled!!!</strong></span></em> (dear god is that an important point).<br /><br />Finally, I had to modify my <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">build.sh</tt> bash script (I'm on a Mac) to look like this:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">ca65 -v snesgss.asm<br />ca65 -v main.asm<br />ld65 -C lorom128.cfg -o game.smc main.o snesgss.o -v<br />rm -rf main.o<br /></div><br /><br />Basically I had to compile <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">snesgss.asm</tt> separately and then link the produced object file.<br /><br />After all that, I ran my build script and was greeted with glorious audio!  <img src="http://forums.nesdev.com/images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /> <br /><br />Of course I was just trying to play a single song that loops over and over. Changing songs, playing sound effects, and other APU functionality I have not messed with and probably won't for this current project. Hopefully this all is useful to someone some day (it sure would've been useful to me  <img src="http://forums.nesdev.com/images/smilies/icon_wink.gif" alt=":wink:" title="Wink" /> )<br /><br /><br />---<br /><br />P.S. If anyone needs more detail about what I did, go ahead and just reply to this thread. I get email notifications, so I'll see that and reply (probably)<br /><br />P.P.S. If anyone spots any errors please reply to the thread so newcomers don't do the wrong thing and waste time banging their head against the wall! I can update my post if needed too.<br /><br /><br />---<br /><br /><span style="font-size: 110%; line-height: normal"><strong>UPDATE 1:</strong></span> <s>For anyone wondering, here is a SNES GSS repo: <a href="https://github.com/nathancassano/snesgss" class="postlink">https://github.com/nathancassano/snesgss</a>. The README does a pretty good job describing how to use it.</s> <strong>See Update 2!</strong><br /><br />There's also a video of a guy teaching you how to use it: <a href="https://vimeo.com/119986872" class="postlink">https://vimeo.com/119986872</a>. <br /><br />Those two together should be enough to figure out how to create the music.<br /><br /><br />---<br /><br /><span style="font-size: 110%; line-height: normal"><strong>UPDATE 2:</strong></span> As calima points out in this thread, the repo I linked has an old version of SNES GSS (version 1.22 to be exact). This is a very outdated version. Instead you should get version 1.42 from Shiru's website: <a href="https://shiru.untergrund.net/software.shtml" class="postlink">https://shiru.untergrund.net/software.shtml</a>.<br /><br />Here's what you miss out if you use that Github repo instead of the one from Shiru's website: <br /><blockquote style="margin-left: 1%; padding-left: 1%; border-left: 3px solid #555577;"><em><br />v1.42 20.02.17 - Instrument selection in the main menu<br />v1.41 25.05.14 - MIDI input device can be changed in the config file<br />v1.4  24.05.14 - paste over; shifting markers and labels in multichannel Expand/Shrink; MIDI input support<br />v1.31 03.04.14 - song duration estimate, displayed in the window header<br />v1.3  02.04.14 - Output monitor[/u] and [u]built-in tuner; minor fixes<br />v1.23 01.04.14 - SPC700 driver fix to remove noise burst on initialize heard on the real HW and latest snes9x versions<br /></em></blockquote><br /><br />Definitely get the newest version!<br /><br />As far as I can tell it works almost exactly like the version in the video (which is actually version 1.2, <em>even older</em> than mine!).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=14145">rchoudhary</a> — Mon May 20, 2019 9:57 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[MottZilla]]></name></author>
<updated>2019-05-20T18:51:05-07:00</updated>
<published>2019-05-20T18:51:05-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6393&amp;p=239142#p239142</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6393&amp;p=239142#p239142"/>
<title type="html"><![CDATA[SNESdev • Re: Fastrom patches?]]></title>

<category term="SNESdev" scheme="http://forums.nesdev.com/viewforum.php?f=12" label="SNESdev"/>
<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6393&amp;p=239142#p239142"><![CDATA[
Well Gradius III did end up getting the SA-1 treatment.<br /><br /><!-- m --><a class="postlink" href="https://github.com/VitorVilela7/SA1-Root/tree/master/Gradius-III">https://github.com/VitorVilela7/SA1-Roo ... radius-III</a><!-- m --><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=1726">MottZilla</a> — Mon May 20, 2019 6:51 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[psycopathicteen]]></name></author>
<updated>2019-05-19T16:08:11-07:00</updated>
<published>2019-05-19T16:08:11-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=18874&amp;p=239090#p239090</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=18874&amp;p=239090#p239090"/>
<title type="html"><![CDATA[SNESdev • Re: M1TE - Tile Editor]]></title>

<category term="SNESdev" scheme="http://forums.nesdev.com/viewforum.php?f=12" label="SNESdev"/>
<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=18874&amp;p=239090#p239090"><![CDATA[
Thank you a lot.  SNES is definitely overdue for a tile map creation tool.  The only thing I think should be improved is the way you select colors.  It should only use 32 levels per channel, and either a slider or up/down buttons, so it's easier to fine-tune the palette.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4383">psycopathicteen</a> — Sun May 19, 2019 4:08 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[dougeff]]></name></author>
<updated>2019-05-19T15:03:15-07:00</updated>
<published>2019-05-19T15:03:15-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=18874&amp;p=239089#p239089</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=18874&amp;p=239089#p239089"/>
<title type="html"><![CDATA[SNESdev • Re: M1TE - Tile Editor]]></title>

<category term="SNESdev" scheme="http://forums.nesdev.com/viewforum.php?f=12" label="SNESdev"/>
<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=18874&amp;p=239089#p239089"><![CDATA[
I believe YY-CHRs 2bpp GB mode is the same as SNES 2bpp.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=7008">dougeff</a> — Sun May 19, 2019 3:03 pm</p><hr />
]]></content>
</entry>
</feed>