<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=20&amp;t=5128" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2009-05-07T00:00:44-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=20&amp;t=5128</id>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2009-05-07T00:00:44-07:00</updated>
<published>2009-05-07T00:00:44-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5128&amp;p=46612#p46612</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5128&amp;p=46612#p46612"/>
<title type="html"><![CDATA[Gameboy sound wave channel]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5128&amp;p=46612#p46612"><![CDATA[
<div class="quotetitle">Dwedit wrote:</div><div class="quotecontent"><br />He's talking about how you generate the square wave.  Not talking about linear interpolation as in blur filters you see in image editors.<br /></div><br />Actually, just what you see in image editors when scaling an image down a lot (though they tend to use bicubic rather than bilinear). In this case, the Game Boy sound hardware can generate sound at around a 4 MHz sampling rate, while the sound card probably only plays it at around 0.048 Mhz (48000 Hz). So if you want to graphically see what linear interpolation of 1/60 a second would be like, make a grayscale image that's 1 pixel high and 69905 pixels wide, fill it with some rectangles that are each fairly wide, then resize it horizontally to 800 pixels.<br /><br />That's the ultimate goal. But as Dwedit describes, you don't have to literally do such a laborous resize, examining every input sample, as long as you generate the same final result. Since the input isn't a waveform which constantly changes every 1 four millionth of a sample (usually), other approaches are more efficient. A simple first approach is to generate samples at a lower rate that's still around 4 times that of the output rate, then do the above "rescaling" to get the final rate. You'll deal with about 22 times less data than dealing with the full rate.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Thu May 07, 2009 12:00 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Dwedit]]></name></author>
<updated>2009-05-06T03:22:53-07:00</updated>
<published>2009-05-06T03:22:53-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5128&amp;p=46579#p46579</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5128&amp;p=46579#p46579"/>
<title type="html"><![CDATA[Gameboy sound wave channel]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5128&amp;p=46579#p46579"><![CDATA[
He's talking about how you generate the square wave.  Not talking about linear interpolation as in blur filters you see in image editors.<br /><br />A square wave goes up and down repeatedly.<br /><br />For example, let's say we have a 50% duty cycle square wave at Middle C.<br />440*2^(-9/12) Hz (~261.625 Hz)<br /><br />We want to emit a wave at 44100 Hz.<br /><br />Each stretch where it stays up or down is about 84.28 samples long.  (44100 / 261.625 / 2)<br /><br />There are some really bad ways to do sound:<br />* Round 84.28 to the nearest integer and use that as the period instead.  This changes the frequency. Don't do this.<br />* Emit 84 samples, have .28 leftover, emit 84 more samples, have .56 leftover, emit 84 samples, have .84 leftover, emit 85 samples, have .12 leftover.  This sounds really bad, the period of the wave is not consistent.<br /><br />Then there's an easy way to get decent sound:<br />* Emit 84 samples, use the 0.28/1.0 fraction to determine what fractional amplitude to output next.  Then emit 84 more samples, and use the 0.56/1.0 fraction to determine what to output next.  This is the linear interpolation he was talking about.  You output fraction * OLD + (1.0-fraction) * NEW every time you would need to output a fractional length sample.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=53">Dwedit</a> — Wed May 06, 2009 3:22 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Cloudy]]></name></author>
<updated>2009-05-06T00:09:15-07:00</updated>
<published>2009-05-06T00:09:15-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5128&amp;p=46578#p46578</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5128&amp;p=46578#p46578"/>
<title type="html"><![CDATA[Gameboy sound wave channel]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5128&amp;p=46578#p46578"><![CDATA[
Do you mean linearly interpolate the playback buffer when the sound api is requesting it?<br /><br />So for example the SDL Api periodically requests a copy of the playback buffer for it to play. Is this when I perform the linear interpolation on the buffer?<br /><br />When you say perform linear interpolation I assume you mean pick two indexes in the playback buffer and then interpolate those values between. I.E. if you picked every 5 indexes then the first interpolation would calculate the values in the playback buffer between indexes 0 and 4. And then between 4 and 9 etc.<br /><br />Thanks again for your help mate. In a matter of days I've gone from knowing nothing about sound emulation to getting results, which is thanks to yourself and tepples.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3889">Cloudy</a> — Wed May 06, 2009 12:09 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2009-05-05T17:15:11-07:00</updated>
<published>2009-05-05T17:15:11-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5128&amp;p=46559#p46559</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5128&amp;p=46559#p46559"/>
<title type="html"><![CDATA[Gameboy sound wave channel]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5128&amp;p=46559#p46559"><![CDATA[
Raspy = you need to use some kind of interpolation (especially with the wave channel, as it has lots of super-sonic harmonics). Start with linear; simplest to implement, most bang for-the-buck.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Tue May 05, 2009 5:15 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Cloudy]]></name></author>
<updated>2009-05-05T07:33:10-07:00</updated>
<published>2009-05-05T07:33:10-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5128&amp;p=46541#p46541</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5128&amp;p=46541#p46541"/>
<title type="html"><![CDATA[Gameboy sound wave channel]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5128&amp;p=46541#p46541"><![CDATA[
Thanks for that. My sound channels seems fine but raspy in comparison. Im almost there I can feel it <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":-)" title="Smile" /><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3889">Cloudy</a> — Tue May 05, 2009 7:33 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2009-05-05T04:39:02-07:00</updated>
<published>2009-05-05T04:39:02-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5128&amp;p=46537#p46537</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5128&amp;p=46537#p46537"/>
<title type="html"><![CDATA[Gameboy sound wave channel]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5128&amp;p=46537#p46537"><![CDATA[
<div class="quotetitle">Cloudy wrote:</div><div class="quotecontent"><br />I wish there was an emulator available that allows you to turn on and off the different channels so you can hear what they individually sound like.<br /></div><br />VisualBoyAdvance.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Tue May 05, 2009 4:39 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Cloudy]]></name></author>
<updated>2009-05-04T23:49:58-07:00</updated>
<published>2009-05-04T23:49:58-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5128&amp;p=46528#p46528</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5128&amp;p=46528#p46528"/>
<title type="html"><![CDATA[Gameboy sound wave channel]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5128&amp;p=46528#p46528"><![CDATA[
Thanks for the reply. I havent been able to reply over the weekend as I have no internet access. I managed to get some progress over the weekend and now you can clearly hear the correct melody being played in all games which is very encouraging. I feel it is still a long way off being finished though because it sounds awful. Interestingly if I disable all but one of the 4 channels and play it then im convinced I can hear the same channel being played on the real gameboy. So it is like individually they are playing correct but when combined although you can hear each channel is still playing correctly it sounds awful. This is probably because I still have the mixer to emulate. I havent done this yet as I dont know how to use SDL to play a left and right sound buffer. I'll have to look into that.<br /><br />I wish there was an emulator available that allows you to turn on and off the different channels so you can hear what they individually sound like. I guess that'd really help me see where I am going wrong lol.<br /><br />Thanks again.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3889">Cloudy</a> — Mon May 04, 2009 11:49 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2009-05-01T15:33:08-07:00</updated>
<published>2009-05-01T15:33:08-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5128&amp;p=46409#p46409</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5128&amp;p=46409#p46409"/>
<title type="html"><![CDATA[Gameboy sound wave channel]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5128&amp;p=46409#p46409"><![CDATA[
How are you spreading the 16 wave RAM bytes into your 32-entry wave table? What happens when numCycles is great enough that more than one wave step should occur? Seems you need a while loop. Otherwise, the code looks correct.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Fri May 01, 2009 3:33 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Cloudy]]></name></author>
<updated>2009-04-30T23:47:19-07:00</updated>
<published>2009-04-30T23:47:19-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5128&amp;p=46394#p46394</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5128&amp;p=46394#p46394"/>
<title type="html"><![CDATA[Gameboy sound wave channel]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5128&amp;p=46394#p46394"><![CDATA[
Thanks for the reply Blarrg.<br /><br />I have edited my above code to show exactly what I am doing in my real code. The only difference is that my code belongs inside a wave channel class and the CalculateWave is a member of that class a long with the variables "frequency", "wavePos", "wave" and the sets "set3/4/5". I believe that link to the sound development you posted indexes the channel registers (sets) from 0 where I index them from 1 (this is because this is how lord nightmare indexed them and I read his document first).<br /><br />The boolean "channelNotEnabled" is set to true if the DAC power is off, or the master control is off or the length counter is 0 (including if the length counter is enabled).<br /><br />So if you can spot any problems im sure they are problems in my actual code.<br /><br />My second question is when square waves output a polarity of 1 then i feed this to the DAC along with its volume in the same manner as I do with the wave channel to get its analog value. However if the square wave outputs a polarity of 0 then do i just return 0 instead of going though the DAC?<br /><br />Thanks for any help.<br /><br />Edit:<br /><br />I should probably clarify that my actual wave memory is 32 bytes not 16. This is because I find it easier to treat the 2 samples encoded into one byte as two different indexes in the wave memory.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3889">Cloudy</a> — Thu Apr 30, 2009 11:47 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Dwedit]]></name></author>
<updated>2009-04-30T16:36:38-07:00</updated>
<published>2009-04-30T16:36:38-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5128&amp;p=46391#p46391</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5128&amp;p=46391#p46391"/>
<title type="html"><![CDATA[Gameboy sound wave channel]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5128&amp;p=46391#p46391"><![CDATA[
Is it the step aliasing as it increments in 16 steps that causes the "NES Sound", or is it the doubling of the numbers at the top and bottom of the wave?<br /><br />Edit:<br />I just generated two wave files, one using 16 step aliasing, and one using 17 step aliasing (so that the second half goes 16...1 instead of 15...0).  Couldn't tell them apart very well listening to them side by side.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=53">Dwedit</a> — Thu Apr 30, 2009 4:36 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2009-04-30T13:26:22-07:00</updated>
<published>2009-04-30T13:26:22-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5128&amp;p=46388#p46388</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5128&amp;p=46388#p46388"/>
<title type="html"><![CDATA[Gameboy sound wave channel]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5128&amp;p=46388#p46388"><![CDATA[
<div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />And each 4 bits represents an entry. That's definitely a triangle wave. But it seems like it would be slightly off, as it repeats the wave, playing volume 0 twice.<br /></div><br />I'm pretty sure the same happens on the NES : The output to the DAC is the low 4 bits each XNORED with the 5th bit of a 5 bit counter. This effectively resulting the 0, 1, ...., 14, 15, 15, 14, ...., 1, 0, 0, 1, .... sequence.<br /><br />Yet, I guess it doesn't sound the exact same as triangle wave on the NES. Very probably this is due to analog filtering past the DAC, that most emulators/music players emulate (I guess).[/list]<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Thu Apr 30, 2009 1:26 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2009-04-30T13:12:28-07:00</updated>
<published>2009-04-30T13:12:28-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5128&amp;p=46387#p46387</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5128&amp;p=46387#p46387"/>
<title type="html"><![CDATA[Gameboy sound wave channel]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5128&amp;p=46387#p46387"><![CDATA[
<div class="quotetitle">Cloudy wrote:</div><div class="quotecontent"><br />This is just pretty much pseudo code of what im doing.<br /></div><br />Well, I see problems with it, but I'm not sure it's what your real code does. Do you want to get your pseudo-code working, or the real code?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Thu Apr 30, 2009 1:12 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2009-04-30T08:12:13-07:00</updated>
<published>2009-04-30T08:12:13-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5128&amp;p=46381#p46381</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5128&amp;p=46381#p46381"/>
<title type="html"><![CDATA[Gameboy sound wave channel]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5128&amp;p=46381#p46381"><![CDATA[
It plays the entry with level 0 twice, and it also plays the entry with level 15 twice. But it's still triangular enough that it sounds like a triangle wave. And each of the 32 steps is flat, which gives the characteristic aliasing at 31f and 33f that defines part of the "NES sound".<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Thu Apr 30, 2009 8:12 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Celius]]></name></author>
<updated>2009-04-30T07:42:41-07:00</updated>
<published>2009-04-30T07:42:41-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5128&amp;p=46379#p46379</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5128&amp;p=46379#p46379"/>
<title type="html"><![CDATA[Gameboy sound wave channel]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5128&amp;p=46379#p46379"><![CDATA[
<div class="quotetitle">tepples wrote:</div><div class="quotecontent"><br />You might want to try asking on forum.gbadev.org; there are probably still some people left who haven't moved on completely to the DS and remember what "01 23 45 67 89 AB CD EF FE DC BA 98 76 54 32 10" in wave RAM means. (It's what you write to get the same waveform as the NES triangle wave channel.)<br /></div><br /><br />That makes sense. The waveform looks like:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">F |               **<br />E |              *  *<br />D |             *    *<br />C |            *      *<br />B |           *        *<br />A |          *          *<br />9 |         *            *<br />8 |        *              *<br />7 |       *                *<br />6 |      *                  *<br />5 |     *                    *<br />4 |    *                      *<br />3 |   *                        *<br />2 |  *                          *<br />1 | *                            *<br />0 |*                              *<br />  *--------------------------------<br /></div><br /><br />And each 4 bits represents an entry. That's definitely a triangle wave. But it seems like it would be slightly off, as it repeats the wave, playing volume 0 twice.<br /><br />I think this is how the GB's wave engine works, too. I know it uses 4-bit samples with 16 bytes of RAM to do it with.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=138">Celius</a> — Thu Apr 30, 2009 7:42 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Cloudy]]></name></author>
<updated>2009-04-30T23:40:49-07:00</updated>
<published>2009-04-30T01:07:53-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5128&amp;p=46373#p46373</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5128&amp;p=46373#p46373"/>
<title type="html"><![CDATA[Gameboy sound wave channel]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5128&amp;p=46373#p46373"><![CDATA[
Thanks for the reply.<br /><br />I've had a stab at the wave pattern channel after reading that doc. It isnt sounding right so im unsure if it is a bug in my code or a misunderstanding with how the wave channel works.<br /><br />This is the algorithm I use for calculating the wave.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent"><br />int CalculateWave &#40; int numCycles &#41;<br />&#123;<br />// dac power, master on off and length counter &#40;if length counter is enabled&#41;<br />if &#40;channelIsNotEnabled&#41;<br /> return 0;<br /><br />bool timeToUpdate = frequency &lt;= numCycles ;<br />frequency -= numCycles ;<br /><br />if &#40;timeToUpdate&#41;<br />&#123;<br />// reset the frequency<br />int value = &#40;set5 &lt;&lt; 8&#41; | set4 ;<br />value &amp;= 0x7FF ;<br />frequency = &#40;2048 - value&#41; * 2 ;<br /><br />// move on to next wave pos<br />wavePos++ ;<br />wavePos = wavePos % 32 ;<br />&#125;<br /><br />int volumeControl = set3 &gt;&gt; 5;<br />volumeControl &amp;= 3;<br /><br />int shift = 0 ;<br />switch&#40;volumeControl&#41;<br />&#123;<br />case 0: shift = 4 ; break ;<br />case 1: shift = 0 ; break ;<br />case 2: shift = 1 ; break ;<br />case 3: shift = 2 ; break ;<br />&#125;<br /><br />return GetDACOutput &#40;wave&#91;wavePos&#93; &gt;&gt; shift&#41;<br />&#125;<br /><br /></div><br /><br />This is just pretty much pseudo code of what im doing. Basically it decreases the frequency by the num of clock cycles the last opcode took. If the frequency becomes less than 0 then it reloads the frequency and moves onto the next wave pos.<br /><br />The input value given to the DAC is the current sample shifted by the volume control.<br /><br />This is what the GetDACOutput does<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">int GetDACOutput&#40;int volume&#41;<br />&#123;<br />   static double analog&#91;&#93; = &#123; -1, -0.8667, -0.7334, -0.6, -0.4668, -0.3335, -0.2, -0.067, 0.0664, 0.2, 0.333, 0.4668,0.6,0.7334,0.8667,1  &#125; ;<br />   return static_cast&lt;int&gt;&#40;8000 * analog&#91;volume&#93; &#41; ;<br />&#125;   <br /></div><br /><br />The reason why im doing 8000 multiply the analog value is because SDL is using AUDIO_S16SYS which gives a range of approx -32000 to 32000 and as there are 4 channels 8000 will fit in range.<br /><br />Also just to confirm something with the other square wave channels, if the current polarity is 0 then it always returns a value of 0, correct? However if the value is 1 then it passes its current volume into GetDACOutput which will return -1 to 1?<br /><br />Thanks for any help<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3889">Cloudy</a> — Thu Apr 30, 2009 1:07 am</p><hr />
]]></content>
</entry>
</feed>