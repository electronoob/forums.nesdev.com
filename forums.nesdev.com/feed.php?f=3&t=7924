<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=3&amp;t=7924" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2014-10-19T09:54:02-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=3&amp;t=7924</id>
<entry>
<author><name><![CDATA[Sik]]></name></author>
<updated>2014-10-19T09:54:02-07:00</updated>
<published>2014-10-19T09:54:02-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7924&amp;p=135242#p135242</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7924&amp;p=135242#p135242"/>
<title type="html"><![CDATA[Re: Optimizing emulators]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7924&amp;p=135242#p135242"><![CDATA[
<div class="quotetitle">tepples wrote:</div><div class="quotecontent"><br />What might this log contain, so that I can evaluate the tradeoffs of a log vs. emulation?<br /></div><br />Whatever is needed to keep the emulated system's state updated. A sequence of savestates would be the most naive method, in practice you'd probably want to remove as much redundancy as possible. I guess that coming up with such a thing is not as trivial, but &quot;playing back&quot; such a log shouldn't require much computation.<br /><br />EDIT: oh, and yes I know, sprite zero, but it's not like savestates have to be a standard format either, you can adapt them for those cases I suppose =P (heck, maybe even adapt the format to each game, since we're cheating after all) Most games just do a single change at the sprite zero point anyway, so it's not that far fetched in practice.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4526">Sik</a> — Sun Oct 19, 2014 9:54 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2014-10-19T06:17:58-07:00</updated>
<published>2014-10-19T06:17:58-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7924&amp;p=135238#p135238</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7924&amp;p=135238#p135238"/>
<title type="html"><![CDATA[Re: Optimizing emulators]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7924&amp;p=135238#p135238"><![CDATA[
<div class="quotetitle">Sik wrote:</div><div class="quotecontent"><br />it's unlikely that the screens of all 500 machines are visible at the same time (only a small fraction will be visible), so there isn't any need to emulate the rendering of those that aren't visible.<br /></div><br />You still need to do some of the rendering logic for games that spin on sprite 0 (most pre-MMC3 games with a status bar) or use mappers that snoop on VRAM fetches (mostly Punch-Out!!, CV3, and a bunch of arcade-unfriendly RPGs and sims). But given that PocketNES emulates an NES in 16.78 MHz of a single-core, single-thread ARM, it should be at least kinda-sorta possible on modern multicore machines so long as all ROMs' working sets fit in L3 data cache.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Also there's the fact that most machines won't be in use, and very likely will be showing their attract mode (which loops over and over). So rather than fully emulating those, it may be better to instead make a log the status of the machine during that<br /></div><br />What might this log contain, so that I can evaluate the tradeoffs of a log vs. emulation?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Sun Oct 19, 2014 6:17 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Sik]]></name></author>
<updated>2014-10-18T22:33:40-07:00</updated>
<published>2014-10-18T22:33:40-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7924&amp;p=135233#p135233</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7924&amp;p=135233#p135233"/>
<title type="html"><![CDATA[Re: Optimizing emulators]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7924&amp;p=135233#p135233"><![CDATA[
This seems like a nice thought experiment so gonna join in. I'd probably... cheat like crazy though, since emulating 500 machines at full framerate seems impossible with current hardware I think.<br /><br />First of all: it's unlikely that the screens of all 500 machines are visible at the same time (only a small fraction will be visible), so there isn't any need to emulate the rendering of those that aren't visible. Also there's the fact that most machines won't be in use, and very likely will be showing their attract mode (which loops over and over). So rather than fully emulating those, it may be better to instead make a log the status of the machine during that and then just keep replaying it (until somebody goes play with the machine, at which point it switches to proper emulation until it goes back into attract mode).<br /><br />Also ideally the emulator would need to be kept as simple as possible, so if possible it should be limited to just the simpler games (e.g. early ones), possibly patching them if they exploit quirks that could have been avoided so the emulator doesn't have to cope with them (e.g. Super Mario Bros writing the background color through a mirror entry). Yeah that's heavily cheating but then again I imagine that in such a situation you have full control over what gets emulated anyway.<br /><br />OK, I guess I went really off the way here, but I suppose the same idea can be applied to other similar situations =P<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4526">Sik</a> — Sat Oct 18, 2014 10:33 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2014-10-18T18:11:20-07:00</updated>
<published>2014-10-18T18:11:20-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7924&amp;p=135230#p135230</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7924&amp;p=135230#p135230"/>
<title type="html"><![CDATA[Re:]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7924&amp;p=135230#p135230"><![CDATA[
(Found via search for a certain euphemism)<br /><br /><div class="quotetitle">qbradq wrote:</div><div class="quotecontent"><br />Interesting... but what the hell would you output all that onto?<br /></div><br />A 3D model of an arcade full of PlayChoice or Vs. machines, perhaps?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Sat Oct 18, 2014 6:11 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[qbradq]]></name></author>
<updated>2011-06-30T11:33:09-07:00</updated>
<published>2011-06-30T11:33:09-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7924&amp;p=80908#p80908</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7924&amp;p=80908#p80908"/>
<title type="html"><![CDATA[Optimizing emulators]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7924&amp;p=80908#p80908"><![CDATA[
Interesting... but what the hell would you output all that onto? And it'd need crap-tons of CPU resources.<br /><br />I did a graphics demo for XBox360 that used a fragment shader for 100% of the rendering process. It's quite fun, and a learning experience to say the least <img src="http://forums.nesdev.com/images/smilies/icon_razz.gif" alt=":P" title="Razz" /><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3706">qbradq</a> — Thu Jun 30, 2011 11:33 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[MottZilla]]></name></author>
<updated>2011-06-30T11:24:47-07:00</updated>
<published>2011-06-30T11:24:47-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7924&amp;p=80905#p80905</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7924&amp;p=80905#p80905"/>
<title type="html"><![CDATA[Optimizing emulators]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7924&amp;p=80905#p80905"><![CDATA[
So you could emulate 500 NES games at the same time with better performance I guess.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=1726">MottZilla</a> — Thu Jun 30, 2011 11:24 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[qbradq]]></name></author>
<updated>2011-06-30T10:13:52-07:00</updated>
<published>2011-06-30T10:13:52-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7924&amp;p=80898#p80898</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7924&amp;p=80898#p80898"/>
<title type="html"><![CDATA[Optimizing emulators]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7924&amp;p=80898#p80898"><![CDATA[
Why would you be worried about graphics performance on a machine with a GPU supporting Shader Model 4? Seems moot at that point.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3706">qbradq</a> — Thu Jun 30, 2011 10:13 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[mic_]]></name></author>
<updated>2011-06-30T10:06:11-07:00</updated>
<published>2011-06-30T10:06:11-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7924&amp;p=80894#p80894</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7924&amp;p=80894#p80894"/>
<title type="html"><![CDATA[Optimizing emulators]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7924&amp;p=80894#p80894"><![CDATA[
Wellll.. if you really want to go all out you could write your renderer in the form of a fragment shader. This would more or less require shader model 4.0 or above, since earlier versions lacked bitwise operators.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=1181">mic_</a> — Thu Jun 30, 2011 10:06 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[MottZilla]]></name></author>
<updated>2011-06-30T09:58:20-07:00</updated>
<published>2011-06-30T09:58:20-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7924&amp;p=80892#p80892</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7924&amp;p=80892#p80892"/>
<title type="html"><![CDATA[Optimizing emulators]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7924&amp;p=80892#p80892"><![CDATA[
If sprite hit zero is not used, you can log various registers as rendering would happen and then actually render the screen all at once which may help with speed based on either cache size or overhead performance. If sprite hit zero is used then you may need to draw the screen up to that point. But usually it happens higher up on the screen so you could still get a boost by being able to render most of the screen in one big chunk. <br /><br />Really it's just about doing things the quickest way possible with the least amount of waste while still accomplishing the tasks needed for accuracy/compatibility. This can vary for some games. Mega Man for example you could get by with some very quick PPU code since it doesn't do much to complicate things. Infact any game that doesn't split the screen for a status bar, doesn't bankswitch to animate CHR, or do anything else strange you could probably just draw the nametables once and then just render them to the screen as well as updating them as the game does and save yourself alot of time as there wouldn't be much PPU calculations going on at that point. <br /><br />But ofcourse like I said that's only if the game can get by with that.<br /><br />I remember working on my emulator I found that running in 8bit (256 color) mode was significantly faster. I was specifically developing for an older Pentium 2 where performance was an issue. One thing I found out was directly manipulating video memory was much faster. So rather than drawing pixels on the screen by loading 8bit values and putting them into place I loaded 32bit values and was drawing 4 pixels at a time. <br /><br />I'm sure there were other things. Profiling type functions are very helpful for figuring out where all your CPU time is going.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=1726">MottZilla</a> — Thu Jun 30, 2011 9:58 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[oRBIT2002]]></name></author>
<updated>2011-06-30T05:52:56-07:00</updated>
<published>2011-06-30T05:52:56-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7924&amp;p=80862#p80862</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7924&amp;p=80862#p80862"/>
<title type="html"><![CDATA[Optimizing emulators]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7924&amp;p=80862#p80862"><![CDATA[
PocketNES obviously benefits that the GBA already has tilebased graphics.<br /><br />My CPU core runs realtime, it's the graphics that are the problem and takes up too much time. <br />I avoid drawing the same tile twice and stuff like that. I usually log most PPU related activity and at the end of each frame I combine a final screen by parsing these logs. This gives an "ok" result, except for the speed-concern.<br /><br />Would be interesting to hear how people made their NES graphicsengines. If people are simply drawing pixel by pixel or some other clever way to speed things up.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=353">oRBIT2002</a> — Thu Jun 30, 2011 5:52 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2011-06-30T05:37:41-07:00</updated>
<published>2011-06-30T05:37:41-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7924&amp;p=80861#p80861</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7924&amp;p=80861#p80861"/>
<title type="html"><![CDATA[Re: Optimizing emulators]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7924&amp;p=80861#p80861"><![CDATA[
<div class="quotetitle">oRBIT2002 wrote:</div><div class="quotecontent"><br />I'm curious about you other emulator-authors.. How much time do you spend on finetuning and optimizing your emulator? Is it neccessary to optimize a NES emulator running on a &lt;several GHz&gt; CPU running Windows these days?<br /></div><br />You need to optimize your emulator if: <ol style="list-style-type: lower-alpha"><li>You want to emulate multiple NES consoles in parallel, as the video of nemulator's game select screen shows. (I can't try it myself because I have yet to buy a PC with Windows 7.) </li><li>You want an emulator to run at full speed on an Atom-powered netbook or not to heat up a traditional laptop and drain its battery quickly. </li><li>You want an emulator to be playable on the kind of computer most commonly connected to a TV-sized monitor. A lot of set-top home theater PCs are based on the same chipset as a netbook. </li><li>You want to share the emulation core between the PC version and the Android version of an emulator. </li></ol><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />I have to trade some compability against speed<br /></div><br />As long as you make it clear in the manual that you're fudging accuracy, that's fine. Keeping users informed will keep them from testing on your emulator and then female dogging when their code doesn't work on an NES or on the best of breed emulators (Nintendulator and Nestopia).<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />I'm a bit interested in how you guys deal with the graphics concerning NES emulation. Do you have any clever ways of updating the backgroundgraphics/sprites?<br /></div><br />First, have you profiled your emulator and seen how much host CPU time is dedicated to the NES CPU vs. the PPU?<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Would be cool to hear if you're using any clever "tricks". <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":-)" title="Smile" /><br /></div><br />PocketNES runs games at full speed on a 16.8 MHz CPU by drawing the NES tiles and sprites using Game Boy Advance tiles and sprites.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Thu Jun 30, 2011 5:37 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[oRBIT2002]]></name></author>
<updated>2011-06-30T03:11:48-07:00</updated>
<published>2011-06-30T03:11:48-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7924&amp;p=80859#p80859</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7924&amp;p=80859#p80859"/>
<title type="html"><![CDATA[Optimizing emulators]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7924&amp;p=80859#p80859"><![CDATA[
I'm curious about you other emulator-authors.. How much time do you spend on finetuning and optimizing your emulator? Is it neccessary to optimize a NES emulator running on a &lt;several GHz&gt; CPU running Windows these days? <br />I code my emulator on the old Amiga (running at 50Mhz at best) and of course performance is a huge issue for me, and I'm constantly looking for ways to optimize and speed things up, but I guess that's part of the fun aswell. I have to trade some compability against speed, but I guess I can live with that for now.<br /><br />I'm a bit interested in how you guys deal with the graphics concerning NES emulation. Do you have any clever ways of updating the backgroundgraphics/sprites? Would be cool to hear if you're using any clever "tricks". <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":-)" title="Smile" /><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=353">oRBIT2002</a> — Thu Jun 30, 2011 3:11 am</p><hr />
]]></content>
</entry>
</feed>