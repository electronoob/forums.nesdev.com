<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=2&amp;t=6319" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2014-08-07T08:03:38-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=2&amp;t=6319</id>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2014-08-07T08:03:38-07:00</updated>
<published>2014-08-07T08:03:38-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6319&amp;p=132181#p132181</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6319&amp;p=132181#p132181"/>
<title type="html"><![CDATA[Re: Collisions against sloped surfaces]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6319&amp;p=132181#p132181"><![CDATA[
<div class="quotetitle">psycopathicteen wrote:</div><div class="quotecontent"><br />Is it easier to do slope collision with LUTs, or should I use arithmetic?  I'm trying to figure out a nice looking algorithm that most people would be able to read.<br /></div><br />Will using arithmetic for slopes always result in straight ramps of varying angles? IMO that's a pointless limitation, when you could use LUTs and have curved surfaces and other interesting constructions, as well as everything you could have with the arithmetic approach.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Thu Aug 07, 2014 8:03 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[rainwarrior]]></name></author>
<updated>2014-08-06T22:43:00-07:00</updated>
<published>2014-08-06T22:43:00-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6319&amp;p=132163#p132163</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6319&amp;p=132163#p132163"/>
<title type="html"><![CDATA[Re: Collisions against sloped surfaces]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6319&amp;p=132163#p132163"><![CDATA[
<div class="quotetitle">psycopathicteen wrote:</div><div class="quotecontent"><br />Is it easier to do slope collision with LUTs, or should I use arithmetic?  I'm trying to figure out a nice looking algorithm that most people would be able to read.<br /></div><br />Aren't they both equally easy? The result is the same. The reason to use one or the other is situational. If you don't have a reason right now to use one or the other, just pick one.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5165">rainwarrior</a> — Wed Aug 06, 2014 10:43 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[psycopathicteen]]></name></author>
<updated>2014-08-06T21:34:58-07:00</updated>
<published>2014-08-06T21:34:58-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6319&amp;p=132160#p132160</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6319&amp;p=132160#p132160"/>
<title type="html"><![CDATA[Re: Collisions against sloped surfaces]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6319&amp;p=132160#p132160"><![CDATA[
Is it easier to do slope collision with LUTs, or should I use arithmetic?  I'm trying to figure out a nice looking algorithm that most people would be able to read.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4383">psycopathicteen</a> — Wed Aug 06, 2014 9:34 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2014-07-17T11:08:01-07:00</updated>
<published>2014-07-17T11:08:01-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6319&amp;p=131246#p131246</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6319&amp;p=131246#p131246"/>
<title type="html"><![CDATA[Re: Collisions against sloped surfaces]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6319&amp;p=131246#p131246"><![CDATA[
I probably don't have my images either, since I replaced my laptop around 2012 and I'm not very good at backing up small files like these.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Thu Jul 17, 2014 11:08 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Kasumi]]></name></author>
<updated>2014-07-17T11:12:21-07:00</updated>
<published>2014-07-17T10:50:59-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6319&amp;p=131245#p131245</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6319&amp;p=131245#p131245"/>
<title type="html"><![CDATA[Re: Collisions against sloped surfaces]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6319&amp;p=131245#p131245"><![CDATA[
Blast from the past. It's actually quite amazing how many of the problems I mentioned in my post I've since solved. I probably don't even still have those images locally, though.<br /><br />edit: <br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Mr. Gimmick appears to just let you fall off a slope as your midpoint leaves the slope.<br /></div><br />So I still have it so you still fall off slopes from your mid point. But the airborne wall ejection will only be run if traveling at speed 0 or toward the wall. Since running off a slope would typically mean your speed is away from the wall, this ejection rarely occurs. Even trying to force it to happen is tough, because jumping on a slope changes your X speed, and then you have to try to get it to slightly above zero just to see the odd effect.<br /><br />My game currently has a glitch where if you manage to land (on flat ground even) while still inside the wall (and again, you have to manage your speed VERY carefully for this to happen) the thing that detects slope angle will think you're on a very high slope (because the left/right points get an offset, and one is inside the wall) which can cruise you out of the wall as if you were on a slope which is weird. My game has &quot;pixel perfect&quot; slope detection, so it can detect 49 levels of slope rather than just 4 or whatever. <br /><br />To fix this problem in Sonic that Tokumaru mentioned:<br /><img src="http://i.imgur.com/vFfo5eN.gif" alt="Image" /><br />In addition to my pixel perfect slope detection, each slope has a &quot;height&quot; from 0 to 3. 0 is flat, 1 is shallow, 2  is 45, 3 is steep. Then I have a set of offsets. The character is already raised or not depending on how high the slope is. <br /><br />When his left or right point is above air, it's tough to tell what situation he's in. So at the point, it reads the hard coded slope height (as opposed to the pixel perfect one) from the slope the midpoint is on, and uses that for offsets. (PS, this hard coded slope height is what enemies use, since doing the pixel perfect check for everything would be pretty CPU intensive.)<br /><br />And to access that table is exceptionally simple. Just and the low byte of his position with 8, and use that number as an index in the table. (There are separate tables for left and right.) I also have indexes for walking off flat ground since the character is somewhat egg shapes, and walking off flat ground would mean left parts of him would float above flat ground without them.<br /><br />Anyway, there's really nothing left except that one land in wall glitch that I'm unhappy with. I even have ideas to fix it, it's just whether or not it will be too CPU intensive. Running the main character is already quite CPU intensive, and my game support co-op.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3504">Kasumi</a> — Thu Jul 17, 2014 10:50 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[thefox]]></name></author>
<updated>2014-07-17T04:09:38-07:00</updated>
<published>2014-07-17T04:09:38-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6319&amp;p=131241#p131241</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6319&amp;p=131241#p131241"/>
<title type="html"><![CDATA[Re: Collisions against sloped surfaces]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6319&amp;p=131241#p131241"><![CDATA[
It's unfortunate that so many images in this thread have disappeared. Is there any way to restore them?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=80">thefox</a> — Thu Jul 17, 2014 4:09 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2010-04-28T10:17:14-07:00</updated>
<published>2010-04-28T10:17:14-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6319&amp;p=60543#p60543</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6319&amp;p=60543#p60543"/>
<title type="html"><![CDATA[Collisions against sloped surfaces]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6319&amp;p=60543#p60543"><![CDATA[
The problem is how much you're supposed to project the slopes. It has to be half the width of the object colliding with it.<br /><br />If that projection is hardcoded in the collision data, this idea will not work very well because it will be done according to a single width of your choice, and it will not work the same for objects of different widths.<br /><br />On the other hand, calculating those projections dynamically could be tough. Specially when going down a slope, since the projection must have the same angle as the slope. What if the slope is more complex than a simple ramp? There is no way to guess the shape of the extended surface.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Wed Apr 28, 2010 10:17 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Drag]]></name></author>
<updated>2010-04-28T00:30:29-07:00</updated>
<published>2010-04-28T00:30:29-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6319&amp;p=60528#p60528</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6319&amp;p=60528#p60528"/>
<title type="html"><![CDATA[Collisions against sloped surfaces]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6319&amp;p=60528#p60528"><![CDATA[
In actuality, if anything less than a whole foot is on a ledge, you're going to topple off, whether the ground is sloped or not. <img src="http://forums.nesdev.com/images/smilies/icon_razz.gif" alt=":P" title="Razz" /><br /><br />Anyway, here's my proposal:<br /><img src="http://drag.wootest.net/images/crap/slopes.png" alt="Image" /><br /><br />Project the slope.<br /><br />Edit: Yeah, that doesn't have the best results 100% of the time, so here's an addendum:<br /><br />For the upper edge of the slope, you can just project the height of the edge, since theoretically, when your corner point enters the tile to detect the collision in the first place, you will already be sunken past the projected slope's surface, and popping up a few pixels when you land probably isn't going to look incredibly pretty.<br /><br />On the lower edge, you can just simply project the slope, because when your corner intersects the tile, the actual physical surface of the tile is much lower than the top edge of the tile's square boundaries, so you can tell exactly where you'll hit the slope's surface.<br /><br />In essence, when you walk off the top of the slope, when your middle point crosses out of the tile, it'll "pretend" that you're walking onto a flat tile until your corner point crosses out of the sloped tile.<br /><br />When you walk off the bottom of the slope, you'll just keep walking lower and lower as though that slope is continuing, until your corner point crosses out of the tile.<br /><br />Of course, if your middle point crosses out of the sloped tile and onto another tile that's actually solid, you'll just check against the new tile's surface, unless it's lower than the corner point still in the old tile.<br /><br />Edit:<br /><img src="http://drag.wootest.net/images/crap/slopes2.png" alt="Image" /><br />This is how the midpoint would react, if the bottom edge of the object were 32 pixels long. The vertical red lines represent areas where the midpoint can't cross (since the collision detection would prevent the object from walking into the walls)<br /><br />The highlighted lines are where the midpoint would be when you collide with the ground and stop falling.<br /><br />The dark green is the actual physical landscape, everything else is just open air.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=21">Drag</a> — Wed Apr 28, 2010 12:30 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2010-04-27T06:41:48-07:00</updated>
<published>2010-04-27T06:41:48-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6319&amp;p=60473#p60473</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6319&amp;p=60473#p60473"/>
<title type="html"><![CDATA[Collisions against sloped surfaces]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6319&amp;p=60473#p60473"><![CDATA[
<div class="quotetitle">BMF54123 wrote:</div><div class="quotecontent"><br />This reminded me of an <a href="http://games.greggman.com/game/programming_m_c__kids" class="postlink">interesting article by Gregg Tavares,</a> one of the programmers of MC Kids, part of which explains how they dealt with slopes in the game.<br /></div><br />Very badly, I must say. IMO, the ideas presented in this thread are much more interesting.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Tue Apr 27, 2010 6:41 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[BMF54123]]></name></author>
<updated>2010-04-26T20:23:12-07:00</updated>
<published>2010-04-26T20:23:12-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6319&amp;p=60466#p60466</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6319&amp;p=60466#p60466"/>
<title type="html"><![CDATA[Collisions against sloped surfaces]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6319&amp;p=60466#p60466"><![CDATA[
This reminded me of an <a href="http://games.greggman.com/game/programming_m_c__kids" class="postlink">interesting article by Gregg Tavares,</a> one of the programmers of MC Kids, part of which explains how they dealt with slopes in the game.<br /><br />I found it interesting how Super Mario Bros. 3 actually changes the collision rules based on whether a level contains slopes or not. That seems pretty sloppy to me.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=935">BMF54123</a> — Mon Apr 26, 2010 8:23 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Kasumi]]></name></author>
<updated>2010-04-26T11:08:50-07:00</updated>
<published>2010-04-26T11:08:50-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6319&amp;p=60431#p60431</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6319&amp;p=60431#p60431"/>
<title type="html"><![CDATA[Collisions against sloped surfaces]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6319&amp;p=60431#p60431"><![CDATA[
<div class="quotetitle">tokumaru wrote:</div><div class="quotecontent"><br />The opposite also happens when jumping from a slope, you will not always go straight up. It's a nice feature.<br /></div><br /><br />Indeed, my game will do that as well.<br /><br />I also have an alternate sprite for steeper slopes like Kirby. I'm not sure how it looks in game. I've been so busy getting the best collision rules I can think of I haven't done much graphically. <br /><br /><div class="quotetitle">65024U wrote:</div><div class="quotecontent"><br />I'm just going to throw my 2 cents into here, it probably won't matter but here it goes....<br /><br /><br /><br />It's apparent that other games ran into the same problem and solved it different ways, I'm sure they did their homework, too.  Since they all used a semi different way to "fix" (or avoid) it, it's clear that we'll just have to pick one of these methods and run with it.....<br /></div><br /><br />Indeed, tokumaru and I already have one point we'll go seperate ways on, but it's still nice to discuss various ways of solving the same problem. And seeing this topic with so many ways to make this work as a new person wanting to make a NES game with slopes might help them make decisions and solve these problems for their own game.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3504">Kasumi</a> — Mon Apr 26, 2010 11:08 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2010-04-26T10:45:16-07:00</updated>
<published>2010-04-26T10:45:16-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6319&amp;p=60429#p60429</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6319&amp;p=60429#p60429"/>
<title type="html"><![CDATA[Collisions against sloped surfaces]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6319&amp;p=60429#p60429"><![CDATA[
<div class="quotetitle">Kasumi wrote:</div><div class="quotecontent"><br />Upon landing, some of Sonic's vertical momentum becomes momentum to the right.<br /></div><br />Yeah, when landing on a slope, the speed is distributed differently depending on the angle. The opposite also happens when jumping from a slope, you will not always go straight up. It's a nice feature.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br /><div class="quotetitle">Disch wrote:</div><div class="quotecontent">2)  If the center point gives the impression that you're going to fall, you instead check the entire lower surface of the rect.<br /></div><br /><br />You check 15 points for collision if your character is 16 pixels wide? (You already checked one, of course) If that's what you're describing, I definitely can't check that many points quickly enough to not lose frames, considering I also multidirectional scroll and such.</div><br />Yeah, I was worried about this as well, it might be too CPU intensive for the NES. I thought of a variation that might work though. The middle point is always used first when looking for the floor:<br /><br /><img src="http://img689.imageshack.us/img689/4170/slope11.png" alt="Image" /><br /><br />Once this point is off the ground, we look for ground using the other 2 points (much better than 15). If there is no floor, the object falls. If there is, instead of using the height of the column exactly below the point, like Sonic does, we use the height of the rightmost column:<br /><br /><img src="http://img28.imageshack.us/img28/7898/slope12.png" alt="Image" /> <img src="http://img401.imageshack.us/img401/9350/slope13.png" alt="Image" /><br /><br />The same thing happens when walking down a slope:<br /><br /><img src="http://img691.imageshack.us/img691/9625/slope14.png" alt="Image" /><br /><br />Once the first attempt to find the floor fails, we try the other two points. The point at the right detects floor, so we use the height of the leftmost column of the slope tile:<br /><br /><img src="http://img689.imageshack.us/img689/1822/slope15.png" alt="Image" /> <img src="http://img687.imageshack.us/img687/4287/slope16.png" alt="Image" /><br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />This would then allow you to stand like this? <br /><br /><img src="http://img412.imageshack.us/img412/5494/standlikethis.png" alt="Image" /><br /><br />I don't like that.<br /></div><br />It's not ideal, but I like that much more than instant wall ejection. If the slope is too steep, you could just detect that and make the object slide down, preventing it from standing there.<br /><br />IMO, there is no perfect solution that can be used on slow 8-bit (and even 16-bit) CPUs. Every game I studied has its limitations and rules, none of them use completely arbitrary floors. As players we most likely never noticed those limitations, because they were well hidden.<br /><br />It would be foolish to think there is a perfect method that can be used on the NES. We should all be worrying about picking the method whose limitations don't interfere with our game mechanics and hide them as best as we can.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Mon Apr 26, 2010 10:45 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[UncleSporky]]></name></author>
<updated>2010-04-26T08:29:46-07:00</updated>
<published>2010-04-26T08:29:46-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6319&amp;p=60420#p60420</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6319&amp;p=60420#p60420"/>
<title type="html"><![CDATA[Collisions against sloped surfaces]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6319&amp;p=60420#p60420"><![CDATA[
I've been thinking about what the ideal method for this would be, if collision wasn't so resource intensive.  A lot of what you're talking about is with regards to how natural it looks, whether we're intersecting the ground, and not how the physics are behaving.<br /><br />I think in the most extreme situations, where the midpoint is off the slope but the character shouldn't fall yet, it would be ideal if we could detect this state and modify the sprite so it looks like we're still on the slope.  It shouldn't be too hard to detect since the back corner is still intersecting the slope tile.<br /><br />As a case study, I don't remember any parts of Kirby that have a slope that isn't connected to a normal block, but it's interesting to see how they did it.  They actually have different standing frames for two different "steepnesses" of slopes, a climbing animation for the steeper one, and it doesn't look too bad at transitions...<br /><br /><img src="http://img203.imageshack.us/img203/9610/sadventure3.png" alt="Image" /><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3438">UncleSporky</a> — Mon Apr 26, 2010 8:29 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Disch]]></name></author>
<updated>2010-04-26T07:40:09-07:00</updated>
<published>2010-04-26T07:40:09-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6319&amp;p=60413#p60413</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6319&amp;p=60413#p60413"/>
<title type="html"><![CDATA[Collisions against sloped surfaces]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6319&amp;p=60413#p60413"><![CDATA[
<div class="quotetitle">Kasumi wrote:</div><div class="quotecontent"><br />You check 15 points for collision if your character is 16 pixels wide? (You already checked one, of course)<br /></div><br /><br />Well you wouldn't check all 15 points individually.  Instead you'd just take the "highest" point that has an X position that puts it underneath the character.<br /><br />This is easier with linear slopes.  If you have tokumaru's slope system where each column can have its own height, then yeah it's not very practical.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=33">Disch</a> — Mon Apr 26, 2010 7:40 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Banshaku]]></name></author>
<updated>2010-04-26T06:06:02-07:00</updated>
<published>2010-04-26T06:06:02-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6319&amp;p=60408#p60408</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6319&amp;p=60408#p60408"/>
<title type="html"><![CDATA[Collisions against sloped surfaces]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6319&amp;p=60408#p60408"><![CDATA[
More or less on topic file searching for a software in my temp folder, I ended up on an a copy of Neotoxin, written 2004-02-15. I don't remember why I(?) wrote the date on it. <br /><br />The demo allowed you to beat some kind of boss. When you go later in the demo, there is some slope. In general the top of the slope contain a flat surface. The slope were handled very well in this demo.  When jumping on a slope the character was fine too.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3559">Banshaku</a> — Mon Apr 26, 2010 6:06 am</p><hr />
]]></content>
</entry>
</feed>