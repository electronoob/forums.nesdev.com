<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=12&amp;t=7738" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2011-05-13T08:51:33-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=12&amp;t=7738</id>
<entry>
<author><name><![CDATA[clueless]]></name></author>
<updated>2011-05-13T08:51:33-07:00</updated>
<published>2011-05-13T08:51:33-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7738&amp;p=78109#p78109</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7738&amp;p=78109#p78109"/>
<title type="html"><![CDATA[New SNES C Compiler]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7738&amp;p=78109#p78109"><![CDATA[
<div class="quotetitle">pcmantinker wrote:</div><div class="quotecontent"><br />Thanks for the pointers. I have finally finished my semester classes and finals so I should have some more time to work on the compiler. For the lexical analyzer, I'm using Flex and Bison with the ANSI C grammars specified here: <!-- m --><a class="postlink" href="http://www.quut.com/c/ANSI-C-grammar-y.html">http://www.quut.com/c/ANSI-C-grammar-y.html</a><!-- m --> and <!-- m --><a class="postlink" href="http://www.quut.com/c/ANSI-C-grammar-l-1998.html">http://www.quut.com/c/ANSI-C-grammar-l-1998.html</a><!-- m --><br /><br />Once I can get a pretty printer working, I will create a Google code repository so that people may check out the code. Then I will create the semantic analyzer to do type checking and syntax checking. Hopefully that phase will not take long.<br /></div><br /><br />flex and bison are ok (I've used them before twice), but I recommend at least investigating using the "lemon parser".  Its really neat:<br /><br /><a href="http://www.hwaci.com/sw/lemon/" class="postlink">http://www.hwaci.com/sw/lemon/</a><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3664">clueless</a> — Fri May 13, 2011 8:51 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[pcmantinker]]></name></author>
<updated>2011-05-13T07:29:12-07:00</updated>
<published>2011-05-13T07:29:12-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7738&amp;p=78105#p78105</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7738&amp;p=78105#p78105"/>
<title type="html"><![CDATA[New SNES C Compiler]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7738&amp;p=78105#p78105"><![CDATA[
Thanks for the pointers. I have finally finished my semester classes and finals so I should have some more time to work on the compiler. For the lexical analyzer, I'm using Flex and Bison with the ANSI C grammars specified here: <!-- m --><a class="postlink" href="http://www.quut.com/c/ANSI-C-grammar-y.html">http://www.quut.com/c/ANSI-C-grammar-y.html</a><!-- m --> and <!-- m --><a class="postlink" href="http://www.quut.com/c/ANSI-C-grammar-l-1998.html">http://www.quut.com/c/ANSI-C-grammar-l-1998.html</a><!-- m --><br /><br />Once I can get a pretty printer working, I will create a Google code repository so that people may check out the code. Then I will create the semantic analyzer to do type checking and syntax checking. Hopefully that phase will not take long.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3995">pcmantinker</a> — Fri May 13, 2011 7:29 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[mic_]]></name></author>
<updated>2011-05-10T23:08:00-07:00</updated>
<published>2011-05-10T23:08:00-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7738&amp;p=78033#p78033</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7738&amp;p=78033#p78033"/>
<title type="html"><![CDATA[New SNES C Compiler]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7738&amp;p=78033#p78033"><![CDATA[
<div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />The 65816 has the ability to shell out floating point operations to a coprocessor from what I understand<br /></div><br />I suppose it could if you had built a custom cart with an FPU. No SNES game out there does afaik. Fixed point was used by some of the SNES DSPs.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />I suppose we could store the low and hi byte in two registers while in 16 bit mode so 32 bit integers could be possible as well<br /></div><br />Only the accumulator can be used for arithmetic operations (besides INC/DEC) so you need to use a few zeropage variables for this.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />code optimizations<br /></div><br />Pattern optimizers aren't that complicated. Scan for pattern X, replace with shorter/faster pattern Y. I've already written one for use with tcc-816, which you can find <a href="http://jiggawatt.org/badc0de/optimore-816r3.zip" class="postlink">here</a>.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=1181">mic_</a> — Tue May 10, 2011 11:08 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[pcmantinker]]></name></author>
<updated>2011-05-10T15:39:22-07:00</updated>
<published>2011-05-10T15:39:22-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7738&amp;p=78012#p78012</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7738&amp;p=78012#p78012"/>
<title type="html"><![CDATA[New SNES C Compiler]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7738&amp;p=78012#p78012"><![CDATA[
Hi all,<br /><br />It's been a while since I've been to the forum, but I've finished my compiler construction class and really enjoyed building the compiler this semester. I'm thinking about building a C compiler for the SNES from scratch.  I know that I could use GCC as a base for the compiler, but the source code is a bit archaic. I'd like to make it as close to ANSI C as possible granted the functions are capable on the hardware. I understand things like floating point operations won't work without a math coprocessor. The 65816 has the ability to shell out floating point operations to a coprocessor from what I understand so it could be possible to add support for this later. Also, would it be possible to handle 32 bit integers since the SNES has 16 bit registers? I know that the 65816 can operate in 16 or 8 bit mode but I suppose we could store the low and hi byte in two registers while in 16 bit mode so 32 bit integers could be possible as well. As far as multiplication and division, I understand the SNES has hardware support for those. I remember reading that the CPU cycles required for hardware multiply and divide are not precisely known and thus can't be emulated perfectly. I'll look into implementing bit shifting where possible so that there can be code optimizations on multiplication and division.<br /><br />If I build all the necessary parts such as scanner, parser, semantic analyzer, escape analyzer, and code generation, would you guys be willing to help with code optimizations and or libraries for the SNES? I'll write the register allocator and liveness analyzer for the compiler as well, but I'm not as familiar with the SNES architecture as I am with the MIPS. Please let me know your thoughts. Thanks much.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3995">pcmantinker</a> — Tue May 10, 2011 3:39 pm</p><hr />
]]></content>
</entry>
</feed>