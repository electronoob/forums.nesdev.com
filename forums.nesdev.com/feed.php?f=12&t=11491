<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=12&amp;t=11491" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2014-08-05T03:40:30-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=12&amp;t=11491</id>
<entry>
<author><name><![CDATA[Ramsis]]></name></author>
<updated>2014-08-05T03:40:30-07:00</updated>
<published>2014-08-05T03:40:30-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11491&amp;p=132053#p132053</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11491&amp;p=132053#p132053"/>
<title type="html"><![CDATA[Re: HDMA in indirect continuous mode (4 bytes transfer) fail]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11491&amp;p=132053#p132053"><![CDATA[
Thanks, nocash, this indeed does the trick! <img src="http://forums.nesdev.com/images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /><br /><br /><s>So am I getting this right: There&#39;s a difference between absolute and indirect HDMA table format depending on whether &quot;continuous mode&quot; is used &#40;i.e., bit 7 of the line counter byte is set&#41;, because in absolute mode, I do have to list as many units as the line counter byte &#40;AND $7F&#41; specifies, correct?</s><br /><br />Edit: Got it now, forget the above. <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" /><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5345">Ramsis</a> — Tue Aug 05, 2014 3:40 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[nocash]]></name></author>
<updated>2014-08-05T02:28:42-07:00</updated>
<published>2014-08-05T02:28:42-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11491&amp;p=132052#p132052</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11491&amp;p=132052#p132052"/>
<title type="html"><![CDATA[Re: HDMA in indirect continuous mode (4 bytes transfer) fail]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11491&amp;p=132052#p132052"><![CDATA[
You have misunderstood the format of the table in indirect mode.<br />For each block, there is only one <strong>single</strong> pointer (to <strong>N</strong> units).<br />Not <strong>N</strong> pointers (to <strong>single</strong> units).<br />Ie. this should do it:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">SRC_HDMA_ColorGradient:<br />   .DB 112|$80   ; = $F0 = upper 112 playfield scanlines with &quot;continuous mode&quot; flag set<br />   .DW ARRAY_HDMA_BackgrPlayfield<br />   .DB 64|$80   ; = $C0 = lower 64 playfield scanlines with &quot;continuous mode&quot; flag set<br />   .DW ARRAY_HDMA_BackgrPlayfield+448<br />   .DB 48|$80   ; = $B0 = 48 textbox scanlines with &quot;continuous mode&quot; flag set<br />   .DW ARRAY_HDMA_BackgrTextBox<br />   .DB 0   ; end of HDMA table</div><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5211">nocash</a> — Tue Aug 05, 2014 2:28 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Ramsis]]></name></author>
<updated>2014-08-04T09:22:57-07:00</updated>
<published>2014-08-04T09:22:57-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11491&amp;p=132010#p132010</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11491&amp;p=132010#p132010"/>
<title type="html"><![CDATA[HDMA in indirect continuous mode (4 bytes transfer) fails]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11491&amp;p=132010#p132010"><![CDATA[
So I'm trying to devise a convenient HDMA implementation for a personal game project I'm working on. The idea is to use indirect HDMA mode for the main backdrop color gradient. The entries in the ROM-based HDMA table point to an array in the lower 8K of WRAM.<br /><br />The table itself is laid out like so:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">SRC_HDMA_ColorGradient:<br />   .DB 1               ; 176 scanlines for playfield, 48 for text box<br />   .DW ARRAY_HDMA_BackgrPlayfield<br />   .DB 1<br />   .DW ARRAY_HDMA_BackgrPlayfield+4<br />   .DB 1<br />   .DW ARRAY_HDMA_BackgrPlayfield+8<br />   .DB 1<br />   .DW ARRAY_HDMA_BackgrPlayfield+12<br />   .DB 1<br />   .DW ARRAY_HDMA_BackgrPlayfield+16<br />.<br />.<br />.<br /></div><br /><br />The HDMA channel used for this (2) is set up like this:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">; -------------------------- channel 2: main backdrop color<br />   lda #%01000011            ; transfer mode (4 bytes --&gt; $2121, $2121, $2122, $2122), indirect table mode<br />   sta $4320<br /><br />   lda #$21            ; PPU register $2121 (color index)<br />   sta $4321<br /><br />   ldx #SRC_HDMA_ColorGradient<br />   stx $4322<br /><br />   lda #:SRC_HDMA_ColorGradient<br />   sta $4324<br /><br />   lda #$7E            ; indirect HDMA CPU bus data address bank<br />   sta $4327<br /></div><br /><br />So far, so good. Works great. <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /><br /><img src="http://manuloewe.de/snestuff/projects/furryrpg_build_00170_1.png" alt="Image" /><br /><br /><br />Next, I'd like to switch to &quot;continuous&quot; HDMA mode for the sake of making the table more readable (by getting rid of all those <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">.DB 1</tt> directives).<br /><br />And this is what I get:<br /><br /><img src="http://manuloewe.de/snestuff/projects/furryrpg_build_00175.png" alt="Image" /><br /><br /><br />The new table looks like this:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">SRC_HDMA_ColorGradient:<br />   .DB 112|$80   ; = $F0 = upper 112 playfield scanlines with &quot;continuous mode&quot; flag set<br /><br />   .DW ARRAY_HDMA_BackgrPlayfield<br />   .DW ARRAY_HDMA_BackgrPlayfield+4<br />   .DW ARRAY_HDMA_BackgrPlayfield+8<br />   .DW ARRAY_HDMA_BackgrPlayfield+12<br />.<br />.<br />.<br />   .DW ARRAY_HDMA_BackgrPlayfield+444<br /><br />   .DB 64|$80   ; = $C0 = lower 64 playfield scanlines with &quot;continuous mode&quot; flag set<br /><br />   .DW ARRAY_HDMA_BackgrPlayfield+448<br />   .DW ARRAY_HDMA_BackgrPlayfield+452<br />   .DW ARRAY_HDMA_BackgrPlayfield+456<br />   .DW ARRAY_HDMA_BackgrPlayfield+460<br />.<br />.<br />.<br />   .DW ARRAY_HDMA_BackgrPlayfield+700<br /><br />   .DB 48|$80   ; = $B0 = 48 textbox scanlines with &quot;continuous mode&quot; flag set<br /><br />   .DW ARRAY_HDMA_BackgrTextBox<br />   .DW ARRAY_HDMA_BackgrTextBox+4<br />   .DW ARRAY_HDMA_BackgrTextBox+8<br />   .DW ARRAY_HDMA_BackgrTextBox+12<br />.<br />.<br />.<br />   .DW ARRAY_HDMA_BackgrTextBox+188<br /><br />   .DB 0   ; end of HDMA table<br /></div><br /><br />As you can see from the screenshot, it does process the first 112 scanlines as intended, only to go haywire then. Geiger's HDMA tracing reveals this:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">H-DMA&#91;2&#93; (3) 0x7E1022-&gt;0x2121 ind, Count: 112, Rep: no , V-LINE:   0 C19280<br />H-DMA&#91;2&#93; (3) 0x7E2A10-&gt;0x2121 ind, Count:  38, Rep: yes, V-LINE: 112 C19283<br />H-DMA&#91;2&#93; (3) 0x7E102E-&gt;0x2121 ind, Count:  16, Rep: yes, V-LINE: 150 C19286<br />H-DMA&#91;2&#93; (3) 0x7E3610-&gt;0x2121 ind, Count:  50, Rep: yes, V-LINE: 166 C19289<br />H-DMA&#91;2&#93; (3) 0x7E103A-&gt;0x2121 ind, Count:  16, Rep: yes, V-LINE: 216 C1928C</div><br /><br />Not only does the scanline count get messed up but WRAM data addresses as well. But how? And why? <img src="http://forums.nesdev.com/images/smilies/icon_question.gif" alt=":?:" title="Question" /> <br /><br />I already tried to change the implementation from indirect mode to absolute mode. Curiously enough, continuous mode with the new table above then worked just as expected!<br /><br />I've read all there is to read about HDMA, HDMA modes, and the HDMA table format, but couldn't find any clue about potential limits regarding the combination of modes and/or data unit lengths. Could this be a hardware limitation, or even a bug? Or what am I missing? Most importantly, why does it work either in absolute &quot;continuous&quot; (i.e., with the repeat flag set) mode <em>or</em> in indirect &quot;normal&quot; (repeat flag clear) mode, but not in indirect continuous mode? (BTW, it's not an emulator issue either, the same error occurs on Geiger's tracer, higan &quot;performance&quot;, and higan &quot;accuracy&quot;).<br /><br />Any helpful suggestions are highly appreciated. Thanks! <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /><br />Ramsis<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5345">Ramsis</a> — Mon Aug 04, 2014 9:22 am</p><hr />
]]></content>
</entry>
</feed>