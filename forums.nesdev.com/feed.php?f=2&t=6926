<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=2&amp;t=6926" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2010-09-02T04:48:41-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=2&amp;t=6926</id>
<entry>
<author><name><![CDATA[Dwedit]]></name></author>
<updated>2010-09-02T04:48:41-07:00</updated>
<published>2010-09-02T04:48:41-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6926&amp;p=67118#p67118</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6926&amp;p=67118#p67118"/>
<title type="html"><![CDATA[Bank Switching : something just occurred to me....]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6926&amp;p=67118#p67118"><![CDATA[
It's not about it crashing when it calls the sound code, the sound code bankswitch would set the MMC1 reset flag first.  It's the code that's running before NMI that had its bankswitch interupted, so it reads invalid data from the wrong bank.  And then it bankswitches again soon afterward, so there is little impact from the interrupted bankswitch, so the developers never noticed anything odd.<br /><br />If you want to see what goes on in a debugger, watch the Rockman 2 TAS.  The first exploitation happens near frame 19014.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=53">Dwedit</a> — Thu Sep 02, 2010 4:48 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2010-09-02T01:57:29-07:00</updated>
<published>2010-09-02T01:57:29-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6926&amp;p=67115#p67115</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6926&amp;p=67115#p67115"/>
<title type="html"><![CDATA[Bank Switching : something just occurred to me....]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6926&amp;p=67115#p67115"><![CDATA[
Are you sure this is the cause of the bug ? I think it's extremely unlikely a bug like this (MMC1 write interupts another) don't result in a crash. For example, the main thread was banskwtiching some PRG bank, then NMI occurs, and inside the NMI they bankswitch the sound PRG bank to call the sound engine. Unfortunately, this fails, as the 1st write won't be the 1st write, etc... so any other random bank is switched, and the game will crash when calling the sound code.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Thu Sep 02, 2010 1:57 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Dwedit]]></name></author>
<updated>2010-09-01T22:27:31-07:00</updated>
<published>2010-09-01T22:27:31-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6926&amp;p=67112#p67112</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6926&amp;p=67112#p67112"/>
<title type="html"><![CDATA[Bank Switching : something just occurred to me....]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6926&amp;p=67112#p67112"><![CDATA[
Megaman 2 has some infamous bugs that resulted from getting enough objects on the screen to cause lag, then having a bankswitch routine getting interrupted.  (Megaman 2 is MMC1)<br />So at one point, it reads some garbage information on the wrong bank to determine where you go when you reach the edge of the screen.  You can see the bug exploited in the TAS.<br />This is probably also the cause of the bug that takes you from Air Man to Dr. Wily's Stage #2.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=53">Dwedit</a> — Wed Sep 01, 2010 10:27 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Celius]]></name></author>
<updated>2010-09-01T22:05:53-07:00</updated>
<published>2010-09-01T22:05:53-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6926&amp;p=67110#p67110</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6926&amp;p=67110#p67110"/>
<title type="html"><![CDATA[Bank Switching : something just occurred to me....]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6926&amp;p=67110#p67110"><![CDATA[
Yeah, if the bankswitch requires multiple writes to registers (which it usually does), definitely save the value like so:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">;main thread<br />lda #$xx<br />sta bankswitchreg1_saver     ;Very important to write to the virtual register first!<br />sta $bankswitchreg1<br />lda #$xx<br />sta bankswitchreg2_saver<br />sta $bankswitchreg2<br />....<br /><br />;NMI<br />;blah code<br />lda bankswitchreg1_saver<br />sta $bankswitchreg1<br />lda bankswitchreg2_saver<br />sta $bankswitchreg2<br />rti<br /></div><br /><br />This solution may not work for all mappers like MMC1 which requires writes to the same register, but I'm pretty sure for things like MMC3 bankswitching this works great. And like I said in the comment above, ALWAYS write to the virtual register FIRST, because you restore the actual register to the value of the virtual register at the end of the interrupt. If you wrote to the actual register first, and there was an interrupt before you wrote to the virtual register, you would restore the actual one to whatever value happens to be in the virtual one; not necessarily the intended value (which could be catastrophic).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=138">Celius</a> — Wed Sep 01, 2010 10:05 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[3gengames]]></name></author>
<updated>2010-09-01T19:11:14-07:00</updated>
<published>2010-09-01T19:11:14-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6926&amp;p=67106#p67106</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6926&amp;p=67106#p67106"/>
<title type="html"><![CDATA[Bank Switching : something just occurred to me....]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6926&amp;p=67106#p67106"><![CDATA[
Okay I see. Thanks. <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /><br /><br />A little to complex for me since I doubt I'll ever do something that close to the cycle count, but good information to poses! <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" /><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4311">3gengames</a> — Wed Sep 01, 2010 7:11 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2010-09-01T14:32:11-07:00</updated>
<published>2010-09-01T14:32:11-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6926&amp;p=67092#p67092</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6926&amp;p=67092#p67092"/>
<title type="html"><![CDATA[Bank Switching : something just occurred to me....]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6926&amp;p=67092#p67092"><![CDATA[
So, use tokumaru's "never disable NMI" approach if your NMI timing is critical. Use the <a href="http://nesdev.com/bbs/viewtopic.php?p=31137#31137" class="postlink">disable NMI momentarily</a> approach if your NMI can be delayed by 50 cycles or so without problem.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Wed Sep 01, 2010 2:32 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2010-09-01T13:57:18-07:00</updated>
<published>2010-09-01T13:57:18-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6926&amp;p=67086#p67086</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6926&amp;p=67086#p67086"/>
<title type="html"><![CDATA[Bank Switching : something just occurred to me....]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6926&amp;p=67086#p67086"><![CDATA[
<div class="quotetitle">65024U wrote:</div><div class="quotecontent"><br />So....if your NMI reads the flag, just let it set another flag and RTI and when the bankswitiching is done, tell your program to continue the NMI?<br /></div><br />That's not what I suggested, but is another possible approach if you can afford to delay your NMI by several cycles (some programs can't because the NMI is timed for raster effects from the top of the screen).<br /><br />What I suggested was: Let the NMI interrupt the bankswitching procedure and do whatever it wants, including bankswitches (but not using the same function used by the main thread). Once it's done, check the flag to see if a bankswitching procedure was interrupted, in which case it should be restarted. That would involve hijacking the return address on the stack.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Wed Sep 01, 2010 1:57 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[3gengames]]></name></author>
<updated>2010-09-01T12:54:11-07:00</updated>
<published>2010-09-01T12:54:11-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6926&amp;p=67080#p67080</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6926&amp;p=67080#p67080"/>
<title type="html"><![CDATA[Bank Switching : something just occurred to me....]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6926&amp;p=67080#p67080"><![CDATA[
<div class="quotetitle">tokumaru wrote:</div><div class="quotecontent"><br />We had some discussions about this in the past. Here's one <a href="http://nesdev.com/bbs/viewtopic.php?t=3924" class="postlink">thread</a> I could find.<br /><br />I believe that the general solution that would work for all mappers would be to bankswitch exclusively through a function, and this function would use a flag to indicate that bankswitching is in process, after saving a copy of the command it's supposed to perform. If your interrupt detects it has interrupted a bankswitching operation, it executes the command before returning and skips the rest of the bankswitching function when returning.<br /></div><br /><br /><br />So....if your NMI reads the flag, just let it set another flag and RTI and when the bankswitiching is done, tell your program to continue the NMI?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4311">3gengames</a> — Wed Sep 01, 2010 12:54 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2010-09-01T09:57:19-07:00</updated>
<published>2010-09-01T09:57:19-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6926&amp;p=67073#p67073</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6926&amp;p=67073#p67073"/>
<title type="html"><![CDATA[Bank Switching : something just occurred to me....]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6926&amp;p=67073#p67073"><![CDATA[
We had some discussions about this in the past. Here's one <a href="http://nesdev.com/bbs/viewtopic.php?t=3924" class="postlink">thread</a> I could find.<br /><br />I believe that the general solution that would work for all mappers would be to bankswitch exclusively through a function, and this function would use a flag to indicate that bankswitching is in process, after saving a copy of the command it's supposed to perform. If your interrupt detects it has interrupted a bankswitching operation, it executes the command before returning and skips the rest of the bankswitching function when returning.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Wed Sep 01, 2010 9:57 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[clueless]]></name></author>
<updated>2010-09-01T07:47:50-07:00</updated>
<published>2010-09-01T07:47:50-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6926&amp;p=67067#p67067</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6926&amp;p=67067#p67067"/>
<title type="html"><![CDATA[Bank Switching : something just occurred to me....]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6926&amp;p=67067#p67067"><![CDATA[
I am using a MMC1 design, with $c000-$ffff fixed and $8000-$bfff switched.  I store the bank number at $bfff in each bank, so at any time I can know which bank is active by just reading it directly from $bfff.<br /><br />Maybe this approach would be helpful to you?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3664">clueless</a> — Wed Sep 01, 2010 7:47 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2010-09-01T07:16:15-07:00</updated>
<published>2010-09-01T07:16:15-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6926&amp;p=67065#p67065</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6926&amp;p=67065#p67065"/>
<title type="html"><![CDATA[Bank Switching : something just occurred to me....]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6926&amp;p=67065#p67065"><![CDATA[
The NMI handler can't easily save and restore the state of the MMC1's 5-bit shift register. Ideally, on a mapper with a serial port, the NMI handler shouldn't write to the mapper at all, and it should be located in a fixed bank.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Wed Sep 01, 2010 7:16 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Dwedit]]></name></author>
<updated>2010-09-01T07:10:09-07:00</updated>
<published>2010-09-01T07:10:09-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6926&amp;p=67063#p67063</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6926&amp;p=67063#p67063"/>
<title type="html"><![CDATA[Bank Switching : something just occurred to me....]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6926&amp;p=67063#p67063"><![CDATA[
When you bankswitch PRG, write the bank number to a variable in RAM first, then write the bank to the mapper.  That way you can't go wrong.<br />Also, interrupts and the like should push the old bank number, then restore it when returning.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=53">Dwedit</a> — Wed Sep 01, 2010 7:10 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[neilbaldwin]]></name></author>
<updated>2010-09-01T06:45:58-07:00</updated>
<published>2010-09-01T06:45:58-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6926&amp;p=67061#p67061</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6926&amp;p=67061#p67061"/>
<title type="html"><![CDATA[Bank Switching : something just occurred to me....]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6926&amp;p=67061#p67061"><![CDATA[
Getting a NMI in the middle of your bank switching code and switching banks inside the NMI: would that be a problem?<br /><br />My NMI code always saves the current bank number and restores it before RTI but I just wondered if you were really unlucky with the NMI timing could it screw up the bank switch that was in progress before the interrupt occurred?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3896">neilbaldwin</a> — Wed Sep 01, 2010 6:45 am</p><hr />
]]></content>
</entry>
</feed>