<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Advice for artifact free 4-way scrolling</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Advice for artifact free 4-way scrolling</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=17229">http://forums.nesdev.com/viewtopic.php?f=2&amp;t=17229</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>7</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>bleubleu</b> [ Wed Apr 04, 2018 7:44 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Advice for artifact free 4-way scrolling</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Hi.<br /><br />I'm trying to implement clean 4-way scrolling. Jurassic Park is a good example of this working really well. Im planning to also hide the top/bottom 8 pixels, but that's note done yet. <br /><br />I'm getting really close to a bug-free version of it working, but now my code has become kind of a mess. <br /><br />When I started I was hoping for something clean and symmetric, but since then many things crept in:<br /><br /><ul><li> Because of mirroring, vertical and horizontal scrolling have to be treated quite differently, so that almost double the code right off the bat. </li><li> Crossing the nametable boundary (or wraping) adds some complexity.</li><li> Having 16x16 metatiles, but scrolling by adding 8x8 tiles at a time requires the code to properly handle coming from the right/left, top/bottom and adding the individual tiles. Also dealing with the possibility of single tiles on the corners.</li><li> Using the upper left corner as a reference point makes going right/left, up/down ever so slightly different adding more tests/branches. </li><li> Attributes are also super annoying to manage.</li></ul><br />Anyone here managed to implement this while keeping the code relatively compact and clean? If so, do you have any advice on what you did you keep this as painless as possible.<br /><br />-Mat

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dwedit</b> [ Wed Apr 04, 2018 8:00 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Advice for artifact free 4-way scrolling</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />You will need separate counters for Camera Y position and Nametable Y position to keep things simple.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Wed Apr 04, 2018 9:14 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Advice for artifact free 4-way scrolling</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">bleubleu wrote:</div><div class="quotecontent">I'm trying to implement clean 4-way scrolling. Jurassic Park is a good example of this working really well. Im planning to also hide the top/bottom 8 pixels, but that's note done yet.</div><br />Do note that Jurassic Park blanks scanlines by using blank tiles, rather than forced blanking, so it can still use the MMC3's scanline counter normally. If you have mapper IRQs at your disposal, this is indeed a pretty good solution, but if you don't, timing the blank scanlines right may be harder than it sounds, specially at the bottom of the screen.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Because of mirroring, vertical and horizontal scrolling have to be treated quite differently, so that almost double the code right off the bat.</div><br />This gets better if you use 4-screen instead.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Crossing the nametable boundary (or wraping) adds some complexity.</div><br />Having your row/column updates always be composed of 2 parts (even if the length of one of those parts is 0) will make this the norm, instead of an exception.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Having 16x16 metatiles, but scrolling by adding 8x8 tiles at a time requires the code to properly handle coming from the right/left, top/bottom and adding the individual tiles. Also dealing with the possibility of single tiles on the corners.</div><br />I update whole metatiles at once, so I don't really have a problem with this. If you're updating only half metatiles because of VRAM bandwidth concerns, I suggest you still do things like if you were updating entire metatiles (i.e. decode entire metatiles from the level map and buffer the tiles in RAM), but upload them to VRAM one half at a time on consecutive vblanks. You may need to pick which half goes first depending on the direction the camera is moving, but that should be easy. I don't really get what the problem with the corners is.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Using the upper left corner as a reference point makes going right/left, up/down ever so slightly different adding more tests/branches.</div><br />You just need to add the camera's dimensions to the respective axes and handle wrapping, no big deal. Or keep a separate set of coordinates for the bottom right corner that you update in sync with the top left, so you can just mix and match coordinates as needed depending on where the new tiles are supposed to go.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Attributes are also super annoying to manage.</div><br />Yup. I usually keep a mirror of the attribute tables in RAM, which I modify in place when necessary, so that later I can just copy entire rows/columns of bytes to VRAM.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Anyone here managed to implement this while keeping the code relatively compact and clean?</div><br />I've done it a couple of times for unfinished projects, and the things you mentioned do indeed have to be actively taken care of. The NES wasn't really designed for free scrolling like this, so things like the attribute tables and mirroring will definitely get in the way if you don't design everything around them from the start.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">If so, do you have any advice on what you did you keep this as painless as possible.</div><br />If you can, ditch the mirroring and go with 4-screen, that'll definitely make things easier. I made the switch to 4-screen in my most recent scrolling engine and I don't regret it. It may seem like the cheap way out, but if you're using CHR-RAM in a discrete logic mapper, 4-screen is basically free since you can't even buy 8KB RAM chips anymore, so you can easily wire the cartridge to use the excess CHR-RAM as NT RAM.<br /><br />Dwedit's advice is good too. Keeping different sets of Y coordinates (one relative to the level and another relative to the name tables) and updating them in sync will save you from having to convert back and forth between them, which is a pain.<br /><br />Another thing worth mentioning is that there's another technique that can be used to achieve glitch-free 8-way scrolling on the NES, particularly useful if you don't have mapper IRQs at your disposal: use horizontal mirroring and have the PPU hide the leftmost 8 pixels of the screen, while sprites are used to hide the rightmost 8 pixels. Alfred Chicken and Felix the Cat do this. The main drawbacks are the amount of sprites used and the fact that you only get to place 7 more sprites worth of actual game objects per scanline before flickering begins. These 2 games are pretty cool though... Felix the Cat even manages to display pretty large sprites, like vehicles Felix can get in, despite having lost 1 sprite per scanline.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Thu Apr 05, 2018 1:35 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Advice for artifact free 4-way scrolling</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />It does get pretty messy no matter what you do.<br /><br />Here's my Lua prototype implementation of what I was planning to put in my engine: <!-- m --><a class="postlink" href="https://github.com/fo-fo/ngin/blob/master/src/ngin/map-scroller.lua">https://github.com/fo-fo/ngin/blob/mast ... roller.lua</a><!-- m -->. It might give you some ideas.<br /><br />It's completely generic, supporting any mirroring mode. It can scroll 8 pixels at a time, but multiple calls to the function can be made to scroll more pixels per frame. The API basically consists of <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">scrollHorizontal&#40;&#41;</tt> and  <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">scrollVertical&#40;&#41;</tt>. Those then call <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">scroll&#40;&#41;</tt> which is sort of a generic routine that can scroll in any direction. Then <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">scroll&#40;&#41;</tt> calls <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">update&#40;&#41;</tt> and <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">updateAttributes&#40;&#41;</tt> to fill the PPU update buffer. There are some simplifications for purposes of prototyping, though. For example, map data is read by &quot;random access&quot; (<tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">MapData.readTile&#40; mapX, mapY &#41;</tt>). In an optimized implementation you would want to avoid recalculating the map data address all the time (but this, too, can get tricky if you implement stuff like metatiles in metatiles...)<br /><br />If you can, I'd suggest using macros to write the code for just a single scroll direction (e.g., to the right), and then expand that macro for all 4 scroll directions. It might turn into a bit of an if/else mess, but it's still better than duplicating a ton of code. (Just a fair warning: it's very easy to make oversimplifications in the code when considering only one scroll direction...)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>FrankenGraphics</b> [ Thu Apr 05, 2018 2:36 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Advice for artifact free 4-way scrolling</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />It has sort of already been mentioned but conditionally  updating 2 rows and 2 columns at any time the NT:s need to be overwritten helps with the attribute problem

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Thu Apr 05, 2018 4:12 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Advice for artifact free 4-way scrolling</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">thefox wrote:</div><div class="quotecontent">It does get pretty messy no matter what you do.</div><br />That. I couldn't have said it better.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Thu Apr 05, 2018 7:09 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Advice for artifact free 4-way scrolling</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Just plan well from the beginning and it isn't so bad, specially if you use 4-screen.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>gauauu</b> [ Thu Apr 05, 2018 7:10 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Advice for artifact free 4-way scrolling</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">If you can, ditch the mirroring and go with 4-screen, that'll definitely make things easier.</div><br /><br />That was going to be my advice also. The other thing that can make things easier (in some ways) is using 32x32 metatiles. That way you can write an entire attribute byte when you draw instead of having to mirror attribute ram or read-then-write it.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Thu Apr 05, 2018 7:18 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Advice for artifact free 4-way scrolling</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">This gets better if you use 4-screen instead.<br /></div><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Just plan well from the beginning and it isn't so bad, specially if you use 4-screen.</div><br />If for some reason you give any care at developing a game with the same limitations as actual games were developed in the NES' life, do not use &quot;4-screen&quot; unless you absolutely must, as only 3 games did that, period. RAM was expensive back then and wasting it just for ease of coding was unrealistic.<br /><br />Now if you don't care, then go ahead and use 4-screen, then it sounds like it'd be much easier but it'd feel like cheating.<br /><br />For &quot;perfect&quot; scrolling with no actifacts you need to blank at least the top 8 scanlines (if using 8x8 sprites), or even the top 16 scanlines (when using 8x16 sprites) in order to avoid sprite pop-up when scrolling vertically. For that reason you'll need to mess with timing and PPU/mapper registers mid-frame for any clean vertical scrolling. So the only con of using vertical mirroring instead of 4-screen is that you need to blank 16 scanlines, and 8 is not an option anymore. (Technically 15 would be enough when using 8x16 sprites, but that doesn't make a great difference).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Thu Apr 05, 2018 7:20 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Advice for artifact free 4-way scrolling</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">gauauu wrote:</div><div class="quotecontent">The other thing that can make things easier (in some ways) is using 32x32 metatiles. That way you can write an entire attribute byte when you draw instead of having to mirror attribute ram or read-then-write it.</div><br />Except that every other screen, vertically, is misaligned with the attribute grid due to name tables being 30 tiles (7.5 attribute bytes) tall. Unless you &quot;cheat&quot; and treat the last row of each screen of the level map as non-existent, simplifying rendering but complicating collision detection.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Thu Apr 05, 2018 7:35 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Advice for artifact free 4-way scrolling</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">RAM was expensive back then and wasting it just for ease of coding was unrealistic.</div><br />Tons of games packed an extra 8KB of WRAM for &quot;ease of coding&quot; though.<br /><br />Some NES programmers nowadays like to role-play and pretend they are in the 80's, so they won't do things that weren't commonly done back then (they'll hardly give up modern emulators, debuggers and tools though), even if they're cheap/trivial today.<br /><br />I prefer to think that as technology advanced, the way things were done changed during the years the NES was active. Hardware got cheaper, tools got better, and so on, and it's only natural that development happening after that time continues to change. Each developer will have a different opinion on what's cheating and what's not.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Thu Apr 05, 2018 7:37 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Advice for artifact free 4-way scrolling</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">Except that every other screen, vertically, is misaligned with the attribute grid due to name tables being 30 tiles (7.5 attribute bytes) tall. Unless you &quot;cheat&quot; and treat the last row of each screen of the level map as non-existent, simplifying rendering but complicating collision detection.</div><br />Even then, you can work with attribute nybbles of 4x2 tiles instead of having to work with quantities of 2-bit at a time; this is still complicated but less than working with entirely 16x16 metatiles.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I prefer to think that as technology advanced, the way things were done changed during the years the NES was active. Hardware got cheaper, tools got better, and so on, and it's only natural that development happening after that time continues to change. Each developer will have a different opinion on what's cheating and what's not.</div><br />In this case, why limit yourself to 4 screens ? You can just put enough RAM so that the entiere level is decoded to VRAM at once, and nametables are just bankswitched in and out as the player scrolls. This makes a lot of sense.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>gauauu</b> [ Thu Apr 05, 2018 7:43 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Advice for artifact free 4-way scrolling</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent"><div class="quotetitle">gauauu wrote:</div><div class="quotecontent">The other thing that can make things easier (in some ways) is using 32x32 metatiles. That way you can write an entire attribute byte when you draw instead of having to mirror attribute ram or read-then-write it.</div><br />Except that every other screen, vertically, is misaligned with the attribute grid due to name tables being 30 tiles (7.5 attribute bytes) tall. Unless you &quot;cheat&quot; and treat the last row of each screen of the level map as non-existent, simplifying rendering but complicating collision detection.</div><br /><br />That's absolutely true. Which is why I qualified the &quot;some ways&quot; -- attributes are easier. Other factors become issues instead.<br /><br />(I &quot;cheat&quot; in my game, and skip the last 16 pixels of each room. It does complicate things in other spots)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Thu Apr 05, 2018 7:53 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Advice for artifact free 4-way scrolling</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">You can just put enough RAM so that the entiere level is decoded to VRAM at once, and nametables are just bankswitched in and out as the player scrolls.</div><br />I wouldn't do this myself, but if someone decided that this was worth the trouble of creating a new mapper (including modifying emulators for testing), I wouldn't think this was a bad idea. It's pretty cool, actually.<br /><br />Like I said, everyone draws the line somewhere. Creating mappers is a little beyond my skillset, so I'd rather use what's readily available, but I won't restrict myself to the configurations that were common because that's supposedly more &quot;authentic&quot;. We're not even talking about something new here, 4-screen WAS used back then, just not by many games.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Thu Apr 05, 2018 8:02 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Advice for artifact free 4-way scrolling</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent"><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">You can just put enough RAM so that the entiere level is decoded to VRAM at once, and nametables are just bankswitched in and out as the player scrolls.</div><br />I wouldn't do this myself, but if someone decided that this was worth the trouble of creating a new mapper (including modifying emulators for testing), I wouldn't think this was a bad idea. It's pretty cool, actually.</div><br />It's a fun idea for sure... could even be prototyped on PowerPak with its 512 KB PPU-mappable RAM.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>7</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>