<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Do we need new tutorials?</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Do we need new tutorials?</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=1513">http://forums.nesdev.com/viewtopic.php?f=2&amp;t=1513</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Mon May 15, 2006 9:42 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">From the <a href="http://nesdevwiki.ath.cx/index.php/NES_PPU" class="postlink">PPU page in the new wiki</a>: "Most games access this register through $4014 instead."</div>
<br />The wiki definitely isn't a tutorial, and old tutorials doesn't point to the wiki.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Mon May 15, 2006 12:37 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Then do we need some new tutorials that use the wiki as a reference? Or would it be better to modify the old tutorials?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Mon May 15, 2006 2:18 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />What we need are people who are willing to get together and discuss designs for new tutorials <em>without</em> hastily throwing them together. Not some kind of random posting to a Wiki, actual English communication where all aspects of the tutorial design are discussed and approaches proposed. After a while a general approach to tutorials would emerge, with outlines for each tutorial. A more coherent strategy for documentation would also come of this.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Mon May 15, 2006 3:51 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />All of the first few tutorials will use NROM-128 with the same CHR ROM.
<br />
<br /><strong>Step 1:</strong> Getting ca65 set up
<br />topics: Command line, PATH, batch files, invoking CA65 and LD65
<br />program: Coin (plays a Game Boy style da-ding)
<br />
<br /><strong>Step 2:</strong> CPU 1
<br />topics: zero page, PPU NMI, tone generators, some instructions, iNES header
<br />program: Coin explained
<br />
<br /><strong>Step 3:</strong> CPU 2
<br />topics: absolute indexed addressing, looping
<br />program: Major Scale
<br />
<br /><strong>Step 4:</strong> PPU 1
<br />topics: CHR ROM, nametables, palette, turning rendering off and on
<br />program: Hello World
<br />
<br /><strong>Step 5:</strong> PPU 2
<br />topics: (zp),y addressing, attribute tables
<br />program: Scene Viewer
<br />
<br /><strong>Step 6:</strong> Sprites
<br />topics: OAM ($2003/$4014), bankswitching with PPUCTRL ($2000)
<br />program: Walk Cycle
<br />
<br /><strong>Step 7:</strong> Control
<br />topics: reading the controller, scrolling, mirroring
<br />program: Walk Cycle with horizontal scrolling
<br />
<br />Anything look out of order so far? Is the approach of teaching the CPU and PPU in parallel a bad idea?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Disch</b> [ Mon May 15, 2006 8:42 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Part of the problem is people coming in without any prior programming experience.  Those of us who came to nesdev FROM somewhere else didn't have much difficulty catching on because we pretty much already had the idea.  What makes learning the NES as your first system especially hard is trying to swallow both its cryptic method of graphics programming, on top of learning how to use X assembler, on top of learning a new assembly language, on top of learning basic programming fundamentals.
<br />
<br />There is no way in hell anyone with no prior programming experience will be able to comprehensively write a program to play a major scale on the NES by the 3rd lesson.  If they make it that far, they'll pretty much have skimmed over (but not really absorbed) the material, and copy/pasted the code into their assembler.  That's not really that much help.  Not that I'm knocking your idea tepples, I'm just making a point.  I didn't want to name names, but I see Ninetendo struggling to swallow everything NES-related in one go when he has no prior experience, and it's apparent that he's having a difficult time.  I don't think that's because of lack of tutorials... I think it's because he's trying to learn too much at once.
<br />
<br />To really get a ball rolling on this, the first thing to do is figure out where on the experience totem pole we want to focus on.  There's no way we can make a tutorial that will work for everyone, we have to figure out who we're targetting first.  If we assume the person reading the tutorial understand X criteria, we can more effectively create a tutorial they'll have an easier time following.  And maybe even later, we can write tutorials covering X for those who don't already understand it.  For example, we might assume the reader already understands 6502, and then we can just focus on how to operate the NES.  Then later (or even before), we could make a tutorial which covers just 6502 and nothing really NES related.  (Note I'm not really suggesting we break it up like this -- this is just a loose idea)
<br />
<br />
<br />An all-in-one shot is very difficult to do.  Trying to teach 6502 alongside the back-asswards restrictions the NES imposes is rough.  And if we also have to explain what a variable is, how labels work, how program execution flows (what code will execute when), and all that fundamental stuff -- there's just no way it can really be done effectively.
<br />
<br />
<br />I definately feel... before anything NES-specific is exposed to the reader, we assume they have a basic (but comprehensive) understanding of 6502.  I'm not saying they have to be 6502 gurus or anything -- but if we tell them stuff like "write blah to $4014" or something, they should know what we mean and how to do it.  If we're talking about NES stuff, we shouldn't have to explain what 6502 instructions do... or even how addressing modes work.  We might go over how certain addressing modes can be effectively applied -- but we shouldn't have to explain them in detail -- they should already have the jist of it.
<br />
<br />and before they try to pick up 6502, we should assume they have basic programming fundamentals down.  What a variable is and how to use them.  How loops work and how to use them.  Subroutines... program flow... etc.
<br />
<br />That's my idea anyway.
<br />
<br />
<br />So the question is...  who exactly are we targetting?  Do you think we should cater to people without any prior experience?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Mon May 15, 2006 9:50 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I was planning on targeting users with some experience programming in C. Asking people to learn 6502 assembly on some other platform first isn't all that easy because "some other platform" isn't well standardized. A lot of people don't own an old 8-bit computer such as a C=64 or an Apple II (and thus have no way of dumping the computer's BIOS for use in an emulator).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Lucky</b> [ Mon May 15, 2006 9:51 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Disch wrote:</div><div class="quotecontent">Part of the problem is people coming in without any prior programming experience.  Those of us who came to nesdev FROM somewhere else didn't have much difficulty catching on because we pretty much already had the idea.  What makes learning the NES as your first system especially hard is trying to swallow both its cryptic method of graphics programming, on top of learning how to use X assembler, on top of learning a new assembly language, on top of learning basic programming fundamentals.</div>
<br />
<br />Very well said.  Meandering through some old posts I saw somebody complain that their assembler "threw up a black screen and disappeared", implying they had no knowledge of DOS.  I thought about this a lot last night since I'm interested in a tutorial, and came up with the same problem that Disch mentioned.  Forget Assembly, as days go by more and more people don't even know what the command prompt is.  Where do the tutorials end?
<br />
<br />In previous experience trying to learn new computer related things, I ran into this very problem:  "Before you can do this, you have to learn this!"  Then I'd get referred to some other person's tutorial (and a missing link to it), which was vaguely related to present subject.  The same can be said for here...people have mentioned that the C64 guide is probably the best tutorial for 6502 out there, but yet...what do you use it with if you don't have a C64?  Of course the answer is then to get a 6502 simulator/emulator/whatever, but...how do you use that?  (I'm not saying I don't know how to use these things, but I'm referring to other readers).
<br />
<br />I took a look at the C64 6502 tutorial, and it really is great.  However as stated. this method sends the potential tutorial reader on a wild goose chase to search for a different software package (which they may or may not find), attempt to learn the software before even touching the tutorial, and then try to understand why certain parts of the tutorial may not apply to the simulator they are running stuff on.
<br />
<br />My vote for prerequisite would be to attempt to write the book for somebody who has no prior programming experience.  I doubt that we could write something so gracefully, but with that goal in mind, the tutorial would DEFINITELY be readable by somebody with some programming experience.  Write it as simple and as slow as possible!  Who cares if the reader has already programmed and knows what a variable is?  They will breathe a sigh of relief and be more confident as they progress through introductory chapters, ready to take on the harder stuff.
<br />
<br />Bah, I'm writing too much.  My opinion (if it matters much here) would be to....
<br />
<br />Have a complete compendium from binary/hex to 6502 to NES, all in one.  No separate tutorials spanning different text files that will get separated via the net, but one file.
<br />
<br />Furthermore, have the book have side sections supporting NesDev's recommended software suites, OR just go all out and design the entire document around the tools that should be used.  It would be tough to decide which tools/assemblers/simulators/emulators to use in the book, but would alleviate any extra confusion that the tutorial would otherwise create.  For example, right now I'm using NesAsm, but I've heard very good reasons not to use it.  That's one more notch into my confusion bank, tripping me up on the way to programming the NES.  If I could read an ultimate tutorial that sais "USE THIS EXACT SOFTWARE PACKAGE" and possibly even include it in a zip file with it (with the author's consent), then I would be stoked.
<br />
<br />My vote (based off of reading opinions here and my own experience) would be to write the 6502 section using the "6502 Macroassembler &amp; Simulator" by Michal Kowalski.  Any opposed?
<br />
<br />Even more to mention...what type of file format to use?  A simple text file would be great, but what about pictures and diagrams?  Perhaps PDF or (gulp) MSWord format?
<br />
<br />I still suck at the NES, and I moderately suck at the 6502, but I would be really excited to start a 6502 section of the tutorial.  Having the C64 guide as a side reference, it would be a great opportunity to filter out the good and bad, improve my own skills, and write an up to date document.  At the very least it would allow me to contribute a little to a subject I know nothing about.  What do you think?
<br />
<br />Of course on the contrary, I definitely don't want to start on a defunct incomplete NES tutorial that is nothing more than a 6502 reference.  Who else is excited about this?
<br />
<br />Bah screw it, I am starting tonight on the 6502 stuff.  The worst that can happen is that it gets rejected by tommorrow and I lose a couple of hours of writing.  I need the practice anyway.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Lucky</b> [ Mon May 15, 2006 9:56 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">blargg wrote:</div><div class="quotecontent">What we need are people who are willing to get together and discuss designs for new tutorials <em>without</em> hastily throwing them together. Not some kind of random posting to a Wiki, actual English communication where all aspects of the tutorial design are discussed and approaches proposed. After a while a general approach to tutorials would emerge, with outlines for each tutorial. A more coherent strategy for documentation would also come of this.</div>
<br />
<br />Okay so after getting overtly excited about starting right away, I reread this and slowed myself down.  Tonight I will start on basic concepts and design for a 6502 tutorial, and propose them later rather than writing immediately.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Mon May 15, 2006 9:59 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I'd like to see what you can do as for a 6502 tutorial from the ground up. Most of the 6502 tutorials that I've read assume knowledge of the BASIC interpreter that was shipped with the same machine, as they're geared toward developing subroutines for BASIC programs, not pure asm programs.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Tue May 16, 2006 9:36 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Personally, I just knew a bit of basic with my C64 and Visual Basic before I learned 6502. I had no other programming knownledge, and I had no trouble  learning how 6502 works and how to write routines for it at all. I didn't got any problems for the NES graphics thanks to Nesticle, that show pattern tables, palette, name tables, etc...
<br />However, I got a lot of problems with how to structure my code to get easy handling to separate NMI code and non-NMI code (game loop). At the begining I was always trying to do everything in the NMI routine and nothing out of the NMI routine, as many demoes did show. However, that was a bad idea, and that lack of help to structure my code did slow me a lot while learning how to programm the NES.
<br />Another thing that slowed me a lot is that I didn't understand the fact that the VBlank is short, and that then the frame continues while my code is running. Before, in my mind, I just had infinite time to code what I want between frames and to update as much PPU stuff as I want. Well, maybe not infinite, but I was just really thinking that the CPU was much faster than the PPU. It was just logical to me.
<br />
<br />Now, I'm experienced and it is hard to impossible for me to revert in the skin of a newbie and to think about what would be good method to teach me things. I also tend to learn things easily when they interest me, even if they are complicated. For that reason, I also suck to explain things to people that have trouble to undertand things, even when they want to learn, because I think they play stupid. In other words, I'd be a very bad teacher.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>No Carrier</b> [ Tue May 16, 2006 4:39 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Has this link been mentioned for 6502 information? It might help with the non-NES 6502 tutorials..
<br />
<br /><!-- m --><a class="postlink" href="http://www.westerndesigncenter.com/wdc/datasheets/Programmanual.pdf">http://www.westerndesigncenter.com/wdc/ ... manual.pdf</a><!-- m -->
<br />
<br />NC

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>