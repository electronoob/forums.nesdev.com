<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=2&amp;t=5443" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2009-07-29T10:46:39-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=2&amp;t=5443</id>
<entry>
<author><name><![CDATA[Celius]]></name></author>
<updated>2009-07-29T10:46:39-07:00</updated>
<published>2009-07-29T10:46:39-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5443&amp;p=49296#p49296</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5443&amp;p=49296#p49296"/>
<title type="html"><![CDATA[Zapper Implementation]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5443&amp;p=49296#p49296"><![CDATA[
Didn't I hear something about how you have to read it every scanline? Or is that just when you are checking to see if there was a hit?<br /><br />I'm assuming actually that's just during the reading phase that you have to check every scanline. But what I do in my game is I have three variables:<br /><br />ControlPrevious<br />ControlCurrent<br />ControlTrigger<br /><br />And this is how my controller code looks:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent"><br />   lda ControlCurrent<br />   sta ControlPrevious<br /><br />   ldx #1<br />   stx $4016<br />   dex<br />   stx $4016<br /><br />   ldy #8<br />-<br />   lda $4016<br />   lsr a<br />   rol ControlCurrent<br />   dey<br />   bne -<br /><br />   lda ControlCurrent<br />   and ControlPrevious<br />   eor ControlCurrent<br />   sta ControlTrigger<br /></div><br /><br />For ControlCurrent and ControlPrevious, it's obvious what those hold. Current holds the current button press bits for this frame. Previous holds the previous frame's button press status. And of course, each bit in the byte holds the status for the corresponding button:<br /><br />Bit 7 - A button status<br />Bit 6 - B button status<br />Bit 5 - Select button Status (or is it start?)<br />Bit 4 - Start button Status (or is it select? I get these two confused all the time)<br />Bit 3 - Up button status<br />Bit 2 - Down button status<br />Bit 1 - Left button status<br />Bit 0 - Right button status<br /><br />However, ControlTrigger holds which buttons have been NEWLY pressed. If you press A this frame, and it hasn't been pressed last frame, it will return a 1 in bit 7. However, if you have pressed A last frame, it will not return a 1 in bit 7. I call it "ControlTrigger" because it kind of reminds me of a trigger of a pistol being pulled or something where it only has effect the instant it's pulled. I didn't know what else to call it. It's really nice to have this byte because I can do things like:<br /><br />lda ControlTrigger<br />and #BButton<br />bne Shoot<br />.... blah blah code for not shooting<br /><br />Shoot:<br />.... blah blah code for shooting<br /><br />I would absolutely stay away from reading hardware registers in game logic code as much as possible. It is kind of a bug waiting to happen in my opinion. So I would put all the information for button presses and trigger status into bytes in RAM.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=138">Celius</a> — Wed Jul 29, 2009 10:46 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2009-07-27T15:00:46-07:00</updated>
<published>2009-07-27T15:00:46-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5443&amp;p=49254#p49254</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5443&amp;p=49254#p49254"/>
<title type="html"><![CDATA[Zapper Implementation]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5443&amp;p=49254#p49254"><![CDATA[
Wouldn't this be the same as detecting only buttons that were just pressed on the joypad (as opposed to the ones that remain pressed since last time)? That is, invert the old state (EOR $FF) and AND with the current state.<br /><br />That way, assuming the button/trigger was not pressed last frame, the old state is 0. The old state inverted becomes 1, AND'ed to the new state 1 (button/trigger is pressed) will result in 1, so the button/trigger has *just* been pressed. On the next frame, the old state is 1, and the new is also 1 (button/trigger remains pressed). 1 (old state) inverted is 0, AND'ed with 1 (new state) results in 0, so the button/trigger is either not pressed or remains pressed since last time, but you are not interested in either of those cases.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Mon Jul 27, 2009 3:00 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Memblers]]></name></author>
<updated>2009-07-27T14:28:29-07:00</updated>
<published>2009-07-27T14:28:29-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5443&amp;p=49250#p49250</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5443&amp;p=49250#p49250"/>
<title type="html"><![CDATA[Zapper Implementation]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5443&amp;p=49250#p49250"><![CDATA[
I'd try treating it the same as a controller - save the zapper state from the previous frame, then branch if it was previously triggered.  The zapper demo I made didn't even try to use the trigger.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=10">Memblers</a> — Mon Jul 27, 2009 2:28 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Roth]]></name></author>
<updated>2009-07-27T12:04:12-07:00</updated>
<published>2009-07-27T12:04:12-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5443&amp;p=49247#p49247</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5443&amp;p=49247#p49247"/>
<title type="html"><![CDATA[Zapper Implementation]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5443&amp;p=49247#p49247"><![CDATA[
Right now, I'm trying to figure out how to get the zapper to fire one shot at a time. As it stands, when I hold the right-click button down on the mouse, it repeats over and over and over again. I can't quite figure out what to do to make it single shot, such as in every other zapper game : P<br /><br />Here is the code I have presently running in NMI:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">battling:<br />   lda check_shot<br />   beq :+<br />      jsr object1_tile_switch<br />      lda reg2001_save<br />      ora #%00001000<br />      sta $2001<br />      sta reg2001_save<br />      lda #$00<br />      sta check_shot<br />   jmp @not_pulled<br /><br />:   lda $4017<br />   and #test_trigger<br />   beq @not_pulled<br />      lda #$01<br />      sta check_shot<br />      lda reg2001_save<br />      and #%11110111<br />      sta $2001<br />      sta reg2001_save<br />@not_pulled:<br /><br /></div><br /><br />The jsr object1_tile_switch is actually a badly named routine right now, as it's actually a palette switch for the testing (filling all white). I'm <em>guessing</em> this would be the way to do it, anyway.<br /><br />But yeah, any ideas on how to make the zapper fire only once per frame when pulled? Thanks for any input; pun intended! ; )<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=174">Roth</a> — Mon Jul 27, 2009 12:04 pm</p><hr />
]]></content>
</entry>
</feed>