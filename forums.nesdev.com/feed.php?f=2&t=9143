<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=2&amp;t=9143" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2013-12-23T15:30:04-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=2&amp;t=9143</id>
<entry>
<author><name><![CDATA[strat]]></name></author>
<updated>2013-12-23T15:30:04-07:00</updated>
<published>2013-12-23T15:30:04-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9143&amp;p=122833#p122833</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9143&amp;p=122833#p122833"/>
<title type="html"><![CDATA[Re: Spec for HLL targeting NES]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9143&amp;p=122833#p122833"><![CDATA[
Here's a video preview of the compiler in action (If you have a crappy connection like I do, be sure to watch in full screen @360P).  Basically this is to demonstrate how X and Y are used as register variables; if more than two indices are used in the same function, X is reserved for the most referenced index var.  I also want to show off in the third example how X is used to initialize the other vars.  This is closer to what a programmer normally does.   <img src="http://forums.nesdev.com/images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /> <br /><br /><!-- m --><a class="postlink" href="http://www.youtube.com/watch?v=nuM2GnUWVss">http://www.youtube.com/watch?v=nuM2GnUWVss</a><!-- m --><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3506">strat</a> — Mon Dec 23, 2013 3:30 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Movax12]]></name></author>
<updated>2013-12-02T11:43:44-07:00</updated>
<published>2013-12-02T11:43:44-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9143&amp;p=121842#p121842</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9143&amp;p=121842#p121842"/>
<title type="html"><![CDATA[Re: Spec for HLL targeting NES]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9143&amp;p=121842#p121842"><![CDATA[
<div class="quotetitle">strat wrote:</div><div class="quotecontent"><br />Also, another one I'd like to implement is removing the cmp operation for countdown loops.<br /></div><br />If you know your start and end values, this code snippet works for a FOR loop (8-bit, in ca65 macro code):<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent"> <br />; calculate the first invalid value (if this value is found at the test, exit the loop)<br />_END_COUNTER_VALUE_  = &lt; ( ( _STEP_ + _TO_VALUE_) + ( _FROM_VALUE_ - _TO_VALUE_ .mod _STEP_) )<br /><br />; if high bit of 2nd iteration and high bit of 2nd LAST iteration are high AND END_COUNTER_VALUE_ is positive<br /><br />.if ( (_FROM_VALUE_ + _STEP_ ) &amp; ( _END_COUNTER_VALUE_ - _STEP_ ) &amp; $80 ) .and <br />    (.not (_END_COUNTER_VALUE_ &amp; $80))<br />            BMI START_LABEL<br />; if high bit of 2nd iteration and high bit of 2nd LAST iteration are low AND END_COUNTER_VALUE_ is negative<br />.elseif (.not (((_FROM_VALUE_ + _STEP_ ) | ( _END_COUNTER_VALUE_ - _STEP_ )) &amp; $80 )) .and <br />        (_END_COUNTER_VALUE_ &amp; $80)<br />            BPL START_LABEL<br />; last value is zero<br />.elseif _END_COUNTER_VALUE_ = 0<br />            BNE START_LABEL<br />.else<br />    ; need to check loop against end value:<br />    .if .xmatch(_COUNTERVAR_, x) ; found X<br />        cpx #_END_COUNTER_VALUE_<br />    .elseif .xmatch(_COUNTERVAR_, y) ; found y<br />        cpy #_END_COUNTER_VALUE_<br />    .elseif .xmatch(_COUNTERVAR_, a) ; found a<br />        cmp #_END_COUNTER_VALUE_<br />    .else<br />        lda _COUNTERVAR_<br />        cmp #_END_COUNTER_VALUE_<br />    .endif<br />    BNE START_LABEL<br />.endif<br /></div><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4680">Movax12</a> — Mon Dec 02, 2013 11:43 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[strat]]></name></author>
<updated>2013-12-01T19:00:40-07:00</updated>
<published>2013-12-01T19:00:40-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9143&amp;p=121819#p121819</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9143&amp;p=121819#p121819"/>
<title type="html"><![CDATA[Re: Spec for HLL targeting NES]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9143&amp;p=121819#p121819"><![CDATA[
<div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />But this way a JMP is required each loop rather than just the first.<br /></div><br /><br />Yeah, I took extra care to make the compiler not output loops like this.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3506">strat</a> — Sun Dec 01, 2013 7:00 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[strat]]></name></author>
<updated>2013-12-01T19:09:52-07:00</updated>
<published>2013-12-01T18:55:47-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9143&amp;p=121818#p121818</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9143&amp;p=121818#p121818"/>
<title type="html"><![CDATA[Re: Spec for HLL targeting NES]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9143&amp;p=121818#p121818"><![CDATA[
Thanks for the encouragement, y'all.<br /><br />'dowhile' eliminates the jump to the first conditional check; the updated spec will mention that.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />I agree with this. I can't see a need to jump down to the branch. Have the branch at the start of the loop. Maybe I am missing something?<br /></div><br /><br />If you need to test the condition before the loop runs at all, it's better to jump down there than to have the branch at the head of the loop, jumping past the loop if the test fails.  Then the actual loop has to keep jumping back to the test.  Ironically, this is one of the few sensible constructs of cc65.<br /><br />The one optimization I'm really concerned with is eliminating any lda/sta/cmp/inc instruction that can be replaced with ldy/sty/cpy/iny and if the index var needs arithmetic, using tay in place of sta/ldy.  I've got a good idea of how this will be implemented.  Also, another one I'd like to implement is removing the cmp operation for countdown loops.  (cc65 to its credit also eliminates cmp when beq/bne works).<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">   while ind &gt; 0<br />      ind = ind - 1<br />      ii2 = ii2 - 1<br />   endw<br />   <br />   LOOP_0:<br />      dec ii2<br />      dec ind<br />      bne LOOP_0<br /></div><br /><br />That second example of cc65 output still makes me glad to be working on this.  I actually made a map-scrolling demo in C earlier this year, just to see if working on a whole new language was even worthwhile, and the most tiresome thing was flagging each var as local or global with a comment.  cc65 doesn't allow anonymous unions, so that's also a little inconvenient though maybe tolerable.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3506">strat</a> — Sun Dec 01, 2013 6:55 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Movax12]]></name></author>
<updated>2013-12-01T18:41:08-07:00</updated>
<published>2013-12-01T18:41:08-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9143&amp;p=121815#p121815</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9143&amp;p=121815#p121815"/>
<title type="html"><![CDATA[Re: Spec for HLL targeting NES]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9143&amp;p=121815#p121815"><![CDATA[
<div class="quotetitle">Bregalad wrote:</div><div class="quotecontent"><br />Then when a while or for loop is encountered, the test condition has to be checked at compile time against the variables.<br /></div><br /><br />I see what you are saying. I was thinking this would be better:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">LOOP_0:<br />        lda ii2<br />        cmp limit<br />        bcs ENDWHILE_0<br />        ldy ii2<br />        lda src,Y<br />        ldx index<br />        sta dst,X<br />        inc index<br />        inc ii2<br />        jmp LOOP_0<br />ENDWHILE_0:<br /></div><br /><br />But this way a JMP is required each loop rather than just the first. I may have to rethink the way I do some things.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4680">Movax12</a> — Sun Dec 01, 2013 6:41 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[slobu]]></name></author>
<updated>2013-12-01T16:22:16-07:00</updated>
<published>2013-12-01T16:22:16-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9143&amp;p=121809#p121809</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9143&amp;p=121809#p121809"/>
<title type="html"><![CDATA[Re: Spec for HLL targeting NES]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9143&amp;p=121809#p121809"><![CDATA[
Thanks for continuing forward on this project.  There is definitely a target audience for this project and I'm thrilled to be one =)<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4942">slobu</a> — Sun Dec 01, 2013 4:22 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[thefox]]></name></author>
<updated>2013-12-01T15:16:22-07:00</updated>
<published>2013-12-01T15:16:22-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9143&amp;p=121805#p121805</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9143&amp;p=121805#p121805"/>
<title type="html"><![CDATA[Re: Spec for HLL targeting NES]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9143&amp;p=121805#p121805"><![CDATA[
<div class="quotetitle">Bregalad wrote:</div><div class="quotecontent"><br />As far as I undestand it can have completely different meaning depending on where it's used. With GCC &quot;static&quot; global variables are invisible to other files, and &quot;static&quot; functions can use nonstandard calling convention (leading often to much more optimal code). In fact all functions should be static ideally but then you can give up separate compilation and intermixing with other languages.<br /></div><br />Yes, in global scope static makes the identifier (variable or a function) local to the module (file). In function scope it basically makes the variable a global variable in function scope.<br /><br />Many compilers nowadays have link time code optimization, so I don't think your &quot;ideal&quot; of all functions being static is that useful in the end.<br /><br />Also there's a slight difference between local static variables and the <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">-Cl</tt> switch of cc65. When local static variables are used, the variable is only initialized once at the beginning of the program. When <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">-Cl</tt> is used, the variables are initialized every time the function is entered.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=80">thefox</a> — Sun Dec 01, 2013 3:16 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[lidnariq]]></name></author>
<updated>2013-12-01T14:02:14-07:00</updated>
<published>2013-12-01T14:02:14-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9143&amp;p=121802#p121802</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9143&amp;p=121802#p121802"/>
<title type="html"><![CDATA[Re: Spec for HLL targeting NES]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9143&amp;p=121802#p121802"><![CDATA[
<div class="quotetitle">Bregalad wrote:</div><div class="quotecontent"><br />Still it should be doable to hack the compiler so that everything is &quot;static&quot;.<br /></div>Look at the compile-time flag <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">-Cl</tt><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3512">lidnariq</a> — Sun Dec 01, 2013 2:02 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2013-12-01T13:55:38-07:00</updated>
<published>2013-12-01T13:55:38-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9143&amp;p=121800#p121800</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9143&amp;p=121800#p121800"/>
<title type="html"><![CDATA[Re: Spec for HLL targeting NES]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9143&amp;p=121800#p121800"><![CDATA[
What you're missing is that this optimization is complicated to implement (while perfectly possible).<br />For all declared &amp; initialized variables, there is need to have the initial value itself memorized in the compiler itself. If the variables are ever affected with anything other than a constant literal value (or another value that reduces to a constant literal) then it should be marked as &quot;scratched&quot;.<br /><br />Then when a while or for loop is encountered, the test condition has to be checked at compile time against the variables. If anything in the expression tree is marked as &quot;scratched&quot; then you can perrform no optimisation. Else you can evaluate the expression fully, and it'll either evaluate to &quot;true&quot; or &quot;false&quot;.<br />If it evaluates to &quot;false&quot; then you can remove the loop completely (and it'd be a good idea to issue a warning to the user, as it's probably an error of his side).<br />If it evaluates to &quot;true&quot; then you can turn it into a do-while loop, so you avoid a dummy check at loop entering.<br /><br />Note that this is my interpretation of the problem, the actual implementation might need to be even more complex than this short description.<br /><br />@Shiru : Wow, CC65 can produce such code ? Declaring the variables as &quot;static&quot; makes so much a difference ? I'm very impressed <img src="http://forums.nesdev.com/images/smilies/icon_eek.gif" alt=":shock:" title="Shocked" /> <br />Definitely far to optimal code, but it's somewhat decent compared as to what it produces under normal conditions.<br />I should try to use CC65 again and declare everything &quot;static&quot; and see how it turns out.<br /><br />Still it should be doable to hack the compiler so that everything is &quot;static&quot;. Although this keywoard always confused the heck out of me in C. As far as I undestand it can have completely different meaning depending on where it's used. With GCC &quot;static&quot; global variables are invisible to other files, and &quot;static&quot; functions can use nonstandard calling convention (leading often to much more optimal code). In fact all functions should be static ideally but then you can give up separate compilation and intermixing with other languages.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Sun Dec 01, 2013 1:55 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Movax12]]></name></author>
<updated>2013-12-01T13:45:18-07:00</updated>
<published>2013-12-01T13:45:18-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9143&amp;p=121798#p121798</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9143&amp;p=121798#p121798"/>
<title type="html"><![CDATA[Re: Spec for HLL targeting NES]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9143&amp;p=121798#p121798"><![CDATA[
Looks good.<br /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent"><br />...saving a useless jump in the code.<br /></div><br />I agree with this. I can't see a need to jump down to the branch. Have the branch at the start of the loop. Maybe I am missing something?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4680">Movax12</a> — Sun Dec 01, 2013 1:45 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[qbradq]]></name></author>
<updated>2013-12-01T06:53:56-07:00</updated>
<published>2013-12-01T06:53:56-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9143&amp;p=121792#p121792</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9143&amp;p=121792#p121792"/>
<title type="html"><![CDATA[Re: Spec for HLL targeting NES]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9143&amp;p=121792#p121792"><![CDATA[
Glad to see you're making progress!<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3706">qbradq</a> — Sun Dec 01, 2013 6:53 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Shiru]]></name></author>
<updated>2013-12-01T05:42:37-07:00</updated>
<published>2013-12-01T05:42:37-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9143&amp;p=121791#p121791</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9143&amp;p=121791#p121791"/>
<title type="html"><![CDATA[Re: Spec for HLL targeting NES]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9143&amp;p=121791#p121791"><![CDATA[
<div class="quotetitle">Bregalad wrote:</div><div class="quotecontent"><br />Way better than the pure crap that CC65 generates (the same code would generate several kilobytes of code using indirect addressing all the time when you didn't even use pointers in the original code).<br /></div><br /><br />Examples of the crap by cc65:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">void test(void)<br />{<br />   unsigned char index = 0;<br />   unsigned char ii2 = 0;<br />   unsigned char limit = 15;<br />   unsigned char  src&#91;20&#93;;<br />   unsigned char  dst&#91;20&#93;;<br />   while (ii2 &lt; limit)<br />   {<br />      dst&#91;index&#93; = src&#91;ii2&#93;;<br />      ++index;<br />      ++ii2;<br />   }<br />}</div><br /><br />generates a crap indeed:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">; ---------------------------------------------------------------<br />; void __near__ test (void)<br />; ---------------------------------------------------------------<br /><br />.segment   &quot;CODE&quot;<br /><br />.proc   _test: near<br /><br />.segment   &quot;CODE&quot;<br /><br />   lda     #$00<br />   jsr     pusha<br />   jsr     pusha<br />   lda     #$0F<br />   jsr     pusha<br />   ldy     #$28<br />   jsr     subysp<br />L0015:   ldy     #$29<br />   lda     (sp),y<br />   dey<br />   cmp     (sp),y<br />   bcs     L0016<br />   lda     sp<br />   ldx     sp+1<br />   ldy     #$2A<br />   clc<br />   adc     (sp),y<br />   bcc     L001A<br />   inx<br />L001A:   jsr     pushax<br />   lda     sp<br />   ldx     sp+1<br />   clc<br />   adc     #$16<br />   bcc     L001D<br />   inx<br />L001D:   ldy     #$2B<br />   clc<br />   adc     (sp),y<br />   bcc     L001E<br />   inx<br />L001E:   sta     ptr1<br />   stx     ptr1+1<br />   ldy     #$00<br />   lda     (ptr1),y<br />   jsr     staspidx<br />   ldy     #$2A<br />   clc<br />   lda     #$01<br />   adc     (sp),y<br />   sta     (sp),y<br />   dey<br />   clc<br />   lda     #$01<br />   adc     (sp),y<br />   sta     (sp),y<br />   jmp     L0015<br />L0016:   ldy     #$2B<br />   jmp     addysp<br /><br />.endproc</div><br /><br />However,<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">void test(void)<br />{<br />   static unsigned char index = 0;<br />   static unsigned char ii2 = 0;<br />   static unsigned char limit = 15;<br />   static unsigned char  src&#91;20&#93;;<br />   static unsigned char  dst&#91;20&#93;;<br />   while (ii2 &lt; limit)<br />   {<br />      dst&#91;index&#93; = src&#91;ii2&#93;;<br />      ++index;<br />      ++ii2;<br />   }<br />}</div><br /><br />generates (DATA and BSS sections omited):<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">; ---------------------------------------------------------------<br />; void __near__ test (void)<br />; ---------------------------------------------------------------<br /><br />.segment   &quot;CODE&quot;<br /><br />.proc   _test: near<br /><br />.segment   &quot;CODE&quot;<br /><br />L001A:   lda     L0012<br />   cmp     L0014<br />   bcs     L001B<br />   lda     #&lt;(L0019)<br />   ldx     #&gt;(L0019)<br />   clc<br />   adc     L0010<br />   bcc     L001F<br />   inx<br />L001F:   sta     ptr1<br />   stx     ptr1+1<br />   ldy     L0012<br />   lda     L0017,y<br />   ldy     #$00<br />   sta     (ptr1),y<br />   inc     L0010<br />   inc     L0012<br />   jmp     L001A<br />L001B:   rts<br /><br />.endproc</div><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4205">Shiru</a> — Sun Dec 01, 2013 5:42 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2013-12-01T02:58:50-07:00</updated>
<published>2013-12-01T02:58:50-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9143&amp;p=121787#p121787</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9143&amp;p=121787#p121787"/>
<title type="html"><![CDATA[Re: Spec for HLL targeting NES]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9143&amp;p=121787#p121787"><![CDATA[
<div class="quotetitle">thefox wrote:</div><div class="quotecontent"><br />I had completely forgotten about this project. It's nice to see you have made some progress.<br /></div><br />I also had forgotten.<br />It looks like your code generation is pretty good !!<br />One thing it could do is to see that the check &quot;ii2 &lt; limit&quot; will always be true on it's first iteration, and transform the while loop into a do-while loop, saving a useless jump in the code.<br />However I admit it's not as simple as it sound to implement.<br /><br />Way better than the pure crap that CC65 generates (the same code would generate several kilobytes of code using indirect addressing all the time when you didn't even use pointers in the original code).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Sun Dec 01, 2013 2:58 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[thefox]]></name></author>
<updated>2013-11-30T23:36:02-07:00</updated>
<published>2013-11-30T23:36:02-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9143&amp;p=121784#p121784</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9143&amp;p=121784#p121784"/>
<title type="html"><![CDATA[Re: Spec for HLL targeting NES]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9143&amp;p=121784#p121784"><![CDATA[
I had completely forgotten about this project. It's nice to see you have made some progress.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=80">thefox</a> — Sat Nov 30, 2013 11:36 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[strat]]></name></author>
<updated>2013-11-30T22:21:59-07:00</updated>
<published>2013-11-30T22:21:59-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9143&amp;p=121783#p121783</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9143&amp;p=121783#p121783"/>
<title type="html"><![CDATA[Re: Spec for HLL targeting NES]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9143&amp;p=121783#p121783"><![CDATA[
I've finally made substantial progress, to the point it generates some workable assembly.  Here's a sample:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">   index = 0<br />   ii2 = 0<br />   limit = 15<br />   s8 src&#91;20&#93;<br />   s8 dst&#91;20&#93;<br />   while ii2 &lt; limit<br />      dst&#91;index&#93; = src&#91;ii2&#93;<br />      index = index + 1<br />      ii2 = ii2 + 1<br />   endw   <br /></div><br /><br />6502 output:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">        lda #0<br />        sta index<br />        sta ii2<br />        lda #15<br />        sta limit<br />        jmp CHECK_0<br />LOOP_0:<br />        ldy ii2<br />        lda src,Y<br />        ldx index<br />        sta dst,X<br />        inc index<br />        inc ii2<br />CHECK_0:<br />        lda ii2<br />        cmp limit<br />        bcc LOOP_0<br />ENDWHILE_0:<br /></div><br /><br />Of course this output isn't optimal - the finished compiler will do a second pass to keep the index vars in the x and y registers.  Mostly this is to let people who were interested know I'm back to working on it.  There's an updated spec in the original post.  Since uc65 is now live and open source, it might be tempting to simply add the features I was planning for Noism.  Except I don't like Java that much.  Here's a complete progress report:<br /><br />Fully implemented:<br />Syntax parsing and symbol generation<br />Line comments and block comments<br />Flow control and while/dowhile looping<br />Nested parenthetical operations<br />Indexed array accesses<br />                Pointer declaration and addressing<br />Variable declaration<br />Function calls and returns<br />Number format checking<br />Basic syntax checking (i.e. can a symbol follow the previous symbol)<br />                Output of pseudo-asm syntax, used for testing features and converting to target cpu<br /><br />Partially implemented:<br />6502 asm output<br />Structures<br />                Scoping and static allocation of space for inner-scoped variables<br /><br />Not started yet:<br />Function pointers<br />.asm file output<br />Complete error checking<br />Compiler directives<br />Multi-byte variable accesses<br />Signed numbers<br />16-bit/multibyte code output<br />for looping<br />                z80 asm output<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3506">strat</a> — Sat Nov 30, 2013 10:21 pm</p><hr />
]]></content>
</entry>
</feed>