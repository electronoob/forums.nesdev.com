<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Game logic doesn't execute when moved outside of NMI?</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Game logic doesn't execute when moved outside of NMI?</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=17555">http://forums.nesdev.com/viewtopic.php?f=2&amp;t=17555</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>truffly</b> [ Wed Jul 18, 2018 2:20 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Game logic doesn't execute when moved outside of NMI?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Hello all,<br /><br />I started a homebrew NES game to learn NES assembly programming back in April or May, though I haven't worked on it much this summer but really want to get back into it. I had asked this question over on the NESDev subreddit, but was directed here by the users there.<br /><br />My question is regarding a problem I can't seem to solve with separating the game logic from the NMI. I know it is best practice to keep PPU and APU update code in the NMI, and all of the game engine code in its own loop. The problem is, I haven't gotten this to work--it is just fine when the logic is in the NMI, but when I try to move the logic to the game loop, the loop never executes or updates. I followed the Nerdy Nights tutorials when writing this code, but he kept the logic inside NMI...and disch's tutorial didn't help me much with this problem. Essentially, my problem is that when I put code in the main game loop (which, in the working version, just loops forever while we wait for an NMI, and the NMI handles all of the game code like in Super Mario Bros), none of this code actually executes. Specifically, controllers aren't read, the game engine doesn't do anything, and test tones don't play. The screen still scrolls, but that happens during NMI. I set my &quot;gamestate&quot; variable to &quot;playing&quot; in the reset file (which, in theory, <em>should</em> let me run the logic), but despite my attempts, this does not seem to help me execute my game engine code in my game loop.<br /><br />For reference, here is my game loop:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">MainGameLoop:<br />&nbsp; ;; put game logic here. Use a &quot;sleep&quot; flag to prevent us from doing too much per frame<br />&nbsp; ;; &quot;sleep&quot; flag should only be set if we need to wait for an NMI<br />MainGameLoop_Wait:<br />&nbsp; lda sleep_flag<br />&nbsp; bne MainGameLoop_Wait<br />&nbsp;<br />&nbsp; jsr ReadController<br />&nbsp; jsr GameEngine<br />&nbsp;<br />&nbsp; inc sleep_flag ; set sleep flag after running the game engine<br />&nbsp;<br />&nbsp; JMP MainGameLoop<br /></div><br /><br />Note the sleep flag is reset in the NMI -- I store #$00 in sleep_flag before popping the values off the stack that I pushed on at the beginning of the NMI.<br /><br />Rather than write all the code out here, I'll give you the pastebin links--here is a link to the <a href="https://pastebin.com/CCz98RUL" class="postlink">init/reset file</a>, and here is a link to the <a href="https://pastebin.com/9aKvdGEs" class="postlink">main file</a>.<br /><br />Thank you so much for your help, I hope someone can help me figure this out/point me in the right direction!<br /><br />-truffly

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>JRoatch</b> [ Wed Jul 18, 2018 2:52 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Game logic doesn't execute when moved outside of NMI?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Going by the code in the pastebin links, it looks like the reset routine does not jump to MainGameLoop it instead returns to nothing at the last line. The main code mistakenly starts out with a subroutine call to reset but that never happens because the RESET vector correctly points to the reset routine.<br /><br />P.S. Welcome to the nesdev forums, this is an excellent first post.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Wed Jul 18, 2018 3:13 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Game logic doesn't execute when moved outside of NMI?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />This would work if the reset vector pointed to $C000, where you have the <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">jsr reset</tt> instruction, but since the reset vector pointed straight to RESET, that JSR is never executed, meaning that at the end of RESET, the RTS has nowhere to return.<br /><br />You have 2 options:<br /><br /><s>1- have the reset vector point to $C000;</s> this won't work, because the stack pointer is reset in the reset routine...<br /><br />2- replace the RTS in reset with <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">jmp MainGameLoop</tt> (and remove the <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">jsr reset</tt> that's doing nothing);

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>JRoatch</b> [ Wed Jul 18, 2018 3:16 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Game logic doesn't execute when moved outside of NMI?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">jsr reset</tt> is also problematic in this case as the reset routine also resets the stack pointer therefore making that <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">rts</tt> still return to nothing.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Wed Jul 18, 2018 3:28 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Game logic doesn't execute when moved outside of NMI?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />That's true. So yeah, changing the reset vector to $C000 won't do it, because the stack pointer is manipulated after that, making it impossible to return to the saved address.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>truffly</b> [ Wed Jul 18, 2018 4:19 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Game logic doesn't execute when moved outside of NMI?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Seems, then, like the best solution would be to eliminate <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">jsr reset</tt> and the <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">reset:</tt> label, and swap the <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">rts</tt> in the reset file to a <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">jmp</tt> statement. Thanks friends -- I completely overlooked that. It's always helpful to get fresh eyes on something!

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Sumez</b> [ Thu Jul 19, 2018 1:04 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Game logic doesn't execute when moved outside of NMI?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Yeah, I haven't looked at a lot of homebrew code, but it's my impression that's how most people do it. <br />Instead of having one single &quot;main loop&quot;, I have specific states that my game changes between (thus keeping something like the title screen completely separate from playing a level), and whenever I change state, I just JMP to the &quot;main&quot; loop of that particular state (or an initialization block leading up to it), and keep looping that section until something else happens.<br />In that perspective, the reset process is a state that ends with jumping into the title screen state (or whatever state I'm testing at the moment).<br /><br />The take-away here is that the game logic completely ignores NMI, and whenever you don't need it (to do nametable updates, etc), I think it's best practice to pretend it doesn't exist. All you need to know is that you have a variable (bit) in memory that updates once a frame, which you can use to time your loops. I even made a simple macro for timed loops, so I don't even have to think about this variable.<br /><br /><br />You could use a lookup table to control individual logic of multiple states (I think a lot of commercial games did this), but I like keeping my code modular.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Thu Jul 19, 2018 1:39 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Game logic doesn't execute when moved outside of NMI?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Sumez wrote:</div><div class="quotecontent">Instead of having one single &quot;main loop&quot;, I have specific states that my game changes between (thus keeping something like the title screen completely separate from playing a level), and whenever I change state, I just JMP to the &quot;main&quot; loop of that particular state (or an initialization block leading up to it), and keep looping that section until something else happens.<br />In that perspective, the reset process is a state that ends with jumping into the title screen state (or whatever state I'm testing at the moment).</div><br />That's how I do it too. Each state is a separate block of code, with initialization at the beginning, followed by the &quot;main&quot; loop. To change states, I just jump to the initialization of the next state.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">The take-away here is that the game logic completely ignores NMI, and whenever you don't need it (to do nametable updates, etc), I think it's best practice to pretend it doesn't exist. All you need to know is that you have a variable (bit) in memory that updates once a frame, which you can use to time your loops.</div><br />This is a good straightforward approach, but there are some drawbacks. First, sounds won't play during state transitions. Second, some things may break in case there are lag frames: the music will slow down, and any raster effects you have (status bar, parallax scrolling, etc.) won't be done. If you don't need music during transitions and/or the glitches don't bother you (or you're sure you absolutely don't have lag frames), then this is a good approach, otherwise, it's good to have the NMI go &quot;hey, I see you're not done with the frame calculations, but there's some important stuff we have to do anyway!&quot;...<br /><br />My NMI doesn't do anything specific to particular game states, it just takes care of some basic stuff, like enabling/disabling rendering, setting the scroll (only if rendering is enabled, otherwise the NMI doesn't do anything that could screw up ongoing VRAM transfers the main loop might be doing) and calling the audio engine, but before that, it calls a sequence of custom VRAM update routines from a list that was built by the game logic. These update routines can be anything, from generic &quot;copy N bytes to address $XXXX&quot; to specialized routines that will do anything to update whatever is necessary as fast as possible. Whatever the active state needs.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Sumez</b> [ Thu Jul 19, 2018 2:46 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Game logic doesn't execute when moved outside of NMI?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">This is a good straightforward approach, but there are some drawbacks. First, sounds won't play during state transitions.</div><br />I'd keep the sound engine completely out of the core game logic too, though, and update it in NMI. When using something like Famitone 2, that's the most obvious approach anyway.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Second, some things may break in case there are lag frames: the music will slow down, and any raster effects you have (status bar, parallax scrolling, etc.) won't be done.</div><br />This is what I meant with &quot;whenever you don't need it&quot;. Just like timed raster effects are tied to the NMI, the same of course goes for stuff like setting scroll, incremential nametable updates when you are scrolling and so on.<br />Anything that is essential to do in vblank or just every 60 frames a second, I'd put in NMI. And I don't think any of that should be a part of your main overall game logic.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Thu Jul 19, 2018 3:43 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Game logic doesn't execute when moved outside of NMI?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Sumez wrote:</div><div class="quotecontent">I'd keep the sound engine completely out of the core game logic too, though, and update it in NMI.</div><br />But then the &quot;wait for the flag to change&quot; approach to VRAM updates won't work anymore, because the sound engine will run *before* the updates, stealing precious vblank time. I assumed that was what you meant by &quot;variable in memory that updates once a frame, which you can use to time your loops&quot;.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Sumez</b> [ Thu Jul 19, 2018 7:54 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Game logic doesn't execute when moved outside of NMI?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I was talking about timing your &quot;main&quot; loops.<br /><br />I'd still run music updates in NMI, but after VRAM updates so it doesn't matter if it spills outside vblank. Isn't that how most people do it.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Thu Jul 19, 2018 7:59 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Game logic doesn't execute when moved outside of NMI?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I see. From your post I had assumed you were talking about the minimalist <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">inc FrameCount</tt> <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">rti</tt> NMI handler.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Zutano</b> [ Thu Jul 19, 2018 12:48 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Game logic doesn't execute when moved outside of NMI?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Sumez wrote:</div><div class="quotecontent">Instead of having one single &quot;main loop&quot;, I have specific states that my game changes between (thus keeping something like the title screen completely separate from playing a level), and whenever I change state, I just JMP to the &quot;main&quot; loop of that particular state (or an initialization block leading up to it), and keep looping that section until something else happens.<br />In that perspective, the reset process is a state that ends with jumping into the title screen state (or whatever state I'm testing at the moment).</div><br />I personally like to use a single main game loop and have INIT and CLEANUP sub-states for each game state. This takes the form of a jump table, where the proper routine is looked up in my main loop.<br />This way is consistent with how I do entities (e.g. an enemy's state: idle, attacking the player, etc.). I check the entity type and use a jump table to run the correct update routine, then use another jump table based on its state to actually perform the logic.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Sumez</b> [ Fri Jul 20, 2018 1:20 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Game logic doesn't execute when moved outside of NMI?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">I see. From your post I had assumed you were talking about the minimalist <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">inc FrameCount</tt> <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">rti</tt> NMI handler.</div><br /><br />Oh jesus no. In fact, quite the opposite. Moving NMI code out from the NMI is just as bad IMO, and defeats the purpose of &quot;ignoring that NMI exists&quot; when creating your core game logic.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>qalle</b> [ Tue Jul 24, 2018 3:10 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Game logic doesn't execute when moved outside of NMI?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">JRoatch wrote:</div><div class="quotecontent">the reset routine also resets the stack pointer</div><br />It also clears the entire stack (<tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">$0100-$01FF</tt>). That was the first thing I suspected after seeing a subroutine called <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">reset</tt> (I once made the same mistake).

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>