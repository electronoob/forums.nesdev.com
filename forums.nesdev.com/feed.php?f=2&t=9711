<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=2&amp;t=9711" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2014-06-11T23:12:20-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=2&amp;t=9711</id>
<entry>
<author><name><![CDATA[Omegamatrix]]></name></author>
<updated>2014-06-11T23:12:20-07:00</updated>
<published>2014-06-11T23:12:20-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9711&amp;p=129816#p129816</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9711&amp;p=129816#p129816"/>
<title type="html"><![CDATA[Re: Simulating decimal mode]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9711&amp;p=129816#p129816"><![CDATA[
I just realized that you are storing Absolute,X and not Zeropage,X.<br /><br />In this case a TYA has to be added back in since there is no STY Absolute,X instruction. It now uses 18 bytes which is still not too bad.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">    ldy    #$D0-1<br />    sec<br />.loopDivTen:<br />    iny<br />    sbc    #10<br />    bcs    .loopDivTen<br />    adc    #$DA<br />    sta    StringBuffer+1,X<br />    tya<br />    sta    StringBuffer,X<br />    rts</div><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6558">Omegamatrix</a> — Wed Jun 11, 2014 11:12 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Omegamatrix]]></name></author>
<updated>2014-06-10T21:54:50-07:00</updated>
<published>2014-06-10T21:54:50-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9711&amp;p=129791#p129791</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9711&amp;p=129791#p129791"/>
<title type="html"><![CDATA[Re: Simulating decimal mode]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9711&amp;p=129791#p129791"><![CDATA[
<div class="quotetitle">Kasumi wrote:</div><div class="quotecontent"><br />Oh! Hey, Omegamatrix. I do recognize the name from this thread: <!-- m --><a class="postlink" href="http://atariage.com/forums/topic/113254-fast-divide-by-seven/page-5">http://atariage.com/forums/topic/113254 ... ven/page-5</a><!-- m --><br /><br />Off topic: I'd planned to ask a few people eventually, but I've generally operated under the assumption routines posted in threads like that are public domain. Is this true for yours? I'm currently using your divide by 5/10 routine. More on topic, how about this decimal routine that probably beats whatever I'm using now? Was gonna PM you on atariage to ask how/if you'd like credit, but now you're here.<br /></div><br />Hello Kasumi,<br /><br />All of the math routines I post are public domain. I want people to use them. <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" /> Credit is always nice if you re-post them later.<br /><br /><br />If you are using the divide by 5 and divide by 10 routines, then be sure to check my blog for the latest and greatest as I didn't post all of the updated routines in the thread you linked to.<br /><br /><br />By the way, here is the divide by 5:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">  sta  temp<br />  lsr<br />  adc  #13<br />  adc  temp<br />  ror<br />  lsr<br />  lsr<br />  adc  temp<br />  ror<br />  adc  temp<br />  ror<br />  lsr<br />  lsr</div><br /><br />If you are doing a smaller range of 0-129, then you can omit the ADC #13 to save 2 cycles and two bytes. Likewise you would add one more LSR to the end of the routine to have a limited (0-129 start value) unsigned integer divide by 10.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6558">Omegamatrix</a> — Tue Jun 10, 2014 9:54 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Kasumi]]></name></author>
<updated>2014-06-10T21:32:41-07:00</updated>
<published>2014-06-10T21:32:41-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9711&amp;p=129790#p129790</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9711&amp;p=129790#p129790"/>
<title type="html"><![CDATA[Re: Simulating decimal mode]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9711&amp;p=129790#p129790"><![CDATA[
Oh! Hey, Omegamatrix. I do recognize the name from this thread: <!-- m --><a class="postlink" href="http://atariage.com/forums/topic/113254-fast-divide-by-seven/page-5">http://atariage.com/forums/topic/113254 ... ven/page-5</a><!-- m --><br /><br />Off topic: I'd planned to ask a few people eventually, but I've generally operated under the assumption routines posted in threads like that are public domain. Is this true for yours? I'm currently using your divide by 5/10 routine. More on topic, how about this decimal routine that probably beats whatever I'm using now? Was gonna PM you on atariage to ask how/if you'd like credit, but now you're here.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3504">Kasumi</a> — Tue Jun 10, 2014 9:32 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Omegamatrix]]></name></author>
<updated>2014-06-10T21:07:22-07:00</updated>
<published>2014-06-10T21:07:22-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9711&amp;p=129789#p129789</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9711&amp;p=129789#p129789"/>
<title type="html"><![CDATA[Re: Simulating decimal mode]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9711&amp;p=129789#p129789"><![CDATA[
<div class="quotetitle">Bregalad wrote:</div><div class="quotecontent"><br />True, my binary -&gt; decimal routines takes a total of 23 bytes, and I don't think it's possible to shrink it further (it could be simplified if 0-9 digits were 0-9 in the pattern table instead of $d0-$d9 but I don't want to do that).<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">   ldy #$00<br />-   cmp #10<br />   bcc +<br />   sbc #10<br />   iny            ;Y count tens<br />   bne -<br />+   ora #$d0<br /><br />   sta StringBuffer+1.w,X   ;The units is written 1 tile forwad<br />   tya<br />   ora #$d0            ;Convert into tile #<br />   sta StringBuffer.w,X   ;Write the tens<br />   rts<br /></div><br /></div><br /><br />Hello Bregalad,<br /><br />I was looking at your code, and I believe you can reduce it further like this:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">    ldy    #$D0-1<br />    sec<br />.loopDivTen:<br />    iny<br />    sbc    #10<br />    bcs    .loopDivTen<br />    adc    #$DA<br />    sta    StringBuffer+1,X<br />    sty    StringBuffer,X<br />    rts</div><br /><br /><br />I am new to the NES, but no stranger to 6502 assembly. I've programmed a lot of 2600 code... not too sure if there is anyone else on these boards from AtariAge, but they may recognize my username from there. <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /><br />I have always been interested in math routines. I have wrote a lot of unsigned integer division routines, and lately have become more interested in hex to decimal routines. All of these routines are posted in my blog here:<br /><br /><a href="http://atariage.com/forums/blog/563-omegamatrixs-blog/" class="postlink">http://atariage.com/forums/blog/563-omegamatrixs-blog/</a><br /><br />Early in this thread it was mentioned limiting each byte to 0-63 Hex, and then convert each byte as need be. This seems like a reasonable approach to me. Is this what most NES programmers do? It would keep the addition pretty simple. In my blog I have tackled a hex to decimal (0-65535) conversion, and while my routine does the job in 156-168 cycles, it still requires 263 bytes.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6558">Omegamatrix</a> — Tue Jun 10, 2014 9:07 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[TmEE]]></name></author>
<updated>2013-02-04T01:10:19-07:00</updated>
<published>2013-02-04T01:10:19-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9711&amp;p=107355#p107355</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9711&amp;p=107355#p107355"/>
<title type="html"><![CDATA[Re: Simulating decimal mode]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9711&amp;p=107355#p107355"><![CDATA[
In my case summing scores and stuff in binary and then converting to decimal once a frame for showing takes a lot less time than trying to calculate stuff in BCD so in the ond you could show it in an easier manner...<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3483">TmEE</a> — Mon Feb 04, 2013 1:10 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Celius]]></name></author>
<updated>2013-01-31T11:14:47-07:00</updated>
<published>2013-01-31T11:14:47-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9711&amp;p=107127#p107127</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9711&amp;p=107127#p107127"/>
<title type="html"><![CDATA[Re: Simulating decimal mode]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9711&amp;p=107127#p107127"><![CDATA[
I suppose it helps if you have a decimal limit on what your value can be, rather than a hex limit. This ensures the amount of decimal digits you have to account for. My method uses 3 fixed routines, one for 8 bits, one for 16, and one for 24. It uses tables holding preconverted values for $0-$F, $00 - $F0 (Counting $10s), $000 -$F00 (counting $100s), and $0000 - $F000 (counting $1000s). Using these preconverted values, you can add them all together by breaking a value like $E834 into $E000 + $800 + $30 + $4 and simulating pen and paper addition (ends up adding 57344 + 768 + 48 + 4, handling each decimal digit in the addition seperately). That might make sense only to me; it's kind of hard to explain. I'm pretty happy with the performance I got out of it, and the fact that it takes a fixed amount of time (118 cycles for 8 bits, 263 for 16 bits, and 475 for 24). However, it probably uses about 500-600 bytes of ROM for the whole thing. I seem to recall that Blargg's solution was smaller and faster. I just never took the time to understand how it works.<br /><br />If you were just doing 8 bit conversion, you'd want to go with a smaller solution. It still takes about 100 bytes for just 8 bits. But the tables from that routine are re-used in larger hex conversions.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=138">Celius</a> — Thu Jan 31, 2013 11:14 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[koitsu]]></name></author>
<updated>2013-01-30T18:40:36-07:00</updated>
<published>2013-01-30T18:40:36-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9711&amp;p=107105#p107105</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9711&amp;p=107105#p107105"/>
<title type="html"><![CDATA[Re: Simulating decimal mode]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9711&amp;p=107105#p107105"><![CDATA[
<div class="quotetitle">tokumaru wrote:</div><div class="quotecontent"><br />Man, that's one angry programmer!<br /></div><br />No, <a href="http://tcrf.net/Erika_to_Satoru_no_Yume_Bouken" class="postlink">this is one angry programmer</a>.  And apparently the translation is more or less accurate.  *chuckles*  Japanese, having to stomach all their anger because it's not polite to be angry...<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3">koitsu</a> — Wed Jan 30, 2013 6:40 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2013-01-30T18:01:05-07:00</updated>
<published>2013-01-30T18:01:05-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9711&amp;p=107102#p107102</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9711&amp;p=107102#p107102"/>
<title type="html"><![CDATA[Re: Simulating decimal mode]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9711&amp;p=107102#p107102"><![CDATA[
Man, that's one angry programmer!<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Wed Jan 30, 2013 6:01 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[koitsu]]></name></author>
<updated>2013-01-30T17:15:59-07:00</updated>
<published>2013-01-30T17:15:59-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9711&amp;p=107098#p107098</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9711&amp;p=107098#p107098"/>
<title type="html"><![CDATA[Re: Simulating decimal mode]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9711&amp;p=107098#p107098"><![CDATA[
By the way, sort of relevant, sort of not: seems even actual commercial game programmers were wondering why Nintendo didn't include decimal mode:<br /><br /><!-- m --><a class="postlink" href="http://tcrf.net/Pachi_Com_%28NES%29">http://tcrf.net/Pachi_Com_%28NES%29</a><!-- m --><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3">koitsu</a> — Wed Jan 30, 2013 5:15 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bisqwit]]></name></author>
<updated>2013-01-20T06:47:01-07:00</updated>
<published>2013-01-20T06:47:01-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9711&amp;p=106536#p106536</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9711&amp;p=106536#p106536"/>
<title type="html"><![CDATA[Re: Simulating decimal mode]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9711&amp;p=106536#p106536"><![CDATA[
Related: Here is the code from Blargg's test framework to print decimal (non-BCD) numbers up to 65535. I no longer remember how much of it was written or changed by me.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">.pushseg<br />.segment &quot;RODATA&quot;<br />        ; &gt;= 60000 ? (EA60)<br />        ; &gt;= 50000 ? (C350)<br />        ; &gt;= 40000 ? (9C40)<br />        ; &gt;= 30000 ? (7530)<br />        ; &gt;= 20000 ? (4E20)<br />        ; &gt;= 10000 ? (2710)<br />digit10000_hi: .byte $00,$27,$4E,$75,$9C,$C3,$EA<br />digit10000_lo: .byte $00,$10,$20,$30,$40,$50,$60<br />        ; &gt;= 9000 ? (2328 (hex))<br />        ; &gt;= 8000 ? (1F40 (hex))<br />        ; &gt;= 7000 ? (1B58 (hex))<br />        ; &gt;= 6000 ? (1770 (hex))<br />        ; &gt;= 5000 ? (1388 (hex))<br />        ; &gt;= 4000 ? (FA0 (hex)) <br />        ; &gt;= 3000 ? (BB8 (hex)) <br />        ; &gt;= 2000 ? (7D0 (hex)) <br />        ; &gt;= 1000 ? (3E8 (hex)) <br />digit1000_hi: .byte $00,$03,$07,$0B,$0F,$13,$17,$1B,$1F,$23<br />digit1000_lo: .byte $00,$E8,$D0,$B8,$A0,$88,$70,$58,$40,$28<br />; &gt;= 900 ? (384 (hex))<br />; &gt;= 800 ? (320 (hex))<br />; &gt;= 700 ? (2BC (hex))<br />; &gt;= 600 ? (258 (hex))<br />; &gt;= 500 ? (1F4 (hex))<br />; &gt;= 400 ? (190 (hex))<br />; &gt;= 300 ? (12C (hex))<br />; &gt;= 200 ? (C8 (hex)) <br />; &gt;= 100 ? (64 (hex)) <br />digit100_hi: .byte $00,$00,$00,$01,$01,$01,$02,$02,$03,$03<br />digit100_lo: .byte $00,$64,$C8,$2C,$90,$F4,$58,$BC,$20,$84<br />.popseg<br /><br />.macro dec16_comparew table_hi, table_lo<br />        .local @lt<br />        cmp table_hi,y<br />        bcc @lt<br />        bne @lt ; only test the lo-part if hi-part is equal<br />        pha<br />         txa<br />         cmp table_lo,y<br />        pla<br />@lt:<br />.endmacro<br />.macro do_digit table_hi, table_lo<br />        pha<br />         ; print Y as digit; put X in A and do SEC for subtraction<br />         jsr @print_dec16_helper<br />         sbc table_lo,y<br />         tax<br />        pla <br />        sbc table_hi,y<br />.endmacro<br /><br />; Prints A:X as 2-5 digit decimal value, NO space after.<br />; A = high 8 bits, X = low 8 bits.<br />print_dec16:<br />        ora #0<br />        beq @less_than_256<br /><br />        ldy #6<br />        sty print_temp_<br /><br />        ; TODO: Use binary search?<br />:       dec16_comparew digit10000_hi,digit10000_lo<br />        bcs @got10000<br />        dey<br />        bne :-<br />        ;cpy print_temp_<br />        ;beq @got10000  <br />@cont_1000:<br />        ldy #9<br />:       dec16_comparew digit1000_hi,digit1000_lo<br />        bcs @got1000<br />        dey<br />        bne :-          ; Y = 0.<br />        cpy print_temp_ ; zero print_temp_ = print zero-digits<br />        beq @got1000<br />@cont_100:<br />        ldy #9<br />:       dec16_comparew digit100_hi,digit100_lo<br />        bcs @got100<br />        dey<br />        bne :-<br />        cpy print_temp_<br />        beq @got100<br />@got10000:<br />        do_digit digit10000_hi,digit10000_lo<br />        ; value is now 0000..9999<br />        ldy #0<br />        sty print_temp_<br />        beq @cont_1000 <br />@got1000:<br />        do_digit digit1000_hi,digit1000_lo<br />        ; value is now 000..999<br />        ldy #0<br />        sty print_temp_<br />        beq @cont_100  <br />@got100:<br />        do_digit digit100_hi,digit100_lo<br />        ; value is now 00..99<br />        txa<br />        jmp print_dec_00_99<br />@less_than_256:<br />        txa<br />        jmp print_dec<br />@print_dec16_helper: <br />         tya<br />         jsr print_digit<br />         txa<br />         sec<br />        rts <br /><br />; Prints A as 2-3 digit decimal value, NO space after.<br />; Preserved: Y<br />print_dec:<br />        ; Hundreds<br />        cmp #10   <br />        blt print_digit<br />        cmp #100<br />        blt print_dec_00_99<br />        ldx #'0'-1      ;DTE_CHARMAP<br />:       inx<br />        sbc #100<br />        bge :-  <br />        adc #100<br />        jsr print_char_x<br />        <br />        ; Tens<br />print_dec_00_99:<br />        sec<br />        ldx #'0'-1      ;DTE_CHARMAP<br />:       inx<br />        sbc #10<br />        bge :- <br />        adc #10<br />        jsr print_char_x<br />        ; Ones<br />print_digit:  <br />        ora #'0'        ;DTE_CHARMAP<br />        jmp print_char<br />        ; Print a single digit<br />print_char_x:<br />        pha  <br />        txa  <br />        jsr print_char<br />        pla<br />        rts</div><br /><br />This code from my CV2 retranslation patch just outputs a two-digit non-BCD decimal number (00-99).<br />Note that compared to the earlier posted code, this does one branch instructino per sbc-loop rather than two.<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">        sec<br />        ldy #'0'-1<br />        : iny<br />          sbc #10<br />          bcs :-<br />        adc #10+'0'<br />        pha   <br />         tya<br />         PutChar 1<br />        pla<br />        PutChar 2</div><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5043">Bisqwit</a> — Sun Jan 20, 2013 6:47 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2013-01-17T14:51:36-07:00</updated>
<published>2013-01-17T14:51:36-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9711&amp;p=106406#p106406</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9711&amp;p=106406#p106406"/>
<title type="html"><![CDATA[Re: Simulating decimal mode]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9711&amp;p=106406#p106406"><![CDATA[
Yeah, you saved me ONE byte !!<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Thu Jan 17, 2013 2:51 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Movax12]]></name></author>
<updated>2013-01-17T15:13:53-07:00</updated>
<published>2013-01-17T14:48:10-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9711&amp;p=106405#p106405</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9711&amp;p=106405#p106405"/>
<title type="html"><![CDATA[Re: Simulating decimal mode]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9711&amp;p=106405#p106405"><![CDATA[
I think this works.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">   ldy #$00<br />   sec<br />-  sbc #10<br />   bcc +<br />   iny            ;Y count tens<br />   bne -<br /><br />+   adc #$da<br />   sta StringBuffer+1.w,X   ;The units is written 1 tile forwad<br />   tya<br />   ora #$d0            ;Convert into tile #<br />   sta StringBuffer.w,X   ;Write the tens<br />    rts<br /></div><br /><br />It's a bit faster too.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4680">Movax12</a> — Thu Jan 17, 2013 2:48 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2013-01-17T10:40:21-07:00</updated>
<published>2013-01-17T10:40:21-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9711&amp;p=106385#p106385</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9711&amp;p=106385#p106385"/>
<title type="html"><![CDATA[Re: Simulating decimal mode]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9711&amp;p=106385#p106385"><![CDATA[
True, my binary -&gt; decimal routines takes a total of 23 bytes, and I don't think it's possible to shrink it further (it could be simplified if 0-9 digits were 0-9 in the pattern table instead of $d0-$d9 but I don't want to do that).<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">   ldy #$00<br />-   cmp #10<br />   bcc +<br />   sbc #10<br />   iny            ;Y count tens<br />   bne -<br /><br />+   ora #$d0<br />   sta StringBuffer+1.w,X   ;The units is written 1 tile forwad<br />   tya<br />   ora #$d0            ;Convert into tile #<br />   sta StringBuffer.w,X   ;Write the tens<br />   rts<br /></div><br /><br />EDIT : now I implemented it, I must thank you very much tepples, I could save quite a few precious bytes !<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Thu Jan 17, 2013 10:40 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2013-01-17T10:20:59-07:00</updated>
<published>2013-01-17T10:20:59-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9711&amp;p=106384#p106384</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9711&amp;p=106384#p106384"/>
<title type="html"><![CDATA[Re: Simulating decimal mode]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9711&amp;p=106384#p106384"><![CDATA[
<div class="quotetitle">Bregalad wrote:</div><div class="quotecontent"><br />Hell no, my game has to fit in 32kb of ROM, there is no way I'd waste 100 bytes like this !<br /></div><br />You do have to take into account how much the conversion routines can be simplified by the look-up table in order to calculate the actual cost of using it.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Thu Jan 17, 2013 10:20 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2013-01-17T10:12:23-07:00</updated>
<published>2013-01-17T10:12:23-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9711&amp;p=106383#p106383</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9711&amp;p=106383#p106383"/>
<title type="html"><![CDATA[Re: Simulating decimal mode]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9711&amp;p=106383#p106383"><![CDATA[
Well tepples, thank you for sharing your code, but just a little trought make me think that of course, counting it in base 100 will obviously make it more efficient than anything else.<br /><br />Also, when I think about it it's not that much weird, for example to add 1234 to the scrore, to have it like this :<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">.db 12, 32<br /></div><br /><br />instead of the standard BCD I have currently :<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">.db $12, $32<br /></div><br /><br />I mean, visually, it's almost the same, just without the $.<br /><br />@Movax12 : Hell no, my game has to fit in 32kb of ROM, there is no way I'd waste 100 bytes like this ! Anyways thank you for this suggetion, but convert to &quot;standard&quot; BCD won't be needed.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Thu Jan 17, 2013 10:12 am</p><hr />
]]></content>
</entry>
</feed>