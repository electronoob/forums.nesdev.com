<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - player movement</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">player movement</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=10&amp;t=1489">http://forums.nesdev.com/viewtopic.php?f=10&amp;t=1489</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lynxsolaris</b> [ Tue May 09, 2006 4:43 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>player movement</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Hello,
<br />
<br />
<br />I've been talking to Tokumaru a lot recently about the players movement inside screens/name tables.  I'd just like to get some other opinions on how others are handling this situation.  I'm currently working on a side scroller with two screens right now (starting small). I'd like to have my character start out at the beginning of NT0 and once the character reaches 128 (middle of the screen) stay there until it reaches 384 (in NT1) where the background will stop scrolling and the character will walk to the end of the screen.  I had done some testing with comparing when the hotspot my character was &gt; 128.  Once the character reached 128 I just stopped updating the sprites tiles on the screen but kept the animation going and the coordinates of the player on the screen updating.  This worked out okay except for when the player goes in the opposite direction.  The sprite tiles then update to the coordinates of the last position of the previous location on the screen.  So the player just "jumps"  to that coordinate (in the wrong direction).
<br />So anyway, what advice can you give me about keeping the character in the middle of the screen during movement except when they reach the ends of the screen?
<br />
<br />Thanks!

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Disch</b> [ Tue May 09, 2006 5:06 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />This is what I do for my games (not for NES, but it should still work for NES):
<br />
<br />Keep vars for X scroll, Y scroll, X,Y position of player -- in addition to Sprite data which is to be DMA'd
<br />
<br />C-esque psuedo code to give the idea:
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">X_scroll = X_player - 128;<br />if&#40;X_scroll &lt; X_min&#41;<br />&nbsp; X_scroll = X_min;<br />if&#40;X_scroll &gt; X_max&#41;<br />&nbsp; X_scroll = X_max;<br /><br />Sprite_X = X_Player - X_scroll;<br /><br />// ditto for Y<br /></div>
<br />
<br />All enemies and other sprites will need to be adjusted according to X and Y scroll of course, but that's something you'd have to do anyway.
<br />
<br />
<br />With your example of only having 2 screens, X_min would probably be 0, and X_max would proably be 256.
<br />
<br />The '128' here could probably be better adjusted to center the player better.  The actual value you should probably use would be:
<br />
<br />(256 - player_width) / 2

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lynxsolaris</b> [ Wed May 10, 2006 5:37 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Disch wrote:</div><div class="quotecontent"><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">X_scroll = X_player - 128;<br />if&#40;X_scroll &lt; X_min&#41;<br />&nbsp; X_scroll = X_min;<br />if&#40;X_scroll &gt; X_max&#41;<br />&nbsp; X_scroll = X_max;<br /><br />Sprite_X = X_Player - X_scroll;<br /><br />// ditto for Y<br /></div><br /></div>
<br />
<br />Hi Disch!
<br />
<br />Thanks for your response.  This maybe a dumb question but what exactly is your Sprite_X for?  The position of the sprite tile on the screen? (X value)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Wed May 10, 2006 5:40 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The position of the player's sprite(s). I do not mean to butt in, but that's basically what I told you... =)
<br />
<br />I guess Disch can explain it more directly, though...! =)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lynxsolaris</b> [ Wed May 10, 2006 6:07 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">The position of the player's sprite(s). I do not mean to butt in, but that's basically what I told you... =)<br /><br />I guess Disch can explain it more directly, though...! =)</div>
<br />
<br />Yep, you're right.  I believed you the whole time, just wanted to see what others were doing <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Wed May 10, 2006 6:14 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I'm kidding... You are more than right to ask more than one opinion... they just happend to coincide this time! =)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Wed May 10, 2006 8:48 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I agree with Dish.
<br />Your game engine should be able to totally sparate the position of the player in the level, and the part of the level that is shown on the screen, even if the second varies in function of the first.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Wed May 10, 2006 10:25 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I like to have scrolling totally separated from player movement. The physics has priority, meaning the game is technically playable, even if nothing is displayed on the screen.
<br />
<br />Then, when the graphics routines are added they have to "watch" the player, to implement scrolling and proper rendering.
<br />
<br />Of course I don't actually do it like this, it would be really boring to implement the physics with no display at all, but the concep is still the same in the end: the physics engine is completely independent from rendering, and the camera (scrolling position) acts based on player's movement, wich it constantly watches.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Wed May 10, 2006 11:02 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Guys, maybe you can tell me what you think about this.
<br />
<br />While talking to lynxsolaris, it was decided that he would use the following method for scrolling the levels:
<br />-the level map is stored in the form of consecutive columns, for easier rendering;
<br />-whenever the "camera" completes 16 pixels of movement (the size of a metatile), a new column of metatiles is to be rendered;
<br />-if the camera was moving left, the index of the column to render is X_scroll/CameraX/whatever divided by 16;
<br />-if the camera was moving right, the index is X_scroll divided by 16 + 16;
<br />-the destination address of the column in the name tables is also defined by these values, where the 5th bit defines the name table and the other 4 define the column;
<br />
<br />Now, if he was to use a formula (such as the one Disch suggested) for the location of the camera, that would mean the scroll is not directly manipulated, but is calculated from another value. What would you say is the best method to detect when the 16 pixels have gone by? Keeping a copy of the old X_scroll and comparing it to the new one? The bits after the first 4 would be the interesting ones to compare, as depending on wich (old or new) is greater we know if the camera moved left or right. I they are equal, there is no need to draw a new column.
<br />
<br />I'd do something like this. What do you think?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Wed May 10, 2006 6:28 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">What would you say is the best method to detect when the 16 pixels have gone by? Keeping a copy of the old X_scroll and comparing it to the new one? The bits after the first 4 would be the interesting ones to compare, as depending on wich (old or new) is greater we know if the camera moved left or right.</div>
<br />Easy enough:
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; lda oldXScroll<br />&nbsp; eor newXScroll<br />&nbsp; and #%11110000<br />&nbsp; beq @notChanged<br />&nbsp; jsr updateMetaTile<br />@notChanged:<br /></div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Wed May 10, 2006 7:29 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />But you also gotta check if the column to update is at the left or at the right. For that you'll have to check wich value (old or new) is bigger. So maybe it'd be better to make a direct comparison?
<br />
<br />I guess this could work:
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp;lda newX<br />&nbsp; &nbsp;and #$F0<br />&nbsp; &nbsp;pha<br />&nbsp; &nbsp;cmp oldX<br />&nbsp; &nbsp;beq NoUpdate<br />&nbsp; &nbsp;;set up column index<br />&nbsp; &nbsp;bcc UpdateLeft&nbsp; &nbsp;&nbsp; &nbsp;;skip addition if updating the leftmost column<br />&nbsp; &nbsp;;add 16 to the column index<br />UpdateLeft:<br />&nbsp; &nbsp;;render the column to a buffer<br />NoUpdate:<br />&nbsp; &nbsp;pla<br />&nbsp; &nbsp;sta oldX<br />&nbsp; &nbsp;;go on with logic</div>
<br />That was so so so quickly written... it may have errors...

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Thu May 11, 2006 11:03 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />And what about scrooling like in <em>Sonic</em> games? The camera is not "attached" to the player, it tries to follow the player, but it moves on it's own. I played Sonic for years, but until this day I can not properly describe the behaviour of that camera. Wich means I'd probably have trouble implementing it in case I wished to.
<br />
<br />I really like the camera in Sonic. It tries to give you the best view of the surroundings, without beeing one of those annoying cameras that try to predict your actions. Like when you are facing left and right when you turn right the camera moves a lot to the right to show what's in front of you. That's a bit annoying.
<br />
<br />I never played paying much attention to that, though. Maybe if I spend some time with the game and keep the camera in mind, I might figure something out.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Thu May 11, 2006 2:18 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">Like when you are facing left and right when you turn right the camera moves a lot to the right to show what's in front of you. That's a bit annoying.</div>
<br />It's also annoying in real life. Turn your head by 180 or even 90 degrees and you get a completely different scene.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Thu May 11, 2006 2:58 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">It's also annoying in real life. Turn your head by 180 or even 90 degrees and you get a completely different scene.</div>
<br />
<br />But in real life we're given separate controls over camera (head) and movement (legs). Think of the <em>Torchlight Trouble</em> level in <em>Donkey Kong Country</em>, where Squawks carries the lamp and switches which side of the screen is illuminated every time you change direction, complete with a bright flash as the lamp shines directly at the player during each switch. Playing that level requires minimization of direction changes, perhaps an intentional challenge from the designers.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Disch</b> [ Thu May 11, 2006 3:31 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">And what about scrooling like in <em>Sonic</em> games? The camera is not "attached" to the player</div>
<br />
<br />Sonic scrolling style is what I call "slack" scrolling.  It doesn't make the camera rigid to Sonic, rather, it keeps Sonic within a designated rectangle on the screen.  When Sonic leaves that rectangle, the screen scrolls in the appropriate direction to keep him in the rectangle.  This actually works out to be a little worse than "attached" or "rigid" scrolling (the method I previously described) in some situation, but better in others.
<br />
<br />Although the Sonic engine is tricky in that it allows Sonic to actually leave the rectangle if he's going too fast for the drawing to keep up.  Rather than doing what's intuitive and just slowing Sonic (and the whole game) down until the drawing can keep up.
<br />
<br />
<br />
<br />Sonic in paticular gives lots of vertical slack (Sonic can get high on the screen, or low on the screen before the screen will actually start scrolling), but doesn't give much horizontal slack (Sonic is stuck pretty close to center at all times).  This works well for flat areas, so that when you jump, the ground you're trying to jump to is less likely to scroll off the bottom of the screen.  However it ends up being worse for falling long distances or moving upwards long distances since you're very close to the screen edge in both cases.
<br />
<br />Some NES games have slack scrolling with lots of Horizontal slack which is just AWFUL.  Wai Wai World comes to mind -- you have to get right up to the edge of the screen before it starts scrolling -- making it very difficult to see what you're walking into.  I think Goonies 2 has a little more horizontal slack than I'd like, too... but it's not nearly as bad.
<br />
<br />
<br />Accomplishing slack scrolling is a bit more complex than rigid scrolling.  To give the idea (this could probably be improved/optimized a lot, especially with use of constants):
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">draw_x = player_x - scroll_x;<br />if&#40;draw_x &lt; &#40;centerscreen_x - x_slack&#41;&#41;<br />&nbsp; scroll_x = player_x - &#40;centerscreen_x - x_slack&#41;;<br />else if&#40;draw_x &gt; &#40;centerscreen_x + x_slack&#41;&#41;<br />&nbsp; scroll_x = player_x - &#40;centerscreen_x + x_slack&#41;;<br /><br />if&#40;scroll_x &lt; x_min&#41; scroll_x = x_min;<br />if&#40;scroll_x &gt; x_max&#41; scroll_x = x_max;<br /><br />//ditto for y<br /></div>
<br />
<br />
<br />I usually stick to rigid scrolling because it's easier.  Though really, I prefer a sort of "preemptive" scrolling.  Much like the type of scrolling tokumaru didn't like -- except the way I'd impliment it is that it would only scroll left when you MOVE left (rather than just face left).  So that when you're moving left, the screen gradually scrolls so that your player gets closer to the right-hand side, showing more of what's to your left.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>