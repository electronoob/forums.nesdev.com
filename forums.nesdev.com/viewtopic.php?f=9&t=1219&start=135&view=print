<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Reverse Engineering the CIC</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Reverse Engineering the CIC</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=9&amp;t=1219">http://forums.nesdev.com/viewtopic.php?f=9&amp;t=1219</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>10</strong> of <strong>27</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Zack S</b> [ Mon Oct 09, 2006 1:20 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Does anyone know which bits are compared and which ones are just space fillers? Is it every Nth bit or is it just randomly spaced?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>bunnyboy</b> [ Wed Nov 08, 2006 2:27 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />For those looking at the NES CIC rom, one possible Sharp cpu family is the <a href="http://www.datasheetarchive.com/search.php?q=sm5k3&amp;sType=part&amp;ExactDS=Starts" class="postlink">sm5k3/sm5k4/sm5k5</a>   
<br />
<br />For those looking at the Tengen CIC, I did a rom map using the latest picts from neviksti.   His pictures are at <a href="http://neviksti.com/CIC/" class="postlink">http://neviksti.com/CIC/</a> but dont pound the website unless you want to help!
<br />
<br />The Tengen chip appears to have 384 bytes of NOR rom.  The binary output is at <a href="http://www.nesmuseum.com/10nes/tengen2rom.txt" class="postlink">http://www.nesmuseum.com/10nes/tengen2rom.txt</a>  Next step for someone else to do would be convert to hex, then do something like a histogram and compare to common instruction sets.
<br />
<br />I still think comparing the different NES CIC chips will be the best way to figure everything out....

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>danimal</b> [ Fri Nov 17, 2006 1:39 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">bunnyboy wrote:</div><div class="quotecontent">For those looking at the NES CIC rom, one possible Sharp cpu family is the <a href="http://www.datasheetarchive.com/search.php?q=sm5k3&amp;sType=part&amp;ExactDS=Starts" class="postlink">sm5k3/sm5k4/sm5k5</a>   <br /><br />For those looking at the Tengen CIC, I did a rom map using the latest picts from neviksti.   His pictures are at <a href="http://neviksti.com/CIC/" class="postlink">http://neviksti.com/CIC/</a> but dont pound the website unless you want to help!<br /><br />The Tengen chip appears to have 384 bytes of NOR rom.  The binary output is at <a href="http://www.nesmuseum.com/10nes/tengen2rom.txt" class="postlink">http://www.nesmuseum.com/10nes/tengen2rom.txt</a>  Next step for someone else to do would be convert to hex, then do something like a histogram and compare to common instruction sets.<br /><br />I still think comparing the different NES CIC chips will be the best way to <br />figure everything out....</div>
<br />
<br />This is the requested tasks done, except for instruction set comparison.
<br />
<br /><a href="http://www.geocities.com/kinglag/nesdev/" class="postlink">http://www.geocities.com/kinglag/nesdev/</a>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>loopy</b> [ Sun Nov 19, 2006 3:56 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>One small step</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />RE'd logic cells in the CIC:
<br /><a href="http://home.comcast.net/~olimar/NES/CIC/" class="postlink">http://home.comcast.net/~olimar/NES/CIC/</a>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>kevtris</b> [ Wed Nov 22, 2006 12:03 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>kevtris</b> [ Wed Nov 22, 2006 12:09 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>dvdmth</b> [ Wed Nov 22, 2006 11:45 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Very interesting!  I was beginning to wonder if any significant advances would ever be made, and it looks like it is.
<br />
<br />The nice thing about the new dumps is that we can now see very clearly when bits of data are sent between the two chips, even when both transmitted bits are zero.  The Tengen chip's PC consistently points to $5E-61 during each transmission, except for the initialization period, where it points to $1C-1F.
<br />
<br />Any known instruction sets with opcode $Cxx indicating "jump to $xx" and $Exx indicating "conditional jump to $xx"?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Quietust</b> [ Wed Nov 22, 2006 11:52 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Known opcodes so far:
<br />110xxxxxxxxx - jump to address 'x', unconditional
<br />111xxxxxxxxx - jump to address 'x', conditional
<br />
<br />Addresses are actually 9 bits - the chip is capable of addressing 512 words, but it only uses the lower 256.
<br />
<br />Speculation:
<br />010aaaaadddd - maybe loads data 'd' into memory 'a' and register
<br />
<br />Further up in the thread, it was deduced that the memory was 128 bits divided into 32 4-bit words. After every '010aaaaadddd' instruction, the 'register' debug output shows the same 'd' value.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bananmos</b> [ Wed Nov 22, 2006 3:29 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />In lack of any constructive info to add, I just need to say this: wow! You guys are really great for having come to this point. Seems like this riddle is about to be solved at last... can't wait to see the algorithm documented! <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Quietust</b> [ Wed Nov 22, 2006 7:52 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I've just posted some text dumps of kevtris's .BIN files at the following URL:
<br />
<br />(URL no longer available)
<br />
<br />lock1.txt.bz2 and lock2.txt.bz2 are just direct dumps of the .BIN files, with the bits rearranged into something more legible
<br />
<br />tengen.txt.bz2 is a straight text dump of the binary ROM data.
<br />
<br />lock1b.txt.bz2 and lock2b.txt.bz2 contain abbreviated dumps of the .BIN files (keeping only every 4th cycle, and dropping the 4 'control signals' which don't appear to reveal anything useful) with the ROM data merged in on each line.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Quietust</b> [ Thu Nov 23, 2006 1:40 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I've uncovered a bit more useful information. I traced pin 3 down to 4 more selectors, each of which connect to the upper signal on a bit of RAM. I then traced the selector connected to the uppermost bit of RAM out to pin 5. A bit of extra tracing linked the lower signal on each RAM bit to a flip-flop input (i.e. the lower signals are outputs), meaning the test pins are showing the memory <em>inputs</em>, or what appears to be ALU output.
<br />
<br />Also, 2 of the 'control' signals have been figured out - T0 is read/write, and T1 is memory enable (much like the 6502's R/W and M2 signals).
<br />
<br />Using this, I attempted to build a list of instructions in relationship to how they access memory. The first attempt did not yield a useful connection, but then I got the idea of associating the 4 cycles worth of control signals (as well as data) with the <strong>previous</strong> code word. After doing this, I got a very clear picture of how the opcodes on this chip are arranged.
<br />
<br />See the file "io.txt" on my site (linked above) for a mapping of instruction data to memory access behavior - 'R' means read, 'W' means write, and 'Z' means it doesn't appear to access memory at all (perhaps register only). Lock*d.txt takes the above mentioned time shift (pipelining, perhaps?) into account, and indicates what sort of memory access is taking place on each instruction.
<br />
<br />From this, it would appear that opcodes are 5 bits wide, leaving 7 bits for operands.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Zack S</b> [ Sun Nov 26, 2006 6:40 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />With all the recent finds I now have a pretty good idea of how exactly the CIC works.
<br />
<br />1st the lock sends 4 bits. Theese bits are read at approx 1D on the tengen chip. As said before this tells the Key what stream to use.
<br />
<br />After that the Key alternates between exchanging a random number of bits with the lock (approx. address 5F), and then a random dead space. 
<br />
<br />Kevtris if you create more logs of the Tengen Debug data I will be more than happy to process and post them. I would prefer some rather long streams since logging mostly dead space tends to cut down the file to about 1/100th it's size.
<br />
<br />The file has more details on the exact timings etc.
<br /><!-- m --><a class="postlink" href="http://www.geocities.com/rndlogic/Bit_Transfers.txt">http://www.geocities.com/rndlogic/Bit_Transfers.txt</a><!-- m -->
<br />
<br />Enjoy

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>dvdmth</b> [ Sun Nov 26, 2006 10:09 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />My observations thus far:
<br />
<br />The main loop for transmissions starts at address $54 and runs through $6E.  When executing the instruction at $6E, the 4-bit data output indicates how many iterations are left for the current transmission.  The iterator counts up, with a value of zero indicating no more bits remaining to transfer.  Thus, the number of bits needed to transfer is known in advance before the actual transmission takes place.  Since the iterator is four bits, no more than 16 bits can be transferred in each direction.
<br />
<br />Between transmissions, the code beyond $6E executes and seems to perform some sort of complex arithmetic operation (it's not just idle time - real genuine work is taking place here).  I noticed one loop (at $91-94) that seems to be adding 9 to a series of values (presumably in memory).  There is one "time-killer" loop at $9D-9E which appears to burn eight instructions worth of time, perhaps a sign that the Tengen chip is able to perform its calculations faster than Nintendo's CIC.
<br />
<br />During each transmission, it is possible to see what the Tengen chip is going to send to the master, as well as what the master is about to send the Tengen chip (in other words, the Tengen chip already knows what it's supposed to get).  There is a jump instruction pointing to itself (an infinite loop) at $5B (with a branch-over preceding it) that is presumably hit when the result from the master doesn't match.
<br />
<br />Here's how to see what bits are about to be transmitted on each iteration through the loop.  At instruction $5C (taking into account the pipeline behavior Q mentioned earlier), bit 0 of the output data matches the value the master CIC is going to send.  At $5D, bit 0 of the output data matches the value the Tengen chip will send.  Here's some examples:
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">Time&nbsp; $5C $5D I O<br />198&nbsp; &nbsp; 3&nbsp; &nbsp;8&nbsp; 1 0<br />277&nbsp; &nbsp; 9&nbsp; &nbsp;9&nbsp; 1 1<br />356&nbsp; &nbsp; 5&nbsp; &nbsp;5&nbsp; 1 1<br />435&nbsp; &nbsp; 2&nbsp; &nbsp;2&nbsp; 0 0<br />514&nbsp; &nbsp;15&nbsp; &nbsp;1&nbsp; 1 1<br />593&nbsp; &nbsp; 2&nbsp; &nbsp;2&nbsp; 0 0<br />672&nbsp; &nbsp; 0&nbsp; &nbsp;9&nbsp; 0 1<br />751&nbsp; &nbsp;15&nbsp; 15&nbsp; 1 1<br />830&nbsp; &nbsp; 9&nbsp; &nbsp;9&nbsp; 1 1<br />909&nbsp; &nbsp; 9&nbsp; &nbsp;9&nbsp; 1 1<br />988&nbsp; &nbsp; 0&nbsp; &nbsp;0&nbsp; 0 0<br />1067&nbsp; &nbsp;9&nbsp; 13&nbsp; 1 1<br />1146&nbsp; &nbsp;9&nbsp; 15&nbsp; 1 1<br />1225&nbsp; &nbsp;9&nbsp; &nbsp;9&nbsp; 1 1<br />1304&nbsp; &nbsp;7&nbsp; &nbsp;7&nbsp; 1 1<br />2384&nbsp; 15&nbsp; &nbsp;0&nbsp; 1 0<br />2463&nbsp; 10&nbsp; 11&nbsp; 0 1</div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>dvdmth</b> [ Mon Nov 27, 2006 8:39 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Here's a look at the data stream with my above findings.  In each pair of hex digits, the left digit represents the transmission from lock to key, and the right digit represents the transmission from key to lock.  In both cases, bit 0 is the bit actually transferred, with the other three bits being visible only through the Tengen chip's test mode.
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">198&nbsp; &nbsp; &nbsp;38 99 55 22 F1 22 09 FF 99 11 00 9D 9F 99 77<br />2384&nbsp; &nbsp; F0 AB F6 4F 4F EC<br />4849&nbsp; &nbsp; 83 8C C4 E5 14 33 CF 4D<br />6746&nbsp; &nbsp; AF EC 4F 16 CA F5 64 6B C2<br />8458&nbsp; &nbsp; B5 ED 2C FF AD 8A 2E B9<br />10601&nbsp; &nbsp;22 87 FE AB C5 37 19 01 29 32 E5 65 DE 6C 17<br />13603&nbsp; &nbsp;50<br />15283&nbsp; &nbsp;7F 0B 67 86 9D ED 45 1B 97<br />17163&nbsp; &nbsp;42 B5 7F 42 E0 2A 0E D2 4B 02 17 92 08 00<br />20764&nbsp; &nbsp;A6 8E<br />22589&nbsp; &nbsp;95 7F 9A E2 A2 61 5E FD<br />25404&nbsp; &nbsp;6F CB 02 38 57 3C 21 C4 38<br />26888&nbsp; &nbsp;A6 36 62 C4 2A AA F3 D6 72 F6 35 2E 65 6E<br />29475&nbsp; &nbsp;58 6B 74 A1 5C 9A BE B9 08 DD DF E7 00 42<br />30934&nbsp; &nbsp;DD 0B 0F 93 1D 2E 59 C0 32 33 29 61 61 BA 25<br />32550&nbsp; &nbsp;E6 23 D5<br />34124&nbsp; &nbsp;DD 52 B2 77 A9<br />35940&nbsp; &nbsp;D3 D7 70 21 26 DA 38 D1 A6 FC AF 0B EA 08<br />38881&nbsp; &nbsp;B6 4B D6 72<br />39802&nbsp; &nbsp;0B 32 91 15 C4 EF<br />42507&nbsp; &nbsp;68 CB B8<br />44165&nbsp; &nbsp;16 28 BE 5C 91 E6 C1 2D<br />45888&nbsp; &nbsp;28 EE 83 3F 70 56 7F E4 3B E5<br />48107&nbsp; &nbsp;4F E8 B6 CC C8 C7 58 3B 4E 10 4F C1 29 CE F5<br />50773&nbsp; &nbsp;13 DC 48 EC A7 7A 7D 76<br />52340&nbsp; &nbsp;4A 3B 94 01 F9 5A F3 CB 96 A2 E7 3A A3 BC<br />55191&nbsp; &nbsp;5C 36<br />55948&nbsp; &nbsp;4E 2B<br />57035&nbsp; &nbsp;1B B9 ED EC 8B 94 6C D0 8C 56 06<br />59583&nbsp; &nbsp;97 BD D3 96<br />61008&nbsp; &nbsp;5D 97<br />62341&nbsp; &nbsp;31 61 DD 71 49 09 95<br />63907&nbsp; &nbsp;FE 7F 70 D4<br />65488&nbsp; &nbsp;57 03 A5 46 93<br />66746&nbsp; &nbsp;81 7A 71 D2 BB F6 FC E4 1C D0 32 43 90<br />69674&nbsp; &nbsp;FD E0 22 4F 51 EE<br />72313&nbsp; &nbsp;29 27 7C C6 F1 83 89 61 AE 1D DF 9D 73 84 66<br />74343&nbsp; &nbsp;D3<br />75579&nbsp; &nbsp;71 92 FF</div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>kevtris</b> [ Mon Nov 27, 2006 10:36 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>10</strong> of <strong>27</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>