<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Reimplementing 6502 syntax in ca65</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Reimplementing 6502 syntax in ca65</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=10701">http://forums.nesdev.com/viewtopic.php?f=2&amp;t=10701</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>3</strong> of <strong>4</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Mon Nov 25, 2013 7:02 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Reimplementing 6502 syntax in ca65</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />A lot of the macros in this pack already make a new local label. So long as the &quot;guessed address size&quot; of an expression like <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">foo + 3</tt> is reasonable (and constant enough to get used in .if), it should still work.<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">.importzp foo<br />argvalue = foo + 3<br />.if .addrsize(argvalue) = NONE02_SIZE_ZEROPAGE<br />&nbsp; .out .sprintf(&quot;%d&quot;, .addrsize(argvalue))<br />.endif<br /></div><br />As for implementing new ISAs directly in instr.c: There might be little resistance to implementing SPC700, but Z80 and 68000 might meet more. Working in macros also allows more experimentation with the syntax because no waiting for the assembler itself to compile and link.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Movax12</b> [ Mon Nov 25, 2013 11:25 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Reimplementing 6502 syntax in ca65</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Actually, you are correct, it does guess well enough, I think. I got things working with my build environment.<br /><br />Updated source: <!-- m --><a class="postlink" href="https://github.com/Movax12/cc65/tree/master/src/ca65">https://github.com/Movax12/cc65/tree/master/src/ca65</a><!-- m --><br /><br />Note: .addrsize() will return a value from 1 to 4 for addressing size (number of bytes needed for the address). It will return 0 for unknown rather than error out. Makes things easier.<br /><br />I edited the ca65none.s: All labels are now cheap locals. I used <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">.feature ubiquitous_idents</tt> due to the fact that ca65 complains about the use of a forced <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">:absolute</tt> in my code (says not valid for cpu type). Since you have defined all the instructions, it won't matter in this case. (main.c has the fix for ubiquitous_idents).<br /><br />Please let me know if anything doesn't work.

		
			<br clear="all" /><br />

			<table class="tablebg" width="100%" cellspacing="1">
			<tr>
				<td><b class="genmed">Attachments: </b></td>
			</tr>
			
				<tr>
					<td>
			<span class="genmed">
				<img src="./styles/subsilver2/imageset/icon_topic_attach.gif" width="14" height="18" alt="" title="" /> 
				<a href="./download/file.php?id=970">ca65none.s.txt</a> [11.93 KiB]
			</span><br />
			<span class="gensmall">Downloaded 25 times</span>
		

		<br />
	</td>
				</tr>
			
			</table>
		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Mon Nov 25, 2013 1:40 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Reimplementing 6502 syntax in ca65</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">So long as the &quot;guessed address size&quot; of an expression like <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">foo + 3</tt> is reasonable (and constant enough to get used in .if), it should still work.</div><br />As I understand it, if &quot;foo&quot; is an imported zero page variable, ca65 will assume that &quot;foo + 3&quot; fits in zero page as well. If it doesn't, it will give a fatal &quot;Range error&quot; at link time. You may want to duplicate this behavior with an assert. (I assume Movax's .addrsize returns 1 for a symbol constructed from the expression &quot;foo + 3&quot;.)<br /><br />I.e.<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">; foo.s<br />.importzp foo<br />lda foo + 3<br /><br />; bar.s<br />.exportzp foo = 255<br /><br />; &gt; cl65 -t none foo.s bar.s<br />ld65.exe: Error: Range error in module `foo.s', line 3<br /></div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Movax12</b> [ Mon Nov 25, 2013 11:40 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Reimplementing 6502 syntax in ca65</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">thefox wrote:</div><div class="quotecontent">..ca65 will assume that &quot;foo + 3&quot; fits in zero page as well. If it doesn't, it will give a fatal &quot;Range error&quot; at link time. You may want to duplicate this behavior with an assert.</div><br /><br />I tested that scenario. There is no need for an assert, ca65 still complains with &quot;Range error&quot;. I suppose since it is out of range for the <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">.byte</tt> statement. What needs to be added, however is an assert for when a forward reference is made:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp; .if .addrsize(@argvalue) = 1<br />&nbsp; &nbsp; &nbsp; .byte $04 | (inst), @argvalue<br />&nbsp; &nbsp; .else<br />&nbsp; &nbsp; &nbsp; .byte $0C | (inst)<br />&nbsp; &nbsp; &nbsp; .word @argvalue<br />&nbsp; &nbsp; &nbsp; .assert @argvalue &gt;= $100, warning, &quot;zeropage addressing could have been used here&quot;<br />&nbsp; &nbsp; .endif<br /></div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Tue Nov 26, 2013 12:26 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Reimplementing 6502 syntax in ca65</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I love how attempts are being made to closely duplicate ca65's behavior with its macros. I guess next you'll need to reimplement its macro package with itself. ca65inception.s.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Tue Nov 26, 2013 12:33 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Reimplementing 6502 syntax in ca65</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I never metacircular evaluator I didn't like!

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Tue Nov 26, 2013 1:31 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Reimplementing 6502 syntax in ca65</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">blargg wrote:</div><div class="quotecontent">I love how attempts are being made to closely duplicate ca65's behavior with its macros. I guess next you'll need to reimplement its macro package with itself. ca65inception.s.</div><br />It would also be funny if somebody wrote a compiler that generates code as ca65 macros. Could even be quite useful, because the ca65 macro language isn't always that nice to use.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Tue Nov 26, 2013 8:01 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>spcc65</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">thefox wrote:</div><div class="quotecontent">It would also be funny if somebody wrote a compiler that generates code as ca65 macros.</div><br />If it turns out that the SPC700 is as close to the 6502 as I think it is, the second iteration of this macro pack may turn out to be just that: something you can stick at the top of cc65-generated assembly files to turn cc65 into an SPC700 compiler.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Tue Nov 26, 2013 12:10 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Reimplementing 6502 syntax in ca65</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Way back Anti-Resonance pointed me to another chip with SPC-700's same CPU core. I had to <a href="https://www.google.com/search?complete=0&amp;q=tset1+push+psw+pop+mov+addw#complete=0&amp;q=%22tset1%22+push+psw+pop+mov+addw+filetype:pdf" class="postlink">re-find it again</a>. It's the <a href="https://www.google.com/search?complete=0&amp;q=tset1+push+psw+pop+mov+addw#complete=0&amp;q=%22GMS800%22+%22psw%22+filetype:pdf" class="postlink">GMS800 series</a>. For example, the <a href="http://datasheet.eeworld.com.cn/pdf/HYNIX/118812_GMS81C3004.pdf" class="postlink">GMS81C3004</a> (page 17 onward) should be familiar. Note how the absolute addressing mode has a ! prefix (pages 84-89). This might help as other references for the instruction syntax.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Tue Nov 26, 2013 6:26 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: spcc65</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent"><div class="quotetitle">thefox wrote:</div><div class="quotecontent">It would also be funny if somebody wrote a compiler that generates code as ca65 macros.</div><br />If it turns out that the SPC700 is as close to the 6502 as I think it is, the second iteration of this macro pack may turn out to be just that: something you can stick at the top of cc65-generated assembly files to turn cc65 into an SPC700 compiler.</div><br />Not sure if you misunderstood me, or I'm misunderstanding you, but what I meant was a compiler that would take stuff in whatever language and output a program as ca65 macros (to be ran at compile time).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Movax12</b> [ Tue Nov 26, 2013 6:43 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: spcc65</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">thefox wrote:</div><div class="quotecontent">take stuff in whatever language and output a program as ca65 macros (to be ran at compile time).</div><br /><br />Macros ultimately output data or code. What would be be the benefit of using them as an intermediate step? Example?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Tue Nov 26, 2013 6:50 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Reimplementing 6502 syntax in ca65</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Write a language parser for X in preferred language, output as ca65 macros, then program in X using ca65 and these macros.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Movax12</b> [ Tue Nov 26, 2013 7:59 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Reimplementing 6502 syntax in ca65</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I think I get it. Sounds like a nice way to implement high level functions, but could be difficult, since macros can't properly loop, just simulate looping with recursion.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Tue Nov 26, 2013 8:09 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Reimplementing 6502 syntax in ca65</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Movax12 wrote:</div><div class="quotecontent">macros can't properly loop, just simulate looping with recursion.</div><br />Is this recursion, or is it looping?<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">; Language=Scheme<br />; Multiplies the factorial of x by acc.<br />(define (factorial* x acc)<br />&nbsp; (if (zero? x)<br />&nbsp; &nbsp; &nbsp; acc<br />&nbsp; &nbsp; &nbsp; (factorial* (- x 1) (* x acc)) ))<br />; Calculates the factorial of a nonnegative integer.<br />(define (factorial acc) (factorial* x 1))<br /></div><br />If ca65 doesn't correctly optimize macro tail recursion, on the other hand...

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Movax12</b> [ Tue Nov 26, 2013 8:17 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Reimplementing 6502 syntax in ca65</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I don't know Scheme, but in that case I would guess it is actual looping with a variable stack that allows for recursive algorithms. Macros just keep expanding and executing from top to bottom.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>3</strong> of <strong>4</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>