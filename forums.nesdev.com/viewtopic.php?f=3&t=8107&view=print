<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - SHX/SHY</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">SHX/SHY</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=3&amp;t=8107">http://forums.nesdev.com/viewtopic.php?f=3&amp;t=8107</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>beannaich</b> [ Thu Sep 08, 2011 10:16 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>SHX/SHY</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Hello all,
<br />
<br />Today I finished implementing all the unofficial op-codes, and all of them pass blargg's CPU test roms, except for two. SHX and SHY ($9E and $9C respectively). I have searched around the internet for the expected behavior of these two codes, and documents varied but most agreed that they "take the high order byte from the address, add 1 then AND that with X or Y and store it at the address plus Y or X". But when I try implementing the instructions in this fashion, they don't pass the test roms. Here is my current implementation:
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">private void OpShx&#40;&#41;<br />&#123;<br />&nbsp; &nbsp; var data = &#40;&#40;this.addrAddr &gt;&gt; 8&#41; + 1&#41; &amp; 0xFF;<br /><br />&nbsp; &nbsp; this.poke&#40;this.x &amp; data&#41;;<br />&#125;<br />private void OpShy&#40;&#41;<br />&#123;<br />&nbsp; &nbsp; var data = &#40;&#40;this.addrAddr &gt;&gt; 8&#41; + 1&#41; &amp; 0xFF;<br /><br />&nbsp; &nbsp; this.poke&#40;this.y &amp; data&#41;;<br />&#125;</div>
<br />
<br />In that code, 'addrAddr' contains the address BEFORE adding X or Y for absolute indexed addressing (I do it this way to be able to check for page crossing). The method 'poke' is basically just an accessor for the memory write function, and always stores the data passed to it at the effective address of the last addressing mode.
<br />
<br />So for example, SHX $8000 would take the value of (X &amp; $81) and store it at $807F (Assuming Y contains $7F). Is this the correct behavior? Is this code known to not have a reliable behavior, or should I just stop worrying about this one? <img src="./images/smilies/icon_razz.gif" alt=":P" title="Razz" />
<br />
<br />Help greatly appreciated as always!

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>NickMass</b> [ Thu Sep 08, 2011 11:29 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />This is what I had to do to get these opcodes passing Blarggs test.
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">case OpInfo.IllInstrSHX:<br />&nbsp; value = &#40;RegX &amp; &#40;&#40;addr &gt;&gt; 8&#41; + 1&#41;&#41; &amp; 0xFF;<br />&nbsp; if&#40;&#40;RegY + Read&#40;opAddr + 1&#41;&#41; &lt;= 0xFF&#41;<br />&nbsp; &nbsp; Write&#40;addr, value&#41;;<br />&nbsp; break;<br />case OpInfo.IllInstrSHY:<br />&nbsp; value = &#40;RegY &amp; &#40;&#40;addr &gt;&gt; 8&#41; + 1&#41;&#41; &amp; 0xFF;<br />&nbsp; if&#40;&#40;RegX + Read&#40;opAddr + 1&#41;&#41; &lt;= 0xFF&#41;<br />&nbsp; &nbsp; Write&#40;addr, value&#41;;<br />&nbsp; break;</div>
<br />
<br />The condition on the write is from a topic somewhere on these forums, and I seem to recall Blargg saying he was considering removing these opcodes from a future revision of his tests because they are so unstable.
<br />
<br /><strong>Edit:</strong> Found the thread where they were discussed, they were referred to as SYA and SXA so it didn't turn up immediately. <a href="http://nesdev.com/bbs/viewtopic.php?t=3831&amp;start=0" class="postlink">http://nesdev.com/bbs/viewtopic.php?t=3831&amp;start=0</a>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Fri Sep 09, 2011 4:23 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Yeah, if an unofficial opcode's not on <a href="http://wiki.nesdev.com/w/index.php/Programming_with_unofficial_opcodes" class="postlink">this list</a>, then it's either A. unstable due to reading and writing the 6502's internal "special bus" in the same cycle, B. one of the numerous SKB/SKWs that I neglected to mention, or C. otherwise of extremely limited applicability.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dwedit</b> [ Fri Sep 09, 2011 9:21 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />So are all the unofficial Read-Modify-Write instructions safe?  Referring to the instructions which combine the effects of the Read-Modify-Write instruction with the other ALU instruction that appears in the same 32 byte area.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>beannaich</b> [ Fri Sep 09, 2011 10:13 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Dwedit wrote:</div><div class="quotecontent">So are all the unofficial Read-Modify-Write instructions safe?  Referring to the instructions which combine the effects of the Read-Modify-Write instruction with the other ALU instruction that appears in the same 32 byte area.</div>
<br />
<br />Just glancing over my CPU code, I can't seem to find any RMW instructions that have been stigmatized as 'unsafe', I could obviously be wrong though!
<br />
<br />I'm just going to go ahead and not emulate these instructions until their precise behavior is reverse-engineered. I don't see many games using these instructions anyway, given their unpredictable nature.
<br />
<br />Thanks anyways guys! <img src="./images/smilies/icon_razz.gif" alt=":P" title="Razz" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Zepper</b> [ Fri Sep 09, 2011 2:27 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Is there <em>even</em> a game that uses unofficial opcodes? I'm not counting NOPs.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dwedit</b> [ Fri Sep 09, 2011 3:10 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Super Cars uses SLO.  Puzznic uses a two-byte nop.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Zepper</b> [ Sat Sep 10, 2011 8:13 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Dwedit wrote:</div><div class="quotecontent">Super Cars uses SLO.  Puzznic uses a two-byte nop.</div>
<br />
<br />Sorry to ask, but are you sure it's not a bad dump? I've found a case in a game (from those XXXX-in-1 carts) that <em>should be</em> an unofficial opcode; the original version <strong>never used it</strong>.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sat Sep 10, 2011 8:29 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />What is the CRC32 of Puzznic and Super Cars versions with the unofficial opcode?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Sat Sep 10, 2011 9:31 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Dwedit wrote:</div><div class="quotecontent">Super Cars uses SLO.</div>
<br />Seems to be using LAX as well (being the usual curious me, checked in Nintendulator). I also checked that it seems to be actually using the value loaded into X by LAX, so I doubt it's a bad dump.
<br />
<br />I didn't notice SLO being used anywhere, though, but it was hard to test very far with Nintendulator flooding the Debug Information window with "Invalid opcode $B3 (LAX) encountered at $F872" when the invalid opcode logging was turned on...
<br />
<br />Puzznic's two byte NOP doesn't seem to be serving any purpose as it isn't in the middle of timed code or anything (besides, it's a NOP with an immediate parameter, so it takes the same amount of cycles as a normal NOP). My money is on programming error that went unnoticed as it didn't cause any real harm.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>beannaich</b> [ Thu Sep 15, 2011 9:36 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I've been doing some digging around with these unofficial codes, and have noticed some pretty interesting stuff! I'm sure it's been discussed elsewhere but I want to bring this up again because there are a few exceptions I can't figure out.
<br />
<br />Take ASL and ORA for example. ASL has a 'code' of $02 and a mask of $E2. where (mem[pc] &amp; mask) == code. This also results in some extra codes that don't seem to belong at first glance. But when you consider the 'unofficial' code ASO/SLO, these start to make sense.
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">ASL Code = $02 Mask = $E2 // %000. ..1.<br />ORA Code = $01 Mask = $E1 // %000. ...1<br /><br />0x01, // ORA<br />0x03, // ASL + ORA = ASO<br />0x05, // ORA<br />0x06, // ASL<br />0x07, // ASL + ORA = ASO<br />0x09, // ORA<br />0x0A, // ASL<br />0x0D, // ORA<br />0x0E, // ASL<br />0x0F, // ASL + ORA = ASO<br />0x11, // ORA<br />0x13, // ASL + ORA = ASO<br />0x15, // ORA<br />0x16, // ASL<br />0x17, // ASL + ORA = ASO<br />0x19, // ORA<br />0x1B, // ASL + ORA = ASO<br />0x1D, // ORA<br />0x1E, // ASL<br />0x1F, // ASL + ORA = ASO</div><br /><br />Some codes decode as both ASL and ORA, and the PLA fires off both lines where these codes are decoded. But there are a few exceptions, some I have tried to come up with explanations for, one I definitely can't for the moment being:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">Exceptions:<br />0x02, // HLT<br />0x12, // HLT<br />0x1A, // NOP -&gt; ASL &#40;implied&#41;?<br />0x0B, // ANC</div>
<br />
<br />The exception I can't seem to work out is the 'ANC' instruction. Neither ASL or ORA performs a logical AND? The HLT (0x02) seems to cause the processor to stop because the T-State in the CPU is never reset to 1 because the CPU can't write back to an immediate address? That would cause the CPU to not be able to fetch the next instruction and not respond to IRQ/NMI. The 'NOP' (0x1A) Would appear to just be an ASL instruction in implied mode, I figured this because it's size is only 1 byte, but it fits in the scheme defined <a href="http://www.llx.com/~nparker/a2/opcodes.html" class="postlink">http://www.llx.com/~nparker/a2/opcodes.html</a>. The 1 byte size seems to suggest it's in implied mode and therefor CAN'T do anything, so it appears to behave like a NOP.
<br />
<br />But the question remains.. Why ANC? I can't figure it out and it's driving me nuts!

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Fri Sep 16, 2011 12:12 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">beannaich wrote:</div><div class="quotecontent">The HLT (0x02) seems to cause the processor to stop because the T-State in the CPU is never reset to 1 because the CPU can't write back to an immediate address? That would cause the CPU to not be able to fetch the next instruction and not respond to IRQ/NMI. <br />But the question remains.. Why ANC? I can't figure it out and it's driving me nuts!</div>
<br />
<br />Because the 2A03 is an NMOS CPU, it has weak (resistors) pull-ups and strong (transistor) pull-downs. If two different things pull down at the same time, you get a logical and.
<br />
<br />
<br />p.s. you might find the following rearrangement of the instruction table informative:
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp; &nbsp; &nbsp;00&nbsp; &nbsp; &nbsp; &nbsp;04&nbsp; &nbsp; &nbsp; &nbsp;08&nbsp; &nbsp; &nbsp; &nbsp;0C&nbsp; &nbsp; &nbsp; &nbsp;10&nbsp; &nbsp; &nbsp; &nbsp; 14&nbsp; &nbsp; &nbsp; &nbsp; 18&nbsp; &nbsp; &nbsp; &nbsp; 1C<br />00 BRK immed|nop zpg|PHP impl |nop abs|BPL rel&nbsp; |nop zpg,X|CLC impl |nop abs,X&nbsp; \<br />20 JSR abs&nbsp; |BIT zpg|PLP impl |BIT abs|BMI rel&nbsp; |nop zpg,X|SEC impl |nop abs,X&nbsp; &nbsp;\ program flow<br />40 RTI impl |nop zpg|PHA impl |JMP abs|BVC rel&nbsp; |nop zpg,X|CLI impl |nop abs,X&nbsp; &nbsp;/<br />60 RTS impl |nop zpg|PLA impl |JMP ind|BVS rel&nbsp; |nop zpx,X|SEI impl |nop abs,X&nbsp; /<br />80 nop immed|STY zpg|DEY impl |STY abs|BCC rel&nbsp; |STY zpg,X|TYA impl |sya abs,X&nbsp; store Y<br />A0 LDY immed|LDY zpg|TAY impl |LDY abs|BCS rel&nbsp; |LDY zpg,X|CLV impl |LDY abs,X&nbsp; load Y<br />C0 CPY immed|CPY zpg|INY impl |CPY abs|BNE rel&nbsp; |nop zpg,X|CLD impl |nop abs,X&nbsp; compare Y<br />E0 CPX immed|CPX zpg|INX impl |CPX abs|BEQ rel&nbsp; |nop zpg,X|SED impl |nop abs,X&nbsp; compare X<br />02 kil&nbsp; &nbsp; &nbsp; |ASL zpg|ASL A&nbsp; &nbsp; |ASL abs|kil&nbsp; &nbsp; &nbsp; |ASL zpg,X|nop impl |ASL abs,X&nbsp; arithmetic shift left<br />22 kil&nbsp; &nbsp; &nbsp; |ROL zpg|ROL A&nbsp; &nbsp; |ROL abs|kil&nbsp; &nbsp; &nbsp; |ROL zpg,X|nop impl |ROL abs,X&nbsp; rotate left through carry<br />42 kil&nbsp; &nbsp; &nbsp; |LSR zpg|LSR A&nbsp; &nbsp; |LSR abs|kil&nbsp; &nbsp; &nbsp; |LSR zpg,X|nop impl |LSR abs,X&nbsp; logical shirt right<br />62 kil&nbsp; &nbsp; &nbsp; |ROR zpg|ROR A&nbsp; &nbsp; |ROR abs|kil&nbsp; &nbsp; &nbsp; |ROR zpg,X|nop impl |ROR abs,X&nbsp; rotate right through carry<br />82 nop imm&nbsp; |STX zpg|TXA impl |STX abs|kil&nbsp; &nbsp; &nbsp; |STX zpg,Y|TXS impl |sxa abs,Y&nbsp; store X<br />A2 LDX imm&nbsp; |LDX zpg|TAX impl |LDX abs|kil&nbsp; &nbsp; &nbsp; |LDX zpg,Y|TSX impl |LDX abs,Y&nbsp; load X<br />C2 nop imm&nbsp; |DEC zpg|DEX impl |DEC abs|kil&nbsp; &nbsp; &nbsp; |DEC zpg,X|nop impl |DEC abs,X&nbsp; decrement<br />E2 nop imm&nbsp; |INC zpg|NOP impl |INC abs|kil&nbsp; &nbsp; &nbsp; |INC zpg,X|nop impl |INC abs,X&nbsp; increment<br />01 ORA X,ind|ORA zpg|ORA immed|ORA abs|ORA ind,Y|ORA zpg,X|ORA abs,Y|ORA abs,X&nbsp; bitwise inclusive OR<br />21 AND X,ind|AND zpg|AND immed|AND abs|AND ind,Y|AND zpg,X|AND abs,Y|AND abs,X&nbsp; bitwise and<br />41 EOR X,ind|EOR zpg|EOR immed|EOR abs|EOR ind,Y|EOR zpg,X|EOR abs,Y|EOR abs,X&nbsp; bitwise exclusive or<br />61 ADC X,ind|ADC zpg|ADC immed|ADC abs|ADC ind,Y|ADC zpg,X|ADC abs,Y|ADC abs,X&nbsp; add with carry<br />81 STA X,ind|STA zpg|nop immed|STA abs|STA ind,Y|STA zpg,X|STA abs,Y|STA abs,X&nbsp; store A<br />A1 LDA X,ind|LDA zpg|LDA immed|LDA abs|LDA ind,Y|LDA zpg,X|LDA abs,Y|LDA abs,X&nbsp; load A<br />C1 CMP X,ind|CMP zpg|CMP immed|CMP abs|CMP ind,Y|CMP zpg,X|CMP abs,Y|CMP abs,X&nbsp; compare<br />E1 SBC X,ind|SBC zpg|SBC immed|SBC abs|SBC ind,Y|SBC zpg,X|SBC abs,Y|SBC abs,X&nbsp; subtract with borrow<br />03 slo X,ind|slo zpg|aac immed|slo abs|slo ind,Y|slo zpg,X|slo abs,Y|slo abs,X&nbsp; 01+02 = ORA+ASL = 'slo'<br />23 rla X,ind|rla zpg|aac immed|rla abs|rla ind,Y|rla zpg,X|rla abs,Y|rla abs,X&nbsp; 21+22 = AND+ROL = 'rla'<br />43 sre X,ind|sre zpg|asr immed|sre abs|sre ind,Y|sre zpg,X|sre abs,Y|sre abs,X&nbsp; 41+42 = EOR+LSR = 'sre'<br />63 rra X,ind|rra zpg|arr immed|rra abs|rra ind,Y|rra zpg,X|rra abs,Y|rra abs,X&nbsp; 61+62 = ADC+ROR = 'rra'<br />83 sax X,ind|sax zpg|xaa immed|sax abs|axa ind,Y|sax zpg,Y|tas abs,Y|axa abs,Y&nbsp; 81+82 = STA+STX = 'sax'<br />A3 lax X,ind|lax zpg|atx immed|lax abs|lax ind,Y|lax zpg,Y|lar abs,Y|lax abs,Y&nbsp; A1+A2 = LDA+LDX = 'lax'<br />C3 dcp X,ind|dcp zpg|axs immed|dcp abs|dcp ind,Y|dcp zpg,X|dcp abs,Y|dcp abs,X&nbsp; C1+C2 = CMP+DEC = 'dcp'<br />E3 isc X,ind|isc zpg|sbc immed|isc abs|isc ind,Y|isc zpg,X|isc abs,Y|isc abs,X&nbsp; E1+E2 = SBC+INC = 'isc'</div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>beannaich</b> [ Fri Sep 16, 2011 1:08 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />@lidnariq that is freaking awesome! Did you come up with that yourself? It would be nice to have each line of the PLA decoded, I've been looking and to the best of my knowledge, a ready list isn't available. At least, not on Google. Do you know of any?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Fri Sep 16, 2011 12:52 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Just start here: <!-- m --><a class="postlink" href="http://www.visual6502.org/wiki/index.php?title=MOS_6502">http://www.visual6502.org/wiki/index.php?title=MOS_6502</a><!-- m -->

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>beannaich</b> [ Fri Sep 16, 2011 2:22 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Wow, now I feel like a tard. I actually had this site open for a day or two and never got around to checking out the links :l

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>