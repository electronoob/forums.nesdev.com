<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Discrete Logic Mapper Toolbox</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Discrete Logic Mapper Toolbox</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=9&amp;t=9283">http://forums.nesdev.com/viewtopic.php?f=9&amp;t=9283</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>4</strong> of <strong>4</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Tue Jun 25, 2013 3:52 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Discrete Logic Mapper Toolbox</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">zzo38 wrote:</div><div class="quotecontent">for extra audio you could use a AY-3-8910 (similar to how the Sunsoft 5B does), but connect it to the PPU address bus (you might be updating the music during vblank, and with no extra decoding logic you can map it to $3xxx (cartridge already provides A13 inverted, and A12 can be used uninverted) in the PPU address space)</div> Useful if you want expansion audio on a minimal discrete-logic game, but I expect the cost of a 74'20 or whatever to map it to CPU space is more convenient. The biggest improvement would probably be not dividing M2 by 2 so that the envelope register can be used for two octaves of tones instead of one. (A frequency doubler, if connected to a YM part, would be even better)<br /><br />Also, if you do use an '8910, keeping the GPIO pins hidden behind the PPU is unkind: it prevents midscreen banking.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">to use one [audio channel] for IRQ.</div> The voltages that come out of at least the YM2149 are inappropriate for driving logic.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">You could connect the CHR RAM enable and CIRAM enable to CHR A12 instead of A13 (and CHR A13 to CHR RAM A12), which provides four screens but less graphics are available for sprites.<br />You could have a latch enabled by CHR A13 in order to make CHR ROM bankswitching according to which nametable is selected, and even individual 16x16 attribute areas if that is wanted.</div> I already mentioned both of these.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">To make up mappers in a emulator, it would be useful to support a C API plugin interface that supports NES 2.0 (therefore, you can use 12-bit mappers numbers and have submapper numbers and other things available too) and some other features.</div> Modifying nestopia's NstBoard.[ch]pp is pretty easy.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>zzo38</b> [ Tue Jun 25, 2013 4:23 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Discrete Logic Mapper Toolbox</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">lidnariq wrote:</div><div class="quotecontent">Useful if you want expansion audio on a minimal discrete-logic game...</div>Yes this is precisely my point.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Also, if you do use an '8910, keeping the GPIO pins hidden behind the PPU is unkind: it prevents midscreen banking.</div>Of course you wouldn't do this if you need midscreen banking.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">The voltages that come out of at least the YM2149 are inappropriate for driving logic.</div>I thought this might be the case (although I was unsure).<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Modifying nestopia's NstBoard.[ch]pp is pretty easy.</div>I would rather not have to recompile the entire emulator if I can just add a DLL; however, if recompiling that is just to add a feature and that the mapper can be added using a DLL then that should be good enough. I will look at those things; thanks. However, it won't work if the emulator cannot be compiled using MinGW or Cygwin, since that is what I have.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Tue Jun 25, 2013 5:04 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Discrete Logic Mapper Toolbox</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">zzo38 wrote:</div><div class="quotecontent">I would rather not have to recompile the entire emulator if I can just add a DLL; however, if recompiling that is just to add a feature and that the mapper can be added using a DLL then that should be good enough. I will look at those things; thanks.</div>Are you familiar with the concept of incremental builds? A well-written makefile (and equivalents) only compile the specific source files that changed (or depend on things that changed) and then links.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>zzo38</b> [ Tue Jun 25, 2013 5:34 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Discrete Logic Mapper Toolbox</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">lidnariq wrote:</div><div class="quotecontent"><div class="quotetitle">zzo38 wrote:</div><div class="quotecontent">I would rather not have to recompile the entire emulator if I can just add a DLL; however, if recompiling that is just to add a feature and that the mapper can be added using a DLL then that should be good enough. I will look at those things; thanks.</div>Are you familiar with the concept of incremental builds? A well-written makefile (and equivalents) only compile the specific source files that changed (or depend on things that changed) and then links.</div>Yes, I am familiar, but I want to write a plugin code so that it can be used in another emulator too possibly. Also, that doesn't answer my question about MinGW.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Tue Jun 25, 2013 5:58 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Discrete Logic Mapper Toolbox</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />There's definitely nothing resembling a cross-emulator mapper syntax. Such a thing would imply any kind of standardization across emulators.<br /><br />As far as MinGW/Cygwin, I don't know, I use linux.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>zzo38</b> [ Wed Jun 26, 2013 12:52 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Discrete Logic Mapper Toolbox</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I wonder what kind of things you could make with a seven-segment decoder? Each segment is effectively some logic on the inputs.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Wed Jul 10, 2013 6:53 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Discrete Logic Mapper Toolbox</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">zzo38 wrote:</div><div class="quotecontent">I wonder what kind of things you could make with a seven-segment decoder? Each segment is effectively some logic on the inputs.<br /></div>Having sat down and thought about this on and off for the past several weeks, for the life of me I cannot figure what one would do with this.<br />The 74'4511 (the only still-manufactured BCD decoder) is basically a 16-by-7-bit ROM with an obtuse table, both a force-high and force-low pin, and a transparent latch.<br />Individual output pins could be used for complex decoding logic, but the part where values A-F force blank doesn't help matters, and I see very few useful relations between multiple outputs.<br />The combined function is something like:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">Qa = (Q1+Q2+nQ3)·(Q1+nQ2+nQ3)·nblank·(nQ1+Q2+Q3+Q4)<br />Qb = (nQ1+Q2+nQ3)·(Q1+nQ2+nQ3)·nblank<br />Qc = (Q1+nQ2+Q3)·nblank<br />Qd = (nQ1+Q2+Q3)·(Q1+Q2+nQ3)·(nQ1+nQ2+nQ3)·nblank<br />Qe = nQ1·(Q1+Q2+nQ3)·nblank<br />Qf = (nQ2+Q3)·(nQ1+nQ2+nQ3)·nblank·(nQ1+Q2+Q3+Q4)<br />Qg = (Q1+Q2+Q3+Q4)·(nQ1+nQ2+nQ3)·nblank·(nQ1+Q2+Q3+Q4)</div>Where nblank is all the reasons the output might be blanked (/BL input low, or Q0..Q3 denoting hexadecimal A-F)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Fri Mar 21, 2014 12:59 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Discrete Logic Mapper Toolbox</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />In <a href="http://forums.nesdev.com/viewtopic.php?p=127027#p127027" class="postlink">this thread</a>, OneCrudeDude asked whether it would be possible to get a hardware-based parallax assist.<br /><br />So what would theoretical hardware-assisted parallax look like, if it <em>weren't</em> fine-grained banking?<br /><br />Horizontal parallax, even though it's the kind we'd want, will be more complicated due to the way the NES draws its output. But vertical parallax ... we can probably do something clever here. After all, the MMC5 supports different vertical fine scroll values when in Left-and-Right split screen.<br /><br />I think the addition of an 8-bit latch and an 8-bit adder should get us most of the way there. To make only one section of CHR scroll, we would use something (maybe 1 or 2 OR gates) to select which section of CHR would scroll, and a tristateable latch with pull-down resistors would let us add 0 instead of the latch's contents for tiles where we didn't want a scroll offset.<br /><br />The adders would take the latched value, and add it to PPU A8..A4, A2..A0 (skipping A3, because that's color plane information). This means we could vertically rotate any number of sets of  32 contiguous tiles.<br /><br />Unlike MMC5, this doesn't let us change the size of attribute zones, and it also imposes strict requirements on the CHR's layout.<br /><br />This is just a little bit of a stretch for a discrete-logic solution, especially as it's more useful in the context of an ASIC mapper that already provides separate CHR banking:<br />4 ICs: 74'573 (three-state octal latch), 2x 74'283 (four bit full adder), 74'32 (quad OR gate). Hook the latch up in lieu of the MMC3's RAM, or something.<br />Doing <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">74573./OE ← PPUA10 OR PPUA11 OR PPUA12</tt> would let us scroll only the 64 tiles from $0000 to $03ff.<br />The 74HC283 is fast enough (propagation times of 40ns at 5V) that modern 100ns ROMs or RAMs will have plenty of breathing room.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>OneCrudeDude</b> [ Fri Mar 21, 2014 10:18 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Discrete Logic Mapper Toolbox</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I'm so honored to have been mentioned in a post!  Anyway, regarding my parallax theory, I was thinking this could be used to add a much needed depth in NES games.  Granted the hardware wasn't natively capable of doing it, instead relying on bankswitching techniques or scanline split techniques.  The below image (from Panic Restaurant, which I believe has the best artistic direction of all NES games) will be used for my example.<br /><br /><img src="http://i8.photobucket.com/albums/a42/bdkmat/60.png" alt="Image" /><br /><br />You see the floor, buildings, the sign, and the distant skyscrapers, right?  My theoretical &quot;parallax&quot; mapper would make the skyscrapers move as the player does.  Of course, this is basic parallax for NES games, but I was thinking about doing a more thorough attempt.  The following example would be another example.<br /><br /><img src="http://www.consoleclassix.com/info_img/Ninja_Gaiden_2_NES_ScreenShot3.jpg" alt="Image" /><br /><br />Again, the distant blue buildings will &quot;scroll&quot; &quot;behind&quot; the game game scenery, which is in reality just rewriting the graphics at those particular locations.  Unfortunately, most of my theories have been already executed by commercial NES games, and what I'm suggesting seems like very intensive; all the &quot;background&quot; of the stage will be rewritten based on how far the player has moved, while the &quot;foreground&quot; stays the same.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>4</strong> of <strong>4</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>