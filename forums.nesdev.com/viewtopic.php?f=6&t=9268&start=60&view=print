<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - NSFPlay 2.2</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">NSFPlay 2.2</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=6&amp;t=9268">http://forums.nesdev.com/viewtopic.php?f=6&amp;t=9268</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>5</strong> of <strong>9</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>zzo38</b> [ Mon Jan 21, 2013 12:13 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: NSFPlay 2.2</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Some option they seem not to have, I suggest to have:<ul><li>Character encoding for NSF titles (auto-detect, Latin-1 single-bytes, UTF-8, Japanese, etc)</li><li>For each expansion, set polarity inverted on/off</li><li>RAM address for song stop detect</li><li>MMC5 emulation of 2A03 features on/off</li><li>Playback rate in header use on/off (actually, I think it might already have this)</li><li>Set value of A, X, Y register to any number 0-255</li><li>VRC7 delay between register write</li><li>Expansion register mirroring on/off</li><li>Unofficial opcodes on/off</li><li>NSFe chunk for VRC7 patch</li><li>Triangle phase reset (at initialization) on/off</li><li>APU test mode on/off</li><li>Wasted clock cycles to call play routine</li><li>FDS write conflicts on/off</li><li>Direct register view</li><li>Reverb</li><li>Switch zero-based/one-based track numbers display</li><li>Switch track number display decimal/hexadecimal</li><li>Trim spaces on/off</li><li>Fast-forward until value at specified RAM address changes</li><li>Initial delay setting</li><li>Make command-line mode (convert to WAV and so on) to be cross-platform instead of Windows only</li><li>Warning/errors display</li><li>Time units switch between seconds/milliseconds/frames</li><li>Make command-line options to be named options</li><li>Preset to switch filter to RF Famicom or AV Famicom (does it already have this?)</li><li>Override the header, to play NTSC or PAL regardless of what is available</li><li>Override blank titles and &quot;&lt;?&gt;&quot; titles on/off</li><li>Command-line option to output to Csound score files</li><li>Command-line option display various information: ROM used, RAM used, NSF header texts, expansions used, possible conflicts with NSF specification, loop detection, etc</li></ul>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Mon Jan 21, 2013 2:23 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: NSFPlay 2.2</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />[*]Character encoding for NSF titles (auto-detect, Latin-1 single-bytes, UTF-8, Japanese, etc)<br /><br />I don't know how to do this with the current UI. Eventually I think I will replace the entire UI so that I can build a cross-platform NSFPlay, but until then this is not something I plan to look into.<br /><br /><br />[*]For each expansion, set polarity inverted on/off<br /><br />Planned per-channel invert / stereo-invert for the next version, not yet implemented.<br /><br /><br />[*]RAM address for song stop detect<br /><br />This would be an expansion to the NSF format, and is entirely unnecessary. NSFe has track lengths. NSF2 will have track lengths. There is no need for this, just use the newer formats.<br /><br /><br />[*]MMC5 emulation of 2A03 features on/off<br /><br />I think the MMC5 already has all the relevant options that the 2A03 does, i.e. phase reset, nonlinear mix. What is missing?<br /><br /><br />[*]Playback rate in header use on/off (actually, I think it might already have this)<br /><br />Already an option.<br /><br /><br />[*]Set value of A, X, Y register to any number 0-255<br /><br />I don't understand the purpose of this. Why would you want it? Even so it's trivial to insert code into an NSF to set up these registers, or just use a debugger like FCEUX. NSFPlay is not and will never be a debugger.<br /><br /><br />[*]VRC7 delay between register write<br /><br />This is not particularly useful to try to emulate. The actual behaviour of the registers when updated too soon is extremely complicated and unpredictable, and totally unknown at this point. As far as I'm concerned, just performing the write anyway is as good a substitute for this unknown resulting state as any. For the few people that play on hardware, this is a known issue, and the major NSF engines that support VRC7 already have a proper delay (FamiTracker, PPMCK/MML, Lagrange Point). I would be willing to add a diagnostic warning about it, however (see unofficial opcodes below).<br /><br /><br />[*]Expansion register mirroring on/off<br /><br /><s>I don&#39;t know what this means.</s> At the moment I don't want to implement this. There are actually no NSFs I know of that use the mirrors (I don't know of any NSF players that implement them), and it opens up irreconcilable problems for multi-expansion NSFs. I may add a diagnostic for unusual address writes though.<br /><br /><br />[*]Unofficial opcodes on/off<br /><br />I see no reason to turn them off, but I do plan to introduce an NSF diagnostic which can test an NSF and give warnings for this kind of thing.<br /><br /><br />[*]NSFe chunk for VRC7 patch<br /><br />No, this is not a feature of the VRC7 and implementing this would diminish the compatibility of NSFe files across players and hardware. Use an adlib tracker if you want custom patches. If you want 2A03 + Adlib, you can already do this with the VGM format.<br /><br /><br />[*]Triangle phase reset (at initialization) on/off<br /><br />This could be randomized like noise.<br /><br /><br />[*]APU test mode on/off<br /><br />Planned, not yet implemented.<br /><br /><br />[*]Wasted clock cycles to call play routine<br /><br />You can do this in a debugger like FCEUX pretty easily. I don't plan to implement very many debugging features in NSFPlay.<br /><br /><br />[*]FDS write conflicts on/off<br /><br />Why?<br /><br /><br />[*]Direct register view<br /><br />This already mostly exists in the keyboard view.<br /><br /><br />[*]Reverb<br /><br />No, this will not be part of NSFPlay. However, Winamp has DSP plugins you can use if you want this.<br /><br /><br />[*]Switch zero-based/one-based track numbers display<br /><br />I don't think this is needed, and would rather not spend time on it.<br /><br /><br />[*]Switch track number display decimal/hexadecimal<br /><br />Same as above.<br /><br /><br />[*]Trim spaces on/off<br /><br />What problem would this solve?<br /><br /><br />[*]Fast-forward until value at specified RAM address changes<br /><br />You should use a debugger like FCEUX to do this. It's already very capable and can do much more complicated debugging tasks. NSFPlay is never going to be a debugger.<br /><br /><br />[*]Initial delay setting<br /><br />What does this mean?<br /><br /><br />[*]Make command-line mode (convert to WAV and so on) to be cross-platform instead of Windows only<br /><br />I would like to make the whole program cross-platform eventually. This is not a priority, however.<br /><br /><br />[*]Warning/errors display<br /><br />What warnings and errors? (Though this may fall under the diagnostic logging option I mentioned above.)<br /><br /><br />[*]Time units switch between seconds/milliseconds/frames<br /><br />I'm not sure why this is needed. Frames are really only relevant if you're debugging, and there are other tools to deal with this already.<br /><br /><br />[*]Make command-line options to be named options<br /><br />I don't know what this means, but as part of the WAV export command line I would like to implement the ability to temporarily set yansf.ini options for that render.<br /><br /><br />[*]Preset to switch filter to RF Famicom or AV Famicom (does it already have this?)<br /><br />There are presets, and there are settings for the lowpass filter.<br /><br /><br />[*]Override the header, to play NTSC or PAL regardless of what is available<br /><br />Implemented already for the next version.<br /><br /><br />[*]Override blank titles and &quot;&lt;?&gt;&quot; titles on/off<br /><br />This is the NSF spec. I don't see any reason to change it. Just edit the NSF if you don't like the default title indicator.<br /><br /><br />[*]Command-line option to output to Csound score files<br /><br />That's a rather strange request. I will not do that, but I have already implemented a register-write logger that you could write a program to translate into whatever you want, I suppose. This will be available in the next version.<br /><br /><br />[*]Command-line option display various information: ROM used, RAM used, NSF header texts, expansions used, possible conflicts with NSF specification, loop detection, etc<br /><br />A windowed MFC program can't properly give any feedback to the command line (there are hacks to attempt it but they do not work well). ROM and RAM used are something debuggers with code/data logging can already tell you, use those. The entire NSF header information is viewable in the info window in NSFPlay if you're looking for that. The planned diagnostic log feature will try to pick up bad NSF behaviour if it can. I'm not sure what information you want about loop detection.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Mon Jan 21, 2013 8:02 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: NSFPlay 2.2</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Expansion register mirroring on/off</div><br />I don't know what this means.</div><br />A lot of Famicom mappers that include a synthesizer incompletely decode the memory-mapped I/O ports connected to the synthesizer. For example, on Namco 163, writes to $4801-$4FFF will all have the same effect as writes to $4800. If more than one such mapper is connected, a single write might affect more than one synthesizer. You may want to emit a diagnostic if an NSF writes to any address other than the lowest address of a given port. See <a href="http://wiki.nesdev.com/w/index.php/NSF#Multi-chip_tunes" class="postlink">NSF#Multi-chip tunes</a> and <a href="http://wiki.nesdev.com/w/index.php/Talk:NSF#Multi_expansion" class="postlink">Talk:NSF#Multi expansion</a> on the wiki.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I do plan to introduce an NSF diagnostic which can test an NSF and give warnings for this kind of thing.</div><br />Good deal.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Mon Jan 21, 2013 11:50 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: NSFPlay 2.2</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Oh right, I don't know how I forgot what that means, given that I've had conversations about it in the past. Yeah, I don't really want to offer a way to turn that on and off, but yes it would be a worthwhile diagnostic.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>zzo38</b> [ Mon Jan 21, 2013 4:08 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: NSFPlay 2.2</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">rainwarrior wrote:</div><div class="quotecontent">[*]RAM address for song stop detect<br /><br />This would be an expansion to the NSF format, and is entirely unnecessary. NSFe has track lengths. NSF2 will have track lengths. There is no need for this, just use the newer formats.</div>I don't mean an expansion; I mean to make the record to WAV or whatever to tell it to stop in such way in batch processing.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">[*]Set value of A, X, Y register to any number 0-255<br /><br />I don't understand the purpose of this. Why would you want it? Even so it's trivial to insert code into an NSF to set up these registers, or just use a debugger like FCEUX. NSFPlay is not and will never be a debugger.</div>You can access hidden tracks, perhaps?<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">[*]VRC7 delay between register write<br /><br />This is not particularly useful to try to emulate. The actual behaviour of the registers when updated too soon is extremely complicated and unpredictable, and totally unknown at this point. As far as I'm concerned, just performing the write anyway is as good a substitute for this unknown resulting state as any. For the few people that play on hardware, this is a known issue, and the major NSF engines that support VRC7 already have a proper delay (FamiTracker, PPMCK/MML, Lagrange Point). I would be willing to add a diagnostic warning about it, however (see unofficial opcodes below).</div>Yes, diagnostic warning is good enough.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">[*]Triangle phase reset (at initialization) on/off<br /><br />This could be randomized like noise.</div>Yes, it is what I meant.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">[*]FDS write conflicts on/off<br /><br />Why?</div>It is possible some NSF might depend on this feature to be one way or the other, it can also be used to test for compatibility, and could also be diagnostics. (Write conflicts should probably be off by default though, since the program that uses these multiple expansions probably won't use FDS RAM; such as ppMCK doesn't use FDS RAM so it should be off by default.)<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">[*]Warning/errors display<br /><br />What warnings and errors? (Though this may fall under the diagnostic logging option I mentioned above.)</div>Yes, I mean diagnostic mode.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">[*]Make command-line options to be named options<br /><br />I don't know what this means, but as part of the WAV export command line I would like to implement the ability to temporarily set yansf.ini options for that render.</div>Yes, I mean such as yansf.ini options.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">[*]Override blank titles and &quot;&lt;?&gt;&quot; titles on/off<br /><br />This is the NSF spec. I don't see any reason to change it. Just edit the NSF if you don't like the default title indicator.</div>I mean that when listing the titles, you can turn on/off the option to make it replace &quot;&lt;?&gt;&quot; by the filename or whatever. But perhaps it is not needed if you will change the NSF instead.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">[*]Command-line option to output to Csound score files<br /><br />That's a rather strange request. I will not do that, but I have already implemented a register-write logger that you could write a program to translate into whatever you want, I suppose. This will be available in the next version.</div>Yes, it doesn't have to be Csound format; since I can write another program to convert from that format into Csound format if it is needed.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">[*]Command-line option display various information: ROM used, RAM used, NSF header texts, expansions used, possible conflicts with NSF specification, loop detection, etc<br /><br />A windowed MFC program can't properly give any feedback to the command line (there are hacks to attempt it but they do not work well). ROM and RAM used are something debuggers with code/data logging can already tell you, use those. The entire NSF header information is viewable in the info window in NSFPlay if you're looking for that. The planned diagnostic log feature will try to pick up bad NSF behaviour if it can. I'm not sure what information you want about loop detection.</div>If most of the program is in the DLL, then you can have the separate EXE file for command-line version (on UNIX you can use the same executable for both). OK debugger can tell you, but it should be a debugger which play NSF files good quality!

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dwedit</b> [ Tue Jan 22, 2013 4:51 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: NSFPlay 2.2</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">rainwarrior wrote:</div><div class="quotecontent">A windowed MFC program can't properly give any feedback to the command line (there are hacks to attempt it but they do not work well). ROM and RAM used are something debuggers with code/data logging can already tell you, use those. The entire NSF header information is viewable in the info window in NSFPlay if you're looking for that. The planned diagnostic log feature will try to pick up bad NSF behaviour if it can. I'm not sure what information you want about loop detection.</div><br /><br />Briefly checked this out, apparently a Win32 app can make a new console and interact with that, but can't output to the console that started the app.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Tue Jan 22, 2013 5:18 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: NSFPlay 2.2</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Actually you <em>can</em> get a handle to the console that opened it and printf to it, but the way text comes through is in a really ugly/unusuable way. Like, it won't work with &gt; and dumps it into the next command line, or something to that effect (I don't remember exactly, it's been a little while).<br /><br />Anyhow, a command line tool might be interesting to try later on, but this would probably come at the same time as a total UI rebuild for cross platform compatibility. Not anytime soon.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I don't mean an expansion; I mean to make the record to WAV or whatever to tell it to stop in such way in batch processing.</div><br />Currently the best way to batch process is not to use the command line tool. Temporary config overrides from the command line will eventually allow track lengths to be specified, but there is a way to do it right now. Use Winamp, and make an m3u playlist (directions are in the readme). You can then use the diskwriter plugin and just play the whole playlist to disk.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>arfy</b> [ Mon Apr 29, 2013 12:39 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: NSFPlay 2.2</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I think I've found an nsf that might show some long-standing bugs in emulation. then again, I might be running off inaccurate data so who knows.<br /><br />the nsf in question is damian_yerrick_-_covers_volume1.nsf, from the 2a03.org collection. if you can get this into a real nes and compare it, especially songs 6 and 16, I think you'll be surprised. Song 6, listen to the frequencies, especially as they near the top limit of the pulse channels. in most emulators, they flatten out, but I have a feeling they should stay in tune with the scale as it goes up. the old nezplug 0.9.48 got this one right.<br />in track 16, I have an idea it might show the difference between emulated and real periodic noise. in the old emulator SMYNES, which I can't get to run anymore, the periodic noise was in tune with the little melody that was played on the pulse channel. in *every* other emulation I've herd, it's just a mismatched set of notes.<br />So, any ideas?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Mon Apr 29, 2013 1:08 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: NSFPlay 2.2</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Don't trust subtleties of anything I made before I got my PowerPak in the fourth quarter of 2008, especially Covers vol. 1. It <em>relies</em> on long-standing emulator bugs.<br /><ul><li>Track 6 (&quot;Korobeiniki Slow&quot;) uses pitches up to 1760 Hz, and these will sound flat on an NES or an accurate emulator. The version of NerdTracker II against which Covers vol. 1 was compiled had a bug: the frequency table doesn't compensate for the t + 1 behavior of the square and triangle timers. My NSFs since <a href="http://forums.nesdev.com/viewtopic.php?p=3860#p3860" class="postlink">mid-2005</a> use a corrected period table. </li><li>Track 16 (&quot;Looped Noise Test&quot;) is in tune on NESten and completely wrong on an NES. </li></ul>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>arfy</b> [ Mon Apr 29, 2013 1:16 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: NSFPlay 2.2</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">Don't trust subtleties of anything I made before I got my PowerPak in the fourth quarter of 2008, especially Covers vol. 1. It <em>relies</em> on long-standing emulator bugs.<br /><ul><li>Track 6 (&quot;Korobeiniki Slow&quot;) uses pitches up to 1760 Hz, and these will sound flat on an NES or an accurate emulator. The version of NerdTracker II against which Covers vol. 1 was compiled had a bug: the frequency table doesn't compensate for the t + 1 behavior of the square and triangle timers. </li><li>Track 16 (&quot;Looped Noise Test&quot;) is in tune on NESten completely wrong on an NES. </li></ul></div><br />ok thanks! I did wonder if this was the case, because it was in the early days of nes sound emulation, so was wondering which was accurate. good to know.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>zzo38</b> [ Mon Apr 29, 2013 2:56 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: NSFPlay 2.2</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Can there be log to VGM added? (To log the chips which are not supported in VGM, look at &quot;vgm_unofficial.txt&quot; in the VGMCK distribution; once VGM offically supports these chips, then you should change it to the official codes of these chips instead.)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Mon Apr 29, 2013 6:42 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: NSFPlay 2.2</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />No, there are no plans for log to VGM, but there is already some logging in the beta (which will be properly exposed to the user in the next release).<br /><br />However, the logs are of a form where each line is a command, such as WRITE(4011,22), and it should be relatively straightforward to use a macro assembler like ca65, or other suitable program to build VGM (or other binary logs) from it easily.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>zzo38</b> [ Tue Apr 30, 2013 12:22 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: NSFPlay 2.2</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">rainwarrior wrote:</div><div class="quotecontent">No, there are no plans for log to VGM, but there is already some logging in the beta (which will be properly exposed to the user in the next release).<br /><br />However, the logs are of a form where each line is a command, such as WRITE(4011,22), and it should be relatively straightforward to use a macro assembler like ca65, or other suitable program to build VGM (or other binary logs) from it easily.</div>I would think VGM would be a good format to use for logs of commands send to sound chip, but, you can use the text format if you want to, and I can then make the program to convert the text format into VGM; it is not really a lot of problem. But the log feature is really good; thanks for adding such logs feature (myself and/or others can write the converter if wanted).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>arfy</b> [ Mon May 27, 2013 9:56 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: NSFPlay 2.2</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Just a quick thread bump, and status check. I assume nsfplay will/is still being worked on? haven't seen any updates here or from the svn repository in quite a while. No problem if life/priorities are taking over as they often do, just curious for any updates.<br /><br />arfy

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Mon May 27, 2013 11:14 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: NSFPlay 2.2</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Yes, I'm still working on it.<br /><br />I need to rewrite the FDS emulation before the next release (its old state does not work well with some changes I made to the way it executes, and there are many questions I need to verify). I will probably also rewrite N163. The reason I haven't yet is that I need to do some testing. There has been a series of setbacks on that front. My FDS disk drive is kaputt, and efforts to repair it have failed. I got an FDSLOADR cable, but the first three parallel port devices I tried to use did not work. I still haven't bothered setting up the fourth one I bought, though I suspect it would actually work if I did. I also tried to make a device to split the writes to a second cartridge to do tests that way, but one of the cartridge pinout diagrams on the wiki was backwards so I totally botched that.<br /><br />Anyhow, these problems aren't really what's preventing me from doing it. I can still hotswap at the very least (that's how I've been testing other hardware) but it's just that the last several times I've been motivated to work on it, the route I chose ended up failing.<br /><br />I won't bother laying out my personal life here, but I will say that I do have some free time to spend on it in the next few months, and I should be able to get the next release out this summer.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>5</strong> of <strong>9</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>