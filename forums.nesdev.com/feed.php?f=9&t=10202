<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=9&amp;t=10202" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2013-06-27T11:24:31-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=9&amp;t=10202</id>
<entry>
<author><name><![CDATA[infiniteneslives]]></name></author>
<updated>2013-06-27T11:24:31-07:00</updated>
<published>2013-06-27T11:24:31-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10202&amp;p=114144#p114144</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10202&amp;p=114144#p114144"/>
<title type="html"><![CDATA[Re: Mapper Features for High Level Languages]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10202&amp;p=114144#p114144"><![CDATA[
The lines between this discussion and <a href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=10205&amp;start=15#p114038" class="postlink">that</a>one are starting to bleed a little, but based on what Shiru and Rainwarrior are saying a large part of the problem can be resolved by banking game data alone.<br /><br />Seems within reason that the C generated code of a reasonably complex (a step up from over 90% of current homebrews) could fit well within 32KB of fixed PRG-ROM.  If one were willing to depart from a discrete mapper, it would seem that taking the approach of the fme-7 with it's possible banking of PRG-ROM into $6000-7FFF would be the way to go.  So if you can limit your C code to within 32KB which isn't that tight of a limit, then you can get off the ground and start running with current CC65 compilation.  It could be taken even further and expanded to fixed ROM from $6000-$FFFF with banked data  available at $5000-5FFF.  That'd give you 40KB of fixed space dedicated to HLL generated code, which is actually a pretty big space to get a lot done.  I wouldn't be surprised if it could even fit something on the same level as SMB3 taking into account you'll be able to re-write the assembly where it gets bloated significantly.<br /><br />The best part about more fixed ROM and fewer PRG banks is the reduction in logic required.  Sounds pretty reasonable to fit in that scanline counter within 36mcells, and probably even 2KB CHR-RAM banks if the serial SPI wasn't desired.  That comes pretty close to the same level as the MMC3 with a $1 CPLD, but even better since it's more suited for HLL with an arguably better CHR setup than any game released on the NES/FC.  <br /><br />All that power with such simplicity is pretty enticing.  Suddenly not being able to bank HLL generated code doesn't sound like much of a restriction anymore.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4832">infiniteneslives</a> — Thu Jun 27, 2013 11:24 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[thefox]]></name></author>
<updated>2013-06-27T07:15:46-07:00</updated>
<published>2013-06-27T07:15:46-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10202&amp;p=114126#p114126</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10202&amp;p=114126#p114126"/>
<title type="html"><![CDATA[Re: Mapper Features for High Level Languages]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10202&amp;p=114126#p114126"><![CDATA[
<div class="quotetitle">tepples wrote:</div><div class="quotecontent"><br />I wonder what it'd take to write a game in <a href="http://www.fceux.com/web/help/fceux.html?LuaScripting.html" class="postlink">FCEUX Lua</a> and port it to assembly piece by piece, much as one does with a C game.<br /></div><br />You can also use <a href="https://gitorious.org/nintendulatordx/nintendulatordx/blobs/master/doc/README-NintendulatorDX-no-linebreaks.txt" class="postlink">NintendulatorDX Lua</a>, where it's actually possible to embed Lua code snippets into the assembly code with ndxLuaExecStr and ndxLuaExecFile macros. From there on out one could fairly easily start translating each snippet to assembly little by little.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=80">thefox</a> — Thu Jun 27, 2013 7:15 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2013-06-26T15:54:27-07:00</updated>
<published>2013-06-26T15:54:27-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10202&amp;p=114088#p114088</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10202&amp;p=114088#p114088"/>
<title type="html"><![CDATA[Re: Mapper Features for High Level Languages]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10202&amp;p=114088#p114088"><![CDATA[
I wonder what it'd take to write a game in <a href="http://www.fceux.com/web/help/fceux.html?LuaScripting.html" class="postlink">FCEUX Lua</a> and port it to assembly piece by piece, much as one does with a C game.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Wed Jun 26, 2013 3:54 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Shiru]]></name></author>
<updated>2013-06-26T13:12:40-07:00</updated>
<published>2013-06-26T13:12:40-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10202&amp;p=114065#p114065</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10202&amp;p=114065#p114065"/>
<title type="html"><![CDATA[Re: Mapper Features for High Level Languages]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10202&amp;p=114065#p114065"><![CDATA[
Programming in assembly takes few times more time to write and debug the code, that's all. C helps a lot to speed up the development, even if most of the code will be manually rewritten into assembly code afterwards.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4205">Shiru</a> — Wed Jun 26, 2013 1:12 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[lidnariq]]></name></author>
<updated>2013-06-26T12:19:09-07:00</updated>
<published>2013-06-26T12:19:09-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10202&amp;p=114053#p114053</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10202&amp;p=114053#p114053"/>
<title type="html"><![CDATA[Re: Mapper Features for High Level Languages]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10202&amp;p=114053#p114053"><![CDATA[
<div class="quotetitle">Drag wrote:</div><div class="quotecontent"><br />I'm not sure why 6502 assembly puts everyone off. :\<br /></div> I hate doing math in asm. And find conditional branches too error-prone. Otherwise, yeah, asm isn't bad.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3512">lidnariq</a> — Wed Jun 26, 2013 12:19 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Drag]]></name></author>
<updated>2013-06-26T12:00:07-07:00</updated>
<published>2013-06-26T12:00:07-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10202&amp;p=114050#p114050</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10202&amp;p=114050#p114050"/>
<title type="html"><![CDATA[Re: Mapper Features for High Level Languages]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10202&amp;p=114050#p114050"><![CDATA[
<div class="quotetitle">tepples wrote:</div><div class="quotecontent"><br />MMC3 is easy to make thread-safe: during the main thread, leave the switchable bank at set at 7 (PRG ROM bank at CPU $A000-$BFFF). Switch bank 6 (PRG ROM bank at $C000-$DFFF) only in the DPCM playback routine, and switch banks 0-5 (CHR ROM) only in the NMI and scanline IRQ handlers.<br /></div><br />So in other words, the main thread assumes the function select register is a constant, and all of the &quot;threaded&quot; routines will automatically reset it to that constant when finished? That makes sense, that's probably how most games use the mapper anyway; I'm not sure why I thought it was going to be a big hairy deal. <img src="http://forums.nesdev.com/images/smilies/icon_razz.gif" alt=":P" title="Razz" /><br /><br />I still think you guys should try your hand at assembly. From the looks of it, you're already moving closer and closer to a low-level language anyway. As long as you comment your assembly really thoroughly, it's pretty workable (if you look at any of my source code, I write comments like I'm re-teaching myself how my code works and what I was thinking). The bonus is that you get to use whatever mapper you want. <img src="http://forums.nesdev.com/images/smilies/icon_razz.gif" alt=":P" title="Razz" /> I'm not sure why 6502 assembly puts everyone off. :\<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=21">Drag</a> — Wed Jun 26, 2013 12:00 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[qbradq]]></name></author>
<updated>2013-06-25T12:45:02-07:00</updated>
<published>2013-06-25T12:45:02-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10202&amp;p=113979#p113979</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10202&amp;p=113979#p113979"/>
<title type="html"><![CDATA[Re: Mapper Features for High Level Languages]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10202&amp;p=113979#p113979"><![CDATA[
Thanks for clearing that up. From an implementation perspective, a &quot;subset of C&quot; could mean a lot of things, like &quot;a superset of assembly&quot;. But I'll get more into that this evening in the Small C post.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3706">qbradq</a> — Tue Jun 25, 2013 12:45 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[thefox]]></name></author>
<updated>2013-06-25T12:13:30-07:00</updated>
<published>2013-06-25T12:13:30-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10202&amp;p=113976#p113976</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10202&amp;p=113976#p113976"/>
<title type="html"><![CDATA[Re: Mapper Features for High Level Languages]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10202&amp;p=113976#p113976"><![CDATA[
I want to clarify that when I said &quot;small C&quot; I didn't mean Small-C specifically, but any variation/subset of C in general.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=80">thefox</a> — Tue Jun 25, 2013 12:13 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[qbradq]]></name></author>
<updated>2013-06-25T10:40:16-07:00</updated>
<published>2013-06-25T10:40:16-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10202&amp;p=113964#p113964</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10202&amp;p=113964#p113964"/>
<title type="html"><![CDATA[Re: Mapper Features for High Level Languages]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10202&amp;p=113964#p113964"><![CDATA[
Starting new thread in NES Dev forum about Small C.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3706">qbradq</a> — Tue Jun 25, 2013 10:40 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2013-06-25T09:41:22-07:00</updated>
<published>2013-06-25T09:41:22-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10202&amp;p=113963#p113963</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10202&amp;p=113963#p113963"/>
<title type="html"><![CDATA[Re: Mapper Features for High Level Languages]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10202&amp;p=113963#p113963"><![CDATA[
True, but it is still possible to do quite a lot of optimisations and &quot;guesses&quot; automatically if some thought and testing has been made.<br /><br />And what is the difference between C and &quot;small C&quot; exactly ?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Tue Jun 25, 2013 9:41 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[thefox]]></name></author>
<updated>2013-06-25T07:41:31-07:00</updated>
<published>2013-06-25T07:41:31-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10202&amp;p=113954#p113954</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10202&amp;p=113954#p113954"/>
<title type="html"><![CDATA[Re: Mapper Features for High Level Languages]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10202&amp;p=113954#p113954"><![CDATA[
I don't think C is expressive enough to really generate efficient code for 6502. By expressiveness I mean the ability to hint the compiler about how to generate optimal code. I would much rather see a compiler for some kind of a &quot;small C&quot; variant.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=80">thefox</a> — Tue Jun 25, 2013 7:41 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2013-06-25T01:15:24-07:00</updated>
<published>2013-06-25T01:15:24-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10202&amp;p=113940#p113940</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10202&amp;p=113940#p113940"/>
<title type="html"><![CDATA[Re: Mapper Features for High Level Languages]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10202&amp;p=113940#p113940"><![CDATA[
<div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />The more I look at the code generation, and the more I read this thread, the more I understand that this is not an operation that's going to be efficient.<br /></div><br />An efficient compiler for the 6502 is only a theoretical thing today. It's possible that an efficient one has been made commercially in the late 80s and early 90s, but who knowns ?<br /><br />With the experiences I made, CC65 generates assembly codes that is between 8 and 20* times longer/slower than hand written assembly code.<br /><br />* 20 was for an extreme cases where I applied multiple strength reduction optimisations and loop reversal optimisation, something that CC65 is completely unable to do.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Tue Jun 25, 2013 1:15 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[infiniteneslives]]></name></author>
<updated>2013-06-24T19:53:11-07:00</updated>
<published>2013-06-24T19:53:11-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10202&amp;p=113934#p113934</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10202&amp;p=113934#p113934"/>
<title type="html"><![CDATA[Re: Mapper Features for High Level Languages]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10202&amp;p=113934#p113934"><![CDATA[
<div class="quotetitle">qbradq wrote:</div><div class="quotecontent"><br />One thing that comes to mind is that I'd rather not have three bankable 8kb PRG segments. I'd rather have one bankable 16kb PRG segment and one fixed. The way I'm approaching executable segmentation right now that'd be a better fit, especially if 8KB of WRAM is available and the mass data storage to load from.<br /></div><br /><br />That's good to hear.  I've wondered if that would be acceptable or even preferable considering you've really got ram underneath and not rom.  That and you've got around a dozen pages of ram you can place at $6000-7fff Which should make it all okay.  One less PRG bank to maintain means more logic available to make a counter fit within 36mcells. <img src="http://forums.nesdev.com/images/smilies/icon_wink.gif" alt=";)" title="Wink" /><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4832">infiniteneslives</a> — Mon Jun 24, 2013 7:53 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[qbradq]]></name></author>
<updated>2013-06-24T18:34:37-07:00</updated>
<published>2013-06-24T18:34:37-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10202&amp;p=113931#p113931</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10202&amp;p=113931#p113931"/>
<title type="html"><![CDATA[Re: Mapper Features for High Level Languages]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10202&amp;p=113931#p113931"><![CDATA[
Really the main advantage I was thinking of is reducing the cycle count for calling a subroutine in a bank that may not already be mapped in. The more I look at the code generation, and the more I read this thread, the more I understand that this is not an operation that's going to be efficient.<br /><br />I really appreciate the input everyone! This has given me some good food for thought on a project I'm working on.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3706">qbradq</a> — Mon Jun 24, 2013 6:34 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2013-06-24T15:08:14-07:00</updated>
<published>2013-06-24T15:08:14-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10202&amp;p=113918#p113918</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10202&amp;p=113918#p113918"/>
<title type="html"><![CDATA[Re: Mapper Features for High Level Languages]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10202&amp;p=113918#p113918"><![CDATA[
MMC3 is easy to make thread-safe: during the main thread, leave the switchable bank at set at 7 (PRG ROM bank at CPU $A000-$BFFF). Switch bank 6 (PRG ROM bank at $C000-$DFFF) only in the DPCM playback routine, and switch banks 0-5 (CHR ROM) only in the NMI and scanline IRQ handlers.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Mon Jun 24, 2013 3:08 pm</p><hr />
]]></content>
</entry>
</feed>