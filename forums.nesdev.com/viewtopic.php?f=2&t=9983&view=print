<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Init routines.</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Init routines.</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=9983">http://forums.nesdev.com/viewtopic.php?f=2&amp;t=9983</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Movax12</b> [ Wed Apr 03, 2013 12:20 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Init routines.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />A simple idea for CA65.<br /><br />In every library that would benefit from initialization, one could use this macro code rather than explicitly doing so for each library. <br />For example, in an included file:<tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">setLibraryInitRoutine initFoo</tt><br />Another file:<tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">setLibraryInitRoutine initBar</tt><br />Then, somewhere suitable in the main calling code (somewhere after reset): <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">executeLibraryInitRoutines</tt><br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent"><br />.ifndef _INIT_LIB_H_<br />_INIT_LIB_H_ = 1<br /><br />.scope initialize<br />&nbsp; &nbsp; initCounter .set 0&nbsp; &nbsp; <br />.endscope<br /><br /><br />.macro setLibraryInitRoutine proc<br /><br />&nbsp; &nbsp; initialize::initCounter .set initialize::initCounter + 1&nbsp; &nbsp;; first entry starts at 1<br />&nbsp; &nbsp; initialize::.ident(.sprintf(&quot;%s%d&quot;,&quot;_Library_Init_List_&quot;, initialize::initCounter)) = proc<br /><br />.endmacro<br /><br />.macro executeLibraryInitRoutines<br /><br />&nbsp; &nbsp; .if .not initialize::initCounter<br />&nbsp; &nbsp; &nbsp; &nbsp; .exitmacro ; if none, do nothing<br />&nbsp; &nbsp; .endif<br />&nbsp; &nbsp; <br />&nbsp; &nbsp; .repeat initialize::initCounter, I<br />&nbsp; &nbsp; &nbsp; &nbsp; jsr initialize::.ident(.sprintf(&quot;%s%d&quot;,&quot;_Library_Init_List_&quot;, I+1))<br />&nbsp; &nbsp; .endrepeat<br />&nbsp; &nbsp; <br />.endmacro<br />.endif<br /></div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Wed Apr 03, 2013 5:53 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Init routines.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I wonder if the <a href="http://www.cc65.org/doc/ca65-11.html#ss11.14" class="postlink">constructor and destructor system built into ca65</a> might help you implement something like this.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Movax12</b> [ Wed Apr 03, 2013 7:38 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Init routines.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Probably, but I don't really understand how they work.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Movax12</b> [ Wed Apr 03, 2013 4:51 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Init routines.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I looked into using the built-in functions, and they would probably work fine, but they seem overly complex for what I want to accomplish.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Wed Apr 03, 2013 6:06 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Init routines.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I thought that ca65 could allow each module to denote an constructor and destructor routine, and then at runtime you can get a list of 16-bit pointers to these to iterate over.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Movax12</b> [ Wed Apr 03, 2013 7:15 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Init routines.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Pretty much. I may still try it, it's pretty close to what I am doing, but the linker generates the list and passes you an address to the list (of constructors). Then you have to write code to jump to the list of address, which will require RAM usage to do so. A small list of JSR seems effective enough (as long as it stays small).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Wed Apr 03, 2013 7:56 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Init routines.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I don't think it uses any RAM. It should put the list of routine addresses in ROM. I'm not sure how it could use any RAM anyway.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Wed Apr 03, 2013 8:22 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Init routines.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Any global non-const statics will use RAM that must be initialized at startup. Other than that, it should just be calling the requisite code, which should all be in ROM.<br /><br />If you look at crt0.s it should give you an idea of what it does.<br /><br />For my own purposes, though, I just rewrote crt0 and got rid of all setup except the RAM initialization. I had cut the CRT down so much that nothing in it needed init code anyway.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Movax12</b> [ Wed Apr 03, 2013 8:59 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Init routines.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />What I was trying to say and obviously failed to communicate properly was that the code that's going to walk the list of addresses is going to somehow have to use RAM, since when using only CA65 you have to write the code to call the list of constructors. The default routine uses quite a bit of RAM and self modifying code. (condes.s) <a href="http://code.ohloh.net/file?fid=7rMWkPSIUhhW1JoTLJaHFtLDHGY&amp;cid=uE9WQNfXLgU#L0" class="postlink">Here.</a>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Wed Apr 03, 2013 9:33 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Init routines.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I'm pretty certain the RTS trick would let you get away with just using temporary bits of stack for walking the array. At least as long as you have fewer than 128 or 256 function pointers. You're talking about JSR, so you're already positing a functional stack.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Movax12</b> [ Wed Apr 03, 2013 9:39 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Init routines.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />It's not a big deal, I could use a bit of RAM, I just see it as more complex that is needed, though it does have the advantage of working across different modules. (A pre-compiled obj file could have it's init routine called from another source.)<br /><br />But to argue the point, I don't see how to code such a routine that is not going to have to use RAM to create a pointer to get the pointers. EDIT: Disregard that, something like this might work:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">ldy #0<br /><br />loop:<br /><br />tya<br />pha<br /><br />lda __CONSTRUCTOR_TABLE__,y<br />pha<br />iny<br />lda __CONSTRUCTOR_TABLE__,y<br />pha<br /><br />rts<br /><br />pla<br />tay<br />iny<br />iny<br />cmp #&lt;(__CONSTRUCTOR_COUNT__*2)<br />bcc loop<br /></div><br /><br />EDIT2: For the sake of clarity: I think the list is intended to be called from the bottom (load y first and decrement it).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Wed Apr 03, 2013 9:53 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Init routines.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />How about this? (untested) Only uses the stack (which is pretty much a given as it's calling init routines which end in RTS).<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">call_ctors:<br />&nbsp; &nbsp; &nbsp; &nbsp; lda #&lt;(__CONSTRUCTOR_COUNT__*2)<br />&nbsp; &nbsp; &nbsp; &nbsp; beq @none<br /><br />@loop:&nbsp; sec<br />&nbsp; &nbsp; &nbsp; &nbsp; sbc #2<br />&nbsp; &nbsp; &nbsp; &nbsp; pha<br />&nbsp; &nbsp; &nbsp; &nbsp; jsr @call<br />&nbsp; &nbsp; &nbsp; &nbsp; pla<br />&nbsp; &nbsp; &nbsp; &nbsp; bne @loop<br />@none:&nbsp; rts<br /><br />@call:&nbsp; tay<br />&nbsp; &nbsp; &nbsp; &nbsp; lda __CONSTRUCTOR_TABLE__+1,y<br />&nbsp; &nbsp; &nbsp; &nbsp; pha<br />&nbsp; &nbsp; &nbsp; &nbsp; lda __CONSTRUCTOR_TABLE__,y<br />&nbsp; &nbsp; &nbsp; &nbsp; pha<br />&nbsp; &nbsp; &nbsp; &nbsp; php<br />&nbsp; &nbsp; &nbsp; &nbsp; rti</div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Movax12</b> [ Wed Apr 03, 2013 9:59 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Init routines.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Okay I'll give it a try in my actual code, since there are some nice advantages.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Wed Apr 03, 2013 10:45 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Init routines.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Ah, yeah I didn't realize condes.s did that (as I said, I threw it away anyway). I dunno if I'd call that &quot;quite a bit&quot; of RAM, but it's definitely more than trivial. Seems a strange way to go about that, but I guess it was probably written with an architecture more like C64 in mind.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Movax12</b> [ Thu Apr 04, 2013 12:38 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Init routines.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />blargg, your code works fine. I only tested it on one &quot;constructor&quot; but I see no reason it wouldn't work for more.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>