<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - how to write to individual bits of a byte</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">how to write to individual bits of a byte</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=10&amp;t=6998">http://forums.nesdev.com/viewtopic.php?f=10&amp;t=6998</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>alkex</b> [ Sat Oct 02, 2010 3:45 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>how to write to individual bits of a byte</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Hi!
<br />
<br />I'm trying to use my arduino to send bytes to the nes through the joypad port.
<br />
<br />how would I write the button states to an 8 bit value on each strobe?
<br />
<br />I'm basically trying to perform the nes asm equivalent of arduino's bitWrite command.
<br />
<br />Sorry if it's a stupid question, thanks in advance!
<br />
<br />Alex

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>doppelganger</b> [ Sat Oct 02, 2010 4:08 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />To set bits, use ORA:
<br />
<br />lda somevalue
<br />ora #%00100100 ;sets bits 5 and 2, leaves the rest alone
<br />sta somevalue
<br />
<br />To clear bits, use AND:
<br />
<br />lda somevalue
<br />and #%11011011 ;clears bits 5 and 2, leaves the rest alone
<br />sta somevalue
<br />
<br />To toggle bits, use EOR:
<br />
<br />lda somevalue
<br />eor #%00100100 ;clears bits 5 and 2 if they were set, and vice versa
<br />sta somevalue ;and leaves the rest alone
<br />
<br />Alternatively, you could LDA the bit and AND/ORA/EOR the memory location.  It's up to you.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>3gengames</b> [ Sat Oct 02, 2010 7:48 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />^ Good explanation!
<br />
<br />
<br />And here's a link on how to read the controllers. I'd say the easiest way to read them would be to shift the $4016 register after resetting it, then shift a, after 7 more times, A will have the controllers status inside it then you just store it in RAM and RTS to your main program, assuming your controller read is a subroutine, Since it should be.
<br />
<br />
<br />
<br />Here's a site that has the buttons for each bit value. 
<br />
<br /><a href="http://fms.komkon.org/EMUL8/NES.html#LABI" class="postlink">http://fms.komkon.org/EMUL8/NES.html#LABI</a>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>alkex</b> [ Sat Oct 02, 2010 9:36 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Thanks Doppelganger/65024U !
<br />
<br />Working a treat
<br />Best
<br />
<br />Alex

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>doppelganger</b> [ Fri Aug 24, 2012 11:21 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: how to write to individual bits of a byte</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />And for my next trick, how to check individual bits of a byte that aren't bits 7 or 6 with the BIT instruction.<br /><br />lda %00100100   ;branches if either bit 5 or 2 are set<br />bit somevalue<br />bne somewhere

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Fri Aug 24, 2012 11:30 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: how to write to individual bits of a byte</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">doppelganger wrote:</div><div class="quotecontent">And for my next trick, how to check individual bits of a byte that aren't bits 7 or 6 with the BIT instruction.<br /><br />lda %00100100   ;branches if either bit 5 or 2 are set<br />bit somevalue<br />bne somewhere</div><br />Using BIT here doesn't really have any benefits over using AND, unless the mask (%00100100) happens to be some magic value that can be reused later in the code (and even then, the benefit is negligible).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>LocalH</b> [ Sat Aug 25, 2012 8:08 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: how to write to individual bits of a byte</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />BIT is more useful (sometimes) when the value you're testing is in A and you don't want to modify it, like this:<br /><br />LDA somevalue<br />BIT #%00100100<br />BNE somewhere<br /><br />In fact, AFAIK that's the only difference between BIT and AND - AND stores the result in A, wiping out the original value. If the result of the AND is 0 during a BIT instruction, then the Z flag is set. Also, outside of immediate addressing, BIT will also copy bit 7 into the N flag and bit 6 into the V flag, so it's an easy way to branch based on whether either bit is set.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sat Aug 25, 2012 9:39 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: how to write to individual bits of a byte</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />BIT # works only on CMOS chips, such as those in the Lynx, TG16, Super NES, Apple IIc and IIGS, and late Apple IIe. On the original 6502, seen in Atari 2600/5200/7800, Commodore 64, Apple II/II+/III/IIe, and NES, BIT # is a 2-byte no-op.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>LocalH</b> [ Sat Aug 25, 2012 1:11 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: how to write to individual bits of a byte</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />My bad, I should have known that being a C64 guy. Looks like I'm getting a little rusty <img src="./images/smilies/icon_razz.gif" alt=":P" title="Razz" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Drag</b> [ Sun Aug 26, 2012 10:55 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: how to write to individual bits of a byte</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I found this a few weeks ago and thought it was pretty cool; if you want to take two bytes, A and B, and create a byte C where C has bits from A and bits from B, here's how you do it:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">LDA byteA<br />EOR byteB<br />AND #(for each bit, 1 means a bit from A, 0 means a bit from B)<br />EOR byteB</div><br /><br />This is a little better than how you'd do it otherwise:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">LDA byteA<br />AND #(the bits you want to keep)<br />STA temp<br />LDA byteB<br />AND #(the bits you want to keep)<br />ORA temp</div><br /><br />I found this trick when looking up stuff for the ZX Spectrum, and this was pretty common to do on the z80.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sun Aug 26, 2012 11:04 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: how to write to individual bits of a byte</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />And in fact, the trick is one of the first things you come across when you disassemble the Monitor ROM of the Apple II.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Jeroen</b> [ Fri Aug 31, 2012 7:25 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: how to write to individual bits of a byte</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I wonder if the terminator used that trick...

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sat Sep 01, 2012 6:11 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: how to write to individual bits of a byte</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />You'd have to look at <a href="http://www.nibblemagazine.net/nibble_disks.htm" class="postlink">Key Perfect</a>, as that appears to be part of the hash table implementation used on the 6502-compatible microcontroller that runs Arnie's medium-term memory. In Key Perfect, each 50-byte record (or 80-byte? Sites are inconsistent on this) gets a 16-bit hash code.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>