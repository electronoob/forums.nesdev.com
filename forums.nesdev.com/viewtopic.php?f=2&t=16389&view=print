<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Optimization of assembly code of cc65 possible?</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Optimization of assembly code of cc65 possible?</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=16389">http://forums.nesdev.com/viewtopic.php?f=2&amp;t=16389</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>DRW</b> [ Sun Aug 20, 2017 11:07 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Optimization of assembly code of cc65 possible?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />When I write inline assembly code in C with cc65 (<tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">__asm__&#40;&quot;LDA %v&quot;, variable&#41;</tt>), then the code will get optimized just like the rest of the C code and I can see the optimization in the generated .s file.<br /><br />Is there a way to run the same optimizer over a hand-written .s file and to generate a second .s file out of it?<br /><br />I know, I could simply turn the whole file into a C file with inline assembly. But is there also a simpler way? A way that allows me two write my assemy code in an actual *.s file, but where I can generate a copy of it that I then put into the compile process, so that the ROM always automatically has the optimized code.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>calima</b> [ Sun Aug 20, 2017 11:35 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Optimization of assembly code of cc65 possible?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />No, that's not possible. The optimizer is part of the C compiler, the assembler has nothing of the sort.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>DRW</b> [ Sun Aug 20, 2017 11:50 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Optimization of assembly code of cc65 possible?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Maybe this would be a good feature in the future. It shouldn't require that much programming logic: The assembler simply needs to convert the assembly file into a C file with inline assembly. And then, it lets the C compiler run over it to produce another assembly file.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>calima</b> [ Mon Aug 21, 2017 1:55 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Optimization of assembly code of cc65 possible?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Is it useful though? Even a newbie to asm can easily write better code than what cc65 does.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Oziphantom</b> [ Mon Aug 21, 2017 3:11 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Optimization of assembly code of cc65 possible?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />If you want an optimising assembler, tass64 has a build in optimiser, but it only provides you with hints on what can be optimised. As sometimes doing an optimisation will undo the ability to optimise. It won't rearrange your code, but it will find shortcuts and dead opcodes like doing a clc after a bcs for example.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>DRW</b> [ Mon Aug 21, 2017 3:34 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Optimization of assembly code of cc65 possible?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">calima wrote:</div><div class="quotecontent">Is it useful though? Even a newbie to asm can easily write better code than what cc65 does.</div><br />You can surely write better Assembly code than what the cc65 compiler turns into Assembly out of C.<br /><br />But my idea is about writing hand-written Assembly code and getting <em>that one</em> optimized by the compiler.<br />I assume that hand-written assembly code is better than the same hand-written assembly code + optimizations on it, don't you?<br /><br /><div class="quotetitle">Oziphantom wrote:</div><div class="quotecontent">If you want an optimising assembler, tass64 has a build in optimiser</div><br />Can it work with the ca65 syntax? My idea was to check my existing code without much hazzle and with the same or better optimizing quality that cc65 uses for inline assembly blocks.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>FrankenGraphics</b> [ Mon Aug 21, 2017 3:40 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Optimization of assembly code of cc65 possible?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />That [tass64-style tips] would be an interesting feature for ca65. Maybe it could output all optimisation tips in a separate list; rather than cluttering the console (the cc65 suite already has all kinds of notes, warnings and error notices). <br /><br />With 1)a command line option to activate optimisation tips, and 2) a directive to ignore generating tips for certain blocks, it'd be effective.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Oziphantom</b> [ Mon Aug 21, 2017 4:08 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Optimization of assembly code of cc65 possible?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">DRW wrote:</div><div class="quotecontent"><div class="quotetitle">Oziphantom wrote:</div><div class="quotecontent">If you want an optimising assembler, tass64 has a build in optimiser</div><br />Can it work with the ca65 syntax? My idea was to check my existing code without much hazzle and with the same or better optimizing quality that cc65 uses for inline assembly blocks.</div><br /><br />It depends on how deeply you use CA65s features, both use the dot directive format, so .byte .word .segment etc. Tass64 has a build in linker rather than an external one, so they conceptually do the same things, just with different levels of abstraction. The macro format is not compatible. A better question might be, What does CA65 do that you need, and can Tass64 do it as well? Then if it can/or you like the idea of the optimizer more, do a small test with the optimizer to see if it will does enough to switch.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>