<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=2&amp;t=4747" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2009-01-16T03:36:17-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=2&amp;t=4747</id>
<entry>
<author><name><![CDATA[ccovell]]></name></author>
<updated>2009-01-16T03:36:17-07:00</updated>
<published>2009-01-16T03:36:17-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4747&amp;p=42009#p42009</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4747&amp;p=42009#p42009"/>
<title type="html"><![CDATA[Hardware 2A03 Programming]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4747&amp;p=42009#p42009"><![CDATA[
BCC, BCS, BEQ, BNE, BVC, BVS, RTS, RTI etc... will also change the program flow.  As to the low-level stuff, I don't know.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=355">ccovell</a> — Fri Jan 16, 2009 3:36 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2009-01-15T23:56:32-07:00</updated>
<published>2009-01-15T23:56:32-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4747&amp;p=42007#p42007</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4747&amp;p=42007#p42007"/>
<title type="html"><![CDATA[Hardware 2A03 Programming]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4747&amp;p=42007#p42007"><![CDATA[
I am under the impression that the CPU will save something on the stack first when getting reseted (as it does when being interrupted by IRQ or NMI).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Thu Jan 15, 2009 11:56 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[skrasms]]></name></author>
<updated>2009-01-15T19:47:47-07:00</updated>
<published>2009-01-15T19:47:47-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4747&amp;p=42005#p42005</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4747&amp;p=42005#p42005"/>
<title type="html"><![CDATA[Hardware 2A03 Programming]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4747&amp;p=42005#p42005"><![CDATA[
I keep running into these really simple clarifications that I don't find answers for anywhere else. Someone here always seems to know what's up. <br /><br />I'm trying to get a better handle on programming a 2A03 from scratch. I like to understand everything completely before I start changing things. <br /><br />From what I understand, as soon as a 2A03 turns on or gets reset, it tries to grab a 16-bit memory location from address 0xFFFC. So I should see 0xFFFC followed by 0xFFFD on the address pins as it tries to read in the data. <br /><br />If I keep the data pins held low during those two cycles, the 2A03 will read 0x0000 and try to jump to that location in the ROM. I should see 0x0000 on the address pins on the next clock cycle. <br /><br />From that point the chip is ready for legitimate program code. As long as I don't trigger any interrupts or use jump/brk instructions, the value on the address pins should increase by one for each cycle. <br /><br />Am I correct so far?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3470">skrasms</a> — Thu Jan 15, 2009 7:47 pm</p><hr />
]]></content>
</entry>
</feed>