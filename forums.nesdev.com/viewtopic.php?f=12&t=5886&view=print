<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Results of using FeRAM instead of Battery+SRAM</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Results of using FeRAM instead of Battery+SRAM</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=12&amp;t=5886">http://forums.nesdev.com/viewtopic.php?f=12&amp;t=5886</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>whicker</b> [ Wed Dec 30, 2009 2:21 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Results of using FeRAM instead of Battery+SRAM</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />....After months of use and abuse, I can report that it actually works without issue, but requires glue logic.
<br />
<br />Okay, let's back up a second, what am I talking about?
<br />
<br />No doubt the backup battery in some of your SNES cartridges have gone dead, not allowing your saves to last beyond power off, or, in some cases, the game refuses to run at all.
<br />
<br />Obviously encountering this myself, I thought to look up any sort of nonvolatile memory that acts somewhat like the SRAM chips (probably in about 2004). I gave up the first time because I realized the 5V FeRAM series of chips could never be a drop-in replacement because of the need to strobe the Chip Select signal. So I kind of gave up then and there...
<br />
<br />Earlier this year, I renewed my interest in the SNES console and in making some sort of programmable cartridge for my own use. At this point I had a deep hatred for coin cell batteries. So I figured, what the hell, go for it, and use the Ramtron FM1808 32KB chip.
<br />
<br />The trick is that since the memory performs destructive read and writeback, it needs a more organized bus access than purely asynchronous like SRAM does. The falling edge of Chip Select latches the address, and then either a read or write can be performed. Or, you can have it set up for a read or write, and then drop chip select (That second way is what ends up working for me on my board).
<br />
<br />Attached in the next post is a simplified schematic of a 8 meg flash chip, the F-RAM, and a functional logic gate configuration set up for LoROM. I don't actually have those switches, but I guess I'm drawing it this way to show conceptually how to map to the different sizes of battery RAM.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>whicker</b> [ Wed Dec 30, 2009 2:22 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><img src="http://i570.photobucket.com/albums/ss144/whickercuppajo3/LoROM.png" alt="Image" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>whicker</b> [ Wed Dec 30, 2009 2:47 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />With some buffering after the CE signal, I connected an access light LED, and in some cases an audible logic probe. Playing different games, I noticed that they are in general very well behaved about accessing the battery RAM (Again, the fear was that it would be reading constantly from the battery RAM, and wear it out like nothing).
<br />
<br />
<br />Some specifics:
<br />
<br />F-Zero just generally reads everything at the beginning, and doesn't touch it unless you place in the rankings in time trial mode, and it's a tiny little write.
<br />
<br />Zelda LTTP is kind of weird, in that on the title and file select screen, it keeps reading from the memory, but in short bursts with plenty of time in-between. Once the actual game gets going it does something even more interesting: every time your character's name is mentioned, it reads it directly from the save ram. It's funny how they were either lazy or went to the trouble to save a few bytes of system ram.
<br />
<br />SimCity works just like you'd expect. Nothing goes on at all, except a little check at the beginning, and activity only when SAVE or LOAD is selected. Or with the "fax" when you win a scenario which is understandable.
<br />
<br />Final Fight Guy HATES having any sort of save-ram in the memory map. I'm almost halfway interested in what it is actually writing to the chip. Are there any other smallish sized games that care about the RAM being in the memory map? I haven't come across many others.
<br />
<br />I just really like the concept of having the game save act normally, and having it accident proof. What I'm saying is that I don't like the concept of trying to constantly dump to SD or CF Card either.
<br />
<br />My other question is, is if anyone knows if there are any non-special chip commercial game releases (not translation patches) that treat the battery RAM area as a scratchpad memory, that as a result is constantly being changed? I can't see use like that being much of an advantage, so it's probably rare.
<br />
<br />Anyways, I can probably put up some grainy pictures of my rat's-nest SD programmable cart in a day or two.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dwedit</b> [ Wed Dec 30, 2009 3:39 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I remember seeing Sekien Densetsu 3 triggering the "Sram Check and Save" feature of ZSNES in various places while the game was running, and that was when I wasn't saving the game.  I mainly noticed it when you played the flute to ride on the turtle.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Wed Dec 30, 2009 7:20 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">whicker wrote:</div><div class="quotecontent">Zelda LTTP is kind of weird, in that on the title and file select screen, it keeps reading from the memory, but in short bursts with plenty of time in-between. Once the actual game gets going it does something even more interesting: every time your character's name is mentioned, it reads it directly from the save ram. It's funny how they were either lazy or went to the trouble to save a few bytes of system ram.</div><br />One fellow's laziness is another's efficiency. OLD MAN from Pokemon anyone?<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Final Fight Guy HATES having any sort of save-ram in the memory map.</div><br />Copy protection perhaps?<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Are there any other smallish sized games that care about the RAM being in the memory map?</div><br />Low G Man is the canonical example for NES, but I can't think of any on Super NES.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">My other question is, is if anyone knows if there are any non-special chip commercial game releases (not translation patches) that treat the battery RAM area as a scratchpad memory, that as a result is constantly being changed?</div>
<br />I'd like to see you try Mario Paint.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Jeroen</b> [ Wed Dec 30, 2009 7:36 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">One fellow's laziness is another's efficiency. OLD MAN from Pokemon anyone?</div> 
<br />Can you explain what you  mean by this?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dwedit</b> [ Wed Dec 30, 2009 7:46 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />In Pokemon, there's a place early in the game where an old man teaches you how to catch pokemon using pokeballs.
<br />The game copies your name to an area in memory used for storing which pokemon appear, then temporarily changes your name to OLD MAN to run the cutscene.  Then it restores your name.
<br />
<br />Normally, the area in memory for storing which pokemon appear is replaced as soon as you stop on grass.  However, there are some places where it is possible to get into fights without that data getting replaced.  So suddenly, you get into fights with glitch pokemon that don't exist, like MissingNo.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Jeroen</b> [ Wed Dec 30, 2009 7:55 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Ah I see, I knew about the missingno thing just didnt know about the old man part. Cool to know <img src="./images/smilies/icon_smile.gif" alt=":-)" title="Smile" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>MottZilla</b> [ Wed Dec 30, 2009 12:03 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />So FeRAM has a finite number of writes or both reads and writes since reads destroy the data held and it must be rewritten? How many reads/writes is the expected life time on them? It's a shame there is a limit at all. That's always bothered me about Flash memory too.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>hyarion</b> [ Wed Dec 30, 2009 12:51 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />FRAM has between around 10^10 and 10^16 write-erase cycles, flash is somewhere between 10^4 - 10^7

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>whicker</b> [ Thu Dec 31, 2009 1:17 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />yeah, I mean, unless you sit in a tight loop reading or writing the same location over and over again, it's really hard to hit that kind of a limit, but that's what I'm searching for.
<br />
<br />With the assumption of 10^12 reads of a given byte, 60 times a second, it'll take 528 years to fail.
<br />
<br />If you read a solitary byte a half a million times a second, it'll take 23 days.
<br />
<br />
<br />
<br />Mario Paint results:
<br />
<br />Scan for checksum when it first comes out of reset, just before the title screen appears, like any other Nintendo developed game I've seen.
<br />
<br />Reads the battery RAM as the main canvas appears. Don't know why. It's not like it saves the mouse speed.
<br />
<br />When spinning through the palette on top: whenever it encounters the user-made stamps it reads from the battery RAM. Can repeatedly left and right click and it will keep doing it.
<br />
<br />Subscreens like the music editor, the animation editor, the path editor, don't do anything with battery RAM, neither does Flyswatter.
<br />
<br />The "special stamp" editor screen only does something when either SAVE or LOAD is selected the first time, and then obviously does the read or write when clicking on the user-made stamps in the palette.
<br />
<br />
<br />Undo does not cause an access. Even if it's a severe undo like reverting a flood-fill.
<br />
<br />And here's again something interesting: It's that fricken creepy robot screen. For SAVE it doesn't do anything with battery RAM until after the countdown has been sitting on 12. Basically, it only writes in one big burst from 11 down to 0. And that is the very fast part.
<br />
<br />When you click on the Start button in LOAD, it's immediately grabs the data from battery RAM, as the sound effect is playing, then counts down.
<br />
<br />There's got to be some sort of Work-RAM to PPU character and color palette memory translation going on chewing up all of those cycles.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>hyarion</b> [ Thu Dec 31, 2009 2:39 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Reading the ram doesn't make it fail, it's the write/erase that causes problems.
<br />I don't think anyone would update saves in a tight loop, would be a bit costly if you want some kind of error protection... however someone could have used it as extended ram (much like the gba-port ram on nintendo ds) but i don't see why to worry about that
<br />
<br />btw I just read the <a href="http://www.farnell.com/datasheets/82491.pdf" class="postlink">datasheet for FM18L08</a>, don't think it's any good for your application (256Kbit, ~3.3V) but "Unlimited Read/Write Cycles" sounds nice even thou it has only "45 year Data Retention" <img src="./images/smilies/icon_wink.gif" alt=";)" title="Wink" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Thu Dec 31, 2009 5:52 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">whicker wrote:</div><div class="quotecontent">Subscreens like the music editor, the animation editor, the path editor, don't do anything with battery RAM, neither does Flyswatter.<br /></div><br />I was concerned about what appears to be a copy of the toolbar tiles in the SRAM file. What happens if you repeatedly toggle the toolbar?<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Undo does not cause an access. Even if it's a severe undo like reverting a flood-fill.</div><br />That's because the canvas and the undo buffer are both stored in internal RAM in their entirety.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">And here's again something interesting: It's that fricken creepy robot screen. For SAVE it doesn't do anything with battery RAM until after the countdown has been sitting on 12. Basically, it only writes in one big burst from 11 down to 0. And that is the very fast part.</div>
<br />I think it's actually doing tile compression. Two 256x176x4-bit buffers (ordinary canvas and animation canvas) take 44 KiB put together, bigger than the game's SRAM.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>whicker</b> [ Fri Jan 01, 2010 11:50 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">hyarion wrote:</div><div class="quotecontent">Reading the ram doesn't make it fail, it's the write/erase that causes problems.<br /><br />... however someone could have used it as extended ram (much like the gba-port ram on nintendo ds) but i don't see why to worry about that<br /><br />btw I just read the <a href="http://www.farnell.com/datasheets/82491.pdf" class="postlink">datasheet for FM18L08</a>, don't think it's any good for your application (256Kbit, ~3.3V) but "Unlimited Read/Write Cycles" sounds nice even thou it has only "45 year Data Retention" <img src="./images/smilies/icon_wink.gif" alt=";)" title="Wink" /></div><br /><br />The flavor of FeRAM I'm using has destructive read, which isn't unheard of. Magnetic donut core memory did the same kind of thing.<br /><br />I was more or less worried about seeing if any game did use it as extended RAM.<br /><br />Like you say, newer chips are better, and with the higher endurance number for virtually all practical uses will allow them to claim "unlimited", but unfortunately are 3.3 volts. I was using the FM1808, no L, which is a 5 volt part. It was the size and the 5 volts that made it a good fit. The datasheet for the FM1808-70-PG talks about the need for CE strobing.<br /><br /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">I was concerned about what appears to be a copy of the toolbar tiles in the SRAM file. What happens if you repeatedly toggle the toolbar?<br /></div>
<br />
<br />Nothing. but I notice a delay in the toolbar appearing when coming back from the stamp editor about equal to the save RAM access it does. But then if I disable the chip, there's no graphical corruption other than the special stamps when I draw on the canvas.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>