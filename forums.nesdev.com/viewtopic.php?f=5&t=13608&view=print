<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Prototyping NES games with PC pseudo-arcade games</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Prototyping NES games with PC pseudo-arcade games</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=5&amp;t=13608">http://forums.nesdev.com/viewtopic.php?f=5&amp;t=13608</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>3</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Wed Dec 09, 2015 10:42 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Prototyping NES games with PC pseudo-arcade games</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />It is an idea that came to me recently. It is a merge of the two following facts :<br /><br />1) Many NES games are more or less ports of arcade games (the most well known are Contra series, Gradius series, Donkey Kong, Double Dragon series). Some of them are among the most influential and popular NES games ever, despite the fact they were originally mere &quot;ports&quot;.<br /><br />2) It is possible to write pseudo-NES games for the PC that actually respect the graphics, sound and input limitations of the real console, but that do not require programing for the 6502. This solution has been evoquated quite a few times already on NESDev for people who do not plan to run their games on real hardware, or even for the sake of prototyping a game before porting it on the 6502.<br /><br />By merging the two concept together, it means it is just as sensible (or nonsensible) to make a pseudo-Arcade game for the PC. Instead of runing a game that uses a virtual NES hardware and no 6502, it would run a game on a virtual arcade hardware. It makes even more sense in my opinion to have a pseudo-Arcade game than a pseudo-NES game, because the limitations of Arcade games really depend on the chosen graphics/audio chips for every particular game. The CPU is different in each arcade game, then breaking the CPU limitation is less an technical rape than breaking the CPU limitations of the NES console.<br /><br />So do you guys think what I say makes sense, or am I completely insane ?<br /><br />In addition, it would always be possible to make a real arcade cabinet from a rasberry pi or something similar out of the PC program, and as such &quot;make it run on real hardware&quot; is a trivial step on the software side (however it could be possibly more difficult on the hardware side).<br /><br />This only makes sense for &quot;arcade games&quot;, respecting the philosophy mentioned in <a href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=13521" class="postlink">another topic</a>, meaning: Few levels, either no or very simplistic story scenes, no saves or passwords, high difficulty, beatable in less than one hour.<br /><br />The problem is that I know squat about what is the common denominator in 80's arade games hardware. I guess by the time of the peak of the NES populatiry (1986-1990) the aracde games were already closer to the Mega Drive in terms of technical possibilities which means 4BP graphics and FM sound. But what kind of graphic and sound chips were usually used ? Are there implementation of existing graphics and sound chips on the PC usable in a PC program ?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Wed Dec 09, 2015 10:58 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Prototyping NES games with PC pseudo-arcade games</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />If it weren't for the historic inability to find a business model for a copylefted offline video game, you could probably rip the VDP implementation out of any Genesis emulator or the VDC/VCE out of Mednafen's TG16 emulator. Otherwise, perhaps it's an interesting engineering project to create a generic tiled VDP on top of SDL.<br /><br />Blargg's Game_Music_Emu contains C++ implementations of classic sound chips.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>mic_</b> [ Wed Dec 09, 2015 1:57 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Prototyping NES games with PC pseudo-arcade games</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">what kind of ... sound chips were usually used ?</div><br />OP-M/OP-N FM chips were common. See <!-- m --><a class="postlink" href="http://www.system16.com/">http://www.system16.com/</a><!-- m -->

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Wed Dec 09, 2015 2:31 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Prototyping NES games with PC pseudo-arcade games</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Cool, what about commonly used video chips ?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Wed Dec 09, 2015 3:46 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Prototyping NES games with PC pseudo-arcade games</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Most arcade video chips were custom, as I understand it.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>mikejmoffitt</b> [ Wed Dec 09, 2015 5:44 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Prototyping NES games with PC pseudo-arcade games</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">Cool, what about commonly used video chips ?</div><br />Arcade games, unlike console games, were almost always running on hardware designed explicitly for the game, or on a powerful general purpose platform. The game's design shaped the hardware for the most part, and hardware-specific limitations did not have a large roll in giving games character. There are broad exceptions ('70s games being black and white from available tech, '80s games being largely 2D from available tech, etc), and I will not count PlayChoice / VS System games in this because those are largely based on NES software.<br /><br />From this you can determine what your arcade hardware would be like based on the design of your game. For most games it was expected that the game run full speed and not run into sprite limits. If you want NES-era arcade hardware, take a look at mid-'80s hardware - A graphics layer or two, lots of sprites, 4bpp 12-bit color, many palettes, a few PCM channels backed by a PCM chip, an YM2151 or similar FM synth chip, etc.<br /><br />Decent example: Namco ND-1 uses this IC: <!-- m --><a class="postlink" href="http://html.alldatasheet.net/html-pdf/97613/ETC/YGV606B/46/1/YGV606B.html">http://html.alldatasheet.net/html-pdf/9 ... V606B.html</a><!-- m -->

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Thu Dec 10, 2015 6:10 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Prototyping NES games with PC pseudo-arcade games</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />So basically companies had to make ASICs for rendering graphics in their aracde games ? Anything can be believable as a 80's arcade game as long as it is purely 2D ? Where there no limitation for e.g. resolution, # of colours, etc... ? Was there not at least one or two &quot;well known&quot; chips used by various companies, like there is for sound ?<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Namco ND-1 uses this IC: <!-- m --><a class="postlink" href="http://html.alldatasheet.net/html-pdf/9">http://html.alldatasheet.net/html-pdf/9</a><!-- m --> ... V606B.html</div><br />Interesting, is that chip emulable on a PC ?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Thu Dec 10, 2015 8:36 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Prototyping NES games with PC pseudo-arcade games</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">Interesting, is that chip emulable on a PC ?</div><br />Are games on that board in MAME?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tomaitheous</b> [ Thu Dec 10, 2015 9:15 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Prototyping NES games with PC pseudo-arcade games</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">mikejmoffitt wrote:</div><div class="quotecontent"><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">Cool, what about commonly used video chips ?</div><br />Decent example: Namco ND-1 uses this IC: <!-- m --><a class="postlink" href="http://html.alldatasheet.net/html-pdf/97613/ETC/YGV606B/46/1/YGV606B.html">http://html.alldatasheet.net/html-pdf/9 ... V606B.html</a><!-- m --></div><br /> That's from 1995, not mid to late 80's.<br /><br /><br /> The average 1985/6 arcade systems are kind of close to the PC-Engine capabilities. The master palette is usually 12bit though, instead of PCE's 9bit. The Gradius arcade board uses a sound chip that's near identical to the PC-Engines as well (which Konami used in the MSX sound addon cart - SSC), if you didn't want to go the FM route. I personally find the characteristic sounds of the NES to be more intriguing  and charming, than FM. That and FM sound is usually associated with the 16bit era (even though it's not specifically tied to it). <br /><br /> There are high end arcade systems and there are mid and low range hardware as well. Setups like Space Harrier arcade hardware (1985), a glorified blitter, weren't exactly the norm for that era. And on top of that games from the mid to late 80's, didn't always take advantage of the hardware features (games that didn't feature much parallax layering when the system was capable of it). I personally would design it around what the average game showed, than just hardware specs - if you're trying to capture that feel and set limitation.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Thu Dec 10, 2015 3:42 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Prototyping NES games with PC pseudo-arcade games</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tomaitheous wrote:</div><div class="quotecontent">The average 1985/6 arcade systems are kind of close to the PC-Engine capabilities. The master palette is usually 12bit though, instead of PCE's 9bit.<br /></div><br />Cool, but I am completely unfamiliar with the PC Engine, let alone it's capabilities <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /> The only think I know about that system is that it has a 6502 derivate CPU.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">The Gradius arcade board uses a sound chip that's near identical to the PC-Engines as well (which Konami used in the MSX sound addon cart - SSC), if you didn't want to go the FM route.</div><br />Yeah, so basically the're PSG but with custom waveform instead of being bound to square/saw/triangle waves, right ? That's good and much simpler to understand than FM.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">There are high end arcade systems and there are mid and low range hardware as well.</div><br />Yeah so what I'd be interested in simulating is low to mid range hardware from the 1986-1990 time period. Let's say I run a small and poor game development company in that time (and cannot afford an ASIC), and want to make an arcade game, which hardware will I use ?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Thu Dec 10, 2015 5:13 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Prototyping NES games with PC pseudo-arcade games</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">Let's say I run a small and poor game development company in that time (and cannot afford an ASIC), and want to make an arcade game, which hardware will I use ?</div><br />In a lot of cases, the course of action there was to target a ROM replacement for an existing old game that a lot of people already have in their arcade, but you know its popularity is fading.<br /><br />e.g. the work of <a href="https://en.wikipedia.org/wiki/General_Computer_Corporation" class="postlink">General Computer Corporation</a>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>AWJ</b> [ Thu Dec 10, 2015 5:51 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Prototyping NES games with PC pseudo-arcade games</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent"><div class="quotetitle">tomaitheous wrote:</div><div class="quotecontent">The average 1985/6 arcade systems are kind of close to the PC-Engine capabilities. The master palette is usually 12bit though, instead of PCE's 9bit.<br /></div><br />Cool, but I am completely unfamiliar with the PC Engine, let alone it's capabilities <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /> The only think I know about that system is that it has a 6502 derivate CPU.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">The Gradius arcade board uses a sound chip that's near identical to the PC-Engines as well (which Konami used in the MSX sound addon cart - SSC), if you didn't want to go the FM route.</div><br />Yeah, so basically the're PSG but with custom waveform instead of being bound to square/saw/triangle waves, right ? That's good and much simpler to understand than FM.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">There are high end arcade systems and there are mid and low range hardware as well.</div><br />Yeah so what I'd be interested in simulating is low to mid range hardware from the 1986-1990 time period. Let's say I run a small and poor game development company in that time (and cannot afford an ASIC), and want to make an arcade game, which hardware will I use ?</div><br /><br />Low end hardware from that period will probably have two to four tilemap layers (one of which may be a non-scrollable text layer), a sprite generator with 128 or so 16x16 sprites (with larger characters created by assembling metasprites in software) and an OPL2 or OPN chip for sound. There might be one PCM voice for speech, either a NEC or Oki ADPCM chip or just a Z80 bit-banging to a DAC. Graphics will be mainly 4BPP, maybe only 3BPP for some of the tilemaps. Look at Double Dragon or Twin Cobra or 1943--that's what low-end late-1980s hardware looks like.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Fri Dec 11, 2015 7:07 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Prototyping NES games with PC pseudo-arcade games</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Low end hardware from that period will probably have two to four tilemap layers (one of which may be a non-scrollable text layer), a sprite generator with 128 or so 16x16 sprites (with larger characters created by assembling metasprites in software) and an OPL2 or OPN chip for sound. There might be one PCM voice for speech, either a NEC or Oki ADPCM chip or just a Z80 bit-banging to a DAC. Graphics will be mainly 4BPP, maybe only 3BPP for some of the tilemaps. Look at Double Dragon or Twin Cobra or 1943--that's what low-end late-1980s hardware looks like.</div><br /><br />Cool, what is your sources about the graphics ? The website linked above ( <a href="http://www.system16.com/" class="postlink">http://www.system16.com/</a> ) does only mention CPUs and sound chips, and does hardly ever mention anything graphics related.<br /><br />Were tile-maps also used ? With 8x8 tiles or a different size ? Were there also palette lock-up or were the colours refered to directly ? In case of 4BP graphics, is it the same 16-colour palette for the whole screen, or is there multiple blocks with different palettes ?<br /><br />Same question for sprites : All sprites using the same 16-colour palette or different sprites using different palettes ?<br /><br />Did they use CHR-ROM or CHR-RAM to store graphics ?<br /><br />EDIT : Also, I've learn all and everything about the amazing family of Yamaha chips, but were there well known chips from other manufacturers ?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>psycopathicteen</b> [ Fri Dec 11, 2015 10:27 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Prototyping NES games with PC pseudo-arcade games</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Probably multiple palettes.  Neo Geo had 16-colors per sprite, but 256 sets of 16 colors to chose from.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>AWJ</b> [ Fri Dec 11, 2015 2:10 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Prototyping NES games with PC pseudo-arcade games</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">Cool, what is your sources about the graphics ? The website linked above ( <a href="http://www.system16.com/" class="postlink">http://www.system16.com/</a> ) does only mention CPUs and sound chips, and does hardly ever mention anything graphics related.</div><br /><br />Mainly MAME source code.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Were there also palette lock-up or were the colours refered to directly ? In case of 4BP graphics, is it the same 16-colour palette for the whole screen, or is there multiple blocks with different palettes ?</div><br /><br />Palette lookup, with each sprite and tile having its own attribute, just like 4th generation consoles. Most hardware from the 1986-1990 period was using palette RAM, but really low end hardware (e.g. 1943) still used PROMs, meaning the palette for the entire game was a fixed set of 256 or so colors (but still with attributes to select which 16 out of those 256 each sprite and tile use)<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Did they use CHR-ROM or CHR-RAM to store graphics ?</div><br /><br />The majority of arcade hardware from this period used CHR-ROM, though CHR-RAM was not unheard of (e.g. the Gradius series--which was decidedly <em>not</em> low-end). In low-end hardware each layer would have its own ROMs. A scrolling tilemap with its own dedicated ROMs is dead simple to build out of 7400-series logic chips. Drawing two or three tilemaps from the same ROMs (so you can display the same object in either the background or the foreground without needing two copies of the pattern data) is quite a bit trickier and generally done with an ASIC, meaning it was limited to the larger manufacturers like Namco, Konami, Sega, Taito.<br /><br />Regarding tilemap size, 8x8, 16x16 and even 32x32 tiles were all common. Capcom liked to use big tiles whereas Konami pretty much stuck to 8x8 (but 16x16 sprites).<br /><br />Something you'll see particularly in low-end hardware from this period is ROM-based tilemaps (meaning the &quot;nametables&quot; are in ROM, like NES After Burner) 1943 and other Capcom Z80-based hardware from the period used these, as did a few other manufacturers. The foreground tilemap that displays the score digits etc. is RAM-based for obvious reasons, but the background and midground (the clouds and ships in 1943) have all the scenery for the entire game in giant ROM-based tilemaps so all the CPU has to do to display anything is write the appropriate values to the scroll registers. This limits what you can do with animation (everything that can move independently has to be a sprite) but saves the CPU from having to spend a bunch of its time just copying data from ROM to VRAM.<br /><br />These are more of an early-1980s thing, but dedicated starfield generators are still something you occasionally see in the late 1980s (CPS1 even had one, though only one or two of the games used it). A starfield generator consists of a LFSR with a bunch of the outputs ANDed together (the more of the outputs are ANDed together, the more sparse the stars are). You &quot;scroll&quot; the starfield in the direction of scan (left/right on a monitor in TV orientation, up/down on a vertical monitor) by changing what state the LFSR starts in at the beginning of the frame. As memory got cheaper starfield generators were gradually replaced by tilemaps, which allow your space background to have constellations, nebulae, etc. and not just pseudorandomly-placed stars.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>3</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>