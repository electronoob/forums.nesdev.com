<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=2&amp;t=12251" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2015-01-15T17:27:16-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=2&amp;t=12251</id>
<entry>
<author><name><![CDATA[lidnariq]]></name></author>
<updated>2015-01-15T17:27:16-07:00</updated>
<published>2015-01-15T17:27:16-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12251&amp;p=139291#p139291</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12251&amp;p=139291#p139291"/>
<title type="html"><![CDATA[Re: Odd code...]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12251&amp;p=139291#p139291"><![CDATA[
It's not really the same thing, but Galaxian verifies in the NMI that the return address is somewhere between $E000 and $FFFF... otherwise it assumes the game has crashed and reboots.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3512">lidnariq</a> — Thu Jan 15, 2015 5:27 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tomaitheous]]></name></author>
<updated>2015-01-15T16:43:27-07:00</updated>
<published>2015-01-15T16:43:27-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12251&amp;p=139290#p139290</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12251&amp;p=139290#p139290"/>
<title type="html"><![CDATA[Odd code...]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12251&amp;p=139290#p139290"><![CDATA[
Or maybe not? I was working on Dragon Warrior nes2pce thing recently, and I came across something I hadn't seen before. The NMI routines takes the stack pointer and looks at the address pushed from the interrupt call. It appears that the game identifies where the game logic is 'idling' or not (there are multiple checks), before the NMI was called.<br /><br /> I hadn't seen this before, and the reason I noticed it is that for the PCE I replace the NMI vector with a custom one in which I handle a few internal emulation states, before passing code direction back to the game's original nmi routine. It wasn't working because I was pushing a return address (and dummy PHP), onto the stack so that the NMI routine would return back into my PCE vblank interrupt routine and clear a flag on exit (I didn't want more than <em>one </em>NMI happening, just in case). This caused a misalignment on the NMI side for directly reading into the $0100 range. I ended up modifying the original routine to point ahead (3 bytes) into the stack space to fix it. But yeah - I thought this was strange. <br /><br /> I've heard Final Fantasy I does some stack manipulation. Is it like this? Are there other NES games known to do this?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3645">tomaitheous</a> — Thu Jan 15, 2015 4:43 pm</p><hr />
]]></content>
</entry>
</feed>