<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Why no SNES homebrew scene?</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Why no SNES homebrew scene?</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=12&amp;t=10957">http://forums.nesdev.com/viewtopic.php?f=12&amp;t=10957</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>29</strong> of <strong>30</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>psycopathicteen</b> [ Sat Jul 07, 2018 8:55 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Why no SNES homebrew scene?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I think I attempted making one a long time ago, but I forgot where it is.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>koitsu</b> [ Sat Jul 07, 2018 10:34 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Why no SNES homebrew scene?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Oziphantom wrote:</div><div class="quotecontent">How modular is ORCA, it is probably fairly easy to get a 65816 simulator and then enough Apple //gs file system rom mocked enough to give it what it expects and then run the ORCA assembler at ghz speed on a pc without having to go through a whole //gs emulator?</div><br />I expect by linking <a href="https://www.dropbox.com/sh/15z9w4v0s6h7xz7/AAA7LMYuURYHjYRZSSzCKnina?dl=0" class="postlink">my collection of 65816-related assembler documentation</a> that you will read it.  When I said, quote, &quot;top-grade assembler&quot;, I am not kidding.  You'll understand soon enough.  But I feel you're asking the wrong question.  There is no point in trying to &quot;port ORCA/M&quot; in its entirety.  The question you should be asking is &quot;what ORCA/M directives does Toshi's lcc816 emit&quot;, followed by looking at it, followed by referencing the ORCA/M manual for answers, followed by changing the relevant code in lcc816 to emit output for other types of present-day assemblers.  When Charles Doty said that he did a SNES homebrew in a heavily-modified lcc816, I'm fairly sure this is what he meant (combined with probably lots of macro/code generation changes and optimisation; Charles does 65816 just like the rest of us).  So, really, spending the time to examine TM's lcc816 would probably make a better first step... if someone even wants to do it.  Talk is cheap these days, and I'm just as subject to that statement as anyone else.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>psycopathicteen</b> [ Sat Jul 07, 2018 11:31 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Why no SNES homebrew scene?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I have a working signed and unsigned 16x16 to 32bit multiplication routine, for anybody working on a library.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">signed_16_bit_multiplication:<br />stz {product}+2&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;//high word of product needs to be cleared<br />sep #$10<br />ldx {temp}<br />stx $4202<br />ldy {temp2}<br />sty $4203&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;//set up 1st multiply<br />&nbsp; &nbsp;ldx {temp2}+1<br />&nbsp; &nbsp;clc<br />lda $4216&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;//load $4216 for 1st multiply<br />stx $4203&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;//start 2nd multiply<br />&nbsp; &nbsp;sta {product}<br />lda $4216&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;//read $4216 from 2nd multiply<br />ldx {temp}+1<br />stx $4202&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;//set up 3rd multiply<br />sty $4203&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;//y still contains temp2<br />&nbsp; &nbsp;adc {product}+1<br />adc $4216&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;//add 3rd product<br />sta {product}+1<br />ldy {temp2}+1<br />sty $4203&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;//set up 4th multiply<br />&nbsp; &nbsp;lda {product}+2&nbsp; &nbsp;&nbsp; &nbsp;//carry bit to last byte of product<br />&nbsp; &nbsp;bcc +<br />&nbsp; &nbsp;adc #$00ff<br />+;<br />adc $4216&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;//add 4th product<br />cpx #$80&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;//x is currently temp high byte<br />bcc +<br />sbc {temp2}<br />+;<br />cpy #$80&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;//y is currently temp2 high byte<br />bcc +<br />sbc {temp}<br />+;<br />sta {product}+2&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;//final store<br />rep #$10<br />rts<br /><br /><br />unsigned_16_bit_multiplication:<br />stz {product}+2&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;//high word of product needs to be cleared<br />sep #$10<br />ldx {temp}<br />stx $4202<br />ldy {temp2}<br />sty $4203&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;//set up 1st multiply<br />&nbsp; &nbsp;ldx {temp2}+1<br />&nbsp; &nbsp;clc<br />lda $4216&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;//load $4216 for 1st multiply<br />stx $4203&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;//start 2nd multiply<br />&nbsp; &nbsp;sta {product}<br />lda $4216&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;//read $4216 from 2nd multiply<br />ldx {temp}+1<br />stx $4202&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;//set up 3rd multiply<br />sty $4203&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;//y still contains temp2<br />&nbsp; &nbsp;adc {product}+1<br />adc $4216&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;//add 3rd product<br />sta {product}+1<br />ldy {temp2}+1<br />sty $4203&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;//set up 4th multiply<br />&nbsp; &nbsp;lda {product}+2&nbsp; &nbsp;&nbsp; &nbsp;//carry bit to last byte of product<br />&nbsp; &nbsp;bcc +<br />&nbsp; &nbsp;adc #$00ff<br />+;<br />adc $4216&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;//add 4th product<br />sta {product}+2&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;//final store<br />rep #$10<br />rts<br /><br /></div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Sat Jul 07, 2018 3:43 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Why no SNES homebrew scene?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">koitsu wrote:</div><div class="quotecontent">If I could magically wave my arms and make something happen, it would be to fix/improve 65816 support for cc65 and ca65 (the assembler, which does not cater well to 65816 in its present form</div><br />I actually think 65816 support in CC65 would be a detriment; writing an alternate CRT library for it would be okay, but I think it would add so much complication to the internal code generators to support both 8 and 16 bit that it would be a huge drag on the project going forward.<br /><br />A <em>fork</em> of CC65, on the other hand, that doesn't have a mandate to continue its primary support for the 8-bit 6502, might be fairly feasible for an interested programmer? Maybe you could even replace enough modules from the original completely, so that you have a separate compiler binary that can otherwise share some code cleanly with the original CC65...<br /><br />CA65, on the other hand, has rather good support for 65816, in my view, and it was very practical for it to do so.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Oziphantom</b> [ Sun Jul 08, 2018 1:18 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Why no SNES homebrew scene?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">koitsu wrote:</div><div class="quotecontent"><div class="quotetitle">Oziphantom wrote:</div><div class="quotecontent">How modular is ORCA, it is probably fairly easy to get a 65816 simulator and then enough Apple //gs file system rom mocked enough to give it what it expects and then run the ORCA assembler at ghz speed on a pc without having to go through a whole //gs emulator?</div><br />I expect by linking <a href="https://www.dropbox.com/sh/15z9w4v0s6h7xz7/AAA7LMYuURYHjYRZSSzCKnina?dl=0" class="postlink">my collection of 65816-related assembler documentation</a> that you will read it.  When I said, quote, &quot;top-grade assembler&quot;, I am not kidding.  You'll understand soon enough.  But I feel you're asking the wrong question.  There is no point in trying to &quot;port ORCA/M&quot; in its entirety.  The question you should be asking is &quot;what ORCA/M directives does Toshi's lcc816 emit&quot;, followed by looking at it, followed by referencing the ORCA/M manual for answers, followed by changing the relevant code in lcc816 to emit output for other types of present-day assemblers.  When Charles Doty said that he did a SNES homebrew in a heavily-modified lcc816, I'm fairly sure this is what he meant (combined with probably lots of macro/code generation changes and optimisation; Charles does 65816 just like the rest of us).  So, really, spending the time to examine TM's lcc816 would probably make a better first step... if someone even wants to do it.  Talk is cheap these days, and I'm just as subject to that statement as anyone else.</div>Modular is probably not the right word, or at least doesn't easily convey what I meant. <br />The Docs are there and the assembler doesn't look that intense, I have assemblers on the C128 that are getting to be as much, not quite as much but getting there, no linker though.  However the whole package is quite complete, the debugger for example. My question was more does it roll everything itself or does it have a small program set that one can fire form what ever Apple //gs uses. Its been a long time since I've used one. Is it a ProDos? set, or did it throw the Apple stuff out the window and roll its own. The Docs mention how to do everything in the shell, but does the assembler exist by it self and can just be run from prodos for example. Something that I feel can probably only be answered by somebody familiar with the tool and the Apple //gs.<br />I agree its not the best long term solution and one would only do what is needed. However if one could easily get the assembler and linker running in a simulator it would greatly add testing I would think as you can then write tests to check the binary comparability of the original output vs 'the new system'

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>koitsu</b> [ Sun Jul 08, 2018 5:24 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Why no SNES homebrew scene?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />ORCA/M only runs under GS/OS, and from a system with a hard disk (you heard me right).  It includes a CLI shell and tons of tools -- meaning: an entire development environment.  It isn't an assembler/tool suite that is intended to be used from, say, a bootable floppy disk running ProDOS 8.  Merlin 8/16 is more for the latter.  ORCA/M is a very large suite of programs -- Byteworks also made a Pascal compiler (ORCA/Pascal) and a C compiler (ORCA/C) for the IIGS too.  The shell is just what makes using the programs necessary, because the IIGS (incl. in GS/OS) does not provide a native CLI.  So, the ORCA shell is what makes using the tools possible.<br /><br />But for Toshi's stuff, you don't need to <span style="text-decoration: underline">run</span> ORCA/M to port his work over to a different assembler.  All you need is to understand the ORCA/M assembler's syntax -- Chapters 18 and 19 are important -- and then convert whatever code is generated into output for other assemblers that you want to use (ex. WLA-DX).  You don't need a simulator, there's nothing to simulate***.<br /><br />Anyway, it might not be necessary at all, instead different work can be done.  I don't know how complete Toshi's work was at the time, but here's something I found:<br /><br />There is apparently <a href="https://github.com/lcc-816/lcc-816" class="postlink">a different lcc816 port</a> that can output 65816.  It has IIGS support -- I can see it supports <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">-target=wdc65816/iigs</tt>.  That is to say: it has knowledge of different Apple IIGS capabilities, such as toolbox functions in GS/OS, ProDOS API/filesystem calls, GSBug interfacing, blah blah blah... but that's not important.  What's important is the fact that <a href="https://github.com/lcc-816/lcc-816/tree/master/src/wdc65816" class="postlink">it can generate 65816 from C</a>, and its <a href="https://github.com/lcc-816/lcc-816/tree/master/include/iigs" class="postlink">crt support seems OK</a>.  What's in the former directory are essentially the dags that control the code generation.  The Apple IIGS itself doesn't have to be the &quot;target platform&quot;, the SNES can be the target platform (and of course someone has to write all the necessary interfaces for MMIO registers blah blah if they want), but I'm not sure it's necessary at first (for just raw 65816 assembly generation); the <a href="https://github.com/lcc-816/lcc-816/blob/master/src/wdc65816/multiply.lburg" class="postlink">multiplication/division routines</a> for example, could be modified to use the SNES's mult/div MMIO registers/circuitry.<br /><br />I believe that version of lcc816 could be modified to work for what people want.  I can't exactly figure out what assembler it's outputting for -- Toshi's version from days of yore was outputting for ORCA/M, but this may be very different -- and the docs are a complete travesty (IMO), but a brief skim of some of the grammar and declarations (<a href="https://github.com/lcc-816/lcc-816/blob/master/src/wdc65816/load.lburg" class="postlink">example</a>) look like it it may be using some ORCA/M-like syntaxes but I imagine some other assemblers use similar syntax.  Refer to ORCA/M's manual, Chapter 18 and Chapter 19 for some syntactical details.<br /><br />Point is: all the necessary bits to get C-&gt;65816 generation are there.  Someone just needs to build binaries for different platforms (ex. Win32, etc.) and try to figure it all out.  I sound like a broken record, but: if people want it this bad, they will put in the effort to figure it out and make it work with what they want (ex. WLA-DX or whatever else).  Changing those assembler syntactical details means you have to understand what the original syntax was intending to do.  WLA-DX, for example, uses weird syntax (weird to me, anyway; I'm an old IIGS person :P), but it certainly has all the equivalents needed.<br /><br />*** -- If you wanted to do that, for nostalgia reasons (or to get familiar with ORCA/M in general, you'd need an Apple IIGS emulator like KEGS, ActiveGS, etc. with a hard disk image and the ORCA/M floppy disks (there are 4, and it's commercial software -- yes I have them in <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">.img</tt> format, as I bought the software long ago -- and you need a system that has multiple floppy drives (the installer has major bugs with disk identification if you've only got 1 drive)), install GS/OS (if not pre-installed on the HDD image), mount the ORCA/M installer disk, run the installer, swap in/out disks during the installation process, get ORCA/M installed, run the shell, and start playing with the tools.  It's tedious for people who aren't old IIGS users (if you are, it'll feel like home); no IIGS emulator I know of (for the PC) supports a native way to get files to/from the &quot;host&quot; (PC) into the &quot;guest&quot; (IIGS / GS/OS).  You have to use tools like CiderPress to manipulate Apple II disk images to put files from the PC into those, etc. and then mount them in GS/OS as disks.  IIGS emulation does not have good native integration for the &quot;host&quot; (PC), so you're forced to do this.  The IIGS is literally one of the most neglected emulated systems out there, IMO; even the Apple II/II+/IIE/IIC have better overall support emulation-wise.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Oziphantom</b> [ Sun Jul 08, 2018 8:21 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Why no SNES homebrew scene?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I think the problem is <br />The people who want a C compiler for SNES, want it because they don't know 65816 and they don't know the SNES. So hooking up a C compiler from something else that then needs you to potentially modify images formats, make modifications to the output in ASM to make it work on the SNES due to its hardware quirks. <br />vs<br />Those who do have said skills, don't see the point in having a C compiler for a SNES and hence can't be bothered to put a lot of effort into to make one. <br /><br />This needs a bunch of SNES devs who are thinking &quot;man I could save so much time on a bunch of the code I write by having a C compiler handle the boring stuff like menus and intro/outro etc and modifying my existing code with small changes is getting to be too much of a drag.&quot; Who then band together using their SNES expertise to make a solution for themselves, that others can then use.<br />The main issue being there are not many of the 2nd option and none of the 3rd needed case.<br /><br />( I think Apple II emulation is just bad in all senses, the //c+ for example isn't even emulated. The machine was not very popular despite all the propaganda Apple used to spew about it. It's a pity as the //gs is the best computer Apple have ever made. I wonder if there is a /// emulator <img src="./images/smilies/icon_wink.gif" alt=";)" title="Wink" /> - beyond a novelty look I did a crazy thing )

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Sun Jul 08, 2018 10:35 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Why no SNES homebrew scene?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Oziphantom wrote:</div><div class="quotecontent">want it because they don't know 65816 and they don't know the SNES. So hooking up a C compiler from something else that then needs you to potentially modify images formats, make modifications to the output in ASM to make it work on the SNES due to its hardware quirks. <br /></div>That set of requirements is not really any different from where the NES toolchain is right now...<br /><br />From experience watching people come here using C on the NES, people don't seem to be too badly chagrined about having to look at the generated asm. They just want to program C first and foremost.<br /><br />It's true that it'd be nice to have something like NESst; I don't know of an analog off the top of my head.<br /><br />People don't need to write their own SPC700 drivers; they just need something similar to Famitone, that can play a soundtrack and sound effects.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>psycopathicteen</b> [ Sun Jul 08, 2018 2:48 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Why no SNES homebrew scene?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">calima wrote:</div><div class="quotecontent">For me, the banking is the greatest PITA.</div><br />When did you have trouble with banking?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>calima</b> [ Mon Jul 09, 2018 1:56 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Why no SNES homebrew scene?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />It's rather annoying compared to a flat address space of the Genesis, and having two banks (program and data) doubles the chance of bugs, as well as the manual handling. It's an awkward system that can be worked around, but having to in the first place is ugly.<br /><br />On cc65 specifically, it doesn't support banking where you have to switch everything. On the NES, you can usually keep a fixed bank and switch another bank. If the compiler and runtime had 816 support in the &quot;long only&quot; sense - all subroutine jumps and returns were forced to jsl and rtl - it would help nicely, leaving only the data bank to manual handling, but even that is a decent amount of work.<br /><br />That's part of why SNES work tends to take several times longer vs Genesis work.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Mon Jul 09, 2018 6:37 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Why no SNES homebrew scene?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Something similar could be said about the segmented architecture of 8086, 80186, and 80286 compared to the flat memory model of i386, correct?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Oziphantom</b> [ Mon Jul 09, 2018 9:17 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Why no SNES homebrew scene?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I don't think anybody would argue that a banking or overlapping memory space is better than a linear memory space for the programmer. Usually faster and easier for the machine in question thou <img src="./images/smilies/icon_wink.gif" alt=";)" title="Wink" /> Although I have used overlays on linear memory space machines T_T<br /><br />Although in practice I find the 65816's banking to be very generous and with a little planning mostly not an issue <img src="./images/smilies/icon_wink.gif" alt=";)" title="Wink" /> Although one of my todo features it to make a CALL function, RETURN function construct that allows the the assembler to work out if I only ever call it from in bank or if it needs to be across bank, and set the JSR/L and RTS/L accordingly automatically for me. However this is below auto collapsing REP/SEPs on my list <img src="./images/smilies/icon_wink.gif" alt=";)" title="Wink" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>calima</b> [ Mon Jul 09, 2018 11:31 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Why no SNES homebrew scene?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Yes, 286 is supposedly similar, but I'm too young to have experienced that.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Mon Jul 09, 2018 11:40 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Why no SNES homebrew scene?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">calima wrote:</div><div class="quotecontent">Yes, 286 is supposedly similar, but I'm too young to have experienced that.</div><br />C compilers had the &quot;near&quot; and &quot;far&quot; type modifier keywords for exactly this. (...and they were annoying. DPMI was such a relief for me when it happened.)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>dougeff</b> [ Mon Jul 09, 2018 12:01 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Why no SNES homebrew scene?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">It's true that it'd be nice to have something like NESst [for the SNES]</div><br /><br />It's on my TODO list to make one.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>29</strong> of <strong>30</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>