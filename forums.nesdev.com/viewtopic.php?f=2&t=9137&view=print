<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - MagicKit assembler new unofficial version</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">MagicKit assembler new unofficial version</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=9137">http://forums.nesdev.com/viewtopic.php?f=2&amp;t=9137</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>zzo38</b> [ Mon Jul 30, 2012 6:30 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>MagicKit assembler new unofficial version</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Here is new unofficial version of MagicKit with new features. (Some people don't like MagicKit/NESASM but I like it.) Please tell me if I missed anything.<br /><br />It is included with PPMCK: <a href="http://zzo38computer.org/nes_program/ppmck.zip" class="postlink">http://zzo38computer.org/nes_program/ppmck.zip</a><br /><br />Document of new features is file EXTENSION.TXT which is also copied here:<div class="codetitle"><b>Code:</b></div><div class="codecontent">This is document to describe unofficial extensions of MagicKit assembler.<br /><br />Status ask expression:<br />&nbsp; ?A&nbsp; &nbsp;bank base index<br />&nbsp; ?B&nbsp; &nbsp;current bank<br />&nbsp; ?C&nbsp; &nbsp;current section<br />&nbsp; ?D&nbsp; &nbsp;data location counter<br />&nbsp; ?E&nbsp; &nbsp;error counter<br />&nbsp; ?L&nbsp; &nbsp;location counter<br />&nbsp; ?M&nbsp; &nbsp;map data at current location<br />&nbsp; ?P&nbsp; &nbsp;page<br />&nbsp; ?Q&nbsp; &nbsp;pseudopage<br />&nbsp; ?R&nbsp; &nbsp;RS counter<br />&nbsp; ?S&nbsp; &nbsp;source line number<br />&nbsp; ?X&nbsp; &nbsp;pass counter (0=first pass, 1=last pass)<br />&nbsp; ?Z&nbsp; &nbsp;max bank used<br /><br />Emulator I/O ($2000..$3FFF):<br />&nbsp; $2000&nbsp; RW&nbsp; &nbsp; Bank number<br />&nbsp; $2001&nbsp; R&nbsp; &nbsp; &nbsp;Error counter<br />&nbsp; $2002&nbsp; RW&nbsp; &nbsp; Location counter low byte<br />&nbsp; $2003&nbsp; RW&nbsp; &nbsp; Location counter high byte<br />&nbsp; $2004&nbsp; RW&nbsp; &nbsp; Section (0=ZP, 1=BSS, 2=CODE, 3=DATA, 4=EMU)<br />&nbsp; $2005&nbsp; &nbsp;W&nbsp; &nbsp; Send byte to output file<br />&nbsp; $2006&nbsp; RW&nbsp; &nbsp; Bank output length low byte<br />&nbsp; $2007&nbsp; RW&nbsp; &nbsp; Bank output length high byte<br />&nbsp; $2008&nbsp; &nbsp;W&nbsp; &nbsp; Send contents of ROM bank to output file<br />&nbsp; $2009&nbsp; R&nbsp; &nbsp; &nbsp;Maximum bank used<br />&nbsp; $200A&nbsp; RW&nbsp; &nbsp; Standard I/O<br />&nbsp; $200B&nbsp; RW&nbsp; &nbsp; Read next byte of data file (write anything for next file)<br />&nbsp; $200C&nbsp; RW&nbsp; &nbsp; Read to test EOF of data file, write to rewind file<br />&nbsp; $200D&nbsp; RW&nbsp; &nbsp; Address increment amount<br />&nbsp; $200E&nbsp; RW&nbsp; &nbsp; Low byte of address<br />&nbsp; $200F&nbsp; RW&nbsp; &nbsp; High byte of address<br />&nbsp; $2010&nbsp; RW&nbsp; &nbsp; Data at address<br />&nbsp; $2011&nbsp; RW&nbsp; &nbsp; Map data at address<br />&nbsp; $2012&nbsp; RW&nbsp; &nbsp; Data at address, postincrement address<br />&nbsp; $2013&nbsp; RW&nbsp; &nbsp; Map at address, postincrement address<br /><br />Instructions (NES/Famicom):<br />&nbsp; ANC&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; AND accumulator by immediate and carry bit7<br />&nbsp; ALR&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; AND accumulator by immediate and shift right<br />&nbsp; ARR&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; AND accumulator by immediate and rotate right<br />&nbsp; AXS&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; AND X register by accumulator and subtract immediate<br />&nbsp; DCP&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Decrement memory and compare with accumulator<br />&nbsp; HLT&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Jam the computer (until resets)<br />&nbsp; ISC&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Increment memory and subtract from accumulator<br />&nbsp; JAM&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Jam the computer (until resets)<br />&nbsp; KIL&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Jam the computer (until resets)<br />&nbsp; LAX&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Load into accumulator and into X register<br />&nbsp; RLA&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Left rotate memory and AND accumulator by memory<br />&nbsp; RRA&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Right rotate memory and add memory to accumulator<br />&nbsp; SAX&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Store value of accumulator AND X register<br />&nbsp; SLO&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Left shift memory and OR accumulator by memory<br />&nbsp; SRE&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Right shift memory and XOR accumulator by memory<br /><br />Pseudos:<br />&nbsp; .ASSIGN&nbsp; &nbsp; &nbsp; Update value of reserved symbols<br />&nbsp; .DATAFILE&nbsp; &nbsp; Load extra data file<br />&nbsp; .EMU&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Select emulator memory section<br />&nbsp; .MACGOTO&nbsp; &nbsp; &nbsp;Tail call to another macro keeping same parameters<br />&nbsp; .MACSET&nbsp; &nbsp; &nbsp; Modify macro arguments<br /><br />Pseudos (NES 2.0):<br />&nbsp; .NES2CHRRAM&nbsp; Set amount of CHR RAM (non-battery, battery)<br />&nbsp; .NES2PRGRAM&nbsp; Set amount of PRG RAM (non-battery, battery)<br />&nbsp; .NES2SUB&nbsp; &nbsp; &nbsp;Submapper number<br />&nbsp; .NES2TV&nbsp; &nbsp; &nbsp; TV mode (0=NTSC, 1=PAL, 2=both)<br />&nbsp; .NES2VS&nbsp; &nbsp; &nbsp; Vs. Unisystem mode<br /><br />Macro special parameters:<br />&nbsp; \\&nbsp; &nbsp;backslash<br />&nbsp; \@&nbsp; &nbsp;unique five-digit number for each call of a macro<br />&nbsp; \#&nbsp; &nbsp;number of arguments<br />&nbsp; \1&nbsp; &nbsp;read argument<br />&nbsp; \?1&nbsp; read type of argument<br />&nbsp; \&lt;1&nbsp; first character of argument only<br />&nbsp; \&gt;1&nbsp; argument except first character<br />&nbsp; \$1&nbsp; length of argument<br /><br />Command-line switch:<br />&nbsp; -.nes&nbsp; &nbsp; Select NES/Famicom machine type<br />&nbsp; -.pce&nbsp; &nbsp; Select PC-Engine machine type<br />&nbsp; -o #&nbsp; &nbsp; &nbsp;Override output filename<br />&nbsp; -M&nbsp; &nbsp; &nbsp; &nbsp;Create map file<br /><br /><br />== Use of .MACGOTO and .MACSET ==<br /><br />You can use .MACGOTO command followed by a name of a macro (no quotation<br />marks) to call that macro with the same parameters as the current macro,<br />and is tail call so it will not continue with the current macro after that<br />one is finished. If you use it with conditions it could make a loop. You<br />can also adjust the parameter of .MACGOTO by .MACSET as well. Note: \@ is<br />not incremented if .MACGOTO is used.<br /><br />The command .MACSET is followed by three numbers (or expressions)<br />delimited by commas. The first is the parameter number 1 to 9. Second is a<br />mode. Third parameter depend on the mode. The selected parameter value<br />will be changed for the current macro and affects subsequent commands and<br />.MACGOTO calls.<br /><br />Mode 1: Copy argument inside of called macro. The third parameter is a<br />parameter number (1 to 9) and whatever macro has been called from inside<br />of this one, a parameter given to it, will be copied to this macro.<br /><br />Mode 2: Copy argument of current macro. Third parameter is the parameter<br />number and it copy to another slot of the same macro.<br /><br />Mode 3: Single character. The parameter will become a single character,<br />with the third parameter specifying the ASCII code of the character.<br /><br />Mode 4: Numeric. Third parameter is evaluated and converted to a decimal<br />number which is placed in the macro arguments.<br /><br />Mode 5: Cut off string. Third parameter is maximum number of characters to<br />keep from beginning of parameter string.<br /><br />Mode 6: ASCII code at position. Third parameter is position. The parameter<br />is use as string, character at specified position, is converted to number<br />of ASCII. If the string is shorter than that, the result is zero.<br /><br />Mode 7: Set and increment mcounter (the \@ counter). Third parameter is<br />the amount to increase by.<br /><br />Mode 8: Read one byte of data from the current ROM bank.<br /><br />Mode 9: Get a bank name, using third parameter as the bank number.<br /><br />Other modes currently have no use.<br /><br /><br />== Use of .ASSIGN ==<br /><br />Syntax:&nbsp; .ASSIGN &quot;name&quot; value<br /><br />The name is a name in quotation marks and the value can be any expression.<br />Do not include a comma between the name and value.<br /><br />This makes a reserved symbol and assign a value. You can assign different<br />values in different parts of the input file more than once, unlike the<br />ordinary labels.<br /><br />It runs in both passes, in the order specified in input file, and you can<br />use the old value of the symbol to calculate the next value, too.<br /><br /><br />== Use of emulator ==<br /><br />Unofficial MagicKit includes an emulator for use as a postprocessor.<br /><br />If you put .EMU to assemble emulator codes and data in the emulator memory<br />map, which is 64K bytes, except for $2000..$3FFF for I/O, $4000..$5FFF for<br />data of active ROM bank (can be written as well), and $6000..$7FFF for map<br />data of ROM bank.<br /><br />Inside of .EMU section use .ORG to specify where in the emulator RAM to<br />enter data (bank/page is not used in emulator RAM).<br /><br />If the reset vector of the emulator is nonzero, it will run the emulator<br />after both passes of assembler, before writing output binary file. If you<br />write .EMU X at the start of .EMU block then it will use the emulator code<br />to write the binary file instead of using the normal way. (If .EMU X is<br />used but does not write to $2005 and $2008 then you will get empty output<br />file.)<br /><br />Use HLT command to stop the emulator.<br /><br />Emulation is done by lib6502, with a modification to suppress the error<br />message for illegal opcodes.<br /><br /><br />== Counted labels ==<br /><br />Counted labels are given by making a label starting with / and optionally<br />followed by the name.<br /><br />It is allowed to define these labels more than once, and it can keep track<br />of all of their addresses (similar to the anonymous labels found in some<br />other assemblers).<br /><br />In an expression, you can use / and the name (if applicable) followed by<br />? to access the current counter, # to access the total counter, or any<br />number of + or - to access the label occuring that many spaces forward or<br />backward from the use.<br /><br /><br />== Bank chaining ==<br /><br />If you give a bank the same name as a previous bank, then it will chain<br />them together; once one 8K bank runs out it will advance to the next bank<br />and set the page number correctly.<br /><br />To set a bank name, put a comma and quoted string after the bank number.<br /><br /><br />== Pseudopages ==<br /><br />Pseudopage numbers are simply added to the value to write to the map data.<br />They are set by specifying a number after a CODE or DATA command.<br /><br />Note: The low two bits and high three bits are used by the assembler; the<br />other three bits can be used for your own use.<br /></div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Hamtaro126</b> [ Mon Jul 30, 2012 8:02 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Get PCEAS2 and and try to incorperate all features to it's program for compatibility, PCEAS2 has lots of essential fixes even for use in 6502 mode!
<br />
<br /><!-- m --><a class="postlink" href="http://www.pcedev.net/pceas/bin/pceas2_ver322.zip">http://www.pcedev.net/pceas/bin/pceas2_ver322.zip</a><!-- m -->
<br />
<br />Credit Tomaitheous for his work if implented
<br />
<br />Also, Please incorporate NESASM3 features (derived from NESASM) as well!
<br />
<br /><!-- m --><a class="postlink" href="http://www.nespowerpak.com/nesasm/">http://www.nespowerpak.com/nesasm/</a><!-- m -->

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>koitsu</b> [ Mon Jul 30, 2012 9:22 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Matter of opinion, but: those "NES/Famicom" instructions aren't really instructions per se.  They're undocumented opcodes where the behaviour can be established via use of visual6502, I believe.
<br />
<br />I would not recommend implementing them as opcodes, because honestly there's no guarantee (in my mind) that they're going to work on every machine or even in every emulator.  So basically, these kind of instructions should not be enabled by default; possibly a pseudo-op (ex. .UNDOCOPS) could enable use of them, but by default should not exist (e.g. without the pseudo-op in use, "ARR" would claim to be an unrecognised opcode).
<br />
<br />Truly/sincerely I wish people would just stick with what are established, documented, known/proper opcodes and stop trying to implement weird shit.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Hamtaro126</b> [ Mon Jul 30, 2012 9:51 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">koitsu wrote:</div><div class="quotecontent">Matter of opinion, but: those "NES/Famicom" instructions aren't really instructions per se.  They're undocumented opcodes where the behaviour can be established via use of visual6502, I believe.<br /><br />I would not recommend implementing them as opcodes, because honestly there's no guarantee (in my mind) that they're going to work on every machine or even in every emulator.  So basically, these kind of instructions should not be enabled by default; possibly a pseudo-op (ex. .UNDOCOPS) could enable use of them, but by default should not exist (e.g. without the pseudo-op in use, "ARR" would claim to be an unrecognised opcode).<br /><br />Truly/sincerely I wish people would just stick with what are established, documented, known/proper opcodes and stop trying to implement weird shit.</div>
<br />
<br />Amen.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>3gengames</b> [ Mon Jul 30, 2012 9:53 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />[opinion] They don't have to run in Emu/Clones, they only have to run on the NES.[/opinion]

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dwedit</b> [ Mon Jul 30, 2012 11:09 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />But emulators are consistent, and according to Martin Korth, the illegal instructions do not behave consistently on some 6502-based systems.  Lack of consistent behavior seems like a good reason to avoid using them.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Tue Jul 31, 2012 1:46 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Some behave consistently, some do not. Stick to the ones that do and you'll be fine. Opcodes like LAX (load A and X with the same value from memory) are perfectly safe (if you look at the bits of the LDA abs/LDX abs opcodes you'll understand why).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Tue Jul 31, 2012 6:14 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">koitsu wrote:</div><div class="quotecontent">So basically, these kind of instructions should not be enabled by default; possibly a pseudo-op (ex. .UNDOCOPS) could enable use of them</div><br />Like <a href="http://www.cc65.org/doc/ca65-4.html#ss4.3" class="postlink">ca65's 6502X mode</a> perhaps?<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Truly/sincerely I wish people would just stick with what are established, documented, known/proper opcodes</div>
<br />Apart from a few unstable instructions that try to read and write the special bus at the same time (and hence introduce "line noise"), they are all established and documented. Some even appear <a href="http://wiki.nesdev.com/w/index.php/Programming_with_unofficial_opcodes" class="postlink">useful</a>.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>zzo38</b> [ Tue Jul 31, 2012 12:40 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">thefox wrote:</div><div class="quotecontent">Some behave consistently, some do not. Stick to the ones that do and you'll be fine. Opcodes like LAX (load A and X with the same value from memory) are perfectly safe (if you look at the bits of the LDA abs/LDX abs opcodes you'll understand why).</div>It is what I have done; looking at the lists of unofficial opcodes, I have not included the ones which do not behave consistently. (And an emulator really should implement all the consistent unofficial opcodes; possibly with an option switch to tell it to emulate them or to display an error message; and to have it log warnings or errors for inconsistent opcodes.)<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Like ca65's 6502X mode perhaps? </div>I might be able to do something like that.<br /><br />I have implemented some PCEAS2 features but have not yet recreated the ZIP. I have not yet looked at NESASM3, but will do so later this week (hopefully).<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Truly/sincerely I wish people would just stick with what are established, documented, known/proper opcodes and stop trying to implement weird shit.</div>You need not use the unofficial opcodes if you do not want to do so.
<br />
<br />Also, the unofficial HLT opcode is used to stop the emulator which is built-in to my build of MagicKit; I could move it to the main instruction list instead of NES/Famicom specific if it seem useful to do so, even though other target machines may use this instruction opcode for something else.
<br />
<br />Other features that I have the idea but I may or may not implement:<ul><li>Additional target machines (other than only NES/Famicom and PC-Engine).</li><li>Defer labels, which can be targeted from instructions that target memory addresses but the target address may not be known until after the emulator runs to decide the target (and possibly other things based on where it is used and how many times).</li><li>Character map for string literals in .DB instructions (possibly with a prefix to tell the difference from ASCII strings).</li><li>Namespaces.</li><li>SWEET16 instructions (perhaps only if target machines are implemented that are using SWEET16).</li><li>Include user-defined error messages in .FAIL command.</li></ul>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>zzo38</b> [ Fri Aug 03, 2012 8:39 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: MagicKit assembler new unofficial version</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I have now added counted labels (something similar to ca65's unnamed labels, although they can optionally be given names too).<br /><br />Next I intend to add character mappings and possibly some other things.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>zzo38</b> [ Fri Aug 10, 2012 4:55 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: MagicKit assembler new unofficial version</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Some ideas (if you have question/comment please post) (not yet implemented):<ul><li><tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">.NES2SUB</tt>: Submapper number</li><li><tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">.NES2PRGRAM</tt>: Amount of PRG-RAM (both battery and non-battery are specified)</li><li><tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">.NES2CHRRAM</tt>: Amount of CHR-RAM (both battery and non-battery are specified)</li><li><tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">.NES2TV</tt>: NTSC/PAL/both</li><li><tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">.NES2VS</tt>: Mode for VS Unisystem</li><li><tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">.UNIFMAP</tt>: Mapper name for UNIF</li><li><tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">.UNIFTV</tt>: TV system (NTSC/PAL/both) for UNIF</li><li><tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">.UNIFCTRL</tt>: Specify which controllers are used (UNIF)</li><li><tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">.UNIFCHECK</tt>: Add checksum information to UNIF files (automatically calculated)</li><li><tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">.UNIFBATTERY</tt>: Enable battery RAM (UNIF)</li><li><tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">.UNIFVRAM</tt>: Enable CHR-RAM even if ROM is present (UNIF)</li><li><tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">.UNIFMIRROR</tt>: Specify mirroring for UNIF</li><li><tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">.UNIFPRG</tt>: Specify address and length of PRG ROMs (UNIF)</li><li><tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">.UNIFCHR</tt>: Specify address and length of CHR ROMs (UNIF)</li><li><tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">.FAMISYM</tt>: Add an entry to DotFami symbol table</li><li><tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">.FAMIMAP</tt>: Specify filename for binary .cart file included as mapper codes in DotFami</li><li><tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">.FAMILABEL</tt>: Automatically add labels to DotFami symbol table</li><li><tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">.FAMICPU</tt>: DotFami CPU mode flag</li><li><tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">.FAMIEXT</tt>: Specify the value of an external parameter for DotFami ($FE and $FF commands in the .cart file are parsed and decided using this)</li></ul><br />NES 2.0 is used if any .NES2*** commands are used or if mapper numbers or other numbers are out of range for iNES. UNIF is used if .UNIFMAP command is used. DotFami is used if any .FAMI*** commands are used. Otherwise it uses iNES format.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Fri Aug 10, 2012 5:36 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: MagicKit assembler new unofficial version</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">zzo38 wrote:</div><div class="quotecontent">NES 2.0 is used if any .NES2*** commands are used or if mapper numbers or other numbers are out of range for iNES. UNIF is used if .UNIFMAP command is used. DotFami is used if any .FAMI*** commands are used. Otherwise it uses iNES format.</div><br />I'd like to recommend that plain iNES1 headers are never used, since the entire point of NES2.0 is to be backwards compatible.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>zzo38</b> [ Fri Aug 10, 2012 9:30 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: MagicKit assembler new unofficial version</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">lidnariq wrote:</div><div class="quotecontent"><div class="quotetitle">zzo38 wrote:</div><div class="quotecontent">NES 2.0 is used if any .NES2*** commands are used or if mapper numbers or other numbers are out of range for iNES. UNIF is used if .UNIFMAP command is used. DotFami is used if any .FAMI*** commands are used. Otherwise it uses iNES format.</div><br />I'd like to recommend that plain iNES1 headers are never used, since the entire point of NES2.0 is to be backwards compatible.</div>Some emulators (maybe other programs too) might expect the unused bits (and bytes) to be zero. Also, since some .NES files might have &quot;DiskDude&quot; starting on one of the bytes which was previously unused, it might treat the entire byte as zero if the unused bits are nonzero, for compatibility with such files. Another thing is that some files using this assembler may not know/care about NES 2.0 so they won't set the amount of PRG-RAM and CHR-RAM. These are a few reasons to not set those bits to activate NES 2.0 unless it is being used. (You can write <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">.NES2SUB 0</tt> if it is necessary to force NES 2.0 to be used without otherwise affecting the header.)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Sat Aug 11, 2012 1:52 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: MagicKit assembler new unofficial version</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />But if we're trying to achieve the widespread deploy of NES2.0—and we should be, because it should solve all the ambiguities of the iNES1format—NES2 should, at the very least, be the default.<br /><br />Nestopia added NES2 support forever ago; Nintendulator detects it; FCEUX completely ignores it (but only explicitly checks for &quot;DiskDude!&quot;, &quot;demiforce&quot;, and &quot;Ni03&quot; garbage). Because it's backwards compatible, it's ok if the emulator throws away any part except the top 4 bits of the mapper number. Widespread deploy of the standard is the best way to encourage other emulators to adopt it, which will in turn let people know that they <em>can</em> make homebrew that directly targets SOROM or SXROM.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>zzo38</b> [ Wed Aug 22, 2012 5:20 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: MagicKit assembler new unofficial version</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I have added the .NES2*** commands and corrected some problems with .MACGOTO command. (I have not yet added character mapping, .UNIF***, and .FAMI***, but eventually I will do so.)

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>