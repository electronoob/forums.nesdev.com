<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=2&amp;t=10701" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2013-12-23T20:38:00-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=2&amp;t=10701</id>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2013-12-23T20:38:00-07:00</updated>
<published>2013-12-23T20:38:00-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10701&amp;p=122848#p122848</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10701&amp;p=122848#p122848"/>
<title type="html"><![CDATA[Re: Reimplementing 6502 syntax in ca65]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10701&amp;p=122848#p122848"><![CDATA[
I get the same output even when I explicitly exclude 65816 features.<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">.p02  ; exclude relocatable direct page of 65816<br />.importzp a_zp_label<br />.ifconst &gt;a_zp_label<br />  .out &quot;zp label high byte is const&quot;<br />.else<br />  .out &quot;zp label high byte is not const&quot;<br />.endif<br /></div><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Mon Dec 23, 2013 8:38 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2013-12-23T20:34:22-07:00</updated>
<published>2013-12-23T20:34:22-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10701&amp;p=122846#p122846</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10701&amp;p=122846#p122846"/>
<title type="html"><![CDATA[Re: Reimplementing 6502 syntax in ca65]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10701&amp;p=122846#p122846"><![CDATA[
Does ca65 perhaps support a direct page at a page other than zero, as the 65816 does? That would be nice.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Mon Dec 23, 2013 8:34 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2013-12-23T19:46:08-07:00</updated>
<published>2013-12-23T19:46:08-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10701&amp;p=122843#p122843</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10701&amp;p=122843#p122843"/>
<title type="html"><![CDATA[Re: Reimplementing 6502 syntax in ca65]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10701&amp;p=122843#p122843"><![CDATA[
I found another related deficiency that's white-elephantish even for &quot;normal&quot; uses of ca65.<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">; ca65 2.14.0 refuses to recognize &quot;high byte of a zero page<br />; label&quot; as an expression whose constant value is 0.<br />.importzp a_zp_label<br />.ifconst &gt;a_zp_label<br />  .out &quot;zp label high byte is const&quot;<br />.else<br />  .out &quot;zp label high byte is not const&quot;<br />.endif<br /></div><br /><br />Result:<br />zp label high byte is not const<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Mon Dec 23, 2013 7:46 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Movax12]]></name></author>
<updated>2013-11-26T23:48:29-07:00</updated>
<published>2013-11-26T23:48:29-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10701&amp;p=121594#p121594</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10701&amp;p=121594#p121594"/>
<title type="html"><![CDATA[Re: Reimplementing 6502 syntax in ca65]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10701&amp;p=121594#p121594"><![CDATA[
<div class="quotetitle">tepples wrote:</div><div class="quotecontent"><br />macro A calling macro B on the last line of A shouldn't eat up a stack level.<br /></div><br /><br />Is see more what you are saying. It is besides the point (Though I think it is a stretch to call it a tail call in a macro.) Regardless, even if the end result of the logic is the same with a goto/loop the macros are just expanded as they are &quot;called&quot; like an inline function. With ca65 at least, there is a stack for things like local symbols and parameter names. Pretty sure it doesn't check for tail calls, though I guess there would be no harm.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4680">Movax12</a> — Tue Nov 26, 2013 11:48 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2013-11-26T22:45:05-07:00</updated>
<published>2013-11-26T22:45:05-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10701&amp;p=121591#p121591</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10701&amp;p=121591#p121591"/>
<title type="html"><![CDATA[Re: Reimplementing 6502 syntax in ca65]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10701&amp;p=121591#p121591"><![CDATA[
Let me translate it into a language that uses slightly more familiar syntax:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent"># Guido likes pretty tracebacks better than tail call optimization,<br /># but another Python implementation might offer it in a future statement<br />def factorialTimes(x, acc):<br />    if x &lt;= 0:<br />        return acc<br />    else:<br />        return factorialTimes(x - 1, x * acc)<br /><br />def factorial(x):<br />    return factorialTimes(x, 1)<br /></div><br />Or in a fictitious assembly language:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">; Returns X! * A in A<br />.proc factorialTimes<br />  cpx #0<br />  bne is_nonzero<br />  rts<br />is_nonzero:<br />  mul x  ; A &lt;- A * X<br />  dex<br />  jmp factorialTimes<br />.endproc<br /><br />; Returns X! in A<br />.proc factorial<br />  lda #1<br />  jmp factorialTimes<br />.endproc<br /></div><br />When you return the result of a function call, you can just JMP to the new function instead of doing the equivalent of a JSR immediately followed by RTS. Likewise, macro A calling macro B on the last line of A shouldn't eat up a stack level.<br /><br />But that's all really beside the point, as these macros aren't very deeply nested, and .addrsize allows the project to go forward.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Tue Nov 26, 2013 10:45 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Movax12]]></name></author>
<updated>2013-11-26T20:17:37-07:00</updated>
<published>2013-11-26T20:17:37-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10701&amp;p=121587#p121587</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10701&amp;p=121587#p121587"/>
<title type="html"><![CDATA[Re: Reimplementing 6502 syntax in ca65]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10701&amp;p=121587#p121587"><![CDATA[
I don't know Scheme, but in that case I would guess it is actual looping with a variable stack that allows for recursive algorithms. Macros just keep expanding and executing from top to bottom.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4680">Movax12</a> — Tue Nov 26, 2013 8:17 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2013-11-26T20:09:57-07:00</updated>
<published>2013-11-26T20:09:57-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10701&amp;p=121586#p121586</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10701&amp;p=121586#p121586"/>
<title type="html"><![CDATA[Re: Reimplementing 6502 syntax in ca65]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10701&amp;p=121586#p121586"><![CDATA[
<div class="quotetitle">Movax12 wrote:</div><div class="quotecontent"><br />macros can't properly loop, just simulate looping with recursion.<br /></div><br />Is this recursion, or is it looping?<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">; Language=Scheme<br />; Multiplies the factorial of x by acc.<br />(define (factorial* x acc)<br />  (if (zero? x)<br />      acc<br />      (factorial* (- x 1) (* x acc)) ))<br />; Calculates the factorial of a nonnegative integer.<br />(define (factorial acc) (factorial* x 1))<br /></div><br />If ca65 doesn't correctly optimize macro tail recursion, on the other hand...<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Tue Nov 26, 2013 8:09 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Movax12]]></name></author>
<updated>2013-11-26T19:59:53-07:00</updated>
<published>2013-11-26T19:59:53-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10701&amp;p=121585#p121585</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10701&amp;p=121585#p121585"/>
<title type="html"><![CDATA[Re: Reimplementing 6502 syntax in ca65]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10701&amp;p=121585#p121585"><![CDATA[
I think I get it. Sounds like a nice way to implement high level functions, but could be difficult, since macros can't properly loop, just simulate looping with recursion.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4680">Movax12</a> — Tue Nov 26, 2013 7:59 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2013-11-26T18:50:36-07:00</updated>
<published>2013-11-26T18:50:36-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10701&amp;p=121582#p121582</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10701&amp;p=121582#p121582"/>
<title type="html"><![CDATA[Re: Reimplementing 6502 syntax in ca65]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10701&amp;p=121582#p121582"><![CDATA[
Write a language parser for X in preferred language, output as ca65 macros, then program in X using ca65 and these macros.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Tue Nov 26, 2013 6:50 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Movax12]]></name></author>
<updated>2013-11-26T18:43:17-07:00</updated>
<published>2013-11-26T18:43:17-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10701&amp;p=121580#p121580</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10701&amp;p=121580#p121580"/>
<title type="html"><![CDATA[Re: spcc65]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10701&amp;p=121580#p121580"><![CDATA[
<div class="quotetitle">thefox wrote:</div><div class="quotecontent"><br />take stuff in whatever language and output a program as ca65 macros (to be ran at compile time).<br /></div><br /><br />Macros ultimately output data or code. What would be be the benefit of using them as an intermediate step? Example?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4680">Movax12</a> — Tue Nov 26, 2013 6:43 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[thefox]]></name></author>
<updated>2013-11-26T18:26:06-07:00</updated>
<published>2013-11-26T18:26:06-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10701&amp;p=121578#p121578</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10701&amp;p=121578#p121578"/>
<title type="html"><![CDATA[Re: spcc65]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10701&amp;p=121578#p121578"><![CDATA[
<div class="quotetitle">tepples wrote:</div><div class="quotecontent"><br /><div class="quotetitle">thefox wrote:</div><div class="quotecontent">It would also be funny if somebody wrote a compiler that generates code as ca65 macros.<br /></div><br />If it turns out that the SPC700 is as close to the 6502 as I think it is, the second iteration of this macro pack may turn out to be just that: something you can stick at the top of cc65-generated assembly files to turn cc65 into an SPC700 compiler.</div><br />Not sure if you misunderstood me, or I'm misunderstanding you, but what I meant was a compiler that would take stuff in whatever language and output a program as ca65 macros (to be ran at compile time).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=80">thefox</a> — Tue Nov 26, 2013 6:26 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2013-11-26T12:10:40-07:00</updated>
<published>2013-11-26T12:10:40-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10701&amp;p=121553#p121553</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10701&amp;p=121553#p121553"/>
<title type="html"><![CDATA[Re: Reimplementing 6502 syntax in ca65]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10701&amp;p=121553#p121553"><![CDATA[
Way back Anti-Resonance pointed me to another chip with SPC-700's same CPU core. I had to <a href="https://www.google.com/search?complete=0&amp;q=tset1+push+psw+pop+mov+addw#complete=0&amp;q=%22tset1%22+push+psw+pop+mov+addw+filetype:pdf" class="postlink">re-find it again</a>. It's the <a href="https://www.google.com/search?complete=0&amp;q=tset1+push+psw+pop+mov+addw#complete=0&amp;q=%22GMS800%22+%22psw%22+filetype:pdf" class="postlink">GMS800 series</a>. For example, the <a href="http://datasheet.eeworld.com.cn/pdf/HYNIX/118812_GMS81C3004.pdf" class="postlink">GMS81C3004</a> (page 17 onward) should be familiar. Note how the absolute addressing mode has a ! prefix (pages 84-89). This might help as other references for the instruction syntax.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Tue Nov 26, 2013 12:10 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2013-11-26T08:01:55-07:00</updated>
<published>2013-11-26T08:01:55-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10701&amp;p=121541#p121541</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10701&amp;p=121541#p121541"/>
<title type="html"><![CDATA[spcc65]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10701&amp;p=121541#p121541"><![CDATA[
<div class="quotetitle">thefox wrote:</div><div class="quotecontent"><br />It would also be funny if somebody wrote a compiler that generates code as ca65 macros.<br /></div><br />If it turns out that the SPC700 is as close to the 6502 as I think it is, the second iteration of this macro pack may turn out to be just that: something you can stick at the top of cc65-generated assembly files to turn cc65 into an SPC700 compiler.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Tue Nov 26, 2013 8:01 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[thefox]]></name></author>
<updated>2013-11-26T01:31:17-07:00</updated>
<published>2013-11-26T01:31:17-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10701&amp;p=121526#p121526</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10701&amp;p=121526#p121526"/>
<title type="html"><![CDATA[Re: Reimplementing 6502 syntax in ca65]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10701&amp;p=121526#p121526"><![CDATA[
<div class="quotetitle">blargg wrote:</div><div class="quotecontent"><br />I love how attempts are being made to closely duplicate ca65's behavior with its macros. I guess next you'll need to reimplement its macro package with itself. ca65inception.s.<br /></div><br />It would also be funny if somebody wrote a compiler that generates code as ca65 macros. Could even be quite useful, because the ca65 macro language isn't always that nice to use.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=80">thefox</a> — Tue Nov 26, 2013 1:31 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[lidnariq]]></name></author>
<updated>2013-11-26T00:33:52-07:00</updated>
<published>2013-11-26T00:33:52-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10701&amp;p=121524#p121524</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10701&amp;p=121524#p121524"/>
<title type="html"><![CDATA[Re: Reimplementing 6502 syntax in ca65]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10701&amp;p=121524#p121524"><![CDATA[
I never metacircular evaluator I didn't like!<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3512">lidnariq</a> — Tue Nov 26, 2013 12:33 am</p><hr />
]]></content>
</entry>
</feed>