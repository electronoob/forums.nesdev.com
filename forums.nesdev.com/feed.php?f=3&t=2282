<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=3&amp;t=2282" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2006-10-19T01:27:28-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=3&amp;t=2282</id>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2006-10-19T01:27:28-07:00</updated>
<published>2006-10-19T01:27:28-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=2282&amp;p=18627#p18627</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=2282&amp;p=18627#p18627"/>
<title type="html"><![CDATA[6502 interrupt behaviour]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=2282&amp;p=18627#p18627"><![CDATA[
BRK executes immediately regardless of the value of the I flag in the status register.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Thu Oct 19, 2006 1:27 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Quietust]]></name></author>
<updated>2006-10-18T18:25:06-07:00</updated>
<published>2006-10-18T18:25:06-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=2282&amp;p=18624#p18624</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=2282&amp;p=18624#p18624"/>
<title type="html"><![CDATA[6502 interrupt behaviour]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=2282&amp;p=18624#p18624"><![CDATA[
The BRK opcode is actually somewhat of a side-effect of how interrupts work on the 6502 - when it services an interrupt, it pulls all 8 data lines low on the internal "opcode register" (and thereby executes a BRK), disables PC incrementing (so it doesn't skip the next 2 bytes), and selects an interrupt vector to load from (whether it's NMI, RESET, or IRQ). The only differences between IRQ and BRK are that, with BRK, the PC increments twice and the 'breakpoint' "flag" is set (though it really isn't a flag, but rather a status line indicating that the CPU is servicing an actual interrupt).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=7">Quietust</a> — Wed Oct 18, 2006 6:25 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[raidtab]]></name></author>
<updated>2006-10-18T15:02:15-07:00</updated>
<published>2006-10-18T15:02:15-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=2282&amp;p=18619#p18619</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=2282&amp;p=18619#p18619"/>
<title type="html"><![CDATA[6502 interrupt behaviour]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=2282&amp;p=18619#p18619"><![CDATA[
Cheers, so one more question: How exactly should i handle the BRK opcode? I know it uses the same vector address as IRQ, but does it actually hold the IRQ line low for a period of time? Should i buffer it until the CPU is available to execute an interrupt?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=1264">raidtab</a> — Wed Oct 18, 2006 3:02 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Quietust]]></name></author>
<updated>2006-10-18T14:54:28-07:00</updated>
<published>2006-10-18T14:54:28-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=2282&amp;p=18617#p18617</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=2282&amp;p=18617#p18617"/>
<title type="html"><![CDATA[6502 interrupt behaviour]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=2282&amp;p=18617#p18617"><![CDATA[
It should be noted that if the 'I' flag is set and the IRQ line is pulled low <strong>and</strong> returned high again, clearing the 'I' flag will <strong>not</strong> result in an interrupt being serviced - in order for the 6502 to detect an interrupt, the I flag must be clear <strong>during</strong> the pulse on the IRQ line.<br /><br />NMI can <em>never</em> be ignored - after all, it stands for Non-Maskable Interrupt. Also, NMI is <em>edge</em>-triggered, meaning if it stays low for a long time (like 20 scanlines worth of VBLANK), the 6502 will only service it once until it goes high and then low again.<br /><br />RESET is sort of special, since holding it low causes the CPU to halt completely; only after 'releasing' the reset signal does the CPU execut the interrupt.<br /><br />If two interrupts happen at the same time, NMI will take priority over IRQ (and RESET obviously takes priority over everything).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=7">Quietust</a> — Wed Oct 18, 2006 2:54 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[raidtab]]></name></author>
<updated>2006-10-18T14:49:14-07:00</updated>
<published>2006-10-18T14:49:14-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=2282&amp;p=18616#p18616</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=2282&amp;p=18616#p18616"/>
<title type="html"><![CDATA[6502 interrupt behaviour]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=2282&amp;p=18616#p18616"><![CDATA[
Thanks for the response. So that explains IRQ interrupts - but what about NMI and reset interrupts? Should they be handled in a similar way? What happens is an NMI interrupt is invoked when an IRQ interrupt is being executed, for instance?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=1264">raidtab</a> — Wed Oct 18, 2006 2:49 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Memblers]]></name></author>
<updated>2006-10-18T14:29:52-07:00</updated>
<published>2006-10-18T14:29:52-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=2282&amp;p=18610#p18610</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=2282&amp;p=18610#p18610"/>
<title type="html"><![CDATA[6502 interrupt behaviour]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=2282&amp;p=18610#p18610"><![CDATA[
You can't really ignore an interrupt, from the 6502's point of view an IRQ is coming from external hardware (which could vary widely).  As long as the IRQ pin is held low, the 6502 will continually get interrupts.  So the way it's handled is that the IRQ-generating hardware will have a way to acknowledge the interrupt, and release the IRQ pin so it goes back to being high.<br /><br />So yeah, you should do the IRQ as soon as CLI is run or the current interrupt finishes, unless the IRQ source has been acknowledged already.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=10">Memblers</a> — Wed Oct 18, 2006 2:29 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[raidtab]]></name></author>
<updated>2006-10-18T13:13:47-07:00</updated>
<published>2006-10-18T13:13:47-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=2282&amp;p=18608#p18608</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=2282&amp;p=18608#p18608"/>
<title type="html"><![CDATA[6502 interrupt behaviour]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=2282&amp;p=18608#p18608"><![CDATA[
Hi, i'm working on writing an NES emulator (like everyone else here) and i'm a bit confused over how to handle interrupts. How should I handle an interrupt that occurs when the status register I flag is set? Should it be ignored, or should I add it to a stack to execute as soon as the current interrupt finishes or CLI is executed? How does the priority of each interrupt  type come into this?<br /><br />Thanks<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=1264">raidtab</a> — Wed Oct 18, 2006 1:13 pm</p><hr />
]]></content>
</entry>
</feed>