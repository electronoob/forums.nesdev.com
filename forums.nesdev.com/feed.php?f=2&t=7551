<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=2&amp;t=7551" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2011-03-09T10:52:56-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=2&amp;t=7551</id>
<entry>
<author><name><![CDATA[never-obsolete]]></name></author>
<updated>2011-03-09T10:52:56-07:00</updated>
<published>2011-03-09T10:52:56-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7551&amp;p=75312#p75312</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7551&amp;p=75312#p75312"/>
<title type="html"><![CDATA[Text routines and scripting]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7551&amp;p=75312#p75312"><![CDATA[
I think I'm gonna go with what koitsu described, where I'll use $F8 to $FF as control codes.<br /><br />$F8xx where xx=designates what action to perform<br />$F9 to $FF will be common functions like newline, etc.<br /><br />Text compression is something I'm putting off until I get the story fleshed out. I'm gonna go with some sort of variable length dictionary scheme, what qbradq was talking about.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=187">never-obsolete</a> — Wed Mar 09, 2011 10:52 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2011-03-08T06:35:00-07:00</updated>
<published>2011-03-08T06:35:00-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7551&amp;p=75267#p75267</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7551&amp;p=75267#p75267"/>
<title type="html"><![CDATA[Text routines and scripting]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7551&amp;p=75267#p75267"><![CDATA[
<a href="http://scoop.diamondgalleries.com/public/default.asp?t=1&amp;m=1&amp;c=34&amp;s=264&amp;ai=80524&amp;arch=y&amp;ssd=3/4/2009%2012:01:00%20PM" class="postlink"><img src="http://scoop.diamondgalleries.com/public/news_images/4/80524_200339_1.jpg" alt="Image" /></a><br /><br />Back on topic: I used a very basic scripting system for the attract-mode instruction screen in <a href="http://www.pineight.com/lj65/" class="postlink">LJ65</a>. I used $01-$03 for various waiting amounts, $0A for newline, $0C to clear the text box, and $10-$17 and $18-$1F to press specific buttons for amounts of time (half or double autorepeat delay respectively), as well as of course $20-$5F to draw a character.<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">  .byt &quot;BUT YOU&quot;,$0A<br />  .byt &quot;CAN'T TURN&quot;,$0A<br />  .byt &quot;THE YELLOW&quot;,$0A<br />  .byt &quot;SQUARE ONES.&quot;,$01,$10,$01,$10,$10,$10,$02,$14,$0C<br /></div><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Tue Mar 08, 2011 6:35 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[koitsu]]></name></author>
<updated>2011-03-07T21:51:21-07:00</updated>
<published>2011-03-07T21:51:21-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7551&amp;p=75255#p75255</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7551&amp;p=75255#p75255"/>
<title type="html"><![CDATA[Text routines and scripting]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7551&amp;p=75255#p75255"><![CDATA[
<div class="quotetitle">tepples wrote:</div><div class="quotecontent"><br /><div class="quotetitle">Dwedit wrote:</div><div class="quotecontent">Don't bother with esoteric stuff like DMC interrupts, inaccurate emulators usually can still do Sprite 0 hit fine.<br /></div><br />Even the demo that used only sprite 0 screwed up on this DVD player.</div><br /><img src="http://thebiglead.fantasysportsven.netdna-cdn.com/wp-content/uploads/2010/03/cats_fighting_102006_5.jpg" alt="Image" /><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3">koitsu</a> — Mon Mar 07, 2011 9:51 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2011-03-07T18:01:21-07:00</updated>
<published>2011-03-07T18:01:21-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7551&amp;p=75242#p75242</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7551&amp;p=75242#p75242"/>
<title type="html"><![CDATA[Text routines and scripting]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7551&amp;p=75242#p75242"><![CDATA[
<div class="quotetitle">Dwedit wrote:</div><div class="quotecontent"><br />Don't bother with esoteric stuff like DMC interrupts, inaccurate emulators usually can still do Sprite 0 hit fine.<br /></div><br />Even the demo that used only sprite 0 screwed up on this DVD player.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Mon Mar 07, 2011 6:01 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Dwedit]]></name></author>
<updated>2011-03-07T17:43:53-07:00</updated>
<published>2011-03-07T17:43:53-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7551&amp;p=75241#p75241</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7551&amp;p=75241#p75241"/>
<title type="html"><![CDATA[Text routines and scripting]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7551&amp;p=75241#p75241"><![CDATA[
Don't bother with esoteric stuff like DMC interrupts, inaccurate emulators usually can still do Sprite 0 hit fine.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=53">Dwedit</a> — Mon Mar 07, 2011 5:43 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2011-03-07T15:52:03-07:00</updated>
<published>2011-03-07T15:52:03-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7551&amp;p=75239#p75239</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7551&amp;p=75239#p75239"/>
<title type="html"><![CDATA[Text routines and scripting]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7551&amp;p=75239#p75239"><![CDATA[
<div class="quotetitle">qbradq wrote:</div><div class="quotecontent"><br />One thing that has not been touched on yet is word compression. Many RPGs (even in the SNES era) had special op-codes for particular words. For instance, if you use the word internationalization a lot in your game that's going to take up an awful lot of space. You could have an opcode that indexes a dictionary of commonly-used long words and inline's that into the output stream.<br /></div><br />Yeah, I was planning on building an e-book reader based on this principle, which is called "Huffword" in <em>Managing Gigabytes</em>. Counting the dictionary and actual text, I managed to squeeze a short novel to one-third its size. I stopped when I realized that some portable DVD players that advertise NES support have really inaccurate emulators. (See <a href="http://nesdev.com/bbs/viewtopic.php?t=1179" class="postlink">previous topic</a>.)<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />That's where the script pre-processor comes in real handy. You can lay out your text in a regular text file, then run it through the compiler / compressor.<br /></div><br />And if you use a makefile to manage your build process, you can have the text compressor run automatically whenever you change the text file and rebuild the ROM.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Mon Mar 07, 2011 3:52 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[qbradq]]></name></author>
<updated>2011-03-07T15:38:39-07:00</updated>
<published>2011-03-07T15:38:39-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7551&amp;p=75238#p75238</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7551&amp;p=75238#p75238"/>
<title type="html"><![CDATA[Text routines and scripting]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7551&amp;p=75238#p75238"><![CDATA[
I have RE'ed the script systems for Ultima 4 and 5. They use a more limited scripting system than what you have described, so that's probably not going to be of much use to you <img src="http://forums.nesdev.com/images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /><br /><br />My opinion is that if you don't care about internationalization then one-byte codes should be fine. This gives you 128 possible op-codes for your script system. If you make these op-codes parameterizable that should be plenty.<br /><br />An example of a parameterized code might be with your menus:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">.byte MENU, 3 ; A menu definition follows with 3 entries<br />.byte &quot;My first choice&quot; ; Menu choices<br />.byte &quot;My second choice&quot;<br />.byte &quot;My third choice&quot;<br />.word first_response, second_response, third_response ; Response vectors<br /></div><br /><br />If on the other hand you do care about internationalization, then try the following:<br /><br />Codes 0-127 have their normal ASCII meaning.<br />Codes 128 - 253 are reserved for an extended character set.<br />Code 254 means the next byte (or word) is an index into another extended character set table.<br />Code 255 means the next byte is one of 256 possible opcodes.<br /><br /><br /><br />The script system I wrote for my C64 game (that I never finished) used a C program to parse a script and do various craziness to make my script data binary. I like your approach better using macros and aliases.<br /><br /><br /><br />One thing that has not been touched on yet is word compression. Many RPGs (even in the SNES era) had special op-codes for particular words. For instance, if you use the word internationalization a lot in your game that's going to take up an awful lot of space. You could have an opcode that indexes a dictionary of commonly-used long words and inline's that into the output stream.<br /><br />That's where the script pre-processor comes in real handy. You can lay out your text in a regular text file, then run it through the compiler / compressor. The compressor portion would calculate how many bytes in the output each word uses, then take the top 256 words and generate a dictionary for them, then replace all occurrences of these words in the script output with the dictionary op-codes.<br /><br />Many games even include spaces and punctuation along with their compressed words. I can't remember what game it was I was slogging through but I found both " that" and " that." in their dictionary.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3706">qbradq</a> — Mon Mar 07, 2011 3:38 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[koitsu]]></name></author>
<updated>2011-03-07T14:46:52-07:00</updated>
<published>2011-03-07T14:46:52-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7551&amp;p=75237#p75237</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7551&amp;p=75237#p75237"/>
<title type="html"><![CDATA[Text routines and scripting]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7551&amp;p=75237#p75237"><![CDATA[
Most of the Final Fantasy series, at least 1 and 2 (Japanese) on the NES, operate like this.  It's pretty standard.<br /><br />There are two things you need to keep in mind, and neither may matter to you depending on how intricate your game is:<br /><br />1) Using a byte (0-255) for your strings limits the number of "control" numbers you have available to you.  The "commonly used ASCII set" ranges from 0x20 to 0x7e, leaving you with a little more than half of the range a byte offers.<br /><br />I know that in commercial games a hacky (but understandable) workaround was to use a single byte for a control byte indicator, followed by 16-bit values that indicated what you wanted to do.  For example:<br /><br />  .db "Would you rather have a beer or a water?", $FF, $9AA2, $741F, $0000<br /><br />In this context, $FF tells the string parsing engine that there are special control codes that trail the $FF character.  The string parsing engine, up until this point, is reading a byte at a time (obviously).  The engine makes the assumption the codes that follow are 16-bit values (0-65535).<br /><br />It continues reading them, one value at a time, and possibly running code of your choice, until it finds one that matches $0000, which acts as an end-of-operation marker (think of it as end-of-string).<br /><br />The values themselves ($9AA2 and $741F) are just codes; you can make them do whatever you want.  $9AA2, for example, could be MENU2, etc...  You could also try turning them into pointers to subroutines that the string parsing engine would just JSR to (to execute some code, do some on-screen stuff, etc.).  Your choice.<br /><br />I would recommend keeping certain single-byte values for common things as well, like $0A could be newline, etc...  You get the idea.  Just don't use them all up, given the below:<br /><br />2) Keep in mind that if you expect your game to be available in other languages, it's very likely that you'll need more than 0x20-0x7e as indexes within CHR to represent a language (Japanese is a good example).<br /><br />If your game turns out to be highly interesting to romhackers, they almost certainly will appreciate a more "slimlined" design.  Otherwise, work with them in advance and have your game done in multiple languages from the get-go.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3">koitsu</a> — Mon Mar 07, 2011 2:46 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[never-obsolete]]></name></author>
<updated>2011-03-07T13:11:31-07:00</updated>
<published>2011-03-07T13:11:31-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7551&amp;p=75233#p75233</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7551&amp;p=75233#p75233"/>
<title type="html"><![CDATA[Text routines and scripting]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7551&amp;p=75233#p75233"><![CDATA[
So I'm expanding the text capability in my top-down adventure game to be able to give the player a choice, and have different things happen based on the choice. So for example, this is how a string would appear in rom:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">   .db &quot;Would you rather have a beer or a water?&quot;, CLRSCR<br />   .db &quot;Well?&quot;, NEWLINE<br />   .db MENU2<br />   .db &quot;Beer&quot;, ENDPROMPT, &lt;script1, &gt;script1<br />   .db &quot;Water&quot;, ENDPROMPT, &lt;script2, &gt;script2<br /></div><br /><br />The control codes:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">CLRSC      = clears the textbox and resets the cursor to the top<br />NEWLINE    = a newline<br />MENU2      = a text &quot;menu&quot; with 2 options is about to be defined<br />             -build a menu coordinate struct in ram &#40;for the arrow&#41; based<br />              on where the textbox appears on screen<br />             -save the event handler pointers<br />             -change the state of the player to &quot;menu handling mode&quot;<br />             -print the prompts<br />ENDPROMPT  = end of a prompt string<br /></div><br /><br />An option definition follows this format: [text prompt], ENDPROMPT, [script lsb], [script msb]<br /><br />MENU2 could also be other things, like MENU3, a counter for a value (a "How many?" type question), or a text input ("Enter your name:").<br /><br /><br />Anyone ever done something like this or dissassembled a game that does? This solution works pretty well for me, but you never know.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=187">never-obsolete</a> — Mon Mar 07, 2011 1:11 pm</p><hr />
]]></content>
</entry>
</feed>