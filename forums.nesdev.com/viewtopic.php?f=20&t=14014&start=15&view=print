<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - What exactly are T-states doing?</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">What exactly are T-states doing?</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=20&amp;t=14014">http://forums.nesdev.com/viewtopic.php?f=20&amp;t=14014</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>2</strong> of <strong>2</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dwedit</b> [ Fri Apr 01, 2016 1:06 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: What exactly are T-states doing?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />If I had to make a wild guess, I'd guess that it would finish executing the CB instruction instead of handling the interrupt.  This is just a wild guess.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>gekkio</b> [ Fri Apr 01, 2016 1:14 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: What exactly are T-states doing?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">If someone cared to test (and had a flash cart to do it with), it should be simple enough to set up a test that would have an interrupt trigger just after the CB prefix is read, and then watch the address bus to see if the next memory access is to the stack (to push PC) or to fetch the next instruction, and have your program look at the pushed F register to check for unused bits being set.</div><br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">If I had to make a wild guess, I'd guess that it would finish executing the CB instruction instead of handling the interrupt. This is just a wild guess.</div><br /><br />I did a quick test with something like this:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; ld a, $F0<br />&nbsp; ei<br />&nbsp; swap a<br /></div><br /><br />The result is: it runs swap a normally, then handles the interrupt. The PC pushed to the stack points to the instruction following swap a.<br />On a Z80, this technique can be used to reveal prefix opcodes, but here it just handles swap a as usual.<br /><br />I'll add this test ROM to the mooneye test suite once I tidy up things a bit and verify it on all devices.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">If CB flag is in the status flags (and POP itself doesn't clear it), the NOP should be interpreted as RLC B, so B will be 3 now.</div><br /><br />Mooneye GB test acceptance/bits/reg_f confirms that the low bits of F are not usable. Also, the test I mentioned above would show something special in F if CB would be a status flag

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>AWJ</b> [ Fri Apr 01, 2016 4:01 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: What exactly are T-states doing?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Just some comments about the questions on your &quot;emulation accuracy&quot; page.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">What happens if the CPU accesses memory during OAM DMA?</div><br /><br />I believe someone tested this and found that on the DMG, reads (presumably including opcode fetches) return the byte currently being DMAed. On the GBC, external WRAM (i.e. $C000-$DFFF) is on a separate physical bus from the cartridge slot, probably because of the WRAM bankswitching. If you read WRAM during DMA it has the same effect as on the DMG, but you can apparently run code from ROM normally while DMAing from WRAM (the Wizardry Famicom remakes do this--they don't bother copying their OAM DMA routine to $FF80) There are probably some limitations to executing code in parallel with DMA; the Wizardry games still do a 160-cycle delay loop after triggering DMA.<br /><br />I've never seen any test results for writes during OAM DMA, or whether OAM DMA automatically suppresses interrupts.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">What is the exact behaviour of EI?</div><br /><br />On a real Z80 (and I believe an 8080 as well), &quot;EI's effect is delayed one cycle&quot; is not true so much as &quot;EI actually <em>disables</em> interrupts until after the next instruction&quot; The reason is to ensure that the sequence &quot;EI; RET&quot; is atomic. If you put a hundred EIs in a row, no interrupts can occur between any of them. You should test whether this is true on the GB as well.<br /><br />On a real Z80, prefix instructions are the same: no interrupt can occur between the prefix and the instruction it's modifying (the 8080 doesn't have any prefix instructions). This is almost certainly true on the GB as well, otherwise chaos would ensue (you could never safely use a CB instruction any time an interrupt could possibly happen)<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">What is the exact timing of PUSH rr?</div><br /><br />It's not surprising that PUSH has an extra internal delay that POP doesn't. Remember that the GB, like other 8080-family CPUs, has a &quot;full&quot; stack: SP points to the last item pushed. So PUSH has to decrement SP first to generate the address for the write, whereas POP can immediately read memory while incrementing SP in parallel. The 6502 family has an &quot;empty&quot; stack, and pops take one more cycle than pushes do--exactly the opposite of the 8080 family.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">What does MBC1 do if you request a ROM bank number higher than what the cartridge supports?</div><br /><br />MBC1 only has five data pins; it can't see the top three bits of the data bus at all. That's why ROMs bigger than 4 MBit need a second register to select the upper bank bits. So a data value of 32 will mirror to 0 <em>in the MBC</em> and trigger the &quot;0 actually selects 1&quot; behaviour, but a data value of 16 on a 2 Mbit ROM, or 8 on a 1 Mbit ROM will mirror to 0 <em>in the ROM</em> and won't be converted to 1. The MBC doesn't &quot;know&quot; how big the ROM is; smaller ROMs just leave the upper address lines of the MBC unconnected.<br /><br />Likewise MBC2 only has four data pins; that's why its internal battery RAM is arranged in nybbles, and why it only supports up to 2 Mbit ROMs.<br /><br />Also, MBC1 is only connected to A15, A14 and A13 of the cartridge bus, and MBC2 is only connected to A15, A14 and A8-A0. So MBC1 registers are mirrored over spans of $2000 bytes, and MBC2 registers are mirrored over spans of $100 bytes (you can select a ROM bank by writing to $0100-01FF, $0300-03FF, $0500-05FF, etc.) The reason most monochrome GB games write to $2100 to switch ROM banks is to be compatible with either MBC1 or MBC2.<br /><br />re those bus timing diagrams: in case it isn't obvious, the reason why accesses to $8000-9FFF don't show any bus activity is that VRAM is on a separate bus on the GB (on the 'Pocket and everything afterwards it's built right into the CPU)<br /><br />DMG:<br />13-bit address bus and 8-bit data bus to VRAM<br />16-bit address bus and 8-bit data bus to WRAM and the cartridge slot<br />$FF80-FFFE internal to the CPU<br /><br />GBP:<br />Unconnected external VRAM address and data bus (maybe it can be enabled and the internal VRAM disabled somehow?)<br />16-bit address bus and 8-bit data bus to WRAM and the cartridge slot<br />VRAM and $FF80-FFFE internal to the CPU<br /><br />GBC:<br />15-bit address bus and 8-bit data bus to WRAM (the upper 3 bits come from the bank select register)<br />16-bit address bus and 8-bit data bus to the cartridge slot only<br />VRAM and $FF80-FFFE internal to the CPU<br /><br />GBA:<br />WRAM moved inside the CPU as well. The only external RAM on the GBA is the big slow work RAM (which isn't usable in GBC mode)<br /><br />Schematics showing pinouts of the GB CPU, MBC1 and MBC2 are at <!-- m --><a class="postlink" href="http://fms.komkon.org/GameBoy/Tech/Hardware.html">http://fms.komkon.org/GameBoy/Tech/Hardware.html</a><!-- m -->

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Rena</b> [ Fri Apr 01, 2016 4:47 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: What exactly are T-states doing?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Nice, that answers a lot of questions!<br /><br />One thing I've never been sure of is what actually is at FEA0-FEFF. It's only marked as &quot;unusable&quot; in documents, but what happens if you try to use it? Some have suggested it partially mirrors OAM.<br /><br />Also, is FFFF actually within HRAM or is it separate? Can it be accessed during DMA?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>AWJ</b> [ Fri Apr 01, 2016 5:14 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: What exactly are T-states doing?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Rena wrote:</div><div class="quotecontent">Nice, that answers a lot of questions!<br /><br />One thing I've never been sure of is what actually is at FEA0-FEFF. It's only marked as &quot;unusable&quot; in documents, but what happens if you try to use it? Some have suggested it partially mirrors OAM.<br /><br />Also, is FFFF actually within HRAM or is it separate? Can it be accessed during DMA?</div><br /><br />No idea about FEA0-FEFF, I doubt it's an OAM mirror though.<br /><br />FFFF is a memory-mapped register, like everything from FF00 to FF7F. I don't see why it wouldn't be accessible during OAM DMA (it's been discovered that accessing FF46 during DMA restarts the DMA) though some of the registers might have weird side effects.<br /><br />You know about the OAM corruption hardware bug with 16-bit inc/dec instructions, right? Instructions that don't even perform memory accesses can corrupt OAM, suggesting that the CPU and PPU parts of the die aren't as well segregated as one might expect.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>gekkio</b> [ Sun Apr 03, 2016 9:52 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: What exactly are T-states doing?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Just some comments about the questions on your &quot;emulation accuracy&quot; page.</div><br /><br />Thanks! The page is very out of date so I already have answers to many of the questions, but I don't mind discussing these things and sharing knowledge <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I believe someone tested this and found that on the DMG, reads (presumably including opcode fetches) return the byte currently being DMAed. On the GBC, external WRAM (i.e. $C000-$DFFF) is on a separate physical bus from the cartridge slot, probably because of the WRAM bankswitching. If you read WRAM during DMA it has the same effect as on the DMG, but you can apparently run code from ROM normally while DMAing from WRAM (the Wizardry Famicom remakes do this--they don't bother copying their OAM DMA routine to $FF80) There are probably some limitations to executing code in parallel with DMA; the Wizardry games still do a 160-cycle delay loop after triggering DMA.</div><br /><br />Yes, I've confirmed this as well. Basically, if you DMA stuff from the cartridge bus and the CPU wants to read stuff at the same time, the DMA wins and both the DMA and CPU see a byte from the current DMA source address. This applies regardless of whether it's an opcode fetch or a load.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I've never seen any test results for writes during OAM DMA, or whether OAM DMA automatically suppresses interrupts.</div><br /><br />I'm pretty sure I've checked that interrupts are not suppressed in any way. But I don't think I've tried writes...And I need to publish test ROMs for all these things. I've got sooo many unpublished test ROMs named oam_hell1, oam_hell2, oam_hell3, etc. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">On a real Z80 (and I believe an 8080 as well), &quot;EI's effect is delayed one cycle&quot; is not true so much as &quot;EI actually disables interrupts until after the next instruction&quot; The reason is to ensure that the sequence &quot;EI; RET&quot; is atomic. If you put a hundred EIs in a row, no interrupts can occur between any of them. You should test whether this is true on the GB as well.</div><br /><br />Unfortunately, this seems to be untrue on the GB based on a test ROM I wrote. EI doesn't disable interrupts, so given an EI sequence, the interrupt happens between the second and third EIs.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">It's not surprising that PUSH has an extra internal delay that POP doesn't. Remember that the GB, like other 8080-family CPUs, has a &quot;full&quot; stack: SP points to the last item pushed. So PUSH has to decrement SP first to generate the address for the write, whereas POP can immediately read memory while incrementing SP in parallel. The 6502 family has an &quot;empty&quot; stack, and pops take one more cycle than pushes do--exactly the opposite of the 8080 family.</div><br /><br />Aha! I never thought about this, but it makes perfect sense.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">FFFF is a memory-mapped register, like everything from FF00 to FF7F. I don't see why it wouldn't be accessible during OAM DMA (it's been discovered that accessing FF46 during DMA restarts the DMA) though some of the registers might have weird side effects.</div><br /><br />I've confirmed that it's accessible as usual. What do you mean exactly mean with &quot;accessing FF46 during DMA restarts the DMA&quot;? Do you mean writing or also reading? Writing indeed restarts the DMA, although the behaviour during the first DMA cycle is slightly different.<br /><br />I've also thought about $FFFF, and I don't see any reason why it would have to be a separate register. It doesn't really make a difference in emulation, but I find it completely plausible that it's just the last byte of high RAM. After all, all the bits are accessible unlike in the IF register.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>AWJ</b> [ Sat Apr 16, 2016 8:16 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: What exactly are T-states doing?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">gekkio wrote:</div><div class="quotecontent">Did you notice the logic analysis directory under tests in the mooneye-gb repository? I've done some logic analysis on the Game Boy hardware, and you might be interested in things like the write and read timings in the external bus.</div><br /><br />Is there any possibility you can do something like this with the SNES? Or has someone already done it (maybe nocash?)<br /><br />The SNES CPU is a lot closer to a standard 65816 than the GB is to a standard Z80, but it has a rather different bus from a 65816 (two address buses, separate /RD and /WR strobes instead of RD/WR) and I'm curious what the timings are, especially for DMA (which uses both address buses and the single data bus)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Sat Apr 16, 2016 9:21 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: What exactly are T-states doing?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />We have some SNES logic analyzer traces from the <a href="http://forums.nesdev.com/viewtopic.php?t=13088" class="postlink">repair effort with Poot36</a>. It's not all 58-ish signals, but it is 32 of them.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>AWJ</b> [ Sat Apr 16, 2016 10:24 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: What exactly are T-states doing?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">lidnariq wrote:</div><div class="quotecontent">We have some SNES logic analyzer traces from the <a href="http://forums.nesdev.com/viewtopic.php?t=13088" class="postlink">repair effort with Poot36</a>. It's not all 58-ish signals, but it is 32 of them.</div><br /><br />Those are very interesting, thanks for pointing them out. It looks like &quot;FastROM&quot;/3.58MHz cycles have a 50% duty cycle (/RD or /WR is asserted 3 master clocks after the address is put on the bus), and &quot;SlowROM&quot;/2.68MHz cycles stretch the phase in which /RD or /WR is asserted by 2 master clocks (and, for read cycles, presumably the CPU delays latching the data by the same amount).<br /><br />Unfortunately those traces are missing /PARD and /PAWR (the signals for the &quot;B-bus&quot; or $21xx address range), and as far as I can tell none of them shows any DMA operations (not that you could tell what was going on in DMA without both sets of signals...)<br /><br />Also there's the little fact that they're traces from a defective CPU...

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Sat Apr 16, 2016 11:24 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: What exactly are T-states doing?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />There's 25 different traces; Numbers 8 and up do have PARD and PAWR. Listings 12, 13, and 15 seem to show DMA.<br /><br />The defect only appeared to be that the PLB and PLD instructions corrupted the stack pointer; I don't think there's any reason to believe that would affect timing.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>AWJ</b> [ Sat Apr 16, 2016 1:23 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: What exactly are T-states doing?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">lidnariq wrote:</div><div class="quotecontent">There's 25 different traces; Numbers 8 and up do have PARD and PAWR. Listings 12, 13, and 15 seem to show DMA.<br /><br />The defect only appeared to be that the PLB and PLD instructions corrupted the stack pointer; I don't think there's any reason to believe that would affect timing.</div><br /><br />Yeah, I see the DMA in listing 15 now. Looks like DMA cycles aren't quite the same as SlowROM cycles. In a SlowROM cycle /RD or /WR is asserted for 5 cycles out of 8, but in a DMA cycle /RD and /PAWR are asserted for only 4 cycles out of 8 (and it looks like they're asserted simultaneously, which was the main thing I was curious about. I wonder how byuu came up with that 'two stage pipeline' nonsense...)<br /><br />Here's the relevant section of listing 15 annotated with what's going on during an 8-byte general-purpose DMA transfer:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">Label&nbsp; &nbsp; &gt; D&nbsp; CA&nbsp; &nbsp;CPURD CPUWR PA PARD PAWR RAMSEL REFRSH <br />Base&nbsp; &nbsp; &nbsp;&gt; He Hex&nbsp; &nbsp;Hex&nbsp; &nbsp;Hex&nbsp; He Hex&nbsp; Hex&nbsp; &nbsp;Hex&nbsp; &nbsp; Hex&nbsp; &nbsp;<br />__________ __ ____ _____ _____ __ ____ ____ ______ ______ <br />----- fetch STA $420B (three slow cycles)<br />&nbsp; &nbsp;2452&nbsp; &nbsp; 01 E31F&nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp;1 05&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2453&nbsp; &nbsp; 01 E318&nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp;1 06&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2454&nbsp; &nbsp; 01 E318&nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp;1 06&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2455&nbsp; &nbsp; FF E318&nbsp; &nbsp; &nbsp;0&nbsp; &nbsp; &nbsp;1 06&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2456&nbsp; &nbsp; 8D E318&nbsp; &nbsp; &nbsp;0&nbsp; &nbsp; &nbsp;1 06&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2457&nbsp; &nbsp; 8D E318&nbsp; &nbsp; &nbsp;0&nbsp; &nbsp; &nbsp;1 06&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2458&nbsp; &nbsp; 8D E318&nbsp; &nbsp; &nbsp;0&nbsp; &nbsp; &nbsp;1 06&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2459&nbsp; &nbsp; 8D E318&nbsp; &nbsp; &nbsp;0&nbsp; &nbsp; &nbsp;1 06&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2460&nbsp; &nbsp; 8D E319&nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp;1 06&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2461&nbsp; &nbsp; 8D E319&nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp;1 06&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2462&nbsp; &nbsp; 8D E319&nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp;1 06&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2463&nbsp; &nbsp; FF E319&nbsp; &nbsp; &nbsp;0&nbsp; &nbsp; &nbsp;1 06&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2464&nbsp; &nbsp; 0B E319&nbsp; &nbsp; &nbsp;0&nbsp; &nbsp; &nbsp;1 06&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2465&nbsp; &nbsp; 0B E319&nbsp; &nbsp; &nbsp;0&nbsp; &nbsp; &nbsp;1 06&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2466&nbsp; &nbsp; 0B E319&nbsp; &nbsp; &nbsp;0&nbsp; &nbsp; &nbsp;1 06&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2467&nbsp; &nbsp; 0B E319&nbsp; &nbsp; &nbsp;0&nbsp; &nbsp; &nbsp;1 06&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2468&nbsp; &nbsp; 0B E31B&nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp;1 06&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2469&nbsp; &nbsp; 0B E31A&nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp;1 06&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2470&nbsp; &nbsp; 0B E31A&nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp;1 06&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2471&nbsp; &nbsp; FF E31A&nbsp; &nbsp; &nbsp;0&nbsp; &nbsp; &nbsp;1 06&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2472&nbsp; &nbsp; 42 E31A&nbsp; &nbsp; &nbsp;0&nbsp; &nbsp; &nbsp;1 06&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2473&nbsp; &nbsp; 42 E31A&nbsp; &nbsp; &nbsp;0&nbsp; &nbsp; &nbsp;1 06&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2474&nbsp; &nbsp; 42 E31A&nbsp; &nbsp; &nbsp;0&nbsp; &nbsp; &nbsp;1 06&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2475&nbsp; &nbsp; 42 E31A&nbsp; &nbsp; &nbsp;0&nbsp; &nbsp; &nbsp;1 06&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />----- write to $420B (fast cycle, /WR asserted even though it's an internal CPU register!)<br />&nbsp; &nbsp;2476&nbsp; &nbsp; 42 E31B&nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp;1 06&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2477&nbsp; &nbsp; 42 420B&nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp;1 02&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2478&nbsp; &nbsp; 42 420B&nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp;1 02&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2479&nbsp; &nbsp; 01 420B&nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp;0 02&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2480&nbsp; &nbsp; 01 420B&nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp;0 02&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2481&nbsp; &nbsp; 01 420B&nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp;0 02&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />----- fetch RTL (slow cycle)<br />&nbsp; &nbsp;2482&nbsp; &nbsp; 01 E31B&nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp;1 06&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2483&nbsp; &nbsp; 01 E31B&nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp;1 06&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2484&nbsp; &nbsp; 01 E31B&nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp;1 06&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2485&nbsp; &nbsp; FF E31B&nbsp; &nbsp; &nbsp;0&nbsp; &nbsp; &nbsp;1 06&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2486&nbsp; &nbsp; 6B E31B&nbsp; &nbsp; &nbsp;0&nbsp; &nbsp; &nbsp;1 06&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2487&nbsp; &nbsp; 6B E31B&nbsp; &nbsp; &nbsp;0&nbsp; &nbsp; &nbsp;1 06&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2488&nbsp; &nbsp; 6B E31B&nbsp; &nbsp; &nbsp;0&nbsp; &nbsp; &nbsp;1 06&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2489&nbsp; &nbsp; 6B E31B&nbsp; &nbsp; &nbsp;0&nbsp; &nbsp; &nbsp;1 06&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />----- DMA pre-sync: align to a multiple of 8 clocks since power-on<br />&nbsp; &nbsp;2490&nbsp; &nbsp; 6B E31F&nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp;1 06&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2491&nbsp; &nbsp; 6B E31C&nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp;1 07&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2492&nbsp; &nbsp; 6B E31C&nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp;1 07&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2493&nbsp; &nbsp; 6B E31C&nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp;1 07&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2494&nbsp; &nbsp; 6B E31C&nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp;1 07&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2495&nbsp; &nbsp; 6B FFFF&nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp;1 CF&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />----- DMA setup: 8 clocks<br />&nbsp; &nbsp;2496&nbsp; &nbsp; 6B FFFF&nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp;1 CF&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2497&nbsp; &nbsp; 6B FFFF&nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp;1 CF&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2498&nbsp; &nbsp; 6B FFFF&nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp;1 CF&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2499&nbsp; &nbsp; 6B FFFF&nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp;1 CF&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2500&nbsp; &nbsp; 6B FFFF&nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp;1 CF&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2501&nbsp; &nbsp; 6B FFFF&nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp;1 CF&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2502&nbsp; &nbsp; 6B FFFF&nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp;1 CF&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2503&nbsp; &nbsp; 6B FFFF&nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp;1 CF&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 1<br />----- DMA transfer: 8 clocks x 8 bytes<br />&nbsp; &nbsp;2504&nbsp; &nbsp; 6B F400&nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp;1 08&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2505&nbsp; &nbsp; 6B F400&nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp;1 08&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2506&nbsp; &nbsp; 6B F400&nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp;1 08&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2507&nbsp; &nbsp; FF F400&nbsp; &nbsp; &nbsp;0&nbsp; &nbsp; &nbsp;1 08&nbsp; &nbsp; 1&nbsp; &nbsp; 0&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2508&nbsp; &nbsp; 00 F400&nbsp; &nbsp; &nbsp;0&nbsp; &nbsp; &nbsp;1 08&nbsp; &nbsp; 1&nbsp; &nbsp; 0&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2509&nbsp; &nbsp; 00 F400&nbsp; &nbsp; &nbsp;0&nbsp; &nbsp; &nbsp;1 08&nbsp; &nbsp; 1&nbsp; &nbsp; 0&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2510&nbsp; &nbsp; 00 F400&nbsp; &nbsp; &nbsp;0&nbsp; &nbsp; &nbsp;1 08&nbsp; &nbsp; 1&nbsp; &nbsp; 0&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2511&nbsp; &nbsp; 00 F401&nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp;1 08&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2512&nbsp; &nbsp; 00 F401&nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp;1 08&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2513&nbsp; &nbsp; 00 F401&nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp;1 08&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2514&nbsp; &nbsp; 00 F401&nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp;1 08&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2515&nbsp; &nbsp; FF F401&nbsp; &nbsp; &nbsp;0&nbsp; &nbsp; &nbsp;1 08&nbsp; &nbsp; 1&nbsp; &nbsp; 0&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2516&nbsp; &nbsp; 00 F401&nbsp; &nbsp; &nbsp;0&nbsp; &nbsp; &nbsp;1 08&nbsp; &nbsp; 1&nbsp; &nbsp; 0&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2517&nbsp; &nbsp; 00 F401&nbsp; &nbsp; &nbsp;0&nbsp; &nbsp; &nbsp;1 08&nbsp; &nbsp; 1&nbsp; &nbsp; 0&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2518&nbsp; &nbsp; 00 F401&nbsp; &nbsp; &nbsp;0&nbsp; &nbsp; &nbsp;1 08&nbsp; &nbsp; 1&nbsp; &nbsp; 0&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2519&nbsp; &nbsp; 00 F403&nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp;1 08&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2520&nbsp; &nbsp; 00 F402&nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp;1 08&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2521&nbsp; &nbsp; 00 F402&nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp;1 08&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2522&nbsp; &nbsp; 00 F402&nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp;1 08&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2523&nbsp; &nbsp; FF F402&nbsp; &nbsp; &nbsp;0&nbsp; &nbsp; &nbsp;1 08&nbsp; &nbsp; 1&nbsp; &nbsp; 0&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2524&nbsp; &nbsp; CE F402&nbsp; &nbsp; &nbsp;0&nbsp; &nbsp; &nbsp;1 08&nbsp; &nbsp; 1&nbsp; &nbsp; 0&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2525&nbsp; &nbsp; CE F402&nbsp; &nbsp; &nbsp;0&nbsp; &nbsp; &nbsp;1 08&nbsp; &nbsp; 1&nbsp; &nbsp; 0&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2526&nbsp; &nbsp; CE F402&nbsp; &nbsp; &nbsp;0&nbsp; &nbsp; &nbsp;1 08&nbsp; &nbsp; 1&nbsp; &nbsp; 0&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2527&nbsp; &nbsp; CE F403&nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp;1 08&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2528&nbsp; &nbsp; CE F403&nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp;1 08&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2529&nbsp; &nbsp; CE F403&nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp;1 08&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2530&nbsp; &nbsp; CE F403&nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp;1 08&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2531&nbsp; &nbsp; FF F403&nbsp; &nbsp; &nbsp;0&nbsp; &nbsp; &nbsp;1 08&nbsp; &nbsp; 1&nbsp; &nbsp; 0&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2532&nbsp; &nbsp; 39 F403&nbsp; &nbsp; &nbsp;0&nbsp; &nbsp; &nbsp;1 08&nbsp; &nbsp; 1&nbsp; &nbsp; 0&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2533&nbsp; &nbsp; 39 F403&nbsp; &nbsp; &nbsp;0&nbsp; &nbsp; &nbsp;1 08&nbsp; &nbsp; 1&nbsp; &nbsp; 0&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2534&nbsp; &nbsp; 39 F403&nbsp; &nbsp; &nbsp;0&nbsp; &nbsp; &nbsp;1 08&nbsp; &nbsp; 1&nbsp; &nbsp; 0&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2535&nbsp; &nbsp; 39 F407&nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp;1 08&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2536&nbsp; &nbsp; 39 F404&nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp;1 08&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2537&nbsp; &nbsp; 39 F404&nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp;1 08&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2538&nbsp; &nbsp; 39 F404&nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp;1 08&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2539&nbsp; &nbsp; FF F404&nbsp; &nbsp; &nbsp;0&nbsp; &nbsp; &nbsp;1 08&nbsp; &nbsp; 1&nbsp; &nbsp; 0&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2540&nbsp; &nbsp; 18 F404&nbsp; &nbsp; &nbsp;0&nbsp; &nbsp; &nbsp;1 08&nbsp; &nbsp; 1&nbsp; &nbsp; 0&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2541&nbsp; &nbsp; 18 F404&nbsp; &nbsp; &nbsp;0&nbsp; &nbsp; &nbsp;1 08&nbsp; &nbsp; 1&nbsp; &nbsp; 0&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2542&nbsp; &nbsp; 18 F404&nbsp; &nbsp; &nbsp;0&nbsp; &nbsp; &nbsp;1 08&nbsp; &nbsp; 1&nbsp; &nbsp; 0&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2543&nbsp; &nbsp; 18 F405&nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp;1 08&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2544&nbsp; &nbsp; 18 F405&nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp;1 08&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2545&nbsp; &nbsp; 18 F405&nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp;1 08&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2546&nbsp; &nbsp; 18 F405&nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp;1 08&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2547&nbsp; &nbsp; FF F405&nbsp; &nbsp; &nbsp;0&nbsp; &nbsp; &nbsp;1 08&nbsp; &nbsp; 1&nbsp; &nbsp; 0&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2548&nbsp; &nbsp; 63 F405&nbsp; &nbsp; &nbsp;0&nbsp; &nbsp; &nbsp;1 08&nbsp; &nbsp; 1&nbsp; &nbsp; 0&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2549&nbsp; &nbsp; 63 F405&nbsp; &nbsp; &nbsp;0&nbsp; &nbsp; &nbsp;1 08&nbsp; &nbsp; 1&nbsp; &nbsp; 0&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2550&nbsp; &nbsp; 63 F405&nbsp; &nbsp; &nbsp;0&nbsp; &nbsp; &nbsp;1 08&nbsp; &nbsp; 1&nbsp; &nbsp; 0&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2551&nbsp; &nbsp; 63 F407&nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp;1 08&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2552&nbsp; &nbsp; 63 F406&nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp;1 08&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2553&nbsp; &nbsp; 63 F406&nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp;1 08&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2554&nbsp; &nbsp; 63 F406&nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp;1 08&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2555&nbsp; &nbsp; FF F406&nbsp; &nbsp; &nbsp;0&nbsp; &nbsp; &nbsp;1 08&nbsp; &nbsp; 1&nbsp; &nbsp; 0&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2556&nbsp; &nbsp; 10 F406&nbsp; &nbsp; &nbsp;0&nbsp; &nbsp; &nbsp;1 08&nbsp; &nbsp; 1&nbsp; &nbsp; 0&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2557&nbsp; &nbsp; 10 F406&nbsp; &nbsp; &nbsp;0&nbsp; &nbsp; &nbsp;1 08&nbsp; &nbsp; 1&nbsp; &nbsp; 0&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2558&nbsp; &nbsp; 10 F406&nbsp; &nbsp; &nbsp;0&nbsp; &nbsp; &nbsp;1 08&nbsp; &nbsp; 1&nbsp; &nbsp; 0&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2559&nbsp; &nbsp; 10 F407&nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp;1 08&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2560&nbsp; &nbsp; 10 F407&nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp;1 08&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2561&nbsp; &nbsp; 10 F407&nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp;1 08&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2562&nbsp; &nbsp; 10 F407&nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp;1 08&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2563&nbsp; &nbsp; FF F407&nbsp; &nbsp; &nbsp;0&nbsp; &nbsp; &nbsp;1 08&nbsp; &nbsp; 1&nbsp; &nbsp; 0&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2564&nbsp; &nbsp; 7C F407&nbsp; &nbsp; &nbsp;0&nbsp; &nbsp; &nbsp;1 08&nbsp; &nbsp; 1&nbsp; &nbsp; 0&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2565&nbsp; &nbsp; 7C F407&nbsp; &nbsp; &nbsp;0&nbsp; &nbsp; &nbsp;1 08&nbsp; &nbsp; 1&nbsp; &nbsp; 0&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2566&nbsp; &nbsp; 7C F407&nbsp; &nbsp; &nbsp;0&nbsp; &nbsp; &nbsp;1 08&nbsp; &nbsp; 1&nbsp; &nbsp; 0&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2567&nbsp; &nbsp; 7C E2FF&nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp;1 08&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />------ DMA teardown: 8 clocks<br />&nbsp; &nbsp;2568&nbsp; &nbsp; 7C 22FF&nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp;1 08&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2569&nbsp; &nbsp; 7C 22FF&nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp;1 08&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2570&nbsp; &nbsp; 7C 22FF&nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp;1 08&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2571&nbsp; &nbsp; 7C 22FF&nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp;1 08&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2572&nbsp; &nbsp; 7C 22FF&nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp;1 08&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2573&nbsp; &nbsp; 7C 22FF&nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp;1 08&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2574&nbsp; &nbsp; 7C 22FF&nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp;1 08&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2575&nbsp; &nbsp; 7C 22FF&nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp;1 CF&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />------ DMA post-sync: align to a multiple of 6 clocks since start of pre-sync<br />&nbsp; &nbsp;2576&nbsp; &nbsp; 7C 22FF&nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp;1 CF&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2577&nbsp; &nbsp; 7C 22FF&nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp;1 CF&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2578&nbsp; &nbsp; 7C 22FF&nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp;1 CF&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2579&nbsp; &nbsp; 7C 22FF&nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp;1 CF&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />------- opcode execution resumes: two internal operation cycles for RTL<br />&nbsp; &nbsp;2580&nbsp; &nbsp; 7C E31C&nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp;1 07&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2581&nbsp; &nbsp; 7C E31C&nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp;1 07&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2582&nbsp; &nbsp; 7C E31C&nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp;1 07&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2583&nbsp; &nbsp; 7C E31C&nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp;1 07&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2584&nbsp; &nbsp; 7C E31C&nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp;1 07&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2585&nbsp; &nbsp; 7C E31C&nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp;1 07&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2586&nbsp; &nbsp; 7C E31C&nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp;1 07&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2587&nbsp; &nbsp; 7C E31C&nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp;1 07&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2588&nbsp; &nbsp; 7C E31C&nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp;1 07&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2589&nbsp; &nbsp; 7C E31C&nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp;1 07&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2590&nbsp; &nbsp; 7C E31C&nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp;1 07&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2591&nbsp; &nbsp; 7C E31C&nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp;1 07&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />------- fetch return address from stack<br />&nbsp; &nbsp;2592&nbsp; &nbsp; 7C E1FC&nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp;1 0F&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2593&nbsp; &nbsp; 7C 01FA&nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp;1 CE&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2594&nbsp; &nbsp; 7C 01FA&nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp;1 CE&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2595&nbsp; &nbsp; 7C 01FA&nbsp; &nbsp; &nbsp;0&nbsp; &nbsp; &nbsp;1 CE&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2596&nbsp; &nbsp; 3F 01FA&nbsp; &nbsp; &nbsp;0&nbsp; &nbsp; &nbsp;1 CE&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2597&nbsp; &nbsp; 3F 01FA&nbsp; &nbsp; &nbsp;0&nbsp; &nbsp; &nbsp;1 CE&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2598&nbsp; &nbsp; 3F 01FA&nbsp; &nbsp; &nbsp;0&nbsp; &nbsp; &nbsp;1 CE&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0&nbsp; &nbsp; &nbsp; 0<br />&nbsp; &nbsp;2599&nbsp; &nbsp; 3F 01FA&nbsp; &nbsp; &nbsp;0&nbsp; &nbsp; &nbsp;1 CE&nbsp; &nbsp; 1&nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; 0&nbsp; &nbsp; &nbsp; 0<br />(snip)<br /></div>

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>2</strong> of <strong>2</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>