<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=20" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2019-01-24T16:45:01-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=20</id>
<entry>
<author><name><![CDATA[ISSOtm]]></name></author>
<updated>2019-01-24T16:45:01-07:00</updated>
<published>2019-01-24T16:45:01-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=18341&amp;p=232796#p232796</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=18341&amp;p=232796#p232796"/>
<title type="html"><![CDATA[GBDev • Re: Starting guides for GBdev (audio-oriented)]]></title>

<category term="GBDev" scheme="http://forums.nesdev.com/viewforum.php?f=20" label="GBDev"/>
<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=18341&amp;p=232796#p232796"><![CDATA[
For blargg's test ROMs, an incomplete source code RE effort can be found <a href="https://github.com/L-P/blargg-test-roms/" class="postlink">here</a>.<br />More (much more!) advanced test ROMs can be found <a href="https://github.com/LIJI32/SameSuite" class="postlink">here</a>, although they require emulation of the <a href="http://gbdev.gg8.se/wiki/articles/CGB_Registers#FF76_-_PCM12_-_PCM_amplitudes_1_.26_2_.28Read_Only.29" class="postlink">PCMXX</a> registers.<br /><br />As for learning how to program, I'm going to shill <a href="https://eldred.fr/gb-asm-tutorial" class="postlink">my own stuff</a>, as I've got very positive feedback on it. It's not complete yet, so there's no mention of the APU, but it's at least enough to get a Hello World running.<br />By the way, the tutorial Pokun linked is very outdated. `gbhw.inc` has been replaced with <a href="https://github.com/tobiasvl/hardware.inc" class="postlink">hardware.inc</a>, RGBDS has officially deprecated `HOME`, `CODE`, `DATA` and `BSS` sections in favor of `ROM0`, `ROMX`, `ROMX` and `WRAM0`/`WRAMX`, and so on. RGBFIX is used for the header instead of source code macros.<br />The tutorial is also full of cargo cult - the first four bytes of code in the header need not be this, you can use `di ; jp EntryPoint` for example; the stack should never be put in HRAM, as it provides no benefit and eats space that could otherwise be allocated to fast-access variables. And overall it explains very little.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=10546">ISSOtm</a> — Thu Jan 24, 2019 4:45 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[koitsu]]></name></author>
<updated>2019-01-24T11:44:52-07:00</updated>
<published>2019-01-24T11:44:52-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=18341&amp;p=232788#p232788</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=18341&amp;p=232788#p232788"/>
<title type="html"><![CDATA[GBDev • Re: Starting guides for GBdev (audio-oriented)]]></title>

<category term="GBDev" scheme="http://forums.nesdev.com/viewforum.php?f=20" label="GBDev"/>
<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=18341&amp;p=232788#p232788"><![CDATA[
Thanks folks.<br /><br />Also, to answer ISSOtm's question: primarily a sound emulation focus (quote: &quot;I mostly just want to get the Tetris music playing or something&quot;), but given some of his other projects/interests pertaining to audio, developing on the GB (for sound-related reasons) would likely be necessary on some level.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3">koitsu</a> — Thu Jan 24, 2019 11:44 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[nitro2k01]]></name></author>
<updated>2019-01-24T10:53:46-07:00</updated>
<published>2019-01-24T10:53:46-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=18335&amp;p=232784#p232784</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=18335&amp;p=232784#p232784"/>
<title type="html"><![CDATA[GBDev • Re: Game Boy CPU isn't a Z80. What is it?]]></title>

<category term="GBDev" scheme="http://forums.nesdev.com/viewforum.php?f=20" label="GBDev"/>
<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=18335&amp;p=232784#p232784"><![CDATA[
<div class="quotetitle">gekkio wrote:</div><div class="quotecontent"><br />* Interrupts are similar to GB, but not exactly the same (NMI, amount of interrupts). Note that CGB CPUs have an NMI pin though....  <img src="http://forums.nesdev.com/images/smilies/icon_cool.gif" alt="8-)" title="Cool" /><br /></div><br />Have you documented the details of this publicly anywhere?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4548">nitro2k01</a> — Thu Jan 24, 2019 10:53 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Pokun]]></name></author>
<updated>2019-01-24T06:13:18-07:00</updated>
<published>2019-01-24T06:13:18-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=18341&amp;p=232765#p232765</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=18341&amp;p=232765#p232765"/>
<title type="html"><![CDATA[GBDev • Re: Starting guides for GBdev (audio-oriented)]]></title>

<category term="GBDev" scheme="http://forums.nesdev.com/viewforum.php?f=20" label="GBDev"/>
<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=18341&amp;p=232765#p232765"><![CDATA[
This tutorial is good to quickly learn how to get up a ROM up and running (which is always the hardest step IMHO):<br /><!-- m --><a class="postlink" href="http://peterwynroberts.com/?p=10">http://peterwynroberts.com/?p=10</a><!-- m --><br /><br />A collection of pretty much everything Game Boy development:<br /><!-- m --><a class="postlink" href="https://github.com/gbdev/awesome-gbdev">https://github.com/gbdev/awesome-gbdev</a><!-- m --><br /><br />I recommend to read the official development documents, and Pan Docs.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6013">Pokun</a> — Thu Jan 24, 2019 6:13 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Pokun]]></name></author>
<updated>2019-01-24T06:01:11-07:00</updated>
<published>2019-01-24T06:01:11-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=18335&amp;p=232763#p232763</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=18335&amp;p=232763#p232763"/>
<title type="html"><![CDATA[GBDev • Re: Game Boy CPU isn't a Z80. What is it?]]></title>

<category term="GBDev" scheme="http://forums.nesdev.com/viewforum.php?f=20" label="GBDev"/>
<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=18335&amp;p=232763#p232763"><![CDATA[
I don't know, I think it's pretty clear that Nintendo wanted a Z80-like CPU. The Z80 was the most common architecture among game developers at the time, and they even used the superior Z80 mnemonics to make programmers more comfortable.<br /><br />I copy-paste a lot of code between my Game Boy and MSX programming. Things like loops using DJNZ and such must be manually edited of course, but it's a lot easier than translating 6502 code to Z80.<br /><br />I guess it's a 8080 family, Z80-like custom microprocessor with possibly a SM83-compatible core.<br />GBZ80 is fine.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6013">Pokun</a> — Thu Jan 24, 2019 6:01 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[byuu]]></name></author>
<updated>2019-01-24T01:33:04-07:00</updated>
<published>2019-01-24T01:33:04-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=18341&amp;p=232755#p232755</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=18341&amp;p=232755#p232755"/>
<title type="html"><![CDATA[GBDev • Re: Starting guides for GBdev (audio-oriented)]]></title>

<category term="GBDev" scheme="http://forums.nesdev.com/viewforum.php?f=20" label="GBDev"/>
<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=18341&amp;p=232755#p232755"><![CDATA[
I used this documentation to understand how Game Boy audio worked:<br /><br /><!-- m --><a class="postlink" href="http://gbdev.gg8.se/wiki/articles/Sound_Controller">http://gbdev.gg8.se/wiki/articles/Sound_Controller</a><!-- m --><br /><br />If your friend would like to see code implement the sound controller, this may help, although it's not bit-perfect:<br /><br /><!-- m --><a class="postlink" href="https://gitlab.com/higan/higan/tree/master/higan/gb/apu">https://gitlab.com/higan/higan/tree/master/higan/gb/apu</a><!-- m --><br /><br />If they want to test an implementation, the best I know of are blargg's test ROMs:<br /><br /><!-- m --><a class="postlink" href="http://gbdev.gg8.se/files/roms/blargg-gb-tests/">http://gbdev.gg8.se/files/roms/blargg-gb-tests/</a><!-- m --><br /><br />But just a note that every Game Boy is a little different, and these tests fail on certain models. More about that here:<br /><br /><!-- m --><a class="postlink" href="http://gbdev.gg8.se/wiki/articles/Test_ROMs#Blargg.27s_tests">http://gbdev.gg8.se/wiki/articles/Test_ ... .27s_tests</a><!-- m --><br /><br />Overall, the hardware is rather forgiving, and you can get pretty good sound without having to support all the zany edge cases and per-model behaviors.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=375">byuu</a> — Thu Jan 24, 2019 1:33 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[ISSOtm]]></name></author>
<updated>2019-01-24T01:06:08-07:00</updated>
<published>2019-01-24T01:06:08-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=18341&amp;p=232752#p232752</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=18341&amp;p=232752#p232752"/>
<title type="html"><![CDATA[GBDev • Re: Starting guides for GBdev (audio-oriented)]]></title>

<category term="GBDev" scheme="http://forums.nesdev.com/viewforum.php?f=20" label="GBDev"/>
<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=18341&amp;p=232752#p232752"><![CDATA[
Wait, a guide for development, or for emulation? Those are entirely separate.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=10546">ISSOtm</a> — Thu Jan 24, 2019 1:06 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[koitsu]]></name></author>
<updated>2019-01-23T16:59:04-07:00</updated>
<published>2019-01-23T16:59:04-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=18341&amp;p=232733#p232733</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=18341&amp;p=232733#p232733"/>
<title type="html"><![CDATA[GBDev • Starting guides for GBdev (audio-oriented)]]></title>

<category term="GBDev" scheme="http://forums.nesdev.com/viewforum.php?f=20" label="GBDev"/>
<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=18341&amp;p=232733#p232733"><![CDATA[
A friend of mine wanted to know if there were any good or recommended starting guides for general GB development, particularly sound emulation.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3">koitsu</a> — Wed Jan 23, 2019 4:59 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[gekkio]]></name></author>
<updated>2019-01-22T12:01:33-07:00</updated>
<published>2019-01-22T12:01:33-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=18335&amp;p=232656#p232656</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=18335&amp;p=232656#p232656"/>
<title type="html"><![CDATA[GBDev • Re: Game Boy CPU isn't a Z80. What is it?]]></title>

<category term="GBDev" scheme="http://forums.nesdev.com/viewforum.php?f=20" label="GBDev"/>
<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=18335&amp;p=232656#p232656"><![CDATA[
Let's take a look at various facts...<br /><br /><span style="text-decoration: underline">SM8311/13/14/15 (Sharp Microcomputer Data Book 1996)</span>:<br /><br />* Sharp SM8311/SM8313/SM8314/SM8315 are 8-bit &quot;microcomputers&quot; intended for home appliances<br />* They use a SM83 CPU core<br />* They use a CPU register set and an instruction set that is a 100% match with the Game Boy CPU (none missing, no extras). There are no other known 8-bit CPUs with the exactly same instruction set<br />* We know that the <strong>instructions</strong> match, but we don't know if the opcodes are exactly the same<br />* They use fetch/execute overlap (&quot;pipeline&quot;) that matches exactly my observations of DMG B and SGB CPUs<br />* The pipeline diagram has errors: Instruction N+1 fetches an operand but no opcode, Instruction N+2 fetches two opcodes<br />* Instruction &quot;type&quot; count is listed as 74 in the overview section, which matches the amount of instructions in the listing later<br />* Interrupts are similar to GB, but not exactly the same (NMI, amount of interrupts). Note that CGB CPUs have an NMI pin though....  <img src="http://forums.nesdev.com/images/smilies/icon_cool.gif" alt="8-)" title="Cool" /> <br />* The reset behaviour described in the datasheet matches my observations of DMG B and SGB CPUs:<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Upon counting the system clock pulses for the specified period, it exits hardware reset condition and executes the program at address OOOOH<br /></div><br /><br />IIRC DMG/SGB count exactly 32768 machine cycles after reset is deasserted before starting the opcode fetch of the first instruction from $0000.<br /><br /><span style="text-decoration: underline">SM8320 (Sharp Microcomputers Data Book 1990)</span>:<br /><br />* Sharp SM8320 is a 8-bit &quot;microcomputer&quot; intended for air conditioners<br />* It uses an SM83 CPU core<br />* Instruction set size is listed as <strong>81</strong> on the overview page<br />* Instruction list looks like a 100% match with SM831x and Game Boy CPU, although this list is more high-level than the SM831x list so we can't be sure<br />* Instruction list says instruction set size is <strong>77</strong> (not 81 like on the overview page, or 74 like on SM831x)<br /><br /><span style="text-decoration: underline">SM-812/813 (Sharp Semiconductor Data Book, MOS Edition, 1986)</span>:<br /><br />* CPU parts of the block diagram look similar to the SM83 core part in SM8320 block diagram<br />* CPU registers shown on the block diagram are the same as in SM83 and GB CPU<br />* Instruction set size is listed as <strong>81</strong><br /><br />And now, some speculation:<br /><br />* SM83 and Game Boy CPU seem like a perfect match (unlike for example SM82 vs GB or SM85 vs GB). I think it's reasonable to say at least that GB uses an SM83-compatible core<br />* SM831x and SM8320 both use SM83 core, but we have three listed instruction set sizes: 74, 77, and 81. I think the instruction set is the same, but the way how &quot;size&quot; is calculated has changed so there's some mistakes and confusion<br />* SM8320 and SM-812/813 both list instruction size as 81 on the overview page. SM8320 has a different count later, but having the exact same size on the overview page suggests the instruction set *might* be the same.<br />* -&gt; maybe GB uses the unnamed core, which might be a predecessor of SM83. Even if the instruction set is the same, it's reasonable to believe that this unnamed core is not exactly the same as SM83.<br /><br />And finally some links:<br /><br />Some index page that shows various numbering schemes of *publicly available Sharp chips* (includes LR-prefixed chips): <!-- m --><a class="postlink" href="https://4donline.ihs.com/images/VipMasterIC/IC/SHRP/SHRPD00019/SHRPD00019-120.pdf">https://4donline.ihs.com/images/VipMast ... 19-120.pdf</a><!-- m --><br />More details of SM6000, which is not similar to GB: <!-- m --><a class="postlink" href="https://4donline.ihs.com/images/VipMasterIC/IC/SHRP/SHRPS03904/SHRPS03904-1.pdf">https://4donline.ihs.com/images/VipMast ... 3904-1.pdf</a><!-- m --><br />More details of SM85, which is not similar to GB: <!-- m --><a class="postlink" href="https://4donline.ihs.com/images/VipMasterIC/IC/SHRP/SHRPS03906/SHRPS03906-1.pdf">https://4donline.ihs.com/images/VipMast ... 3906-1.pdf</a><!-- m --><br />Mentions 8-bit SH-11 core, which is &quot;low-power Z80&quot;: <!-- m --><a class="postlink" href="https://4donline.ihs.com/images/VipMasterIC/IC/SHRP/SHRPD00019/SHRPD00019-18.pdf">https://4donline.ihs.com/images/VipMast ... 019-18.pdf</a><!-- m --><br />8-bit microcomputer list that mentions SM82/83/84/85: <!-- m --><a class="postlink" href="https://4donline.ihs.com/images/VipMasterIC/IC/SHRP/SHRPD00019/SHRPD00019-14.pdf">https://4donline.ihs.com/images/VipMast ... 019-14.pdf</a><!-- m --><br />Another 8-bit microcomputer list: <!-- m --><a class="postlink" href="https://4donline.ihs.com/images/VipMasterIC/IC/SHRP/SHRPD017/SHRPD017-27.pdf">https://4donline.ihs.com/images/VipMast ... 017-27.pdf</a><!-- m --><br />Some weird copyright page that lists LR35902 and some SM8x chips. Googling some of these chips is what started this SM8x investigation: <!-- m --><a class="postlink" href="http://www.copyrightencyclopedia.com/lr35911-bk4d-nus-lz-2122-lz-2111/">http://www.copyrightencyclopedia.com/lr ... 2-lz-2111/</a><!-- m --><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=7248">gekkio</a> — Tue Jan 22, 2019 12:01 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[lidnariq]]></name></author>
<updated>2019-01-22T11:38:53-07:00</updated>
<published>2019-01-22T11:38:53-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=18335&amp;p=232655#p232655</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=18335&amp;p=232655#p232655"/>
<title type="html"><![CDATA[GBDev • Re: Game Boy CPU isn't a Z80. What is it?]]></title>

<category term="GBDev" scheme="http://forums.nesdev.com/viewforum.php?f=20" label="GBDev"/>
<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=18335&amp;p=232655#p232655"><![CDATA[
One more option, even more pedantically true and useless than LR35902: the die appears to have the marking &quot;CESL2OA&quot; or &quot;CE5L2OA&quot;. (see also: gekkio's tweet <a href="https://twitter.com/gekkio/status/980442995110678528" class="postlink">here</a> )<br /><br />My personal opinion is that, even though &quot;GBZ80&quot; is a fundamentally flawed code name, it is nonetheless the one that we have a long history of using and is it <strong>is</strong> unambiguous.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3512">lidnariq</a> — Tue Jan 22, 2019 11:38 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[TmEE]]></name></author>
<updated>2019-01-22T11:10:12-07:00</updated>
<published>2019-01-22T11:10:12-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=18335&amp;p=232654#p232654</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=18335&amp;p=232654#p232654"/>
<title type="html"><![CDATA[GBDev • Re: Game Boy CPU isn't a Z80. What is it?]]></title>

<category term="GBDev" scheme="http://forums.nesdev.com/viewforum.php?f=20" label="GBDev"/>
<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=18335&amp;p=232654#p232654"><![CDATA[
I refer to it as G80.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3483">TmEE</a> — Tue Jan 22, 2019 11:10 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2019-01-22T10:11:56-07:00</updated>
<published>2019-01-22T10:11:56-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=14691&amp;p=232652#p232652</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=14691&amp;p=232652#p232652"/>
<title type="html"><![CDATA[GBDev • Re: What instead of indexed addressing modes?]]></title>

<category term="GBDev" scheme="http://forums.nesdev.com/viewforum.php?f=20" label="GBDev"/>
<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=14691&amp;p=232652#p232652"><![CDATA[
I've since collected a lot of this into a <a href="http://gbdev.gg8.se/wiki/articles/Struct" class="postlink">wiki article</a>.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Tue Jan 22, 2019 10:11 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2019-01-22T10:05:56-07:00</updated>
<published>2019-01-22T10:05:56-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=18335&amp;p=232650#p232650</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=18335&amp;p=232650#p232650"/>
<title type="html"><![CDATA[GBDev • Re: Game Boy CPU isn't a Z80. What is it?]]></title>

<category term="GBDev" scheme="http://forums.nesdev.com/viewforum.php?f=20" label="GBDev"/>
<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=18335&amp;p=232650#p232650"><![CDATA[
I've tried to write about the CPU core in the LR35902 SOC generically as an &quot;8080 family CPU&quot; in the sense that the Sony SPC700 is a 6502 family CPU. This works because the biggest things in the <a href="http://pastraiser.com/cpu/i8080/i8080_opcodes.html" class="postlink">8080 opcode matrix</a> that are missing (not moved) in the <a href="https://max-m.github.io/gb-docs/optables/" class="postlink">&quot;GBZ80&quot; opcode matrix</a> are the following, which I've tended to find less consequential than the omission of IX/IY and the alternate register set:<br /><br /><ul><li>Loading or storing the 16-bit contents of HL at an absolute address ($22, $2A)</li><li>Jump, call, and return based on bit 7 or parity of the last ALU result</li><li>Exchange HL with 16-bit word at top of stack ($E3) or with DE ($EB)</li></ul><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Tue Jan 22, 2019 10:05 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Shonumi]]></name></author>
<updated>2019-01-22T08:59:05-07:00</updated>
<published>2019-01-22T08:59:05-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=18335&amp;p=232646#p232646</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=18335&amp;p=232646#p232646"/>
<title type="html"><![CDATA[GBDev • Re: Game Boy CPU isn't a Z80. What is it?]]></title>

<category term="GBDev" scheme="http://forums.nesdev.com/viewforum.php?f=20" label="GBDev"/>
<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=18335&amp;p=232646#p232646"><![CDATA[
<div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />&quot;GBZ80&quot;: Fan name for the Game Boy instruction set based on the overall similarity of its unprefixed and $CB-prefixed instructions to those of Zilog's Z80. <strong>Invites confusion</strong> because the lack of IX/IY register and exchange instructions makes it handle quite unlike a Game Gear's authentic Z80 in practice, particularly when accessing fields of structs.<br /></div><br /><br />I disagree. If anything, we call it a GBZ80 to both mark the similarities and to highlight the fact that it is very separate from &quot;real&quot; Z80. To me it's always been &quot;The Game Boy's custom take on a Z80&quot;, and never once confused it as being a full Z80. When I first started reading up on the Game Boy, nearly every document called it &quot;Z80-like&quot; but not specifically a real Z80, which was enough for even a clueless 20-something year-old like me at the time to understand what kind of message they were sending.<br /><br />I never use the term &quot;LR35902&quot;. It refers to the whole SoC as I see it, and it's not helpful when specifically talking about the CPU. Even if I did use it to refer to the CPU, it's... clunky. Same reason I don't refer to the ARM9 on the NDS as the ARM946E-S; I'm not going to remember a random combination of numbers and letters when there's a shorthand version available that perfectly describes the subject at hand.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6368">Shonumi</a> — Tue Jan 22, 2019 8:59 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[dougeff]]></name></author>
<updated>2019-01-22T07:52:29-07:00</updated>
<published>2019-01-22T07:52:29-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=18335&amp;p=232645#p232645</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=18335&amp;p=232645#p232645"/>
<title type="html"><![CDATA[GBDev • Re: Game Boy CPU isn't a Z80. What is it?]]></title>

<category term="GBDev" scheme="http://forums.nesdev.com/viewforum.php?f=20" label="GBDev"/>
<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=18335&amp;p=232645#p232645"><![CDATA[
My point is that you can't program something on a true Z80 machine, and then put the same code on a gameboy. Not even close. You'll basically have to rewrite it.<br /><br />I don't feel like it can be called a Z80 chip.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=7008">dougeff</a> — Tue Jan 22, 2019 7:52 am</p><hr />
]]></content>
</entry>
</feed>