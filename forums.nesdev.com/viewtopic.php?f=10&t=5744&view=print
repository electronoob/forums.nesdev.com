<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - First Project after learing 6502 asm</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">First Project after learing 6502 asm</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=10&amp;t=5744">http://forums.nesdev.com/viewtopic.php?f=10&amp;t=5744</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Punchy</b> [ Sat Nov 14, 2009 6:44 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>First Project after learing 6502 asm</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />My Browser made new topics instead of Editing the old one's so pls delete the other ones.
<br />At first sorry for bad English, I'm a 15 year old from Germany^^
<br />
<br />Hiho Guy's I register nearly one year ago , because I wanted to learn asm for the 6502.
<br />
<br />After 1 day or so I lost the intrest and distanced me from programming for the NES.
<br />
<br />Yeasterday I realy read myself into asm again and wanted to programm a little "Game" where you could move around(with an animated Sprite) and shoot.
<br />
<br />So I used the sourcecode of realy bad prototype of Pong(It has Marios cap as ball and no Sprite movement at all) and began to write my little "Game"
<br />
<br />Today I reached my goals.(I must say in my opinion it's pretty good to learn asm and code a little game in 2 days.)
<br />
<br />My sourcecode is pretty much a mess, 
<br />all the vblank NMI stuff is from the Pong  prototype and all of my code isn't realy commented and all over the place.
<br />
<br />So I want you to ignore my inaccuracy and rate my work (in realationship with that I learned asm yesterday) and recommend me stuff I could do next.
<br />
<br /><a href="http://gamers-lair.de/pong3.nes" class="postlink">Game Rom</a>
<br />
<br />EDIT:  Like i said it's not realy a game, it's just thea first thing I did with asm. I just want some advice how to go on and maybe do a sidescroller or a shmup like Galaga. I realy ask myself how to do this whole backgroudstuff, cause I didn't realy found a tutorial in wich is explain where you have to store the tilenumber for it etc.
<br />
<br />I also ask myself how to do collisiondeceting with the background, and do a little game engine.
<br />
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; .inesprg 1&nbsp; &nbsp;; 1x 16KB PRG code<br />&nbsp; .ineschr 1&nbsp; &nbsp;; 1x&nbsp; 8KB CHR data<br />&nbsp; .inesmap 0&nbsp; &nbsp;; mapper 0 = NROM, no bank swapping<br />&nbsp; .inesmir 1&nbsp; &nbsp;; background mirroring<br />&nbsp; <br /><br />;;;;;;;;;;;;;;;<br /><br /><br />;; Variabeln<br />&nbsp; .rsset $0000&nbsp; <br />&nbsp; <br />gamestate&nbsp; .rs 1&nbsp; ; Gamestatus<br />buttons1&nbsp; &nbsp;.rs 1&nbsp; ; player 1 gamepad buttons, one bit per button<br />buttons2&nbsp; &nbsp;.rs 1&nbsp; ; player 2 gamepad buttons, one bit per button<br />left&nbsp; &nbsp; &nbsp; &nbsp;.rs 1&nbsp; ; Bewegung Links<br />right&nbsp; &nbsp; &nbsp; .rs 1&nbsp; ; Bewegung Rechts<br />posx&nbsp; &nbsp; &nbsp; &nbsp;.rs 1&nbsp; ; Spielerposition<br />posy&nbsp; &nbsp; &nbsp; &nbsp;.rs 1&nbsp; ; -- ,, --<br />ani&nbsp; &nbsp; &nbsp; &nbsp; .rs 1&nbsp; ; Spieleranimation<br />shoot&nbsp; &nbsp; &nbsp; .rs 1&nbsp; ; Schuss oder nicht<br />face&nbsp; &nbsp; &nbsp; &nbsp;.rs 1&nbsp; ; Blickrichtung<br />face2&nbsp; &nbsp; &nbsp; .rs 1&nbsp; ; Schussrichtung<br />sposx&nbsp; &nbsp; &nbsp; .rs 1&nbsp; ; Schussposition<br />sani&nbsp; &nbsp; &nbsp; &nbsp;.rs 1&nbsp; ; Spieleranimation<br />sposxs&nbsp; &nbsp; &nbsp;.rs 1&nbsp; ; Schussstartposition<br /><br /><br /><br /><br />;; Konstanten &#40;Noch nicht benutzt&#41;<br />STATETITLE&nbsp; &nbsp; &nbsp;= $00&nbsp; ; Titelbildschirm<br />STATEPLAYING&nbsp; &nbsp;= $01&nbsp; ; Spielbildschirm<br />STATEGAMEOVER&nbsp; = $02&nbsp; ; Game Over Bildschrim<br />&nbsp; <br /><br /><br /><br /><br />;; Vblank, Clearmem etc.<br />&nbsp; .bank 0<br />&nbsp; .org $C000 <br />RESET:<br />&nbsp; SEI&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ; disable IRQs<br />&nbsp; CLD&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ; disable decimal mode<br />&nbsp; LDX #$40<br />&nbsp; STX $4017&nbsp; &nbsp; ; disable APU frame IRQ<br />&nbsp; LDX #$FF<br />&nbsp; TXS&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ; Set up stack<br />&nbsp; INX&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ; now X = 0<br />&nbsp; STX $2000&nbsp; &nbsp; ; disable NMI<br />&nbsp; STX $2001&nbsp; &nbsp; ; disable rendering<br />&nbsp; STX $4010&nbsp; &nbsp; ; disable DMC IRQs<br /><br />vblankwait1:&nbsp; &nbsp; &nbsp; &nbsp;; First wait for vblank to make sure PPU is ready<br />&nbsp; BIT $2002<br />&nbsp; BPL vblankwait1<br /><br />clrmem:<br />&nbsp; LDA #$00<br />&nbsp; STA $0000, x<br />&nbsp; STA $0100, x<br />&nbsp; STA $0300, x<br />&nbsp; STA $0400, x<br />&nbsp; STA $0500, x<br />&nbsp; STA $0600, x<br />&nbsp; STA $0700, x<br />&nbsp; LDA #$FE<br />&nbsp; STA $0200, x<br />&nbsp; INX<br />&nbsp; BNE clrmem<br />&nbsp; &nbsp;<br />vblankwait2:&nbsp; &nbsp; &nbsp; ; Second wait for vblank, PPU is ready after this<br />&nbsp; BIT $2002<br />&nbsp; BPL vblankwait2<br /><br />;; Sprites+Palleten<br />LoadPalettes:<br />&nbsp; LDA $2002&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<br />&nbsp; LDA #$3F<br />&nbsp; STA $2006&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<br />&nbsp; LDA #$00<br />&nbsp; STA $2006&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<br />&nbsp; LDX #$00&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <br />LoadPalettesLoop:<br />&nbsp; LDA palette, x&nbsp; &nbsp; &nbsp; &nbsp; <br />&nbsp; STA $2007&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<br />&nbsp; INX&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<br />&nbsp; CPX #$20&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <br />&nbsp; BNE LoadPalettesLoop&nbsp; <br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <br /><br />LoadSprites:<br />;;;;;; Spielecharakter<br />&nbsp; LDA #$09<br />&nbsp; STA $201<br />&nbsp; LDA #$19<br />&nbsp; STA $205<br />&nbsp; LDA #$08<br />&nbsp; STA $209<br />&nbsp; LDA #$18<br />&nbsp; STA $20D<br />&nbsp; LDA #$00<br />&nbsp; STA $202<br />&nbsp; STA $206<br />&nbsp; STA $20A<br />&nbsp; STA $20E<br />&nbsp; STA ani<br /><br />&nbsp; <br />&nbsp; <br />&nbsp; <br /><br /><br />&nbsp; <br /><br /><br />;; Spielerposition&#40;Start&#41;<br />&nbsp; LDA #$80<br />&nbsp; STA posx<br />&nbsp; <br />&nbsp; LDA #$30<br />&nbsp; STA posy<br /><br /><br />;; Spielstatus auf Spiel &#40;sp√§ter auf Titel&#41;<br />&nbsp; LDA #STATEPLAYING<br />&nbsp; STA gamestate<br /><br /><br />;; NMI etc.&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<br />&nbsp; LDA #%10010000&nbsp; &nbsp;; enable NMI, sprites from Pattern Table 0, background from Pattern Table 1<br />&nbsp; STA $2000<br /><br />&nbsp; LDA #%00011110&nbsp; &nbsp;; enable sprites, enable background, no clipping on left side<br />&nbsp; STA $2001<br /><br />Forever:<br />&nbsp; JMP Forever&nbsp; &nbsp; &nbsp;;jump back to Forever, infinite loop, waiting for NMI<br />&nbsp; <br />&nbsp;<br /><br />NMI:<br />&nbsp; LDA #$00<br />&nbsp; STA $2003&nbsp; &nbsp; &nbsp; &nbsp;; set the low byte &#40;00&#41; of the RAM address<br />&nbsp; LDA #$02<br />&nbsp; STA $4014&nbsp; &nbsp; &nbsp; &nbsp;; set the high byte &#40;02&#41; of the RAM address, start the transfer<br /><br />&nbsp; JSR DrawScore<br /><br />&nbsp; ;;This is the PPU clean up section, so rendering the next frame starts properly.<br />&nbsp; LDA #%10010000&nbsp; &nbsp;; enable NMI, sprites from Pattern Table 0, background from Pattern Table 1<br />&nbsp; STA $2000<br />&nbsp; LDA #%00011110&nbsp; &nbsp;; enable sprites, enable background, no clipping on left side<br />&nbsp; STA $2001<br />&nbsp; LDA #$00&nbsp; &nbsp; &nbsp; &nbsp; ;;tell the ppu there is no background scrolling<br />&nbsp; STA $2005<br />&nbsp; STA $2005<br />&nbsp; &nbsp; <br />&nbsp; ;;;all graphics updates done by here, run game engine<br /><br />;; Zu Controller Abfrage springen<br />&nbsp; JSR ReadController1&nbsp; ;; Controller 1<br />&nbsp; JSR ReadController2&nbsp; ;; Controller 2<br />&nbsp; <br />GameEngine:&nbsp; <br />&nbsp; LDA gamestate<br />&nbsp; CMP #STATETITLE<br />&nbsp; BEQ EngineTitle&nbsp; &nbsp; ;;Check ob Title<br />&nbsp; &nbsp; <br />&nbsp; LDA gamestate<br />&nbsp; CMP #STATEGAMEOVER<br />&nbsp; BEQ EngineGameOver&nbsp; ;;-- ,, -- Game Over<br />&nbsp; <br />&nbsp; LDA gamestate<br />&nbsp; CMP #STATEPLAYING<br />&nbsp; BEQ EnginePlaying&nbsp; &nbsp;;; -- ,, -- Laufendes Spiel<br />GameEngineDone:&nbsp; <br />&nbsp; <br />&nbsp; JSR UpdateSprites&nbsp; ;;Sprite Updating<br /><br />&nbsp; RTI&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<br />&nbsp;<br />&nbsp;<br />&nbsp;<br />&nbsp;<br />;; Titel + Game Over Screen, noch nicht fertig<br />EngineTitle:<br /><br />&nbsp; JMP GameEngineDone<br /><br /><br />&nbsp;EngineGameOver:<br /><br />&nbsp; JMP GameEngineDone<br />&nbsp;<br /><br />EnginePlaying:<br /><br />&nbsp; JMP GameEngineDone<br /><br />UpdateSprites:<br />&nbsp; JSR Moveguy<br />&nbsp; Lda shoot<br />&nbsp; beq Shootdone2<br />&nbsp; LDA face<br />&nbsp; sta face2<br />&nbsp; lda posx<br />&nbsp; sta sposx<br />&nbsp; sta sposxs<br />&nbsp; lda #00<br />&nbsp; sta shoot<br />&nbsp; sta $212<br />&nbsp; LDA #$0a<br />&nbsp; sta $211<br />Shootdone2:<br /><br />&nbsp; Leftb:<br />&nbsp; LDA left<br />&nbsp; BEQ Leftdone<br />&nbsp; LDA posx<br />&nbsp; SEC<br />&nbsp; SBC #$01<br />&nbsp; STA posx<br />&nbsp; LDA #01 <br />&nbsp; clc<br />&nbsp; adc ani<br />&nbsp; STA ani<br />&nbsp; LDA #01<br />&nbsp; STA face<br />&nbsp; Leftdone:<br /><br />&nbsp; Rightb:<br />&nbsp; LDA right<br />&nbsp; BEQ Rightdone<br />&nbsp; LDA posx<br />&nbsp; CLC<br />&nbsp; ADC #01<br />&nbsp; STA posx<br />&nbsp; LDA #01 <br />&nbsp; clc<br />&nbsp; adc ani<br />&nbsp; STA ani<br />&nbsp; lda #02<br />&nbsp; sta face<br />&nbsp; Rightdone:<br /><br />&nbsp; LDA posy<br />&nbsp; STA $200<br />&nbsp; LDA posx<br />&nbsp; STA $203<br />&nbsp; LDA posy<br />&nbsp; CLC<br />&nbsp; ADC #08<br />&nbsp; STA $204<br />&nbsp; LDA posx<br />&nbsp; STA $207<br />&nbsp; LDA posx<br />&nbsp; SEC<br />&nbsp; SBC #08<br />&nbsp; STA $20b<br />&nbsp; LDA posy<br />&nbsp; STA $208<br />&nbsp; LDA posx<br />&nbsp; SEC<br />&nbsp; SBC #08<br />&nbsp; STA $20f<br />&nbsp; LDA posy<br />&nbsp; CLC<br />&nbsp; ADC #08<br />&nbsp; STA $20c<br />&nbsp;<br /><br /><br /><br />&nbsp; <br /><br /><br />&nbsp; Lda #00<br />&nbsp; sta left<br />&nbsp; sta right<br />&nbsp; <br />&nbsp; Shootcompare:<br />&nbsp; LDA sposxs<br />&nbsp; SEC<br />&nbsp; SBC sposx<br />&nbsp; CMP #$50<br />&nbsp; BCC ShootcompareDone<br />&nbsp; CMP #$C0<br />&nbsp; BCS ShootcompareDone<br />&nbsp; LDA #$FE<br />&nbsp; STA $212<br />&nbsp; STA $211<br />&nbsp; STA $213<br />&nbsp; STA $214<br />&nbsp; ShootcompareDone:<br />&nbsp; <br /><br />&nbsp; Shootright:<br />&nbsp; LDA face2<br />&nbsp; cmp #01<br />&nbsp; BEQ ShootRightDone<br />&nbsp; LDA sposx<br />&nbsp; CLC<br />&nbsp; ADc #02<br />&nbsp; STA sposx<br />ShootRightDone:<br /><br />&nbsp; Shootleft:<br />&nbsp; LDA face2<br />&nbsp; cmp #02<br />&nbsp; BEQ ShootLeftDone<br />&nbsp; LDA sposx<br />&nbsp; SEC<br />&nbsp; SBC #02<br />&nbsp; STA sposx<br />ShootLeftDone:<br />&nbsp; <br />&nbsp; LDA posy<br />&nbsp; STA $210<br />&nbsp; LDA sposx<br />&nbsp; STA $213<br /><br /><br /><br />&nbsp; LDX ani<br />&nbsp; CPX #08<br />&nbsp; Beq Animation<br />&nbsp; LDY sani<br />&nbsp; clc<br />&nbsp; adc #01<br />&nbsp; sta sani<br /><br /><br />&nbsp; <br /><br />&nbsp; <br /><br /><br />&nbsp; <br />&nbsp; <br />&nbsp; RTS<br /><br /><br />DrawScore:<br />&nbsp; RTS<br /><br />Moveguy:<br /><br />CheckLeft:<br />&nbsp; LDA buttons1<br />&nbsp; and #%00000010<br />&nbsp; Cmp #%00000010<br />&nbsp; BNE CheckLeftDone<br />&nbsp; LDA #$01<br />&nbsp; STA left<br />&nbsp;<br />CheckLeftDone:<br /><br />CheckRight:<br />&nbsp; LDA buttons1<br />&nbsp; and #%00000001<br />&nbsp; CMP #%00000001<br />&nbsp; BNE CheckRightDone<br />&nbsp; LDA #$01<br />&nbsp; STA right<br />CheckRightDone:<br /><br /><br />CheckShoot:<br />&nbsp; LDA buttons1<br />&nbsp; and #%10000000<br />&nbsp; Cmp #%10000000<br />&nbsp; BNE CheckShootDone<br />&nbsp; LDA #$01<br />&nbsp; STA shoot<br />CheckShootDone:<br />RTS<br />&nbsp; <br />&nbsp;<br />&nbsp;<br />ReadController1:<br />&nbsp; LDA #$01<br />&nbsp; STA $4016<br />&nbsp; LDA #$00<br />&nbsp; STA $4016<br />&nbsp; LDX #$08<br />ReadController1Loop:<br />&nbsp; LDA $4016<br />&nbsp; LSR A&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <br />&nbsp; ROL buttons1&nbsp; &nbsp; <br />&nbsp; DEX<br />&nbsp; BNE ReadController1Loop<br />&nbsp; RTS&nbsp; <br /><br /><br />ReadController2:<br />&nbsp; LDA #$01<br />&nbsp; STA $4016<br />&nbsp; LDA #$00<br />&nbsp; STA $4016<br />&nbsp; LDX #$08<br />ReadController2Loop:<br />&nbsp; LDA $4017<br />&nbsp; LSR A&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <br />&nbsp; ROL buttons2&nbsp; &nbsp; <br />&nbsp; DEX<br />&nbsp; BNE ReadController2Loop<br />&nbsp; RTS&nbsp; <br /><br />Animation:<br />&nbsp; LDX $205<br />&nbsp; CPX #$19<br />&nbsp; BNE Animation2<br /><br />&nbsp; LDA #$1B<br />&nbsp; STA $205<br />&nbsp; LDA #$1A<br />&nbsp; STA $20d<br />&nbsp; LDA #00<br />&nbsp; sta ani<br /><br />&nbsp; RTS<br />&nbsp; <br /><br /><br />Animation2:<br />&nbsp; LDA #$19<br />&nbsp; sta $205<br />&nbsp; LDA #$18<br />&nbsp; sta $20d<br />&nbsp; lda #00<br />&nbsp; sta ani<br />&nbsp; rts<br /><br /><br />;;;;;;;;;;;;;;&nbsp; <br />&nbsp; <br />&nbsp; <br />&nbsp; <br />&nbsp; .bank 1<br />&nbsp; .org $E000<br />palette:<br />&nbsp; .db $0f,$0f,$0f,$0F,&nbsp; $0f,$0f,$0f,$0F,&nbsp; $0f,$0f,$0f,$0F,&nbsp; $0f,$0f,$0f,$0F&nbsp; &nbsp;<br />&nbsp; .db $0f,$06,$2a,$30,&nbsp; $22,$08,$0f,$3C,&nbsp; $22,$1C,$15,$14,&nbsp; $22,$02,$38,$3C&nbsp; &nbsp;<br /><br /><br /><br />&nbsp; .org $FFFA&nbsp; &nbsp; &nbsp;;first of the three vectors starts here<br />&nbsp; .dw NMI&nbsp; &nbsp; &nbsp; &nbsp; ;when an NMI happens &#40;once per frame if enabled&#41; the <br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;;processor will jump to the label NMI:<br />&nbsp; .dw RESET&nbsp; &nbsp; &nbsp; ;when the processor first turns on or is reset, it will jump<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;;to the label RESET:<br />&nbsp; .dw 0&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ;external interrupt IRQ is not used in this tutorial<br />&nbsp; <br />&nbsp; <br />;;;;;;;;;;;;;;&nbsp; <br />&nbsp; <br />&nbsp; <br />&nbsp; .bank 2<br />&nbsp; .org $0000<br />&nbsp; .incbin &quot;mario.chr&quot;&nbsp; &nbsp;;includes 8KB graphics file from SMB1</div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>chmaster</b> [ Sat Nov 14, 2009 10:23 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Excuse me, what emulator do you use to play this game?
<br />
<br />I've tried Nestopia and fceuxdsp, but I don't think it's a game. All I can see is a octopus-like thing on the screen, and it can shoot bullets rightward or leftward. That's all and nothing else. Maybe I used the wrong emulator?
<br />
<br /><img src="http://img42.imageshack.us/img42/6206/nesrom.jpg" alt="Image" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>miau</b> [ Sun Nov 15, 2009 4:47 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Willkommen,
<br />also gibt es wirklich Deutsche, die sich f√ºr die NES-Programmierung interessieren, wo doch die meisten lieber ihrem C64 treu bleiben. Sch√∂n! <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />
<br />
<br />Translation:
<br />Welcome,
<br />so, while most Germans prefer the C64, there are some interested in NES programming after all. That's cool!
<br />
<br />
<br />Anyway, it's a good start. The code may look messy... not as messy as my first project, mind you, so I'm in no position to complain. <img src="./images/smilies/icon_wink.gif" alt=";)" title="Wink" />
<br />
<br />Now that you've gotten acquainted with the basics you might want to start with a fresh file and create a minimal code template (ines header, start-up routine, NMI, address vectors) for your next project. You will eventually want to separate game logic (main loop) and drawing (NMI), too.
<br />
<br />Some wild suggestions on what to do next:
<br /><ul>- Use more sophisticated sprite movement. I.e. pressing one of the d-pad buttons doesn't change the sprite position directly, but slowly changes its speed. Speed is then added to the sprite position once per frame. (use fixed-point math for really smooth movement)<br />- Try to handle multiple sprites without making the code much bigger. (using the x/y register to loop through each sprite's variables)<br />- Draw background tiles. You may want to copy-paste code to set up the PPU from somewhere else, as that might not be a trivial task for a beginner. Using background tiles isn't as straightforward as using sprites.</ul>
<br />You may also want to skim through bunnyboy's <a href="http://www.nintendoage.com/faq/nerdy_nights_out.html" class="postlink">Nerdy Nights tutorials</a> over at nintendoage if you haven't already done so. They cover the basics in detail and have become quite popular among beginners.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>