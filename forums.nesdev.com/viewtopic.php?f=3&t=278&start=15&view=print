<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Some questions here..</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Some questions here..</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=3&amp;t=278">http://forums.nesdev.com/viewtopic.php?f=3&amp;t=278</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>2</strong> of <strong>2</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Quietust</b> [ Sun May 22, 2005 9:25 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Muchaserres wrote:</div><div class="quotecontent">So now, instead of having a "if(address&gt;=0x8000){writetomapper(address,byte);}" I have to "writetomapper(address,byte);" every time a write occurs. My question here is: how are you dealing with this problem? or, is it there a better/faster/smarter way of doing this?</div><br /><br />This is pretty much the same way I handle it, except instead of having a 'writetomapper(addr,val)' I have 16 'writeToBank()' function <strong>pointers</strong>, one for each of $x000-$xFFF (and another set for reads). By default, all of them are set up for system RAM (0000-1FFF), PPU I/O (2000-3FFF), APU I/O (4000-4FFF, though the upper space just attempts to read/write from ROM), and ROM for the rest; when each mapper loads, it simply overrides the default I/O handlers to use its own behavior when reading/writing certain addresses (keeping track of the previous handler for registers at $4xxx so sound/controllers still work).<br /><br /><div class="quotetitle">Muchaserres wrote:</div><div class="quotecontent">On the other hand, I'm still having problems with Romancia_(J). It shows garbage on title screen.. but I'm almost sure that my MMC1 implementation is oK. Suggestions?</div><br /><br />Do you support CHR RAM bankswitching? If not, this would explain why you are having problems - the upper half of the screen swaps in the first 4KB CHR RAM bank at PPU $1000-$1FFF, then switches in the second bank to display the picture at the bottom.<br /><br /><div class="quotetitle">Muchaserres wrote:</div><div class="quotecontent">Also still having trouble with Bee_52_(U).. may it be missing IRQ handling?</div>
<br />Bee 52's mapper does not use IRQs; rather, the game uses DPCM IRQs as a scanline timer (Fire Hawk also does this) and requires very precise emulation to get it to display just right.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Muchaserres</b> [ Sun May 22, 2005 12:09 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Quietust wrote:</div><div class="quotecontent">This is pretty much the same way I handle it, except instead of having a 'writetomapper(addr,val)' I have 16 'writeToBank()' function <strong>pointers</strong>, one for each of $x000-$xFFF (and another set for reads). By default, all of them are set up for system RAM (0000-1FFF), PPU I/O (2000-3FFF), APU I/O (4000-4FFF, though the upper space just attempts to read/write from ROM), and ROM for the rest; when each mapper loads, it simply overrides the default I/O handlers to use its own behavior when reading/writing certain addresses (keeping track of the previous handler for registers at $4xxx so sound/controllers still work).</div><br /><br />Neat!<br /><br /><div class="quotetitle">Quietust wrote:</div><div class="quotecontent">Do you support CHR RAM bankswitching? If not, this would explain why you are having problems - the upper half of the screen swaps in the first 4KB CHR RAM bank at PPU $1000-$1FFF, then switches in the second bank to display the picture at the bottom.</div><br /><br />I do so with CHR ROM. I guess the problem is that I'm not doing it when there's no CHR banks. I'll check that.<br /><br /><div class="quotetitle">Quietust wrote:</div><div class="quotecontent">Bee 52's mapper does not use IRQs; rather, the game uses DPCM IRQs as a scanline timer (Fire Hawk also does this) and requires very precise emulation to get it to display just right.</div>
<br />
<br />OK, I'm not emulating the APU yet, so this must be the problem.
<br />
<br />Thanks for the quick answer!

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>hap</b> [ Thu May 26, 2005 8:31 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The titlescreen in Romancia looks fine here, but it's got problems in-game: the statusbar is garbaged, and scrolls along with the playfield.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Muchaserres</b> [ Sun Jul 31, 2005 3:12 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Hi all,
<br />
<br />So, having some free time this days, I've decided to start implementing the APU into my emu. The first part of it which I am dealing with is DMC, as implementing it will increase my emu's compatibility (cause of IRQ/DMA's, you know). But I'm quite far from understanding how this unit works. I've read several APU docs, but I'm quite lost.. So, is it there any "let's learn how it works step by step" doc, or THE doc, which I could use to get an overall idea about how thinks work?
<br />
<br />Thx.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>hap</b> [ Sun Jul 31, 2005 8:20 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />APU emulation without actual sound output is not hard to get running. I think the wiki ( <!-- m --><a class="postlink" href="http://nesdev.com/wiki/?page=nesdevWiki">http://nesdev.com/wiki/?page=nesdevWiki</a><!-- m --> )covers it well, plus blargg's new information a few threads back (thanks blargg).
<br />
<br />The problem historic hap above you is blabbing about will be fixed with DMC implementation.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Muchaserres</b> [ Mon Aug 01, 2005 8:43 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />OK, so I'll read those sources carefully.
<br />
<br />Just one question: as with the PPU, is it there any list of the APU operation on each of its cycles? I mean, how does the APU know what it has to do on each (let's say) CPU cycle?
<br />
<br />Thanks.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Mon Aug 01, 2005 11:53 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The closest to this is the frame counter, which times note durations and the volume fading. The APU is basically a collection of many <em>independent</em> units, each generally running all the time, so there isn't a master table of operation. This should be expected since each sound channel must be separate from the others. But even within a sound channel, each sub-unit generally runs at its own rate. Sound is controlled by switching the connections between units on and off, and changing the input parameters. In hardware it's usually easier to simply ignore the output of something than switch it off, so things run all the time.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Muchaserres</b> [ Mon Aug 01, 2005 3:54 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />So, what should be done to keep everything synchronized? I mean, the simplest NES emulator core would run the CPU for some cycles, then the PPU for the equivalent cycles, and then the APU. Should "RunAPUCycles()" just increment/decrement counters? And, if so, how many units per CPU cycle?
<br />
<br />Thx again.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Mon Aug 01, 2005 7:44 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The APU only needs to be run when its side-effects matter. The simplest implementation is to run the APU up to the current CPU time whenever the CPU reads or writes to an APU register, when your emulator needs more samples, and when the APU takes a special action on its own.
<br />
<br />The special actions the APU carries out are the frame IRQ, DMC IRQ, and DMC wait-states when reading a sample byte. These are somewhat complex to implement properly. They can be efficiently handled by calculating the timestamp of the next APU-generated event, and avoiding running the CPU beyond this. This timestamp might change after an APU write or after one of these events occurs.
<br />
<br />I've found it simplest to use a common timebase that is periodically re-zeroed (to prevent overflow). This could be done at the beginning of vertical blanking each frame. In my APU the read and write functions take the timestamp. The APU keeps track of the last time it was run to, allowing it to determine how many clocks it needs to run to catch up to present. It's better to keep this calculation in one place in the APU rather than make the calling code keep track of it.
<br />
<br />Within the APU, functions take a count of the number of clocks to run for. They generally contain a loop that emulates the various dividers in the APU. When a divider reloads, the event is emulated. This might clock another unit, usually handled with a clock_x() function.
<br />
<br />When I first wrote an APU emulator, I implemented only the frequency of the first square channel. No volume, frame counter, nothing else. It was enjoyable to hear the basic tune once it worked.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Muchaserres</b> [ Sun Aug 07, 2005 9:30 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />In order to do things like that, I'm now modifying my emu so it uses a master timer, as Disch (?) proposed some time ago. My question here is: have any of you had any major problems when recoding your emus that way? Or, what should be changed in the way the emu works? I mean, mine is actually cycle-accurate an runs every game (almost) perfectly, but when rewritting its parts to fit the new scheme (using ideas from other posts), all games get glitchy. I may be missing something. I'm actually multiplying PPU cycles by 5 and CPU cycles by 15, I hope I'm right at least with that.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>2</strong> of <strong>2</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>