<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Some help with VBL..</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Some help with VBL..</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=3&amp;t=1892">http://forums.nesdev.com/viewtopic.php?f=3&amp;t=1892</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>2</strong> of <strong>3</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Muchaserres</b> [ Mon Aug 21, 2006 6:34 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I get exactly the same. Using the 'wrong' scheme, I get,
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">CPUCycles =&nbsp; 89289 - miniCycles=&nbsp; 9 - PPUCycles =&nbsp; 89298/ 89342<br />CPUCycles =&nbsp; 89310 - miniCycles=&nbsp; 9 - PPUCycles =&nbsp; 89319/ 89342<br />CPUCycles =&nbsp; 89331 - miniCycles=&nbsp; 9 - PPUCycles =&nbsp; 89340/ 89342<br />CPUCycles =&nbsp; &nbsp; &nbsp;10 - miniCycles=&nbsp; 9 - PPUCycles =&nbsp; &nbsp;6820/ 89342<br />CPUCycles =&nbsp; 89330 - miniCycles=&nbsp; 9 - PPUCycles =&nbsp; 89339/ 89342<br />CPUCycles =&nbsp; 89331 - miniCycles=&nbsp; 9 - PPUCycles =&nbsp; 89340/ 89342<br />CPUCycles =&nbsp; 89332 - miniCycles=&nbsp; 9 - PPUCycles =&nbsp; 89341/ 89342<br />CPUCycles =&nbsp; 89333 - miniCycles=&nbsp; 9 - PPUCycles =&nbsp; 89342/ 89342<br />CPUCycles =&nbsp; 89334 - miniCycles=&nbsp; 9 - PPUCycles =&nbsp; 89343/ 89342<br />CPUCycles =&nbsp; 89335 - miniCycles=&nbsp; 9 - PPUCycles =&nbsp; 89344/ 89342<br />CPUCycles =&nbsp; 89336 - miniCycles=&nbsp; 9 - PPUCycles =&nbsp; 89345/ 89342<br />CPUCycles =&nbsp; 89337 - miniCycles=&nbsp; 9 - PPUCycles =&nbsp; 89346/ 89342<br />CPUCycles =&nbsp; 89338 - miniCycles=&nbsp; 9 - PPUCycles =&nbsp; 89347/ 89342<br />CPUCycles =&nbsp; 89339 - miniCycles=&nbsp; 9 - PPUCycles =&nbsp; 89348/ 89342<br />CPUCycles =&nbsp; 89340 - miniCycles=&nbsp; 9 - PPUCycles =&nbsp; 89349/ 89342<br />CPUCycles =&nbsp; 89341 - miniCycles=&nbsp; 9 - PPUCycles =&nbsp; 89350/ 89342 &lt;-- DISABLED HERE!<br />CPUCycles =&nbsp; &nbsp; &nbsp; 0 - miniCycles=&nbsp; 9 - PPUCycles =&nbsp; &nbsp;6820/ 89342<br />CPUCycles =&nbsp; 89341 - miniCycles=&nbsp; 9 - PPUCycles =&nbsp; 89350/ 89342 &lt;-- DISABLED HERE!<br />CPUCycles =&nbsp; &nbsp; &nbsp;59 - miniCycles=&nbsp; 9 - PPUCycles =&nbsp; &nbsp;6820/ 89342</div><br /><br />while using the 'right' one I get,<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">CPUCycles =&nbsp; 89289 - miniCycles=&nbsp; 9 - PPUCycles =&nbsp; 89298/ 89342<br />CPUCycles =&nbsp; 89310 - miniCycles=&nbsp; 9 - PPUCycles =&nbsp; 89319/ 89342<br />CPUCycles =&nbsp; 89331 - miniCycles=&nbsp; 9 - PPUCycles =&nbsp; 89340/ 89342<br />CPUCycles =&nbsp; &nbsp; &nbsp;10 - miniCycles=&nbsp; 9 - PPUCycles =&nbsp; &nbsp;6820/ 89342<br />CPUCycles =&nbsp; 89330 - miniCycles=&nbsp; 9 - PPUCycles =&nbsp; 89339/ 89342<br />CPUCycles =&nbsp; 89331 - miniCycles=&nbsp; 9 - PPUCycles =&nbsp; 89340/ 89342<br />CPUCycles =&nbsp; 89332 - miniCycles=&nbsp; 9 - PPUCycles =&nbsp; 89341/ 89342 &lt;-- DISABLED HERE!<br />CPUCycles =&nbsp; 89333 - miniCycles=&nbsp; 9 - PPUCycles =&nbsp; 89342/ 89342<br />CPUCycles =&nbsp; 89334 - miniCycles=&nbsp; 9 - PPUCycles =&nbsp; 89343/ 89342<br />CPUCycles =&nbsp; 89335 - miniCycles=&nbsp; 9 - PPUCycles =&nbsp; 89344/ 89342<br />CPUCycles =&nbsp; 89336 - miniCycles=&nbsp; 9 - PPUCycles =&nbsp; 89345/ 89342<br />CPUCycles =&nbsp; 89337 - miniCycles=&nbsp; 9 - PPUCycles =&nbsp; 89346/ 89342<br />CPUCycles =&nbsp; 89338 - miniCycles=&nbsp; 9 - PPUCycles =&nbsp; 89347/ 89342<br />CPUCycles =&nbsp; 89339 - miniCycles=&nbsp; 9 - PPUCycles =&nbsp; 89348/ 89342<br />CPUCycles =&nbsp; 89340 - miniCycles=&nbsp; 9 - PPUCycles =&nbsp; 89349/ 89342<br />CPUCycles =&nbsp; 89341 - miniCycles=&nbsp; 9 - PPUCycles =&nbsp; 89350/ 89342<br />CPUCycles =&nbsp; &nbsp; &nbsp; 0 - miniCycles=&nbsp; 9 - PPUCycles =&nbsp; &nbsp;6820/ 89342<br />CPUCycles =&nbsp; 89341 - miniCycles=&nbsp; 9 - PPUCycles =&nbsp; 89350/ 89342<br />CPUCycles =&nbsp; &nbsp; &nbsp;59 - miniCycles=&nbsp; 9 - PPUCycles =&nbsp; &nbsp;6820/ 89342</div>
<br />
<br />Note that I'm running the PPU for CPUCycles + miniCycles. Could you tell me if you get that double suppression?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Mon Aug 21, 2006 9:37 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Sorry, I'm not making much sense of your data or explanation.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Disch</b> [ Mon Aug 21, 2006 11:05 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />To me, it looks like the timestamps are way off... like the test ROM is just syncing improperly.  I'd guess you're "wrong" method is working because it's offsetting the timestamp of the read by the same number of cycles the ROM is off in its sync (coincidence?  or maybe you made a similar mistake twice and only corrected one of them?)
<br />
<br />Here's a quick log I made... maybe it'll help.  My timestamps are a little different -- I start my frame with the idle scanline (scanline after rendering, before VBL), so VBL starts at PPU cycle 341.  Additionally -- the timestamp in this log is 1 more than you'd expect (suppresses on 341 not on 340)... as for why, don't ask  ;P
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp;-- frame $7E and earlier read $2002 every 21<br />&nbsp; &nbsp; ppu cycles -- presumably to sync --<br />frame:&nbsp; 0000007E --&nbsp; cyc:&nbsp; &nbsp; &nbsp; 226 --- VBL supress: No<br />frame:&nbsp; 0000007E --&nbsp; cyc:&nbsp; &nbsp; &nbsp; 247 --- VBL supress: No<br />frame:&nbsp; 0000007E --&nbsp; cyc:&nbsp; &nbsp; &nbsp; 268 --- VBL supress: No<br />frame:&nbsp; 0000007E --&nbsp; cyc:&nbsp; &nbsp; &nbsp; 289 --- VBL supress: No<br />frame:&nbsp; 0000007E --&nbsp; cyc:&nbsp; &nbsp; &nbsp; 310 --- VBL supress: No<br />frame:&nbsp; 0000007E --&nbsp; cyc:&nbsp; &nbsp; &nbsp; 331 --- VBL supress: No<br />frame:&nbsp; 0000007E --&nbsp; cyc:&nbsp; &nbsp; &nbsp; 352 --- VBL supress: No<br /><br />-- by this frame, it's synced and reads once per frame<br />&nbsp; &nbsp; for so many frames until it hits the time right before VBl raises --<br /><br />frame:&nbsp; 00000080 --&nbsp; cyc:&nbsp; &nbsp; &nbsp; 330 --- VBL supress: No<br />frame:&nbsp; 00000081 --&nbsp; cyc:&nbsp; &nbsp; &nbsp; 331 --- VBL supress: No<br />frame:&nbsp; 00000082 --&nbsp; cyc:&nbsp; &nbsp; &nbsp; 332 --- VBL supress: No<br />frame:&nbsp; 00000083 --&nbsp; cyc:&nbsp; &nbsp; &nbsp; 333 --- VBL supress: No<br />frame:&nbsp; 00000084 --&nbsp; cyc:&nbsp; &nbsp; &nbsp; 334 --- VBL supress: No<br />frame:&nbsp; 00000085 --&nbsp; cyc:&nbsp; &nbsp; &nbsp; 335 --- VBL supress: No<br />frame:&nbsp; 00000086 --&nbsp; cyc:&nbsp; &nbsp; &nbsp; 336 --- VBL supress: No<br />frame:&nbsp; 00000087 --&nbsp; cyc:&nbsp; &nbsp; &nbsp; 337 --- VBL supress: No<br />frame:&nbsp; 00000088 --&nbsp; cyc:&nbsp; &nbsp; &nbsp; 338 --- VBL supress: No<br />frame:&nbsp; 00000089 --&nbsp; cyc:&nbsp; &nbsp; &nbsp; 339 --- VBL supress: No<br />frame:&nbsp; 0000008A --&nbsp; cyc:&nbsp; &nbsp; &nbsp; 340 --- VBL supress: No<br />frame:&nbsp; 0000008B --&nbsp; cyc:&nbsp; &nbsp; &nbsp; 341 --- VBL supress: Yes<br />frame:&nbsp; 0000008C --&nbsp; cyc:&nbsp; &nbsp; &nbsp; 342 --- VBL supress: No<br />frame:&nbsp; 0000008E --&nbsp; cyc:&nbsp; &nbsp; &nbsp; 341 --- VBL supress: Yes<br />frame:&nbsp; 0000008E --&nbsp; cyc:&nbsp; &nbsp; &nbsp; 401 --- VBL supress: No<br /></div><br /><br />these times are the time of the $2002 read (last cycle in the LDA $2002 instruction).  I didn't see any point in logging the PPU timestamp since my emu syncs up on $2002 reads anyway, so it'd be redundant.<br /><br /><br />EDIT<br /><br />yeah, see?  after comparing our logs, it looks to me like your timestamp is always off by 3 CPU cycles.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">CPUCycles =&nbsp; 89330 - miniCycles=&nbsp; 9 - PPUCycles =&nbsp; 89339/ 89342<br /></div>
<br />
<br />This is the first 'once-per-frame' read performed.  If you notice, the read SHOULD be happening on cycle 89330, but it's happening 9 cycles later.
<br />
<br />So the ROM seems to be synced up improperly and is off by 3 cpu cycles somehow.
<br />
<br />
<br />EDIT AGAIN
<br />
<br />To be honest... I'm baffled as to how it's making it to test 8... since if it's off by 3 cycles it should be failing some of the earlier tests.
<br />
<br />Only thing I can think of is you're not syncing up your PPU to the right time on $2002 reads.  Like if you were syncing up to 'CPUCycles' and not 'CPUCycles + (minicycles * 15)' -- that would probably explain all the behavior you're getting.
<br />
<br />
<br />
<br />
<br />Last edit, I swear:
<br />
<br />Now that I think of it... that's a very distinct possibility.  Considering what you said before:
<br />
<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Of course, I call PPU-&gt;Run( CPUCycles + cycles ); before doing that check..</div>
<br />
<br />if 'cycles' is 3 or some other low value there (like if you didn't multiply it by 15 or 16 depending on NTSC/PAL mode)... you're effectively adding 0, since 3 isn't even enough to push it to the next PPU cycle (which would need at least 5)
<br />
<br />so if you ARE doing PPU-&gt;Run( CPUCycles + cycles );... you <strong>want</strong> to be doing PPU-&gt;Run( CPUCycles + (cycles * CPUCycleBase) );
<br />
<br />Hopefully that's the problem

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Muchaserres</b> [ Mon Aug 21, 2006 12:16 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Aggh.. I'm getting mad  <img src="./images/smilies/icon_cry.gif" alt=":cry:" title="Crying or Very sad" /> Let's see.. just to clear this. On 0x2002 reads, I should update the PPU to CPUCycles+miniCycles and then check if CPUCycles+miniCycles equals the length of a frame minus one cycle.. is that right?
<br />
<br />The 3 cycles difference between CPU and PPU you see in my log is my fault. You should add miniCycles to CPUCycles to get the real number, you know..

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Disch</b> [ Mon Aug 21, 2006 12:56 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Muchaserres wrote:</div><div class="quotecontent">On 0x2002 reads, I should update the PPU to CPUCycles+miniCycles</div><br /><br />yes.<br /><br />I'm just wondering if you have your bases right.<br /><br />You said before you have 1 PPU cycle equal 5 'master' cycles, and 1 CPU cycle equal 15 master cycles.  Since the minicycle reflects CPU cycles, it should have the same 15 master cycle base.<br /><br />If you're just adding 3 when you <em>mean</em> to be adding 45, you'll have problems like the stuff you're experiencing now.  Could this be what is happening?<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">The 3 cycles difference between CPU and PPU you see in my log is my fault. You should add miniCycles to CPUCycles to get the real number, you know..</div>
<br />
<br />I figured as much... but that's not the 3 cycle difference I was talking about.
<br />
<br />The read from your log I pasted in my previous post happens on cycle 89339.  It <strong>should</strong> be happening on 89330 (that's the time it's happening in my log).
<br />
<br />Whether or not your timestamp being off by 3 cycles and minicycles always being 3 cpu cycles are at all related or whether they're just a coincidence I couldn't tell you.  All I can say is somewhere, somehow, the ROM is syncing up improperly causing it to be off by 3 CPU cycles by the time it checks for the VBl supression.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Mon Aug 21, 2006 1:18 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The NESdevWiki page covers the behavior in detail: <a href="http://nesdevwiki.ath.cx/index.php/PPU_Frame_Timing" class="postlink">PPU Frame Timing</a>
<br />
<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Reading $2002 within a few PPU clocks of when VBL is set results in special-case behavior. Reading one PPU clock before reads it as clear and never sets the flag or generates NMI for that frame. Reading on the same PPU clock or one later reads it as set, clears it, and suppresses the NMI for that frame. Reading two or more PPU clocks before/after it's set behaves normally (reads flag's value, clears it, and doesn't affect NMI operation).</div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Muchaserres</b> [ Fri Aug 25, 2006 4:08 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Disch wrote:</div><div class="quotecontent">If you're just adding 3 when you mean to be adding 45, you'll have problems like the stuff you're experiencing now. Could this be what is happening?</div>
<br />
<br />I've checked this several times, I'm adding 45 cycles.
<br />
<br />Just an idea. For every frame, I do,
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">FRMCycles = ...;&nbsp; &nbsp; &nbsp; &nbsp;// Frame master cycles calculation.<br />CPU-&gt;Run&#40; FRMCycles &#41;; // Runs for FRMCycles, calling PPU-&gt;Run&#40;&#41; whenever something interesting happens.<br />PPU-&gt;Run&#40; CPUCycles &#41;; // Runs for the remaining cycles.<br />NMIStuff&#40;&#41;;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // You know..</div>
<br />
<br />But as CPUCycles may sometimes be a little greater than FRMCycles, NMIStuff() accuracy can be compromissed. Should this be my problem? How do you handle this?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Disch</b> [ Fri Aug 25, 2006 6:42 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Muchaserres wrote:</div><div class="quotecontent"><div class="codetitle"><b>Code:</b></div><div class="codecontent">FRMCycles = ...;&nbsp; &nbsp; &nbsp; &nbsp;// Frame master cycles calculation.<br />CPU-&gt;Run&#40; FRMCycles &#41;; // Runs for FRMCycles, calling PPU-&gt;Run&#40;&#41; whenever something interesting happens.<br />PPU-&gt;Run&#40; CPUCycles &#41;; // Runs for the remaining cycles.<br />NMIStuff&#40;&#41;;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // You know..</div></div><br /><br />If 'NMIStuff();' includes setting the VBlank flag... then yes, this is a problem, and quite possibly <em>the</em> problem.  If the VBlank flag is being raised by PPU-&gt;Run then you should be fine.<br /><br />As for why that would be a problem... consider the following:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent"><br />; Imagine LDA $2002 is executed 1 CPU cycle before the VBl flag raises:<br /><br /><br />cycle 0 -- fetch opcode &#40;vbl next cycle&#41;<br />cycle 1 -- fetch low adr &#40;vbl set!&#41;<br />cycle 2 -- fetch high adr &#40;vbl still set&#41;<br />cycle 3 -- read $2002 &#40;bit 7 should be set&#41;<br /></div>
<br />
<br />If the vblank flag is being set only BETWEEN cpu instructions, the timing of it gets rounded off.  This very well could be why your emu is desyncing (assuming this is the problem).
<br />
<br />
<br />My Frame function started out on a similar process but has since become a bit more complex (had to as I added other stuff, like sprite overflow prediction, mapper notification on end of vblank, and other crap).  Pretty much, the premise is exactly the same, but I treat NMIs more or less the same as IRQs... in that I just keep a timestamp of the 'nextNMI', and when the CPU timestamp reaches that time, I trigger an NMI.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Muchaserres</b> [ Tue Sep 12, 2006 6:34 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />OK! So, I finally got it working properly. Now my emu passes all errors from test roms #1 to #5, with no hacks, nor any other strange mechanisms. At last, I get precise timing stamps on my logs. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /> First of all, I'd like to thank you all for being so patient with my posts. Thanks dudes!
<br />
<br />Now, for the remaining tests. In "6.nmi_disable" I get error #3. The problem here is that I really dunno what this rom is testing at all. I mean, I'm doing exactly what the wiki says about "VBL Flag Timing". What does "NMI should occur when disabled 3 PPU clocks after VBL" exactly mean? Is the wiki right on this?
<br />
<br />In "7.nmi_timing" I get error #7 ("NMI occurred 1 PPU clock too late"), but well.. I suppose I'd better work on test rom #6 before dealing with this one. Anyway, does anybody know the exact time delay (in cycles) between NMI triggering and NMI execution? I mean, how do you determine the exact time for "nextNMI"?
<br />
<br />And last, does anybody know the exact behaviour of "s0.nes" on the real thing? Maybe a photo or something.. I'm just curious.
<br />
<br />Thanks!

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Tue Sep 12, 2006 7:34 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">In "6.nmi_disable" I get error #3. The problem here is that I really dunno what this rom is testing at all.</div><br />My fault. It's testing what happens when NMI is disabled (via $2000) within a few PPU clocks of when it would normally occur. In light of recent testing, the error descriptions are off by one PPU clock, but the tests are still valid (since they pass on a NES). At some point I'll be improving the documentation of this kind of behavior.<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">In "7.nmi_timing" I get error #7 ("NMI occurred 1 PPU clock too late"), but well.. I suppose I'd better work on test rom #6 before dealing with this one.</div><br />In this case, failing 6.nmi_disable isn't a problem.<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Anyway, does anybody know the exact time delay (in cycles) between NMI triggering and NMI execution? I mean, how do you determine the exact time for "nextNMI"?</div>
<br />Based on recent testing, the earliest the NMI can occur is two CPU clocks after the VBL flag is set. So if VBL is set on the next to last clock of an instruction, the NMI will occur after the instruction finishes. If it's set earlier than that clock, the NMI will still occur after that instruction finishes. If it's set later than that clock, it will occur after the next instruction finishes.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Muchaserres</b> [ Wed Sep 13, 2006 3:13 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">blargg wrote:</div><div class="quotecontent">So if VBL is set on the next to last clock of an instruction</div>
<br />
<br />I don't get this at all.. I imagine you mean VBL being set on the last CPU clock of an instruction or earlier makes the NMI to occur at the end of that instruction, while VBL being set later makes it to occur at the end of the next instruction.
<br />
<br />Just in case, could you describe "7.nmi_timing"'s operation, please? Thx.
<br />
<br />&lt;EDIT&gt;
<br />
<br />I'm confused. So..
<br />
<br />1.- If VBL occurs before the last two CPU cycles of an instruction NMI occurs immediately after that instruction. If VBL occurs later, there's a one cycle delay. This option gives me "NMI occurred 1 PPU clock too late" (error #7). Here's how I implement that..
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">if&#40; Nes-&gt;CPUCycles &gt;= Nes-&gt;NMITime &#41;<br />&#123;<br />&nbsp; &nbsp;if&#40; Nes-&gt;Ppu-&gt;Regs&#91; 0 &#93; &amp; 0x80 &#41;<br />&nbsp; &nbsp;&#123;<br />&nbsp; &nbsp;&nbsp; &nbsp;NMI&#40; 2 &#41;; // NMI now!<br />&nbsp; &nbsp;&nbsp; &nbsp;if&#40; &#40; Nes-&gt;CPUCycles - Nes-&gt;NMITime &#41; &lt;= 30 &#41; NMI&#40; 1 &#41;; // Wait for 1 instruction &#40;30 comes from 2 cycles * 15 base&#41;.<br />&nbsp; &nbsp;&#125;<br />&nbsp; &nbsp;Nes-&gt;NMITime = 0x7FFFFFFF;<br />&#125;</div><br /><br />2.- If we reduce the margin to one CPU cycle, I get "NMI occurred 1 PPU clock too early" (error #4). We would only change the 30 by a 15 (1 CPU cycle).<br /><br />3.- But, according to what dvdmth said in another post, "fast NMI" occurs always except when VBL occurs during the last cycle of an instruction. So the condition would look like this, giving me "NMI occurred 3 or more PPU clocks too early" (error #2),<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">if&#40; &#40; Nes-&gt;CPUCycles - Nes-&gt;NMITime &#41; == 15 &#41; NMI&#40; 1 &#41;;</div>
<br />
<br />Sorry if I'm being a pain, but I'd like to get this clear.
<br />
<br />&lt;/EDIT&gt;

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Muchaserres</b> [ Sat Sep 16, 2006 2:52 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Uhm.. it works fine if I set the margin to 20 (so, 4 PPU cycles). It would somehow make sense it the latency were 1 CPU cycle (setting the margin to 15). The remaining PPU cycle could be some bug in my even/odd frame scheme. Anyone familiar with this issue?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Muchaserres</b> [ Sun Sep 17, 2006 3:14 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />After reading "Which clock is IRQ/NMI checked on?" at "NES Hardware / CopyNES", I think I finally understand how this stuff works. Look..
<br />
<br /><div class="quotetitle">blargg wrote:</div><div class="quotecontent">Apparently /NMI and /IRQ are checked approximately two cycles before the next opcode fetch, and if they are set, that next opcode fetch will be the first cycle of an interrupt vectoring sequence.</div><br /><br />OK, so if NMITime holds the time at which /NMI is set and CPUCycles the number of cycles the CPU has executed so far, then we do something like this,<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">if&#40; CPUCycles &gt;= NMITitme &#41;<br />&nbsp; &nbsp;if&#40; &#40; CPUCycles - NMITitme &#41; &lt; TwoCPUCycles &#41; SlowNMI&#40;&#41;; else FastNMI&#40;&#41;;</div><br /><br />But then this comes,<br /><br /><div class="quotetitle">blargg wrote:</div><div class="quotecontent">Since the memory read latches data near the end of a cycle, my conclusion is that /NMI and /IRQ are checked near the middle of second from the last cycle of an instruction. For LDA absolute, this means the third cycle (1: opcode fetch, 2: low byte of address, 3: high byte of address, 4: read, 5: set flags). For NOP, this means the first cycle (1: opcode fetch, 2: dummy fetch, 3: nothing).</div><br /><br />So LDA absolute takes 4 "visible" cycles, while NOP takes 2 of those. This time we do something like this,<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">if&#40; CPUCycles &gt;= NMITitme &#41;<br />&nbsp; &nbsp;if&#40; &#40; CPUCycles - NMITitme &#41; &lt; OneCPUCycles &#41; SlowNMI&#40;&#41;; else FastNMI&#40;&#41;;</div>
<br />
<br />Now, here it comes the reason why I think my code passes the test. Taking NOP as an example, the check happens in the middle of the first cycle (opcode fetch). In my emu, 1 CPU cycle equals 15 master cycles, while 1 PPU cycle equals 5 of them. In the code above, I use 20 master cycles as the limit, so 20/15=1.33 ~ 1.17 CPU cycles. As it is "impossible" to get the exact time I must use "&lt;=" instead of "&lt;". And that's it!
<br />
<br />Is this reasoning correct?
<br />
<br />Thx.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Sun Sep 17, 2006 6:35 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />At beginning of execution of an instruction in emulator:
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">if &#40; cpu_time &gt;= nmi_asserted_time + 2 &#41;<br />&nbsp; &nbsp; clear nmi<br />&nbsp; &nbsp; begin interrupt vectoring<br />else<br />&nbsp; &nbsp; execute current instruction</div><br />Or, in the catch up model,<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">earliest_interrupt_time = nmi_asserted_time + 2</div>
<br />
<br />I'm not following your descriptions in your posts because I don't know what you're talking about. I don't know how your emulator works or where exactly the code examples you're posting are being executed.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Muchaserres</b> [ Wed Sep 20, 2006 4:04 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />OK, let's see. In terms of PPU cycles, the earliest a NMI can occur is the time a NMI is asserted plus 6 PPU cycles (2 CPU cycles). What I'm saying is that the only way my emu passes the test is by adding 5 PPU cycles (1.67 CPU cycles).
<br />
<br />I'm doing what you say, using a catch up model, on my CPU core run() function, just before the execution of every opcode.
<br />
<br />By comparing both NMI logs I can see that the first difference occurs the second frame, and then every 11 frames or so. What bugs me the most is that I pass every other PPU test, and all versions of your CPU timing test, so I don't really know how to tackle the problem.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>2</strong> of <strong>3</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>