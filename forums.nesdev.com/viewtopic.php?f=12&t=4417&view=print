<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Cracking unlicensed SNES games/HKOs</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Cracking unlicensed SNES games/HKOs</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=12&amp;t=4417">http://forums.nesdev.com/viewtopic.php?f=12&amp;t=4417</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>d4s</b> [ Mon Sep 29, 2008 5:35 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Cracking unlicensed SNES games/HKOs</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Although most are virtually unknown, there are a couple of relatively recent unlicensed rip-off games out there for the SNES based on titles that originally appeared on more powerful consoles.
<br />What all of these games have in common is the unbelievable degree of crappiness and the fact that they feature hardware copy protection.
<br />
<br />When I was bored and didn't have something else to do in the past, I sometimes cracked one of these, just for fun.
<br />I haven't really mentioned it before and nobody seemed to care, either, but lately, a couple of people have expressed interest in these games.
<br />Also, I`ve been browsing south american auction sites since a couple of years in search for these games and still, some completely unknown to me recently appeared, which really surprised me.
<br />
<br />Here's a list of the ones I currently know of:
<br />-Tekken 2
<br />-Picachu/Pocket Monsters
<br />-Pokemon Stadium
<br />-Soul Blade
<br />-X-Men vs Street Fighter
<br />
<br />
<br />Now I've already cracked all of these(videos available on my 
<br /><a href="http://de.youtube.com/user/Dforce3000" class="postlink">youtube channel</a>) and am looking for some new challenges.
<br />
<br />One of the games says it's by DVS, whatever that means. Is that a known producer of unlicensed games?
<br />
<br /><a href="http://de.youtube.com/watch?v=O5dc4YuzSlo" class="postlink">This one</a> seems to be undumped and totally unknown so far. I've contacted the guy about buying it from him, will see how that works out.
<br />
<br />Does anyone know if any other SNES HKOs exist?
<br />
<br />(hope this makes sense, I'm pretty tired ~_= )

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>byuu</b> [ Mon Sep 29, 2008 6:27 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">What all of these games have in common is the unbelievable degree of crappiness and the fact that they feature hardware copy protection.</div>
<br />
<br />Ah, what a neat coincidence. About six months ago, Nach sent me Pokemon Stadium and X-Men vs Street Fighter. I worked on Pokemon Stadium for a few minutes at work and got this:
<br />
<br /><img src="http://i73.photobucket.com/albums/i221/byuusan/piratethis.png" alt="Image" />
<br />
<br />Just some simple read from ROM, expect different results crap. But what got me was after selecting a new game, it did an indirect jump off ROM again, but the value there was garbage and it crashed. I wrote a scanner to find every "rts, rtl, rti" and plugged in the addresses immediately after, and I managed to trigger a bunch of different screens in the game; but I never found the right value to give it.
<br />
<br />I figured I'd either need to test all 32,768 possibilities, or get an actual cart and read it to see what the proper value was, so I just gave up. Never bothered with XMVSF.
<br />
<br />I'd be really curious to see how you beat the protections, though. Did you have the actual carts to probe?
<br />
<br />Really neat stuff, at any rate! I know Haze emulated a lot of these for the Genesis. I just didn't see much point, so I never bothered. I figure it's better to just make UPS patches to correct the games than emulate a bunch of stupid mapper tricks for various pirate carts.
<br />
<br />I hope you'll post some patches sometime for these :D

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>MottZilla</b> [ Mon Sep 29, 2008 9:24 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />You weren't kidding about how craptastic those "games" play. It's pretty horrifying stuff. Neat that you cracked it though. Sad that they thought that pile of crap was worth protecting. Reminds me of Final Fight 3 for NES, it has a bucnh of things to try to prevent you from hacking it to another mapper.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>d4s</b> [ Tue Sep 30, 2008 3:33 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">byuu wrote:</div><div class="quotecontent"><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">What all of these games have in common is the unbelievable degree of crappiness and the fact that they feature hardware copy protection.</div><br /><br />Ah, what a neat coincidence. About six months ago, Nach sent me Pokemon Stadium and X-Men vs Street Fighter. I worked on Pokemon Stadium for a few minutes at work and got this:<br /><br /><img src="http://i73.photobucket.com/albums/i221/byuusan/piratethis.png" alt="Image" /><br /><br />Just some simple read from ROM, expect different results crap. But what got me was after selecting a new game, it did an indirect jump off ROM again, but the value there was garbage and it crashed. I wrote a scanner to find every "rts, rtl, rti" and plugged in the addresses immediately after, and I managed to trigger a bunch of different screens in the game; but I never found the right value to give it.<br /><br />I figured I'd either need to test all 32,768 possibilities, or get an actual cart and read it to see what the proper value was, so I just gave up. Never bothered with XMVSF.<br /><br />I'd be really curious to see how you beat the protections, though. Did you have the actual carts to probe?<br /></div>
<br />
<br />You really should have had a look at xmvssf. It has the same protection as pokemon stadium, but the correct return values can be guessed and from that the correct jumps for pokemon stadium can be deduced.
<br />
<br />The other carts all have different protections.
<br />I only own Tekken 2 and Soul Blade. All of them could be reverse-engineered without the cart except for Tekken 2. You gotta have the cart for that one. It's pure protection evilness.
<br />
<br />The xmvssf/ps protection itself is very simple. I don't know the actual range where it can be accessed, cause the games only seem to use $88:8000 and $80:0000, but I guess that the protection on the real cart can be accessed either from bank $80 to $ff or from $80 to $bf.
<br />
<br />Anyway, after guessing some correct values for xmvssf, I immediately noticed that the number of set bits for input and output are always the same. Obviously, there was some kind of hardware latch present that swapped the bits in a certain pattern.
<br />
<br />To make a long story short, here's the bitswap pattern:
<br />76543210 becomes  06712345
<br />
<br />That'd mean that for example writing $f4 to $88:8000 returns $6b on $80:8000.
<br />Pretty simple and also very cheap to implement in hardware.
<br />
<br />Picachu might have the same protection, I'm not sure. It's been too long since I cracked that and it seems I didn't take any notes, unfortunately.
<br />
<br />Soul Blade has another protection and was very obvious about what values it expected, so I didn't bother finding out how it worked, just gave it the values it was looking for and be done with it. Will have another look later.
<br />
<br />Tekken 2 is a bit more complicated. It accesses the protection in a very strange way, always reading/writing the same data $f0 times.
<br />I had a look at the cart and indeed, each access must be repeated a couple of times to be registered.(typically around 7-30 times)
<br />At first, I was puzzled by this, because I was expecting a simple bitswap pattern.
<br />My conclusion was that they used a microcontroller here. 
<br />It's pretty obvious that the mc sometimes misses the accesses from the s-cpu, so they have to be repeated often enough to make sure they always come through.
<br />Also, the output pattern is too complicated to pull off with a couple of logic chips.
<br />
<br />The protection itself is accessed in banks $80-$bf.
<br />accessing (read/write, doesn't matter) adress lines A8,A9,A10 in these banks in a certain sequence makes the mc return a 4bit value.
<br />$8080xx clears the sequence
<br />$8081xx reads the result.
<br />
<br />As an example, the access sequence $80:8000,$80:8300,$80:8400,$80:8700 first clears the previous result, then returns $c on data lines 0-3 when reading $80:8100.
<br />
<br />I was thinking that it maybe was just xoring/adding/whatever the access results, but I couldn't spot any pattern that makes sense. Also, accessing the same region multiple times in a sequence doesn't change the result.
<br />
<br />The way they implemented that into the s-cpu program was very evil. Apart from the usual jumps and data loads depending on the returned result from the protection(which can be guessed with ease because it just returns 4 bits), it was also using that returned data to calculate the next protection sequence adresses. I just popped the cart in and entered the sequences manually, then gave it the return values it was looking for.
<br />
<br />Overall, I agree that patches are the way to go here. Emulating protections only one or two crappy games use isn't worth the effort.
<br />Also, you'd probably have trouble detecting those roms in a generic way.
<br />
<br />Phew, that was quite a rant...
<br />
<br />
<br />[edit]
<br />Pocket Monsters indeed uses the exact same protection as X-Men vs Street Fighter and Pokemon Stadium.
<br />
<br />The Soul Blade protection is the weakest I've ever seen.
<br />Adresses $xxx0-$xxx3 in banks $80-$bf always read $55, $0f, $aa, $f0
<br />Banks $c0-$ff return open bus.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>byuu</b> [ Tue Sep 30, 2008 8:32 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Wow, really neat info! Thanks a bunch for sharing!
<br />
<br />Yeah, I only guessed the first read-back byte. Not enough to deduce a pattern from. Too bad I didn't mess with X-Men.
<br />
<br />Still, very clever on your part to figure it all out :D
<br />
<br />Tekken 2 sounds the coolest. Writing 240x to get it to register ... that's fantastic.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>KungFuFurby</b> [ Wed Oct 01, 2008 3:02 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I play these games to look for the ending, then post 'em. I also let SpaceNinja88 know this. They're usually very short endings.  <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" />
<br />
<br />I beat Pokémon (which is listed as Pocket Monsters on the Title Screen) and Soul Blade. Both endings are real short, and SpaceNinja88 has posted the ending to Pocket Monsters as well. I granted him permission, because I was getting to be a willing contribuitor... that, and I knew that I could invent cheat codes in the blink of an eye. Soul Blade tricked me a little on the health part, but I eventually found a loophole: The value increased the more damage you took until 95 (in decimal), when the character falls to the ground. Normally it's the other way around, but I see the laziness here.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>d4s</b> [ Wed Oct 01, 2008 4:35 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I was surprised myself when I noticed Pocket Monsters has an actual ending.
<br />
<br />I mean, this game isn't like, total crap.
<br />If the controls weren't so rubbish and the scrolling a bit less choppy, it would make for a mediocre to decent run-off-the-mill SNES platformer.
<br />Or solid gold by HKO standards, so to speak. <img src="./images/smilies/icon_wink.gif" alt=";)" title="Wink" />
<br />
<br />All the fighting games basically work the same with slight variations.
<br />I think I've beaten all of them without cheats, just plain mindless button-mashing.
<br />
<br />
<br />The Tekken 2 protection really is the most interesting and I bet it was the most expensive cart to manufacture for them.
<br />Still, this one gave me the most trouble.
<br />It was the first game that sparked my interest for cracking, but the last I managed to actually crack.
<br />
<br />I'd love to talk to the guys who were in charge of developing these games. I bet they'd be proud that their protections lasted for over 10 years without being cracked, although the reason for that is most likely the lack of interest these titles generate, not the toughness of the protections. <img src="./images/smilies/icon_wink.gif" alt=";)" title="Wink" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>byuu</b> [ Wed Oct 01, 2008 8:21 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">All the fighting games basically work the same with slight variations. <br />I think I've beaten all of them without cheats, just plain mindless button-mashing.</div><br /><br />I think SFA2 is the worst in that regard. It may have beautiful graphics, but <em>damn</em>. I absolutely suck at fighters / action games (I can usually only beat one or two characters in SNK games), and I cleared the game on my first try. So I go back, set difficulty to high, turbo on, handicap stuff off ... beat it without losing a single fight.<br /><br />I can't even imagine what actual skilled players think of the machine-mode challenge.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I bet they'd be proud that their protections lasted for over 10 years without being cracked, although the reason for that is most likely the lack of interest these titles generate, not the toughness of the protections.</div>
<br />
<br />Hahah, yeah. It reminds me of Star Force 3's marketing. "Our protection has never been cracked, unlike SecuROM!" -- uh huh, and what games was it used on? A couple of $3 Chinese shareware apps. Of course nobody bothered. And sure enough, once they started adding it to big titles, it got broken.
<br />
<br />But yeah, even more ridiculous about these protections -- if you're a Chinese company making SNES cart copies, would you target the really crappy pirate games, or go after the big names like Mario and Zelda? Such a waste of effort to protect these games.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Wed Oct 01, 2008 10:31 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">KungFuFurby wrote:</div><div class="quotecontent">Soul Blade tricked me a little on the health part, but I eventually found a loophole: The value increased the more damage you took until 95 (in decimal), when the character falls to the ground. Normally it's the other way around, but I see the laziness here.</div>
<br />I don't see it as laziness. Other Nintendo first-party games that display an increasing value for more damage to your unit include Stunt Race FX and the Super Smash Bros. series.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>KungFuFurby</b> [ Wed Oct 01, 2008 11:54 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Yeah, I recall that... sometimes it's in numerals you don't see, though, in actual gameplay.  <img src="./images/smilies/icon_wink.gif" alt=":wink:" title="Wink" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>nocash</b> [ Mon Nov 05, 2012 8:37 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Cracking unlicensed SNES games/HKOs</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Have had a look at the three protection schemes last week, here's what've found out (and some summary of d4s original findings).<br /><br /><div class="quotetitle">d4s wrote:</div><div class="quotecontent">... here's the bitswap pattern: 76543210 becomes 06712345</div><br />That's the most common type, used by 11 games:<br />-  A Bug's Life<br />-  Aladdin 2000<br />-  Bananas de Pijamas<br />-  Digimon Adventure<br />-  King of Fighters 2000 (aka KOF2000)<br />-  Pocket Monster (aka Picachu)<br />-  Pokemon Gold Silver<br />-  Pokemon Stadium<br />-  Soul Edge Vs Samurai<br />-  Street Fighter EX Plus Alpha<br />-  X-Men vs. Street Fighter<br />One small detail that is unknown here is which addresses the protection ports are mirrored to.<br /><br /><div class="quotetitle">d4s wrote:</div><div class="quotecontent">The Soul Blade protection is the weakest I've ever seen. <br />Adresses $xxx0-$xxx3 in banks $80-$bf always read $55, $0f, $aa, $f0 <br />Banks $c0-$ff return open bus.</div><br />That's apparently used only by Soul Blade. The above specs with the 4-byte pattern and open-bus stuff are looking fine. The Soul Blade game <em>seems</em> to be working even when outputting plain FFh bytes (but maybe there's some further protectection check deeper in the game, so using the 4-byte pattern should be more accurate than just using FFh bytes).<br />One odd thing that I've noticed is that the patched and unpatched Soul Blade ROM images are also differing by data that isn't protection related. For example, the unpatched version (CRC32=C97D1D7Bh, maybe a bad dump) is showing some black lines in the middle of the main menu screen; the cracked version is not having that dirt effect.<br /><br /><div class="quotetitle">d4s wrote:</div><div class="quotecontent">Tekken 2 is a bit more complicated. It accesses the protection in a very strange way, always reading/writing the same data $f0 times. <br />I had a look at the cart and indeed, each access must be repeated a couple of times to be registered.(typically around 7-30 times) <br />My conclusion was that they used a microcontroller here. <br />Also, the output pattern is too complicated to pull off with a couple of logic chips...<br />result from the protection(which can be guessed with ease because it just returns 4 bits)<br /></div><br />I don't know how complicated the pattern can get (when feeding more/other data to it than the Tekken game does), but I've rev-engineered d4s's guessed values, which don't look <em>that</em> complicated:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; Addr&nbsp; &nbsp; &lt;----function----&gt;&nbsp; &lt;--result, as guessed by d4s--&gt;<br />&nbsp; 00:826B CLR +4&nbsp; &nbsp;+reg7&nbsp; &nbsp; &nbsp; = 8<br />&nbsp; 00:B584 CLR +...?...&nbsp; &nbsp; &nbsp; &nbsp; = unknown<br />&nbsp; 00:B7A9 CLR&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;= 1<br />&nbsp; 00:B7D6 CLR +1&nbsp; &nbsp;+reg6+reg7 = 0<br />&nbsp; 00:D20E CLR +8+4 +reg6+reg7 = 6<br />&nbsp; 00:D64B CLR&nbsp; &nbsp; &nbsp; +reg6&nbsp; &nbsp; &nbsp; = F<br />&nbsp; 00:D669 CLR +2+4&nbsp; &nbsp; &nbsp; +reg7 = C<br />&nbsp; 00:D68A CLR +1..6 ?&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;= 2..7<br />&nbsp; 00:D68A CLR +6&nbsp; &nbsp; ?&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;= 7<br /></div><br />Addr=Program code ROM Address, CLR=Port 808xxxh, 1/2/4/8=Port 8082xxxh/8083xxxh/8084xxxh/8085xxxh, reg6/reg7=Port 8086xxxh/8087xxxh. Guessed result=Port 8081xxxh.read.<br /><br />As it's possible to repeat the writes without changing the result, it seems most likely that the writes are just setting/clearing bits (rather than doing more complex math which would change the result after each write). Following that theory, the guessed values could be reproduced like so:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &#91;80-BF:80xx&#93;=0Fh,00h Clear all 6 bits<br />&nbsp; &#91;80-BF:81xx&#93;=xxh&nbsp; &nbsp; &nbsp;Probably &quot;No Change&quot; (unused, except for Reading)<br />&nbsp; &#91;80-BF:82xx&#93;=FFh,00h Set Data bit0<br />&nbsp; &#91;80-BF:83xx&#93;=FFh,00h Set Data bit1<br />&nbsp; &#91;80-BF:84xx&#93;=FFh,00h Set Data bit2<br />&nbsp; &#91;80-BF:85xx&#93;=FFh,00h Set Data bit3<br />&nbsp; &#91;80-BF:86xx&#93;=FFh,00h Set ALU Direction bit (0=Up/Left, 1=Down/Right)<br />&nbsp; &#91;80-BF:87xx&#93;=FFh,00h Set ALU Function bit&nbsp; (0=Count, 1=Shift)<br />&nbsp; X=&#91;80-BF:81xx&#93;&nbsp; &nbsp; &nbsp; &nbsp;Return &quot;4bitData plus/minus/shl/shr 1&quot;<br /></div><br />If the theory is right, then one could program exactly 64 combinations into the 6bit register, and the result could be calculated as shown above. If somebody wants to verify it on real hardware: Go ahead! Would be nice to know if it's really as so.<br /><br />Above is assuming that the write order would be don't care; ie. writing 82xxh and then 83xxh would be same as vice-versa. A slightly more complex theory would be that, for example, 82xxh might set DataBit0=1 and DataBit3=0, or doing something like DataBit0=Not(DataBit2), in such cases the write order would be relevant.<br /><br />The written 2x8bit pairs (0Fh,00h for first port) and (FFh,00h for other ports) (as how they are written by tekken2) are probably don't care (as d4s said that the ports do even react on reading).

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>