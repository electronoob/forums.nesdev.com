<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Life Bar made of sprites demo</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Life Bar made of sprites demo</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=22&amp;t=9553">http://forums.nesdev.com/viewtopic.php?f=22&amp;t=9553</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>2</strong> of <strong>3</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Shiru</b> [ Mon Dec 03, 2012 8:23 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Life Bar made of sprites demo</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Porting from Python or ActionScript is essentially writing a whole new program from scratch, in a very different language for a very different platform. It is very different from prototyping in C on the NES right away. Not to mention that you won't have to 'port' everything if you want, you may leave pieces of code in C for release version.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Mon Dec 03, 2012 10:10 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Life Bar made of sprites demo</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />You can also use Lua support in NintendulatorDX to embed prototype code directly into your NES ROM (if you use CA65). I haven't used it personally just yet, but I remember wishing something like that had existed when I was working on STREEMERZ. Of course you have to know what you're doing to do that, since all Lua code executes in 0 cycles from emulators point of view. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Sik</b> [ Mon Dec 03, 2012 11:02 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Life Bar made of sprites demo</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Shiru wrote:</div><div class="quotecontent">Porting from Python or ActionScript is essentially writing a whole new program from scratch, in a very different language for a very different platform. It is very different from prototyping in C on the NES right away. Not to mention that you won't have to 'port' everything if you want, you may leave pieces of code in C for release version.</div><br />I think the idea is to be able to test possible algorithms before settling on what to do for the real code.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Mon Dec 03, 2012 12:16 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Life Bar made of sprites demo</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">Apparently, it takes up to 40% of the CPU time just to display the status bar. Of course in an actual game this would never be acceptable, and yes, honesty I don't know how Shiru did to make fully playable games with CC65. Congratulations to him.<br />However once you've coded something in C you don't ever want to return to assembly ! So I don't know what to do now haha.</div><br /><br />It's easier to keep on top of performance issues is you are testing and checking it all the time. While working on my <a href="http://forums.nesdev.com/viewtopic.php?f=22&amp;t=9521" class="postlink">last project</a> I toggled the PPU's greyscale bit when the code was finished executing so I could visually profile it. It's really easy to accidentally write something in CC65 that has horrible performance, so if you're watching all the time you will know which code it was when it happens. The most dramatic case for me was unrolling a single loop turning something that took 70% of the frame into about 5%. If you pay attention to what the compiler is doing, often times you can sufficiently optimize the C code without having to do rewrite the routine in assembly.<br /><br />It saved me so much time to work in C. For me, the productivity bump vs assembly is massive, and it's really easy to write little parts in assembly as needed anyway.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Mon Dec 03, 2012 2:33 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Life Bar made of sprites demo</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Pehaps it's me but I think there is something seriously wrong with CC65's multiply and divide function. This is the only explication I can find for the 5/520 bug Heavy reported.<br /><br />Doing it 3/512 makes things even worse.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Shiru</b> [ Mon Dec 03, 2012 3:23 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Life Bar made of sprites demo</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Which line it is, with the division that you think does not work properly?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Tue Dec 04, 2012 12:56 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Life Bar made of sprites demo</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Line 78 :<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp; &nbsp; &nbsp; int npixels = (life_current * 8 * LIFEBAR_SIZE) / life_max;<br /></div><br /><br />The bugs are clearly caused by an incorrect value of npixels, but a correct behaviour of the code that follows this line.<br /><br />I tried various types such as int, unsigned int, char and unsigned char, all of them apparently results in some kind of bugs.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Shiru</b> [ Tue Dec 04, 2012 2:05 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Life Bar made of sprites demo</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Well, there is int (16 bit signed), and 512*8*8=32768. So life_current &gt;512 certainly will not work properly.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Tue Dec 04, 2012 2:15 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Life Bar made of sprites demo</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Holy shit, overflow from 16-bit already ??<br />Oh well thanks for pointing this out Shiru. Unsigned int should work though. I shall fix this and update a fixed version.<br /><br />EDIT :<br />I can't seem to fix this issue properly. It will work if I cast into long (32 bit) but this is a chep-suck-ass solution, considering the number never overflows from unsigned 16-bit. (&lt;65535)<br /><br />However whenever I type :<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">unsigned char npixels = (unsigned)(life_current * 8 * LIFEBAR_SIZE) / life_max;</div><br />Or even :<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">unsigned char npixels = ((unsigned)(life_current * 8 * LIFEBAR_SIZE)) / life_max;</div><br />Compiles the same as without any cast.<br /><br />In other words, CC65's division routine can't put the MSB of an unsigned type to good use.<br /><br />Now I don't know if this is some part of C standard or what, considering normally the only difference between signed and unsigned was supposedly when comparisons were made, but now that I thought about it when doing divisions it has a whole different meaning too.<br /><br />PS : Now that I think the bugs occured not for life_current &gt; 512 but for life_max &gt; 512.<br />Oh well what a headache. It's almost as bad as if I had to code it in assembly  <img src="./images/smilies/icon_sad.gif" alt=":(" title="Sad" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Tue Dec 04, 2012 2:48 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Life Bar made of sprites demo</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />What happens if you replace a lot of these literal 8 values with SCANLINES_PER_SPRITE, and then mark the constants as unsigned?<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">#define SCANLINES_PER_SPRITE 8U<br />#define LIFEBAR_SIZE 8U</div><br />If you're using the top half of int's range, you probably want to keep everything explicitly unsigned as opposed to relying on C type conversion rules that a lot of us haven't memorized.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Shiru</b> [ Tue Dec 04, 2012 3:02 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Life Bar made of sprites demo</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I would't use just 'unsigned', who knows what a particular compiler uses there.<br /><br />I also doubt that there is problems in math code in CC65, as they would surface way earlier, considering number of much larger projects done with it. In the past there were many cases when I started to think that I ran into a compiler bug (not CC65) only to realize later that it was my logic mistake.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Tue Dec 04, 2012 3:39 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Life Bar made of sprites demo</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">Now I don't know if this is some part of C standard or what, considering normally the only difference between signed and unsigned was supposedly when comparisons were made, but now that I thought about it when doing divisions it has a whole different meaning too.</div><br /><br />Signed vs unsigned makes a big difference whenever you use multi-byte types. Even on processors with multi-byte types there are separate instructions for signed/unsigned multiplication and division.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Sik</b> [ Wed Dec 05, 2012 2:36 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Life Bar made of sprites demo</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">Now I don't know if this is some part of C standard or what, considering normally the only difference between signed and unsigned was supposedly when comparisons were made, but now that I thought about it when doing divisions it has a whole different meaning too.</div><br />There are a lot more of differences since it doesn't specify what encoding signed values use. You can only use arithmetic operators and you must guarantee it won't underflow or overflow, otherwise the result is undefined (though most processors are two's complement so operations tend to result the same most of the time, but it isn't the case for e.g. DSPs).<br /><br />Also: are you sure int isn't 16-bit? We're talking about an 8-bit processor, after all =P

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Wed Dec 05, 2012 4:24 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Life Bar made of sprites demo</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Int is 16-bit, therefore unsigned int should allow numbers up to 65535, and no bug should ever occur (999 * 8 * 8 = 63936 &lt; 65535).<br />I'll try to use Us after the constant like tepples said when I'll get home.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I would't use just 'unsigned', who knows what a particular compiler uses there.</div><br />It's part of C standard, int is implicit.<br />You can use 'auto', 'static', 'signed', 'unsigned', 'short' and 'long' alone which all are shortcuts for 'auto int', 'static int', ....

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Wed Dec 05, 2012 6:16 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Life Bar made of sprites demo</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I seem to remember that newer C standards allow the implicit int only when the word before it is a type specifier (signed, unsigned, short, long), not a storage (static, auto, register, volatile).

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>2</strong> of <strong>3</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>