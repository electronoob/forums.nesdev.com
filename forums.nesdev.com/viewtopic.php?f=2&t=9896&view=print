<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - ld65 madness</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">ld65 madness</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=9896">http://forums.nesdev.com/viewtopic.php?f=2&amp;t=9896</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>koitsu</b> [ Thu Mar 07, 2013 5:47 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>ld65 madness</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />So it's as I expected -- I have spent more time fucking around with ld65 and trying to &quot;make it happy&quot; than I have actually written code.  I have no real issue with the assembler (ca65), just that this bloody &quot;linker configuration&quot; nonsense is a complete and total nightmare.  I've ranted about this before in some other post some time ago -- it provides very little benefit given the nature of the platform being developed on.<br /><br />To make this simple: does anyone have a ld65 configuration template for MMC3 with multiple PRG banks in use?<br /><br />I'd also like someone to explain to me what the <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">size</tt> directive in the <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">MEMORY</tt> section of the config <strong>actually <span style="text-decoration: underline">does</span></strong>.  <a href="http://www.cc65.org/doc/ld65-5.html" class="postlink">The documentation</a> does not actually say; instead its &quot;implied&quot; or &quot;eluded to&quot; somehow, yet when it comes to making an actual .NES file with multiple PRG banks, it matters immensely.  It seems to control the &quot;size&quot; of the related <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">.scope</tt>, i.e. how much room on-disk (in <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">file</tt>) something takes up.<br /><br />Why such is called <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">MEMORY</tt> I don't know -- oh, wait, yes I do, because <strong>the entire linker semantics and design is intended for <span style="text-decoration: underline">C, not assembly</span></strong>.<br /><br />I'm tempted to make <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">MEMORY</tt> into something that correlates 1:1 a segment and a file, then use <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">FILES</tt> to set all the output types to <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">bin</tt>, then just use <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">copy /b header.bin+prg0.bin+prg1.bin+... &gt; test.nes</tt> to make the damn ROM image.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Thu Mar 07, 2013 6:50 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: ld65 madness</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />You might want to start with an MMC1 project using <a href="http://forums.nesdev.com/viewtopic.php?f=22&amp;t=7991" class="postlink">my SGROM/SNROM template</a>, which can be modified for UNROM with only a slight change to the code (replacing the serial load with a simple load).<br /><br />I'm willing to walk you through making a working ld65 configuration file. Are you using fixed $C000/$E000 or fixed $8000/$E000? If the former, how many $8000 banks and how many $A000 banks? If the latter, how many $A000 banks and how many $C000 banks?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Quietust</b> [ Thu Mar 07, 2013 7:23 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: ld65 madness</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The &quot;size&quot; value in MEMORY lets you control exactly how much ROM space can be used by that section - for example, if you have an 8KB bank that gets mapped at $8000-$9FFF, then you'd have &quot;start = $8000, size = $2000&quot; (and probably also &quot;fill = yes&quot; to make sure it gets padded), while a 16KB bank at $C000-$FFFF would have &quot;start = $C000, size = $4000&quot; (or perhaps &quot;size = $3FFA&quot; if it's your fixed bank and you want a separate 6-byte memory block for your interrupt vectors so you don't have to explicitly insert the padding in your code); the SEGMENTS section lets you control the order in which each block gets assembled into your resulting 'object' file (which will be your entire PRG ROM).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>koitsu</b> [ Thu Mar 07, 2013 7:25 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: ld65 madness</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I did have a &quot;working&quot; ld configuration file for MMC3 (well, meaning it didn't emit any errors during link-time), but the problem was that the PRG banks/pages were 4x larger than they should have been (because I had to change <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">size=$2000</tt> to <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">size=$8000</tt> in the <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">MEMORY</tt> section), but it's become a pain in the ass for me simply because I don't understand what on earth is really going on under the hood.  I say all this with familiarity with linkers and segment models on x86/x64 platforms and OSes, but the NES is not such a platform.<br /><br />I started with <a href="http://rainwarrior.ca/music/moon8romsrc.zip" class="postlink">rainwarrior's MOON8 stuff</a>, then modified it to work with UxROM.  That worked great -- no issues.  But the PRG bank size on UxROM is 16KBytes, so the ld65 configuration template was much more obvious (everything having <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">size=$4000</tt> and <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">start=$8000</tt>).<br /><br />With MMC3, the PRG bank sizes are 8KBytes, which is inducing lots of confusion.<br /><br />I'll take a look at your SGROM/SNROM template and see what I can make from that.<br /><br />As for the hardwiring, I planned on having $C000/$E000 hardwired.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>koitsu</b> [ Thu Mar 07, 2013 7:56 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: ld65 madness</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Quietust wrote:</div><div class="quotecontent">The &quot;size&quot; value in MEMORY lets you control exactly how much ROM space can be used by that section - for example, if you have an 8KB bank that gets mapped at $8000-$9FFF, then you'd have &quot;start = $8000, size = $2000&quot; (and probably also &quot;fill = yes&quot; to make sure it gets padded), while a 16KB bank at $C000-$FFFF would have &quot;start = $C000, size = $4000&quot; (or perhaps &quot;size = $3FFA&quot; if it's your fixed bank and you want a separate 6-byte memory block for your interrupt vectors so you don't have to explicitly insert the padding in your code); the SEGMENTS section lets you control the order in which each block gets assembled into your resulting 'object' file (which will be your entire PRG ROM).</div><br />Thank you thank you thank you thank you!  This is <strong>exactly</strong> what I needed to know -- I got everything working.  :-)<br /><br />Edit: removed example code.  CHR-ROM stuff is not working how I expected, but that's my own fault/issue/misunderstanding.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Thu Mar 07, 2013 8:30 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: ld65 madness</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I find the cc65 documentation is not good at all as a tutorial, but the information I need is usually there if I look for it. If you want a good understanding of the linker config files, I suggest just giving this entire page a quick read:<br /><br /><a href="http://www.cc65.org/doc/ld65-5.html" class="postlink">http://www.cc65.org/doc/ld65-5.html</a><br /><br />Edit: Oh, you already linked to it. Well, never mind.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Thu Mar 07, 2013 8:49 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: ld65 madness</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I've found cc65's documentation very lacking. I keep yelling at it, &quot;what does this DO?&quot; and it answers back &quot;this is used for this kind of thing&quot;. I resorted to the scientific method to figure out the meanings of things. It's very frustrating to deal with things that aren't documented. We can't read the mind of the programmer, who of course knows what everything does. This is a common problem with software, where creators keep too much in their head and leave everyone else (including themselves at a later date) in the dark. I speak from my own past self who has left me in this position for lots of my stuff...

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>koitsu</b> [ Thu Mar 07, 2013 11:39 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: ld65 madness</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Thanks guys.  :-)  rainwarrior, your MOON8 stuff is really what helped me the most (when making a UxROM image), hands down.  Like I read it and struggled a bit but then it made sense.<br /><br />The stuff I'm stuck on now is vectors (REALLY!?!?!?  THIS IS A WALK IN THE DAMN PARK), but I see this same topic has come up before -- <!-- l --><a class="postlink-local" href="http://forums.nesdev.com/viewtopic.php?t=8586">viewtopic.php?t=8586</a><!-- l --> -- it looks like I'm going to have to do things the &quot;hard&quot; way and make a separate segment for them.  I really hoped to just keep them in the source code of my last (hard-wired) PRG bank, but oh well.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Fri Mar 08, 2013 5:56 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: ld65 madness</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />For vectors, make a new segment starting at $FFFA in the last bank.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Fri Mar 08, 2013 11:25 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: ld65 madness</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />FYI, there's also the <a href="http://www.cc65.org/snapshot-doc/" class="postlink">snapshot doc</a> which contains some stuff the release doc doesn't yet (and maybe some fixed links, etc). Naturally it would make sense to use that with the snapshot version of cc65, as it might (and does) mention some features that the release version doesn't include.<br /><br /><div class="quotetitle">Quietust wrote:</div><div class="quotecontent">(or perhaps &quot;size = $3FFA&quot; if it's your fixed bank and you want a separate 6-byte memory block for your interrupt vectors so you don't have to explicitly insert the padding in your code);</div><br />It's also possible to do this by using the <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">start</tt> attribute of the VECTORS segment, which is placed in the last bank (i.e. last ROM based MEMORY block, basically what tepples said).<br /><br />It's important to note that the order of segments in the file is relevant, so if a segment has a start address of $FFFA, it must come after every other segment that goes in the same bank (otherwise the bank will get padded up to $FFFA, and rest of the segments will not fit).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>koitsu</b> [ Fri Mar 08, 2013 8:12 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: ld65 madness</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />For other readers, this is what I ended up doing:<br /><br />ld65 memory config (called main.cfg) --<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">MEMORY {<br />&nbsp; &nbsp; ZP:&nbsp; &nbsp; &nbsp; &nbsp; start = $00,&nbsp; &nbsp;size = $100,&nbsp; type = rw;<br />&nbsp; &nbsp; RAM:&nbsp; &nbsp; &nbsp; &nbsp;start = $0200, size = $600,&nbsp; type = rw;<br />&nbsp; &nbsp; HDR:&nbsp; &nbsp; &nbsp; &nbsp;start = $0000, size = $10,&nbsp; &nbsp;type = ro, file = %O, fill = yes;<br />&nbsp; &nbsp; PRG0:&nbsp; &nbsp; &nbsp; start = $8000, size = $4000, type = ro, file = %O, fill = yes, fillval = $FF;<br />&nbsp; &nbsp; PRG1:&nbsp; &nbsp; &nbsp; start = $8000, size = $4000, type = ro, file = %O, fill = yes, fillval = $FF;<br />&nbsp; &nbsp; PRG2:&nbsp; &nbsp; &nbsp; start = $8000, size = $4000, type = ro, file = %O, fill = yes, fillval = $FF;<br />&nbsp; &nbsp; PRG3_C000: start = $C000, size = $2000, type = ro, file = %O, fill = yes, fillval = $FF;<br />&nbsp; &nbsp; PRG3_E000: start = $E000, size = $2000, type = ro, file = %O, fill = yes, fillval = $FF;<br />&nbsp; &nbsp; CHR0:&nbsp; &nbsp; &nbsp; start = $0000, size = $1000, type = ro, file = %O, fill = yes, fillval = $00;<br />&nbsp; &nbsp; CHR1:&nbsp; &nbsp; &nbsp; start = $0000, size = $1000, type = ro, file = %O, fill = yes, fillval = $00;<br />}<br /><br />SEGMENTS {<br />&nbsp; &nbsp;ZP:&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;load = ZP,&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;type = zp;<br />&nbsp; &nbsp;BSS:&nbsp; &nbsp; &nbsp; &nbsp; load = RAM,&nbsp; &nbsp; &nbsp; &nbsp; type = bss, align = $100, define = yes;<br />&nbsp; &nbsp;HEADER:&nbsp; &nbsp; &nbsp;load = HDR,&nbsp; &nbsp; &nbsp; &nbsp; type = ro,&nbsp; align = $10;<br /><br />&nbsp; &nbsp;PRG0_8000:&nbsp; load = PRG0,&nbsp; &nbsp; &nbsp; &nbsp;type = ro,&nbsp; start = $8000;<br />&nbsp; &nbsp;PRG0_A000:&nbsp; load = PRG0,&nbsp; &nbsp; &nbsp; &nbsp;type = ro,&nbsp; start = $A000;<br />&nbsp; &nbsp;PRG1_8000:&nbsp; load = PRG1,&nbsp; &nbsp; &nbsp; &nbsp;type = ro,&nbsp; start = $8000;<br />&nbsp; &nbsp;PRG1_A000:&nbsp; load = PRG1,&nbsp; &nbsp; &nbsp; &nbsp;type = ro,&nbsp; start = $A000;<br />&nbsp; &nbsp;PRG2_8000:&nbsp; load = PRG2,&nbsp; &nbsp; &nbsp; &nbsp;type = ro,&nbsp; start = $8000;<br />&nbsp; &nbsp;PRG2_A000:&nbsp; load = PRG2,&nbsp; &nbsp; &nbsp; &nbsp;type = ro,&nbsp; start = $A000;<br />&nbsp; &nbsp;PRG3_C000:&nbsp; load = PRG3_C000,&nbsp; type = ro,&nbsp; start = $C000;<br />&nbsp; &nbsp;PRG3_E000:&nbsp; load = PRG3_E000,&nbsp; type = ro,&nbsp; start = $E000;<br />&nbsp; &nbsp;VECTORS:&nbsp; &nbsp; load = PRG3_E000,&nbsp; type = ro,&nbsp; start = $FFFA;<br />&nbsp; &nbsp;CHR0:&nbsp; &nbsp; &nbsp; &nbsp;load = CHR0,&nbsp; &nbsp; &nbsp; &nbsp;type = ro,&nbsp; define = no;<br />&nbsp; &nbsp;CHR1:&nbsp; &nbsp; &nbsp; &nbsp;load = CHR1,&nbsp; &nbsp; &nbsp; &nbsp;type = ro,&nbsp; define = no;<br />}<br /><br />FILES {<br />&nbsp; &nbsp;%O:&nbsp; &nbsp;format = bin;<br />}</div><br /><br />main.s, which is what's assembled when calling ca65:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp; &nbsp; &nbsp; .setcpu &quot;6502&quot;<br /><br />;<br />; NES (1.0) header<br />; http://wiki.nesdev.com/w/index.php/INES<br />;<br />.segment &quot;HEADER&quot;<br />&nbsp; &nbsp; &nbsp; &nbsp; .byte &quot;NES&quot;, $1a<br />&nbsp; &nbsp; &nbsp; &nbsp; .byte $04&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; 16KB PRG-ROM banks = 4<br />&nbsp; &nbsp; &nbsp; &nbsp; .byte $01&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;;&nbsp; 8KB CHR-ROM banks = 1<br />&nbsp; &nbsp; &nbsp; &nbsp; .byte $40, $00&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ; Mapper 4 (MMC3)<br />&nbsp; &nbsp; &nbsp; &nbsp; .byte $00<br />&nbsp; &nbsp; &nbsp; &nbsp; .byte $00<br />&nbsp; &nbsp; &nbsp; &nbsp; .byte $00<br />&nbsp; &nbsp; &nbsp; &nbsp; .byte $00<br />&nbsp; &nbsp; &nbsp; &nbsp; .byte $00<br />&nbsp; &nbsp; &nbsp; &nbsp; .byte $00<br />&nbsp; &nbsp; &nbsp; &nbsp; .byte $00<br />&nbsp; &nbsp; &nbsp; &nbsp; .byte $00<br /><br /><br />;<br />; Zero page variables<br />;<br />.segment &quot;ZP&quot;<br />scroll1:&nbsp; &nbsp; &nbsp; &nbsp; .res 1<br />scroll2:&nbsp; &nbsp; &nbsp; &nbsp; .res 1<br /><br /><br />;<br />; PRG banks (8KBytes each, per MMC3)<br />;<br />.scope PRG0<br />&nbsp; &nbsp; &nbsp; &nbsp; .segment &quot;PRG0_8000&quot;<br />&nbsp; &nbsp; &nbsp; &nbsp; .segment &quot;PRG0_A000&quot;<br />.endscope<br /><br />.scope PRG1<br />&nbsp; &nbsp; &nbsp; &nbsp; .segment &quot;PRG1_8000&quot;<br />&nbsp; &nbsp; &nbsp; &nbsp; .segment &quot;PRG1_A000&quot;<br />.endscope<br /><br />.scope PRG2<br />&nbsp; &nbsp; &nbsp; &nbsp; .segment &quot;PRG2_8000&quot;<br />&nbsp; &nbsp; &nbsp; &nbsp; .segment &quot;PRG2_A000&quot;<br />.endscope<br /><br />.scope PRG3_C000<br />&nbsp; &nbsp; &nbsp; &nbsp; .segment &quot;PRG3_C000&quot;<br />&nbsp; &nbsp; &nbsp; &nbsp; .include &quot;prg3_c000.s&quot;<br />.endscope<br /><br />.scope PRG3_E000<br />&nbsp; &nbsp; &nbsp; &nbsp; .segment &quot;PRG3_E000&quot;<br />&nbsp; &nbsp; &nbsp; &nbsp; .include &quot;prg3_e000.s&quot;<br /><br />&nbsp; &nbsp; &nbsp; &nbsp; ;<br />&nbsp; &nbsp; &nbsp; &nbsp; ; Labels nmi/reset/irq are part of prg3_e000.s<br />&nbsp; &nbsp; &nbsp; &nbsp; ;<br />&nbsp; &nbsp; &nbsp; &nbsp; .segment &quot;VECTORS&quot;<br />&nbsp; &nbsp; &nbsp; &nbsp; .addr nmi<br />&nbsp; &nbsp; &nbsp; &nbsp; .addr reset<br />&nbsp; &nbsp; &nbsp; &nbsp; .addr irq<br />.endscope<br /><br />;<br />; CHR banks (1 or 2KBytes each, per MMC3)<br />;<br />.scope CHR0<br />&nbsp; &nbsp; &nbsp; &nbsp; .segment &quot;CHR0&quot;<br />&nbsp; &nbsp; &nbsp; &nbsp; .incbin &quot;font.chr&quot;<br />.endscope<br />.scope CHR1<br />&nbsp; &nbsp; &nbsp; &nbsp; .segment &quot;CHR1&quot;<br />.endscope<br /></div><br /><br />You can see a couple things here:<br /><br />1. Code for PRG0, PRG1, and PRG2 has not been written -- instead, the linker takes care of this by filling the relevant 16KByte regions in the resulting .nes file with value $FF.  When I need these PRG pages (which per MMC3 will be 8KBytes), I'll edit the ld65 memory map and change the size to $2000 and split them up much like I did with PRG3_C000 and PRG3_E000.<br /><br />2. The NMI, RESET, and IRQ/BRK vectors are declared in main.s, but the labels that are referenced are in prg3_e000.s.<br /><br />3. CHR0 references a 4096-byte file (font.chr) and CHR1 isn't used yet (like #1 above, te linker will fill this 4096-byte region in the resulting .nes file with $00 -- I haven't gotten around to drawing graphics for that CHR page yet).<br /><br />prg3_c000.s contains literally jack squat right now --<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp; &nbsp; &nbsp; .org $c000<br /><br />&nbsp; &nbsp; &nbsp; &nbsp; nop<br />&nbsp; &nbsp; &nbsp; &nbsp; nop<br />&nbsp; &nbsp; &nbsp; &nbsp; nop<br />&nbsp; &nbsp; &nbsp; &nbsp; nop<br />&nbsp; &nbsp; &nbsp; &nbsp; nop<br /></div><br /><br />prg3_e000.s -- you can see the vector labels defined here:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp; &nbsp; &nbsp; .org $e000<br /><br />reset:<br />&nbsp; &nbsp; &nbsp; &nbsp; sei<br />&nbsp; &nbsp; &nbsp; &nbsp; cld<br />&nbsp; &nbsp; &nbsp; &nbsp; ldx #$ff<br />&nbsp; &nbsp; &nbsp; &nbsp; txs<br /><br />;<br />; Infinite loop for the time being<br />;<br />:&nbsp; &nbsp; &nbsp; &nbsp;jmp :-<br /><br />nmi:<br />&nbsp; &nbsp; &nbsp; &nbsp; rti<br /><br />irq:<br />&nbsp; &nbsp; &nbsp; &nbsp; rti<br /></div><br /><br />And finally how to build it (I just call this make.bat) --<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">@echo off<br />SET CC65=D:\Console\cc65<br /><br />del *.o test.nes<br /><br />@echo on<br />%CC65%\bin\ca65 main.s<br />%CC65%\bin\ld65 -C main.cfg -m ld65_map.txt -o test.nes main.o<br />@pause<br /></div><br /><br />What ld65_map.txt contains after a successful build:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">Modules list:<br />-------------<br />main.o:<br />&nbsp; &nbsp; HEADER&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Offs = 000000&nbsp; &nbsp;Size = 000010<br />&nbsp; &nbsp; ZP&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Offs = 000000&nbsp; &nbsp;Size = 000002<br />&nbsp; &nbsp; PRG3_C000&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Offs = 000000&nbsp; &nbsp;Size = 000005<br />&nbsp; &nbsp; PRG3_E000&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Offs = 000000&nbsp; &nbsp;Size = 00009F<br />&nbsp; &nbsp; VECTORS&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Offs = 000000&nbsp; &nbsp;Size = 000006<br />&nbsp; &nbsp; CHR0&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Offs = 000000&nbsp; &nbsp;Size = 001000<br /><br /><br />Segment list:<br />-------------<br />Name&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Start&nbsp; &nbsp;End&nbsp; &nbsp; &nbsp;Size<br />--------------------------------------------<br />CHR0&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 000000&nbsp; 000FFF&nbsp; 001000<br />HEADER&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 000000&nbsp; 00000F&nbsp; 000010<br />ZP&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 000000&nbsp; 000001&nbsp; 000002<br />PRG3_C000&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;00C000&nbsp; 00C004&nbsp; 000005<br />PRG3_E000&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;00E000&nbsp; 00E09E&nbsp; 00009F<br />VECTORS&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;00FFFA&nbsp; 00FFFF&nbsp; 000006<br /><br /><br />Exports list:<br />-------------<br /><br /><br /><br />Imports list:<br />-------------</div><br /><br />Note that the reason PRG3_E000 is $9F in size is because I do have some PPU/etc. code in there which I've chose to emit from this post -- it's irrelevant to what I'm showing here.  :-)  I just wanted to provide folks with a working example for ca65/ld65.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Sat Mar 09, 2013 12:10 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: ld65 madness</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />One thing you might want to do is make the A000 segments &quot;optional&quot;. This would let you put more than 8k in the 8000 segment if the A000 segment is left undefined. (I use this for my &quot;standard&quot; NSF linker config, so I can use the DPCM segment if needed, otherwise I just let data overflow into it.)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>koitsu</b> [ Sat Mar 09, 2013 3:09 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: ld65 madness</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">rainwarrior wrote:</div><div class="quotecontent">One thing you might want to do is make the A000 segments &quot;optional&quot;. This would let you put more than 8k in the 8000 segment if the A000 segment is left undefined. (I use this for my &quot;standard&quot; NSF linker config, so I can use the DPCM segment if needed, otherwise I just let data overflow into it.)</div><br />Yep, I may end doing that, depending on what my needs are with what I'm writing.  I'll worry about that once I get there.  :-)

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>