<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=3&amp;t=4403" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2008-09-28T19:11:46-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=3&amp;t=4403</id>
<entry>
<author><name><![CDATA[MottZilla]]></name></author>
<updated>2008-09-28T19:11:46-07:00</updated>
<published>2008-09-28T19:11:46-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4403&amp;p=37803#p37803</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4403&amp;p=37803#p37803"/>
<title type="html"><![CDATA[6502 Interupts]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4403&amp;p=37803#p37803"><![CDATA[
You should listen to Disch. What he said is correct. The CPU doesn't check for interrupts until it's done executing the current opcode. You cannot interrupt an opcode.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=1726">MottZilla</a> — Sun Sep 28, 2008 7:11 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Disch]]></name></author>
<updated>2008-09-28T10:53:30-07:00</updated>
<published>2008-09-28T10:53:30-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4403&amp;p=37735#p37735</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4403&amp;p=37735#p37735"/>
<title type="html"><![CDATA[Re: 6502 Interupts]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4403&amp;p=37735#p37735"><![CDATA[
Not sure I follow what you mean.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=33">Disch</a> — Sun Sep 28, 2008 10:53 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[jargon]]></name></author>
<updated>2008-09-27T18:38:43-07:00</updated>
<published>2008-09-27T18:38:43-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4403&amp;p=37669#p37669</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4403&amp;p=37669#p37669"/>
<title type="html"><![CDATA[Re: 6502 Interupts]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4403&amp;p=37669#p37669"><![CDATA[
<div class="quotetitle">Disch wrote:</div><div class="quotecontent"><br />Looks good to me except you should set the I flag on NMIs as well as IRQs.<br /><br />Also... if you're doing this between <em>cycles</em> like you claim that might be a problem.  IRQs/NMIs can only occur between CPU instructions.  If you attempt an interrupt in the middle of an instruction you could end up borking something.<br /></div><br /><br />that is why i suggest emulating the actual flags mask.<br /><br />that way you refer to the mask between instructions, but edit the vars between cycles, and only refer to the mask to place into vars temporarily when emulating between instructions.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3449">jargon</a> — Sat Sep 27, 2008 6:38 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Disch]]></name></author>
<updated>2008-09-27T08:56:56-07:00</updated>
<published>2008-09-27T08:56:56-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4403&amp;p=37643#p37643</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4403&amp;p=37643#p37643"/>
<title type="html"><![CDATA[Re: 6502 Interupts]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4403&amp;p=37643#p37643"><![CDATA[
Looks good to me except you should set the I flag on NMIs as well as IRQs.<br /><br />Also... if you're doing this between <em>cycles</em> like you claim that might be a problem.  IRQs/NMIs can only occur between CPU instructions.  If you attempt an interrupt in the middle of an instruction you could end up borking something.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=33">Disch</a> — Sat Sep 27, 2008 8:56 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[jargon]]></name></author>
<updated>2008-09-27T00:21:10-07:00</updated>
<published>2008-09-27T00:21:10-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4403&amp;p=37632#p37632</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4403&amp;p=37632#p37632"/>
<title type="html"><![CDATA[Re: 6502 Interupts]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4403&amp;p=37632#p37632"><![CDATA[
<div class="quotetitle">FlySwat wrote:</div><div class="quotecontent"><br />Can someone advice me if I am handling interupts correctly here?<br /><br />I have an Interupt Handler class in my CPU that monitors a flag for NMI and a flag for IRQ once per CPU cycle, if either flag is set, it executes the interupt and then clears the flag:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">    public class InteruptHandler<br />    &#123;<br />        public bool IRQInterrupt = false;<br />        public bool NMIInterrupt = false;       <br /><br />        public void DoInterupts&#40;&#41;<br />        &#123;<br />            if &#40;NMIInterrupt&#41;<br />            &#123;<br />                triggerNMI&#40;&#41;;<br />                NMIInterrupt = false;<br />            &#125;<br />            else if &#40;IRQInterrupt&#41;<br />            &#123;<br />                TriggerIRQ&#40;&#41;;<br />                IRQInterrupt = false;<br />            &#125;<br />        &#125;<br /><br />        public void TriggerIRQ&#40;&#41;<br />        &#123;<br />            // If I is set, the software wants to mask IRQ interupts.<br />            if &#40;!CPU.Registers.P.I&#41;<br />            &#123;<br />                // Push return address onto stack.<br />                CPU.Stack.Push&#40;&#40;byte&#41;&#40;&#40;CPU.PC &gt;&gt; 8&#41; &amp; 0xff&#41;&#41;;<br />                CPU.Stack.Push&#40;&#40;byte&#41;&#40;CPU.PC &amp; 0xff&#41;&#41;;<br /><br />                // Push the status register onto the stack            <br />                CPU.Stack.Push&#40;CPU.Registers.P.Value&#41;;<br /><br />                // Set Interrupt flag<br />                CPU.Registers.P.I = true;<br /><br />                // JMP to interrupt code<br />                CPU.PC = &#40;CPU.Memory&#91;0xFFFe&#93; | &#40;CPU.Memory&#91;0xFFFF&#93; &lt;&lt; 8&#41;&#41;;<br />            &#125;<br />        &#125;<br /><br />        public void triggerNMI&#40;&#41;<br />        &#123;           <br />            // Push return address onto stack.<br />            CPU.Stack.Push&#40;&#40;byte&#41;&#40;&#40;CPU.PC &gt;&gt; 8&#41; &amp; 0xff&#41;&#41;;<br />            CPU.Stack.Push&#40;&#40;byte&#41;&#40;CPU.PC &amp; 0xff&#41;&#41;;<br /><br />            // Push the status register onto the stack            <br />            CPU.Stack.Push&#40;CPU.Registers.P.Value&#41;;<br /><br />            // JMP to interrupt code<br />            CPU.PC = &#40;CPU.Memory&#91;0xFFFA&#93; | &#40;CPU.Memory&#91;0xFFFB&#93; &lt;&lt; 8&#41;&#41;;<br />        &#125;<br />    &#125;</div><br /><br />DoInterupts() is called at the end of each CPU cycle.<br /><br />Is this the correct way to implement NMI and IRQ?<br /></div><br /><br />i think you only do this when the "I" register flag is unset.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">-primary registers-<br />=register name ; desc=<br />A ; Accumulator<br />X ; Variable X<br />Y ; Variable Y<br /><br />-flag registers-<br />=bit ; flag name ; desc=<br />7 ; N ; negative result<br />6 ; V ; result overflowed<br />5 ; - ; &#40;unused&#41;<br />4 ; B ; BRK instruction used<br />3 ; D ; decimal mode<br />2 ; I ; interrupt disabled<br />1 ; Z ; result zero<br />0 ; C ; carry occured<br /></div><br /><br />you seem to not be emulating the actual 8bit mask of the flags,<br />otherwise looks okay to me, but then again i am a newb to _nes_ emu.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3449">jargon</a> — Sat Sep 27, 2008 12:21 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[FlySwat]]></name></author>
<updated>2008-09-22T19:48:22-07:00</updated>
<published>2008-09-22T19:48:22-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4403&amp;p=37416#p37416</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4403&amp;p=37416#p37416"/>
<title type="html"><![CDATA[6502 Interupts]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4403&amp;p=37416#p37416"><![CDATA[
Can someone advice me if I am handling interupts correctly here?<br /><br />I have an Interupt Handler class in my CPU that monitors a flag for NMI and a flag for IRQ once per CPU cycle, if either flag is set, it executes the interupt and then clears the flag:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">    public class InteruptHandler<br />    &#123;<br />        public bool IRQInterrupt = false;<br />        public bool NMIInterrupt = false;       <br /><br />        public void DoInterupts&#40;&#41;<br />        &#123;<br />            if &#40;NMIInterrupt&#41;<br />            &#123;<br />                triggerNMI&#40;&#41;;<br />                NMIInterrupt = false;<br />            &#125;<br />            else if &#40;IRQInterrupt&#41;<br />            &#123;<br />                TriggerIRQ&#40;&#41;;<br />                IRQInterrupt = false;<br />            &#125;<br />        &#125;<br /><br />        public void TriggerIRQ&#40;&#41;<br />        &#123;<br />            // If I is set, the software wants to mask IRQ interupts.<br />            if &#40;!CPU.Registers.P.I&#41;<br />            &#123;<br />                // Push return address onto stack.<br />                CPU.Stack.Push&#40;&#40;byte&#41;&#40;&#40;CPU.PC &gt;&gt; 8&#41; &amp; 0xff&#41;&#41;;<br />                CPU.Stack.Push&#40;&#40;byte&#41;&#40;CPU.PC &amp; 0xff&#41;&#41;;<br /><br />                // Push the status register onto the stack            <br />                CPU.Stack.Push&#40;CPU.Registers.P.Value&#41;;<br /><br />                // Set Interrupt flag<br />                CPU.Registers.P.I = true;<br /><br />                // JMP to interrupt code<br />                CPU.PC = &#40;CPU.Memory&#91;0xFFFe&#93; | &#40;CPU.Memory&#91;0xFFFF&#93; &lt;&lt; 8&#41;&#41;;<br />            &#125;<br />        &#125;<br /><br />        public void triggerNMI&#40;&#41;<br />        &#123;           <br />            // Push return address onto stack.<br />            CPU.Stack.Push&#40;&#40;byte&#41;&#40;&#40;CPU.PC &gt;&gt; 8&#41; &amp; 0xff&#41;&#41;;<br />            CPU.Stack.Push&#40;&#40;byte&#41;&#40;CPU.PC &amp; 0xff&#41;&#41;;<br /><br />            // Push the status register onto the stack            <br />            CPU.Stack.Push&#40;CPU.Registers.P.Value&#41;;<br /><br />            // JMP to interrupt code<br />            CPU.PC = &#40;CPU.Memory&#91;0xFFFA&#93; | &#40;CPU.Memory&#91;0xFFFB&#93; &lt;&lt; 8&#41;&#41;;<br />        &#125;<br />    &#125;</div><br /><br />DoInterupts() is called at the end of each CPU cycle.<br /><br />Is this the correct way to implement NMI and IRQ?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3687">FlySwat</a> — Mon Sep 22, 2008 7:48 pm</p><hr />
]]></content>
</entry>
</feed>