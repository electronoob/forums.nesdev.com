<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=5&amp;t=6943" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2010-09-07T21:41:05-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=5&amp;t=6943</id>
<entry>
<author><name><![CDATA[Memblers]]></name></author>
<updated>2010-09-07T21:41:05-07:00</updated>
<published>2010-09-07T21:41:05-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6943&amp;p=67356#p67356</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6943&amp;p=67356#p67356"/>
<title type="html"><![CDATA[GPL games in multicarts]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6943&amp;p=67356#p67356"><![CDATA[
The way I figure it, the ROM is just a copy of memory, in the same way a PC is required to load (for example) both windows and a GPL program into memory at the same time, to run it.  The NES has no need for any loading, and the program to use the 'multicart' or whatnot, is essentially a custom operating system (even if it is really simple).  There is just no other way it can work.<br /><br />I suppose looking into how GPL applies to software on embedded (too small for linux) devices would be more appropriate than making a PC comparison, though.  About that, I have no idea.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=10">Memblers</a> — Tue Sep 07, 2010 9:41 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2010-09-07T17:58:24-07:00</updated>
<published>2010-09-07T17:58:24-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6943&amp;p=67344#p67344</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6943&amp;p=67344#p67344"/>
<title type="html"><![CDATA[GPL games in multicarts]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6943&amp;p=67344#p67344"><![CDATA[
<div class="quotetitle">clueless wrote:</div><div class="quotecontent"><br />The NES is a program (with data) meant to be executed.<br /></div><br />Under what license is the data?<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />If the end-user could not recreate the NES image by replacing the GPLd code with other code, then the NES image developer has failed to fullfill the GPL requirements.<br /></div><br />But if, say, one 16384 byte bank is devoted to the GPL code, and the end user can replace the GPL code with other code, is that any closer?<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />If the NES file is created via (paraphrasing here, I probably totally blew the syntax):<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">ca65 gpl-src.s private.s -o game.o<br />ld65 game.o -o game.nes</div><br /><br />Then the resulting "game.nes" is covered under GPL requirements.<br /></div><br />I agree. But consider this (again, with loose syntax):<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent"># mapper: SGROM &#40;MMC1, 16 KiB banks, CHR RAM&#41;<br /># bank 0: one non-free NROM-128 game's PRG<br /># bank 1: a second non-free NROM-128 game's PRG<br /># banks 2-3: a third non-free NROM-256 game's PRG<br /># bank 4: a copylefted NROM-256 game's PRG<br /># banks 5-6: CHR for the aforementioned games<br /># bank 7: a multicart launcher<br />ca65 gpl-block-game.s -o gpl-block-game.o<br />ld65 -C lj65.ini gpl-block-game.o -o lj65.prg<br />ca65 gpl-launcher.s -o gpl-launcher.o<br />ld65 -C bank7.ini gpl-launcher.o -o bank7.prg<br />cat inesheader.bin Mario_Bros.prg Ice_Climber.prg Super_Mario_Bros.prg lj65.prg Mario_Bros.chr Ice_Climber.chr Super_Mario_Bros.chr lj65.chr bank7.prg &gt; multicart.nes</div><br />Or consider this example of a music player in bank 0 and a game in the rest of the ROM:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">ca65 gpl-music-player.s -o gpl-music-player.o<br />ld65 -C bank0.ini gpl-music-player.o -o bank0.prg<br />ca65 private.s -o private.o<br />ld65 -C bank1thru7.ini private.o -o bank1thru7.prg<br />cat inesheader.bin bank0.prg bank1thru7.prg &gt; game.nes</div><br />In this case, the only entry points in gpl-src are "init" at $8000, "step" at $8003, and "fputc" at $8006. The "step" subroutine does 1/60 s worth of work, and "fputc" implements a pipe-style protocol for, say, starting a song or sound effect. Then bank0 and bank1-7 can individually replaced with something completely different as long as they implement the pipe protocol.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />I think that it boils down to if "game.nes" is considered an "EXE" (I do) or an "ISO".<br /></div><br />Is a self-extracting zip file an "EXE" or an "ISO"?<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />My thoughts are that since the "NES" contains code executed by a 6502 (real or simulated does not matter) it is a "EXE".<br /></div><br />The boot sector of an disk image also contains code executed by an x86 CPU. Likewise, only the fixed bank of an NES ROM must contain executable code.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />I just don't see how a NES image meets the definition of "aggregate" when it does not contain individual internal replaceable parts.<br /></div><br />Because a multicart does contain individual internal replaceable parts. Likewise, the communication between a music engine and the rest of the program is pipe-like. They're two programs stored together in one ROM.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />And even if it did, if the GPL code is executed on the processor in the same address space as non-gpl code<br /></div><br />The multicarts don't share address space. The music engine is forbidden to touch memory outside $00F0-$00FF, $0300-$03FF, and the local variable space ($0000-$000F, cleared on entry and exit to the GPL executable). The rest of the program is forbidden to touch that address range. I see nothing in the GPL strictly requiring virtual memory, memory protection, or preemptive multitasking, just that the address spaces are disjoint and that the communication is analogous to pipes. Otherwise, it would be illegal to make a GPL program for Mac OS 9.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Address bank-switching not withstanding<br /></div><br />What is the fundamental difference between bankswitching as it is understood on the NES and paging as it is understood on an x86 PC?<br /><br />EDIT: As I understand it, the only difference between GPL and LGPL is whether the two components are allowed to share complex data structures. In both cases, the components must be replaceable.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Tue Sep 07, 2010 5:58 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[clueless]]></name></author>
<updated>2010-09-07T15:44:58-07:00</updated>
<published>2010-09-07T15:44:58-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6943&amp;p=67335#p67335</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6943&amp;p=67335#p67335"/>
<title type="html"><![CDATA[GPL games in multicarts]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6943&amp;p=67335#p67335"><![CDATA[
I contend that a "NES" file and an "ISO" file are quire different.  The NES is a program (with data) meant to be executed.  The ISO is a mountable file system.<br /><br />The ISO is not different from files stored on your hard-drive.<br /><br />I think that the crux of the issue with NES files and the GPL is that GPLd code in a NES file is "linked" into it.  <br /><br />If the end-user could not recreate the NES image by replacing the GPLd code with other code, then the NES image developer has failed to fullfill the GPL requirements.<br /><br />If the NES file is created via (paraphrasing here, I probably totally blew the syntax):<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">ca65 gpl-src.s private.s -o game.o<br />ld65 game.o -o game.nes</div><br /><br />Then the resulting "game.nes" is covered under GPL requirements.  I could distribute "game.nes", but I must make a written offer to provide all of the sources required to recreate "game.nes".  These sources definitely include "gpl-src.s" and some mechanism for relinking game.nes from the user's modified "gpl-src.o".  This might include "private.o" or "private.s" and/or the Makefile.<br /><br />I think that it boils down to if "game.nes" is considered an "EXE" (I do) or an "ISO".  My thoughts are that since the "NES" contains code executed by a 6502 (real or simulated does not matter) it is a "EXE".  An ISO containing a GPLd exe must only release sources required to recreate the GPLd EXE and not anything non-GPL on the CD.<br /><br />This might be an interesting question to ask on a GPL forum.<br /><br />Tepples, I know that you are well versed in GPL issues other other freedom / rights issues.  <br /><br />I just don't see how a NES image meets the definition of "aggregate" when it does not contain individual internal replaceable parts.  And even if it did, if the GPL code is executed on the processor in the same address space as non-gpl code, then the entire work must be made available under the GPL.  Address bank-switching not withstanding, I think that this qualifies.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3664">clueless</a> — Tue Sep 07, 2010 3:44 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2010-09-07T15:28:05-07:00</updated>
<published>2010-09-07T15:28:05-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6943&amp;p=67334#p67334</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6943&amp;p=67334#p67334"/>
<title type="html"><![CDATA[GPL games in multicarts]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6943&amp;p=67334#p67334"><![CDATA[
<div class="quotetitle">clueless wrote:</div><div class="quotecontent"><br />I contend that a NES game (image or physical cart) that includes GPL "stuff" (any GPL source ultimately linked into the NES image) counts as "the same executable file" and not as "aggregate".<br /></div><br />Do GPL and non-free programs in an ISO count as "the same executable file" when a virtual machine can mount the ISO and boot from it?<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Consider any NES game that contains GPL and proprietary sources.  When compiled/assembled/linked (ie, 'fixed') into a physical cart or NES image they cannot be separated later.<br /></div><br />Consider any PC game that contains GPL and proprietary sections.  When compiled/assembled/linked (ie, 'fixed') into a physical disc or disc image they cannot be separated later⸮<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />It isn't like a disk image with a file-system and easily separable objects.<br /></div><br />It isn't like a <a href="http://wiki.nesdev.com/w/index.php/Forbidden_Four" class="postlink">multicart image with a menu list and easily separable included games</a>⸮<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Sure, one could accomplish this with hacks (placing the GPL piece at a specified offset into the NES image and (possibly) leaving spare bytes after it for expansion<br /></div><br />Which is exactly how a multicart works and how plenty of NES games' music engines work. I apologize for not being clear that this is what I had in mind. (Incidentally, <a href="http://chishm.drunkencoders.com/DLDI/" class="postlink">DLDI</a> works in much the same way.)<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />But I digress.  I don't want to hijack this thread for a GPL discussion<br /></div><br />Thanks for suggesting a split.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Tue Sep 07, 2010 3:28 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[clueless]]></name></author>
<updated>2010-09-07T15:24:20-07:00</updated>
<published>2010-09-07T15:24:20-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6943&amp;p=67333#p67333</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6943&amp;p=67333#p67333"/>
<title type="html"><![CDATA[GPL games in multicarts]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6943&amp;p=67333#p67333"><![CDATA[
<a href="http://www.gnu.org/licenses/gpl-faq.html#MereAggregation" class="postlink">http://www.gnu.org/licenses/gpl-faq.html#MereAggregation</a>, paragraph #3.  I contend that a NES game (image or physical cart) that includes GPL "stuff" (any GPL source ultimately linked into the NES image) counts as "the same executable file" and not as "aggregate".<br /><br />Consider any NES game that contains GPL and proprietary sources.  When compiled/assembled/linked (ie, 'fixed') into a physical cart or NES image they cannot be separated later.<br /><br />It isn't like a disk image with a file-system and easily separable objects.<br /><br />The NES file as distributed cannot be compiled without linking in the GPL components.  It does not matter if the proprietary build script assembles the GPL piece from source or just "incbin"s someone else's built version.<br /><br />I don't see how one could include some GPL "stuff" into a NES rom without being required to release the sources required to build the entire NES image, as the GPL piece could not run without the NES image, and the GPL stuff could not easily be replaced with a different one at the user's discretion.<br /><br />Sure, one could accomplish this with hacks (placing the GPL piece at a specified offset into the NES image and (possibly) leaving spare bytes after it for expansion, or distributing the ".o" file for the game, and allow the user to link in their own GPLd code (IIRC Lokigames did this with some of their earliest releases).<br /><br />But I digress.  I don't want to hijack this thread for a GPL discussion over code that most likely won't be GPLd.<br /><br />My own concern was over the 30+ bytes of 6502 asm, not over the ".c" utility.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3664">clueless</a> — Tue Sep 07, 2010 3:24 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2010-09-07T15:28:35-07:00</updated>
<published>2010-09-07T10:33:48-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6943&amp;p=67327#p67327</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6943&amp;p=67327#p67327"/>
<title type="html"><![CDATA[GPL games in multicarts]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6943&amp;p=67327#p67327"><![CDATA[
In reply to <a href="http://nesdev.com/bbs/viewtopic.php?p=67322#67322" class="postlink">this post</a>:<br /><br />For what it's worth, GPL doesn't "infect" across the boundary between one executable and another. (See the <a href="http://www.gnu.org/licenses/gpl-faq.html#MereAggregation" class="postlink">discussion of "aggregate"</a>.) I'd guess that two programs in one disc image or ROM image are separate executables if they have a relationship similar to the menu program and games on a multicart: 1. they are cleanly concatenated from separately linked binaries, and 2. any communication between them is over a documented protocol with the same nature as pipes or command-line arguments.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Tue Sep 07, 2010 10:33 am</p><hr />
]]></content>
</entry>
</feed>