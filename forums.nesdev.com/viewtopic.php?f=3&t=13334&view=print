<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Simple ROM to test power on or reset RAM state</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Simple ROM to test power on or reset RAM state</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=3&amp;t=13334">http://forums.nesdev.com/viewtopic.php?f=3&amp;t=13334</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Mon Oct 05, 2015 3:01 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Simple ROM to test power on or reset RAM state</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I found this ROM I made a while back for testing the RAM startup/reset state on my NES. Sharing it in case anybody would find it useful.<br /><br />It clobbers the low 3 bytes of ZP, and also the top couple of bytes of the stack page, but otherwise just shows RAM on the screen, and you can press up/down to browse the 8 pages. (B and A fill the page with ascending or descending values, was used to test reset state.)

		
			<br clear="all" /><br />

			<table class="tablebg" width="100%" cellspacing="1">
			<tr>
				<td><b class="genmed">Attachments: </b></td>
			</tr>
			
				<tr>
					<td>
			<span class="genmed">
				<img src="./styles/subsilver2/imageset/icon_topic_attach.gif" width="14" height="18" alt="" title="" /> 
				<a href="./download/file.php?id=4168">ram_retain.zip</a> [4.53 KiB]
			</span><br />
			<span class="gensmall">Downloaded 361 times</span>
		

		<br />
	</td>
				</tr>
			
			</table>
		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Mon Oct 05, 2015 3:09 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Simple ROM to test power on or reset RAM state</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I <a href="http://wiki.nesdev.com/w/index.php/Talk:CPU_power_up_state#Consistent_RAM_power-up_state.3F" class="postlink">posted on the Wiki</a> about this, but just in case it's useful to anybody here:<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I tested my NES and Famicom today with a simple ROM that just displays the contents of RAM. I get widely varying results at power-on. I tried leaving the system off for varying amounts of time between powerings, but I don't see much consistency at all. Here's some examples of what I've seen:<br /><ul><li>Mostly $FF.</li><li>Mostly some specific byte, e.g. $E7.</li><li>Repeating patterns like $00 $FF $00 FF, often in consistent lines of 16 or 32 bytes.</li><li>Often I get groups with a specific byte value, especially in columns (using rows of 16).</li></ul><br />All of these patterns are heavily subject to noise. Sometimes a lot of noise, sometimes only a little. Really I don't see much consistent behaviour at all on my NES.<br /><br />My Famicom usually powers up with mostly a repeating 16 byte pattern of 00FF00FF00FF00FFFF00FF00FF00FF00, often with one or many columns of bytes (using rows of 16) that look completely random in contrast to that pattern. Occasionally the Famicom powers up with different patterns than this too.<br /><br />The recommendation for specific values at $0008/9/A/F seems bizarre to me. Why is this in the article at all? These bytes are not particularly consistent on either of my machines, and certainly don't match these magic values. A few quick power cycles sometimes seems to leave some bytes alone, but I don't see anything special about 8/9/A/F?<br /><br />I'm not certain the idea that it should be &quot;mostly FF&quot; is particularly good either. On my Famicom, it looks like 50/50 for a randomly selected bit (though with a high probability of fitting the pattern listed for any specific bit). On my NES, I'd guess there's might be a slight bias toward 1 bits, but I really don't think that's a very useful piece of information given how random it is, and how often there are repetitive (and different) patterns in the bits.<br /><br />I'm curious what other people might see on their machines.</div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Mon Oct 05, 2015 3:13 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Simple ROM to test power on or reset RAM state</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Your archive includes your build scripts but not the source code...

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Mon Oct 05, 2015 3:18 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Simple ROM to test power on or reset RAM state</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Thanks. Fixed.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Mon Oct 05, 2015 3:28 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Simple ROM to test power on or reset RAM state</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">rainwarrior wrote:</div><div class="quotecontent"><ul><li>Mostly $FF.</li><li>Mostly some specific byte, e.g. $E7.</li><li>Repeating patterns like $00 $FF $00 FF, often in consistent lines of 16 or 32 bytes.</li><li>Often I get groups with a specific byte value, especially in columns (using rows of 16).</li></ul></div><br />I never expected the power up state of RAM to vary so much.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Mon Oct 05, 2015 3:43 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Simple ROM to test power on or reset RAM state</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Yeah, I'm completely baffled by it. I'm surprised how often I seem to get repeating 4 bit or 8 bit patterns, in many different arrangements. Every now and then it looks completely random, but most of the time it's got patterned groups-- but what really surprises me is how the patterns change! Maybe it has to do with the physical organization of the chip itself, like it seems like often every 16th bit has mostly the same value, or every 16th or 32nd byte has the same group, etc, but not always! Sometimes it's a pattern in mosty columns and then one column or a few columns are completely random looking.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Myask</b> [ Mon Oct 05, 2015 8:08 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Simple ROM to test power on or reset RAM state</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Previous <a href="https://forums.nesdev.com/viewtopic.php?f=22&amp;t=11520" class="postlink">relevant</a> <a href="https://forums.nesdev.com/viewtopic.php?f=2&amp;t=11526" class="postlink">topics</a>.<br /><br /><a href="https://forums.nesdev.com/viewtopic.php?f=3&amp;t=13199" class="postlink">Two</a> <a href="https://forums.nesdev.com/viewtopic.php?f=2&amp;t=9796&amp;hilit=initial+RAM+state" class="postlink">more</a>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>CLChambers00</b> [ Fri Mar 02, 2018 12:19 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Simple ROM to test power on or reset RAM state</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />How do I put this or rom like it in an actual cart? Do you just scrap an NES cart, and load the rom on it? and what method do you recommend for putting such a rom on a chip, and where can I get a rom reader/writer and chips? Or does someone have one made or could be made for me for a price to be shipped to me. This is the rom I would like to use: <!-- l --><a class="postlink-local" href="http://forums.nesdev.com/viewtopic.php?f=22&amp;t=11520#p157782">viewtopic.php?f=22&amp;t=11520#p157782</a><!-- l --><br /><br />Would this show me the initial ram state of any Front Loader NES?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Fri Mar 02, 2018 1:05 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Simple ROM to test power on or reset RAM state</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />You can use an old NES board and remove/replace parts from it if you know what you're doing and want to destroy an old game, but I personally would prefer using a new board.<br /><br />Myself, I had an old <a href="http://www.retrousb.com/product_info.php?products_id=42" class="postlink">ReproPak</a> board from RetroUSB that I soldered chip sockets into. I burned two EPROMs of appropriate size with an old <a href="http://www.primrosebank.net/computers/maint/tools/top853.htm" class="postlink">TOP853</a> EPROM programmer, and put them in the sockets.<br /><br />The ReproPak isn't available anymore but there are lots of people selling similar NES boards. There's a variety of inexpensive EPROM programmers as well. Old UV EPROM chips are pretty easy to get from eBay. Flash EPROM is easier to get new and can be erased more easily.<br /><br />If you don't know how to solder, you can get a board with flash EPROM chips already on it, and an inexpensive programmer from INL:<br /><!-- m --><a class="postlink" href="http://www.infiniteneslives.com/nessupplies.php">http://www.infiniteneslives.com/nessupplies.php</a><!-- m --><br /><!-- m --><a class="postlink" href="http://www.infiniteneslives.com/kazzo.php">http://www.infiniteneslives.com/kazzo.php</a><!-- m -->

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>CLChambers00</b> [ Fri Mar 02, 2018 8:03 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Simple ROM to test power on or reset RAM state</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Thanks for the reply. Which specific item would I need on <!-- m --><a class="postlink" href="http://www.infiniteneslives.com/nessupplies.php">http://www.infiniteneslives.com/nessupplies.php</a><!-- m --><br /><br />The item shown at <!-- m --><a class="postlink" href="http://www.infiniteneslives.com/kazzo.php">http://www.infiniteneslives.com/kazzo.php</a><!-- m --> is not available. And the TOP853 USB Universal Programmer is not being sold on Ebay at the moment, do you have another recommendation?<br /><br />So basically I would buy one of these boards from INL, remove the chip and use a EPROM programmer on it, and then put the chip back in, no soldering needed. Very easy to do?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>CLChambers00</b> [ Fri Mar 02, 2018 8:11 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Simple ROM to test power on or reset RAM state</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Also I just read what you wrote about seeing lots of variance on your RAM state at power on. I know with some games, Metroid in particular, which has at least one memory address value taken from the initial state that influences RNG, that some people can get a certain pattern from power on each time, which leads me to believe that this particular address seems to go back to a starting value instead of retaining its last value, though I don't understand how that can be.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Fri Mar 02, 2018 10:22 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Simple ROM to test power on or reset RAM state</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">CLChambers00 wrote:</div><div class="quotecontent">Which specific item would I need on <!-- m --><a class="postlink" href="http://www.infiniteneslives.com/nessupplies.php">http://www.infiniteneslives.com/nessupplies.php</a><!-- m --></div><br />This specific test is NROM.<br /><br /><div class="quotetitle">CLChambers00 wrote:</div><div class="quotecontent">The item shown at <!-- m --><a class="postlink" href="http://www.infiniteneslives.com/kazzo.php">http://www.infiniteneslives.com/kazzo.php</a><!-- m --> is not available. And the TOP853 USB Universal Programmer is not being sold on Ebay at the moment, do you have another recommendation?</div><br />For programming INL's flash boards, you need the kazzo specifically, so I guess wait for new ones to become available.<br /><br />For programming EPROM generically, there are a lot of different EPROM programmers. Willem makes some popular ones. I can't recommend a specific one. The TOP853 I have is not a &quot;good&quot; one, but there's not really a difference in the end result between one programmer and another as long as they function correctly. I think some people have managed to build an inexpensive one using an arduino as a base.<br /><br /><div class="quotetitle">CLChambers00 wrote:</div><div class="quotecontent">So basically I would buy one of these boards from INL, remove the chip and use a EPROM programmer on it, and then put the chip back in, no soldering needed. Very easy to do?</div><br />With INL the boards are designed to be flashed via the carrtridge connector. There is no need to remove the chip.<br /><br />With non-Flash boards, generally what you want to do is install (solder) a chip socket where the chips go so you can put the EPROM in and out without having to do any soldering between tests.<br /><br />Here's one alternative board: <!-- m --><a class="postlink" href="https://www.game-tech.us/product/reprox/">https://www.game-tech.us/product/reprox/</a><!-- m --><br />Though the ReproPak is not being sold anymore, its manual may give you some idea of how these kinds of boards are used: <!-- m --><a class="postlink" href="http://www.retrousb.com/product_info.php?products_id=42">http://www.retrousb.com/product_info.php?products_id=42</a><!-- m --><br />There's others too, just search for NES reproduction boards: <!-- m --><a class="postlink" href="https://www.muramasaentertainment.com/index.php/nes-nrom.html">https://www.muramasaentertainment.com/i ... -nrom.html</a><!-- m --><br />Or you can cannibalize an existing NES game: <!-- m --><a class="postlink" href="http://callanbrown.com/index.php/basic-nes-reproduction">http://callanbrown.com/index.php/basic-nes-reproduction</a><!-- m --><br /><br />They're all basically the same design and work the same way, so learning about one will gain useful information about the other.<br /><br /><div class="quotetitle">CLChambers00 wrote:</div><div class="quotecontent">Also I just read what you wrote about seeing lots of variance on your RAM state at power on. I know with some games, Metroid in particular, which has at least one memory address value taken from the initial state that influences RNG, that some people can get a certain pattern from power on each time, which leads me to believe that this particular address seems to go back to a starting value instead of retaining its last value, though I don't understand how that can be.</div><br />I'll make a sort of simplified description, probably a little inaccurate but should give the idea:<br /><br />Bits in RAM are a device that take an existing charge and continually amplify it to maintain it at 0 or 1. When you're powering it on, the signal is very weak, and the circuit is deciding whether a signal that's in a very questionable range should be driven toward 0 or 1.<br /><br />This is a device with many thousands of those bits. They're made to be reliable within a certain tolerance, but it doesn't matter if the bit splits between 0 and 1 at 0.5, or if it split at 0.4 or 0.6, etc... that doesn't really matter whenever the input signal coming in is strong. To split at exactly 0.5 you'd need the two sides of the amplifier to be perfectly balanced, but in practice you only need them balanced well <em>enough</em> for tolerantly reliable behaviour, so it doesn't have to be that accurate. This difference only really has an effect at power-on, where some particular bits might have a tendency to power on in a 0 or 1 more often.<br /><br />The weak starting signal is subject to all sorts of noise, existing static charges in the chip, temperature and ambient or interfering electromagnetic radiation in the environment, etc. When the signal is weak enough all sorts of things can be affecting it. When you power off and on an SRAM very quickly, it tends to retain most of the bits it last had in it. When you power it off for longer, the charges tend to drain out and balance into a potentially more consistent starting state. The longer it's powered off, the closer you'll get to the chip's natural starting equilibrium and have the best chance of powering on with a consistent value. (Still only a chance though.)<br /><br />Not all RAM is created equally, some have stronger tendencies than others. The contents at power-on aren't something the chip has to do anything consistent with, by design it doesn't matter, so there's a ton of variation here. Some might tend tend to have mostly 0, or mostly 1 bits, for example, if the bias is consistent.<br /><br /><br />Anyhow, this test ROM was designed to to take a look at this kind of thing. The results I found were that mine are indeed pretty random. I didn't even see much tendency when they were powered off for longer times.<br /><br />As for looking at specific games, you should know that this program initialized a few bytes of RAM in order to operate, but you could easily rebuild it to move those bytes elsewhere if by bad luck they overlap the bytes the games you're interested in use for their uninitialized behaviour that you're trying to target. (This is one reason why it's useful to have a socketed board, or use a flashable one that you can rewrite the chips for. You may need to try different tests. You could also use it to try other mapper-compatible games and experiments as well.)<br /><br />I don't know about uninitialized behaviour in Metroid, but I do know that it gathers some randomness from how many frames it spends on the title screen, so even if it was a consistent startup value it might need frame perfect input to be consistent after that anyway.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>infiniteneslives</b> [ Fri Mar 02, 2018 11:59 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Simple ROM to test power on or reset RAM state</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Doing everything I can to get new manufacturing of new programmers ramped up and released by end of this month (March 2018).  I failed to get board files out before CNY which caused me to fall short of this goal last month..  If you sign up for the newletter on my <a href="http://infiniteneslives.com/" class="postlink">homepage</a> you'll get email notification when new products release including the new inlretro/kazzo programmer.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>CLChambers00</b> [ Sat Mar 03, 2018 11:23 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Simple ROM to test power on or reset RAM state</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Thanks for the response. It was very informative and good enough to read again in the future to deepen my understanding of it.<br /><br />Also, I will sign up for the newsletter.<br /><br />Additionally, for whatever reason the japan release of Metroid was better programmed because the US release seems to have broken its RNG. In the Japan version the RNG is calculated each frame yielding different results per frame. But in the US version, I am told, that the RNG is broken in that the first comparison of these two ram addresses sets the RNG, and no matter all subsequent comparisons the same outcomes is the result. This is how people have been able to get the same Ridley fireball pattern every time based on this phenomenon with certain consoles. <br /><br />What has really interested the Metroid speedrunning community is that one of these memory addresses is initialized while the other is not, which gives some people a default good pattern or bad pattern. The present world record holder has a top loader that always gives bad pattern on power on, with slight change of good due to power on variance, which I still don't completely understand from our discussion of Who Framed Roger Rabbit. <br /><br />I bought up a lot of $20 - $40 NES consoles from Ebay to see if I can find a good NES that will help him in this matter. I plan to clean and replace 72 pin connector and resell them. <br /><br />We have also been discussing the influence of PowerPak and Everdrive on this one RNG related uninitialized memory address. Some have reported that they can get a good pattern from power on with their PowerPak and so the discussion has gravitated to the legitimacy of using a flash cart for Metroid since it is &quot;modifying&quot; this address, instead of reliance upon what value is attained through original hardware alone. <br /><br />I must ask, if you happen to know, just before the ROM is loaded, does the PowerPak or Everdrive preset the RAM state to all 00 or FF or something similar in prep to load the ROM, or does it simply load the ROM over what was change only by the operating system from power on?<br /><br />Also, speaking of Everdrive, I wonder if there is a way to determine precisely how it compiles its save state file. If someone could find this, and figure out how to convert it to a save file for use with say Bizhawk, we could hypothetically do a save state with the Everdrive of Who Framed Roger Rabbit at the earliest possible moment, and then load this up in Bizhawk with a Lua Script to map out the results we could get from original hardware and confirm that there are actually 4 distinct RNG paths for that game, based on what I read from our other discussion that even if I pressed start on the same frame I would still only have a 25% chance of getting the right RNG.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Sat Mar 03, 2018 11:32 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Simple ROM to test power on or reset RAM state</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />PowerPak and Everdrive both need to initialize at least some of RAM (if not all of it) to run their menu programs, etc. You could check the source code for their menus to be sure, or run this test ROM to investigate.<br /><br />I don't think either of them explicitly leaves it cleared as 00s or FFs before running the game, it just boots the game with whatever was leftover. Probably you would have filenames and stuff scattered across it.<br /><br />So, no, the RAM values at boot from a flash cart are going to be completely different than what you'd get at power-on directly. Probably you'd get the same result every time if you used the same CF/SD card contents and booted from the menu in the same way, not dependent on the underlying NES.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>