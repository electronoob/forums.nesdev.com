<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Nintendo Jump tables</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Nintendo Jump tables</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=10&amp;t=8956">http://forums.nesdev.com/viewtopic.php?f=10&amp;t=8956</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Movax12</b> [ Tue May 29, 2012 10:26 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Nintendo Jump tables</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />This is from SMB and is pretty smart:
<br />
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">OperModeExecutionTree:<br />&nbsp; &nbsp; &nbsp; lda OperMode&nbsp; &nbsp; &nbsp;;this is the heart of the entire program,<br />&nbsp; &nbsp; &nbsp; jsr JumpEngine&nbsp; &nbsp;;most of what goes on starts here<br /><br />&nbsp; &nbsp; &nbsp; .dw TitleScreenMode&nbsp; ; &lt;-- *<br />&nbsp; &nbsp; &nbsp; .dw GameMode<br />&nbsp; &nbsp; &nbsp; .dw VictoryMode<br />&nbsp; &nbsp; &nbsp; .dw GameOverMode<br /><br />;....<br />;later somewhere else in ROM:<br /><br />;$04 - address low to jump address<br />;$05 - address high to jump address<br />;$06 - jump address low<br />;$07 - jump address high<br /><br />JumpEngine:<br />&nbsp; &nbsp; &nbsp; &nbsp;asl&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ;shift bit from contents of A<br />&nbsp; &nbsp; &nbsp; &nbsp;tay<br />&nbsp; &nbsp; &nbsp; &nbsp;pla&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ;pull saved return address from stack<br />&nbsp; &nbsp; &nbsp; &nbsp;sta $04&nbsp; &nbsp; &nbsp; ;save to indirect<br />&nbsp; &nbsp; &nbsp; &nbsp;pla<br />&nbsp; &nbsp; &nbsp; &nbsp;sta $05<br />&nbsp; &nbsp; &nbsp; &nbsp;iny<br />&nbsp; &nbsp; &nbsp; &nbsp;lda &#40;$04&#41;,y&nbsp; ;load pointer from indirect<br />&nbsp; &nbsp; &nbsp; &nbsp;sta $06&nbsp; &nbsp; &nbsp; ;note that if an RTS is performed in next routine<br />&nbsp; &nbsp; &nbsp; &nbsp;iny&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ;it will return to the execution before the sub<br />&nbsp; &nbsp; &nbsp; &nbsp;lda &#40;$04&#41;,y&nbsp; ;that called this routine<br />&nbsp; &nbsp; &nbsp; &nbsp;sta $07<br />&nbsp; &nbsp; &nbsp; &nbsp;jmp &#40;$06&#41;&nbsp; &nbsp; ;jump to the address we loaded<br /><br /></div>
<br />
<br />This is an interesting solution, it was used in other games too, but is using the stack really better than having a label to reference the pointers where I marked with an '*'? For example, you could load x and y with the high and low of the label and then call the jump engine. Or Is there a big advantage I am missing?
<br />
<br />(Note there are multiple blocks of code that call the jumpengine, not just OperModeExecutionTree.)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Memblers</b> [ Tue May 29, 2012 11:55 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />You could replace the PLA instructions with "LDA table,y" and it would be the same for that one example by itself.  But using the stack like that would allow a unique table for every different time it's called.  That works for SMB because it re-uses code and SMB has no PRG-ROM left.  Even some PRG data is stored in CHR, and read out manually.
<br />
<br />In the example of having X and Y contain the high/low of the label, seems like it'd be better to not put it there, but into zeropage.  Which leaves nothing for the jump engine to do except jump.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Movax12</b> [ Wed May 30, 2012 5:03 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Actually, I thought about it more..keeping the same structure, and using x,y for the table pointer (or zeropage) is okay, but then you would need two RTS or still use PLA,PLA,RTS to return to the code that first called into the jump table, so it might as well be done this way.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>mcmartin</b> [ Wed May 30, 2012 7:08 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />This is a fun trick - I associate it with OO-style method calls, myself. I first encountered it in Gradius, which has longer code but which preserves the (non-A) registers for the same 4 bytes of RAM:
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp; &nbsp; &nbsp; asl&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; A = A * 2<br />&nbsp; &nbsp; &nbsp; &nbsp; stx&nbsp; &nbsp; &nbsp;$9B&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; Cache X and Y<br />&nbsp; &nbsp; &nbsp; &nbsp; sty&nbsp; &nbsp; &nbsp;$9A<br />&nbsp; &nbsp; &nbsp; &nbsp; tay<br />&nbsp; &nbsp; &nbsp; &nbsp; iny&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; Y = A + 1<br />&nbsp; &nbsp; &nbsp; &nbsp; pla&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; Put RTS's return address in $98<br />&nbsp; &nbsp; &nbsp; &nbsp; sta&nbsp; &nbsp; &nbsp;$98<br />&nbsp; &nbsp; &nbsp; &nbsp; pla<br />&nbsp; &nbsp; &nbsp; &nbsp; sta&nbsp; &nbsp; &nbsp;$99<br />&nbsp; &nbsp; &nbsp; &nbsp; lda&nbsp; &nbsp; &nbsp;&#40;$98&#41;, y&nbsp; &nbsp; &nbsp; &nbsp; ; Y is the offset for the A'th address<br />&nbsp; &nbsp; &nbsp; &nbsp; tax&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; after the caller's JSR.&nbsp; Read that<br />&nbsp; &nbsp; &nbsp; &nbsp; iny&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; address...<br />&nbsp; &nbsp; &nbsp; &nbsp; lda&nbsp; &nbsp; &nbsp;&#40;$98&#41;, y<br />&nbsp; &nbsp; &nbsp; &nbsp; sta&nbsp; &nbsp; &nbsp;$99&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; And put it in $98-$99.<br />&nbsp; &nbsp; &nbsp; &nbsp; stx&nbsp; &nbsp; &nbsp;$98<br />&nbsp; &nbsp; &nbsp; &nbsp; ldy&nbsp; &nbsp; &nbsp;$9A&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; Restore arguments<br />&nbsp; &nbsp; &nbsp; &nbsp; ldx&nbsp; &nbsp; &nbsp;$9B<br />&nbsp; &nbsp; &nbsp; &nbsp; jmp&nbsp; &nbsp; &nbsp;&#40;$0098&#41;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; Then jump there.<br /></div>
<br />
<br />The calling convention is otherwise identical. I didn't get much further in my disassembly of Gradius, but that trick alone was worth the price of admission.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Wed May 30, 2012 8:49 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The exact same instructions from the SMB disassembly is also in Galaxian. (with different addresses)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Movax12</b> [ Wed May 30, 2012 9:41 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Apparently this style of code is in many NES games. Metriod has the code that preserves X and Y.  My question was basically if this is really a good solution, or if whomever coded it was outsmarting themselves with cleverness, but and I suppose it is a decent way to solve that problem.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>strat</b> [ Thu May 31, 2012 12:07 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Super Mario Bros. style of dynamic jumping is repeated in Gameboy games, only the z80 allows the actual jumping to be done with registers.
<br />
<br />From Balloon Kid:
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">048A:<br />add a<br />pop hl<br />ld e,a<br />ld d,00h<br />add hl,de<br />ld e,&#40;hl&#41;<br />inc hl<br />ld d,&#40;hl&#41;<br />push de<br />pop hl<br />ld pc,hl<br /></div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Shiru</b> [ Thu May 31, 2012 4:47 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Strange, why they used that slow push/pop sequence instead of this:
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp;...<br />&nbsp;ld a,&#40;hl&#41;<br />&nbsp;inc hl<br />&nbsp;ld h,&#40;hl&#41;<br />&nbsp;ld l,a<br />&nbsp;jp &#40;hl&#41;</div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>smkd</b> [ Thu May 31, 2012 5:17 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Movax12 wrote:</div><div class="quotecontent">Apparently this style of code is in many NES games. Metriod has the code that preserves X and Y.  My question was basically if this is really a good solution, or if whomever coded it was outsmarting themselves with cleverness, but and I suppose it is a decent way to solve that problem.</div>
<br />
<br />It's not the fastest way to do it but it's really compact. Passing a pointer while also jumping to the dispatch code in only 3 bytes is pretty good. Memblers makes a good point with PRG space being starved. They would've been doing everything they can think of to save as much space as possible.
<br />
<br />This appears in SNES games too. SMW uses the same trick, although it's 24bit instead. You just have JSL instead of JSR, LDA [$xx],y instead of LDA ($xx),y etc.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>strat</b> [ Thu May 31, 2012 11:34 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Shiru:  That's nothing.  All graphics tiles in Balloon Kid are visible in a tile editor - in contrast, very few SNES games, not even Super Mario World, can be seen that way - and apparently the first screen of each stage (the first one at least) is also stored uncompressed.  I plan on going back to disassembling it and it's going to be a let down if they used that 128k space to just store uncompressed level data.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>strat</b> [ Thu May 31, 2012 11:49 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Shiru wrote:</div><div class="quotecontent">Strange, why they used that slow push/pop sequence instead of this:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp;...<br />&nbsp;ld a,&#40;hl&#41;<br />&nbsp;inc hl<br />&nbsp;ld h,&#40;hl&#41;<br />&nbsp;ld l,a<br />&nbsp;jp &#40;hl&#41;</div></div>
<br />
<br />Just for grins I swapped in that instruction sequence.
<br />
<br />Maybe the programmer didn't think an indirect load from hl into h would work.  It looks like at least with these early games the programmers didn't know everything about the chips they coded for.  The Sprite 0 hit in SMB doesn't know 'bit' changes the V flag.  And whoever re'd Metroid made fun of the NMI for saving the processor status.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Fri Jun 01, 2012 3:51 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">strat wrote:</div><div class="quotecontent">Shiru:  That's nothing.  All graphics tiles in Balloon Kid are visible in a tile editor - in contrast, very few SNES games, not even Super Mario World, can be seen that way</div><br />Super Mario Kart object graphics are uncompressed, but then it uses Battletoads style sprite cel copying. Super Mario All-Stars tiles are uncompressed, but I guess it too needs them uncompressed to simulate an MMC3's CHR bankswitching with DMA to VRAM.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"> - and apparently the first screen of each stage (the first one at least) is also stored uncompressed.  I plan on going back to disassembling it and it's going to be a let down if they used that 128k space to just store uncompressed level data.</div><br /><em>(Excuse me for the apologetics; I was a big fan of Balloon Kid at one time.)</em><br />Mask ROM fabrication rounds up the ROM size to a power of two. If a game is 128 KiB uncompressed or 68 KiB compressed, and you lack ideas for bonus minigames to fill the extra space, why waste effort on compression? That's why I didn't compress the 3.5 KiB of scripts in the cut scenes of Thwaite: it wouldn't have saved enough to let me add the things I wanted to add while keeping it NROM-128 should I ever get around to making version 0.04.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">The Sprite 0 hit in SMB doesn't know 'bit' changes the V flag. </div>
<br />Apart from the 6502's famous die-space efficiency, one reason why Nintendo chose it is because it was an unfamiliar chip (or "stone"), as 8080 family CPUs were more popular in Japan at the time than the 6502 used in Apple, Commodore, and Atari products. See <a href="http://www.nintendo.co.uk/NOE/en_GB/news/iwata/super_mario_bros_25th_anniversary_19226_19367.html" class="postlink">page 2 of this interview</a>.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>strat</b> [ Fri Jun 01, 2012 11:43 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />That's really interesting, because I was also wondering why the Famicom didn't just use the same CPU as Donkey Kong.  (Too bad they didn't go with the 65c02, if that was even out yet).
<br />
<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Normally, in porting Donkey Kong, the quickest way would have been to use the CPU in the arcade version. But Ricoh wanted us to use the 6502, which they had the license for. When I said I wanted to use the 6502 at Nintendo, the staff told me that I make such decisions because I didn’t make video games.</div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>3gengames</b> [ Fri Jun 01, 2012 1:45 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />^ Then the "game makers" ran with it because in the long run it would help because the Z80 sucked at cycle efficiency and programming ease. <img src="./images/smilies/icon_razz.gif" alt=":P" title="Razz" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Fri Jun 01, 2012 3:31 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />But then the 6502 needed faster memory that responded within a half cycle, while <a href="http://www.sxlist.com/techref/mem/dram/slide4.html" class="postlink">the Z80 allowed a cycle and a half</a>. This allowed Z80s to be clocked faster with the same spec memory chips, making up for the lower cycle efficiency. Compare a 1.8 MHz Ricoh 6502 clone (NES) to a 4.2 MHz Sharp 8080 clone with some Z80 features (Game Boy).

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>