<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Implementing Original Music for Nintendo &amp; Sega Game Dev</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Implementing Original Music for Nintendo &amp; Sega Game Dev</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=6&amp;t=13785">http://forums.nesdev.com/viewtopic.php?f=6&amp;t=13785</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>2</strong> of <strong>3</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Kasumi</b> [ Sun Jan 31, 2016 11:10 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Implementing Original Music for Nintendo &amp; Sega Game Dev</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">So that means that I could essentially write a 20-minute prog rock magnum opus for the 2A03 while adhering technically to the limitations of FamiTone2, GGSound, or whatever format the dev requires for his game and I'll have no problems?</div><br />What that means is that it's impossible to answer generally. If you really, really, really want a general metric, whatever song you want after exporting to whatever format should probably be less than 8KB. The problem with this answer is that it's not strictly impossible to have a larger song. And most devs will probably not want a single song to be that large, but I don't have a number in my head of where a better line is. It depends how much the developer values music. The Super Bat Puncher music is very large for just a few songs if I recall correctly.<br /><br />Note that this 8KB limitation I'm throwing out randomly only deals with a single song. All of the data for all of your songs could be like 256 KB, and that generally wouldn't be a problem for playback specifically, but it would be taking up a lot of space that the dev might want to use for other things.<br /><br />Which... is again why this sort of thing is impossible to answer generally.<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">If the game is being created with the purpose of being played strictly on emulators, then that would mean I have free reign over the length and complexity</div><br />Okay, let me put it like this: You only get &quot;free reign&quot; through an emulator if you know how to program, because if nothing exists that gives you the space/features you need, you have to add it to the emulator yourself. Just like to get &quot;free reign&quot; on the hardware itself, you need to be able to design/build the PCB that will make it possible. As Tepples said, it's possible to get MP3 quality playback but at that level what's the point of going with NES? A lot feel the same about expansion audio. I don't think there's a commercial USA release that uses expansion audio. If there are, they don't make up more than 1% of the overall library. <br /><br />But the only universal truth is that it's up to the dev. If they both know how to and want to support whatever, you can do whatever. If they can't or don't want to, <em>you</em> can't. So you must ask the dev. Yes. Every time. Unless you are already capable or are willing to learn to build music engines/whatever yourself to help them.<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"> I wonder if this additional hardware is easy/cheap to manufacture for homebrews?</div><br />The answer is no. And honestly, I'm not even sure it's well emulated yet. If you care about your stuff being played on real hardware, you should expect not to use any expansion sounds.<br /><br />Edit: Hmmm... infiniteneslives is at least working on some boards that supported expanded sound. So maybe you can get there at some point.<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I assume that's where the &quot;speed&quot; of FamiTone, GGSound, etc. comes into play, right? </div><br />It's impossible to answer generally. Certain effects (if they're supported), certain instruments might be CPU intensive. The speed of the song itself could matter too, but... impossible to answer generally.<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Is this not even possible (or realistic) on emulation-only homebrew dev?</div><br />If you only care about emulation, there's still another problem. As far as I know there doesn't really exist good freely available music engines for expansion sound. (Maybe the famitracker driver is one? But that's not particularly good for games.) I could be wrong on this point and there's something that's just as easy to use for them as Famitone2. But if there's not, what this means is that whoever you pair with has to build a thing just to support your music. And this also locks them into whatever mapper the expansion sound is paired with (which affects how programming will go for many things beyond the music.), unless they also want to build a custom thing that supports the music of the expansion sound and also other things they want.<br /><br />I'd say it's not realistic to expect it for homebrew, no. Maybe for those MMC5 conversion hacks, I don't know enough about them. <br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I heard that NES data could be compressed from a Reddit post I made asking why there hasn't been a decent ROM hack of Metal Gear yet. There wasn't a lot of info spilt on NES compression, though.</div><br />There's really no such thing as NES specific compression. NES has a CPU like any other. It's limited by RAM and addressing space, but in theory it can do the same things as a modern computer could. Just very slowly. The issue with compression on NES that whatever you want to compress must be able to fit in RAM decompressed, and be able to be decompressed relatively quickly on the weak CPU.<br /><br />What the reddit post could mean is that Metal Gear uses a lot a custom compression formats that haven't been reverse engineered yet. <br /><br />Edit: But ROM hacking (outside of certain graphical things) isn't easy in general. You are editing code you did not write, with no documentation, after it has been assembled. The reason hacks are common for certain games is the hard work has already been done, usually due in part to extreme popularity. Super Mario Bros. has a full disassembly, which is like having documented source code. But... someone had to actually go and figure everything out for that to exist. Same for GUI level editors and things. That's the result of a person spending hours with debuggers trying to figure out what pieces of RAM represented. I would assume no one has done the hard work for Metal Gear yet. <br /><br />Just as a random aside DPCM is not too much fun to support. Even though, yes, Famitone2 does support it, the data for it has to be in a specific place in memory on NES which makes certain things hard depending on what hardware setup a given game uses. My choice to support it is actually causing a lot of problems in a mini project I'm working on.<br /><br />Say I gave you a famitone2 test package. You make your song, export it, double click a thing and you'll have a ROM that will play whatever music you gave (or give you errors if you didn't obey the limitations somehow). Is that interesting to you? This could at least give you an idea of how large certain songs would be in Famitone2.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>zzo38</b> [ Sun Jan 31, 2016 11:26 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Implementing Original Music for Nintendo &amp; Sega Game Dev</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">On emulation-only homebrew dev, you can in theory just use MP3 music, which simulates an MP3 player being soldered to a Famicom PCB. Heck, on emulation-only homebrew dev, you can make games at PS2 or higher graphical complexity, as Java, C#, and asm.js programs are &quot;emulated&quot; in a way.</div>In my opinion, that is a bit silly. I can describe my own opinions about emulation-only homebrew dev, in order to contrast.<br /><br />One thing about making the .NES format is that you can then use it on many different emulators, including on different devices. Some might not support the mapper in use, although it may also be possible that future versions of that emulator will implement it. Most emulators do support expansion audio as far as I know.<br /><br />Even if you never intend the game to be use outside of emulator, it should still be design to work on real hardware too. There are advantages of such: working better on future emulators, and that in case someone does want to use it on a real hardware, they can do that too (although if you need to, you can use a complicated mapper, which would make it more difficult to use on a real hardware but still possible). I like to think of it as, the program is written for &quot;Famicom VM&quot;, and the different implementations of Famicom VM including software implementations (emulators) and hardware implementations (such as NES and Famicom hardware).<br /><br />While you can use MP3 music, I do not really suggest it (although there are some work-in-progress specification to allow formats such as Vorbis to be provided as a purely optional alternative to 2A03 music on emulators that can support them; a similar work-in-progress specification exists for graphics too)<br /><br />However, of course if you do not want to write your game for &quot;Famicom VM&quot;, you are not even required to do so, as tepples has mentioned. You can use Java or .NET or whatever if that is what you want your game to be, although then you are not writing a NES/Famicom game.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sun Jan 31, 2016 11:35 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Implementing Original Music for Nintendo &amp; Sega Game Dev</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Except the likes of Bananmos used to always drill in us that the Java or .NET VM will get the job done more easily than the Famicom VM.<br /><br />Blast from the past: <a href="http://nesdev.com/cgi-bin/wwwthreads/showpost.pl?Board=nesdev&amp;Number=2236&amp;page=1&amp;view=collapsed&amp;mode=threaded&amp;sb=5#Post2236" class="postlink">Threat of violence</a>, <a href="http://forums.nesdev.com/viewtopic.php?p=110#p110" class="postlink">hopefully in jest</a>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>AlexE</b> [ Sun Jan 31, 2016 3:52 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Implementing Original Music for Nintendo &amp; Sega Game Dev</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><span style="font-size: 85%; line-height: normal"><div class="quotetitle">tepples wrote:</div><div class="quotecontent"><div class="quotetitle">AlexE wrote:</div><div class="quotecontent">So that means that I could essentially write a 20-minute prog rock magnum opus for the 2A03 while adhering technically to the limitations of FamiTone2, GGSound, or whatever format the dev requires for his game and I'll have no problems?</div><br />Yes, if there's enough space. But in practice, a 20-minute composition would probably need to be synchronized with the game action, and that more than likely would mean auto-scrolling and no &quot;go back to save point when you die&quot;: either respawn in place or restart the whole thing. Unless, that is, the 20-minute composition itself has restart points.</div><br /></span>Maybe a 2D sidescrolling <em>Gradius</em>-like game where it is just one very, very long level would work for something like that? That'd be pretty neat.<br /><br /><div class="quotetitle">tepples wrote:</div><div class="quotecontent"><div class="quotetitle">AlexE wrote:</div><div class="quotecontent">(I've heard of the MMC5 being used in <em>The Legend of Zelda: Adventure of Link</em>, a freakin' rad ROM hack of <em>The Legend of Zelda</em>. I tried using it on my Everdrive N8, but it would load because the cartridge hardware didn't have the right &quot;mappers&quot;.)</div><br />If you mean <em>Zelda II: The Adventure of Link</em>, that's nowhere near MMC5. It's a garden-variety MMC1 according to NesCartDB.</div><br />Nah, I mean the ROM hack <em><a href="http://www.romhacking.net/hacks/2136/" class="postlink">Legend of Link</a></em>! <em>Adventure of Link</em>, <em>Legend of Link</em>, <em>Link's Dink</em>? It's all the same at this point. <em>Legend of Link</em> uses MMC5 because the game is far too huge to use regular hardware. It's a super great game, too. Infidelity, the creator of the hack, had a <a href="http://acmlm.kafuka.org/board/thread.php?id=7308" class="postlink">blog</a> about it.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">On emulation-only homebrew dev, you can in theory just use MP3 music, which simulates an MP3 player being soldered to a Famicom PCB. Heck, on emulation-only homebrew dev, you can make games at PS2 or higher graphical complexity, as Java, C#, and asm.js programs are &quot;emulated&quot; in a way.</div><br /><br />WHAT. Are you telling me that a modded NES, even in an NES emulator, can play MP3s?? And that a NES emulator can play games that look like PS2 games for the NES emulator??? That's a little unreal. <br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><div class="quotetitle">AlexE wrote:</div><div class="quotecontent">I heard that NES data could be compressed from a Reddit post I made asking why there hasn't been a decent ROM hack of Metal Gear yet. There wasn't a lot of info spilt on NES compression, though.</div><br />It depends on what kind of compression. Some are better suited to the (relatively) small RAM of the NES than others. Methods that involve looking small things up in a static table to get big things, such as byte pair encoding or Huffman coding, work well on NES. So do run-length encoding (RLE), which assumes that the each byte is likely to be the same as the previous byte, and Markov RLE, which uses a table to predict the most common byte that follows each byte. I've used RLE and Markov RLE to compress graphical tile data and map data, and data formats built around Huffman coding or byte pair encoding work well for text. Still other forms of &quot;compression&quot; could be described as clever ways of structuring data to avoid <a href="https://en.wikipedia.org/wiki/Fragmentation_%28computing%29#Internal_fragmentation" class="postlink">internal fragmentation</a>, such as a music engine whose sequence data combines 5-bit pitch and 3-bit duration of each note into a single byte.<br /><br />But one popular family of general-purpose compression methods, called LZ77, is based on references to previous decompressed data in a circular buffer. That's not so easy on NES, which has only 2048 bytes of RAM randomly accessible to the CPU unless extra RAM is on the cartridge. LZ77 is easier on the Master System, which has 8K of main RAM; the Game Boy, which also has 8K of main RAM as well as random access to video RAM while rendering is turned off; and on Genesis and Super NES, which have 64K or more of main RAM.</div><br />I feel really out-of-place here because I'm having trouble keeping up with this tech jargon. <img src="./images/smilies/icon_confused.gif" alt=":?" title="Confused" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Drew Sebastino</b> [ Sun Jan 31, 2016 4:10 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Implementing Original Music for Nintendo &amp; Sega Game Dev</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">AlexE wrote:</div><div class="quotecontent">I feel really out-of-place here because I'm having trouble keeping up with this tech jargon. <img src="./images/smilies/icon_confused.gif" alt=":?" title="Confused" /> </div><br />What don't you understand?<br /><br /><span style="font-size: 50%; line-height: normal">...Please tell me you at least know what a &quot;byte&quot; is, or &quot;RAM&quot;...</span>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Sun Jan 31, 2016 4:21 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Implementing Original Music for Nintendo &amp; Sega Game Dev</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">AlexE wrote:</div><div class="quotecontent">WHAT. Are you telling me that a modded NES, even in an NES emulator, can play MP3s?<br /></div>Because of how the Famicom was designed, there is a long tradition of extending its functionality by adding extra hardware in the cartridge.<br /><br />Whether, as in the Famicom Disk System, that's just to provide a single channel of audio and a magnetic storage medium, or the MMC5 to add all sorts of extra video features.<br /><br />So, pedantically, you could take an MP3-player-on-a-chip, put it inside the cartridge, and call it good enough. There were a number of Famicom games that are almost exactly this: they added a stored-speech IC to the cart. (And the only real difference here is &quot;how many seconds of recorded audio can you store&quot;)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>AlexE</b> [ Sun Jan 31, 2016 4:48 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Implementing Original Music for Nintendo &amp; Sega Game Dev</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Espozo wrote:</div><div class="quotecontent"><div class="quotetitle">AlexE wrote:</div><div class="quotecontent">I feel really out-of-place here because I'm having trouble keeping up with this tech jargon. <img src="./images/smilies/icon_confused.gif" alt=":?" title="Confused" /> </div><br />What don't you understand?<br /><br /><span style="font-size: 50%; line-height: normal">...Please tell me you at least know what a &quot;byte&quot; is, or &quot;RAM&quot;...</span></div><br /><br />A byte is a unit of data and RAM stands for Random Access Memory (or Random Access Memories if you're a Daft Punk fan).<br />I understand some of the very basics of computing. I'm more of a musician than I am a programmer.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Kasumi</b> [ Sun Jan 31, 2016 4:50 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Implementing Original Music for Nintendo &amp; Sega Game Dev</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />What lidnariq describes is exactly why it's so difficult to give general answers to your questions. Even if we limit our answers to things that were used in the era, it's still a very wide range of possibilities.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>dougeff</b> [ Sun Jan 31, 2016 4:58 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Implementing Original Music for Nintendo &amp; Sega Game Dev</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Let's move past what <span style="color: #800000">CAN</span> be done...<br /><br />If you're interested in making 80s style chiptunes, for use on NES (etc), then restrict yourself to the commonly used sounds. Sure, you could Mod a cart to play an MP3, but where's the nostalgia in that? It won't feel like an NES game/song.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>darryl.revok</b> [ Sun Jan 31, 2016 5:26 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Implementing Original Music for Nintendo &amp; Sega Game Dev</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />tepples and I were talking about this in IRC the other day. I offered him my outsider's opinion, and I'm curious to see what others would think.<br /><br />I haven't truly delved into famitracker yet, but from what I've seen, the interface doesn't seem particularly musical to me. When I think of laying out music on a computer, I think of something like this:<br /><br /><img src="https://cdn.tutsplus.com/audio/uploads/legacy/qt_056_drumvar/1.jpg" alt="Image" /><br />(I've chosen FLstudio as the example, because I actually like its interface the best for creating music directly on a computer.)<br /><br />I realize what I'm saying goes against the whole worldwide chiptune scene, but I feel like those who aren't chiptune composers would be more comfortable with a piano roll, and a visual layout to position song segments. Then, any musician who's familiar with a DAW could compose pretty comfortably for your game project.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Kasumi</b> [ Sun Jan 31, 2016 6:04 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Implementing Original Music for Nintendo &amp; Sega Game Dev</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />There's actually a Game Boy music editor called <a href="http://gbdev.gg8.se/forums/viewtopic.php?id=193" class="postlink">Bleep</a> that's laid out a bit like that. As a contrast to <a href="http://www.littlesounddj.com/lsd/" class="postlink">LSDJ,</a> I suppose.<br /><br />Edit2: I guess while I'm editing I should say that version of bleep is Game Boy, not color. <br /><br />To me the difference is mainly in the axis. One's vertical, one's horizontal. I think there are more problems than layout moving from a traditional musical background to chiptune. Like... you can't hit three notes at once for a chord on NES. Edit: At least not with the same instrument and without expansion sound.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>AlexE</b> [ Sun Jan 31, 2016 6:07 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Implementing Original Music for Nintendo &amp; Sega Game Dev</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">darryl.revok wrote:</div><div class="quotecontent">tepples and I were talking about this in IRC the other day. I offered him my outsider's opinion, and I'm curious to see what others would think.<br /><br />I haven't truly delved into famitracker yet, but from what I've seen, the interface doesn't seem particularly musical to me. When I think of laying out music on a computer, I think of something like this:<br /><br /><img src="https://cdn.tutsplus.com/audio/uploads/legacy/qt_056_drumvar/1.jpg" alt="Image" /><br />(I've chosen FLstudio as the example, because I actually like its interface the best for creating music directly on a computer.)<br /><br />I realize what I'm saying goes against the whole worldwide chiptune scene, but I feel like those who aren't chiptune composers would be more comfortable with a piano roll, and a visual layout to position song segments. Then, any musician who's familiar with a DAW could compose pretty comfortably for your game project.</div><br /><br />FamiTracker (and trackers in general) use the computer keyboard to simulate a piano roll pretty analogously, so it comes naturally from a pianist persepctive. The rest of it is using math to place out the rhythms of each note/sample. I also use programs like Reason and MuseScore to make music.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>AlexE</b> [ Sun Jan 31, 2016 6:09 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Implementing Original Music for Nintendo &amp; Sega Game Dev</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">dougeff wrote:</div><div class="quotecontent">Let's move past what <span style="color: #800000">CAN</span> be done...<br /><br />If you're interested in making 80s style chiptunes, for use on NES (etc), then restrict yourself to the commonly used sounds. Sure, you could Mod a cart to play an MP3, but where's the nostalgia in that? It won't feel like an NES game/song.</div><br /><br />My questions aren't so much as to what technological madness can be done on the NES, it's how to put music ON the NES game. Basically, the answer seems to be &quot;You'll have to figure it out; here's some tools to help you figure it out.&quot;

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sun Jan 31, 2016 6:12 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Implementing Original Music for Nintendo &amp; Sega Game Dev</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Once you have made the music, the player library will come with a subroutine that you call to start a song, a subroutine that you call to start a sound effect, and a subroutine that you call every frame to update the APU registers. A player library may offer additional subroutines to pause music, register a loop callback, and the like.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Kasumi</b> [ Sun Jan 31, 2016 6:16 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Implementing Original Music for Nintendo &amp; Sega Game Dev</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">My questions aren't so much as to what technological madness can be done on the NES, it's how to put music ON the NES game. Basically, the answer seems to be &quot;You'll have to figure it out; here's some tools to help you figure it out.&quot;</div><br />So I offered in one of my posts a thing that lets you try out your music using Famitone2's player. Do you want that? I'm not saying figure it out, I'm saying it's on a game by game basis. The questions you're asking simply can't be answered generally. We can help you with Famitone2 specific questions. We can help with GGSound questions. We can't help you make music guaranteed to work for any given game, because that's impossible.<br /><br />So what is your goal? If you're looking to get your music in a game, you can simply post things you've made without expansion chips so people can decide if they like your sound. You may not get responses, but that's more that there simply aren't that many people doing this.<br /><br />If you do get a response, whoever wants your music will definitely help you out with what their game needs. It's just hard to help you with general questions, when it's going to vary based on the project that needs the music. It's not like a modern game where you can just send an mp3 over which will work in whatever project.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>2</strong> of <strong>3</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>