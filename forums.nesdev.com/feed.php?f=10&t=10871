<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=10&amp;t=10871" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2014-01-09T20:13:14-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=10&amp;t=10871</id>
<entry>
<author><name><![CDATA[tsu]]></name></author>
<updated>2014-01-09T20:13:14-07:00</updated>
<published>2014-01-09T20:13:14-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10871&amp;p=123582#p123582</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10871&amp;p=123582#p123582"/>
<title type="html"><![CDATA[Re: Code structure (real basic)]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10871&amp;p=123582#p123582"><![CDATA[
I made a typo up there.  It was What if &quot;I&quot; had jsr/rts, then ran into a lonely rts.  But you've answered that already.<br /><br />So I did remember that stuff about the jump tables and jsr and the stack, pha. From the sound engine tutorials after nerdy nights.<br /><br />I read that stuff last year.<br />I think Ihit a bump then too, trying to buffer.<br /><br />Anyways. My game's coming along farther than my last few attempts.  I hope they accept late entries in the 2014 competition.  I don't know if I can do the hard parts yet.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5875">tsu</a> — Thu Jan 09, 2014 8:13 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2014-01-09T19:43:12-07:00</updated>
<published>2014-01-09T19:43:12-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10871&amp;p=123578#p123578</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10871&amp;p=123578#p123578"/>
<title type="html"><![CDATA[Re: Code structure (real basic)]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10871&amp;p=123578#p123578"><![CDATA[
<div class="quotetitle">tsu wrote:</div><div class="quotecontent"><br />What happens if I run into that rts if I had no jsr prior?<br /></div><br />The CPU will pull whatever 2 bytes are at the top of the stack from it and jump to the address formed by those two bytes. In most cases that will crash the program.<br /><br />You know, instructions have these fancy names with words like &quot;call&quot;, &quot;return&quot; and so on, but deep down their operation is really basic. Each instruction performs certain steps, and despite the name of the instruction, the CPU doesn't give a damn if you're using RTS to return from a subroutine or not. This instruction will ALWAYS get two bytes from the stack, form an address and jump to it. The CPU can't know whether you used JSR before, and it doesn't have to, and that's what allows people to use instructions in unconventional ways (for example, there's a jump table technique that involves manually planting addresses at the top of the stack before RTSing).<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Also, what if a had previously done a pair jsr rtso?<br /></div><br />Not really sure I got the question, but you should be sure to have as many RTSs as you have JSRs (unless you're intentionally pulling off some tricks). If the JSRs and RTSs are uneven, the stack will most likely overflow or underflow at some point, crashing the program. The same goes for PHA and PLA, and all kinds of stack operations really. Never forget things on the stack or try to get things you didn't put there.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />I see his WaitFrame uses the rts because of its next function, DoFrame, which has a jsr back to WaitFrame.<br /></div><br />Yeah, the person who wrote this code intended to use this as a subroutine, so that different loops in the program could call it. Most games have more than 1 game loop: there's one for the title screen, one for menus, one for gameplay, etc. For example, a gameplay loop might look like this:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">GameLoop:<br /><br />   ;&#91;READ THE CONTROLLERS&#93;<br /><br />   ;&#91;PROCESS OBJECTS, PHYSICS, COLLISIONS&#93;<br /><br />   jsr WaitFrame<br /><br />   ;&#91;PERFORM PPU UPDATES&#93;<br /><br />   ;&#91;RUN MUSIC/SOUND ENGINE&#93;<br /><br />   jmp GameLoop</div><br />NOTE: This code doesn't handle lag frames (when the game logic takes longer than a frame to finish), so if you use this structure you should either make sure there are no lag frames or that you don't have important events timed from the vertical blank that could possibly break the program if not executed at the correct time (a sprite 0 hit for a status bar, for example).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Thu Jan 09, 2014 7:43 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tsu]]></name></author>
<updated>2014-01-09T19:25:55-07:00</updated>
<published>2014-01-09T19:25:55-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10871&amp;p=123577#p123577</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10871&amp;p=123577#p123577"/>
<title type="html"><![CDATA[Re: Code structure (real basic)]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10871&amp;p=123577#p123577"><![CDATA[
What happens if I run into that rts if I had no jsr prior?<br />Also, what if a had previously done a pair jsr rtso?<br /><br />I see his WaitFrame uses the rts because of its next function, DoFrame, which has a jsr back to WaitFrame.<br />Guess I'll just try it.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5875">tsu</a> — Thu Jan 09, 2014 7:25 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2014-01-09T19:14:59-07:00</updated>
<published>2014-01-09T19:14:59-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10871&amp;p=123576#p123576</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10871&amp;p=123576#p123576"/>
<title type="html"><![CDATA[Re: Code structure (real basic)]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10871&amp;p=123576#p123576"><![CDATA[
Normally an RTS must have a matching JSR that occurred before it, and you can only RTS once for each JSR executed. RTS just pops two bytes off the stack, forms an address, and sets PC based on this.<br /><br />And no, your program won't just end at the last instruction you code, since there are more in memory after it. Always end execution with an infinite loop or similar, otherwise you might find the program counter going back to some unexpected part and re-running earlier code the wrong way, causing confusing results.<br /><br /><tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">forever: jmp forever</tt><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Thu Jan 09, 2014 7:14 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tsu]]></name></author>
<updated>2014-01-09T19:04:33-07:00</updated>
<published>2014-01-09T19:04:33-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10871&amp;p=123573#p123573</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10871&amp;p=123573#p123573"/>
<title type="html"><![CDATA[Code structure (real basic)]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10871&amp;p=123573#p123573"><![CDATA[
I'm separating my logig code from drawing code, taking it out of NMI. I'm using the document, &quot; The Frame&quot; by Disch.<br /><br />I don't see why there is a rts in his &quot;WaitFrame:&quot;<br /><br />WaitFrame:<br /> inc sleeping<br />Loop:<br /> lda sleeping<br /> bne Loop<br /> rts<br /><br /><br />I can omit that rts if my program runs into WaitFrame from the getgo, right?<br />Is it there for someone who would have jumped to waitframe from somewhere?<br /><br />What happens if there is nowhere to return to?<br />It carries on down the code? Or jumps to a random ram value?<br /><br />And do programs end when they reach the end of code?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5875">tsu</a> — Thu Jan 09, 2014 7:04 pm</p><hr />
]]></content>
</entry>
</feed>