<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=9&amp;t=7656" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2011-11-03T21:54:18-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=9&amp;t=7656</id>
<entry>
<author><name><![CDATA[davidchelso2011]]></name></author>
<updated>2011-11-03T21:54:18-07:00</updated>
<published>2011-11-03T21:54:18-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7656&amp;p=85853#p85853</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7656&amp;p=85853#p85853"/>
<title type="html"><![CDATA[NESDEV1 Community Development Board, Initial Planning]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7656&amp;p=85853#p85853"><![CDATA[
Hi guys! I must appreciate your hardware knowledge. It's great when electronic systems can be explained in a step-by-step manner that makes it easy to understand.<br /> <img src="http://forums.nesdev.com/images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5074">davidchelso2011</a> — Thu Nov 03, 2011 9:54 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[infiniteneslives]]></name></author>
<updated>2011-06-07T11:22:13-07:00</updated>
<published>2011-06-07T11:22:13-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7656&amp;p=79375#p79375</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7656&amp;p=79375#p79375"/>
<title type="html"><![CDATA[NESDEV1 Community Development Board, Initial Planning]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7656&amp;p=79375#p79375"><![CDATA[
Yeah I do plan on learning it, I just hope I can leave myself enough time to over the summer with all my other projects going on.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4832">infiniteneslives</a> — Tue Jun 07, 2011 11:22 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[qbradq]]></name></author>
<updated>2011-06-07T04:13:32-07:00</updated>
<published>2011-06-07T04:13:32-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7656&amp;p=79356#p79356</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7656&amp;p=79356#p79356"/>
<title type="html"><![CDATA[NESDEV1 Community Development Board, Initial Planning]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7656&amp;p=79356#p79356"><![CDATA[
You could learn NES assembly <img src="http://forums.nesdev.com/images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /> It's not very hard compared to AVR assembly.<br /><br />But seriously, do what's best for your school project. That is much more important that what a bunch of nerds do in their spare time <img src="http://forums.nesdev.com/images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /> I'm sure we'll benefit either way.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3706">qbradq</a> — Tue Jun 07, 2011 4:13 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[infiniteneslives]]></name></author>
<updated>2011-06-06T22:23:29-07:00</updated>
<published>2011-06-06T22:23:29-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7656&amp;p=79346#p79346</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7656&amp;p=79346#p79346"/>
<title type="html"><![CDATA[NESDEV1 Community Development Board, Initial Planning]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7656&amp;p=79346#p79346"><![CDATA[
That is an interesting solution.  But I don't know if I see how it's much easier or cheaper.  But ease is relative to skills also.  <br /><br />We'd be trading a NES cord (from a $5 NES controller) for a $5 MCU.  However I happen to have a seemingly never ending supply of NES cords so the NES cord would coincidentally be "free."   <br /><br />We would also be losing any added functionality that could be gained from the MCU.   But if no one really planned to use it this isn't really a loss.  It would also be a LOT slower transferring everything serially at 2Mhz which means several minutes.  I don't know about how that would relate to you guys.  If I had to wait several minutes vise 10s of seconds every time I flash an MCU for a project I'm working, I would go crazy waiting for everything to program.<br /><br />EDIT: I have a feeling I may be wrong about the speed here...<br /><br />And I realize you're offering to code all the NES stuff, which would happen to be ALL the coding with this approach.  I guess that would make it "easy" for me but really I'm not doing the work.  I wouldn't necessarily have a problem with that but I'm willing to bet my advisers would <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" />  However even if they did I could still make a one off with an MCU.  I don't want you guys to make decisions on how to do a devcart based on whether or not it will satisfy what I'm doing for school.<br /><br />But I do agree with the NES doing the coding, and I think the whole idea of dual ported memory is beyond the scope of the project.  I've kinda been thinking that for awhile now even though I may not have been voicing that.  Perhaps I should explain better.  The only real reason I was leaving an out for the MCU to directly code the RAM was because it would remove the requirement for me to directly rely on you to code it up.  Not that I think you'd leave me out to dry or anything but If something were to happen it's not like I can just ditch the project once I'm relying on it for graduation.  So for that reason alone I would try to make my customer requirements as lenient as possible saying the That "the memories must be programmed in circuit."<br /><br />What I would really like to see is a design process something like this:<br /><br />1)Using the basic "unofficial" prototype I already have:<br />*Design an interface designed to communicate between the MCU and NES.  So the NES.  Then you (or anyone who'd like to pitch in) could start working on some code that would allow the memory to be programmed from an on screen selection.  That would have the MCU feed bytes to the NES that would then be writing all the RAM.<br /><br />To take care of the boot rom issue I think we could a chunk or all of the 32 KB of WRAM I already have.<br /><br /><br />*Physically set it up so that all the memory can be programmed by the MCU from the SD card.  The CPLD would be programmed from an external JTAG programmer.  This would allow me to completely test everything out without NES coding.  This would all happen with the NES off or with the reset button held.  I need to program everything somehow at first.  I would also construct the interface for your program to work.<br /><br />This also provides me an easy way to program the bootrom you write to the WRAM for the time being.<br /><br />+With some clearly defined and thoroughly designed interface we would be able to work in tandem.  You could code while I'm wiring up the prototype.<br /><br />I'm hoping this will allow us to better define what how the final interface will work thus making the "official" prototype better.  It will also give us the capability to debug hardware and code separately.  I could make sure my hardware works first before your code starts to use said hardware.<br /><br />2)  Now that we have the basics working we could do away with things like the MCU's ability to program all the RAM while holding reset with the second "official" prototype.  <br /><br />*Provide EEPROM on the board for boot rom so we don't have to hold reset at power up anymore.  We could allow this EEPROM firmware to be upgraded by the AVR while holding the RESET button on the console but I'm sure this could also be done by the NES as long as we didn't have self modifying code.  It would be safer to have the AVR do this though to prevent bricking.<br /><br />*Now we let the MCU program the CPLD. But this might be a little more tricky.  Perhaps the NES should do this I'm not sure right now what will be best.  I might be hard to program logic that's tied to it's own bus there may be bus conflict issues..  I think the powerpak gets away with this since it's an FPGA.   But we'll figure out what's best when we get closer to that point.<br /><br />*If people wanted to start writing demos that made use of the MCU we could test this stuff out and make any changes needed.  We might find a better way to program the bootrom or CPLD.<br /><br />3) Done with entire design start producing carts for whoever wants one.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4832">infiniteneslives</a> — Mon Jun 06, 2011 10:23 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[qbradq]]></name></author>
<updated>2011-06-06T18:36:40-07:00</updated>
<published>2011-06-06T18:36:40-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7656&amp;p=79338#p79338</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7656&amp;p=79338#p79338"/>
<title type="html"><![CDATA[NESDEV1 Community Development Board, Initial Planning]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7656&amp;p=79338#p79338"><![CDATA[
You know, the more I think about this the more I think Memblers had it right: let the NES take care of writing the memory. There is a pretty easy way to make a USB cable that will connect to the controller port on the NES for PC communications, and it would be pretty easy to do the same for an SD card.<br /><br />Now that I think about it, it's kind of odd to imbed an MCU in the cartridge if you've already got an MPU in the main system. By letting the CPU do all of the writing you also remove the need for muxing and all that.<br /><br />Seeings hows you are still in the requirements phase, let me run this scenario by you:<br /><br />1. Cartridge boots into a small boot ROM, bypassing the mapper and having access to CHR-RAM (so we only need one boot ROM chip).<br />2. This boot ROM provides a menu (I can write this) to either boot the current program, load a new program from PC link cable (or SD card peripheral), or load a program into RAM and execute it.<br />3. The boot loader will need a way to switch the mapper "on" so to speak. This can be done from a program stub running in main RAM, so the exact timing wouldn't be an issue.<br /><br />This would seem to satisfy my requirements, and might be a lot easier and cheaper maybe?<br /><br />Also, if you can make the boot ROM writable that would be pimp. I could just load a program into RAM to read data from the PC and overwrite the firmware.<br /><br />You could even use say a 32KB Flash ROM for the boot ROM and mirror the boot loader into four 8KB pages, and set the top two address lines with dip switches. This would give you some protection against bricking the cart.<br /><br />And you could easily replace a fixed-function mapper with a CPLD and provide an interface to it's JTAG port so the boot loader could load arbitrary code on it as well. I think this would over-complicate matters though. But hey, it's your project <img src="http://forums.nesdev.com/images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3706">qbradq</a> — Mon Jun 06, 2011 6:36 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[infiniteneslives]]></name></author>
<updated>2011-06-06T15:43:55-07:00</updated>
<published>2011-06-06T15:43:55-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7656&amp;p=79334#p79334</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7656&amp;p=79334#p79334"/>
<title type="html"><![CDATA[NESDEV1 Community Development Board, Initial Planning]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7656&amp;p=79334#p79334"><![CDATA[
<div class="quotetitle">lidnariq wrote:</div><div class="quotecontent"><br />A few random thoughts:<br /><br />What were you parameters for choosing these microcontrollers? at least on the PIC18, 64KB of program memory is huge, easily 20kloc. (Of course, it would be easy to stuff it full of e.g. wavetables)<br /><br />I'm pretty certain that the right way to do dual-ported memory on all older consoles is time multiplexing instead: you have the entire time while φ2 is low — 279ns.<br /></div><br /><br />There's no point to go lower.<br /><br />Stepping down to atmega32 is only 1K ram, and only saves us $1<br /><br />As far as time muxing goes, It'll require several massive muxes to prevent bus conflicts.  Not sure but I don't think they will be much cheaper but it's been awhile since I priced that option out.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />A lot of the 8bit AVR can be reliably overclocked to 30Mhz with reports of some models going as high as 40!<br /></div><br /><br />Yeah I figured you could clock quite a bit more out of them.  I'm getting the impression that no one will be planning to make use of it though.  It would be pretty simple and cheap to provide an over clocking option though if one desired.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4832">infiniteneslives</a> — Mon Jun 06, 2011 3:43 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[qbradq]]></name></author>
<updated>2011-06-06T11:17:00-07:00</updated>
<published>2011-06-06T11:17:00-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7656&amp;p=79313#p79313</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7656&amp;p=79313#p79313"/>
<title type="html"><![CDATA[NESDEV1 Community Development Board, Initial Planning]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7656&amp;p=79313#p79313"><![CDATA[
I am guessing pin count is a big concern here. I know that's what led me to the ATMega series when I was trying to do the hardware side of this.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3706">qbradq</a> — Mon Jun 06, 2011 11:17 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[lidnariq]]></name></author>
<updated>2011-06-06T11:05:54-07:00</updated>
<published>2011-06-06T11:05:54-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7656&amp;p=79312#p79312</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7656&amp;p=79312#p79312"/>
<title type="html"><![CDATA[NESDEV1 Community Development Board, Initial Planning]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7656&amp;p=79312#p79312"><![CDATA[
A few random thoughts:<br /><br />What were you parameters for choosing these microcontrollers? at least on the PIC18, 64KB of program memory is huge, easily 20kloc. (Of course, it would be easy to stuff it full of e.g. wavetables)<br /><br />I'm pretty certain that the right way to do dual-ported memory on all older consoles is time multiplexing instead: you have the entire time while φ2 is low — 279ns.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3512">lidnariq</a> — Mon Jun 06, 2011 11:05 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Hojo_Norem]]></name></author>
<updated>2011-06-06T11:00:38-07:00</updated>
<published>2011-06-06T11:00:38-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7656&amp;p=79310#p79310</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7656&amp;p=79310#p79310"/>
<title type="html"><![CDATA[NESDEV1 Community Development Board, Initial Planning]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7656&amp;p=79310#p79310"><![CDATA[
A lot of the 8bit AVR can be reliably overclocked to 30Mhz with reports of some models going as high as 40!<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3210">Hojo_Norem</a> — Mon Jun 06, 2011 11:00 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[infiniteneslives]]></name></author>
<updated>2011-06-06T04:34:21-07:00</updated>
<published>2011-06-06T04:34:21-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7656&amp;p=79286#p79286</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7656&amp;p=79286#p79286"/>
<title type="html"><![CDATA[NESDEV1 Community Development Board, Initial Planning]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7656&amp;p=79286#p79286"><![CDATA[
I looked more closely into the AVR MCU's that looked like the could fit the bill they are all obviously trade offs between price, io, ram, and speed.  The number in the name signifies program flash memory (128/64KB)  Prices are quantities of 1 and 25.<br /><br />atmega128A   16Mhz 4K ram 53io $5.80/9.23<br /><br />atmega1280   16Mhz 8K ram 86io $10.13/16.13<br /><br />atmega1284   20Mhz 16K ram 32io $5.04/8.03<br /><br />atmega640    16Mhz 8K ram 86io $7.40/11.80<br /><br />*atmega6450A   20Mhz 4K ram 69io $3.93/6.27<br /><br />The last one actually looks the most attractive to me.  But it all really depends what the final design of everything else comes down to on which will be best I think.  <br /><br />Looking further into parts it's becoming more and more apparent that the price will significantly depend on whether there are 25 people willing to buy.  We could add a lot of options for the same price or just offer a simple board for less.<br /><br />I checked SRAM prices too and found some suprises.<br /><br />8KB     SRAM $2.37/2.75<br />*32KB   SRAM $1.60/1.85<br />256KB SRAM $5.05/5.86<br />*512KB SRAM $5.12/6.25<br /><br />So 32KB was actually cheaper and smaller than 8KB and the difference between 256 and 512 for the PRG/CHR 'ROM' was negligible.<br /><br />So it looks like we'll end up with 32KB of WRAM and 512KB of PRG/CHR 'ROM'<br /><br /><br />May as well put these on the plate too:<br />XC95144XL-10TQG100C   144mcell 81ioCPLD  $5.55/5.80<br />*XC95288XL-10TQG144C   288mcell 117io CPLD  $13.45/14.70<br /><br />For fun I looked up some dual ported SRAM:<br />1KB   $5.87/8.47<br /><br />* I marked these with what I'm leaning towards for chips right now and the total is $29 for quanties of 25 and $35 for single quanties.<br /><br />This isn't everything obviously but it's the major silicon we're talking about.  All the extra stuff is going to put cost of parts close to $50 which will make it hard to ship for $50...  <br /><br />The only real place to make a significant dent in price is the CPLD by saving $8-9.  One option would be to step up from the TQ100 package to the TQ144 on the smaller CPLD for about $1.  Then people could pick their own.  It seems like the $8-9 is worth it to me to be able to use MMC3/FME-7 complexity level of mappers, when you're already laying down the money but you guys can be the judge of that.  It sounds like it might be overkill for most of you.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4832">infiniteneslives</a> — Mon Jun 06, 2011 4:34 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Memblers]]></name></author>
<updated>2011-06-05T23:12:23-07:00</updated>
<published>2011-06-05T23:12:23-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7656&amp;p=79282#p79282</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7656&amp;p=79282#p79282"/>
<title type="html"><![CDATA[NESDEV1 Community Development Board, Initial Planning]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7656&amp;p=79282#p79282"><![CDATA[
<div class="quotetitle">infiniteneslives wrote:</div><div class="quotecontent"><br />One thing I might be willing to entertain though if there is  enough board space and it's not too tricky is provide separate solder pads for a PIC if one chose.  But it would be up to you to write all the code we did in AVR.  So this may not really solve anything...<br /><br />I was planning to use the Atmega128 for 5V reasons it runs at 20Mhz but most instructions are 1-2 cycles.  I'm not sure how this compares though with the PIC.  Things are pipelined in the AVR so that may affect the comparison.<br /><br />As far as the expansion port goes, that sound and CAN stuff is a little over my head right now.  But I would be more than willing to entertain the idea once I knew what it was all about.<br /></div><br /><br />I looked up the Atmega128 specs and at 20Mhz it should be at least as fast as the old PIC18.  On PIC18 I managed to get 4 channels mixed at 22khz and 30khz pretty reasonably, so if the MCU-&gt;NES communication is decent, then it should be able to pull that off (tho I'm not sure how that interface can be done without adding a couple 8-bit latches and using a lot of MCU I/Os like you said).<br /><br />With the newest version of my synth, perhaps the (low frequency) C code could still work on the AVR, and the more intensive resampler/mixer done in assembly, but the difference in RAM size (4kB vs 128kB w/ PIC32) might require cutbacks.  But anyways, yeah some kind of sound will be possible (just not comparable to what I'll do with the PIC32, as it's a whole different beast compared to anything I've used before).<br /><br />Here's a description of what the expansion port pins would be for:<br /><ul><li>/CE and address lines - expansion port has the CPU data bus, so this allows devices on it to have addressable ports for NES to talk to connected device(s).  The expansion port also has the $4016/$4017 ports on it, so it may still be possible to do SPI communication with any cart lacking the EXP/CE.  Anyways, SPI mode would be required for Famicom, Top-loader, and NES clones - EXP/CE is more of a bonus feature for the front-loader NES.</li><li>CAN bus of course is networking for microcontrollers, it's provided because my synth will be using it already, then I figured since my future rev3 Squeedo (as an NES cart) will use the same PIC32 that I'd go ahead and link those 2 MCUs up directly.  One thing I was thinking about, was that if one of these MCUs can get internet access, then with the CAN bus maybe all of them could use it.  This is pretty much the "expansion port on the expansion port", so it remains to be seen what will be done with it (other than my plans with the synth).</li><li>Audio input - You would have to make a DAC on the cart, the audio will be mixed in with the NES's internal sound (expansion port device or audio mod is required, front-loader only).</li></ul><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=10">Memblers</a> — Sun Jun 05, 2011 11:12 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[infiniteneslives]]></name></author>
<updated>2011-06-05T17:49:45-07:00</updated>
<published>2011-06-05T17:49:45-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7656&amp;p=79270#p79270</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7656&amp;p=79270#p79270"/>
<title type="html"><![CDATA[NESDEV1 Community Development Board, Initial Planning]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7656&amp;p=79270#p79270"><![CDATA[
<div class="quotetitle">marshallh wrote:</div><div class="quotecontent"><br />both altera MAX3000A (5v tolerant) and MAXII(no5 5v tolerant) are only rated for 100 erasures.<br /></div><br /><br />Best steer clear from those then!  I didn't realize there were ones out there rated so low.  I can see why you might not care though if it was something you only had to worry about upgrading firmware or something and could reduce the cost.<br /><br />I'll be sure to double check for something like this if we don't go with the Xilinx ones we're currently looking at.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4832">infiniteneslives</a> — Sun Jun 05, 2011 5:49 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[marshallh]]></name></author>
<updated>2011-06-05T17:34:34-07:00</updated>
<published>2011-06-05T17:34:34-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7656&amp;p=79268#p79268</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7656&amp;p=79268#p79268"/>
<title type="html"><![CDATA[NESDEV1 Community Development Board, Initial Planning]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7656&amp;p=79268#p79268"><![CDATA[
both altera MAX3000A (5v tolerant) and MAXII(no5 5v tolerant) are only rated for 100 erasures.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3389">marshallh</a> — Sun Jun 05, 2011 5:34 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[infiniteneslives]]></name></author>
<updated>2011-06-05T14:02:10-07:00</updated>
<published>2011-06-05T14:02:10-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7656&amp;p=79262#p79262</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7656&amp;p=79262#p79262"/>
<title type="html"><![CDATA[NESDEV1 Community Development Board, Initial Planning]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7656&amp;p=79262#p79262"><![CDATA[
This is the type of feedback I'm looking for.  Keep in mind as far as my project is concerned we're still brainstorming here.<br /><br />I've basically been putting up what ideas I have, and I'm not going to get my feelings hurt if people shoot them down.  Especially if a lot of people shoot it down then they obviously deserve to die.  <br /><br />Realistically we've got the whole summer to hash things out, hopefully everyone doesn't get tired of talking and lose hope.  Because as long as you guys support the project I'll be doing it.  There's still a good chance I'd do it anyways because I've got to do something and this is the best project I think I can find.<br /><br />As far as the CPLD write cycle limitation is concerned the chips are rated at over 10,000 write cycles.  <br /><br />Really the choice of CPLD and FPGA is a trade off of several things.  I went through the pros and cons here:  <a href="http://nesdev.com/bbs/viewtopic.php?t=7796&amp;highlight=" class="postlink">http://nesdev.com/bbs/viewtopic.php?t=7796&amp;highlight=</a>  If anyone is unfamiliar.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />kyuusaku wrote:<br />Most CPLD can only be reprogrammed a few thousand times.<br /><br />tokumaru:<br />This is the biggest flaw in this cart's design I think. I wouldn't buy it for this very reason, I don't like hardware with expiration dates.<br /></div><br /><br />If it's a devcart I don't see someone actually getting anywhere close to the 10,000 cycle write limit.  If it were a powerpak clone it might be a different story but that's not what we're going for here.  For the most part once you got your mapper set up you wouldn't have to reprogram the CPLD again until you decided the to swap out the mapper.  I did some quick calculations:<br /><br />*Some one who used this thing for 20 years:<br />      Could reprogram it more than 2 times a day every single day.<br /><br />*Some one who programmed the CPLD 100 times for every game they developed:<br />      Could develop 100 games<br /><br />*Someone who programmed it four times a week:<br />      Could use it for 50 years<br /><br />*Someone who used it in place of a powerpak and played 20 different games a week:<br />      Could use it for 10 years.<br /><br />I think you'll agree these estimates are VERY conservative and I know the idea of something dieing from over use isn't fun to think about.  But If someone used this thing enough times to wear out the EEPROM should deserve an award.  And if they were really that serious about this thing they will probably want to upgrade to something more capable before they get anywhere close to wearing it out.  Not to mention it will probably last a lot longer than 10,000 cycles.<br /><br />CPLDs are simpler and cheaper which seem to be main goals of this project and that's why I've been leaning towards them.  Also the idea is someone could easily take this devboard replicate the parts of the design they needed for production.  A FPGA simply is NOT a production cart option for several reasons.  Your choices would basically be to use discrete logic for simple mappers or a CPLD.  Just incase it's not obvious to everyone you would only have to program the CPLD once when assembling the cart.  <br /><br />As far as the MCU goes, I think it's going to be difficult to not include one of some sort for communication via USB or SD card.  Now the idea of sound capabilities and all kinds of other craziness is probably doubtful.  But I wanted to bring it up.  Because if someone said "Oh, if you provided this one simple feature I could do all this kind of stuff with it."  And if that feature was something as simple as wire connections or a super cheap register or something I would like to know.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4832">infiniteneslives</a> — Sun Jun 05, 2011 2:02 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2011-06-05T10:54:28-07:00</updated>
<published>2011-06-05T10:54:28-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7656&amp;p=79257#p79257</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7656&amp;p=79257#p79257"/>
<title type="html"><![CDATA[NESDEV1 Community Development Board, Initial Planning]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7656&amp;p=79257#p79257"><![CDATA[
<div class="quotetitle">kyuusaku wrote:</div><div class="quotecontent"><br />Most CPLD can only be reprogrammed a few thousand times.<br /></div><br />This is the biggest flaw in this cart's design I think. I wouldn't buy it for this very reason, I don't like hardware with expiration dates.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Sun Jun 05, 2011 10:54 am</p><hr />
]]></content>
</entry>
</feed>