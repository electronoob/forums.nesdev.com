<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=10&amp;t=4689" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2009-02-06T03:19:55-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=10&amp;t=4689</id>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2009-02-06T03:19:55-07:00</updated>
<published>2009-02-06T03:19:55-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4689&amp;p=42952#p42952</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4689&amp;p=42952#p42952"/>
<title type="html"><![CDATA[arrangement of pattern tables in use by sprites]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4689&amp;p=42952#p42952"><![CDATA[
<div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Yeah, I actually found that signed numbers are great because they're so universal, but dealing with them is a pain. For example, comparing two signed numbers is still a mystery to me.<br /></div><br />I use signed numbers for relative coordinates, but I don't need to compare them so it's safe. If you need to compare them don't use CMP but SBC. See the sign of the difference and make your conclusions.<br /><br />I use the center of a sprite for it's reference point and I am satisfacted that way, altough it really depend on the genre of the game.<br /><br />Tokumaru for the high byte you might come up with something like that :<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent"> lda RelativePos<br /> pha<br /> clc<br /> adc LowPos<br /> sta LowSpritePos<br /> pla<br /> bmi +<br /> lda #$00<br /> .db $2c   ;BIT opcode &#40;carry untouched&#41;<br />+ lda #$ff<br />  adc HighPos<br />  sta HighSpritePos</div><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Fri Feb 06, 2009 3:19 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Celius]]></name></author>
<updated>2009-02-05T23:34:00-07:00</updated>
<published>2009-02-05T23:34:00-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4689&amp;p=42944#p42944</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4689&amp;p=42944#p42944"/>
<title type="html"><![CDATA[arrangement of pattern tables in use by sprites]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4689&amp;p=42944#p42944"><![CDATA[
I'm glad I could help <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" /> .<br /><br />Yeah, I actually found that signed numbers are great because they're so universal, but dealing with them is a pain. For example, comparing two signed numbers is still a mystery to me. I don't really even care to know how to at the moment, because I've got a quick fix:<br /><br />lda VarA<br />eor #$80<br />sta Temp<br />lda VarB<br />eor #$80<br />cmp Temp<br /><br />Though that's pretty slow, I seem to remember a legitimate signed comparison not being such an easy deal either.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=138">Celius</a> — Thu Feb 05, 2009 11:34 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2009-02-05T22:21:38-07:00</updated>
<published>2009-02-05T22:21:38-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4689&amp;p=42940#p42940</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4689&amp;p=42940#p42940"/>
<title type="html"><![CDATA[arrangement of pattern tables in use by sprites]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4689&amp;p=42940#p42940"><![CDATA[
<div class="quotetitle">Celius wrote:</div><div class="quotecontent"><br />Why not just move the reference point so all sprites are beyond it?<br /></div><br />This is an interesting idea! I'm not exactly dissatisfied with my current solution, but I'll keep yours in mind, just in case I decide I need more CPU time. Thanks for the idea.<br /><br />I just realized that moving the reference point can be just a matter of interpreting the relative coordinates differently. Let me explain. With signed coordinates, I could give the sprites coordinates ranging from -128 to +127, relative to the reference point. Now say that in order to keep my coordinates always positive, I move the reference point to (-128, -128) relative to the original reference point. So now the relative coordinates (0, 0) will be at the same location as old coordinates (-128, -128). 128 is the new 0, and 255 is the new 127.<br /><br />This means that this scheme is just as versatile as the old one, and once the relative coordinates are all unsigned, the additions will be much faster, because the high byte is the same for all coordinates and can be calculated at the start of the routine. And since the referent point is always moved by the same amount (-128, -128) there is no need to store any extra coordinates in ROM. This is pretty simple, and might actually improve the speed a lot.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Thu Feb 05, 2009 10:21 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Celius]]></name></author>
<updated>2009-02-05T21:34:35-07:00</updated>
<published>2009-02-05T21:34:35-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4689&amp;p=42939#p42939</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4689&amp;p=42939#p42939"/>
<title type="html"><![CDATA[arrangement of pattern tables in use by sprites]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4689&amp;p=42939#p42939"><![CDATA[
Yeah, all of my metasprites are defined based off of a top-left coordinate. I honestly think this works better for the sake of speed. But you say you want to be able to put sprites all around the reference point. Why not just move the reference point so all sprites are beyond it?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=138">Celius</a> — Thu Feb 05, 2009 9:34 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2009-02-05T21:13:08-07:00</updated>
<published>2009-02-05T21:13:08-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4689&amp;p=42938#p42938</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4689&amp;p=42938#p42938"/>
<title type="html"><![CDATA[arrangement of pattern tables in use by sprites]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4689&amp;p=42938#p42938"><![CDATA[
<div class="quotetitle">Celius wrote:</div><div class="quotecontent"><br />Sorry if this doesn't at all answer your question.<br /></div><br />This answers it. I was just unaware that your relative coordinates were unsigned. Mine are signed, so I have to calculate the high byte of each one, meaning I can't do it just once at the start.<br /><br />My coordinates are signed because I want to be able to put sprites all around the reference coordinate. You probably have the reference coordinate at the top left corner of the sprite, as that is the only way I can think it would be possible to have unsigned relative coordinates, right?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Thu Feb 05, 2009 9:13 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Celius]]></name></author>
<updated>2009-02-05T20:52:55-07:00</updated>
<published>2009-02-05T20:52:55-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4689&amp;p=42936#p42936</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4689&amp;p=42936#p42936"/>
<title type="html"><![CDATA[arrangement of pattern tables in use by sprites]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4689&amp;p=42936#p42936"><![CDATA[
I'm sorry, I don't think I quite understand what you're asking. All of my relative coordinates are 8 bits in size, and unsigned. My current sprite drawing engine uses a temporary variable as the "high" byte of relativity in case the sprites are flipped, and I set all of this up before drawing. This is either $FF or $00 ($FF if flipped, $00 if not).<br /><br />So I'll take that value, EOR the relative X coordinate with it and add it as the "high" coordinate. If the value is $00, it'll add $00 as the relative high, eoring the unsigned relative X coordinate by 0, thus doing nothing to the low part. If the value is $FF, it'll add that as the relative high, and invert the low value.<br /><br />I set it up like this so I wouldn't have to do really any checks in the actual drawing code, but the initialization took like 200 cycles and I ended up adding all sorts of values for the sake of the code being universal.<br /><br />I'm going to rewrite my code to have 4 different routines that will each be smaller, simpler, and faster. Each one corresponds with the flip status of an object:<br /><br />00 - No flipping<br />01 - Horizontal flipping<br />10 - Vertical flipping<br />11 - both vertical and horizontal flipping<br /><br />So in the one without flipping, I can just add the coordinates as is. In the horizontal one, I will do an SBC instead of ADC for the X coordinates. For the vertical one, I'll do SBC instead of ADC for Y coords, and for the last one I'll do SBC instead of ADC for both.<br /><br />In that case, I really won't need a high byte for the relative X. Well, it may be an immediate value like:<br /><br />clc<br />lda XCoordLow<br />adc RelativeX<br />sta XCoordLow<br />lda XCoordHigh<br />adc #0<br />sta XCoordHigh<br /><br />Sorry if this doesn't at all answer your question. Please elaborate if it doesn't.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=138">Celius</a> — Thu Feb 05, 2009 8:52 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2009-02-05T19:56:34-07:00</updated>
<published>2009-02-05T19:56:34-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4689&amp;p=42930#p42930</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4689&amp;p=42930#p42930"/>
<title type="html"><![CDATA[arrangement of pattern tables in use by sprites]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4689&amp;p=42930#p42930"><![CDATA[
Celius, I'm curious: How do you handle the high byte of the relative coordinates? I mean, I've seen your EOR trick to invert the low byte, but since the relative coordinate is added to a 16-bit number, it has to be extended to 16 bits as well (the high byte is either $00 or $FF).<br /><br />Obviously, the high bytes of the relative coordinates are not stored in tables, because it'd be a waste to store all those $00's and $FF's, so I generate them based on bit 7 of the coordinates. The fastest way I found to generate it is the following:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">    lda #$ff<br />    cmp coord<br />    adc #$80<br /></div><br />What makes this process is slow is that I have to do this before the addition (because the carry is used), so the result must be stored in a temp location, and other small details. So I was wondering if you had found a better way to deal with this?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Thu Feb 05, 2009 7:56 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Celius]]></name></author>
<updated>2009-01-12T04:23:45-07:00</updated>
<published>2009-01-12T04:23:45-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4689&amp;p=41766#p41766</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4689&amp;p=41766#p41766"/>
<title type="html"><![CDATA[arrangement of pattern tables in use by sprites]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4689&amp;p=41766#p41766"><![CDATA[
I guess it would save time though to seperate them, because you wouldn't have to do any eoring for drawing metasprites. You could just have one routine that does all adding for relative coordinates, and another that does subtracting for when it's flipped. This would take up a little more ROM space, but maybe a lot less time.<br /><br />Oh, and by the way, it's 5:20 AM here. Usually my "late" is someone else's "early" (Actually, my dad just woke up, and I'm just going to bed, haha).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=138">Celius</a> — Mon Jan 12, 2009 4:23 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2009-01-12T04:07:10-07:00</updated>
<published>2009-01-12T04:07:10-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4689&amp;p=41765#p41765</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4689&amp;p=41765#p41765"/>
<title type="html"><![CDATA[arrangement of pattern tables in use by sprites]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4689&amp;p=41765#p41765"><![CDATA[
<div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />It's a little late and I can't quite follow the routine without looking at it some more, but it looks like if you separated flipped and unflipped sprite drawing, along with having 8 bit coords, you would be able to have really time saving routines. Though it might take a little more space.<br /></div><br />It's fun you mention it's a bit late, because here it's 12 AM.<br /><br />And I didn't really separate flipped and unflipped sprites. If the sprite is flipped just use a eor #$ff and for some reason I substract 7 afterwards. I guess it's what worked best.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Mon Jan 12, 2009 4:07 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Celius]]></name></author>
<updated>2009-01-12T03:42:51-07:00</updated>
<published>2009-01-12T03:42:51-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4689&amp;p=41764#p41764</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4689&amp;p=41764#p41764"/>
<title type="html"><![CDATA[arrangement of pattern tables in use by sprites]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4689&amp;p=41764#p41764"><![CDATA[
Oh wow, that was really misleading sorry. I meant to say that it's a life saver to handle flipping for animations if you have tons of different animations. I didn't mean it's good to use tons of different animations to handle flipping. Sorry about that.<br /><br />It's a little late and I can't quite follow the routine without looking at it some more, but it looks like if you separated flipped and unflipped sprite drawing, along with having 8 bit coords, you would be able to have really time saving routines. Though it might take a little more space.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=138">Celius</a> — Mon Jan 12, 2009 3:42 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2009-01-12T03:29:49-07:00</updated>
<published>2009-01-12T03:29:49-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4689&amp;p=41762#p41762</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4689&amp;p=41762#p41762"/>
<title type="html"><![CDATA[arrangement of pattern tables in use by sprites]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4689&amp;p=41762#p41762"><![CDATA[
<div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />It can prove to be a big life saver if you have tons of different animations to handle flipping.<br /></div><br />Maybe life saver, but ROM waster for sure. In my game I don't want to waste any ROM so I do automatic flipping horizontally (but not vertically as you'd hardly flip whole sprites vertically anyway). I just use a EOR instruction to do this, so that if the sprite is already flipped horizontally in the definitions, it's not flipped finally. I had a little trick to compute the horizontal position, but it works 100% fine. I belive I had put much tought in it back then.<br /><br />I will share my routine too and you guys will say what you think about it. It only uses 8-bit coordinates toug. Oh yeah I use another system which allow sprites to be automatically disabled when in a certain area, this is usefull when drawing textboxes and you don't want sprites to be visible in them (I call this sprite clipping).<br /><br />In my game this routine is copied into RAM, and the instructions in comments are regularly exchanged with their uncommented counterparts above them to get sprite cycling (the metasprites is copied either forwards or backwards). Having 2 versions of the routine in ROM would have been possible but more wasteful. I don't know if I could do anything better, if anyone has a great idea please share it.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">SetupSpriteTable<br />   sty PointerH<br />   sta PointerL<br />   ldy #$00<br />   lda &#91;Pointer&#93;,Y<br />   beq _done      ;Make sure to skip if the sprite is transparent<br /><br />   sta SpriteCtr      ;This is the # of sprites in this frame<br />   sbc #$03<br />   nop<br />;   asl A<br />;   asl A<br />;   sbc #$03<br />;   tay<br />_loop<br />   lda SpriteDMAFlag      ;Make sure that the buffer isn't already full<br />   bne _done<br /><br />   iny<br />   lda &#91;Pointer&#93;,Y      ;$$<br />   clc<br />   adc SpritePosV<br />   sta SpriteBuffer.PosV.w,X   ;Set the vertical position<br /><br />   iny<br />   lda &#91;Pointer&#93;,Y      ;$$   ;Tile number<br />   sta SpriteBuffer.TileNmr.w,X<br /><br />   iny<br />   lda SpriteHFlipFlag<br />   lsr A<br />   and #$40<br />   eor &#91;Pointer&#93;,Y      ;$$   ;Read attributes<br />   eor SpriteGlobalColor      ;Main palette adder<br />   sta SpriteBuffer.Palette.w,X<br /><br />   iny<br />   lda &#91;Pointer&#93;,Y      ;$$   ;Add relative horizontal offset<br />   bit SpriteHFlipFlag<br />   bpl +<br />   eor #$ff<br />   sec<br />   sbc #$07<br />+   cmp #$80<br />   bcc +<br />   clc<br />   adc SpritePosH<br />   bcc _skip         ;Skip if underflow if offset is negative<br />   bcs _noskip<br />+   adc SpritePosH<br />   bcs _skip         ;If positive ofset skip if overflow<br />_noskip<br />   sta SpriteBuffer.PosH.w,X   ;Store definite H position<br /><br />   bit SpriteClippingFlag<br />   bpl _noClipping         ;Check if there is clipping<br /><br />   cmp SpriteClippingHMin<br />   bcc _noClipping<br />   cmp SpriteClippingHMax<br />   bcs _noClipping         ;Check if the sprite is horizontaly in the clipped window<br /><br />   lda SpriteBuffer.PosV.w,X<br />   cmp SpriteClippingVMin<br />   bcc _noClipping         ;Check if the sprite is vertically in the clipped window<br />   cmp SpriteClippingVMax<br />   bcc _skip<br /><br />_noClipping<br />   inx<br />   inx<br />   inx<br />   inx            ;Process to next sprite in memory index<br />   bne _skip         ;Avoid overflow<br />   inc SpriteDMAFlag      ;This will be set if the buffer is full<br />_skip<br />   tya<br />   sec<br />   dec SpriteCtr<br />   nop<br />   bne _loop<br />;   tya<br />;   sec<br />;   sbc #$08<br />;   tay<br />;   bcs _loop<br />_done<br />   rts</div><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Mon Jan 12, 2009 3:29 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Celius]]></name></author>
<updated>2009-01-11T22:34:43-07:00</updated>
<published>2009-01-11T22:34:43-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4689&amp;p=41752#p41752</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4689&amp;p=41752#p41752"/>
<title type="html"><![CDATA[arrangement of pattern tables in use by sprites]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4689&amp;p=41752#p41752"><![CDATA[
It can prove to be a big life saver if you have tons of different animations to handle flipping.<br /><br />Oh, but one thing I will say is that it might indeed be a good idea to handle flipping with different routines. I think in my routine, I use a ZP variable for a flip byte, so I will draw something like this:<br /><br />lda SpriteRelativeX<br />eor FlipX<br />clc<br />adc MetaSpriteXCoordLow<br />...<br /><br />Where if FlipX is 0, the sprite will be drawn as is, but if FlipX is $FF, it will like Tokumaru does, invert the value so that values are multiplied by -1.<br /><br />If you really wanted to flip a sprite with separate routines, you could do away with signed numbers all together. So in the unflipped drawing you'd do:<br /><br />clc<br />lda SpriteRelativeX<br />adc MetaSpriteXLow<br /><br />and in the other you'd do<br /><br />sec<br />lda MetaSpriteXLow<br />sbc SpriteRelativeX<br /><br />So you do additions in one, and subtractions in the other. Though using signed numbers makes for more universal code, it might end up saving you time to do straight up addition and subtraction of positive values.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=138">Celius</a> — Sun Jan 11, 2009 10:34 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Memblers]]></name></author>
<updated>2009-01-11T21:04:41-07:00</updated>
<published>2009-01-11T21:04:41-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4689&amp;p=41750#p41750</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4689&amp;p=41750#p41750"/>
<title type="html"><![CDATA[arrangement of pattern tables in use by sprites]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4689&amp;p=41750#p41750"><![CDATA[
I didn't like the idea of flipping sprites, when I had that situation I just made walking the other way to be a separate animation.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=10">Memblers</a> — Sun Jan 11, 2009 9:04 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2009-01-11T20:28:31-07:00</updated>
<published>2009-01-11T20:28:31-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4689&amp;p=41747#p41747</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4689&amp;p=41747#p41747"/>
<title type="html"><![CDATA[arrangement of pattern tables in use by sprites]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4689&amp;p=41747#p41747"><![CDATA[
<div class="quotetitle">UncleSporky wrote:</div><div class="quotecontent"><br />Now obviously, the biggest problem with this is that it does not take into account flipping the whole sprite, rather than just individual tiles!  If you try to flip it you get a mess.  How would I start fixing this?  It's a pretty big problem.  The main issue is deciding which tiles switch places; in 2x2, you just swap them side to side, but in 3x3 you preserve the center one a swap the far sides, and it gets more complex as you go.<br /></div><br />This is indeed a big problem, and, IMO, the main reason why drawing metasprites is slow. In my routine, that uses relative coordinates for each hardware sprite, I just invert the coordinate of each sprite if the metasprite is flipped (4 becomes -4). Of course I have to account for the fact that sprite coordinates represent the top left corner of the picture, but ideally I'd like them to represent the top right corner when they are flipped horizontally, and since that's just not possible, I fix the origin coordinate before drawing the individual sprites in case of flipping to compensate for that.<br /><br />You did present a good idea though, of using different routines for the different flipping states. If you had 4 different sprite rendering routines, you'd get the maximum speed possible out of them. Many conditional branches within a repeated operation (such as outputting sprites) are big performance killers.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Sun Jan 11, 2009 8:28 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2009-01-11T20:05:16-07:00</updated>
<published>2009-01-11T20:05:16-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4689&amp;p=41744#p41744</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4689&amp;p=41744#p41744"/>
<title type="html"><![CDATA[arrangement of pattern tables in use by sprites]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4689&amp;p=41744#p41744"><![CDATA[
Multiplication by 4 is dead easy on a 6502. Replace this:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">  tay<br />  lda times_four,y</div><br />with this:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">  asl a<br />  asl a</div><br />to save two bytes and two cycles.<br /><br />As for flipping, that's more a matter of turning x+=8 into x+=248 when you see attribute 2 bit 6 turned on; most of the rest of the code stays the same.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Sun Jan 11, 2009 8:05 pm</p><hr />
]]></content>
</entry>
</feed>