<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=20&amp;t=12120" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2014-12-12T14:02:23-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=20&amp;t=12120</id>
<entry>
<author><name><![CDATA[nitro2k01]]></name></author>
<updated>2014-12-12T14:02:23-07:00</updated>
<published>2014-12-12T14:02:23-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12120&amp;p=137514#p137514</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12120&amp;p=137514#p137514"/>
<title type="html"><![CDATA[Re: The boot ROM of the GB clone &quot;Game Fighter&quot; has been dum]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12120&amp;p=137514#p137514"><![CDATA[
<div class="quotetitle">mikejmoffitt wrote:</div><div class="quotecontent"><br />I thought one of your earlier tests revealed a minor graphical problem, something to do with timing for writes during a scanline.<br /><br />Does it output actual 2bpp greyscale, and the LCD controller does the flicker-greyscale, or does it output a different signal?<br /><br />You might be able to swap out D-pad parts with a DMG.<br /></div>The problem was regarding palette changes during the drawing of a scanline. This caused problems in Prehistorik Man and an artificial test ROM, only so far. Likely because the added circuitry triggers on the positive edge of the pixel clock instead instead of the negative or vice versa. I would expect the data coming out of the CPU to be identical to that coming out of a DMG, and that the mess-up happens later, but that remains to be confirmed.<br /><br />And no, DMG parts don't fit. The reason is that the distance to the PCB is a few mm longer than on a DMG, and so are the buttons and the guides for the buttons. DMG buttons would otherwise fit if the case was modded, but I don't want to do destroy a unique piece like this. Maybe I should try to hunt down another one, and completely redesign the internals of one of them. :p<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4548">nitro2k01</a> — Fri Dec 12, 2014 2:02 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[mikejmoffitt]]></name></author>
<updated>2014-12-12T09:34:15-07:00</updated>
<published>2014-12-12T09:34:15-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12120&amp;p=137510#p137510</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12120&amp;p=137510#p137510"/>
<title type="html"><![CDATA[Re: The boot ROM of the GB clone &quot;Game Fighter&quot; has been dum]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12120&amp;p=137510#p137510"><![CDATA[
<div class="quotetitle">nitro2k01 wrote:</div><div class="quotecontent"><br /><div class="quotetitle">mikejmoffitt wrote:</div><div class="quotecontent">That's such a neat clone! I've hoped I could find one for a long time and swap out the CPU with a proper DMG one. It would be a great LSDJ machine with that shape to it.<br /></div><br />You mean to put a DMG CPU in this thing? No point. Iäve found the CPU to be functionally equivalent apart form the boot ROM so far. Which is an advantage since it boots instantly. I'd much sooner put a proper voltage regulator and audio amplifier in it (or prosound it). The thing is powered directly by the batteries, and the audio amplifier is discrete and complete crap (pretty much clips one side of the waveform). However, I don't really like the feel of the D-pad and select/start group of the GF.</div><br />I thought one of your earlier tests revealed a minor graphical problem, something to do with timing for writes during a scanline.<br /><br />Does it output actual 2bpp greyscale, and the LCD controller does the flicker-greyscale, or does it output a different signal?<br /><br />You might be able to swap out D-pad parts with a DMG.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5314">mikejmoffitt</a> — Fri Dec 12, 2014 9:34 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[nitro2k01]]></name></author>
<updated>2014-12-11T09:57:00-07:00</updated>
<published>2014-12-11T09:57:00-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12120&amp;p=137483#p137483</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12120&amp;p=137483#p137483"/>
<title type="html"><![CDATA[Re: The boot ROM of the GB clone &quot;Game Fighter&quot; has been dum]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12120&amp;p=137483#p137483"><![CDATA[
<div class="quotetitle">mikejmoffitt wrote:</div><div class="quotecontent"><br />That's such a neat clone! I've hoped I could find one for a long time and swap out the CPU with a proper DMG one. It would be a great LSDJ machine with that shape to it.<br /></div><br />You mean to put a DMG CPU in this thing? No point. Iäve found the CPU to be functionally equivalent apart form the boot ROM so far. Which is an advantage since it boots instantly. I'd much sooner put a proper voltage regulator and audio amplifier in it (or prosound it). The thing is powered directly by the batteries, and the audio amplifier is discrete and complete crap (pretty much clips one side of the waveform). However, I don't really like the feel of the D-pad and select/start group of the GF.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4548">nitro2k01</a> — Thu Dec 11, 2014 9:57 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[mikejmoffitt]]></name></author>
<updated>2014-12-11T09:44:53-07:00</updated>
<published>2014-12-11T09:44:53-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12120&amp;p=137482#p137482</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12120&amp;p=137482#p137482"/>
<title type="html"><![CDATA[Re: The boot ROM of the GB clone &quot;Game Fighter&quot; has been dum]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12120&amp;p=137482#p137482"><![CDATA[
That's such a neat clone! I've hoped I could find one for a long time and swap out the CPU with a proper DMG one. It would be a great LSDJ machine with that shape to it.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5314">mikejmoffitt</a> — Thu Dec 11, 2014 9:44 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[nitro2k01]]></name></author>
<updated>2014-12-10T08:26:42-07:00</updated>
<published>2014-12-10T08:26:42-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12120&amp;p=137453#p137453</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12120&amp;p=137453#p137453"/>
<title type="html"><![CDATA[The boot ROM of the GB clone &quot;Game Fighter&quot; has been dumped.]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12120&amp;p=137453#p137453"><![CDATA[
Blog spam!<br /><br /><!-- m --><a class="postlink" href="http://blog.gg8.se/wordpress/2014/12/09/dumping-the-boot-rom-of-the-gameboy-clone-game-fighter/">http://blog.gg8.se/wordpress/2014/12/09 ... e-fighter/</a><!-- m --><br /><br />tl;dr version: I gained access to the boot ROM of a Gameboy clone called Game fighter using a clock glitching method invented by BennVenn. (I've also done a teardown of the same unit.) Solder a wire to one side of the clock crystal and brush the other side of the wire against ground. This corrupts PC and/or other registers. Do this before the boot ROM shuts itself off and catch execution of the CPU, and you can access the ROM and dump it. <br /><br />The interesting part is that the boot ROM checks for another logo apart from the Nintendo logo, but only half of that logo is present in the boot ROM. (The same is true for the Nintendo logo, it only checks half the logo.) It may say RIS or KIS or maybe K13 or R13. The bottom half of the logo is shown here. (Half the Nintendo logo is also visible because I just copied the half over the logo section of a ROM to be able to convert it to an image. It would of course never appear as it does in the image, in real life.) If anyone has a clue what the logo might be, it might give clues about who made this clone.<br /><br /><img src="http://blog.gg8.se/images/nintendologo-wtf.bmp" alt="Image" /><br /><br />The boot ROM is also attached to this post, and you can read my disassembly below.<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">        ld   sp,$FFFE           ;  0000  Set up the stack pointer.<br /><br />        ; Clear VRAM.<br />        xor  a                  ;  0003<br />        ld   hl,$9FFF           ;  0004<br />Addr_0007:<br />        ldd  &#91;hl&#93;,a             ;  0007<br />        bit  7,h                ;  0008<br />        jr   nz,Addr_0007       ;  000A<br /><br />        ; Set up sound.<br />        ld   hl,$FF26           ;  000C<br />        ld   c,$11              ;  000F<br />        ld   a,$80              ;  0011<br />        ldd  &#91;hl&#93;,a             ;  0013  &#91;$FF26&#93; = $80 Turn on sound<br /><br />        ld   &#91;$ff00+c&#93;,a        ;  0014  &#91;$FF11&#93; = $80 Channel 1 wave duty<br />        inc  c                  ;  0015<br />        ld   a,$F3              ;  0016<br />        ld   &#91;$ff00+c&#93;,a        ;  0018  &#91;$FF12&#93; = $F3 Channel 1 envelope<br />        ldd  &#91;hl&#93;,a             ;  0019  &#91;$FF25&#93; = $F3 Channel routing<br />        inc  c                  ;  001A<br />        ld   a,$C1              ;  001B<br />        ld   &#91;$ff00+c&#93;,a        ;  001D  &#91;$FF13&#93; = $C1 Channel 1 low frequency byte<br />        ld   a,$77              ;  001E <br />        ld   &#91;hl&#93;,a             ;  0020  &#91;$FF24&#93; = $77 Master volume<br />        <br />        ; Set up graphics.<br />        ld   a,$FC              ;  0021<br />        ldh  &#91;$FF47&#93;,a          ;  0023  &#91;$FF47&#93; = $FC BG palette<br />        ld   a,$91              ;  0025<br />        ldh  &#91;$FF40&#93;,a          ;  0027  &#91;$FF40&#93; = $91 Turn on LCD<br /><br />        ; Compare the second half of the logo in the header against<br />        ; the second half of the Nintendo logo stored in the boot ROM.<br />        ld   de,Addr_0043       ;  0029<br />        call Addr_0073          ;  002C<br />        cp   a,$34              ;  002F  Will return $34 if successful.<br />        jr   nz,Addr_0036       ;  0031  If not, jump to a second compare operation.<br />        jp   Addr_00FC          ;  0033<br /><br />        ; Compare the second half of the logo in the header against<br />        ; the second half of the mystery logo stored in the boot ROM.<br />Addr_0036:<br />        ld   de,Addr_005B       ;  0036<br />        call Addr_0073          ;  0039<br />        cp   a,$34              ;  003C  Will return $34 if successful.<br />Addr_003E:<br />        jr   nz,Addr_003E       ;  003E  If not, get stuck in an endless loop.<br />        jp   Addr_00FC          ;  0040<br /><br />        ; Second half of the Nintendo logo, $18 bytes<br />Addr_0043:<br />        db   $DC, $CC, $6E, $E6, $DD, $DD, $D9, $99<br />        db   $BB, $BB, $67, $63, $6E, $0E, $EC, $CC<br />        db   $DD, $DC, $99, $9F, $BB, $B9, $33, $3E<br /><br />        ; Second half of mysterious RIS or KIS logo, $18 bytes<br />Addr_005B:<br />        db   $00, $00, $00, $00, $76, $66, $C6, $31<br />        db   $00, $19, $66, $FF, $01, $88, $38, $C7<br />        db   $C6, $C8, $00, $00, $00, $00, $00, $00<br /><br />        ; Subroutine: Compare the cartridge header's logo against <br />        ; a given memory location<br />Addr_0073:<br />        ld   hl,$011C           ;  0073  Start comparing halfway into the logo<br />Addr_0076:<br />        ld   a,&#91;de&#93;             ;  0076<br />        inc  de                 ;  0077<br />        cp   &#91;hl&#93;               ;  0078<br />        jr   nz,Addr_0082       ;  0079<br />        inc  hl                 ;  007B<br />        ld   a,l                ;  007C<br />        cp   a,$34              ;  007D  $xx34 = The first byte after the header logo<br />        jr   nz,Addr_0076       ;  007F<br />        ret                     ;  0081<br />Addr_0082:<br />        ld   a,$85              ;  0082  Compare failed!<br />        ret                     ;  0084<br /><br />        ; $77 filler bytes<br />Addr_0085:<br />        db   $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff<br />        db   $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff<br />        db   $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff<br />        db   $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff<br />        db   $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff<br />        db   $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff<br />        db   $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff<br />        db   $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff<br />        db   $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff<br />        db   $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff<br />        db   $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff<br />        db   $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff<br />        db   $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff<br />        db   $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff<br />        db   $ff, $ff, $ff, $ff, $ff, $ff, $ff<br /><br />        ; Disable the boot ROM and hand over control to the game cartridge.<br />Addr_00FC:<br />        ld   a,$01              ;  00FC Write to the ROM disable register<br />        ldh  &#91;$FF50&#93;,a          ;  00FE</div><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4548">nitro2k01</a> — Wed Dec 10, 2014 8:26 am</p><hr />
]]></content>
</entry>
</feed>