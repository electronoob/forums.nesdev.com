<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=2&amp;t=374" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2005-07-04T03:54:47-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=2&amp;t=374</id>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2005-07-04T03:54:47-07:00</updated>
<published>2005-07-04T03:54:47-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=374&amp;p=2634#p2634</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=374&amp;p=2634#p2634"/>
<title type="html"><![CDATA[Object moving/collision handling]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=374&amp;p=2634#p2634"><![CDATA[
OK thanks. I use a different way to handle the sprites I.E. the player and the objects have a variable number of sprites, but they're all relative to the same coordinate for a single object, so it's simpler.<br />Also, it's better to also check an ennemy to not run into another ennemy to have a decent game.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Mon Jul 04, 2005 3:54 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Memblers]]></name></author>
<updated>2005-07-03T06:59:57-07:00</updated>
<published>2005-07-03T06:59:57-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=374&amp;p=2625#p2625</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=374&amp;p=2625#p2625"/>
<title type="html"><![CDATA[Object moving/collision handling]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=374&amp;p=2625#p2625"><![CDATA[
Oh yeah, if I understand the the 2nd method correctly, that's perfect for sprites.  That's the same as what I used in Munchie Attack and Roadkill.  Just take an objects coordinate (same as what's in SPR-RAM), compare it to another object, subtract or add the size to the coordinate, and check again.  Takes a pretty decent amount of CPU time to do all the objects, but it's fairly straight-forward.<br /><br />Roadkill even used all 64 sprites, 2 for players and 62 for cars.   Then I just cheated and compared the player to each individual car sprite (rather than comparing againsts objects that are made up of several sprites).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=10">Memblers</a> — Sun Jul 03, 2005 6:59 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2005-07-03T02:08:42-07:00</updated>
<published>2005-07-03T02:08:42-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=374&amp;p=2623#p2623</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=374&amp;p=2623#p2623"/>
<title type="html"><![CDATA[Object moving/collision handling]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=374&amp;p=2623#p2623"><![CDATA[
Blargg : Yeah, experience thing is interessting, but I wanna to know if someone has already tried something like that.<br />Yeah, the fist method is definitely the good one for Background collision, however, for sprite vs sprite collision, it would put all the sprites in an array like the BG, and so it could ruin the game play because you can be at the same distance between a monster and you player, but on a different place on the array and the result of the collition check would be different. This have to be tested, trough.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Sun Jul 03, 2005 2:08 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2005-07-02T17:41:36-07:00</updated>
<published>2005-07-02T17:41:36-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=374&amp;p=2620#p2620</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=374&amp;p=2620#p2620"/>
<title type="html"><![CDATA[Object moving/collision handling]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=374&amp;p=2620#p2620"><![CDATA[
I remember reading the original post and saying to myself that you've pretty much covered several workable methods. If I were in your position and wanted to find the best, I'd implement each so I could find out all the fine aspects. I'd choose the best and keep the experience from each.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Sat Jul 02, 2005 5:41 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Memblers]]></name></author>
<updated>2005-07-02T13:40:24-07:00</updated>
<published>2005-07-02T13:40:24-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=374&amp;p=2618#p2618</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=374&amp;p=2618#p2618"/>
<title type="html"><![CDATA[Object moving/collision handling]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=374&amp;p=2618#p2618"><![CDATA[
For background hit detection, basing it on the map data in a metatile format makes a lot of sense.  That sounds like your first method, right?  Then you just have to check on all sides of the object and see when it's moving into the next metatile.<br /><br />The scrolling shouldn't add much more for sprites.  Could add/subract the scroll change to all the non-player sprite positions when it happens.  And for the background, keep a counter of the position within a metatile.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=10">Memblers</a> — Sat Jul 02, 2005 1:40 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2005-07-02T12:34:11-07:00</updated>
<published>2005-07-02T12:34:11-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=374&amp;p=2617#p2617</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=374&amp;p=2617#p2617"/>
<title type="html"><![CDATA[Object moving/collision handling]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=374&amp;p=2617#p2617"><![CDATA[
I'm just afraid that this tread was highacked by other ones so nobody answered to me, or if really nobody has something to answer or found the question interesstless.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Sat Jul 02, 2005 12:34 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2005-06-27T12:07:52-07:00</updated>
<published>2005-06-27T12:07:52-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=374&amp;p=2548#p2548</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=374&amp;p=2548#p2548"/>
<title type="html"><![CDATA[Object moving/collision handling]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=374&amp;p=2548#p2548"><![CDATA[
I'm asking what's the best way to handle object/player moves and collision in an action-oriented game.<br />I hesitate between two methods. The first one would be to separe what would be called "main position", only this one will be checked for collision stuff. The segond parameter, the "fine position" is the low bits of the main position and aren't checked at all for all colision stuff. They're only here to animate the sprite proprely, also when the fine position overlaps and so the main one will change, the sprite/object can pass to another frame (so it's arms/legs would move).<br />The other solution is less innovative, but it would simply check the collision trough two variables, one is position-size and the other one position+size. The position is 8 bit wide and it's the exact one of the middle of the sprite on the screen (I use only one screen at time, like Zelda, no scrooling while the game play is on). This one seems to be simpler, but I think it isn't that good to merge the visual part with the maths part, and also it would need additional counters for any frame/mooves.<br /><br />One third way to handle that is to use the first one for BG-Sprite collision, and the segond one for sprite-sprite collision.<br /><br />Also, another problem comes with non-playable objects (i.e. enemies). They have to move on their own, so the programm have to handle both the move of their position and of their actucal graphics. With the first method, I simply have to decide wich direction the enemy walks, run, and maybe jump (I don't know yet how I'll do the AI), and finally apply this change unless the main position reach the exepted value. Trough the segond solution, this would be harder to handle, and I don't want to have something glitchy, typically like Castlevania 2 where you fall into invisible pits and you can grow non-existing stairs during game-play.<br /><br />Does annyone have comments/ideas/notices/help/tips ? That would be cool.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Mon Jun 27, 2005 12:07 pm</p><hr />
]]></content>
</entry>
</feed>