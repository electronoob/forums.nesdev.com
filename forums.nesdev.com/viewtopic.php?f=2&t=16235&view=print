<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - 8x16 sprites wiki question</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">8x16 sprites wiki question</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=16235">http://forums.nesdev.com/viewtopic.php?f=2&amp;t=16235</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>GradualGames</b> [ Fri Jul 21, 2017 6:46 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>8x16 sprites wiki question</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The wiki says: &quot;The NES supports 64 8x8 sprites or 64 8x16 sprites. This means 8x16 sprites can cover a larger area of the screen. So games without many objects that are smaller than 12 pixels or 17-24 pixels in height can benefit from 8x16 sprites. These include fighting games, vertical shooters, or <strong>platformers without guns</strong>.&quot;<br /><br />I'm thinking of using 8x16 sprites in my platformer WITH guns to reduce cpu time in rendering metasprites---which in my experience is always the most cpu hungry part of an NES game engine. Why would having guns make it less beneficial to use 8x16 sprites (according to the wiki)?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Oziphantom</b> [ Fri Jul 21, 2017 6:49 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: 8x16 sprites wiki question</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />guns imply bullets - and using 8x16 on a bullet is a bit wasteful and will probably increase your flickering, is my guess.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>GradualGames</b> [ Fri Jul 21, 2017 6:50 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: 8x16 sprites wiki question</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Oziphantom wrote:</div><div class="quotecontent">guns imply bullets - and using 8x16 on a bullet is a bit wasteful and will probably increase your flickering, is my guess.</div><br />Ah that makes sense. Luckily my bullets are 16x16 pixels in size <img src="./images/smilies/icon_wink.gif" alt=";)" title="Wink" />  (and there's not more than 3 of them at any given time)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>DRW</b> [ Fri Jul 21, 2017 6:53 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: 8x16 sprites wiki question</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Why is rendering the sprites the most CPU-hungry part? I mean, sure, you always benefit from having to do less. But I didn't experience the rendering as very much.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>GradualGames</b> [ Fri Jul 21, 2017 6:55 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: 8x16 sprites wiki question</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I've simply found when I use the monochrome bit trick to profile different aspects of a frame update in my game, the metasprite rendering routine typically is taking the most time of anything. Or rather it has the most potential for volatile growth at any given time depending on how many enemies/bullets etc. are on the screen, the most potential for causing dropped frames. Map rendering while also expensive is more consistent with how much time it takes. Entity updates are also fairly cheap since they rarely if ever have a loop of any kind on any given frame.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>FrankenGraphics</b> [ Fri Jul 21, 2017 6:57 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: 8x16 sprites wiki question</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Yeah... Isn't it moving around and animating the sprites that are the hungry part, rather than just having them on screen?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>GradualGames</b> [ Fri Jul 21, 2017 7:01 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: 8x16 sprites wiki question</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />That's what I mean. Every frame I'm copying metasprite data to my sprite page at $0200, in a pseudo random order (for flickering) It's the inner loops of the metasprite rendering routine that have the greatest potential for causing dropped frames, depending on how many enemies are onscreen. So I'm hoping to halve the amount of time this takes by using 8x16 sprites...just trying to consider what trade offs I may be introducing as a result.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>DRW</b> [ Fri Jul 21, 2017 7:04 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: 8x16 sprites wiki question</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Hm. Strange. When I'm home, I can check again how long my sprite rendering routine takes. But I would say that it shouldn't take too long. The actual logic is probably more.<br /><br />What data does the function have to read for each sprite?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>GradualGames</b> [ Fri Jul 21, 2017 7:17 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: 8x16 sprites wiki question</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />To clarify, I mean the metasprite routine called multiple times. I'm talking about the high level section of my game engine that renders all active entities. Add those all together with all sprite entries and you've got an inner loop that is much larger than anything else going on in the engine. I would imagine this situation would turn up in a lot of action oriented game engines. The metasprite routine itself is very compact, probably the best one I've written over the last 8 years, I think it would be hard or impossible to make it much faster than it is. At the end of the day I have to add an offset to an X and Y coordinate and store them, can't skip that...haha. *edit* So yeah, if it turns out the bulk of the time is in copying sprite entries, I'm hoping 8x16 might be the ticket. I still have to evaluate if it's really worth it from a gameplay perspective however. It's a tradeoff. And the flickering is definitely a concern. Big sprites are tough to pull off without fugliness on NES, if you have more than a few on the screen.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>DRW</b> [ Fri Jul 21, 2017 7:26 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: 8x16 sprites wiki question</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I'm not quite sure if I understand what you mean:<br /><br />MoveEnemy:<br />Checks collision, sets x and y position according to A.I. etc. and sets a pointer to an array that has the meta sprite definition for the current animation phase.<br />Should be independent from the actual size of an on-screen character or at least from the question of how many sprites are used to build this character.<br /><br />UpdateSprites:<br />Takes the x and y position and the meta sprites definition pointer and draws each hardware sprite to the screen.<br />That one would benefit from 8 x 16 sprites since it would have to read less data.<br /><br />But I think UpdateSprites would be the less problematic function. While MoveEnemy, the bigger function, shouldn't be influenced by 8 x 8 vs. 8 x 16 sprites.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>GradualGames</b> [ Fri Jul 21, 2017 7:30 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: 8x16 sprites wiki question</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Yeah, entity logic and drawing are separate in my engine as well. But the entity logic is very cheap (relatively speaking) as there's no inner loop in any given entity's update routine. However for each entity that is drawn, you have an inner loop. With large enough sprites there's potential for that making it take longer than the actual entity update logic. Language choice probably also affects this. I write everything in 6502 so it is fairly easy to compare apples to apples. If I wrote my entity update logic in C, I wouldn't be surprised if it suddenly did take longer than metasprite rendering.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Fri Jul 21, 2017 8:01 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: 8x16 sprites wiki question</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I've never noticed this page on the wiki before:<br /><a href="http://wiki.nesdev.com/w/index.php/Sprite_size" class="postlink">http://wiki.nesdev.com/w/index.php/Sprite_size</a><br /><br />&quot;If your game's characters are 21-24 pixels tall, 8x8 pixel sprites may be the best choice. For example, this is true of Mario Bros. (1983), Balloon Fight, the enemies in the original Super Mario Bros., and the hero in the Mega Man series. And in Thwaite, everything is either 8x8 (missiles, smoke, crosshair) or 24x24 (explosions) by nature, so 8x8 is a natural fit.&quot;<br /><br />&quot;So games without many objects that are smaller than 12 pixels or 17-24 pixels in height can benefit from 8x16 sprites. These include fighting games, vertical shooters, or platformers without guns.&quot;<br /><br />I find these statements really confusing. I think they're making a leap in logic that I can't follow, and I don't really agree that either a specific character size or game genre dictates a &quot;natural fit&quot;... In particular I'm kinda baffled by these partial-tile ranges like &quot;21-24 pixels&quot;? Where on earth does that come from?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>FrankenGraphics</b> [ Fri Jul 21, 2017 8:09 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: 8x16 sprites wiki question</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />M-tee's blog writeup is much more to the point IMO and has helped me form an idea of what is good where.<br /><!-- m --><a class="postlink" href="http://www.mteegfx.com/post/121679532039/nes-8x16-sprites-overview/amp">http://www.mteegfx.com/post/12167953203 ... erview/amp</a><!-- m -->

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Fri Jul 21, 2017 9:09 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: 8x16 sprites wiki question</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">GradualGames wrote:</div><div class="quotecontent">Luckily my bullets are 16x16 pixels in size <img src="./images/smilies/icon_wink.gif" alt=";)" title="Wink" /></div><br />If you have 16-pixel-tall projectiles, then by all means use 8x16. I wrote that to explain why <em>Contra</em> flickers: its bullets don't come close to filling the height of the 8x16 sprite box.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>GradualGames</b> [ Fri Jul 21, 2017 9:16 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: 8x16 sprites wiki question</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent"><div class="quotetitle">GradualGames wrote:</div><div class="quotecontent">Luckily my bullets are 16x16 pixels in size <img src="./images/smilies/icon_wink.gif" alt=";)" title="Wink" /></div><br />If you have 16-pixel-tall projectiles, then by all means use 8x16. I wrote that to explain why <em>Contra</em> flickers: its bullets don't come close to filling the height of the 8x16 sprite box.</div><br /><br />Thankfully I'm not going for a huge amount of bullets...so hoping 8x16 will be a nice speed boost. Not to mention versatile say for animating parts of a boss without having to load boss chr data in both patterntables. (or other objects of course but that's the use case I have in mind, potentially) I guess the trade off is with MMC3 I'll likely have to do a bit more bankswapping (which is cheap anyway) do to using the pattern tables less efficiently than with 8x8 sprites.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>