<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - 4-way Dragon Warrior scrolling</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">4-way Dragon Warrior scrolling</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=10&amp;t=4320">http://forums.nesdev.com/viewtopic.php?f=10&amp;t=4320</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>2</strong> of <strong>3</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Celius</b> [ Wed Aug 20, 2008 10:32 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Oh, I suppose I am! The name "4-screen" mirroring implies that there is mirroring, when it's basically a lack of mirroring, so that's why I got confused.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>MetalSlime</b> [ Thu Aug 21, 2008 12:31 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">As the other said, there is no way to bypass scrolling glitches on the NES when scrolling on both axises, but you can cleverly hide them with a wide variety of techniques. The simplest for a newbie is to consider the first and last 8 bits of the display as "hidden" (altough you have to remember they exists and aren't hidden on PAL machines), and to update your data "off-screen" in the hidden area. </div>
<br />
<br />Thanks for all the input everybody!  Since I'm a newbie, I think I'll follow Bregalad's advice and treat the top and bottom 8 pixels as hidden.  Sometimes down the road I might try one of the better, more complicated solutions, but for now I don't want to bite off more than I can chew.  
<br />
<br />Thanks for all the recommendations for nametable viewers too.  I've installed all of the mentioned emulators.
<br />
<br />A little follow-up question: when I scroll vertically, I will want to update a row, which means VRAM address incrementing by 1 is more efficient.  If I scroll horizontally, I need to draw an offscreen column, which means VRAM address incrementing by 32 is better.  Is it OK to write to PPUCTRL ($2000) and change this increment every time around or do I have to choose only one and stick with it?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dwedit</b> [ Thu Aug 21, 2008 12:38 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />You should set the increment mode every time before you write a row or column, because the previous increment mode you used is unknown, and could be anything.
<br />
<br />Then a little note about updating attribute data: While increment 1 mode will also help you write attributes for rows, Increment 32 mode won't help you write attributes for columns.  When updating columns, you need to set the PPU address to the correct place for each attribute byte updated.  It will take 8 noncontiguous writes to update attribute tables for a column (and 8 contiguous writes to update a row.)
<br />
<br />Also, make sure that your code that writes to the PPU can't be interrupted by other code which writes to the PPU.
<br />
<br />Finally, never forget to reset the scrolling after you've written something to any PPU memory.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Thu Aug 21, 2008 1:36 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Dwedit wrote:</div><div class="quotecontent">Increment 32 mode won't help you write attributes for columns.</div><br />Actually it does, a little bit.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">When updating columns, you need to set the PPU address to the correct place for each attribute byte updated.</div>
<br />In increment-32 mode, you can set the address once for every 2 attribute bytes. Since there are 8 attribute bytes in a row, after writing the 1st byte, the PPU will have moved 4 (32 / 8) rows down, so you can safely write the 5th byte without having to set the address again. After that you set the address for the 2nd byte, then write the 2nd and 6th bytes. This will allow you to update a column of 8 attribute bytes while setting the address only 4 times. It is a good time saver if you are hungry for cycles! =)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Thu Aug 21, 2008 6:52 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Dwedit wrote:</div><div class="quotecontent">If it's homebrew intended to be run only on emulators, you can also use</div><br />...GBA format. PocketNES hides the top and bottom 13 lines in scaled mode or a total of 80 lines (tilt-and-scan, which incidentally the running program can control using "memory following") in unscaled mode. Or you could make it GBA-native <img src="./images/smilies/icon_wink.gif" alt=";-)" title="Wink" /><br /><br />I have a Vizio 32" LCD TV. It appears to show about 224 lines of a 240p signal or 448 lines of a 480i signal (from memory; I'm not home to count tiles at the moment). But 240p signals only work through a composite or S-video cable, not a component cable. This is fine for the NES, Super NES, and N64, but it makes it more of a bother to play PS1 discs on my PS2, or Virtual Console games or GameCube retro compilation discs on my Wii. And any 240p or 480i signal will have noticeable lag compared to a 480p signal, so I still need to use a CRT SDTV for things like Tetris Attack and DDR.<br /><br /><div class="quotetitle">Dwedit wrote:</div><div class="quotecontent">You should set the increment mode every time before you write a row or column, because the previous increment mode you used is unknown, and could be anything. </div>
<br />You have to write to PPUCTRL anyway to set the upper bit of the X and Y scroll position when you write to PPUSCROLL, unless you're using 1-screen mirroring like on AMROM. My code just happens to throw the VRAM port back into rows mode whenever it turns the screen back on.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>MetalSlime</b> [ Sat Aug 23, 2008 5:56 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Thanks everyone.  I think it won't be long before I'll be able to walk my little hero around his hard-coded 6-screen map <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />
<br />
<br />Another question.  When the hero moves right, I need to draw a new column offscreen on the right.  So I will need to know which address (in the nametables) to start drawing at each time.  The natural solution that comes to mind is to have a couple variables that point to the next address, and then update these variables with every move so they are always current.  But the hero can move in any of four directions.  Should I:
<br />
<br />1) Have one set of pointers for each case (up, down, left, right), i.e. four sets of pointers.
<br />2) Have one set of pointers for one case (say moving right), and for other cases (up, down, left) calculate the drawing point based on the "where to draw if you move right" pointers.
<br />3) Some other method entirely.
<br />
<br />What's the best way?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Disch</b> [ Sat Aug 23, 2008 7:10 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />What I've seen games do is they keep track of the row/column that's currently visible in the upper-left corner of the screen.  That way if the player moves right, you just add 16 to the column to get the row+column to draw to.... add 15 to the row if they move down... and subtract 1 from row or col if they move up/left.  Then you just increment/decrement the row/column afterwards to keep it synced to the upper-left corner of the screen.
<br />
<br />Alternatively, if the player is always on the center of the screen, you could calculate the row/column that needs redrawing from his coords.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Celius</b> [ Sat Aug 23, 2008 9:22 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />What I do is I calculate everything based off of the scroll values. You should also keep track of "bit 9" of the scroll, which represents which name table you're in. Look at this formula; it calculates the PPU address for a 9-bit X,Y pair:
<br />
<br />PPUAdd = (YScroll AND #$0F8 * 4) + (XScroll AND #$0FF/8 ) + (YScroll AND #$100 * 8 ) + (XScroll AND #$100 * 4) + #$2000
<br />
<br />For scrolling, take the top-left corner coords and distort them like so:
<br />
<br />Up = YScroll - 8
<br />Down = YScroll + 240
<br />Left = XScroll - 8
<br />Right = XScroll + 256
<br />
<br />Those will give you the starting tile address for updating rows/columns. I think it's best to calculate as apposed to guess and check. That's what destroyed my first sidescrolling engine.
<br />
<br />EDIT: Oh, and make sure that when dealing with going up and down, if you calculate based off of scroll values, you check if the Y value falls between $F0 and $FF, because that will put you into attributes. What you need to do is add #$10 if scrolling down, and subtract #$10 if scrolling up.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Sat Aug 23, 2008 11:14 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I like to use the concept of a camera, and I have it follow the player. The camera is basically a rectangle the same size of the screen, and it has a smaller area inside it which is where the player is allowed to be. Every frame you check if the player is outside of the window, and move the camera accordingly to correct this, drawing rows and columns of blocks when necessary.
<br />
<br />You can easily tell when it's time to draw a new column or row by watching the coordinates of the camera. Let's say you have blocks that are 16x16 pixels, the most common kind. Just keep an eye on bit 4 (the 5th one) of each coordinate. If this bit changes, a new row or column must be rendered. You can then use the direction of the movement to find if the row should be at the top or at the bottom, or if the column should be on the left or on the right. Then you add values to the camera's coordinates as necessary to find the coordinates of the row or column. With these coordinates, you can decode the tiles and attributes from the level map, and later calculate the nametable addresses based on them.
<br />
<br />Hardwiring the position of the camera to the position of the player is often not a good idea, because there are the cases when the player approaches the edges of the level when he should keep moving while the camera shouldn't.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Sun Aug 24, 2008 1:16 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Hardwiring the position of the camera to the position of the player is often not a good idea, because there are the cases when the player approaches the edges of the level when he should keep moving while the camera shouldn't.</div>
<br />Maybe not for action games, the player is always at the center on all NES RPGs I've ever seen exept Just Breed.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Celius</b> [ Sun Aug 24, 2008 1:47 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Doesn't the character move away from the center in Crystalis?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Disch</b> [ Sun Aug 24, 2008 7:43 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Crystalis isn't an RPG.  It's a Zelda-esque action game.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sun Aug 24, 2008 11:09 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Then what do most NES RPGs do when the player nears the edge of the known world? Do they have an 8-metatile-wide border around the whole thing?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Sun Aug 24, 2008 11:22 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Yes, they often display grass or blank on unused areas that will warp the player to another area. This remains valid for quite some SNES RPGs as well.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Celius</b> [ Sun Aug 24, 2008 12:18 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />That, or if it's the world map, they'll wrap around to the other side once you reach the edge.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>2</strong> of <strong>3</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>