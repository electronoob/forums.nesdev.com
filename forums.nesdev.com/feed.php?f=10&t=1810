<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=10&amp;t=1810" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2006-07-24T05:13:34-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=10&amp;t=1810</id>
<entry>
<author><name><![CDATA[Disch]]></name></author>
<updated>2006-07-24T05:13:34-07:00</updated>
<published>2006-07-24T05:13:34-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1810&amp;p=15591#p15591</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1810&amp;p=15591#p15591"/>
<title type="html"><![CDATA[My NES Question]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1810&amp;p=15591#p15591"><![CDATA[
<div class="quotetitle">nineTENdo wrote:</div><div class="quotecontent"><br />IN yy-CHR You can change the attributes in the pallete from 00-FF.<br /></div><br /><br />Erm... well...<br /><br />YY-CHR <em>does</em> let you select different palettes -- but how it does it doesn't really reflect how the NES handles it at all.  Plus any changes it makes are merely cosmetic to make editing easier -- they will not change your ROM.  The only thing YY-CHR changes in the ROM is the CHR (pattern tables).  Attribute tables and palettes cannot be edited using that tool.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />So you can if you wanted to, use attributes to setup your screen.  Which would allow you to color more of the screen directly (per 4x4 cell (32x32 pixel))and use more colors right.<br /></div><br /><br />Right.  If you want, you can think of there being 4 different 4-color palettes available for your background:<br /><br />$3F00-$3F03  --  palette 0<br />$3F04-$3F07  --  palette 1<br />$3F08-$3F0B  --  palette 2<br />$3F0C-$3F0F  --  palette 3<br /><br />Attribute tables let you assign one of those four palettes to each <em>16x16</em> pixel block in the nametable (not just 32x32).<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Oh yeah why would you want to start your pallete at $3F3F?<br /></div><br /><br />Generally, you wouldn't.  That guy in that other thread most likely had an error in his code.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=33">Disch</a> — Mon Jul 24, 2006 5:13 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[nineTENdo]]></name></author>
<updated>2006-07-23T20:07:18-07:00</updated>
<published>2006-07-23T20:07:18-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1810&amp;p=15585#p15585</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1810&amp;p=15585#p15585"/>
<title type="html"><![CDATA[My NES Question]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1810&amp;p=15585#p15585"><![CDATA[
ok i think im getting the attribute thing.  IN yy-CHR You can change the attributes in the pallete from 00-FF.  So you can if you wanted to, use attributes to setup your screen.  Which would allow you to color more of the screen directly (per 4x4 cell (32x32 pixel))and use more colors right.<br /><br />Oh yeah why would you want to start your pallete at $3F3F?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=352">nineTENdo</a> — Sun Jul 23, 2006 8:07 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Disch]]></name></author>
<updated>2006-07-20T15:37:54-07:00</updated>
<published>2006-07-20T15:37:54-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1810&amp;p=15530#p15530</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1810&amp;p=15530#p15530"/>
<title type="html"><![CDATA[My NES Question]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1810&amp;p=15530#p15530"><![CDATA[
The attribute table assigns one of the four 4-color palettes to the tiles in the nametable.  It's difficult to explain in words the pattern in how this is done --- a diagram is pretty much a necessity -- and any diagram I could draw would be no better than the many diagrams already in existence.<br /><br />For this one... pick up a copy of nestech.txt, or look on the wiki, or look at some other nes technical reference and search the doc for "attribute tables" until you find the relevent info.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=33">Disch</a> — Thu Jul 20, 2006 3:37 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[nineTENdo]]></name></author>
<updated>2006-07-20T04:58:23-07:00</updated>
<published>2006-07-20T04:58:23-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1810&amp;p=15520#p15520</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1810&amp;p=15520#p15520"/>
<title type="html"><![CDATA[Attributes and Palettes]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1810&amp;p=15520#p15520"><![CDATA[
Hello Again,<br />       I was wondering about how Attributes Tables work.  Im working on the Atomic demo by CC. and in it he switches palettes to change the color on the screen.  What im wondering is why he sets his attributes where he should be setting up his palletes.  Can i use this in a simple demo to color my screen instead of using palletes? How does Attirbute coding work (look at .attribute).  Heres the code:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">;other code-----------------------------------------------<br />   lda   #$23   <br />   sta   $2006   <br />   lda   #$D0   <br />   sta   $2006          ;Point to right spot in Attr. Map <br />   ldx   #$00   <br />   ldy   #$20<br />.DrawAtt <br />   lda .Attribute,X   <br />   sta   $2007 <br />   inx   <br />   dey  <br />   bne   .DrawAtt<br /><br />.Attribute  <br />dc.b #$40,#$55,#$01,#$01 ,#$00,#$00,#$00,#$00            <br />dc.b #$04,#$05,#$51,#$00 ,#$00,#$00,#$00,#$00     <br />dc.b #$04,#$11,#$44,#$00 ,#$00,#$00,#$00,#$00            <br />dc.b #$04,#$01,#$00,#$00 ,#$01,#$00,#$00,#$00<br /><br />; Other code ---------------------------------------------------------------<br />; than this------------------------------------------------------------------<br /><br />InitPal <br />   <br />   pha   <br />   txa   <br />   pha   <br />   tya   <br />   pha   <br />   <br />   lda   #$3F   <br />   sta   $2006   <br />   sty   $2006   <br />   ldy   #$08              ;Set up 8 colours.<br /><br />.InitPal1 <br />   lda   .Palette,X   <br />   sta   $2007   <br />   inx   <br />   dey   <br />   bne   .InitPal1   <br />   <br />   pla   <br />   tay   <br />   pla   <br />   tax   <br />   pla   <br />   <br />   rts<br /><br />.Palette <br />dc.b #$0D,#$1D,#$2D,#$00 ,#$0D,#$10,#$3D,#$30    ;Greys         <br />dc.b #$0D,#$07,#$16,#$27 ,#$0D,#$37,#$38,#$30    ;Red-Yellow         <br />dc.b #$0D,#$01,#$11,#$1C ,#$0D,#$2C,#$3C,#$30    ;Blue-Cyan   <br />dc.b #$0D,#$03,#$14,#$25 ,#$0D,#$36,#$37,#$30    ;Magenta-Yellow         <br />dc.b #$0D,#$05,#$06,#$07 ,#$0D,#$17,#$18,#$28    ;Rusty       <br />dc.b #$0D,#$11,#$2C,#$2B ,#$0D,#$2A,#$38,#$26    ;Spectrum1         <br />dc.b #$0D,#$16,#$39,#$2A ,#$0D,#$2C,#$11,#$13<br /><br />Thanks Again<br />EL</div><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=352">nineTENdo</a> — Thu Jul 20, 2006 4:58 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2006-07-19T14:15:24-07:00</updated>
<published>2006-07-19T14:15:24-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1810&amp;p=15503#p15503</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1810&amp;p=15503#p15503"/>
<title type="html"><![CDATA[Re: NMI and MAIN]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1810&amp;p=15503#p15503"><![CDATA[
<div class="quotetitle">Memblers wrote:</div><div class="quotecontent"><br />here are some games though that run everything in the NMI, with the code after startup just being an infinite JMP loop.  I think that's kinda weird though.<br /></div><br />Making everything after the init code into an NMI-listener is actually rawther common in games published by Nintendo. It's also the case in the Java platform (standalone programs or applets), where you build a frame, toss stuff into its panel, and then all the logic runs as event listeners inside the panel.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />I think Metroid even enabled NMIs inside it's NMI routine so they could happen recursively, for when it takes longer than a frame.<br /></div><br />Yes, reentrancy has its benefits. One is music catch-up (as seen in <em>Pokémon</em> for Game Boy). Another is not missing serial communication events, especially on a Vs Dualsystem or a pair of Game Boy systems.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Wed Jul 19, 2006 2:15 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Dwedit]]></name></author>
<updated>2006-07-19T05:16:58-07:00</updated>
<published>2006-07-19T05:16:58-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1810&amp;p=15494#p15494</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1810&amp;p=15494#p15494"/>
<title type="html"><![CDATA[My NES Question]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1810&amp;p=15494#p15494"><![CDATA[
You could also choose not to run your game logic in the NMI, and instead, have the NMI update a byte in memory indicating "Yeah, the frame is ready", then have your main loop repeatedly poll that byte to check if it's ready to proceed or not.  Tons and tons of games do this.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=53">Dwedit</a> — Wed Jul 19, 2006 5:16 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Memblers]]></name></author>
<updated>2006-07-19T03:42:01-07:00</updated>
<published>2006-07-19T03:42:01-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1810&amp;p=15493#p15493</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1810&amp;p=15493#p15493"/>
<title type="html"><![CDATA[Re: NMI and MAIN]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1810&amp;p=15493#p15493"><![CDATA[
<div class="quotetitle">nineTENdo wrote:</div><div class="quotecontent"><br />Would it be good to use a main loop as well as an NMI?  What would be the purpose of having a main loop run apart from an NMI?  Can i use them in conjuntion?<br /></div><br /><br />Yes, I think it's good to do that.<br /><br />In some cases, the code in the main loop might take longer than a frame.  It's good to have the music play in the NMI routine (after the PPU stuff), because people are very perceptive of even subtle glitches/wrong speed changes in music (much more annoying than gameplay slowdown IMHO).  I'm sure there's other reasons too, I can't think of now.<br /><br />At the very least you'll want a frame counter in the NMI routine so your main loop knows when to run.  There are some games though that run everything in the NMI, with the code after startup just being an infinite JMP loop.  I think that's kinda weird though.  I think Metroid even enabled NMIs inside it's NMI routine so they could happen recursively, for when it takes longer than a frame.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=10">Memblers</a> — Wed Jul 19, 2006 3:42 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[nineTENdo]]></name></author>
<updated>2006-07-18T23:18:20-07:00</updated>
<published>2006-07-18T23:18:20-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1810&amp;p=15492#p15492</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1810&amp;p=15492#p15492"/>
<title type="html"><![CDATA[NMI and MAIN]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1810&amp;p=15492#p15492"><![CDATA[
Would it be good to use a main loop as well as an NMI?  What would be the purpose of having a main loop run apart from an NMI?  Can i use them in conjuntion?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=352">nineTENdo</a> — Tue Jul 18, 2006 11:18 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2006-07-16T15:38:37-07:00</updated>
<published>2006-07-16T15:38:37-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1810&amp;p=15429#p15429</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1810&amp;p=15429#p15429"/>
<title type="html"><![CDATA[My NES Question]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1810&amp;p=15429#p15429"><![CDATA[
If you are doing this frequently (i.e. every frame) it's certainly better to go for speed.<br /><br />I guess I'd do it like this: I'd go through the list of active objects, rendering each one to the OAM (shadow), and when all objects are done, I'd fill the rest (Y position only) with $f0.<br /><br />Before the game starts it doesn't matter if it's quick or slow.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Sun Jul 16, 2006 3:38 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2006-07-16T07:47:22-07:00</updated>
<published>2006-07-16T07:47:22-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1810&amp;p=15424#p15424</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1810&amp;p=15424#p15424"/>
<title type="html"><![CDATA[My NES Question]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1810&amp;p=15424#p15424"><![CDATA[
Or for better speed, unroll the loop and clear only the bytes specifying the Y coordinate:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">ClrSprRam      ;Clears the Sprite buffer at $200<br />   ldx #$00<br /><br />;This does just clears the unused sprites in $200-$2ff<br />ClearRemainingSprites<br />   lda #$f0<br />-   sta $200,X<br />   inx<br />   inx<br />   inx<br />   inx<br />   bne -<br />_endClrSprRam<br />   inc SpriteDMAFlag<br />   rts<br /></div><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Sun Jul 16, 2006 7:47 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2006-07-16T00:30:15-07:00</updated>
<published>2006-07-16T00:30:15-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1810&amp;p=15422#p15422</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1810&amp;p=15422#p15422"/>
<title type="html"><![CDATA[My NES Question]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1810&amp;p=15422#p15422"><![CDATA[
Here you are the code I wrote to handle that :<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">ClrSprRam      ;Clears the Sprite buffer at $200<br />   ldx #$00<br /><br />;This does just clears the unused sprites in $200-$2ff<br />ClearRemainingSprites<br />   lda #$f0<br />-   sta $200,X<br />   inx<br />   bne -<br />_endClrSprRam<br />   inc SpriteDMAFlag<br />   rts<br /></div><br />ClrSprRam will fill the OAM with all blank sprites. ClearRemainingSprites will just continue to clear the sprites that are unused, assuming that X holds the adress of the first unused sprite in the sprite buffer.<br />At the end the SpriteDMAFlag is set to tell the NMI routine that the sprite buffer is ready to be copied to OAM via $4014<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Sun Jul 16, 2006 12:30 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[nineTENdo]]></name></author>
<updated>2006-07-15T22:31:37-07:00</updated>
<published>2006-07-15T22:31:37-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1810&amp;p=15421#p15421</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1810&amp;p=15421#p15421"/>
<title type="html"><![CDATA[My NES Question]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1810&amp;p=15421#p15421"><![CDATA[
<div class="quotetitle">Disch wrote:</div><div class="quotecontent"><br />If you don't want this to happen you must configure every sprite so that they will either be displayed as you want them, or make it so they won't be displayed at all (by moving them offscreen by setting their Y value to $FF)<br /></div><br /><br />Ok i get it now.  No wonder ive seen some demos where there is #$FF stored in some of the unused OAM locations.  How would i clear or lets say fill  i.e. $0208-$02FF with #$FF.  Would i use some addressing technique?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=352">nineTENdo</a> — Sat Jul 15, 2006 10:31 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2006-07-15T13:38:26-07:00</updated>
<published>2006-07-15T13:38:26-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1810&amp;p=15419#p15419</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1810&amp;p=15419#p15419"/>
<title type="html"><![CDATA[My NES Question]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1810&amp;p=15419#p15419"><![CDATA[
1 - Always fill the whole SPRRAM with $f0 or any value between $f0 and $ff when not using it<br />2 - Upload correct values for the sprite attibute byte ($202,X) as well as you do for vertical position, tile number and horizontal position (respectivly $200,X , $201,X , $203,X) assuming you use page $2 for your sprite DMA. Just replace $2 per another number if you use another page.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Sat Jul 15, 2006 1:38 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Disch]]></name></author>
<updated>2006-07-15T10:31:35-07:00</updated>
<published>2006-07-15T10:31:35-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1810&amp;p=15416#p15416</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1810&amp;p=15416#p15416"/>
<title type="html"><![CDATA[My NES Question]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1810&amp;p=15416#p15416"><![CDATA[
I don't understand your question at all.<br /><br />All the 'shadow RAM' is, is just an easily accessable version of what you want to be copied to OAM.  Whatever is in your Shadow OAM page <em>WILL</em> be displayed as sprite graphics data the next time you perform the DMA (by writing to $4014).<br /><br />For example... say you only want two sprites on the screen, so you change $0200-$0207 to the desired sprite information (which will set sprites 0 and 1 the way you want them).  But let's say you leave $0208-$02FF unchanged (and let's say it's filled with random garbage).  When you write a value of $02 to $4014, the entire $0200-$02FF page gets copied to OAM -- <em>including $0208-02FF, which you didn't set</em>.  Therefore, since those bytes were random garbage, you're getting random garbage sprites on screen.  If you don't want this to happen you must configure every sprite so that they will either be displayed as you want them, or make it so they won't be displayed at all (by moving them offscreen by setting their Y value to $FF)<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=33">Disch</a> — Sat Jul 15, 2006 10:31 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[nineTENdo]]></name></author>
<updated>2006-07-15T10:02:27-07:00</updated>
<published>2006-07-15T10:02:27-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1810&amp;p=15415#p15415</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1810&amp;p=15415#p15415"/>
<title type="html"><![CDATA[My NES Question]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1810&amp;p=15415#p15415"><![CDATA[
<div class="quotetitle">Disch wrote:</div><div class="quotecontent"><br />If you want to avoid this... you should make sure you have every byte in that block set to what you want before you DMA it to OAM.<br /></div><br /><br />Every byte!!!  What if i clear #$2 store lets say on 4 sprite in #$7  would that clear all the crap i dont need.  Is that how Shadow RAM works.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=352">nineTENdo</a> — Sat Jul 15, 2006 10:02 am</p><hr />
]]></content>
</entry>
</feed>