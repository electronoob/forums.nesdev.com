<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=9&amp;t=1982" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2006-09-13T12:26:10-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=9&amp;t=1982</id>
<entry>
<author><name><![CDATA[FyberOptic]]></name></author>
<updated>2006-09-13T12:26:10-07:00</updated>
<published>2006-09-13T12:26:10-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1982&amp;p=17347#p17347</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1982&amp;p=17347#p17347"/>
<title type="html"><![CDATA[Misc Hardware Project Questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1982&amp;p=17347#p17347"><![CDATA[
I decided that for the initial model, I'd just not use the SRAMs on my board at all, since the original concept didn't involve those anyway.  That aspect evolved out of my "just one more little thing" tendency, which added unnecessary complexity considering I've never made such a thing before.  I'm down to just the EEPROM and 11 misc chips, which should hopefully be fine for running on the NES's internal power.  But I still have the design for the more elaborate version; maybe it'll be the Mark II.  hehe.<br /><br />The thing I want to know, though, is does anyone know of a decent way to remove the inner sets of pins from the cartridge connector?  Getting the outer ones out is pretty easy, since you can slip'em out from the back, and have some leverage to work with.  But them inner ones only want to bend no matter what I do.  And I can't release the little notches holding'em in place, even using a needle from the inside.  I mean I can solder to and cut the ones I need from where they are, I guess, but it'd sure be a lot easier if I could do it outside the plastic connector.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=884">FyberOptic</a> — Wed Sep 13, 2006 12:26 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[kyuusaku]]></name></author>
<updated>2006-09-11T11:12:59-07:00</updated>
<published>2006-09-11T11:12:59-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1982&amp;p=17224#p17224</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1982&amp;p=17224#p17224"/>
<title type="html"><![CDATA[Misc Hardware Project Questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1982&amp;p=17224#p17224"><![CDATA[
Just to clarify you can't safely put the 7805 outputs in parallel but you can put the inputs/gnd in parallel.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=20">kyuusaku</a> — Mon Sep 11, 2006 11:12 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2006-09-11T08:39:20-07:00</updated>
<published>2006-09-11T08:39:20-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1982&amp;p=17214#p17214</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1982&amp;p=17214#p17214"/>
<title type="html"><![CDATA[Misc Hardware Project Questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1982&amp;p=17214#p17214"><![CDATA[
I think the main problem with 7705 regultaor isn't the load current, but how much they overheight. Without any heat sink, they cannot drive more than one hundred of miliamps without overheating.<br />The one inside the NES is solidify fixed to the metal shield, who seem to be quite accurate for heat power dissipation.<br />You said puting a second 7705 in parallel or just putting another power supply in you other post ? One other is parallel should work fine, but it would just share the power dissipation between both chips I think. That'd be pretty innacurate, if you need to do something just make your external power supply.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Mon Sep 11, 2006 8:39 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[kyuusaku]]></name></author>
<updated>2006-09-10T20:13:57-07:00</updated>
<published>2006-09-10T20:13:57-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1982&amp;p=17210#p17210</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1982&amp;p=17210#p17210"/>
<title type="html"><![CDATA[Misc Hardware Project Questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1982&amp;p=17210#p17210"><![CDATA[
7805 are rated for either 1A or 1.5A. The system itself uses between 500 and 600mA. If you have a 1A 9V adapter, sure you can put on another 7805 for a little more current, I don't know if it's worth it though. Maybe you should replace the default BJT regulator in the NES with a better 3A switching one which will let you make the most of a power adapter.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=20">kyuusaku</a> — Sun Sep 10, 2006 8:13 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[FyberOptic]]></name></author>
<updated>2006-09-10T18:14:21-07:00</updated>
<published>2006-09-10T18:14:21-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1982&amp;p=17205#p17205</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1982&amp;p=17205#p17205"/>
<title type="html"><![CDATA[Misc Hardware Project Questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1982&amp;p=17205#p17205"><![CDATA[
Just out of pure curiosity, if a person added in a second 7805 regulator, tying it into the 9v coming from the adapter (wiring it right off the legs of the 7805 in the NES already, since they're easy to get to), would that allow for another few hundred more milliamps for other use?  I mean the NES wants an 850ma ac adapter, but as far as I know, an '05 is only rated for 500ma.  I'm no genius with this sort of thing so there might be some other consideration, but I thought I'd throw that out there as a possibility, especially since the adapter I'm using for my NES is 1000ma.<br /><br />EDIT:  I don't mean to up the overall milliamps going into the NES, btw, I mean use a seperate '05 to power my own components.  I thought I should clarify that since apparently using two to up the current of a circuit has been done before, though it's not the best way of doing it.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=884">FyberOptic</a> — Sun Sep 10, 2006 6:14 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[kyuusaku]]></name></author>
<updated>2006-09-10T16:10:29-07:00</updated>
<published>2006-09-10T16:10:29-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1982&amp;p=17203#p17203</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1982&amp;p=17203#p17203"/>
<title type="html"><![CDATA[Misc Hardware Project Questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1982&amp;p=17203#p17203"><![CDATA[
<div class="quotetitle">Bregalad wrote:</div><div class="quotecontent"><br />I was under the beliving that LS logic would consume more current than HC logic ?<br />Anyway you could use your own power supply to preven overloading the one inside the NES.<br /></div><br />CMOS' consumption is proportional to it's speed; for very slow speeds CMOS is more efficient, but at &gt;1MHz, it starts to consume more than TTL.<br /><br />I've only seen LP SRAM in full size, the easiest to find are PDIP from scrap game carts.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=20">kyuusaku</a> — Sun Sep 10, 2006 4:10 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[FyberOptic]]></name></author>
<updated>2006-09-10T13:52:53-07:00</updated>
<published>2006-09-10T13:52:53-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1982&amp;p=17197#p17197</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1982&amp;p=17197#p17197"/>
<title type="html"><![CDATA[Misc Hardware Project Questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1982&amp;p=17197#p17197"><![CDATA[
Using my own supply was a consideration if absolutely necessary, but obviously I'd rather try to avoid it.<br /><br />I can't find the datasheet for the old SRAMs I'm using; they're cache ones from some 486 motherboard.  UM61M256K-15.  The closest I found was <a href="http://www.7-24.com.cn/data/71256L_DS_17524.pdf#search=%2271256L_DS_17524%22" class="postlink">someone in a newsgroup linking to a different model but probably similar chip</a>.  If that one is anything like the ones I'm using though, it means I'll be sucking up over 100ma when the chip is active (assuming my SRAM is similar to the one in that datasheet).  My EEPROM, on the other hand, will apparently only need 25ma when active.  Cache SRAM is obviously not designed for low power consumption.  But do they even make the narrow DIP sizes in low power versions?  I'd hate to go to two normal wide DIPs.<br /><br />As far as power consumption goes, the EEPROM and onboard PRG SRAM won't be chip-enabled unless they're trying to be used, so at least those won't be trying to draw power at the same time.  The cartridge PRG *should* be completely disabled at those times as well because of how I'll force O2 low and PRG /CE high.  And whenever the cart PRG is activated again, the EEPROM and onboard SRAM of course won't be.<br /><br />My onboard CHR SRAM however will be chip-enabled as long as the option to use it is toggled on.  I'm not sure how much power it consumes in this mode though as opposed to when actually reading or writing data.  I suppose it probably draws about the same, as long as its enabled.<br /><br />I don't really know any way around keeping the CHR SRAM active full-time like that.  It'll fill the "standard" 10kB address range (supporting mirroring instead of using a full 12kB), meaning I'll be holding the CIRAM /CE high to prevent it from activating while the CHR SRAM is enabled.  I'll also hold the /RD and /WR lines going into the cartridge high to prevent them from sending back anything.  But this probably means the cartridge CHR ROM/RAM will be enabled, since A13 is usually tied straight into their /CE.  I suppose I could force CHR A13 going into the cart high as well, but if the cart happened to have its own 4k of nametable ram, that'd get enabled instead.  So as I said, I'm not sure a fullproof way around keeping the CHR side of things from all being powered up.<br /><br />Either way, when those two SRAMs go active at the same time, I'm going to be drawing a couple hundred milliamps.  I haven't figured up how much the logic chips themselves will use, and have no idea how much mappers use, but I think I'm going to be pushing it.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=884">FyberOptic</a> — Sun Sep 10, 2006 1:52 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2006-09-10T11:48:25-07:00</updated>
<published>2006-09-10T11:48:25-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1982&amp;p=17196#p17196</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1982&amp;p=17196#p17196"/>
<title type="html"><![CDATA[Misc Hardware Project Questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1982&amp;p=17196#p17196"><![CDATA[
I was under the beliving that LS logic would consume more current than HC logic ?<br />Anyway you could use your own power supply to preven overloading the one inside the NES.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Sun Sep 10, 2006 11:48 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[kyuusaku]]></name></author>
<updated>2006-09-10T09:30:28-07:00</updated>
<published>2006-09-10T09:30:28-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1982&amp;p=17190#p17190</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1982&amp;p=17190#p17190"/>
<title type="html"><![CDATA[Misc Hardware Project Questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1982&amp;p=17190#p17190"><![CDATA[
Well it's always recommended you should have 100nF bypass capacitors on each IC operating at high speeds to smooth transients, it also would be smart to have a 47uF or 100uF cap in parallel with those to reduce ripple.<br /><br />If you're going to allow another cartridge to be inserted, you may be pushing the limits of the voltage regulator/your power adapter. I believe the cart is normally allowed 200-300mA, your board will be fine but I'm not so sure about the cartridge which plugs in if it's a MMC5. Make sure you use LS logic, LP SRAM and ROMs which are LP when inactive which should be all EEPROM.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=20">kyuusaku</a> — Sun Sep 10, 2006 9:30 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[FyberOptic]]></name></author>
<updated>2006-09-09T22:17:05-07:00</updated>
<published>2006-09-09T22:17:05-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1982&amp;p=17182#p17182</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1982&amp;p=17182#p17182"/>
<title type="html"><![CDATA[Misc Hardware Project Questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1982&amp;p=17182#p17182"><![CDATA[
I remember from my PIC projects that my PC's serial port wouldn't work with standard TTL voltages, though my laptop would.  So seeing as how most of my work is on my desktop machine (since it's the better of the two), I'd probably want a MAX-232 in the mix if I were going to use serial.  It's certainly an option for the more permanent connection I'll implement later; either that, or an actual full 8-bit parallel connection.  But for my initial debugging to get the hardware going, I'll probably have to stick to my controller port.<br /><br />Speaking of the hardware though, time for another question.  It turns out I'm needing more logic than I had hoped.  The board is going to have some onboard SRAM for PRG and CHR, as well as an EEPROM to get things started up.  But it's also going to use about 15 standard 'LS logic chips of various sorts, primarily ORs and ANDs, then a couple inverters, a buffer, latch, address decoders, etc.  I suddenly had the realization that I might in fact have a power issue here.  I'll be drawing most of my connections from the cartridge connector, for the record.  But the thing is, a cartridge will still be insertable too, which will drain even more power.<br /><br />So the biggest question is, would the power consumption be too much?  At the very least, it seems I might need some capacitors on the board I'm making to avoid fluctuations in power.  I'm not sure really what sizes to use, so I'll probably try whatever I have on hand unless somebody has any suggestions.  Hopefully I didn't bite off more than I (or the NES) can chew when I started designing all of this!<br /><br /><br />EDIT:  I figured I'd add the prototype layout picture I took (so I wouldn't forget how I wanted things).  The actual chips in there are just placeholders, as is the socket in place of where the top SRAM will go.  I'll socket everything though I reckon, to avoid any damage to the chips.  Not all those sockets on the board might get used, mind you, they're just there in case I want to add something in.<br /><br /><img src="http://www.fybertech.com/nes/fynesboard.png" alt="Image" /><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=884">FyberOptic</a> — Sat Sep 09, 2006 10:17 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2006-09-09T11:35:55-07:00</updated>
<published>2006-09-09T11:35:55-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1982&amp;p=17166#p17166</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1982&amp;p=17166#p17166"/>
<title type="html"><![CDATA[Misc Hardware Project Questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1982&amp;p=17166#p17166"><![CDATA[
<div class="quotetitle">tepples wrote:</div><div class="quotecontent"><br />Can one be made with a USB to serial adapter chip? Such chips are likely to run at 5V (just like USB itself) and thus not need a level shifter.<br /></div>They probably still have a small <a href="http://en.wikipedia.org/wiki/Charge_pump" class="postlink">charge-pump convertor</a> to generate +/- 12V, as the standard MAX-232 does. For just receiving, a resistor or zener diode might suffice to convert the signal to something usable by the NES.<br /><br />The main problem with software-based serial is the lack of flow control. If the NES needs the PC to wait at all, it'd need to be implemented using custom code on the PC side. The main advantage of serial is that no low-level PC programming is needed, just standard serial writes and reads. I've got a self-contained USB-to-serial adaptor that I still haven't tested with my NES, though I'm fairly sure it'll work.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Sat Sep 09, 2006 11:35 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2006-09-09T09:05:47-07:00</updated>
<published>2006-09-09T09:05:47-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1982&amp;p=17156#p17156</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1982&amp;p=17156#p17156"/>
<title type="html"><![CDATA[Misc Hardware Project Questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1982&amp;p=17156#p17156"><![CDATA[
Can one be made with a USB to serial adapter chip? Such chips are likely to run at 5V (just like USB itself) and thus not need a level shifter. With the 9-pin RS232 being eliminated from newer mainboards (and already gone from Macs for a decade), this might be important in the future.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Sat Sep 09, 2006 9:05 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2006-09-08T22:31:06-07:00</updated>
<published>2006-09-08T22:31:06-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1982&amp;p=17139#p17139</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1982&amp;p=17139#p17139"/>
<title type="html"><![CDATA[Misc Hardware Project Questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1982&amp;p=17139#p17139"><![CDATA[
Right, ADC #immediate adds two ~1.79 MHz clocks to the total execution time. Just now I coded up 115.2kbps serial and it's working well on a 6KB random test data set. I found that using 2 stop bits gives a little more breathing room in the receive code. The 57.6kbps routines I've been using have been reliable for a couple of years now, and the loader that uses them does a checksum verification after every complete transfer. I'd like to help if you're going to make a serial-based devcart. I'm really happy with mine.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Fri Sep 08, 2006 10:31 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[FyberOptic]]></name></author>
<updated>2006-09-08T21:40:36-07:00</updated>
<published>2006-09-08T21:40:36-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1982&amp;p=17137#p17137</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1982&amp;p=17137#p17137"/>
<title type="html"><![CDATA[Misc Hardware Project Questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1982&amp;p=17137#p17137"><![CDATA[
I once did a serial connection with a PIC by using manual timing, but it wasn't the most reliable.  I don't think I know enough about the timings of the instructions per clock and such of the 6502 to try and do it, though.<br /><br />If my math is right, 1.7897725mhz of the cpu should mean about 558ns per clock, I think.  If I look at <a href="http://www.6502.org/tutorials/6502opcodes.html" class="postlink">an opcode reference</a>, which says an immediate mode ADC takes 2 of "time", would this be direct clock cycles?  As in, that ADC would take about 1.116us?<br /><br />If I tweak my parallel port code I might could squeeze some more speed out, since it's not very optimized, and I think I might actually be doing an unneccessary extra bit of waiting at one point.  But I like the idea of actually triggering each bit transfer so that none get missed, despite a little bit of overhead.  Though if I could write an absolutely reliable serial protocol without using hardware, and just use a normal terminal app, that'd be pretty handy.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=884">FyberOptic</a> — Fri Sep 08, 2006 9:40 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2006-09-08T20:36:06-07:00</updated>
<published>2006-09-08T20:36:06-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1982&amp;p=17135#p17135</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1982&amp;p=17135#p17135"/>
<title type="html"><![CDATA[Misc Hardware Project Questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1982&amp;p=17135#p17135"><![CDATA[
I tried coding a receive routine below to see what the maximum data rate might be. I assumed that the wait loop would run two iterations each time, so the NES has a little slack. I get 225 cycles to transfer one byte, resulting in about 8KB/sec maximum. I expected things to be a little more streamlined with a 2-bit interface, since this isn't much higher than the 5.8KB/sec I get over a software-based RS-232 version I use. I'm realizing that having to acknowledge each bit pair adds a fair amount of overhead, where the serial can just delay by a fixed time. Have you considered using RS-232, which has the advantage of not needing any special PC drivers? I bet you could do it without a MAX-232 level convertor chip if you just want a one-way connection from the PC to the NES. Here's the (definitely not optimized) code I came up with, with instruction cycle counts listed in the comments:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">page_loop:<br />     lda  #$00      ; 2<br />     sta  temp      ; 3<br />     ldx  #4        ; 2<br />     <br />loop:<br />     lda  #$XX      ; 2<br />wait:<br />     bit  $4017     ; 4 wait for latch<br />     beq  wait      ; 3<br />                    ; -1<br />     lda  #$XX      ; 2 clear latch<br />     sta  $4016     ; 4<br />     lda  #$XX      ; 2<br />     sta  $4016     ; 4<br />     lda  $4017     ; 4 read two bits of data<br />     and  #$18      ; 2<br />     ora  temp      ; 3 insert into buffer<br />     asl            ; 2<br />     adc  #0        ; 2<br />     asl            ; 2<br />     adc  #0        ; 2<br />     sta  temp      ; 3<br />     dex            ; 2<br />     bne  loop      ; 3<br />     <br />                    ; -1<br />     sta  &#40;addr&#41;,y  ; 6<br />     iny            ; 2<br />     bne  page_loop ; 3<br /></div><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Fri Sep 08, 2006 8:36 pm</p><hr />
]]></content>
</entry>
</feed>