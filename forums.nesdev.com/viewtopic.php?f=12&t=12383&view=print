<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - SNES audio hardware info</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">SNES audio hardware info</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=12&amp;t=12383">http://forums.nesdev.com/viewtopic.php?f=12&amp;t=12383</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>5</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Espozo</b> [ Sat Feb 14, 2015 11:03 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>SNES audio hardware info</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />This is always something I've been curious about, but never bothered tampering with. I know that the audio is almost entirely separate from the rest of the system and is controlled by the SPC 700 cpu, which is apparently similar to the 65816 cpu found in the other part of the system. Does the SPC 700 look straight at the cartridge slot and forget about the 65816, or do you have to tell the 65816 to send information to the SPC 700? I noticed that the music still runs in a majority of these games even when they crash, so would it be the former? I also know that the SNES has 8 channels for &quot;real life&quot; sound effects (as apposed to FM) that make the music and, off course, are used for sound effects, meaning that you can arrange the tracks for music and the sound effects however you like. I also know that all the sounds are stored in a 64kB space called &quot;audio ram&quot;, but I don't really have a good understanding as to how big that is for this sort of thing. How many seconds of audio can you store at the highest quality, assuming you can even change it in the first place? would music like this be possible? (Space wise. I'm pretty sure there aren't more than 6 instruments playing in the song at a time.)<br /><br /><!-- m --><a class="postlink" href="https://www.youtube.com/watch?v=kY2awRU3Sx0">https://www.youtube.com/watch?v=kY2awRU3Sx0</a><!-- m --> (I'm a sucker for this kind of fast passed, cheesy electric guitar crap)<br /><br />Oh yeah, is the SPC700 8 bit or 16 bit? A lot of places say the processor speed, but nothing else.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Sat Feb 14, 2015 11:38 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: SNES audio hardware info</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Espozo wrote:</div><div class="quotecontent">you have to tell the 65816 to send information to the SPC 700?<br /></div>Yes. One uploads the program that runs the music to the SPC700's CPU, and that runs it more-or-less independently.<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">How many seconds of audio can you store at the highest quality, assuming you can even change it in the first place?<br /></div>the SPC700 supports a native compression format called &quot;Bit Rate Reduction&quot;, which packs 16 monaural samples into 9 bytes. The SPC700 could correspondingly hold about 3.6 seconds of raw audio compressed in this way (65536รท9ร16รท32kHz).<br /><br />As a result, most SNES games either use something more like MIDI with soundfonts, or MODs, where they instead encode &quot;play this sound on this channel at this time&quot;<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Oh yeah, is the SPC700 8 bit or 16 bit? A lot of places say the processor speed, but nothing else.<br /></div>8-bit 6502-like microcontroller with a 16-bit DAC.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>93143</b> [ Sat Feb 14, 2015 11:44 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: SNES audio hardware info</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Espozo wrote:</div><div class="quotecontent">Does the SPC 700 look straight at the cartridge slot and forget about the 65816, or do you have to tell the 65816 to send information to the SPC 700?</div><br />The latter.  The SPC700 cannot access the cartridge slot; its only connection to the outside world is a set of four I/O ports, which are mapped to $2140-$2143 on the S-CPU side and $F4-$F7 on the S-SMP side.  (And yes, this means it will cheerfully keep playing a track if the main CPU goes down, because it has no way of knowing anything is wrong.)<br /><br />You cannot DMA bulk data to these ports.  Anything that goes in one side must be explicitly picked up on the other side by the other CPU.  If you want to automate a transfer without having the SNES CPU stuck in a loop, the best you can do is use HDMA and make sure the SPC700 is checking the ports often enough to catch it all.<br /><br />...oh yeah, there is one thing.  There's an analog stereo passthrough on the cartridge slot; the audio module mixes it with its own output.  This is how the BS Satellaview, Super Game Boy and MSU1 work.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">How many seconds of audio can you store at the highest quality</div><br />The sample format is BRR, which has a 32:9 compression ratio on 16-bit material.  The output sample rate is 32 kHz.  At that rate, 64 kB is enough for a little over three and a half seconds of monaural sample data.  Mind you, most samples don't really <em>need</em> that bitrate...<br /><br />This, of course, leaves no room for the sound driver, sequenced music data, stack, zero page or echo buffer.  <em>Everything</em> has to fit in that 64 kB.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">assuming you can even change it in the first place?</div><br />You can.  Each game has to load the audio RAM before trying to do anything, because there are no built-in sounds or functions - only a tiny 64-byte boot ROM that starts the SPC700 in a useful 'listening to the I/O ports' state.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">would music like this be possible?</div><br />I don't see why not.  It might not sound identical, but I don't hear anything obviously out of the ballpark...  Just be sure to use an appropriate pre-emphasis filter on the samples, because the interpolator will muffle them.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Oh yeah, is the SPC700 8 bit or 16 bit? A lot of places say the processor speed, but nothing else.</div><br />8-bit.  It does have a couple of opcodes that use or generate 16-bit values (MUL and DIV come to mind), but they hijack one of the index registers for the high byte.<br /><br />The DSP is 16-bit, or at least the audio output is...

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Espozo</b> [ Sat Feb 14, 2015 11:58 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: SNES audio hardware info</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">93143 wrote:</div><div class="quotecontent">Quote:would music like this be possible?I don't see why not.  It might not sound identical, but I don't hear anything obviously out of the ballpark...  Just be sure to use an appropriate pre-emphasis filter on the samples, because the interpolator will muffle them.</div><br />Yeah, I actually looked inside of the game and there was a file that just contained audio. I played it in Audacity, and I noticed that the song wasn't actually all arranged, but all the instruments were there. (Not the FM ones, off course) The thing is, the audio in the file played <em>very</em> fast, so I had to slow it down to sound normal. Would this be to make up for limited space?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>93143</b> [ Sun Feb 15, 2015 12:23 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: SNES audio hardware info</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Probably.  One thing you'll notice if you get into SNES music is that sample data doesn't tend to be high-resolution unless it really needs to be, and sometimes not even then.  Saving audio RAM and saving cartridge space are probably two-thirds of the reason SNES audio was sometimes muffled (the third reason being lack of proper prefiltering of samples to counteract the effect of the interpolation filter).<br /><br />Now, you can stream audio to the SPC700 by continually exercising the I/O ports during playback.  Tales of Phantasia famously used this technique to stream a (muffled) vocal track during the intro song, and Star Ocean's soundtrack is undumpable (in SPC format at least) because they changed out instrument data on the fly.  Hitting all four ports with HDMA, it seems to me that it might be possible to push nearly 40 kB per second depending on how busy the S-SMP is.  That's enough for 32 kHz stereo BRR.  And, of course, blargg has demonstrated that if you don't mind dedicating a lot of CPU time to it, you can stream uncompressed 32 kHz 16-bit stereo PCM - which there's room for about a minute of if there's no actual game hogging up the cartridge...

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Espozo</b> [ Sun Feb 15, 2015 12:39 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: SNES audio hardware info</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />If your using 4 HDMA ports for audio, doesn't that mean you have 4 less ports for other things like scrolling line by line?<br /><br /><div class="quotetitle">93143 wrote:</div><div class="quotecontent">if you don't mind dedicating a lot of CPU time to it, you can stream uncompressed 32 kHz 16-bit stereo PCM - which there's room for about a minute of if there's no actual game hogging up the cartridge...</div><br />Sorry if I sound stupid, but what is taking up CPU time if it is uncompressed? I also wonder about the MSU-1 and what it does to provide &quot;32 kHz 16-bit stereo PCM&quot;. Is it a coprocessor that gives the CPU time to do other things?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>93143</b> [ Sun Feb 15, 2015 2:04 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: SNES audio hardware info</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Espozo wrote:</div><div class="quotecontent">If your using 4 HDMA ports for audio, doesn't that mean you have 4 less ports for other things like scrolling line by line?</div><br />Yes, but I think you could do it with only two HDMA channels.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Sorry if I sound stupid, but what is taking up CPU time if it is uncompressed?</div><br />Something's gotta write to those ports.  Even HDMA stalls the CPU while it's firing.  And it strikes me that there's a fairly strict bandwidth limit on HDMA; once you've written all four I/O ports, you have to wait for the S-SMP to notice and get the data before you write again, which I suspect means you can only hit each port once per HBlank.  If you want to go faster, you have to put the S-CPU in a polling loop so it can send the SPC700 new data as soon as it signals that it's ready.<br /><br />Also, IIRC the audio in blargg's demo was in fact compressed, using a lossless scheme incompatible with the S-DSP.  The S-CPU decompressed it before sending it to the audio module, which played it by putting it in the echo buffer.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I also wonder about the MSU-1 and what it does to provide &quot;32 kHz 16-bit stereo PCM&quot;. Is it a coprocessor that gives the CPU time to do other things?</div><br />MSU1 audio is full-scale Red Book at 44.1 kHz.  It uses the analog passthrough pins on the cartridge slot to completely bypass the digital part of the audio module (and of the rest of the SNES, for that matter).  blargg's demo doesn't use the MSU1.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Espozo</b> [ Sun Feb 15, 2015 7:40 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: SNES audio hardware info</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Just thinking, if you're not constantly uploading music, couldn't you use all 4 HDMA channels when you are doing something like changing levels, and then have all 8 free? I don't see why not.<br /><br /><div class="quotetitle">93143 wrote:</div><div class="quotecontent">Something's gotta write to those ports.  Even HDMA stalls the CPU while it's firing.</div><br />I know that you said it takes up a lot of processor time, but does it really take up more time than if you used 4 HDMA channels for anything else? Would blarg's demo along with an actual game be out of the question? From what you told me, the MSU-1 seems a bit like &quot;cheating&quot; and I never really wanted to use it in the first place.<br /><br /><div class="quotetitle">93143 wrote:</div><div class="quotecontent">Also, IIRC the audio in blargg's demo was in fact compressed, using a lossless scheme incompatible with the S-DSP.  The S-CPU decompressed it before sending it to the audio module, which played it by putting it in the echo buffer.</div><br />If you're just swapping out instruments with HDMA and your not planning on playing an entire song using it, you can still have the samples be compressed and this would save on CPU time?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sun Feb 15, 2015 9:44 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: SNES audio hardware info</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Between levels, you're often DMAing to VRAM. If a normal DMA finishes too close to the start of HDMA, this could cause the DMA controller in a launch console (S-CPU revision 1) to crash.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>bazz</b> [ Sun Feb 15, 2015 9:57 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: SNES audio hardware info</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />MSU1 only looks like cheating until you realize there is a hardware implementation of the design in Verilog. Meaning that it's as real as the Super FX is. <br /><br />What do I think? You didn't ask lol. but here goes : <br /><br />I think you should stop focusing on all this HDMA / DMA / streaming balogna and focus on tracking

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>psycopathicteen</b> [ Sun Feb 15, 2015 10:49 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: SNES audio hardware info</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I know that you said it takes up a lot of processor time, but does it really take up more time than if you used 4 HDMA channels for anything else? Would blarg's demo along with an actual game be out of the question? From what you told me, the MSU-1 seems a bit like &quot;cheating&quot; and I never really wanted to use it in the first place.</div><br /><br />The 65816 has to wait for the SPC700 to keep up with it.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Espozo</b> [ Sun Feb 15, 2015 12:00 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: SNES audio hardware info</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">bazz wrote:</div><div class="quotecontent">I think you should stop focusing on all this HDMA / DMA / streaming balogna and focus on tracking</div><br />I'll be waiting on you for that...<br /><br /><div class="quotetitle">psycopathicteen wrote:</div><div class="quotecontent">The 65816 has to wait for the SPC700 to keep up with it.</div><br />What a slowpoke. <img src="./images/smilies/icon_rolleyes.gif" alt=":roll:" title="Rolling Eyes" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>93143</b> [ Sun Feb 15, 2015 1:03 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: SNES audio hardware info</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Espozo wrote:</div><div class="quotecontent">couldn't you use all 4 HDMA channels</div><br />I meant that I think you could fully occupy all four SPC700 I/O ports with just two HDMA channels.  One mode 4 indirect addressed for data, and one mode 0 direct addressed for transfer control (a byte the S-SMP can check so it knows the data is new).  You waste a write this way, but the overhead is a lot lower and you free up two channels.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I know that you said it takes up a lot of processor time, but does it really take up more time than if you used 4 HDMA channels for anything else?</div><br />No.  I'm talking about the case where you don't have enough bandwidth with just HDMA, and you have to put the CPU in a poll/update loop.<br /><br />Refreshing audio RAM is very tedious compared to refreshing VRAM, because you can't DMA to it.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Would blarg's demo along with an actual game be out of the question?</div><br />It's one minute of music, and it takes 4 MB.  And the CPU is almost at 100% load just decompressing the audio and feeding it to the SPC700.  So yes.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">If you're just swapping out instruments with HDMA and your not planning on playing an entire song using it, you can still have the samples be compressed and this would save on CPU time?</div><br />The samples have to be compressed.  The S-DSP only understands BRR.  And further compression of BRR won't get you anywhere; it's pretty tightly packed already.<br /><br />A sample swapping engine is a very sophisticated trick.  Keep in mind that undumpable games are very rare, and that most of them are that way not because of streaming but because the developers didn't understand the SPC700 and wrote audio engines that required continuous S-CPU input to work.<br /><br /><div class="quotetitle">bazz wrote:</div><div class="quotecontent">I think you should stop focusing on all this HDMA / DMA / streaming balogna and focus on tracking</div><br />This.  I probably shouldn't have mentioned streaming; it's a very advanced technique, and only a few games used it very late in the system's life.  (I had Bad Apple on the brain, I guess.)  The meat and potatoes is using what you've already put in the audio RAM to make fine music and immersive sound effects.<br /><br />It's limited, but it's not <em>that</em> limited.  When I said the music you linked was probably possible, I wasn't taking streaming into account.  Plok, Rock 'n' Roll Racing, Vortex, Dracula X, the DKC games, Super Star Wars, Energy Breaker, Final Fantasy VI, Seiken Densetsu 3, Super Mario RPG, Actraiser, Super Turrican 2 - none of them use streaming.  Even Tales of Phantasia only uses streaming for voice work; the instrumentals are all preloaded.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Espozo</b> [ Sun Feb 15, 2015 1:26 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: SNES audio hardware info</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">93143 wrote:</div><div class="quotecontent">Would blarg's demo along with an actual game be out of the question?It's one minute of music, and it takes 4 MB.  And the CPU is almost at 100% load just decompressing the audio and feeding it to the SPC700.  So yes.</div><br />I thought that you said that the SPC 700 decompressed the audio. Is the &quot;S-CPU&quot; not the sound processor? Would the music be possible in a game if there was no compression and you instead used an insanely large cart? I'm probably not going to try something like this, I'm just curious.<br /><br /><div class="quotetitle">93143 wrote:</div><div class="quotecontent">It's limited, but it's not that limited.  When I said the music you linked was probably possible, I wasn't taking streaming into account.</div><br />Just for the heck of it, here's how all the instruments and sound effects sound in the game before slowing them down. (You can't upload a WAV file? Huh.)<br /><br /><div class="attachtitle">Attachment:</div><div class="attachcontent">
			<span class="genmed">
				<img src="./styles/subsilver2/imageset/icon_topic_attach.gif" width="14" height="18" alt="" title="" /> 
				<a href="./download/file.php?id=2683">Gunforce 2 fast.rar</a> [1.13 MiB]
			</span><br />
			<span class="gensmall">Downloaded 30 times</span>
		

		<br />
	</div><br />You know, if sound on the SNES is so flexible, then why do a lot of songs from games like Street Fighter 2 sound a lot different than the arcade version? I'm pretty sure sound on the CPS 1 is FM, but couldn't you have instruments that sound exactly like FM that you can use?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>psycopathicteen</b> [ Sun Feb 15, 2015 1:28 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: SNES audio hardware info</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />That reminds me of something I heard about the DKC games.  Dave Wise said in an interview, that he used a synthesizer that produced instruments by linking shorter waveforms together, and programmed the SPC700 to emulate it.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>5</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>