<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Need assistance with creating irq with Sprite 0 (pg2 please)</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Need assistance with creating irq with Sprite 0 (pg2 please)</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=10112">http://forums.nesdev.com/viewtopic.php?f=2&amp;t=10112</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>2</strong> of <strong>2</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>infidelity</b> [ Tue May 21, 2013 3:32 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Need assistance with creating irq with MMC3</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />OK, last night I took a look at the actual irq used in Zelda 1, and i tweaked it to<br />use specific registers instead of hard coded values. This irq allows me to actualy<br />go past the HUD, i can get the irq down to about the middle of the screen, but if I<br />try to make it lower, and theres say about 4 of those jumping spiders, and Link shooting<br />his sword, i'll get bad flickering. If it's just Link on the screen, and i try to <br />bring the irq even further down, the irq will begin to shake as well. I'm assuming<br />this irq was designed with the intention that this would not be used with coexisting<br />sprites, since this irq is loaded when it's only Link on the playing field.<br /><br />Anyway, this is the code that zelda 1 uses. And, would i be able to get this irq to<br />stop flickering? This code here is the absolute best one i got going on with my irq<br />engine.<br /><br /><strong>Tweaked Zelda 1 IRQ</strong><br />AD0220		:LDA $2002<br />AC1401		;LDX $114 - part of Y scroll (set to 1A)<br /><strong>AE1501		;LDY $115 - part of Y scroll (this is what i'm using for adjustable height, starts at 18, just below the HUD)</strong><br />CA		;DEX<br />10FD		;BPL to DEX<br />88		;DEY<br />10F7		;BPL to LDY $115<br />A05E		;LDY #$5E - part of Y scroll<br />EA		;NOP<br />88		;DEY<br />10FC		;BPL to NOP<br />AD0220		;LDA $2002<br />A558		;LDA $58 - Nametable High Byte Address (20/24/28/2C)<br />A4E2		;LDY $E2 - Nametable Y Adjust (01-03)<br />8D0620		;STA $2006<br />8C0620		;STY $2006<br />AD0720		;LDA $2007<br />AD0720		;LDA $2007<br /><strong>AD1601		;LDA $116 - X scroll</strong><br />8D0520		;STA $2005<br />8D0520		;STA $2005<br />4C####		;JMP to end of irq engine/then rest of game.<br /><br />Also, I checked out $4017. It is written to once at the beginning of the reset vector, with the value of 40. But within the sound engine, a value of FF is constantly written to $4017, I tried changing that to 40, but I get the same irq shaking, I also tried C0 as the values, same end result.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Tue May 21, 2013 8:04 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Need assistance with creating irq with MMC3</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">infidelity wrote:</div><div class="quotecontent"><strong>Tweaked Zelda 1 IRQ</strong><br />AD0220		:LDA $2002<br />AC1401		;LDX $114 - part of Y scroll (set to 1A)<br /><strong>AE1501		;LDY $115 - part of Y scroll (this is what i'm using for adjustable height, starts at 18, just below the HUD)</strong><br />CA		;DEX<br />10FD		;BPL to DEX<br />88		;DEY<br />10F7		;BPL to LDY $115<br />A05E		;LDY #$5E - part of Y scroll<br />EA		;NOP<br />88		;DEY<br />10FC		;BPL to NOP<br />AD0220		;LDA $2002<br />A558		;LDA $58 - Nametable High Byte Address (20/24/28/2C)<br />A4E2		;LDY $E2 - Nametable Y Adjust (01-03)<br />8D0620		;STA $2006<br />8C0620		;STY $2006<br />AD0720		;LDA $2007<br />AD0720		;LDA $2007<br /><strong>AD1601		;LDA $116 - X scroll</strong><br />8D0520		;STA $2005<br />8D0520		;STA $2005<br />4C####		;JMP to end of irq engine/then rest of game.</div><br />There's no IRQ going on here at all, this is just a wait loop. Just think about it: this code is doing nothing but waiting and then changing the scroll. All the time spent waiting is stolen from the game engine, so if you try to split the screen too far down there will simply not be enough time for the game engine to do it's thing, specially when there's more action. If you ask me, even closer to the top of the screen this kind of code is dangerous, because you're never sure how much time the game engine will need to finish a frame, and even though it looks safe most of the time there might still be a particular location where things screw up.<br /><br />If you really want to split the screen farther down the screen you will need an actual IRQ (i.e. tell the MMC3 to fire an IRQ at scanline X), so that you can let the game engine do it's thing instead of delaying it and stealing all its time.<br /><br />Also, your way of changing the scroll is kinda weird, with the reads to $2007 and all. <a href="http://forums.nesdev.com/viewtopic.php?p=64111#p64111" class="postlink">Here</a>'s an efficient and safe sequence of writes to modify the scroll mid-frame. If you don't need fine Y scrolling (i.e. the vertical scroll is always a multiple of 8) you can simplify it a lot.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Tue May 21, 2013 8:09 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Need assistance with creating irq with MMC3</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Also, your way of changing the scroll is kinda weird, with the reads to $2007 and all</div><br />This is not his way, but Nintendo's.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Tue May 21, 2013 9:46 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Need assistance with creating irq with MMC3</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">This is not his way, but Nintendo's.</div><br />Still, it's pretty weird, and we know that the developers of the earlier games didn't have a very good understanding of the platform yet. Well, if this is indeed the original code then it's probably better to keep it.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>infidelity</b> [ Tue May 21, 2013 11:28 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Need assistance with creating irq with MMC3</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />But now you have me worried on the &quot;dangerousness&quot; of the above &quot;loop&quot; What should the actual irq engine look like? Im so close, but sprites have to be involved if im making a hg boss, plus I need to alter the irqs xy position, to give the appeatance of motion. The link you showed me, I understand what the operations are, I jusy dont know what yo define the ldas or stas, I dont know how to write text asm, im assuminh things need to be definrd?<br /><br /><strong>EDIT</strong><br /> This is the IRQ engine i have, it's whats pasted at the beginning of this thread, but i'm spelling it out here.<br /><br /><strong>1st Part</strong><br /><strong>$8000A-$8000B</strong><br />-------------<br />E0F8	;point to $7F8E0<br /><strong>END</strong><br /><br /><strong>2nd Part</strong><br /><strong>$7F8F0 (what is pointed to from $8000A-$8000B)</strong><br />----------------------------------------------<br />58		;CLI<br />AD1401		;LDA $114<br />8D00C0		;STA $C000<br />8D01C0		;STA $C001<br />AE1001		;LDX $110<br />9D00E0		;STA,X $E000<br />F00F		;BEQ to 4C13F9<br />AE1101		;LDX $111<br />BD25F9		;LDA,X $F925 (low byte address for current irq loop)<br />8D1201		;STA $112<br />BD27F9		;LDA,X $F927 (high byte address for current irq loop)<br />8D1301		;STA $113<br />4C13F9		;JMP $F913<br /><br />this is what i have the jmp goto, i have it check $110, and if it's equal, to wipe out all the registers used with the irq (basicly shut it down), then after that, i branch to the regular game code.<br /><br />AD1001		;LDA $110<br />D00A		;BNE to 4C80FF<br />A207		;LDX #$07<br />A900		;LDA #$00<br />9D1001		;STA,X $110<br />CA		;DEX<br />D0F8		;BNE to A900<br />4C80FF		;JMP $FF80 (rest of game)<br /><strong>END</strong><br /><br /><strong>3rd Pard</strong><br /><strong>$8000E-$8000F</strong><br />-------------<br />04F9	;point to $7F904<br /><strong>END</strong><br /><br /><strong>4th Part</strong><br /><strong>$7F914 (what is pointed to from $8000E-$8000F</strong><br />---------------------------------------------<br />08		;PHP<br />48		;PHA<br />8A		;TXA<br />48		;PHA<br />98		;TYA<br />48		;PHA<br />8D00E0		;STA $E000<br />8D01E0		;STA $E001<br />6C1201		;JMP ($112) (currently loaded irq loop address in $112-$113)<br /><strong>END</strong><br /><br /><strong>5th Part</strong><br /><strong>$7F929 (first irq loop i have, basicly off)</strong><br />-------------------------------------------<br />8D00E0		;STA $E000<br />68		;PLA<br />A8		;TAY<br />68		;PLA<br />AA		;TAX<br />68		;PLA<br />28		;PLP<br />40		;RTI<br /><strong>END</strong><br /><br />That's all i have.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>infidelity</b> [ Tue May 28, 2013 12:42 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Need assistance with creating irq with MMC3</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Ok, i have given up on any kind of mapper based irq. I've had no luck getting it going. It also seems Zelda lacks any kind of usage for $FFFE-$FFFF, cause that interupt was never being activated. I've noticed the MMC3 Megaman games, have some sort of &quot;Thread&quot; (i'm going by what i read in Matrixz notes on Megaman 4) that does things to the stack, and loads up the High/Low byte irq, and jams it into the stack so that it can be read.<br /><br />Anyway, i have given up on that, and i have now went back to figuring out the Sprite 0 split. Games like Zelda II, and Duck Tales, are able to have a split screen using Sprite 0, while having multiple sprite actions going on.<br /><br />I'm at the point now, where i have the split below the hud not shaking, but it will start to when more than 2 sprites are on the screen. I'm assuming this is because of those &quot;loops&quot; i was told about. <br /><br />Before everything was based on an irq mapper. So what i would like to know please, is how do i manualy write the Y position of a split scroll  to $2005/$2006?<br /><br />I tried reading the skinny on splitting, on nesdev wiki, but im not an expertise in this field, plus alot of it was text based code, and i don't understand that (to a degree).<br /><br />This is what i have, and i know it has to do with these &quot;loops&quot; which is causing the shaking. This is the best so far that i've tinkered with, and i'm very close to getting this to work.<br /><br />Also, i'm only able to adjust the Y position about every 8 pixels it seems, not just a pixel at a time (which i would love) I have to adjust the Nametable Address in order to mess with the Y positioning.<br /><br />So please, can someone give me the proper code on writing to $2005/$2006 for a split screen, without these &quot;loops&quot;? I'm so close!<br /><br />AD0220		;LDA $2002<br />A018		;LDY #$18 Puts Y split just below the HUD<br />A230		;LDX #$30 Fine tune Y split just below the HUD<br />CA		;DEX<br />10FD		;BPL to DEX<br />88		;DEY<br />10F8		;BPL to LDX #$30<br />A04E		;LDY #$4E Puts Y split just below the HUD<br />EA		;NOP<br />88		;DEY<br />10FC		;BPL to NOP<br />AD0220		;LDA $2002<br />A558		;LDA $58 High Address Nametable (20,24,28,2C)<br />A4E2		;LDY $E2 Low Address Nametable<br />8D0620		;STA $2006<br />8C0620		;STY $2006<br />AD0720		;LDA $2007<br />AD0720		;LDA $2007<br />60		;RTS

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tomaitheous</b> [ Sat Jun 01, 2013 6:20 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Need assistance with creating irq with Sprite 0 (pg2 ple</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />infidelity:  You seem to be missing a lot of, or have serious holes in, the fundamental understanding of how the NES and how game logic works. <br /><br /> Sprite 0 doesn't generate an IRQ (like with some other systems). So the game logic must sit there and poll a status register until the sprite is shown on screen. The poll loop eats up cpu cycles/resource. There are only so many cpu cycles in a single frame (be it 1/60 or 1/50) and all of the game logic needs to fit in there. When you extend that loop (by moving the sprite further down the screen), you are basically removing cycles to what the original developers allocated for game logic to run on (remember, this is an old machine. Timings can be very tight and resources very restricted). <br /><br /> What an IRQ does, is allow a game to continue on with the game logic and when the IRQ conditions trigger, it temporarily jumps to a different (and hopefully short/small routine if during active display or such) to make whatever changes. *You* need to setup the IRQ hardware and you need to write the IRQ interrupt handler code. That's the simple side of the explanation, because there are a lot more variables that needs to be take into consideration (which is usually how this effects the game logic side of things; how it effects timings, etc).<br /><br /> I don't know what community you come from, but if it's the romhacking community - then you have a big uphill battle (I don't recognize you from RHDN). Romhackers always jump into such things and learn things the hard way and out of order on top of that. If you having a hard time figuring this out, I suggest taking some time to get to know the NES better. Try to understand the hardware better. I.e. try to write your own code from scratch for the NES to see how it works. Without a real understanding of how any of this works, you're just taking the hard road without the prerequisites. Of course, that's just my opinion (become a coder first, then a hacker). But.. if you're a true romhacker (like the elites) - you'll persevere.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>2</strong> of <strong>2</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>