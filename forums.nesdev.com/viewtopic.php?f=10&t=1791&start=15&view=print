<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Need Some Direction</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Need Some Direction</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=10&amp;t=1791">http://forums.nesdev.com/viewtopic.php?f=10&amp;t=1791</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>2</strong> of <strong>2</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Mon Jul 10, 2006 5:45 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">random wrote:</div><div class="quotecontent">I'm having trouble understanding how the program counter and relative addressing works in relation with JMP and the various branch functions.</div>
<br />Well, you don't <strong>have</strong> to understand that. Unless you are programming an emulator, then you have to.
<br />
<br />If you want to make NES games, you can trust that the 6502 will do the right thing, it always does. When branching, you don't have to worry about relative displacement, you just use a label. It's up to the assembler to convert the labels to the signed value that represents the displacement.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>random</b> [ Mon Jul 10, 2006 2:40 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Yet more questions...
<br />
<br />How exactly does the stack pointer work and what does it do? I'm getting different definitions from different docs.
<br />
<br />While looking through some homebrewed games for the NES I'm noticing headers, ".org" seems to be common to a lot of them. The 6502 stuff I'm reading doesn't mention it at all. Naturally, I'm asking: what do they do and how do they work? Also limited information on these.
<br />
<br />Additionally while looking through the same games, I'm seeing things like the following:
<br />
<br />1) SOME_NAME = SOME_MEMORY_ADDRESS_OR_NUMBER
<br />
<br />2) SOME_NAME    dc.b
<br />3) SOME_NAME    ds.b
<br />
<br />And strange (well I haven't seen it in the docs) subroutine stuff like:
<br />
<br />4) SOME_NAME:
<br />5) .SOME_NAME
<br />6) SOME_NAME subroutine (following this would sometimes include the .SOME_NAME form)
<br />
<br />Of course, again, none of the docs I'm reading explain stuff like this. I can only guess that the different subrountine forms are personal preference or something (different syntax maybe?).
<br />
<br />Thank you for any help.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Mon Jul 10, 2006 3:42 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">If you want to make NES games, you can trust that the 6502 will do the right thing, it always does. When branching, you don't have to worry about relative displacement, you just use a label.</div>
<br />Unless you're trying to troubleshoot "branch too far" errors and your assembler doesn't automatically convert a BNE to a BEQ around a JMP, or if you're trying to troubleshoot cycle timing errors in your raster effect.
<br />
<br />random:
<br />The "stack" is an area of memory from $0100 to $01FF. When you "push" something, the byte is written to the address at the current value of the stack pointer, and then the stack pointer goes down by 1. (There are only 8 changeable bits in the 6502's stack pointer; if it is currently at $0100, it wraps to $01FF.) When you "pull" something, the stack pointer goes up by 1 (wrapping from $01FF to $0100), and then the byte is read. <ul><li>PHA and PHP are one push; PLA and PLP are one pull. </li><li>JSR is two pushes, and RTS is two pulls. </li></ul>The .org pseudoinstruction sets the current address. This tells the assembler where your code is supposed to be loaded into memory, so that labels will be assigned correctly.<br /><br />The next question (examples 1 through 6) discusses the various ways of assigning labels, or compile-time constant values. Much of this depends on the specifics of your assembler; only your examples 1 and 5 are valid in CA65. <ul><li>name = expression<br />Assigns the label 'name' to equal the value of expression. Assemblers have different limitations as to what in the expression is allowed to be unknown at compile time (e.g. labels found in other modules). </li><li>name:<br />Assigns the label 'name' to equal the current address. </li><li>name: lda #0<br />Assigns the label 'name' to equal the address at the start of the instruction. </li><li>name: .byte 1, 2, 3, 4, 5<br />Assigns the label 'name' to equal the current address, and then places bytes of value $01, $02, $03, $04, and $05 here. Some assemblers use .dcb (define constant byte) instead of .byte. </li><li>name: .res 8<br />Assigns the label 'name' to equal the current address, and then places 8 bytes of "unimportant" value. Useful when the current address is in RAM and you're trying to knock out space for a variable. </li></ul> Read the CA65 manual for details.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>2</strong> of <strong>2</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>