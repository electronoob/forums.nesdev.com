<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=9&amp;t=7809" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2011-06-02T21:14:52-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=9&amp;t=7809</id>
<entry>
<author><name><![CDATA[MottZilla]]></name></author>
<updated>2011-06-02T21:14:52-07:00</updated>
<published>2011-06-02T21:14:52-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7809&amp;p=79110#p79110</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7809&amp;p=79110#p79110"/>
<title type="html"><![CDATA[Idea of High-Capacity Mapper]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7809&amp;p=79110#p79110"><![CDATA[
Now I see what you mean. The lowest CHR bit you're talking about. Well in that case you could still have 4 megabytes of PRG or something like SXROM with 32KB PRGRAM and 1MB PRGROM. Still alot of memory.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=1726">MottZilla</a> — Thu Jun 02, 2011 9:14 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2011-06-02T19:57:03-07:00</updated>
<published>2011-06-02T19:57:03-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7809&amp;p=79106#p79106</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7809&amp;p=79106#p79106"/>
<title type="html"><![CDATA[Idea of High-Capacity Mapper]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7809&amp;p=79106#p79106"><![CDATA[
<div class="quotetitle">MottZilla wrote:</div><div class="quotecontent"><br />But if you are in 8K mode, and the output now controls upper PRG-ROM lines and no CHR-RAM lines, what exactly is the problem? Why are you needing 4K mode?<br /></div><br />You need 4KB mode to make use of A12. In 8KB mode, since the MMC1 doesn't do any sort of management on the 4KB level, A12 just passes through, and the NES directly picks which 4KB (i.e. which pattern table) it wants. If it passes through, it has no use for bankswitching, so we don't want it to pass through, which is why 4KB mode is needed.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Is there some reason you couldn't be in 8K mode?<br /></div><br />Only if you want to use A12 for bankswitching purposes. If you only want to use A13 and up 8KB mode is fine.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Thu Jun 02, 2011 7:57 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[MottZilla]]></name></author>
<updated>2011-06-02T19:15:01-07:00</updated>
<published>2011-06-02T19:15:01-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7809&amp;p=79103#p79103</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7809&amp;p=79103#p79103"/>
<title type="html"><![CDATA[Idea of High-Capacity Mapper]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7809&amp;p=79103#p79103"><![CDATA[
I'm still missing the deal with 8k versus 4k mode. I understand that in 4K mode if you don't have the same value in both CHR registers it'll bankswitch undesirably for PRG purposes. But if you are in 8K mode, and the output now controls upper PRG-ROM lines and no CHR-RAM lines, what exactly is the problem? Why are you needing 4K mode? <br /><br />I'm not sure if I'm missing something or not. I understand your point tokumaru about pattern table access and the two CHR registers and 4K mode. But if you are in 8K mode then you don't have to worry about that at all anyway. Is there some reason you couldn't be in 8K mode?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=1726">MottZilla</a> — Thu Jun 02, 2011 7:15 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2011-06-02T18:19:09-07:00</updated>
<published>2011-06-02T18:19:09-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7809&amp;p=79102#p79102</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7809&amp;p=79102#p79102"/>
<title type="html"><![CDATA[Idea of High-Capacity Mapper]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7809&amp;p=79102#p79102"><![CDATA[
<div class="quotetitle">MottZilla wrote:</div><div class="quotecontent"><br />I'm not sure what you mean about CHR A12. My idea is to connect CHR-RAM like you would on UNROM. Meaning the MMC1 wouldn't be controlling CHR at all.<br /></div><br />Even if the outputs of the MMC1 are not connected to the CHR chip, it will still make decisions based on the signals that are connected to it. Now that I think of it, it might be possible to trick the MMC1 by feeding it GND or Vcc instead of A12 from the NES, so that the it thinks that only one pattern table is ever accessed, which would allow you to use 4KB mode without having to write the bank number to both registers.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Thu Jun 02, 2011 6:19 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[MottZilla]]></name></author>
<updated>2011-06-02T17:40:14-07:00</updated>
<published>2011-06-02T17:40:14-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7809&amp;p=79101#p79101</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7809&amp;p=79101#p79101"/>
<title type="html"><![CDATA[Idea of High-Capacity Mapper]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7809&amp;p=79101#p79101"><![CDATA[
I'm not sure what you mean about CHR A12. My idea is to connect CHR-RAM like you would on UNROM. Meaning the MMC1 wouldn't be controlling CHR at all. Modding an existing board might be hard. But part of the idea is if you needed more capacity a PCB with MMC1 clone could be designed with this high capacity method in mind.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=1726">MottZilla</a> — Thu Jun 02, 2011 5:40 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2011-06-02T09:19:09-07:00</updated>
<published>2011-06-02T09:19:09-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7809&amp;p=79080#p79080</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7809&amp;p=79080#p79080"/>
<title type="html"><![CDATA[Idea of High-Capacity Mapper]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7809&amp;p=79080#p79080"><![CDATA[
Yes, but the lower line of the MMC1 CHR registers would just be a plain copy of PPU A12 if you set MMC1 in 8kb CHR-switching mode.<br /><br />So to use it as a latch you'd *have* to set the MMC1 in 4kb CHR-switching mode, and always set both Reg1 and Reg2 the same value, so that this latched value is constant on MMC1's CHR-A12 line.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Thu Jun 02, 2011 9:19 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[qbradq]]></name></author>
<updated>2011-06-02T09:14:30-07:00</updated>
<published>2011-06-02T09:14:30-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7809&amp;p=79078#p79078</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7809&amp;p=79078#p79078"/>
<title type="html"><![CDATA[Idea of High-Capacity Mapper]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7809&amp;p=79078#p79078"><![CDATA[
I highly doubt I'll ever need more that 256KB for a game. This is just a fun idea <img src="http://forums.nesdev.com/images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3706">qbradq</a> — Thu Jun 02, 2011 9:14 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2011-06-02T09:13:51-07:00</updated>
<published>2011-06-02T09:13:51-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7809&amp;p=79077#p79077</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7809&amp;p=79077#p79077"/>
<title type="html"><![CDATA[Idea of High-Capacity Mapper]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7809&amp;p=79077#p79077"><![CDATA[
<div class="quotetitle">MottZilla wrote:</div><div class="quotecontent"><br />You know if you want a "NES" like platform with the benefits of CDROM the answer IS the PC-Engine.<br /></div><br />Or it would be if the TG16 had become popular in the United States. I've seen one TG16 in my life, and it was someone's TurboExpress in college.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />the more practical thing to do if you need more space for your NES game is my earlier suggestion. Take the MMC1 SUROM to the next level. Reuse more CHR bits to control a bigger PRG-ROM. There are 5 CHR bits that aren't needed at all if you are using CHR-RAM.<br /></div><br />CHR A12 passes through the MMC1 unchanged in 8K mode. To make use of it would involve rewiring A12 on the cart edge to A12 on the PRG RAM skipping the MMC1 entirely. Then ground the cart A12 input on the MMC1 and use 4K mode, freeing all of $A000 for extra bank bits.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Or you could make more of an extension of SXROM so that you could have 32kb of bankable PRG-RAM<br /></div><br />I think the idea was to allow far more than 32 KB of nonvolatile memory: "up to 16MB of saved data without requiring a battery" as qbradq put it.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Thu Jun 02, 2011 9:13 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[MottZilla]]></name></author>
<updated>2011-06-02T09:02:28-07:00</updated>
<published>2011-06-02T09:02:28-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7809&amp;p=79075#p79075</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7809&amp;p=79075#p79075"/>
<title type="html"><![CDATA[Idea of High-Capacity Mapper]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7809&amp;p=79075#p79075"><![CDATA[
<div class="quotetitle">lidnariq wrote:</div><div class="quotecontent"><br />Tangenting, I've recently had this silly idea of adding a CDROM drive to the expansion port of the NES, much like the PC-Engine's CDROM. Same problem, same approximately-FDS, but with streaming audio from disk.<br /></div><br /><br />You know if you want a "NES" like platform with the benefits of CDROM the answer IS the PC-Engine. It was designed with getting Famicom developers on board afterall with its similar CPU and likely other aspects of design. <br /><br />All these ideas are fun to come up with but the more practical thing to do if you need more space for your NES game is my earlier suggestion. Take the MMC1 SUROM to the next level. Reuse more CHR bits to control a bigger PRG-ROM. There are 5 CHR bits that aren't needed at all if you are using CHR-RAM. So that should give you 32 different 256KB Pages of ROM you could control giving you 8 Megabytes of ROM. I highly doubt you need this much space for any such NES game. Or you could make more of an extension of SXROM so that you could have 32kb of bankable PRG-RAM but also 2 megabytes of PRG-ROM.<br /><br />All this can be done without creating any new mapper, just by rewiring an existing one of which is available new from RetroUSB. You could even try getting BunnyBoy to make a MMC1 PCB that is already capable of being wired this way for more PRG capacity.<br /><br />And again, I highly doubt you need 8 Megabytes of PRG-ROM. So this solution should work for you.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=1726">MottZilla</a> — Thu Jun 02, 2011 9:02 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[qbradq]]></name></author>
<updated>2011-06-02T05:28:24-07:00</updated>
<published>2011-06-02T05:28:24-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7809&amp;p=79066#p79066</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7809&amp;p=79066#p79066"/>
<title type="html"><![CDATA[Idea of High-Capacity Mapper]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7809&amp;p=79066#p79066"><![CDATA[
I had thought about using an MCU with a latch for data I/O, but it would still require all of the decoding logic and whatnot. It's not like I'm actually going to build this thing anyway <img src="http://forums.nesdev.com/images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /><br /><br />As for the 5V-compatible Flash ROM, I was not going to use 5V Flash. I was going to use 3.6V Flash and interface it with a 5V-compatible 3.3V latch. A latch is needed anyway, and this provides logic level translation. You can't beat that <img src="http://forums.nesdev.com/images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3706">qbradq</a> — Thu Jun 02, 2011 5:28 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[infiniteneslives]]></name></author>
<updated>2011-06-01T23:48:20-07:00</updated>
<published>2011-06-01T23:48:20-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7809&amp;p=79054#p79054</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7809&amp;p=79054#p79054"/>
<title type="html"><![CDATA[Idea of High-Capacity Mapper]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7809&amp;p=79054#p79054"><![CDATA[
You could solve a lot of the SD card formatting issues if you just had a simple microcontroller interfacing between the NES and SD card.  <br /><br />You'd just need to setup a way to ask the uC for specific data and it could retrieve it at high speed and provide a full byte per clock cycle to the NES through a register.  It could be similar for writing to the SD card kind of like what I'm trying to do with my project.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4832">infiniteneslives</a> — Wed Jun 01, 2011 11:48 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[lidnariq]]></name></author>
<updated>2011-06-01T23:14:46-07:00</updated>
<published>2011-06-01T23:14:46-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7809&amp;p=79052#p79052</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7809&amp;p=79052#p79052"/>
<title type="html"><![CDATA[Idea of High-Capacity Mapper]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7809&amp;p=79052#p79052"><![CDATA[
<div class="quotetitle">qbradq wrote:</div><div class="quotecontent"><br />Lidnariq,<br /><br />I am not quite sure I understood your comments. I was thinking of using Flash ROMs, not EEPROMs. You can get a 1MB serial Flash ROM for $1.61 USD at Mouser. An 8MB chip is $3.71, and a 16MB chip is $7.18. I seriously doubt anyone will find a use for 16MB on an NES project, unless it's a UNROM pirate cart :D<br /></div>AFAIK, flash ROMs are NOR EEPROMs... The pricing I saw on digikey was pretty awful -- ~$10 for a 8MB one. That said, I don't see a 5V-compatible flash rom on mouser for a sane price...<br /><br />Using something like compactflash (or any other parallel-bus flash) has the advantage that cpu-based reading isn't even slower. The big advantage to using something like CF (or SD or whatever) is that you can copy larger content using a card reader. (The downside is you now have to reimplement FAT)<br /><br /><br />Tangenting, I've recently had this silly idea of adding a CDROM drive to the expansion port of the NES, much like the PC-Engine's CDROM. Same problem, same approximately-FDS, but with streaming audio from disk.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3512">lidnariq</a> — Wed Jun 01, 2011 11:14 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Memblers]]></name></author>
<updated>2011-06-01T22:19:27-07:00</updated>
<published>2011-06-01T22:19:27-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7809&amp;p=79048#p79048</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7809&amp;p=79048#p79048"/>
<title type="html"><![CDATA[Idea of High-Capacity Mapper]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7809&amp;p=79048#p79048"><![CDATA[
I like the serial memory idea, it's what I've wanted to go with on Squeedo rev3 when I do it (both serial dataflash and micro SD).  My plan, if/when the memory controller works, would copy the data off it nearly instantly (the dataflash would be faster and non-removable, which is why there would be both types).<br /><br />With the NES using it directly, I wonder if there would be much of a speed penalty with using micro SD compared to other serial flash.  Technically, you don't have to use FAT16/FAT32, if it helped any you could use your own custom formatting/filesystem (then have a PC program or something to make disk images and add/remove files).<br /><br />I definitely agree that 32kB is too small, 128kB SRAM doesn't cost much more and would be a lot more useful.  32kB for CHR seems like enough.<br /><br />BTW, the sound synth I'm working on (to use NES expansion port/controller port/FC exp port) is also supposed to include a large serial memory.  Cool thing with that is that multiple games should be able to use it, for saving or for loading.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=10">Memblers</a> — Wed Jun 01, 2011 10:19 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[MottZilla]]></name></author>
<updated>2011-06-01T22:05:18-07:00</updated>
<published>2011-06-01T22:05:18-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7809&amp;p=79046#p79046</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7809&amp;p=79046#p79046"/>
<title type="html"><![CDATA[Idea of High-Capacity Mapper]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7809&amp;p=79046#p79046"><![CDATA[
I think 128KB of bankable memory would be enough for NES if you mean a system with mass storage to load the 128KB of PRG-RAM. If you are going to do that though I'd recommend having 32kb (or more) of CHR-RAM with bank switching so you can get the benefits of quick CHR banking.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=1726">MottZilla</a> — Wed Jun 01, 2011 10:05 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2011-06-01T21:03:28-07:00</updated>
<published>2011-06-01T21:03:28-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7809&amp;p=79044#p79044</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7809&amp;p=79044#p79044"/>
<title type="html"><![CDATA[Idea of High-Capacity Mapper]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7809&amp;p=79044#p79044"><![CDATA[
I agree with MottZilla that having more PRG RAM than FDS has benefits. But do we need 256 KiB like the TGCD's Super System Card, or can we get away with half that?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Wed Jun 01, 2011 9:03 pm</p><hr />
]]></content>
</entry>
</feed>