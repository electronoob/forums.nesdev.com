<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Rotating room collision.</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Rotating room collision.</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=12&amp;t=17308">http://forums.nesdev.com/viewtopic.php?f=12&amp;t=17308</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>3</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>psycopathicteen</b> [ Sat Apr 28, 2018 1:56 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Rotating room collision.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Does anybody know how collision was done in rotating rooms in games?  I was thinking about doing a transform on the character's coordinates first, run the collision, then do the reverse transform, but I realized that doing two transforms will ruin precision.  So I would need to save the &quot;screen space&quot; coordinates in case the character doesn't collide.  There is still a problem with that.  Sloped tiles have no effect on x velocity under normal circumstances, whereas doing collision inside a rotating play field would.  Would I just ignore this little physics inconsistency between a sloped tile on a flat play field and a flat tile on a sloped playfield?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Optiroc</b> [ Sat Apr 28, 2018 3:41 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Rotating room collision.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">psycopathicteen wrote:</div><div class="quotecontent">Does anybody know how collision was done in rotating rooms in games?  I was thinking about doing a transform on the character's coordinates first, run the collision, then do the reverse transform, but I realized that doing two transforms will ruin precision.  So I would need to save the &quot;screen space&quot; coordinates in case the character doesn't collide.  There is still a problem with that.  Sloped tiles have no effect on x velocity under normal circumstances, whereas doing collision inside a rotating play field would.  Would I just ignore this little physics inconsistency between a sloped play field and non sloped play field?</div><br />How about doing everything in non-rotated space and apply the rotation as a final “camera effect”, so to speak. Then the only thing that would need to be rotated on the game logic side of things is the gravity vector...

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Drew Sebastino</b> [ Sat Apr 28, 2018 6:59 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Rotating room collision.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Not to mention that your character's hit box will not match the character's visual representation at all...

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>psycopathicteen</b> [ Sat Apr 28, 2018 7:56 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Rotating room collision.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Espozo wrote:</div><div class="quotecontent">Not to mention that your character's hit box will not match the character's visual representation at all...</div><br /><br />Yeah, I'd need to somehow switch vertical and horizontal collision around when it hits a certain place.<br /><br />I have an idea.  I already keep an old copy of x and y positions so that the collision routine knows where the object came from.  I can use that information to recalculate the objects movement before applying collision, and then calculate screen coordinates.  I would need to make the object slots slightly bigger again.<br /><br />I might just implement a rotating platform before I tackle doing an entire rotating room, since my next boss fight will involve a rotating platform, and I haven't even gotten to drawing the giant robot yet.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Drew Sebastino</b> [ Sat Apr 28, 2018 8:43 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Rotating room collision.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Yeah, moving the coordinates of everything around a certain point seems like the best solution, but introduces plenty of other problems. Does anyone have any idea how 3D games do collision? It's probably totally irrelevant to this though, because they have something just a <em>bit</em> more powerful than an approximately 3MHz 65816...

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Oziphantom</b> [ Sat Apr 28, 2018 11:47 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Rotating room collision.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Espozo wrote:</div><div class="quotecontent">Yeah, moving the coordinates of everything around a certain point seems like the best solution, but introduces plenty of other problems. Does anyone have any idea how 3D games do collision? It's probably totally irrelevant to this though, because they have something just a <em>bit</em> more powerful than an approximately 3MHz 65816...</div><br /><br />Always collide in World Space, and just move the camera to create local space. Very rarely does one collide in Screen space. <br /><br /><br />psycopathicteen - is this a mode 7 rotation?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>calima</b> [ Sat Apr 28, 2018 11:52 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Rotating room collision.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />3d collision is always in 3d space, so orientation is irrelevant. The basic unit is a ray, a line from this point to that point. Does it hit anything?<br />Then forms like boxes, spheres and ellipses are done on top, or with inner magic.<br /><br />If you mean which way transformations go, everything is in world space. If the player's box gets rotated, then it gets rotated, but the world doesn't.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Sun Apr 29, 2018 12:55 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Rotating room collision.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The backbone of 3D is the matrix transform, which includes arbitrary rotation, among other transformations. Actually this matrix can contain a whole chain of them baked into a single matrix with <a href="https://en.wikipedia.org/wiki/Homogeneous_coordinates" class="postlink">an interesting trick</a>.<br /><br />It's predicated on being able to multiply, though. That's the big bottleneck for older systems like this, I think.<br /><br />You can do all the same transformations in 2D, just with a matrix that's one column/row smaller (or ignored, as is usually the case with using modern hardware already built around 3D support).<br /><br />If all you need is a rotation though, the basic unit of work is <a href="https://en.wikipedia.org/wiki/Rotation#Axis_of_2_dimensional_rotations" class="postlink">4 multiplies and 2 adds per X,Y coordinate</a>. If you're talking SNES, your mode 7 background is already doing this inherently for your background, and you just need to do that transform for your sprites. (Like others said, collision is done before the transform, the transform is just a &quot;camera&quot; thing.)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Sun Apr 29, 2018 3:23 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Rotating room collision.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">rainwarrior wrote:</div><div class="quotecontent">It's predicated on being able to multiply, though. That's the big bottleneck for older systems like this, I think.</div><br />Probably why in <em>Super Castlevenia IV</em> there's no ennemies while the room is rotating, only when it's at 90° angle, so only the player's coordinates have to be transformed against the background.<br /><br />Super Mario Kart had to use the DSP-1 in order to do a lot of multiply operations per frame.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Sun Apr 29, 2018 5:26 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Rotating room collision.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Well, there's workarounds, too. Like if you had a bunch of things on a grid you can rotate an offset vector once and just reuse that between items in the grid. Or you could have enemies confined to concentric circles, etc.<br /><br />Contra III seems to have quite a few moving objects during its top-down freely rotating segments, and I don't think it had any add-on chips?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>psycopathicteen</b> [ Sun Apr 29, 2018 6:13 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Rotating room collision.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I came up with a math equation to eject objects straight vertically and horizontally so that the physics work the same both ways.<br /><br />X = Ax + By<br />Y = Cx + Dy<br /><br />popping y:<br />(Y - Cx)/D = y<br /><br />popping x:<br />(X - By)/A = x<br /><br />I haven't figured out how to do slopes while rotated though.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sun Apr 29, 2018 6:42 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Rotating room collision.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Circle collision is circle collision no matter how much the circles are rotated. And it needs zero multiplies if you have a suitable lookup table or the objects' radii are suitably constrained.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">xdistance = abs(x&#91;oneobjid&#93; - x&#91;otherobjid&#93;)<br />ydistance = abs(y&#91;oneobjid&#93; - y&#91;otherobjid&#93;)<br />sum_of_radii = type_to_radius&#91;obj_type&#91;oneobjid&#93;&#93; + type_to_radius&#91;obj_type&#91;otherobjid&#93;&#93;<br />if (xdistance &lt; sum_of_radii<br />&nbsp; &nbsp; &nbsp; and ydistance &lt; sum_of_radii<br />&nbsp; &nbsp; &nbsp; and squared&#91;xdistance&#93; + squared&#91;ydistance&#93; &lt; squared&#91;sum_of_radii&#93;):<br />&nbsp; &nbsp; log_collision(oneobjid, otherobjid)<br /></div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Sun Apr 29, 2018 6:54 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Rotating room collision.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">psycopathicteen wrote:</div><div class="quotecontent">I came up with a math equation to eject objects straight vertically and horizontally so that the physics work the same both ways.</div><br />Well if your rotation matrix coefficients are A B C D:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">A B&nbsp; &nbsp; cos a&nbsp; sin a&nbsp; &nbsp; A B<br />&nbsp; &nbsp; =&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;=<br />C D&nbsp; &nbsp;-sin a&nbsp; cos a&nbsp; &nbsp;-B A</div><br />If you wanted to invert that to make vectors that are straight vertical/horizontal after the rotation, you can just invert the angle, which just means you swap B with -B in the result. (because: cos a = cos -a, sin a = -sin -a)<br /><br />So going back and forth between the pre-rotation space and the post-rotation space is just the same transform with that one sign flipped.<br /><br />Your inversion with the division isn't wrong, I don't think, but there's an easier way.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Drew Sebastino</b> [ Sun Apr 29, 2018 7:04 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Rotating room collision.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Making the hitbox of everything a circle has been brought up, but would it be at all feasible to check a rotated box against the collision map?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>psycopathicteen</b> [ Sun Apr 29, 2018 7:08 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Rotating room collision.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">rainwarrior wrote:</div><div class="quotecontent"><div class="quotetitle">psycopathicteen wrote:</div><div class="quotecontent">I came up with a math equation to eject objects straight vertically and horizontally so that the physics work the same both ways.</div><br />Well if your rotation matrix coefficients are A B C D:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">A B&nbsp; &nbsp; cos a&nbsp; sin a&nbsp; &nbsp; A B<br />&nbsp; &nbsp; =&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;=<br />C D&nbsp; &nbsp;-sin a&nbsp; cos a&nbsp; &nbsp;-B A</div><br />If you wanted to invert that to make vectors that are straight vertical/horizontal after the rotation, you can just invert the angle, which just means you swap B with -B in the result. (because: cos a = cos -a, sin a = -sin -a)<br /><br />So going back and forth between the pre-rotation space and the post-rotation space is just the same transform with that one sign flipped.<br /><br />Your inversion with the division isn't wrong, I don't think, but there's an easier way.</div><br /><br />I thought about that, but I realized the character's running speed would be wrong.  I'll show a drawing of what I mean by it.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>3</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>