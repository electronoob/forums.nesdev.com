<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Comparative sprite capacity of 3rd and 4th gen consoles</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Comparative sprite capacity of 3rd and 4th gen consoles</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=23&amp;t=15979">http://forums.nesdev.com/viewtopic.php?f=23&amp;t=15979</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Wed May 24, 2017 8:11 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Comparative sprite capacity of 3rd and 4th gen consoles</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />A recent discussion about <a href="https://forums.nesdev.com/viewtopic.php?f=5&amp;t=15973" class="postlink">abundance of platformers on the NES</a> led to discussion about feasibility of other related genres, such as platform fighting, platform beat-em-up, and run-and-gun, on the NES and other consoles from around the same time. One objection was the sprite capability, which led to a huge digression about the comparative sprite coverage capabilities of third- and fourth-generation consoles.<br /><br />Let me try to summarize:<br /><br /><ul><li>Commodore 64<br />24 slivers (60%) of 8 sprites, plus 1 background<br />Unified memory architecture limits sprites to 1bpp, needing tradeoff among color depth, resolution, and coverage: hires, multicolor, or multicolor with hires outline overlay<br />More than 8 sprites requires raster-triggered software search</li><li>NES<br />8 slivers (25%) of frontmost 8 sprites, plus 1 background<br />Typical CHR ROM mapper's window configuration: 2 background windows (128 tiles each) and 4 sprite windows (64 tiles each)<br />Nominal CHR RAM bandwidth: 8 tiles/frame</li><li>Game Boy<br />10 slivers (50%) of leftmost 10 leftmost sprites, plus 1 background with split window</li><li>TurboGrafx-16<br />32 slivers (100%) of frontmost 16 sprites, plus 1 background</li><li>Genesis (256px mode)<br />Frontmost 32 slivers (100%) of frontmost 16 sprites, plus 2 backgrounds with split window</li><li>Genesis (320px mode)<br />Frontmost 40 slivers (100%) of frontmost 20 sprites, plus 2 backgrounds with split window</li><li>Super NES<br />Rearmost 34 slivers (106%) of frontmost 32 sprites, plus 2-3 backgrounds<br />Nominal CHR RAM bandwidth: 168 tiles/frame</li><li>Neo Geo<br />192 slivers (480%) of frontmost 96 sprites<br />Backgrounds other than the fixed HUD are made of sprites; expect backgrounds to use about half the sprite coverage<br />Hardware supports sprite shrinking<br />Existing MVS and AES cart boards use CHR ROM, rendering software compositing impossible<br />Sprite tile index is 20 bits, allowing 1.048 million distinct 16x16 units<br />Because its 320px picture continues past overscan into nominal analog blanking, many games use fix to pillarbox the display to 304px wide, giving 505% coverage</li></ul><br />A &quot;sliver&quot; is 8x1 pixels.<br />Nominal CHR RAM bandwidths exclude the sprite display list and one row or column of background tile map.<br /><br />Correct me if I'm wrong or help fill in missing info.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Oziphantom</b> [ Wed May 24, 2017 8:54 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Comparative sprite capacity of 3rd and 4th gen consoles</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The C64 also has Sprite Expansion so you can get a hires sprite with 2x Wide pixels ( thus 48 pixels(err slivers) ) that gets you 8*48=384 pixels across or if you use multicolour you get 4 pixels wide but still 384 &quot;pixels&quot; of coverage. Typically when making a sprite &quot;plane&quot; you use 7 to get a screen full ( screen being 320) and then you have 1 sprite for something hires, or use 8 to make a rolling background. <br />Also has Y expansion for 42 high sprites. Expansion doesn't incur any sprite based costs. ie you can have all 8 expanded X and Y.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>TOUKO</b> [ Wed May 24, 2017 9:39 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Comparative sprite capacity of 3rd and 4th gen consoles</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />You can maybe add the Supergrafx ??

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>TmEE</b> [ Wed May 24, 2017 9:45 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Comparative sprite capacity of 3rd and 4th gen consoles</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I wouldn't really call the &quot;window layer&quot; on MD a 3rd one, it is W or A, but not both in same space so you only ever get 2 layers. It is more like Fix layer on NeoGeo, fixed in size, cannot be scrolled (but can grow from any side of the screen, but will not be useful when it grows from left side and you use scrolling on A, there will be some graphical glitches then).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Myask</b> [ Wed May 24, 2017 9:46 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Comparative sprite capacity of 3rd and 4th gen consoles</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I'd've sworn you had an overdraw thread already.<br /><br />Also, is SNES 34 slivers or 34 <em>unique</em> slivers, such that you can have 32 larger but non-unique sprites and not drop out?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Wed May 24, 2017 10:00 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Comparative sprite capacity of 3rd and 4th gen consoles</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />It's 34 slivers. Even if the S-PPU could cache slivers already retrieved on this line, it'd still take time to draw them into the line buffer. That's why some docs refer to exceeding the sliver limit as &quot;time over&quot;.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>zzo38</b> [ Wed May 24, 2017 10:38 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Comparative sprite capacity of 3rd and 4th gen consoles</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><ul><li>PC: No sprites. One background, with ROM tiles or all-points-addressable.</li><li>Amiga: Eight 16 pixel wide sprites, three colours (or you can attach two sprites to make fifteen colours). One or two backgrounds, all-points-addressable. A blitter can be used to draw additional pictures (&quot;bobs&quot;).</li><li>My own design supports 8 pixel wide sprites (fifteen colours), a number of sprites equal to the number of tiles per scanline (normally 40). That is equal to the number of sprites it can read; it cannot read memory for more sprites than that. One background, 8 pixel wide tiles (no limit to tile height). You can use a display list to implement split-screen as well as to change the sprite address.</li></ul>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Wed May 24, 2017 12:29 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Comparative sprite capacity of 3rd and 4th gen consoles</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">zzo38 wrote:</div><div class="quotecontent">PC: One background, with ROM tiles or all-points-addressable.<br /></div>That's ... misleading. PC graphics evolved from CGA/MDA/Hercules through EGA to VGA during the 3rd and 4th console generations. While none had sprites, a handful of games and tools did use RAM tiles.<br /><br /><em>edit:</em> Actually, a large number of mid-to-late 90s commercial DOS programs started using a standardized graphical mouse cursor in text mode (e.g. Norton, Symantec utilities), which worked by reserving a small handful of characters and rendering the mouse cursor in software.<br /><br /><em>edit2:</em> During the 5th console generation, SVGA cards actually grew support for one sprite (i.e. composited dynamically during refresh), intended for the mouse cursor.<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Amiga<br /></div>OCS or AGA?<br /><br />—<br /><ul><li> Atari 7800: Up to ≈114 slivers (285%) of frontmost 30 sprites, no backgrounds. I think. Someone should sanity-check me.</li><li> CD-i: despite Wikipedia putting it in the &quot;4th generation&quot; bucket, it's shaped much more like &quot;5th generation&quot; entries: UMA, no sprites, framebuffer, blitter.</li><li> <em>edit3:</em> Intellivision: 8 slivers (40%) of 8 sprites; optionally each sprite can be made double-width (up to 80%)</li></ul>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Wed May 24, 2017 1:24 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Comparative sprite capacity of 3rd and 4th gen consoles</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><ul><li>Master System / Game Gear<br />8 slivers (25% on SMS, 40% on GG) of frontmost 8 sprites, plus 1 background; Sprites can be globally zoomed to twice their original size, doubling the coverage.</li><li>Atari 2600 (a generation behind, but interesting enough to bring up I guess)<br />Minimum coverage of 19 pixels (16 for 2 players, 2 for 2 missiles, 1 for the ball), or 11.875%; Players and missiles can have up to 2 additional copies spaced at predetermined intervals; Missiles and the ball can be horizontally stretched up to 8 times their size; Players can be horizontally stretched up to 4 times IF they don't have any copies; Maximum coverage of 88 pixels (players x 4, missiles and ball x 8), or 55%;</li></ul>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Nicole</b> [ Wed May 24, 2017 1:46 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Comparative sprite capacity of 3rd and 4th gen consoles</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent"><ul><li>Super NES<br />Rearmost 34 slivers (106%) of frontmost 32 sprites, plus 2-3 backgrounds<br />Nominal CHR RAM bandwidth: 168 tiles/frame</li></ul></div><br />Are we just talking common configurations here or the full capabilities of the hardware? Mode 0 is not commonly used because of its color tradeoffs, but it did have four BGs.<br /><br />Also, where does Mode 7 fit into this? There is EXTBG to add a second layer, but it's not independent, it simply makes colors 128-255 display as 0-127 with higher priority. Given other modes allow setting tile priorities without those being counted as additional BGs, calling it a second BG seems debatable.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>psycopathicteen</b> [ Wed May 24, 2017 2:02 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Comparative sprite capacity of 3rd and 4th gen consoles</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />It's the same sprite limits for every mode.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Nicole</b> [ Wed May 24, 2017 2:10 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Comparative sprite capacity of 3rd and 4th gen consoles</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">psycopathicteen wrote:</div><div class="quotecontent">It's the same sprite limits for every mode.</div><br />I know; it's the &quot;plus 2-3 backgrounds&quot; part I'm arguing with here. I believe it should read &quot;plus 1-4 backgrounds&quot; instead.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>TmEE</b> [ Wed May 24, 2017 2:21 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Comparative sprite capacity of 3rd and 4th gen consoles</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />VRAM bandwidth for MD :<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">This table shows all the available VRAM DMA bandwidth in one frame :<br />+---------+-------------------------------+-------------------------------+<br />|&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 50Hz&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 60Hz&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|<br />|&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;+---------------+---------------+---------------+---------------+<br />|&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|&nbsp; &nbsp; &nbsp;V224&nbsp; &nbsp; &nbsp; |&nbsp; &nbsp; &nbsp;V240&nbsp; &nbsp; &nbsp; |&nbsp; &nbsp; &nbsp;V224&nbsp; &nbsp; &nbsp; |&nbsp; &nbsp; &nbsp;V240&nbsp; &nbsp; &nbsp; |<br />|&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;+-------+-------+-------+-------+-------+-------+-------+-------+<br />|&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|&nbsp; H256 |&nbsp; H320 |&nbsp; H256 |&nbsp; H320 |&nbsp; H256 |&nbsp; H320 |&nbsp; H256 |&nbsp; H320 |<br />+---------+-------+-------+-------+-------+-------+-------+-------+-------+<br />| Active&nbsp; |&nbsp; 3600 |&nbsp; 4050 |&nbsp; 3856 |&nbsp; 4338 |&nbsp; 3600 |&nbsp; 4050 |&nbsp; 3856 |&nbsp; 4338 |<br />| Passive | 14696 | 18040 | 12024 | 14760 |&nbsp; 6179 |&nbsp; 7585 |&nbsp; &nbsp; &nbsp;0 |&nbsp; &nbsp; &nbsp;0 |<br />| A + P&nbsp; &nbsp;| 18296 | 22090 | 15880 | 19098 |&nbsp; 9779 | 11635 |&nbsp; 3856 |&nbsp; 4338 |<br />| Blanked | 52271 | 64165 | 52271 | 64165 | 43754 | 53710 | 40080 | 49200 |<br />+---------+-------+-------+-------+-------+-------+-------+-------+-------+<br />Number of tiles that can be transferred per frame :<br />+---------+---------------------------+---------------------------+<br />|&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 50Hz&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 60Hz&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|<br />|&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;+-------------+-------------+-------------+-------------+<br />|&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|&nbsp; &nbsp; V224&nbsp; &nbsp; &nbsp;|&nbsp; &nbsp; V240&nbsp; &nbsp; &nbsp;|&nbsp; &nbsp; V224&nbsp; &nbsp; &nbsp;|&nbsp; &nbsp; V240&nbsp; &nbsp; &nbsp;|<br />|&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;+------+------+------+------+------+------+------+------+<br />|&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;| H256 | H320 | H256 | H320 | H256 | H320 | H256 | H320 |<br />+---------+------+------+------+------+------+------+------+------+<br />| Active&nbsp; |&nbsp; 112 |&nbsp; 126 |&nbsp; 120 |&nbsp; 135 |&nbsp; 112 |&nbsp; 126 |&nbsp; 120 |&nbsp; 135 |<br />| Passive |&nbsp; 459 |&nbsp; 563 |&nbsp; 375 |&nbsp; 461 |&nbsp; 193 |&nbsp; 237 |&nbsp; &nbsp; 0 |&nbsp; &nbsp; 0 |<br />| A + P&nbsp; &nbsp;|&nbsp; 571 |&nbsp; 690 |&nbsp; 496 |&nbsp; 596 |&nbsp; 305 |&nbsp; 363 |&nbsp; 120 |&nbsp; 135 |<br />| Blanked | 1633 | 2005 | 1633 | 2005 | 1367 | 1678 | 1252 | 1537 |<br />+---------+------+------+------+------+------+------+------+------+</div><br /><br />VRAM bandwidth for SMS :<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">Maximum bandwidth for one frame :<br />+---------+-----------------------+-----------------------+<br />|&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 50Hz&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 60Hz&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|<br />|&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;+-------+-------+-------+-------+-------+-------+<br />|&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|&nbsp; V192 |&nbsp; V224 |&nbsp; V240 |&nbsp; V192 |&nbsp; V224 |&nbsp; V240 |<br />+---------+-------+-------+-------+-------+-------+-------+<br />| Active&nbsp; |&nbsp; 3667 |&nbsp; 4275 |&nbsp; 4579 |&nbsp; 3667 |&nbsp; 4275 |&nbsp; 4560 |<br />| Passive | 12720 |&nbsp; 9328 |&nbsp; 7632 |&nbsp; 7314 |&nbsp; 3922 |&nbsp; &nbsp; &nbsp;0 |<br />| A + P&nbsp; &nbsp;| 16387 | 13603 | 12211 | 10981 |&nbsp; 8197 |&nbsp; 4560 |<br />| Blanked | 33178 | 33178 | 33178 | 27772 | 27772 | 25440 |<br />+---------+-------+-------+-------+-------+-------+-------+<br /><br />SMS VRAM bus is 16 bit but CPU interface is 8 bit so half the bandwidth is<br />lost due to that. In addition to that, Z80 is too slow to exhaust available<br />bandwidth during forced blanking and passive scan but it can write data too<br />fast during active scan causing missed writes and data corruption to happen.<br /><br />Ideal case access figures for Z80 using OUTI instruction :<br />+---------+-----------------------+-----------------------+<br />|&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 50Hz&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 60Hz&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|<br />|&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;+-------+-------+-------+-------+-------+-------+<br />|&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|&nbsp; V192 |&nbsp; V224 |&nbsp; V240 |&nbsp; V192 |&nbsp; V224 |&nbsp; V240 |<br />+---------+-------+-------+-------+-------+-------+-------+<br />| Active&nbsp; |&nbsp; 2123 |&nbsp; 2475 |&nbsp; 2651 |&nbsp; 2123 |&nbsp; 2475 |&nbsp; 2640 |<br />| Passive |&nbsp; 1710 |&nbsp; 1254 |&nbsp; 1026 |&nbsp; &nbsp;983 |&nbsp; &nbsp;527 |&nbsp; &nbsp; &nbsp;0 |<br />| A + P&nbsp; &nbsp;|&nbsp; 3833 |&nbsp; 3729 |&nbsp; 3677 |&nbsp; 3106 |&nbsp; 3002 |&nbsp; 2640 |<br />| Blanked |&nbsp; 4460 |&nbsp; 4460 |&nbsp; 4460 |&nbsp; 3733 |&nbsp; 3733 |&nbsp; 3420 |<br />+---------+-------+-------+-------+-------+-------+-------+<br />Number of tiles that can be transferred per frame :<br />+---------+--------------------+--------------------+<br />|&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|&nbsp; &nbsp; &nbsp; &nbsp; 50Hz&nbsp; &nbsp; &nbsp; &nbsp; |&nbsp; &nbsp; &nbsp; &nbsp; 60Hz&nbsp; &nbsp; &nbsp; &nbsp; |<br />|&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;+------+------+------+------+------+------+<br />|&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;| V192 | V224 | V240 | V192 | V224 | V240 |<br />+---------+------+------+------+------+------+------+<br />| Active&nbsp; |&nbsp; &nbsp;66 |&nbsp; &nbsp;77 |&nbsp; &nbsp;82 |&nbsp; &nbsp;66 |&nbsp; &nbsp;77 |&nbsp; &nbsp;82 |<br />| Passive |&nbsp; &nbsp;53 |&nbsp; &nbsp;39 |&nbsp; &nbsp;32 |&nbsp; &nbsp;30 |&nbsp; &nbsp;16 |&nbsp; &nbsp; 0 |<br />| A + P&nbsp; &nbsp;|&nbsp; 119 |&nbsp; 116 |&nbsp; 114 |&nbsp; &nbsp;97 |&nbsp; &nbsp;93 |&nbsp; &nbsp;82 |<br />| Blanked |&nbsp; 139 |&nbsp; 139 |&nbsp; 139 |&nbsp; 116 |&nbsp; 116 |&nbsp; 106 |<br />+---------+------+------+------+------+------+------+</div><br /><br />EDIT:<br />MVS/AES with LSPC-1 does not output more than 304 pixels horizontally, I disabled display blanking and did other modifications on hardware level and there never is more data coming out the chip. LSPC-2 I have not yet managed to test, but I doubt it behaves different from the first version.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>mikejmoffitt</b> [ Wed May 24, 2017 4:05 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Comparative sprite capacity of 3rd and 4th gen consoles</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">TmEE wrote:</div><div class="quotecontent">MVS/AES with LSPC-1 does not output more than 304 pixels horizontally, I disabled display blanking and did other modifications on hardware level and there never is more data coming out the chip. LSPC-2 I have not yet managed to test, but I doubt it behaves different from the first version.</div><br /><br />I can confirm that every Neo-Geo video system (LSPC-1, LSPC-2, NEO-GRZ) outputs 320 active pixels. 304 pixel width is done by blanking on the FIX layer on the left/right columns. 384 pixels constitutes one line, including blanking. I have not done it, but if you were to write a FIX layer rom that is entirely transparent pixels, you might be able to visually confirm this.<br /><br />The blanking input on the 74245s on the DAC are active during VBlank on LSPC-based systems, while on the GRZ-based systems it is active during both HBlank and VBlank.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>LocalH</b> [ Wed May 24, 2017 4:16 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Comparative sprite capacity of 3rd and 4th gen consoles</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Oziphantom wrote:</div><div class="quotecontent">The C64 also has Sprite Expansion so you can get a hires sprite with 2x Wide pixels ( thus 48 pixels(err slivers) ) that gets you 8*48=384 pixels across or if you use multicolour you get 4 pixels wide but still 384 &quot;pixels&quot; of coverage. Typically when making a sprite &quot;plane&quot; you use 7 to get a screen full ( screen being 320) and then you have 1 sprite for something hires, or use 8 to make a rolling background. <br />Also has Y expansion for 42 high sprites. Expansion doesn't incur any sprite based costs. ie you can have all 8 expanded X and Y.</div><br />Not the mention the vertical reuse of sprites after their last scanline is displayed.  This can allow for 100% vertical coverage with a minimal overhead (especially if creating a large single object with multiple sprites), if you want truly independent sprite positioning then you'll need a sorting algorithm and sprite multiplexer routine.<br /><br />There is also a way to stretch sprites that was discovered in the 80s and requires very specific timing, and a few years back it was also discovered that it's possible to &quot;crunch&quot; sprites by basically tricking the chip into altering the normal sprite fetching process. C64 is still the king of post-2600 video chip abuse (and until recently with TiTAN's amazing work, I don't personally feel any other platform other than the Amiga even came close, but I'm biased as a childhood Commodore fan)

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>