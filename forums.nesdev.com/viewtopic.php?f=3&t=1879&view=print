<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - PPU questions</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">PPU questions</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=3&amp;t=1879">http://forums.nesdev.com/viewtopic.php?f=3&amp;t=1879</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>n6</b> [ Thu Aug 10, 2006 3:33 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>PPU questions</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Just a few questions about PPU behaviour...
<br />
<br />1. for NTSC the bottom and top 8 pixels should be removed from the screen output. Do this mean that Sprite0Hit and LostSprites should be discarded as well if its inside this region?
<br />
<br />2. Is sprite0Hit flag set even if the sprite 0 is removed due to more then 8 sprites in a scanline.
<br />
<br />3. One last thing about lost sprites, if 8 sprites are recognized in a scanline should just the current line of the sprite be removed or the whole sprite? cause in some cases maybe just a part of the sprite is on a scanline containing more then 8 sprites.
<br />
<br />Thanks

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>hap</b> [ Thu Aug 10, 2006 4:06 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />1: You should really leave that up to the end-user, eg. my PAL tv clips the first scanline, shows all bottom scanlines, and clips some pixels on the left and right. No matter how many pixels are clipped by the tv, the NES renders all of them, so you shouldn't discard your Sprite0Hit and LostSprites.
<br />
<br />2: No, if it's not rendered, the flag is not set. Though that's only possible if the current sprite address isn't 0. *edit* come to think of it, the 8 sprites limit can actually never even affect sprite 0.
<br />
<br />3: just the current line

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>n6</b> [ Thu Aug 10, 2006 4:20 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Thanks for the fast answer.
<br />
<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">the 8 sprites limit can actually never even affect sprite 0. <br /></div>
<br />
<br />say that sprite 0 has  position (20, 0)
<br />all other sprites have position (0, 0)
<br />isnt the render order sprite 1-63 and then last sprite 0

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Memblers</b> [ Thu Aug 10, 2006 4:49 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">n6 wrote:</div><div class="quotecontent">isnt the render order sprite 1-63 and then last sprite 0</div>
<br />
<br />Yes.  Since it's rendered last, that gives it the opportunity to overwrite any other one (besides 1-7 of course).  They're all evaluated before being drawn to the screen.  For each scanline.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Disch</b> [ Thu Aug 10, 2006 4:54 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Do this mean that Sprite0Hit and LostSprites should be discarded as well if its inside this region?</div><br /><br />No.  Sprite 0 will hit (and sprite overflow will be detected) on these scanlines even if the scanlines are not visible on the user's display.  All 240 lines are still rendered by the NES even on NTSC -- whether or not the TV shows them is irrelevent to how the NES operates.<br /><br />Sprite 0 / Overflow will still work even if no TV is connected to the NES.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">isnt the render order sprite 1-63 and then last sprite 0</div>
<br />
<br />Sprites are not evaluated by their X position, they're evaluated by their index number (ie, Sprite 0 will always be on "top" of all the other sprites, and sprite 63 will always be on "bottom").
<br />
<br />X position is irrelevent when it comes to determining which sprites are displayed and which get priority.  Lower number sprites <em>always</em> have priority over higher number ones.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>n6</b> [ Thu Aug 10, 2006 5:38 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Sprite 0 / Overflow will still work even if no TV is connected to the NES. <br /></div><br /><br />Yes this makes perfectly sense, I was just a bit unsure cause the systems is different and my doc says that the screen is 224 in height, I just wanted to be sure. But I understand that this only depends on the TV.<br /><br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Sprites are not evaluated by their X position, they're evaluated by their index number (ie, Sprite 0 will always be on "top" of all the other sprites, and sprite 63 will always be on "bottom"). <br /><br />X position is irrelevent when it comes to determining which sprites are displayed and which get priority. Lower number sprites always have priority over higher number ones.<br /></div>
<br />
<br />But what I wanted to say with my example was that only sprite 1-8 will be drawn right? and now Iam confused since the sprite0 isnt drawn will the sprite0hit flag be set or not?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Thu Aug 10, 2006 6:03 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Sprite 0 is always drawn, unless it's offscreen or transparent. If you have sprite 0 through 8 on a scanline, sprite 8 always drops out.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>n6</b> [ Thu Aug 10, 2006 6:12 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Okey so to find out which sprites which should be drawn I should do something like this (not care about x pos):
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">for &#40;int i = 0; i &lt; 64; i++&#41;<br />&#123;<br />if &#40;spr&#91;i&#93;.y + 1 &gt;= curScanline &amp;&amp; spr&#91;i&#93;.y + 9 &lt; curScanline&#41;<br />&#123;<br />&nbsp; // draw sprite pixels<br />&nbsp;sprCount++;<br />&nbsp;if &#40;sprCount &gt;= 8&#41;<br />&nbsp; &nbsp;break;<br />&#125;<br />&#125;<br /></div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Quietust</b> [ Thu Aug 10, 2006 6:24 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Memblers wrote:</div><div class="quotecontent"><div class="quotetitle">n6 wrote:</div><div class="quotecontent">isnt the render order sprite 1-63 and then last sprite 0</div><br /><br />Yes.  Since it's rendered last, that gives it the opportunity to overwrite any other one (besides 1-7 of course).  They're all evaluated before being drawn to the screen.  For each scanline.</div><br /><br />That's a rather bad way to think about it, since the PPU works in the exact opposite direction. The PPU doesn't render the 8th sprite first and then draw the 7th sprite on top of it - rather, it draws sprite 0 first and then, if it finds another sprite in the same location, it <em>ignores</em> it.<br /><br />Rather than thinking of it as lower numbered sprites overriding higher numbered sprites, think of it as an ordinary <em>priority encoder</em>. After all, the PPU renders the background and all of the sprites simultaneously, one pixel per cycle, and it only has time to pick <em>one</em> sprite pixel per cycle (and then decide whether it should draw the sprite or the background).<br /><br /><div class="quotetitle">n6 wrote:</div><div class="quotecontent">Okey so to find out which sprites which should be drawn I should do something like this (not care about x pos):<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">for &#40;int i = 0; i &lt; 64; i++&#41;<br />&#123;<br />if &#40;spr&#91;i&#93;.y + 1 &gt;= curScanline &amp;&amp; spr&#91;i&#93;.y + 9 &lt; curScanline&#41;<br />&#123;<br />&nbsp; // draw sprite pixels<br />&nbsp;sprCount++;<br />&nbsp;if &#40;sprCount &gt;= 8&#41;<br />&nbsp; &nbsp;break;<br />&#125;<br />&#125;<br /></div></div>
<br />You don't actually draw any sprite pixels during the Y-coordinate evaluation - you just throw the sprite numbers (or the sprite data itself) into a list which you can reference during the next scanline (during which point you will, for each pixel on the scanline, loop from 1 to 8 and the <span style="text-decoration: underline">break;</span> out of the loop once you find a non-transparent sprite pixel).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Memblers</b> [ Thu Aug 10, 2006 6:34 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />n6: seems about right, as long as the lower-numbered sprites, when finally displayed will be on top of the higher numbered ones.
<br />
<br /><div class="quotetitle">Quietust wrote:</div><div class="quotecontent"><div class="quotetitle">Memblers wrote:</div><div class="quotecontent">Yes.  Since it's rendered last, that gives it the opportunity to overwrite any other one (besides 1-7 of course).  They're all evaluated before being drawn to the screen.  For each scanline.</div><br /><br />That's a rather bad way to think about it, since the PPU works in the exact opposite direction. The PPU doesn't render the 8th sprite first and then draw the 7th sprite on top of it - rather, it draws sprite 0 first and then, if it finds another sprite in the same location, it <em>ignores</em> it.<br /></div>
<br />
<br />Yeah I could've worded it better, I was thinking of rendering as being more like putting it into the buffer of what will be displayed (and overwriting it in that buffer).  Backwards maybe, but I guess it would work too.  I've never written a PPU emulator though. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>n6</b> [ Thu Aug 10, 2006 6:51 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I don't understand when the Lost Sprites flag / the pixel is drawn.
<br />Sprites can change their positions during rendering right?
<br />
<br />Is this correct?
<br />
<br />// This is done each PPU cycle or each beginning of a scanline?
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">sprCount = 0;<br /><br />for &#40;int i = 0; i &lt; 64; i++&#41; <br />&#123; <br />if &#40;spr&#91;i&#93;.y + 1 &gt;= curScanline &amp;&amp; spr&#91;i&#93;.y + 9 &lt; curScanline&#41; <br />&#123; <br />&nbsp; // Add Sprite to list<br />&nbsp;sprCount++; <br />&nbsp;if &#40;sprCount &gt;= 8&#41;<br />&#123;<br />&nbsp; &nbsp;// Set Lost Sprites Flag<br />&nbsp; &nbsp;break; <br />&#125;<br />&#125; <br />&#125;<br /><br />for &#40;int i = 7; i &gt;= 0; i--&#41;<br />&nbsp; //DrawSpritePixel from list<br /><br /><br /><br /></div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>dvdmth</b> [ Thu Aug 10, 2006 7:27 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Sprites cannot change their positions during rendering, AFAIK.  Sprite memory cannot be written (through $2004 or $4014) except during VBlank or if rendering is disabled ($2001 bits 3-4 are both clear).
<br />
<br />Sprites are processed one scanline before they are drawn.  This is why games have to subtract 1 from the sprite's Y position before updating sprite memory.  The PPU first scans sprite RAM, looking for sprites that are in-range.  Each sprite that is found is placed in a temporary buffer.  There are only 32 bytes in this buffer, enough for 8 sprites worth of data, which is why you cannot have more than eight sprites on a scanline.  Then, during HBlank (the time between scanlines), the PPU goes to CHR-ROM or CHR-RAM (whichever is present) and gets the appropriate tile data for these sprites.  The results are placed in another buffer, eight pixels per sprite, so that they can be rendered on the next scanline.  During that scanline, the PPU scans each buffer looking for a non-transparent pixel to draw.  It looks at the first sprite and sees if its pixel is non-transparent at that X-position.  If it is, the other sprites aren't even looked at - the pixel is rendered and drawn (assuming the background doesn't overlap it and has priority).  If the pixel is transparent, it is thrown out and the second sprite data is exaamined.  The process is repeated until either a non-transparent pixel is found or all eight sprites have been examined (at which point no pixel is drawn in the sprite layer).
<br />
<br />Thus, during each scanline, the PPU draws the sprites that were processed on the previous scanline, while simultaneously processing sprites to be drawn on the next scanline.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Disch</b> [ Thu Aug 10, 2006 4:56 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />My way isn't 100% accurate as far as when sprite patterns are fetched, but it's "accurate enough" for practical purposes.  The only real way I could practically impove the accuracy would be to be more precise about when I load the CHR, but meh...
<br />
<br />
<br />ANYWAY...  my method is as follows:
<br />
<br />
<br />I keep an intermediate buffer for sprite pixels (256+8 bytes wide).
<br />
<br />On cycle 257 (near start of HBlank) I do all my sprite evaluations for the NEXT scanline, and fill the intermediate buffer with sprite pixels as they will be rendered on the next scanline.  When rendering pixels, I take the appropriate byte from the buffer and render it.  This means copying sprites pixels twice (once to intermediate buffer and once to output buffer), so it's not the most efficient method ever, but it's <em>very</em> easy and flexible.
<br />
<br />In addition to having the desired pixel, the intermediate buffer also tracks two flags to signal the properties of that pixel.  Bit 7 indicates foreground/background priority.  If set, this sprite pixel has background priority.  Bit 6 indicates the pixel belongs to sprite 0 (so that checks for sprite-0 hit can be made with the approprate BG pixel during rendering).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>hap</b> [ Fri Aug 11, 2006 2:43 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Then how do you handle MMC2/4 CHR bankswitching when fetching sprites? And is it possible to have an accurate MMC3/6 IRQ counter?
<br />
<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">In addition to having the desired pixel, the intermediate buffer also tracks two flags to signal the properties of that pixel. Bit 7 indicates foreground/background priority. If set, this sprite pixel has background priority. Bit 6 indicates the pixel belongs to sprite 0 (so that checks for sprite-0 hit can be made with the approprate BG pixel during rendering).</div> Sounds familiar, I'm using something similar, got the idea from you over a year ago. You reminded me I forgot to credit you for it.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Disch</b> [ Fri Aug 11, 2006 5:05 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">hap wrote:</div><div class="quotecontent">Then how do you handle MMC2/4 CHR bankswitching when fetching sprites?</div><br /><br />That'd be done where the sprites are fetched for the next scanline.  After I put the sprite pixels in the intermediate buffer I simply check which tile was loaded and if it was $FD/$FE, I notify the mapper.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">if&#40;MprMMC2Latch &amp;&amp; &#40;count &lt; 8&#41; &amp;&amp; &#40;tl &gt;= 0xFD&#41; &amp;&amp; &#40;tl &lt;= 0xFE&#41;&#41;<br />&nbsp; &#40;this-&gt;*MprMMC2Latch&#41;&#40;nSpCHRPage,tl == 0xFE&#41;;<br /></div><br /><br />(the "count &lt; 8" thing is so that it will only swap if this is one of the first 8 sprites being rendered -- since I have the option to not limit drawing to 8 sprites per scanline, I wouldn't want additional sprites to mess with the CHR page)<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">And is it possible to have an accurate MMC3/6 IRQ counter?</div><br /><br />Sure -- since I keep my IRQ counter tracking events in their own way (completely unrelated to how the PPU emu is running).<br /><br />I did a basic outline of my method in another thread if you're interested:<br /><br /><a href="http://nesdev.com/bbs/viewtopic.php?t=1822" class="postlink">http://nesdev.com/bbs/viewtopic.php?t=1822</a><br /><br />The code IS pretty atrocious though, and very hard to follow.  But if you are interested I could upload it for you.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Sounds familiar, I'm using something similar, got the idea from you over a year ago. You reminded me I forgot to credit you for it.</div>
<br />
<br />Hah.  Don't worry about crediting me for an idea.  Man if I credited every person I got a coding idea or technique from, I'd have a 10 page list.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>