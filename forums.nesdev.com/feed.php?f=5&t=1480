<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=5&amp;t=1480" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2006-05-10T10:23:04-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=5&amp;t=1480</id>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2006-05-10T10:23:04-07:00</updated>
<published>2006-05-10T10:23:04-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1480&amp;p=12715#p12715</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1480&amp;p=12715#p12715"/>
<title type="html"><![CDATA[Stupid hypotetical poll...]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1480&amp;p=12715#p12715"><![CDATA[
<div class="quotetitle">Bregalad wrote:</div><div class="quotecontent"><br />Having the main CPU doing only PPU related stuff and the other doing all the logic would be just so strange.... and unfair ! However, this should be accurate, and allow higer posiblilities to games.<br /></div><br />I believe it was nicknamed the "Hellraiser cart".<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />You mean having a normal colored map, and approximate the color when rotation/scaling is done to 8 horizontal pixels ?<br /></div><br />That's pretty much it.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />I think it could work pretty much in some application, and less good for other applications, but why not ? I'm really not sure how it would be done.<br /></div><br />A second, completely separate PPU on the cart generates a stream of pixels and attributes by reading from its own VRAM and applying table lookups.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />I have trouble undestanding how such things are possible, while I heard it would be possible. I'm unsure about how the PPU fetches his tiles, so how it is possible to manipulate fetches to obtain other data to allow better graphics.<br /></div><br />Just "manipulating fetches" will result in MMC5 ExGrafix. Generating tile data on the fly goes far beyond that.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />You mean some kind of flickering to get proper colors ?<br /></div><br />Yes. Flicker each block of 8x1 pixels among several palettes so that the net color over time is correct. Also, so that the player doesn't perceive the flicker as a flicker, don't make too many blocks in one area the same color in any given frame.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Wed May 10, 2006 10:23 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2006-05-10T08:55:21-07:00</updated>
<published>2006-05-10T08:55:21-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1480&amp;p=12713#p12713</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1480&amp;p=12713#p12713"/>
<title type="html"><![CDATA[Stupid hypotetical poll...]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1480&amp;p=12713#p12713"><![CDATA[
<div class="quotetitle">tepples wrote:</div><div class="quotecontent"><br />The cart can never write to PPU registers because the CPU (or another component on the 2A03 die) is always driving the address bus. But a second CPU on the cart to run game codes, leaving the NES to handle cycle-timed PPU writes, might work.<br /></div><br />That'd be pretty cool, what a bit too strange. Having the main CPU doing only PPU related stuff and the other doing all the logic would be just so strange.... and unfair ! However, this should be accurate, and allow higer posiblilities to games.<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Unless each tile in a mode 7 rot/scale background had its own attribute, and then it would sample the attribute somewhere random close to the middle of the tile when sending the attribute to the NES PPU. There would be artifacts, and each palette would have to be ordered from dark to light in the same way, but at least it would be usable mode 7 on the NES.<br /></div><br />You mean having a normal colored map, and approximate the color when rotation/scaling is done to 8 horizontal pixels ? I think it could work pretty much in some application, and less good for other applications, but why not ? I'm really not sure how it would be done. I have trouble undestanding how such things are possible, while I heard it would be possible. I'm unsure about how the PPU fetches his tiles, so how it is possible to manipulate fetches to obtain other data to allow better graphics.<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Scanline interleaving. Palette 0 is black/red/blue/magenta, and palette 1 is black/dark green/medium green/light green. For areas with little color, it would use palette 2 with black/grays. The mapper's RAMDAC-replacement would dither each frame down to the appropriate frame base, and then draw red/blue on even lines and green on odd lines, forcing the attributes appropriately. Of course the proof of concept for this method would be a TV tuner.<br /></div><br />I didn't follow you at all here. You mean some kind of flickering to get proper colors ?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Wed May 10, 2006 8:55 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2006-05-09T14:23:40-07:00</updated>
<published>2006-05-09T14:23:40-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1480&amp;p=12698#p12698</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1480&amp;p=12698#p12698"/>
<title type="html"><![CDATA[Stupid hypotetical poll...]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1480&amp;p=12698#p12698"><![CDATA[
<div class="quotetitle">Bregalad wrote:</div><div class="quotecontent"><br />Having DMA on $2007 would be a better way to do this faster and "automatically", like the SNES does. H-DMA would be very cool, removing any stupid timing code and stupid IRQ timing to do mid-frame PPU register writes !<br />Would it be possible to do a CPLD mapper with a feature similar to HDMA ?<br /></div><br />The cart can never write to PPU registers because the CPU (or another component on the 2A03 die) is always driving the address bus. But a second CPU on the cart to run game codes, leaving the NES to handle cycle-timed PPU writes, might work.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />However, BG scaling and rotating, polygon mapping, etc... could only be done in 4 colors more (due to the tile limitation), and that would be pretty bad.<br /></div><br />Unless each tile in a mode 7 rot/scale background had its own attribute, and then it would sample the attribute somewhere random close to the middle of the tile when sending the attribute to the NES PPU. There would be artifacts, and each palette would have to be ordered from dark to light in the same way, but at least it would be usable mode 7 on the NES. If the <a href="http://www.atariage.com/store/index.php?main_page=product_info&amp;products_id=302" class="postlink">Atari 2600 can do a raycaster</a> (albeit on a portrait monitor)...<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Imagine a NES game with PS2 like graphics, but only in 4 colors and low resoliton ? It wouldn't look much better than normal NES 2D games will full colored stuff I think.<br /></div><br />Scanline interleaving. Palette 0 is black/red/blue/magenta, and palette 1 is black/dark green/medium green/light green. For areas with little color, it would use palette 2 with black/grays. The mapper's RAMDAC-replacement would dither each frame down to the appropriate frame base, and then draw red/blue on even lines and green on odd lines, forcing the attributes appropriately. Of course the proof of concept for this method would be a TV tuner.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Tue May 09, 2006 2:23 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[WedNESday]]></name></author>
<updated>2006-05-09T09:46:24-07:00</updated>
<published>2006-05-09T09:46:24-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1480&amp;p=12692#p12692</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1480&amp;p=12692#p12692"/>
<title type="html"><![CDATA[Stupid hypotetical poll...]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1480&amp;p=12692#p12692"><![CDATA[
<div class="quotetitle">Bregalad wrote:</div><div class="quotecontent"><br />3 GHz CPU wouldn't be possible for ROM access time, problem due to noise immunity between the console and the cartridge, etc... I think anything above ~20 MHz would be really too much distorted between the cart and the console.<br /></div><br /><br />Jeez, I was only meant to be a bit of fun.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=191">WedNESday</a> — Tue May 09, 2006 9:46 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2006-05-09T09:03:57-07:00</updated>
<published>2006-05-09T09:03:57-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1480&amp;p=12691#p12691</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1480&amp;p=12691#p12691"/>
<title type="html"><![CDATA[Stupid hypotetical poll...]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1480&amp;p=12691#p12691"><![CDATA[
<div class="quotetitle">jackpkmn wrote:</div><div class="quotecontent"><br />If there is an emulator with the ability to modify such things then we could accuratly answer these quetsions. Since use of a speedup button in an emularot ups everything that wouldent make a very good prediction. But who knows? I may just be crazy. Also I might be losseing my touch, I dont know as much about this as I used to.<br /></div><br />Btw, you're lucky that Bananmos isn't any longer on the forums. It it would randomly come back and read this, I think he would kill you or something. Just telling "I tried to do blah blah....." without mentionning that you put it on a devcad and test it on a real NES just after will already make him mad. Even if I think he sometimes exagerrate, I have to agree that it isn't fair to say such think as the quote above, because it wouldn't make too much sense. <br /><br />You can do SNES developpement if you want to fully benefit on the better hadware the SNES have, or PC developpement if you want a 3GHz CPU, etc, etc... I won't repeat that boring stuff over and over, because it isn't fair. I think want to expand the hardware is a good idea. Want to change the hardware isn't.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Tue May 09, 2006 9:03 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2006-05-09T08:57:28-07:00</updated>
<published>2006-05-09T08:57:28-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1480&amp;p=12690#p12690</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1480&amp;p=12690#p12690"/>
<title type="html"><![CDATA[Stupid hypotetical poll...]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1480&amp;p=12690#p12690"><![CDATA[
Having DMA on $2007 would be a better way to do this faster and "automatically", like the SNES does. H-DMA would be very cool, removing any stupid timing code and stupid IRQ timing to do mid-frame PPU register writes !<br />Would it be possible to do a CPLD mapper with a feature similar to HDMA ?<br />Another good trick of a CPLD mapper would be to use a lot of VRAM that is of non-standard use, to have pattern tables rendered in a special way that could take advantage of various CHRAM and CHROM aspect. Since the mapper itself would handle this, it would be possible to outstand normal restriction.<br />However, BG scaling and rotating, polygon mapping, etc... could only be done in 4 colors more (due to the tile limitation), and that would be pretty bad.<br />Imagine a NES game with PS2 like graphics, but only in 4 colors and low resoliton ? It wouldn't look much better than normal NES 2D games will full colored stuff I think.<br /><br />3 GHz CPU wouldn't be possible for ROM access time, problem due to noise immunity between the console and the cartridge, etc... I think anything above ~20 MHz would be really too much distorted between the cart and the console.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Tue May 09, 2006 8:57 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[WedNESday]]></name></author>
<updated>2006-05-09T03:27:34-07:00</updated>
<published>2006-05-09T03:27:34-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1480&amp;p=12689#p12689</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1480&amp;p=12689#p12689"/>
<title type="html"><![CDATA[Stupid hypotetical poll...]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1480&amp;p=12689#p12689"><![CDATA[
I'd stick in a 3 Ghz cpu. Or two for good measure. Now imagine the possibilities...<br /><br />I would definitely give the PPU one more VRAM register that allows you to access PPU memory during rendering.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=191">WedNESday</a> — Tue May 09, 2006 3:27 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2006-05-08T21:07:57-07:00</updated>
<published>2006-05-08T21:07:57-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1480&amp;p=12688#p12688</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1480&amp;p=12688#p12688"/>
<title type="html"><![CDATA[Stupid hypotetical poll...]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1480&amp;p=12688#p12688"><![CDATA[
If the new features can be represented in a CPLD or FPGA mapper, then yes, they can be implemented in hardware. Limiting case is a game console that fits in the NES slot and just uses the NES for power and to read the controllers (a la Super Game Boy or Genesis 32X).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Mon May 08, 2006 9:07 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2006-05-08T19:52:13-07:00</updated>
<published>2006-05-08T19:52:13-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1480&amp;p=12687#p12687</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1480&amp;p=12687#p12687"/>
<title type="html"><![CDATA[Stupid hypotetical poll...]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1480&amp;p=12687#p12687"><![CDATA[
<div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />If there is an emulator with the ability to modify such things then we could accuratly answer these quetsions.<br /></div><br /><br />We'd also need someone who wanted to try writing code that would take advantage of the new features, and which wouldn't work on the NES architecture (similar to writing iNES-format cartridges that only work on Nesticle and don't work on the NES architecture).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Mon May 08, 2006 7:52 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[jackpkmn]]></name></author>
<updated>2006-05-08T15:47:58-07:00</updated>
<published>2006-05-08T15:47:58-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1480&amp;p=12685#p12685</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1480&amp;p=12685#p12685"/>
<title type="html"><![CDATA[Stupid hypotetical poll...]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1480&amp;p=12685#p12685"><![CDATA[
If there is an emulator with the ability to modify such things then we could accuratly answer these quetsions. Since use of a speedup button in an emularot ups everything that wouldent make a very good prediction. But who knows? I may just be crazy. Also I might be losseing my touch, I dont know as much about this as I used to.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=464">jackpkmn</a> — Mon May 08, 2006 3:47 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2006-05-08T12:48:52-07:00</updated>
<published>2006-05-08T12:48:52-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1480&amp;p=12680#p12680</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1480&amp;p=12680#p12680"/>
<title type="html"><![CDATA[Stupid hypotetical poll...]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1480&amp;p=12680#p12680"><![CDATA[
<div class="quotetitle">tokumaru wrote:</div><div class="quotecontent"><br />Yeah, that'd be cool! The Master System also does it like this. The SMS has some advantages over the NES, but also has some dumb stuff, such as h/v flipping of tiles implemented to the background, but not to the sprites. That's just stupid.<br /></div><br />Oh, yeah. I cannot think of one single game that doesn't use the horizontal flipping. Platformers use it to draw the player in only one direction and flip it horizontally to the other. Top-down games can have 3 direction, and the fourth (left or right) mirrored from its counterpart.<br />Dragon Warrior games and Just Breeds are the only exeptions, where playable characters always holds their weapons in the right hand and shield in the left, so just mirror the sprite would fake that (as it does in anyother game).<br />BG flipping can be usefull, but definitely less than sprite, since you'll benifit to do advanced shadows effects on tiles that looks similar but reverted.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />I don't know... Even if we had a super fast CPU, with low color resolution and bad scrolling there is little more we can do. A better PPU could result in much better graphics, using the same CPU for game logic. With a better CPU, you could use much more time with tricks that would seem to improve the graphics, but not nearly as much as the better PPU. And after wasting so much time with the graphics, you'd pretty much have the same time for game logic as we do know. For some reason, PPU upgrades make more sense to me.<br /></div><br />That's what Nintendo have thinked when designing the SNES. The upgraded the CPU by about 2 (can have either M12/8 or M12/6 speed, instead of M12/12 like the NES). The PPU and APU are about 100 times better than NES's, allowing relocatable Name Tables and Pattern Tables in a 32kb VRAM, up to 4 scrolling independant planes with up to 1024 tiles, possible mirroring, and priority bit. It also allow transparency between planes or with a fixed color, and windows clipping. When less than 4 layers are used, 4BP tiles can be enabled for the first 2 layers, allowing much better graphics. (and that not to mention mode 7). The APU is very powerfull and really cannot be compared with the NES' in no way, it is just so different.<br /><br />If no priority bit is here on NES, an alternate was would be to have clipping windows like the SNES. Set the left side and right side, and clipping is done. That wouldn't be usefull to have priority background in levels, but that would be very usefull for RPG with windows : You have to manually hide sprites that are under the windows. Sometimes, sprites are just on the border and it looks bad because they either "enter" in the window, or are sometimes clipped just outside the window and look even worse. Window clipping would fix it. Unfortunately, it would be needed to do stupid timed code / timed IRQs to change the registers mid-frame, so it would definitely be better to have priority bits.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Mon May 08, 2006 12:48 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2006-05-08T12:22:56-07:00</updated>
<published>2006-05-08T12:22:56-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1480&amp;p=12678#p12678</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1480&amp;p=12678#p12678"/>
<title type="html"><![CDATA[Stupid hypotetical poll...]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1480&amp;p=12678#p12678"><![CDATA[
<div class="quotetitle">Bregalad wrote:</div><div class="quotecontent"><br />That'd be pretty good to have the same resolution for PAL and NTSC systems. They do have the same resolution, but I mean the pratical resolution. On a NTSC NES, the first and last 8 pixels are reliably hidden, even if they are rendered. The leftmost and rightmost 8 pixels can be randomly hidden or shown from TV to TV (that's what I heard). On a PAL systems all these regions are always shown. It'd be good to simply have a hardware stuff to hide the rightmost 8 pixels along with the leftmost 8 ones, allowing proper horizontal scrolling with horizontal mirroring without attribute glitches. Or also hide the top and bottom 8 pixels on a PAL TV, so you can do proper scrolling with vertical mirroring on both TV standards. For now, "perfect" bidirectionnal scrolling is just impossible on a PAL screen.<br /></div><br />Maybe there could be a hardware setting to hide the top and/or bottom pixels, as there is for the leftmost 8 pixels.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />One thing I'd very like is to have the priority on background tiles instead of sprites. The Game Boy Color and SNES have that, and you would simply tell if that map tile is above or below sprites.<br /></div><br />Yeah, that'd be cool! The Master System also does it like this. The SMS has some advantages over the NES, but also has some dumb stuff, such as h/v flipping of tiles implemented to the background, but not to the sprites. That's just stupid.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />I'm surprised nobody mentionned just a faster CPU. It would allow more frame calculation, so less glitches in most commercial games, since more reliable methods could be used for task that are done each frame, and it would of course allow much more writes in VBlank, such as CHRRAM animating.<br /></div><br />I don't know... Even if we had a super fast CPU, with low color resolution and bad scrolling there is little more we can do. A better PPU could result in much better graphics, using the same CPU for game logic. With a better CPU, you could use much more time with tricks that would seem to improve the graphics, but not nearly as much as the better PPU. And after wasting so much time with the graphics, you'd pretty much have the same time for game logic as we do know. For some reason, PPU upgrades make more sense to me.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Mon May 08, 2006 12:22 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2006-05-08T11:48:42-07:00</updated>
<published>2006-05-08T11:48:42-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1480&amp;p=12672#p12672</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1480&amp;p=12672#p12672"/>
<title type="html"><![CDATA[Stupid hypotetical poll...]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1480&amp;p=12672#p12672"><![CDATA[
<div class="quotetitle">tokumaru wrote:</div><div class="quotecontent"><br />If I had to pick one... I'd change the height of the screen to 192 pixels (24 tiles) so that there was enough space in the attribute tables to assign a palette to each tile. There would still be 64 bytes left for whatever.<br /></div><br />That'd be pretty good to have the same resolution for PAL and NTSC systems. They do have the same resolution, but I mean the pratical resolution. On a NTSC NES, the first and last 8 pixels are reliably hidden, even if they are rendered. The leftmost and rightmost 8 pixels can be randomly hidden or shown from TV to TV (that's what I heard). On a PAL systems all these regions are always shown. It'd be good to simply have a hardware stuff to hide the rightmost 8 pixels along with the leftmost 8 ones, allowing proper horizontal scrolling with horizontal mirroring without attribute glitches. Or also hide the top and bottom 8 pixels on a PAL TV, so you can do proper scrolling with vertical mirroring on both TV standards. For now, "perfect" bidirectionnal scrolling is just impossible on a PAL screen.<br /><br />One thing I'd very like is to have the priority on background tiles instead of sprites. The Game Boy Color and SNES have that, and you would simply tell if that map tile is above or below sprites.<br />Of course, maintain the priority bit on sprites would be even better, allowing stuff to be drawn over background anyway (like the MegaMan's life bar, or faces that comes in windows such as in Fire Emblem), and sprites that are either above or below the background (player, enemies, ...). That'd really be great. Together with Tokumaru's idea, there would be some free space in the Name Table range for this.... However, I'm cheating to my own rules, because I said only a single modification to the orginal hardware.<br /><br />I'm surprised nobody mentionned just a faster CPU. It would allow more frame calculation, so less glitches in most commercial games, since more reliable methods could be used for task that are done each frame, and it would of course allow much more writes in VBlank, such as CHRRAM animating.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Mon May 08, 2006 11:48 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2006-05-07T15:38:41-07:00</updated>
<published>2006-05-07T15:38:41-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1480&amp;p=12657#p12657</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1480&amp;p=12657#p12657"/>
<title type="html"><![CDATA[Stupid hypotetical poll...]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1480&amp;p=12657#p12657"><![CDATA[
I couldn't think of anything offhand and now I'm tainted with others' ideas. Of those, having a standard timer that can be polled and optionally generate an IRQ would be quite a help and free up previously-wasted CPU time used for delay and polling loops.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Sun May 07, 2006 3:38 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[jackpkmn]]></name></author>
<updated>2006-05-07T14:35:20-07:00</updated>
<published>2006-05-07T14:35:20-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1480&amp;p=12650#p12650</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1480&amp;p=12650#p12650"/>
<title type="html"><![CDATA[Stupid hypotetical poll...]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1480&amp;p=12650#p12650"><![CDATA[
Now that I think about it that does make sence. More colors more power. And the NES doent have it right?<br />-looks over sholder at NES that is stacked with books-<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=464">jackpkmn</a> — Sun May 07, 2006 2:35 pm</p><hr />
]]></content>
</entry>
</feed>