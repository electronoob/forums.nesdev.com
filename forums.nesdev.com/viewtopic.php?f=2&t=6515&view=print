<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Changing Palette Multiple Times During Refresh</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Changing Palette Multiple Times During Refresh</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=6515">http://forums.nesdev.com/viewtopic.php?f=2&amp;t=6515</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>3</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>neilbaldwin</b> [ Mon Jun 21, 2010 8:27 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Changing Palette Multiple Times During Refresh</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Is it possible to modify the palette data using timed splits? I've read that you can access the palette during hblank (as long as you turn off bits 3 &amp; 4 of $2001) but I've so far not managed to make it work.
<br />
<br />Neil

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dwedit</b> [ Mon Jun 21, 2010 8:59 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Games that do change the palette turn off the screen first, do the writes, then turn is back on.  Remember that the "safe time" to turn off the screen is during rendering on the right half of the screen, before pixel 255 has rendered, <a href="http://nesdev.com/bbs/viewtopic.php?t=6163" class="postlink">but other games turn off the screen at different times</a>.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Mon Jun 21, 2010 9:12 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />This can be tricky, since just the time of HBlank is not enough to do anything meaningful. You have to set the address of the color(s) to be changed, change them, and reset the scroll. HBlank is not enough for all that, so you'll probably have to disable rendering for a while. But them you have the issue of color glitches, since the PPU will render the color pointed by the VRAM address while rendering is off.
<br />
<br />It can definitely be done though, but it will probably require some trial and error, preferably on real hardware, since recently we have noticed that emulators are not particularly accurate when it comes to disabling/enabling rendering mid-frame.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>neilbaldwin</b> [ Mon Jun 21, 2010 9:28 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">This can be tricky, since just the time of HBlank is not enough to do anything meaningful. You have to set the address of the color(s) to be changed, change them, and reset the scroll. HBlank is not enough for all that, so you'll probably have to disable rendering for a while. But them you have the issue of color glitches, since the PPU will render the color pointed by the VRAM address while rendering is off.<br /><br />It can definitely be done though, but it will probably require some trial and error, preferably on real hardware, since recently we have noticed that emulators are not particularly accurate when it comes to disabling/enabling rendering mid-frame.</div>
<br />
<br />Hmmm, yes that's pretty much what I've been seeing so far.
<br />
<br />Someone over on the chipmusic forum wondered if it would be possible to do a matrix of independently coloured squares as a kind of LED visualizer. It was my thinking that the only way you could *probably* do it would be to change the palette every row of squares.
<br />
<br />See here;
<br />
<br /><!-- m --><a class="postlink" href="http://chipmusic.org/forums/topic/1714/lightwall-concept-for-vj-oriented-nes-rom/">http://chipmusic.org/forums/topic/1714/ ... d-nes-rom/</a><!-- m -->
<br />
<br />It would be quite a cool idea if it could be pulled off.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Mon Jun 21, 2010 9:48 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Since you have a couple of black scanlines between each row, you can probably do the palette changes during hblank. As mentioned, you can't do them mid-scanline because you'll at the very least get little glitches of the color you're writing. I figure you can write at least three colors inside each hblank. Every fourth color would be black, so that it would show during the scanline. So I imagine you could write 12 colors in four scanlines. You'd preload them into A, X, and Y, so you could do three $2007 writes in a row.
<br />
<br />You could even do timed writes to $2001 during the scanline, and control color tint for each square, so that you could get a bigger palette. You just need something to generate all this color data.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>neilbaldwin</b> [ Mon Jun 21, 2010 11:14 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Yep, that's what I thought.
<br />
<br />I knocked up a nametable for this based on 3 x 3 char squares with a 1 char black border around each one (thus keeping it attribute friendly). That gives you 8 x 7 squares so you'd need 3 palettes (as you say, every 4th colour would be black so that gives you 3 palettes of 3 colours = 9).
<br />
<br />Therefore, if you had 8 black scan lines between each row, could you change palette 1, then on the next scan line change palette 2, then palette 3 - all in the space of the 8 black scan lines?
<br />
<br />Do you still have to turn off the screen during hblank in order to write the palette? I can't see how you'd have enough time?
<br />
<br />From what I've read you should;
<br />
<br />1) wait for x&gt;255
<br />2) turn screen off ($2001=$08?)
<br />3) write palette
<br />4) turn screen on, write scroll registers
<br />
<br />is that right?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Mon Jun 21, 2010 12:42 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Sounds about right, though you'd do $2001=0 to disable rendering, and restore scrolling before you enable the screen. I think you've got to do combinations of $2005 and $2006, because $2005 only affects the temporary register, which isn't fully copied to the address counters during hblank. I was messing with writing scroll registers yesterday and it's apparently pretty involved to restore them properly. I haven't done much mid-frame PPU effects, so hopefully someone else here has more experience with the proper values to write.
<br />
<br />The main thing I was thinking about was avoid visual glitches. You turn rendering off, OK, no glitch, as the PPU still shows the background color. Then you set the address to $3F01 off-screen, then write to $2007 three times quickly. That's a 12-cycle window where you'd get a glitch if it were part of the visible scanline. After that, the PPU address is at $3F04, which you should have set to black in initialization. You can then wait while that scanline is displayed (black), while you get your next three values ready to write in the next hblank. After doing that for four scanlines, you've rewritten all 12 entries, and are again sitting on a black entry. Then you just  need to restore the scrolling registers. Assuming that takes you another scanline, you only need five black scanlines between rows.
<br />
<br />Once I've got this new PPU synchronization technique documented (almost finished the PAL documentation), I'll probably mess around with this to see how many palette entries you can rewrite in hblank. Considering you can only get 7 $2007 writes at most, rewriting three is probably reasonable.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>neilbaldwin</b> [ Mon Jun 21, 2010 1:52 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Tough gig <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />
<br />
<br />Easy enough to do the splits and change the palette but it's the scroll that's giving me trouble.
<br />
<br />Presumably you have to set the Y scroll to compensate for turning the screen on/off e.g if your first split is 24 scan lines down the screen, you need to offset the Y scroll register by -24 scan lines so that once you turn the screen back on it's being drawn from the correct place?
<br />
<br />I can't even work out how to write the scroll register properly LOL
<br />
<br /><img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Mon Jun 21, 2010 2:34 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Resetting the scroll is pretty easy, specially if you don't need fine Y positioning (i.e. you always reset the scroll to the top of a tile, never the middle of it), which in this case I don't think you do.
<br />
<br />You might be able to do it by simply writing to $2006 twice. You have to form a 16-bit value that looks like this: 0000NNYYYYYXXXXX (same format you'd use when writing tiles to the name tables).
<br />
<br />NN = name table index, %00 to %11;
<br />YYYYY = tile row, 0 to 29;
<br />XXXXX = tile column, 0 to 31;
<br />
<br />I'd probably keep that 16-bit value in RAM. Since each row of leds is 3 tiles tall and there is 1 tile of empty space before the next one, I'd add 128 (32 * 4) to that value before writing it to $2006 in order to set the new scroll to 4 tiles below last time.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Memblers</b> [ Mon Jun 21, 2010 2:37 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />As was said, writing in the order of $2006, $2005, $2005, $2006 is required.  Should be a pretty cool trick to do the palette writing during hblank, to hide the side-effects.
<br />
<br />
<br />Here is a raster-based PPU vertical-only scrolling loop that I use.  This doesn't need to turn the screen off or anything like that.  Maybe not the most useful example, but maybe fun anyways.  scroll_table is in RAM, and is a unique vertical scroll position for every scanline.  The look-up tables are here: <a href="http://www.parodius.com/~memblers/nes/vram_lo.bin" class="postlink">vram_lo.bin</a> and <a href="http://www.parodius.com/~memblers/nes/vram_hi.bin" class="postlink">vram_hi.bin</a>.
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ldy #0<br />&nbsp; &nbsp;scanline_loop:<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; lda scroll_table,y&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ; 4&nbsp; &nbsp; 4<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; tax&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; 2&nbsp; &nbsp; 6<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; lda vram_addr_hi,x&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ; 4&nbsp; &nbsp; 10<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; sta $2006&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; 4&nbsp; &nbsp; 14<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; stx $2005&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; 4&nbsp; &nbsp; 18<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; lda #0&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ; 2&nbsp; &nbsp; 20<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; sta $2005&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; 4&nbsp; &nbsp; 24<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; lda vram_addr_lo,x&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ; 4&nbsp; &nbsp; 28<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; sta $2006&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; 4&nbsp; &nbsp; 32<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; lda irrational_counter&nbsp; &nbsp; &nbsp; &nbsp; ; 3&nbsp; &nbsp; 35<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; clc&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; 2&nbsp; &nbsp; 37<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; adc #$55&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ; 2&nbsp; &nbsp; 39<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; sta irrational_counter&nbsp; &nbsp; &nbsp; &nbsp; ; 3&nbsp; &nbsp; 42<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; bcc @nowhere&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ; 2/3&nbsp; 44.6<br />&nbsp; &nbsp;@nowhere:&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ldx #11&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; x*11 + 1<br />&nbsp; &nbsp;:&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; dex&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; bne :-&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ;<br /><br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; nop<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; nop<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; nop<br /><br /><br /><br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; iny&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; 2&nbsp; &nbsp; 46.6<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cpy #162&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ; 2&nbsp; &nbsp; 48.6<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; bne scanline_loop&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; 3&nbsp; &nbsp; 51.6<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ; 2&nbsp; &nbsp; 53.6<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ; 59<br /></div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Memblers</b> [ Mon Jun 21, 2010 2:45 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">You might be able to do it by simply writing to $2006 twice.<br /></div>
<br />
<br />I don't think you can, I had a different effect in mind and I could have been doing it wrong, but I remember having all sorts of trouble trying to do any mid-frame vertical scrolling until I found out about the specific order to write both the regs in.
<br />
<br />But still, you could be right if VRAM address/nametable data is in the right position, since this is easier than changing it every single line.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Mon Jun 21, 2010 2:55 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Memblers wrote:</div><div class="quotecontent"><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">You might be able to do it by simply writing to $2006 twice.<br /></div><br />I don't think you can</div>
<br />I think you can if you don't need fine scrolling. In my game, which enables rendering late and needs fine scrolling, I write to the registers in the order you said ($2006, $2005, $2005, $2006), and it works great. But AFAIK (based on loopy's doc), the reasons we need the $2005 writes are because the first write to $2006 screws up the fine Y scroll (so we need to fix it through $2005) and because $2005 is the only way to set fine X scroll.
<br />
<br />It seems that the problems are related to fine scrolling only, so unless the fine X scroll gets corrupted when rendering is off, I'm pretty sure you can get away with using $2006 only if you don't want to fine scroll at all.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bananmos</b> [ Mon Jun 21, 2010 4:07 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />(Started writing this and then noticed others got to it before. still, I think this might give some more explanation on what's happening :)
<br />
<br /><a href="http://home.comcast.net/~olimar/NES/skinny.txt" class="postlink">The skinny on NES scrolling</a> is still the best reference on this. Though I know some people have had difficulty getting a grip on it, so here's a "quick" summary.
<br />
<br />- $2005 and $2006 both enable writing to the same temporary register 't'. 't' is normally copied into the vram address 'v' only at start of the first scanline, but v may be partially updated during rendering by writing $2005 and $2006. v is what the PPU uses for the addressing and fine scrolls when rendering the screen.
<br />
<br />- The layout of the 18-bit register v is yyyVHYYYYYXXXXXxxx. HXXXXXxxx is the 9-bit x scroll coordinate and VYYYYYxxx is the 9-bit y scroll coordinate. 
<br />
<br />- The double-write functionality of $2005 and $2006 shares the *same toggle*. Thus, first writing to $2006 and then to $2005 would write the high byte of $2006 as usual and then the Y-scroll instead of the X-scroll, since the first write toggled the double-write latch for $2005 as well.
<br />
<br />- Writing the second byte to $2006 is the *only* way to update the Y-scroll during rendering, transferring t to v.
<br />
<br />The way some games used $2005 to do split-screen effects by changing the x-value was by writing $2005 twice during on a particular scanline. Quoting Loopy's doc, this is what happens:
<br />
<br />2005 first write:
<br />        t:xxxxxxxxxxxABCDE=d:ABCDExxx
<br />        x=d:xxxxxABC
<br />
<br />Or, if you prefer:
<br />t[4:0] = d[7:3]
<br />fine scroll x is directly set to d[2:0] 
<br />
<br />- t now contains 00?????? ???XXXXX
<br />
<br />2005 second write:
<br />        t:xxxxxxABCDExxxxx=d:ABCDExxx
<br />        t:xABCxxxxxxxxxxxx=d:xxxxxABC
<br />
<br />Or, if you prefer:
<br />t[9:5] = d[7:3]
<br />t[14:12] = d[2:0]
<br />
<br />- t now contains 0yyy??YY ???XXXXX
<br />
<br />scanline start (if background or sprites are enabled):
<br />        v:xxxxxAxxxxxBCDEF=t:xxxxxAxxxxxBCDEF
<br />
<br />Or, if you prefer:
<br />v[13] = t[10]
<br />v[4:0] = t[4:0]
<br />
<br />Note here that at scanline start, the bits in v corresponding to the Y-scroll value are *NOT* copied from t - they remain as they were. Thus, changing the Y-scroll through $2005 during rendering does nothing at all.
<br />
<br />The most flexible way to update v if by actually writing $2005 and $2006 in the order $2006,$2005,$2005,$2006. To see what happens here, again refer to Loopy's doc:
<br />
<br />2006 first write:
<br />        t:xxABCDEFxxxxxxxx=d:xxABCDEF
<br />        t:ABxxxxxxxxxxxxxx=0 (bits 14,15 cleared)
<br />
<br />Or, if you prefer:
<br />t[13:8] = d[5:0]
<br />t[15:14] = '00'
<br />- t now contains 00yyVHYY ????????
<br /> 
<br />2005 'second' write: (*TOGGLE FLIPPED BY WRITE TO $2006*)
<br />        t:xxxxxxABCDExxxxx=d:ABCDExxx
<br />        t:xABCxxxxxxxxxxxx=d:xxxxxABC
<br />
<br />Or, if you prefer:
<br />t[9:5] = d[7:3]
<br />t[14:12] = d[2:0]
<br />
<br />- t now contains 0yyyVHYY YYY?????
<br />
<br />2005 'first' write:
<br />        t:xxxxxxxxxxxABCDE=d:ABCDExxx
<br />        x=d:xxxxxABC
<br />
<br />Or, if you prefer:
<br />t[4:0] = d[7:3]
<br />fine scroll x is directly set to d[2:0] 
<br />
<br />- t now contains 0yyyVHYY YYYXXXXX
<br />
<br />2006 second write:
<br />        t:xxxxxxxxABCDEFGH=d:ABCDEFGH
<br />        v=t
<br />
<br />Or, if you prefer:
<br />t[7:0] = d[7:0]
<br />v[17:3] = t[14:0]
<br />
<br />- t now contains 00yyVHYY YYYXXXXX
<br />- v has been updated to yyyVHYYYYYXXXXXxxx (highest bit of yyy got implicitly set to 0)
<br />
<br />scanline start (if background or sprites are enabled):
<br />        v:xxxxxAxxxxxBCDEF=t:xxxxxAxxxxxBCDEF
<br />
<br />Or, if you prefer:
<br />v[13] = t[10]
<br />v[4:0] = t[4:0]
<br />
<br />Thus, the trick is to consistently write the same bits over again redundantly - just to get that update of v that the second write to $2006 triggers. This requires some bit shuffling that's best done using lookup tables, like in Memblers's example.
<br />
<br />But as Tokumaru says, this is probably overkill for the application you are writing now. Since you just want to display the same cubes over and over again, you can get away with just writing zero to $2006 twice after each palette update. This will make your display start rendering from coordinate (0,0), which will just contain the same blocks of pixels separated apart. And those blocks will of course have been updated with fresh colors from your skillfully hblank-hidden palette updates. But it's still good to know the whole picture I think.
<br />
<br />Happy coding! :)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Mon Jun 21, 2010 4:54 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bananmos wrote:</div><div class="quotecontent">Since you just want to display the same cubes over and over again, you can get away with just writing zero to $2006 twice after each palette update.</div>
<br />Even better than what I first imagined! It doesn't get any simpler than this.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>neilbaldwin</b> [ Mon Jun 21, 2010 5:16 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Quick proof of concept;
<br />
<br /><!-- m --><a class="postlink" href="http://dl.dropbox.com/u/5493868/litewall.nes">http://dl.dropbox.com/u/5493868/litewall.nes</a><!-- m -->
<br />
<br />It's only doing two splits at the moment so the first, second and third (onwards) rows are switching palettes. And it's only doing one palette (i.e. 3 writes to $2007).
<br />
<br />Yeah, it occurred to me after I'd posted the scroll problem that I didn't in fact need to sync the y scroll....doh! Just zeroing it does the trick.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>3</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>