<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Why no SNES homebrew scene?</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Why no SNES homebrew scene?</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=12&amp;t=10957">http://forums.nesdev.com/viewtopic.php?f=12&amp;t=10957</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>18</strong> of <strong>30</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>calima</b> [ Mon Aug 07, 2017 1:37 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Why no SNES homebrew scene?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Another example I discovered today. This KS for a simple SNES game was estimated to take 6 months; now it's taken two years and three months, and it's still not complete.<br /><br /><!-- m --><a class="postlink" href="https://www.kickstarter.com/projects/439982171/new-snes-game-sydney-hunter-and-the-caverns-of-dea/">https://www.kickstarter.com/projects/43 ... ns-of-dea/</a><!-- m -->

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>HihiDanni</b> [ Mon Aug 07, 2017 5:32 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Why no SNES homebrew scene?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />So, like most Kickstarter projects then? You also neglected to mention that they said they were building the engine from scratch. Which, yeah, is going to take longer. This really just highlights the importance of having engines available for people to use.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Mon Aug 07, 2017 6:21 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Why no SNES homebrew scene?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">calima wrote:</div><div class="quotecontent">Another example I discovered today. This KS for a simple SNES game was estimated to take 6 months; now it's taken two years and three months, and it's still not complete.<br /><br /><!-- m --><a class="postlink" href="https://www.kickstarter.com/projects/439982171/new-snes-game-sydney-hunter-and-the-caverns-of-dea/">https://www.kickstarter.com/projects/43 ... ns-of-dea/</a><!-- m --></div><br />The NES game I'm working on started development in early 2005, and it's still not complete.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Mon Aug 07, 2017 6:55 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Why no SNES homebrew scene?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The thing about &quot;engines&quot; is that the Super NES probably isn't powerful enough for something as generic as, say, Unity or Unreal. Feel free to prove me wrong, but though an RPG, a platformer, and a vertical shmup could share a large set of hardware libraries, their engines would probably be structured very differently.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>calima</b> [ Mon Aug 07, 2017 11:06 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Why no SNES homebrew scene?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Writing a platformer engine that doesn't even scroll would be a matter of weeks, not years.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>psycopathicteen</b> [ Mon Aug 07, 2017 12:37 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Why no SNES homebrew scene?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">calima wrote:</div><div class="quotecontent">Another example I discovered today. This KS for a simple SNES game was estimated to take 6 months; now it's taken two years and three months, and it's still not complete.<br /><br /><!-- m --><a class="postlink" href="https://www.kickstarter.com/projects/439982171/new-snes-game-sydney-hunter-and-the-caverns-of-dea/">https://www.kickstarter.com/projects/43 ... ns-of-dea/</a><!-- m --></div><br /><br />I laughed when I saw that guy in the video.  How many unfinished SNES games has that guy advertised?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>dougeff</b> [ Mon Aug 07, 2017 1:46 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Why no SNES homebrew scene?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">now it's taken two years and three months</div><br /><br />But, that's how long I would expect a game like this to take to develop. '6 months' was just foolishly optimistic.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>HihiDanni</b> [ Mon Aug 07, 2017 2:26 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Why no SNES homebrew scene?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">The thing about &quot;engines&quot; is that the Super NES probably isn't powerful enough for something as generic as, say, Unity or Unreal. Feel free to prove me wrong, but though an RPG, a platformer, and a vertical shmup could share a large set of hardware libraries, their engines would probably be structured very differently.</div><br />Engines can be different sizes. Unreal and Unity are designed around modern systems with a lot more complexity to manage under the hood because they're designed to scale to environments that take 8,000x as much RAM as the SNES actually has. They're also designed around a lot of micro optimizations that are only found in newer hardware and simply doesn't apply to the SNES. Word alignment? Haha, no need for that here.<br /><br />The entire reason I'm making an argument for engines is that I only ever see people talking about how to implement DMA queues instead of actually making games. A lot of this is infrastructure that applies to a wide variety of genres and can easily be made reusable, just like the existence of code libraries, only an engine is more tightly integrated.<br /><br />When it comes to genres, much of my initial inspiration for my SNES engine comes from Alien Soldier, which fits both &quot;platformer&quot; and &quot;shmup&quot;. Action games share a surprising amount of infrastructure and are easily generalizable. If it's overhead from unused stuff that concerns you, then one of my design goals has been to allow objects to only do as much processing as they need to. If an object needs to move, it calls MoveObject. Same idea for drawing sprites and animation. An object that doesn't need to draw a moving sprite simply doesn't call the movement or animation functions. I have recently introduced an optimization so that an empty scene capable of having 128 objects only uses 7% CPU (excluding time spent in Vblank). That's pretty good if you ask me.<br /><br />(I realize that there are some smaller details that users might want to tweak, and I'd like to help them do so via proper documentation and allowing user adjustment of object list sizes, etc. Still, I want to keep options open which is why I always do performance testing with high object counts, but also try to design my systems around flexibility.)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>psycopathicteen</b> [ Mon Aug 07, 2017 3:28 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Why no SNES homebrew scene?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I'm also trying to do an Alien Soldier type game, but I'm also doing a hell of a lot of sprite animation, which is why that animation code is so long.  It has to figure out how a constantly changing combination of sprites onscreen are going to fit into VRAM.<br /><br />I'm still trying to crunch the code down.  I hope this is a noticeable improvement.<br /><br /><span style="font-size: 75%; line-height: normal"><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">animation:<br />ldy {metasprite_request}<br />bne +&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;//no animation, if &quot;metasprite_request&quot; is blank<br />jsr clear_vram_slot<br />stz {frame_id}<br />rts<br />+;<br />lda {animation_update}&nbsp; &nbsp;&nbsp; &nbsp;//sprite is animated if &quot;metapsprite&quot; is different from<br />bne +&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;//&quot;metasprite_request&quot; or &quot;animation_update&quot; is set<br />cpy {metasprite}<br />bne +<br />rts<br />+;<br />lda $000c,y<br />tax<br />clc<br />adc {total_dma_legnth}&nbsp; &nbsp;&nbsp; &nbsp;//check if there is enough DMA time for sprite<br />cmp #$0081<br />bcc ++<br />lda {first_object_to_dma}<br />bne +<br />tdc<br />sta {first_object_to_dma}<br />+;<br />rts<br />+;<br />stx {vram_size}<br />jsr clear_vram_slot&nbsp; &nbsp;&nbsp; &nbsp;//clear previous animation frame<br />stz {180_degrees_flip}<br />lda {animation_update}<br />cmp #$0002&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;//if &quot;animation_update&quot; is 2, then frame is rotated 180 degrees<br />bne +<br />lda #$c000<br />sta {180_degrees_flip}<br />+;<br />stz {animation_update}<br />ldy {metasprite_request}<br />sty {metasprite}<br /><br />lda $000e,y<br />clc<br />adc {animation_index}<br />inc #2<br />sta {frame_id}<br />tax<br />lda {animation_copies},x<br />inc<br />sta {animation_copies},x<br />dec<br />beq +&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;//if animation_copies is not 0, then no further processing is needed<br />rts<br />+;<br /><br />lda $000a,y&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;//find the ROM address of sprite graphics<br />asl #5&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;//ROM address = metasprite ROM address + (animation frame)*(metasprite ROM size)<br />sta {vram_width}<br />sep #$20<br />lda {animation_index}<br />lsr<br />sta $4202<br />lda $000c,y<br />sta $4203<br />nop<br />rep #$20<br />lda $4216<br />asl #5<br />clc<br />adc $0006,y<br />sta {temp3}&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;//&quot;temp3&quot; is ROM address<br />lda $0008,y<br />sta {temp2}&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;//&quot;temp2&quot; is ROM bank<br />lda $0010,y<br />bpl +&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;//if $0010,y is $7fff or less, it is the metasprite data itself<br />tya&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;//if $0010,y is $8000 or more, it is the address pointing to metasprite data<br />clc<br />adc {animation_index}<br />tax<br />ldy $0010,x<br />+;<br />phd<br />lda #$0000<br />tcd<br />ldx #$ffff<br />-;<br />&nbsp; &nbsp;lda $0010,y<br />&nbsp; &nbsp;bne +<br />&nbsp; &nbsp;txa<br />invalid_chr:<br />&nbsp; &nbsp;pld<br />&nbsp; &nbsp;ldx {frame_id}<br />&nbsp; &nbsp;sta {animation_chr},x<br />&nbsp; &nbsp;lda {vram_size}<br />&nbsp; &nbsp;clc<br />&nbsp; &nbsp;adc {total_dma_legnth}<br />&nbsp; &nbsp;sta {total_dma_legnth}<br />&nbsp; &nbsp;rts&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;//this is where the game exits the routine<br />&nbsp; &nbsp;+;<br />&nbsp; &nbsp;sty.b {temp5}<br />&nbsp; &nbsp;lda $0012,y<br />&nbsp; &nbsp;sta.b {temp_x}<br />&nbsp; &nbsp;lda $0011,y<br />&nbsp; &nbsp;and #$0070<br />&nbsp; &nbsp;lsr #4<br />&nbsp; &nbsp;sta.b {temp8}&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;//&quot;temp8&quot; counts down the horizontal sprite run<br />&nbsp; &nbsp;lda $0018,y<br />&nbsp; &nbsp;adc.b {temp3}<br />-;<br />&nbsp; &nbsp;&nbsp; &nbsp;sta.b {temp}&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;//&quot;temp&quot; is the ROM address of the sprite being added<br />&nbsp; &nbsp;&nbsp; &nbsp;sta.b {temp9}&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;//&quot;temp9&quot; is the ROM address of the top sprite in a vertical run<br />&nbsp; &nbsp;&nbsp; &nbsp;lda $0014,y<br />&nbsp; &nbsp;&nbsp; &nbsp;sta.b {temp_y}<br />&nbsp; &nbsp;&nbsp; &nbsp;lda $0011,y<br />&nbsp; &nbsp;&nbsp; &nbsp;and #$000f<br />&nbsp; &nbsp;&nbsp; &nbsp;sta.b {temp7}&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;//&quot;temp7&quot; counts down the vertical sprite run<br />&nbsp; &nbsp;&nbsp; &nbsp;jmp find_vram_slot<br />find_vram_slot_done:<br />&nbsp; &nbsp;&nbsp; &nbsp;ldy.b {temp5}&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;//this puts all the &quot;OAM&quot; information<br />&nbsp; &nbsp;&nbsp; &nbsp;lda.b {temp6}&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;//onto the linked list<br />&nbsp; &nbsp;&nbsp; &nbsp;ora $0016,y<br />&nbsp; &nbsp;&nbsp; &nbsp;sta {sprite_attributes},x<br />&nbsp; &nbsp;&nbsp; &nbsp;lda.b {temp4}<br />&nbsp; &nbsp;&nbsp; &nbsp;sta {sprite_size},x<br />&nbsp; &nbsp;&nbsp; &nbsp;lda.b {temp_y}<br />&nbsp; &nbsp;&nbsp; &nbsp;sta {sprite_y},x<br />&nbsp; &nbsp;&nbsp; &nbsp;clc<br />&nbsp; &nbsp;&nbsp; &nbsp;adc.b {temp10}<br />&nbsp; &nbsp;&nbsp; &nbsp;sta.b {temp_y}<br />&nbsp; &nbsp;&nbsp; &nbsp;lda.b {temp_x}<br />&nbsp; &nbsp;&nbsp; &nbsp;sta {sprite_x},x<br />&nbsp; &nbsp;&nbsp; &nbsp;dec.b {temp7}&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;//decreases &quot;temp 7&quot; until all sprites<br />&nbsp; &nbsp;&nbsp; &nbsp;bpl find_vram_slot&nbsp; &nbsp;&nbsp; &nbsp;//in the vertical run are put on linked list<br />&nbsp; &nbsp;&nbsp; &nbsp;dec.b {temp8}&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;//decreases &quot;temp 8&quot; until all sprites<br />&nbsp; &nbsp;&nbsp; &nbsp;bmi +&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;//in the horizontal run are put on linked list<br />&nbsp; &nbsp;&nbsp; &nbsp;clc<br />&nbsp; &nbsp;&nbsp; &nbsp;adc.b {temp10}<br />&nbsp; &nbsp;&nbsp; &nbsp;sta.b {temp_x}<br />&nbsp; &nbsp;&nbsp; &nbsp;lda.b {temp10}<br />&nbsp; &nbsp;&nbsp; &nbsp;asl #2<br />&nbsp; &nbsp;&nbsp; &nbsp;adc.b {temp9}<br />&nbsp; &nbsp;&nbsp; &nbsp;jmp -<br />+;<br />&nbsp; &nbsp;tya<br />&nbsp; &nbsp;clc<br />&nbsp; &nbsp;adc #$000a<br />&nbsp; &nbsp;tay<br />&nbsp; &nbsp;jmp --<br /><br /><br />find_vram_slot:<br />lda $0010,y<br />txy<br />and #$0003<br />dec<br />beq small_slot<br />cmp #$0001<br />beq large_slot<br /><br />repeat_slot:&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;//this finds repeat slots<br />tsb.b {temp4}<br />ldx {repeat_slot_stack_index}<br />dex<br />dex<br />bpl +<br />tya<br />jmp invalid_chr<br />+;<br />lda {repeat_slot_stack},x<br />stx {repeat_slot_stack_index}<br />tax<br />tya<br />sta {sprite_name},x&nbsp; &nbsp;&nbsp; &nbsp;//puts it on linked list<br />jmp find_vram_slot_done<br /><br />macro add_and_store(a,b) {<br />adc {a}<br />sta {b},y<br />}<br /><br />macro find_slot(stack_index,stack) {<br />sta.b {temp4}<br />ldx {stack_index}<br />dex<br />dex<br />bpl +<br />tya<br />jmp invalid_chr<br />+;<br />lda {stack},x<br />stx {stack_index}<br />tax<br />tya<br />sta {sprite_name},x&nbsp; &nbsp;&nbsp; &nbsp;//adds slot to linked list<br />lda x16_lut,x<br />ldy.b {dma_updates}<br />sta {dma_destination},y&nbsp; &nbsp;&nbsp; &nbsp;//sets up dma queue<br />clc<br />add_and_store(#$0100,{dma_destination}+8)<br />}<br /><br /><br />small_slot:&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;//this finds 16x16 VRAM slot<br />find_slot({small_slot_stack_index},{small_slot_stack})<br />lda.b {temp}<br />sta {dma_address},y<br />add_and_store({vram_width},{dma_address}+8)<br />adc {vram_width}<br />sta.b {temp}<br />lda.b {temp2}<br />ora #$4000<br />sta {dma_bank},y<br />sta {dma_bank}+8,y<br />lda #$0010<br />jmp ++<br /><br />large_slot:&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;//finds open 32x32 VRAM slot<br />find_slot({large_slot_stack_index},{large_slot_stack})<br />add_and_store(#$0100,{dma_destination}+16)<br />add_and_store(#$0100,{dma_destination}+24)<br />lda.b {temp}<br />sta {dma_address},y<br />add_and_store({vram_width},{dma_address}+8)<br />add_and_store({vram_width},{dma_address}+16)<br />add_and_store({vram_width},{dma_address}+24)<br />adc {vram_width}<br />sta.b {temp}<br />lda.b {temp2}<br />ora #$8000<br />sta {dma_bank},y<br />sta {dma_bank}+8,y<br />sta {dma_bank}+16,y<br />sta {dma_bank}+24,y<br />lda #$0020<br />+;<br />sta.b {temp10}<br />clc<br />adc.b {dma_updates}<br />sta.b {dma_updates}<br />stx.b {temp6}<br />jmp find_vram_slot_done<br /><br /><br />x16_lut:<br />dw $0000,$0020,$0040,$0060,$0080,$00a0,$00c0,$00e0,$0110,$0120,$0140,$0160,$0180,$01a0,$01c0,$01e0<br />dw $0200,$0220,$0240,$0260,$0280,$02a0,$02c0,$02e0,$0310,$0320,$0340,$0360,$0380,$03a0,$03c0,$03e0<br />dw $0400,$0420,$0440,$0460,$0480,$04a0,$04c0,$04e0,$0510,$0520,$0540,$0560,$0580,$05a0,$05c0,$05e0<br />dw $0600,$0620,$0640,$0660,$0680,$06a0,$06c0,$06e0,$0710,$0720,$0740,$0760,$0780,$07a0,$07c0,$07e0<br />dw $0800,$0820,$0840,$0860,$0880,$08a0,$08c0,$08e0,$0910,$0920,$0940,$0960,$0980,$09a0,$09c0,$09e0<br />dw $0a00,$0a20,$0a40,$0a60,$0a80,$0aa0,$0ac0,$0ae0,$0b10,$0b20,$0b40,$0b60,$0b80,$0ba0,$0bc0,$0be0<br />dw $0c00,$0c20,$0c40,$0c60,$0c80,$0ca0,$0cc0,$0ce0,$0d10,$0d20,$0d40,$0d60,$0d80,$0da0,$0dc0,$0de0<br />dw $0e00,$0e20,$0e40,$0e60,$0e80,$0ea0,$0ec0,$0ee0,$0f10,$0f20,$0f40,$0f60,$0f80,$0fa0,$0fc0,$0fe0<br />dw $1000,$1020,$1040,$1060,$1080,$10a0,$10c0,$10e0,$1110,$1120,$1140,$1160,$1180,$11a0,$11c0,$11e0<br />dw $1200,$1220,$1240,$1260,$1280,$12a0,$12c0,$12e0,$1310,$1320,$1340,$1360,$1380,$13a0,$13c0,$13e0<br />dw $1400,$1420,$1440,$1460,$1480,$14a0,$14c0,$14e0,$1510,$1520,$1540,$1560,$1580,$15a0,$15c0,$15e0<br />dw $1600,$1620,$1640,$1660,$1680,$16a0,$16c0,$16e0,$1710,$1720,$1740,$1760,$1780,$17a0,$17c0,$17e0<br />dw $1800,$1820,$1840,$1860,$1880,$18a0,$18c0,$18e0,$1910,$1920,$1940,$1960,$1980,$19a0,$19c0,$19e0<br />dw $1a00,$1a20,$1a40,$1a60,$1a80,$1aa0,$1ac0,$1ae0,$1b10,$1b20,$1b40,$1b60,$1b80,$1ba0,$1bc0,$1be0<br />dw $1c00,$1c20,$1c40,$1c60,$1c80,$1ca0,$1cc0,$1ce0,$1d10,$1d20,$1d40,$1d60,$1d80,$1da0,$1dc0,$1de0<br />dw $1e00,$1e20,$1e40,$1e60,$1e80,$1ea0,$1ec0,$1ee0,$1f10,$1f20,$1f40,$1f60,$1f80,$1fa0,$1fc0,$1fe0<br /><br />no_slot_to_clear:<br />plb<br />rts<br /><br />macro clear_slot(stack_index,stack) {<br />ldx {stack_index}<br />sta {stack},x<br />inx<br />inx<br />stx {stack_index}<br />}<br /><br />clear_vram_slot:&nbsp; &nbsp;//this routine clears the VRAM slots of the previous animation frame<br />pea $807e<br />plb<br />ldy {frame_id}<br />beq no_slot_to_clear<br />lda {animation_copies}-$7e0000,y<br />beq +<br />dec<br />sta {animation_copies}-$7e0000,y<br />bne no_slot_to_clear<br />+;<br />lda {animation_chr}-$7e0000,y<br />-;<br />cmp #$ffff<br />beq no_slot_to_clear<br />tay<br />ldx {sprite_size}-$7e0000,y<br />beq clear_small_slot<br />cpx #$0001<br />beq clear_large_slot<br />clear_slot({repeat_slot_stack_index},{repeat_slot_stack})<br />bra +<br /><br />clear_small_slot:<br />clear_slot({small_slot_stack_index},{small_slot_stack})<br />bra +<br /><br />clear_large_slot:<br />clear_slot({large_slot_stack_index},{large_slot_stack})<br />+;<br />lda {sprite_name}-$7e0000,y<br />jmp -<br /></div></span>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>GradualGames</b> [ Tue Aug 08, 2017 12:07 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Why no SNES homebrew scene?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I've considered moving to SNES at some point in the future, but I'm reluctant just due to the implicit, rather large jump in scope. We're a 2 person operation and each NES game we've made clocks in right around 3.5 to 4 years at the pace we work (this is with me doing everything but the art, so music for instance is of manageable scope). I think that's about the limit of my patience for a large project which has extra difficulty (working with old hardware) imposed on it. If I made a SNES game I'd probably take 6, maybe 7 years on the type of game we might make. I think it's more realistic I may jump to gameboy, potentially. The graphics format was so similar I was able to make small modifications to my NES tools to output data for gameboy just tinkering one weekend. That plus the growing number of people in the gameboy scene makes it an attractive second option (more resources, tools, game jams, etc.). I think the reality boils down to SNES projects need larger teams (or just a lot more time), and as hobbyists keeping together large teams is obscenely difficult. It's difficult for all indie devs, probably, but with modern dev it's much easier to change out members of a team who can easily ramp up on some modern language codebase versus obscure old hardware.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>93143</b> [ Wed Aug 09, 2017 12:56 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Why no SNES homebrew scene?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Just about all of the projects I want to do on the SNES are either primitive practice games, one-shot tech demos, or ports.  The only exception is a full-scale SA-1/MSU1 F-Zero game, which is so far down the list that I don't expect to ever start.  Maybe I'm subconsciously trying to push back against the scope overload that seems to plague everything I do...  or maybe I'm simply protected by my lack of artistic initiative.  Either way, I've been laying the groundwork for my first SNES project for over three years now.  Hopefully once I'm out of grad school things will loosen up a bit...

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>calima</b> [ Wed Aug 09, 2017 10:40 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Why no SNES homebrew scene?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I was also looking at getting on the Gameboy, when Krikzz announced the GB-X everdrive some time ago. It has lower power consumption, and a RTC, so you can finally play 2nd gen pokemon as intended <img src="./images/smilies/icon_razz.gif" alt=":P" title="Razz" /><br />Of course there are plenty of z80 C compilers.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Wed Aug 09, 2017 11:14 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Why no SNES homebrew scene?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />That'd work for the ColecoVision, Master System, or Game Gear. But I'll open another topic in GBDev about C on the LR35902.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Wed Aug 09, 2017 1:36 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Why no SNES homebrew scene?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">GradualGames wrote:</div><div class="quotecontent">I've considered moving to SNES at some point in the future</div><br />Same here, I planned to move to SNES once I released some 3-4 games on NES. Exept I'm still at 0 games for the NES.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>syboxez</b> [ Wed Aug 09, 2017 5:31 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Why no SNES homebrew scene?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I've been wanting to get into SNES development for a while now, but really don't know where to start. I know x86 assembly fairly well (enough to write some functions in ASM for use in C code and to have an understanding of how to structure and write ASM code) and have learned most of the commonly used 65816 opcodes. I've been following bazz's tutorial on superfamicom.org and got to the point where I put a 1x1 tile image on the screen while understanding about half of what I was doing. Haven't really gotten much further than that.<br /><br />I love coding in assembly, and making a SNES game has been a lifelong dream of mine. Some pointers would be much appreciated.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>18</strong> of <strong>30</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>