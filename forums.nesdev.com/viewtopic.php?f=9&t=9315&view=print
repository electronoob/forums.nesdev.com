<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Help appreciated in constructing a hardware NSF-Player</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Help appreciated in constructing a hardware NSF-Player</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=9&amp;t=9315">http://forums.nesdev.com/viewtopic.php?f=9&amp;t=9315</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>krzysiobal</b> [ Sat Sep 15, 2012 7:17 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Help appreciated in constructing a hardware NSF-Player</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Hello.<br />I am making a hardware NSF player, which consists of a NES CPU, RAM and programmable rom (Flash) memory, MMC card reader, LCD display and a CPLD, which generates enable signals for RAM/ROM/LCD, helps to communicate CPU with MMC and so on.<br /><br />the memory area I designed is as follows:<br />$0000-$1fff - 8KB RAM<br />$2000-$2007 - registers for MMC card &amp; LCD<br />$3000-$3fff - 4KB RAM<br />$5FF8-$5fff - bankswitching registers<br />$6000-$7fff - 8KB RAM<br />$8000-$8fff - 4KB ROM bank0<br />$9000-$9fff - 4KB ROM bank1<br />$a000-$afff - 4KB ROM bank2<br />$b000-$bfff - 4KB ROM bank3<br />$c000-$cfff - 4KB ROM bank4<br />$d000-$dfff - 4KB ROM bank5<br />$e000-$efff - 4KB ROM bank6<br />$f000-$ffff - 4KB ROM bank7<br /><br />Also the whole ROM space can be switched in 64kb chunks.<br />The 50 HZ hardware generated signal (for executing play routine in proper intervals) is connected to the /NMI line of CPU.<br /><br />When the device is turned on, it is executing the bootloader code (that is available in the ROM - chunk 0).<br />It it copying the useful procedures to the unused by NSF RAM areas ($3000-3FFF) and  begins executing code from there.<br />Then it switches the ROM to the chunk1 and fills it with the NSF code.<br /><br />The NMI interrupt vector is pointing to some location in the $3000-$3FFF RAM, where resides the procedure for updating LCD display and executing the play code from NSF.<br /><br />There aren't any problems with the not bankswitched NSF files - ROM is programmed with its contents, except the $FFFE-$FFFF address, which is programmed to point to the procedure in the $3000-$3FFF RAM.<br /><br />However, some problems occurs with bankswitched music, because the last rom bank (7), which contains NMI interrupt vector might be switched during playback, so I don't know in which banks' last 2 bytes should I write the NMI addres vector?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>zzo38</b> [ Sat Sep 15, 2012 9:57 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Help appreciated in constructing a hardware NSF-Player</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I also wrote <a href="http://wiki.nesdev.com/w/index.php/User:Zzo38/Hardware_NSF" class="postlink">some ideas for a hardware NSF</a>, but using a cartridge, not this, so some of my ideas won't apply.<br /><br />Must the ROM be written with the .NSF before playing? If not, you need RAM there, not ROM (look at my specification for writing register $4018; this could be used to write-protect the RAM if it is not FDS).<br /><br />Do you intend to support expansion chips?<br /><br />I think the specification of NSF says that the init and play routines should not be called until they return, so NMI cannot be used for that unless you have some hardware to disable it; otherwise use IRQ instead (the NSF specification says that programs in .NSF files should not mess with IRQ).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>krzysiobal</b> [ Sat Sep 15, 2012 10:09 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Help appreciated in constructing a hardware NSF-Player</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />There have to be ROM there, because after power-up something must be run from it!<br /><br />Yes, it is a hardware 50 Hz generator, controlled from the CPU so it can be enabled or disabled by CPU:<br /><img src="http://obrazki.elektroda.pl/5102446200_1347672854.jpg" alt="Image" /><br /><br />No matter if it's NMI or IRQ, but there is still a problem which bank to place the interrupt vectors in.<br /><br />I am not going to support any chips (even the FDS) at the moment.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sat Sep 15, 2012 11:52 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Help appreciated in constructing a hardware NSF-Player</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />As for finding which bank to put the vectors in, I'd recommend using a 13-input NAND gate (74HC133) to decode $FFF8-$FFFF. You may also need a 1 MHz programmable clock divider that you can load with $4E20 (PAL) or $4100 (NTSC) or a lower value that some high-update-frequency NSFs use.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Sat Sep 15, 2012 12:09 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Help appreciated in constructing a hardware NSF-Player</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />For the most part NSFs do not interfere with IRQ, but very recently Delek has decided to start suppressing the IRQ so he can use the frame counter as a timer in his Deflemask program (<a href="http://forums.nesdev.com/viewtopic.php?f=6&amp;t=9296" class="postlink">thread</a>).<br /><br />So, at this point if it's all the same to you I'd recommend using NMI as your timer instead of IRQ. The other alternative is polling a custom mapper register timer like the powerpak does.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>krzysiobal</b> [ Sat Sep 15, 2012 1:31 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Help appreciated in constructing a hardware NSF-Player</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">As for finding which bank to put the vectors in, I'd recommend using a 13-input NAND gate (74HC133) to decode $FFF8-$FFFF. You may also need a 1 MHz programmable clock divider that you can load with $4E20 (PAL) or $4100 (NTSC) or a lower value that some high-update-frequency NSFs use.</div><br />Tepples, your post  cofirm me in the conviction that the NSF format is not prepared for use with hardware players, as because it completely do not support external interrupt.<br /><br />And bytes at fff8-ffff might not always be considered as interrupt vectors, but might be the song opcodes if rom is not prepared for nmi and it will still not work.<br /><br />So i will overwrite the FFFA-FFFF of the bank, which number is in the bankswitch table at offset $77 in nsf.<br /><br />However, if there is $0 at  offset $77, i will consider that at there is the last bank number, not $0 and will ovewrite the last bank.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Sat Sep 15, 2012 2:11 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Help appreciated in constructing a hardware NSF-Player</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />kryzysiobal: I think you misunderstood about IRQs and NSF. The NSF format was absolutely designed to be playable on hardware.<br /><br />The NSF itself is not supposed to use interrupts, but the reason for this is that the hardware player may need them. So, your player is allowed to use interrupts in any way it wants, it's the NSF code that isn't.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>krzysiobal</b> [ Sat Sep 15, 2012 2:47 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Help appreciated in constructing a hardware NSF-Player</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">rainwarrior wrote:</div><div class="quotecontent">kryzysiobal: I think you misunderstood about IRQs and NSF. The NSF format was absolutely designed to be playable on hardware.<br /><br />The NSF itself is not supposed to use interrupts, but the reason for this is that the hardware player may need them. So, your player is allowed to use interrupts in any way it wants, it's the NSF code that isn't.</div><br /><br />No, it is not. There is no way to distinguish if a CPU reads from FFFE-FFFF is because of CPU fething the NMI address or because of fetching opcode at this address.<br /><br />Lets give for  example: Hello Kitty no Ohanabatake.nsf and let's look at its $70-$78 offsets:<br /><br />unsigned char data[8] = {<br />	0x00, 0x00, 0x01, 0x02, 0x00, 0x00, 0x00, 0x00<br />};<br /><br />so $8000-$8FFF is bank 0,<br />    $9000-$9FFF is bank 0,<br />    $AAAA-$AFFF is bank 1,<br />etc<br />and $F000-$FFFF is bank 0.<br />Let's write my NMI routine address at the last 2 bytes  - $FFFE and $FFFF. So its the last<br />two bytes of first 1Kbyte of NSF rom file. However cpu opcodes and data resides here and they will be corrupted if I do so!<br /><br />Hopefully I can assign any bank number to $F000-$FFFF and the game still work.<br /><br />But what if the game used all bytes of its all banks, so that nothing could be overwritten?<br /><br />Allright, Mr tepples suggested nice idea of exchanging those bytes in-the-fly by using address decoding.<br />But what if the game has at $FFFE-$FFFF part of its procedure?<br /><br />Then CPU asserting its address lines to $FFFF would want to read opcode to execute, but if I would exchange it into NMI vector in the fly, trash would be executed.<br /><br />Buf if the NSF specification said that FFFA-FFFF cannot contains any opcodes, it would be nsf-hardware friendly.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sat Sep 15, 2012 3:01 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Help appreciated in constructing a hardware NSF-Player</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The original NSFs were ripped from actual NES games. NES games couldn't have anything in $FFFA-$FFFD other than the game's NMI and reset vectors. So I guess it'd be safe to assume that $FFFA-$FFFF won't have any opcodes.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>krzysiobal</b> [ Sat Sep 15, 2012 3:26 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Help appreciated in constructing a hardware NSF-Player</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I wouldn't be so sure.<br />The game I mentioned above (Hello Kitty no Ohanabatake.nsf) uses bankswitching in NSF.<br />But it is a CNROM game, so no PRG-ROM bankswitching, only CHR. Why the hell it is bankswitched?<br />The only idea that cames into my head is that the authors of the game put the songs in the CHR-MEMORY and the CPU reads them into its RAM via PPU (PPUDATA addres).<br /><br />Btw. Why there are 0, 0, 0, 0, 0, 0, 0, 0 in the $70-$78 to indicate no bankswitching? It would be much convenient to put there 0, 1, 2, 3, 4, 5, 6, 7.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Sat Sep 15, 2012 3:40 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Help appreciated in constructing a hardware NSF-Player</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />0,0,0,0,0,0,0,0 for no bankswitching also indicates that writing the bankswitch addresses should not bankswitch. (In practise, doesn't amount to anything, since no NSFs I know of write those addresses unnecessarily).<br /><br />Also, NSFs should not put anything they expect to read in the vector table $FFFA-FFFF. (I think we forgot to mention this in the spec.) Just override it with your own player's NMI / IRQ / Reset handlers. (You don't need to worry about NSFs trying to read these addresses; I don't think there are any.)<br /><br />Questions about why an NSF is bankswitched, etc. we can't answer for you. The person who made the NSF would have made that decision for one reason or another. NSF rips of games generally have modifications of those games to work as an NSF, so you should expect changes like this. (A lot of NSFs use a bankswitc table to fill in the ROM sparsely, for instance.)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>zzo38</b> [ Sat Sep 15, 2012 4:08 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Help appreciated in constructing a hardware NSF-Player</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">rainwarrior wrote:</div><div class="quotecontent">Also, NSFs should not put anything they expect to read in the vector table $FFFA-FFFF. (I think we forgot to mention this in the spec.) Just override it with your own player's NMI / IRQ / Reset handlers. (You don't need to worry about NSFs trying to read these addresses; I don't think there are any.)</div>Add it to the specification if it is agreed to do so; I agree this would help.<br /><br />I believe my hardware NSF design is 100% compliant (although it could be simplified a little bit if $FFFA-$FFFF is not allowed for use by the .NSF; but I did manage to make it work even without that rule), so some of the ideas mentioned there might help. Since your NSF player is not a cartridge, some of the things I mentioned are not relevant to this project, though.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Sat Sep 15, 2012 4:14 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Help appreciated in constructing a hardware NSF-Player</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I did update the wiki NSF spec. Added it to the caveats section.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>