<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=5&amp;t=7986" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2011-10-11T08:52:57-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=5&amp;t=7986</id>
<entry>
<author><name><![CDATA[psycopathicteen]]></name></author>
<updated>2011-10-11T08:52:57-07:00</updated>
<published>2011-10-11T08:52:57-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7986&amp;p=84957#p84957</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7986&amp;p=84957#p84957"/>
<title type="html"><![CDATA[How did your programming style develop over time?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7986&amp;p=84957#p84957"><![CDATA[
Something I figured out by myself is, that it is good to have some engine code, but not to make your engine too out of specs with the way the system works.<br /><br />A year ago my so-called "dynamic animation engine" sounded good in theory, but it was a b**** to actually implement, especially when you wanted other people to use it.<br /><br />The engine I use nowadays simply divides the 64kB of V-RAM into 1kB slots with an "update_vram_slot" macro, and a little routine during v-blank.  I use it for sprites, tiles and maps.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4383">psycopathicteen</a> — Tue Oct 11, 2011 8:52 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2011-07-28T08:43:09-07:00</updated>
<published>2011-07-28T08:43:09-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7986&amp;p=82110#p82110</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7986&amp;p=82110#p82110"/>
<title type="html"><![CDATA[How did your programming style develop over time?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7986&amp;p=82110#p82110"><![CDATA[
BIT is great, it's just the lack of addressing modes that reduce its usefulness on the 6502.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Thu Jul 28, 2011 8:43 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tomaitheous]]></name></author>
<updated>2011-07-28T05:52:23-07:00</updated>
<published>2011-07-28T05:52:23-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7986&amp;p=82096#p82096</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7986&amp;p=82096#p82096"/>
<title type="html"><![CDATA[How did your programming style develop over time?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7986&amp;p=82096#p82096"><![CDATA[
I was looking at this on the 6280, but should be the same on the 65x and related processors; BIT instruction. You should be able to use it as a quick 2bit flag test without using any regs. Irregardless of what's in Acc and the logic operation of BIT, the byte loaded from BIT should set N and V flags corresponding from bits 7 and 6 of that byte. Makes for a quick flag check.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3645">tomaitheous</a> — Thu Jul 28, 2011 5:52 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[psycopathicteen]]></name></author>
<updated>2011-07-25T19:09:15-07:00</updated>
<published>2011-07-25T19:09:15-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7986&amp;p=82027#p82027</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7986&amp;p=82027#p82027"/>
<title type="html"><![CDATA[How did your programming style develop over time?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7986&amp;p=82027#p82027"><![CDATA[
Something that I hate using is complicated tables.  It gets frustrating and confusing trying to remember what your currently using X and Y for and where did you store X or Y when you had to use X or Y for something else.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4383">psycopathicteen</a> — Mon Jul 25, 2011 7:09 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tomaitheous]]></name></author>
<updated>2011-07-21T21:52:01-07:00</updated>
<published>2011-07-21T21:52:01-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7986&amp;p=81861#p81861</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7986&amp;p=81861#p81861"/>
<title type="html"><![CDATA[How did your programming style develop over time?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7986&amp;p=81861#p81861"><![CDATA[
I'm much more organized in my code nowadays, because it often gets too large and complex to maintain.<br /><br /> Macros - use them a ton. Not only for higher level functionality but code compacting as well. There are plenty of times where a few extra cycles means nothing, and readability means everything.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">main:                             <br /><br />      jsr init_vdc<br />      jsr init_wsg<br />      jsr init_dma<br /><br />      VCE_REG MID_RES|H_FILTER<br />      VDC_REG DCR , AUTO_SATB_ON          <br />      VDC_REG CR , $0000<br />      IRQ_CNTR IRQ2_ON|VIRQ_ON|TIRQ_ON<br />      VDC_REG SATB , $7F00<br />      VDC_REG MWR , SCR64_32<br />      TIMER_REG TMR_CMD, #$00<br />      TIMER_REG TMR_PORT, #$01<br /><br />      VDC_REG CR , BG_ON|SPR_OFF|VINT_ON|HINT_OFF<br /><br />      <br />    ;load font<br />      MAP_BANK_WIDE Font , MPR3<br />      VDC_REG MAWR, $1000<br />      VDC_REG VRWR<br />      DMA Font, $6000, vdata_port, &#40;FontEnd-Font&#41;<br />    <br />    ;load palette<br />      BG_COLOR #$0<br />      DMA_local FontPal,vce_data, #$10<br />      <br />      jsr ClearScreen<br />      <br />      PRINT_STR_i &quot;Custom XM player ver: 1.0.11 alpha&quot;,3,1<br />      PRINT_STR_i &quot;----------------------------------&quot;,3,2<br />      PRINT_STR_i &quot;Song info: BPM=144 SPEED=4 &quot;,3,11<br />      PRINT_STR_i &quot;List:    Pattern:    Line:   &quot;,3,3<br /></div><br /><br /> Equates - I use the hell out of them for arguments in macros. Though I specifically make up pseudo registers of ZP addresses with them too. An, Dn, Rn, etc.<br /> <br /> Labels - extremely important. And for local labels, I completely avoid using "-" and "+", even though I added support them to PCEAS. I rather know what the local label via even the most generic choice of description.<br /><br /> Indenting and code layout - I use a lot of header markers. I.e. long lines of characters to separate subs. Asterisks for important breaks, periods and other chars for less important breaks. Makes skimming through the source code much-much easier. I also indent a lot more than I used to. Though I never used no indentation.<br /><br /> Most of my coding is 6280 based rather than 6502 based, so I tend to optimize for speed over size more often. I've used every single opcode in the ISA more than once. Though one of my favorite instruction is the TST #nn, &lt;address&gt;. ANDs an immediate value with the value of the address (zp, zp+x, abs, abs+x). Nothing gets stored and Acc isn't effected. But N, V, and Z flags are effected. Perfect for bit testing VARs without wasting a reg.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3645">tomaitheous</a> — Thu Jul 21, 2011 9:52 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2011-07-19T21:48:51-07:00</updated>
<published>2011-07-19T21:48:51-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7986&amp;p=81755#p81755</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7986&amp;p=81755#p81755"/>
<title type="html"><![CDATA[How did your programming style develop over time?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7986&amp;p=81755#p81755"><![CDATA[
Back to the original question though, I have different programming styles depending on the language and purpose. At work, for example, where I program JavaScript and ActionScript, I tend to name variables and write comments in portuguese, because I share them with my coworkers. For personal stuff I always use english though.<br /><br />Regarding 6502 assembly, which is the main focus of this place, I became much more organized with time. All my routines are in separate files, which are named after the routines they contain. I use constants for registers and common values. I declare variables by reserving bytes rather than hardcoding them to specific memory locations. My labels try to summarize what action(s) take(s) place after them.<br /><br />More important than all of the above though, is the structure of the program itself. I try to make everything as modular as possible, using as many principles of object-oriented programming as I can. I avoid hacks and exceptions, and try to create rules that are as absolute as possible.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Tue Jul 19, 2011 9:48 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Memblers]]></name></author>
<updated>2011-07-19T21:29:45-07:00</updated>
<published>2011-07-19T21:29:45-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7986&amp;p=81753#p81753</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7986&amp;p=81753#p81753"/>
<title type="html"><![CDATA[How did your programming style develop over time?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7986&amp;p=81753#p81753"><![CDATA[
<div class="quotetitle">tokumaru wrote:</div><div class="quotecontent"><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">BVS and BVC, I've never used for anything, ever.<br /></div><br />Not even for sprite 0 hits? =)<br /></div><br /><br />Oh yeah that's true, it's a macro now so I haven't seen it for a while.  And the first time I got it working, I stole it from one of Chris Covell's demos, so even then I never wrote it myself. <img src="http://forums.nesdev.com/images/smilies/icon_razz.gif" alt=":P" title="Razz" /><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=10">Memblers</a> — Tue Jul 19, 2011 9:29 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2011-07-19T21:10:40-07:00</updated>
<published>2011-07-19T21:10:40-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7986&amp;p=81752#p81752</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7986&amp;p=81752#p81752"/>
<title type="html"><![CDATA[How did your programming style develop over time?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7986&amp;p=81752#p81752"><![CDATA[
<div class="quotetitle">Dwedit wrote:</div><div class="quotecontent"><br />To no surprise, Atari 2600 games often use zpg,x addressing.<br /></div><br />Yeah, but I imagine that (zpg, x) is still pretty rare.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />The stack is a mirror of the zeropage as well, so that also shares the same 128 bytes of RAM.<br /></div><br />IIRC, a common way to initialize the memory and the registers is to push 256 zeroes to the stack.<br /><br /><div class="quotetitle">Memblers wrote:</div><div class="quotecontent"><br />Probably the only time I've used JMP ($xxxx) is when doing JMP ($FFFC).<br /></div><br />I often JSR to a location that does JMP ($xxxx) as a way to simulate JSR ($xxxx), which doesn't exist.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />BVS and BVC, I've never used for anything, ever.<br /></div><br />Not even for sprite 0 hits? =)<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />I'm doing signed stuff all the time in C (add/subtract in the same operation, hell yea), but I just never did in 6502 for some reason.<br /></div><br />Yeah, I often add signed numbers so that I can also subtract with the same instruction, but the numbers they are added to are not signed, so there's no reason to check for overflows.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Tue Jul 19, 2011 9:10 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Memblers]]></name></author>
<updated>2011-07-19T20:45:53-07:00</updated>
<published>2011-07-19T20:45:53-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7986&amp;p=81751#p81751</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7986&amp;p=81751#p81751"/>
<title type="html"><![CDATA[How did your programming style develop over time?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7986&amp;p=81751#p81751"><![CDATA[
Yeah, ROR/ROL normally only comes up for me when I've done serial reading stuff, such as reading controllers or RS232 out of D0 (doing LSR A / ROL variable).<br /><br />For a while when I used to use BCC/BCS for greater/less than compares, I had a hard time remembering which to use until I came up with a mnemonic - that C is "less than" S (in the alphabet).  Haven't used it for a while, I hope that's still right. <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" />  I remember seeing 'BLT' and 'BGT' instructions used somewhere, so I guess that's for the same reason, maybe I should just adopt that too.<br /><br />Probably the only time I've used JMP ($xxxx) is when doing JMP ($FFFC).  More often I've put an absolute JMP in RAM and modified it there (it's the first instruction of my IRQ and NMI routines in some of my programs).<br /><br />BVS and BVC, I've never used for anything, ever.  I'm doing signed stuff all the time in C (add/subtract in the same operation, hell yea), but I just never did in 6502 for some reason.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=10">Memblers</a> — Tue Jul 19, 2011 8:45 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Dwedit]]></name></author>
<updated>2011-07-19T20:37:11-07:00</updated>
<published>2011-07-19T20:37:11-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7986&amp;p=81750#p81750</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7986&amp;p=81750#p81750"/>
<title type="html"><![CDATA[How did your programming style develop over time?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7986&amp;p=81750#p81750"><![CDATA[
On the Atari 2600, half of the zero page is System RAM (a whopping 128 bytes), and the other half is hardware registers.  To no surprise, Atari 2600 games often use zpg,x addressing.<br />The stack is a mirror of the zeropage as well, so that also shares the same 128 bytes of RAM.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=53">Dwedit</a> — Tue Jul 19, 2011 8:37 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2011-07-19T20:28:01-07:00</updated>
<published>2011-07-19T20:28:01-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7986&amp;p=81748#p81748</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7986&amp;p=81748#p81748"/>
<title type="html"><![CDATA[How did your programming style develop over time?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7986&amp;p=81748#p81748"><![CDATA[
<div class="quotetitle">koitsu wrote:</div><div class="quotecontent"><br />ROL/ROR are the two main ones.  I think all these years I've been doing assembly I've only had to use those on a couple occasions, and grudgingly so.  I never found much of a need to rotate bits -- more specifically the MSB back down into the LSB and vice-versa.<br /></div><br />I don't think the point of ROL/ROR is to rotate bits in the same byte (which indeed doesn't look useful at all), specially if you consider that the carry flag is used for intermediary storage, but rather move bits from one byte to another. I use ROL/ROR all the time to shift numbers larger than 8 bits. For the first byte you use ASL/LSR, but in order to carry the shifted out bit over to the next byte you must use ROL/ROR.<br /><br />There are also many other occasions when I need to insert a bit into a byte either from the left or the right (such as when texturing the walls in my raycaster, where each bit represents a light or dark pixel in the texture), and these instructions are extremely useful for that (the alternative would be to use temporary variables and ORA bytes together, which would be much slower).<br /><br />What I have NEVER used in 6502 is the ($XX, X) addressing mode. I *might* eventually use it for accessing the individual audio streams in a music/sound engine, but other than that I see very little use for it. I also rarely make arithmetical use of the overflow flag, since I don't often do math between signed numbers. Everything else I use fairly often.<br /><br />BIT is great. It's probably under-utilized because it has few addressing modes.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Tue Jul 19, 2011 8:28 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[3gengames]]></name></author>
<updated>2011-07-19T19:46:04-07:00</updated>
<published>2011-07-19T19:46:04-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7986&amp;p=81746#p81746</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7986&amp;p=81746#p81746"/>
<title type="html"><![CDATA[How did your programming style develop over time?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7986&amp;p=81746#p81746"><![CDATA[
Nope, not really. I use ROL/ROR sometimes, it's not unnecessary. Sometime you just need to get a bit from one place to the other, haha. One I don't get/use often? None, really. What instructions should have been included in the 6502? INA! Increment A! Ugh, so many wasted cycles sometime when I can't get around needing to transfer it somewhere else or adding it it. Argh!<br /><br />And a good example of needing ROL/ROR is needing to maintain a value of a 16-bit multiply via shift.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4311">3gengames</a> — Tue Jul 19, 2011 7:46 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[koitsu]]></name></author>
<updated>2011-07-19T19:36:09-07:00</updated>
<published>2011-07-19T19:36:09-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7986&amp;p=81744#p81744</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7986&amp;p=81744#p81744"/>
<title type="html"><![CDATA[How did your programming style develop over time?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7986&amp;p=81744#p81744"><![CDATA[
Weird question, but probably an okay thread in which to ask it:<br /><br />Are there any 6502 opcodes that folks here often find themselves confused when having to use?  Likewise, any opcodes which you "just don't see the point of" and tend to avoid using?<br /><br />With regards to me and the latter: ROL/ROR are the two main ones.  I think all these years I've been doing assembly I've only had to use those on a couple occasions, and grudgingly so.  I never found much of a need to rotate bits -- more specifically the MSB back down into the LSB and vice-versa.  ASL/LSR, absolutely use 'em all the time, but not so much ROL/ROR.<br /><br />An opcode I do find fantastic is BIT.  Under-utilised.  :-)<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3">koitsu</a> — Tue Jul 19, 2011 7:36 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[3gengames]]></name></author>
<updated>2011-07-19T13:14:35-07:00</updated>
<published>2011-07-19T13:14:35-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7986&amp;p=81725#p81725</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7986&amp;p=81725#p81725"/>
<title type="html"><![CDATA[How did your programming style develop over time?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7986&amp;p=81725#p81725"><![CDATA[
I'm still developing. Although, now I'm getting used to just do stuff like:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">CMP #$C0<br />BEQ ExitMove<br />CMP #$80<br />BCS RightPressed<br />Left button pressed code here<br /></div><br /><br />Just got a little tricky with my controller movement program, I've never used CMP to that extent before, but for this last rewrite of my game, I'm going to try more exotic stuff like that.[/quote]<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4311">3gengames</a> — Tue Jul 19, 2011 1:14 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Ian A]]></name></author>
<updated>2011-07-19T07:30:09-07:00</updated>
<published>2011-07-19T07:30:09-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7986&amp;p=81712#p81712</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7986&amp;p=81712#p81712"/>
<title type="html"><![CDATA[How did your programming style develop over time?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7986&amp;p=81712#p81712"><![CDATA[
I use a lot less magic numbers and a lot more constants.<br /><br />I've gotten much better at code organization, but I could still improve a lot in that area.  At least now when I have to rewrite a poorly coded section, I only have to rewrite that small section.<br /><br />I've gotten into using a lot of macros.  I had chunks of similar code with small changes for speed, or were slightly modified to handle different circumstances.  It's waaaaay more maintainable for me to have them as macros.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4250">Ian A</a> — Tue Jul 19, 2011 7:30 am</p><hr />
]]></content>
</entry>
</feed>