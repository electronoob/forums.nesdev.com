<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=2&amp;t=6223" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2010-03-29T01:59:16-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=2&amp;t=6223</id>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2010-03-29T01:59:16-07:00</updated>
<published>2010-03-29T01:59:16-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6223&amp;p=59223#p59223</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6223&amp;p=59223#p59223"/>
<title type="html"><![CDATA[8X16 Sprites... Disadvantages?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6223&amp;p=59223#p59223"><![CDATA[
<div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />And also, what Tepples said about MMC3 is true. If you want to use the scanline counter, you can only use sprites from the left pattern table (this is also true with 8x8 sprites; you have to set it up so BG is on the right, and sprites are on the left). I'm not sure why this is, I just know that it's true (and lame).<br /></div><br />Basically the PPU does all BG related fetches (nametable, attribute table and BG pattern table) and then does all sprite related fetches (sprite pattern table) each scanline, and repeat this.<br />So if BG uses the low pattern table and sprites the high pattern table, A12 will remain low for all BG fetches and high for all sprites fetches, effectively clocking the counter once per scanline.<br /><br />If BG uses right pattern table, A12 will toggle many times during BG fetches as it altenrate between pattern tables and name table fetches so the counter will be clocked more than once per scanline.<br /><br />If any sprite uses the left pattern table, A12 will also toggle during sprite fetches, and will clock the counter (more than once per scanine).<br /><br />If you do $2006 writes it's possible to manually clock the counter too.<br /><br />It is actually possible to use the counter under the previous conditions, but you'd have to predict the extra clocks of the counter.<br /><br />Hoping this clears things up.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Mon Mar 29, 2010 1:59 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[MottZilla]]></name></author>
<updated>2010-03-28T12:27:12-07:00</updated>
<published>2010-03-28T12:27:12-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6223&amp;p=59171#p59171</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6223&amp;p=59171#p59171"/>
<title type="html"><![CDATA[8X16 Sprites... Disadvantages?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6223&amp;p=59171#p59171"><![CDATA[
<div class="quotetitle">Celius wrote:</div><div class="quotecontent"><br />And also, what Tepples said about MMC3 is true. If you want to use the scanline counter, you can only use sprites from the left pattern table (this is also true with 8x8 sprites; you have to set it up so BG is on the right, and sprites are on the left). I'm not sure why this is, I just know that it's true (and lame).<br /></div><br /><br />It's because the MMC3 scanline counter works by watching accesses to certain CHR address space. Every scanline has a fixed amount of pulses if there are only Background tile fetches. However if you have a sprite on the screen using the background's side of the pattern table, it throws off the counter as there were additional pulses. MMC5 does not suffer this as it must use a different method of keeping track of the scanline. CPU based IRQ including the Konami VRC4 are unaffected and could use 8x16 sprites from either side of the table.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=1726">MottZilla</a> — Sun Mar 28, 2010 12:27 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Celius]]></name></author>
<updated>2010-03-27T21:23:03-07:00</updated>
<published>2010-03-27T21:23:03-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6223&amp;p=59119#p59119</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6223&amp;p=59119#p59119"/>
<title type="html"><![CDATA[8X16 Sprites... Disadvantages?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6223&amp;p=59119#p59119"><![CDATA[
There are actually several disadvantages to using 8x16 sprites. Like Tepples was saying, you have to define more blank space in your pattern tables for 1-tiled sprites. The disadvantage is that you HAVE to use 2 tiles, and the two tiles you use HAVE to be first an even tile ID, and then an odd tile ID. But the reason it's like this is so you can use from both pattern tables, which is pretty nice. Otherwise I'm sure they would have designed it so if you specify the sprite's tile ID as $20, it would use tiles $20 and $21, and if you specified it as $21, it would use $21 and $22, etc. But as it stands, if you specify tile $20, it uses $20 and $21 from the left pattern table, and if you specify $21, it uses $20 and $21 from the right table.<br /><br />So this forces you to lay your graphics out in a pretty specific way. Also, 8x16 sprite patterns usually aren't as versatile as 8x8 sprite patterns would be. If you like to reuse sprite patterns for other sprites, using 8x8 is really good because the peices are smaller and are therefore less specific graphically. 8x16 patterns often include peices of graphics that prevent you from reusing them. For example, say you have an enemy with a head that's 8x8 pixels, and its upper arm is also 8x8 pixels. Pretend that you're using 8x16 sprites, and you define it so the head and the upper arm are both in the same 8x16 sprite. When the enemy starts walking, you want to move the upper arm. However, since the 8x16 pattern includes both the head and the arm, you can't re-use the head part because you want the upper arm to move. This forces you to use a different sprite pattern for the arm movement, which means you have to redefine the head since it's paired with the arm. There are ways to avoid this, but not always.<br /><br />For my NROM project, I decided I had to use 8x8 sprites, because I simply could not afford to waste space with only 8k of CHR data for the entire game. So the space thing is really important to consider.<br /><br />And also, what Tepples said about MMC3 is true. If you want to use the scanline counter, you can only use sprites from the left pattern table (this is also true with 8x8 sprites; you have to set it up so BG is on the right, and sprites are on the left). I'm not sure why this is, I just know that it's true (and lame). In many cases, 8x16 sprites are helpful (like if you want big sprites. In one of my project, I truly have half the sprites unused most of the time). But for versatility and conservation of space, you'll want 8x8 sprites.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=138">Celius</a> — Sat Mar 27, 2010 9:23 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2010-03-27T19:54:17-07:00</updated>
<published>2010-03-27T19:54:17-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6223&amp;p=59116#p59116</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6223&amp;p=59116#p59116"/>
<title type="html"><![CDATA[8X16 Sprites... Disadvantages?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6223&amp;p=59116#p59116"><![CDATA[
The biggest disadvantage of 8x16 sprites is that they have more minimum blank space. This means bullets and the like will take up more space in your pattern table, and things will start hitting the 25% sprite overdraw limit and flickering earlier. And if you're using MMC3's scanline counter, the unique ability of 8x16 sprites to draw from both pattern tables becomes useless.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Sat Mar 27, 2010 7:54 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[WJYkK]]></name></author>
<updated>2010-03-27T19:26:14-07:00</updated>
<published>2010-03-27T19:26:14-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6223&amp;p=59111#p59111</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6223&amp;p=59111#p59111"/>
<title type="html"><![CDATA[8X16 Sprites... Disadvantages?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6223&amp;p=59111#p59111"><![CDATA[
Here's a curious question: because the NES gives you an option to use 8X16 sprites instead of 8X8 sprites, it would obviously be more beneficial. However, obviously with every advantage there are disadvantages. So, are there any problems with this method? If not, why do some people rather not use 8X16 sprites?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4164">WJYkK</a> — Sat Mar 27, 2010 7:26 pm</p><hr />
]]></content>
</entry>
</feed>