<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Mapper/board naming (was: Who edited the AOROM page?)</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Mapper/board naming (was: Who edited the AOROM page?)</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=16&amp;t=9825">http://forums.nesdev.com/viewtopic.php?f=16&amp;t=9825</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>2</strong> of <strong>4</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Thu Mar 13, 2014 8:43 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Did someone edit the AOROM page?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent"><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">- 512 KiB of data is awkward to manage with only 32KiB at-a-time banking and only 2 KiB of internal RAM.</div><br />I don't think it's awkward to manage</div><br />I agree. 32KB out of 512KB isn't any harder to manage than 32KB out of 256KB.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">32k banks also means less banks, so easier to manage.</div><br />Interesting point, but I don't know if I agree with this. Even though there are less banks, you have to think more carefully about how you'll organize the code/data within them, always considering how the game engine will work, in order to minimize the amount of bankswitching operations per frame and the amount of data you have to copy to RAM.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Also the size of PRG banks has no relationship ever with RAM size.</div><br />I think lidnariq's reasoning was that since you can only have one bank mapped at any given time, you can't access data from multiple banks at the same time, and with more RAM you could copy the data from one bank, swap another bank in and you'll effectively be accessing data from 2 different banks. Again, the total ROM size is mostly irrelevant anyway, so 512KB isn't any harder to manage than 256KB. If anything, 512KB would make things easier because you'd be able to duplicate some of the data to combine it with other things in different banks.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Thu Mar 13, 2014 8:45 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Did someone edit the AOROM page?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />With 256K or more you could almost organize the game as a multicart. Perhaps that's why Battletoads includes such diverse play styles.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Thu Mar 13, 2014 2:15 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Did someone edit the AOROM page?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I'm quite fond of 32k banking. I like to divide the banks by function, e.g. one for music, a few for level maps, one for CHR tiles, one for gameplay code, etc.<br /><br />The only thing I find it really unsuitable for is DPCM, unless you want to duplicate your samples across all banks that may be used during playback, but I am happy to live without.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Thu Mar 13, 2014 3:42 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Did someone edit the AOROM page?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />How big is your game's NMI handler? If you hit a lag frame, the CPU could be in any bank while it executes.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Thu Mar 13, 2014 4:48 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Did someone edit the AOROM page?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">How big is your game's NMI handler? If you hit a lag frame, the CPU could be in any bank while it executes.</div><br />The NMI code present in all banks could very well be a stub, like the Reset handler, that selects the bank with the actual code and jumps to it. The only difference is that you have to remember the index of the previous bank, in order to restore it before returning from the NMI.<br /><br />The good thing is that you don't even have to sacrifice any time detecting whether the NMI interrupted the frame calculations, since the 32KB banking scheme allows you to change the CPU vectors. When there is no lag, you can safely select the NMI bank (which has the NMI vector point directly to the NMI handler) before waiting for VBlank. On the other banks, the NMI vector points to the stub NMI.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Thu Mar 13, 2014 4:50 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Did someone edit the AOROM page?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">How big is your game's NMI handler? If you hit a lag frame, the CPU could be in any bank while it executes.</div><br />Who cares? Just duplicate a tiny NMI handler that saves the bank, switches in the correct bank, and jumps to the real NMI handler. Doesn't take many cycles.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Thu Mar 13, 2014 4:58 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Did someone edit the AOROM page?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Every bank has an NMI, RESET and IRQ vector, and corresponding code, obviously (though I'm not actually using IRQ for anything, it's just an RTI).<br /><br />The bank switching routine is organized like a function call, it pushes the current bank number, changes banks, executes the routine from that bank, returns to finish by popping the original bank number and switching back to it before RTS to the place the banked routine was called from.<br /><br />For an NMI, you can either have one true NMI routine and have all the other NMIs bankswitch to it, or simply duplicate it in each bank. For the time being, I'm duplicating it in each bank, since it's the simpler solution. The NMI itself is currently about 480 bytes of code (some is unrolled loops that could be taken in if needed). I don't really anticipate needing to save those bytes, but if I need them back, there's enough time left in vblank to include a bank switch (the NMI just does OAM DMA + 32 byte palette + 32 byte nametable, not too heavy a load).<br /><br /><br />As an aside, I really enjoy that the cc65 toolchain's separation of assembling and linking lets me assemble common code only once before linking it in all the banks that need it. (Assembling doesn't really take a significant amount of time, I just enjoy the conceptual efficiency.)<br /><br /><br />Also, the music runs in the NMI handler, but all of its code is in its own bank. This is obviously not part of the 480 bytes I just mentioned. The music routine would never run a whole frame, but I have a flag anyway to prevent a re-entrant NMI.<br /><br />I actually turn the NMI once at startup, and then my game never turns it off. This lets the music continue while screen transitions are being uploaded with rendering off, etc. and as I was getting at above, there's no need to worry what bank was active when the NMI hit (lag frames or otherwise). When a bank call is made it remembers via the stack to return to the calling bank; that's all you need to do to keep it robust.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Thu Mar 13, 2014 6:41 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Did someone edit the AOROM page?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Back when I learned what mappers were, I thought working with 32KB banks would be very limiting, but now I realize that's not necessarily the case.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Thu Mar 13, 2014 7:36 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Did someone edit the AOROM page?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I think it's no more limiting than most other arrangements.<br /><br />With 16k or 8k banks you have more fragmentation, wasted space that you can't fill at the edges of each smaller bank. On the other hand, you don't have to duplicate code, as you can have one bank of code read data from many banks. 8k banking is especially useful for Sunsoft style DPCM banking, if that's the kind of soundtrack you want.<br /><br />With 32k banks you have the least amount of fragmentation, almost no ROM layout tetris to do, but some amount of code duplication is unavoidable. For example, in my case, the level unpacking code appears in each level data bank. DPCM duplication is another potential source of waste space, and multiple DPCM banks is probably out of the question.<br /><br />So, the space tradeoff is probably a wash. DPCM is the biggest issue, in my opinion, but it depends on your soundtrack goal.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Fri Mar 14, 2014 1:17 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Did someone edit the AOROM page?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">rainwarrior wrote:</div><div class="quotecontent">As an aside, I really enjoy that the cc65 toolchain's separation of assembling and linking lets me assemble common code only once before linking it in all the banks that need it. (Assembling doesn't really take a significant amount of time, I just enjoy the conceptual efficiency.)</div><br />How did you do it? I thought code duplication in cc65 was only realistically possible with macros.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Jarhmander</b> [ Fri Mar 14, 2014 6:47 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Did someone edit the AOROM page?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Well, if you assemble each bank separately, include the shared code in each bank but don't export its symbols, and carefully craft a linker script, it is certainly possible. <a href="http://forums.nesdev.com/viewtopic.php?p=66995#p66995" class="postlink">These are examples from blargg</a>.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Fri Mar 14, 2014 8:02 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Did someone edit the AOROM page?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />It's simpler than that. I just link each bank separately and combine the resulting binaries into the NES ROM. This way there's no potential conflict between symbols.<br /><br />You don't need to link them together because 32k banks don't need to know about each other's symbols. The only interaction between banks is through the banked calls, which go through switching routine I described which has to be at a fixed location anyway. Similarly, all of my RAM reservations are gathered into a single object that gets linked with all of them.<br /><br /><br />You could link them all together, sure, but then you have to resolve the symbol conflicts. I did this in the past by using .scope around an .include of a shared code file, but once I realized the different banks didn't need to be linked together I abandoned this approach.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Jarhmander</b> [ Fri Mar 14, 2014 9:30 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Did someone edit the AOROM page?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Ok, so each used 32K bank is a memory region in your linker script, and you use the <a href="http://www.cc65.org/doc/ld65-5.html#ss5.3" class="postlink">file attribute</a> to link banks individually to output files and then, in the next pass, you make a NES file out of the generated binary files, with a script or another asm file that <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">incbin</tt>s each bank? Or you forget the file attribute altogether and just generate several differently named bin files? (could easily be done that way with a makefile, and indeed be even easier)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Fri Mar 14, 2014 9:55 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Did someone edit the AOROM page?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />No, I'm not using multiple output files in a single link. Each bank is its own separate link operation. They all use the same linker CFG, which looks like this, currently:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">MEMORY {<br />&nbsp; &nbsp;ZP:&nbsp; &nbsp; &nbsp; &nbsp;start = $00,&nbsp; &nbsp;size = $100,&nbsp; type = rw, file = &quot;&quot;;<br />&nbsp; &nbsp;STACK:&nbsp; &nbsp; start = $100,&nbsp; size = $100,&nbsp; type = rw, file = &quot;&quot;;<br />&nbsp; &nbsp;BSS:&nbsp; &nbsp; &nbsp; start = $200,&nbsp; size = $600,&nbsp; type = rw, file = &quot;&quot;;<br />&nbsp; &nbsp;PRG:&nbsp; &nbsp; &nbsp; start = $8000, size = $8000, type = ro, file = %O, fill = yes, fillval = $EA;<br />}<br /><br />SEGMENTS {<br />&nbsp; &nbsp;ZEROPAGE: load = ZP,&nbsp; &nbsp; &nbsp;type = zp;<br />&nbsp; &nbsp;STACK:&nbsp; &nbsp; load = STACK,&nbsp; type = bss;<br />&nbsp; &nbsp;OAM:&nbsp; &nbsp; &nbsp; load = BSS,&nbsp; &nbsp; type = bss, start = $200;<br />&nbsp; &nbsp;RAM:&nbsp; &nbsp; &nbsp; load = BSS,&nbsp; &nbsp; type = bss;<br />&nbsp; &nbsp;ALIGNED:&nbsp; load = PRG,&nbsp; &nbsp; type = ro,&nbsp; start = $8000, optional = yes;<br />&nbsp; &nbsp;CODE:&nbsp; &nbsp; &nbsp;load = PRG,&nbsp; &nbsp; type = ro;<br />&nbsp; &nbsp;DATA:&nbsp; &nbsp; &nbsp;load = PRG,&nbsp; &nbsp; type = ro;<br />&nbsp; &nbsp;FIXED:&nbsp; &nbsp; load = PRG,&nbsp; &nbsp; type = ro,&nbsp; start = $FE00;<br />&nbsp; &nbsp;VECTORS:&nbsp; load = PRG,&nbsp; &nbsp; type = ro,&nbsp; start = $FFFA;<br />}</div><br />I just concatenate the header and binaries after linking.<br /><br />ALIGNED is a place for a couple of timing critical routines, so I can be sure they don't cross a page.<br /><br />FIXED is the place for the bankswitch routine, though I have also put my common NMI routine here.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Drag</b> [ Sat Mar 15, 2014 12:05 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Did someone edit the AOROM page?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Couldn't you hypothetically extend AxROM to a size as big as 4 MB with an octal latch? You wouldn't even need to move the nametable select bit if you didn't want to break compatibility with smaller AxROM games.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>2</strong> of <strong>4</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>