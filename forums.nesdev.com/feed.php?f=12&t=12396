<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=12&amp;t=12396" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2015-02-18T22:35:43-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=12&amp;t=12396</id>
<entry>
<author><name><![CDATA[psycopathicteen]]></name></author>
<updated>2015-02-18T22:35:43-07:00</updated>
<published>2015-02-18T22:35:43-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12396&amp;p=141504#p141504</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12396&amp;p=141504#p141504"/>
<title type="html"><![CDATA[Re: Documentation on offset-per-tile]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12396&amp;p=141504#p141504"><![CDATA[
<div class="quotetitle">tomaitheous wrote:</div><div class="quotecontent"><br />Now that that's clear, why the hell is Aladdin slowing down for on the snake boss??? That makes even less sense now.<br /></div><br /><br />Capcom can't do anything without slowdown.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4383">psycopathicteen</a> — Wed Feb 18, 2015 10:35 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tomaitheous]]></name></author>
<updated>2015-02-18T16:21:05-07:00</updated>
<published>2015-02-18T16:21:05-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12396&amp;p=141486#p141486</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12396&amp;p=141486#p141486"/>
<title type="html"><![CDATA[Re: Documentation on offset-per-tile]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12396&amp;p=141486#p141486"><![CDATA[
<div class="quotetitle">AWJ wrote:</div><div class="quotecontent"><br />It <em>is</em> a tilemap in most respects; the PPU just ignores the electron beam position when deciding what row of it to read. Other than that, it is affected by all the registers that affect BG3. If you set BG3 to use 16x16 tiles then the scroll columns will have 16-pixel granularity instead of 8-pixel (for all the use that is...). Changing the BG3 scroll registers changes exactly where in VRAM the table gets fetched from (this is how you do raster splits; you can't overwrite the offset table in mid-frame because it's in VRAM and the CPU can't access VRAM outside of VBlank, but you <em>can</em> upload several tables during VBlank and then switch between them by HDMAing to the BG3 scroll registers)<br /></div><br /><br /> Hmm..  I'm trying to visualize this. So the v_offset of BG3 is essentially where the two rows are going to be read from? If you have a v_offset of 0x000, the first two rows of BG are used? If the v_offset was 0x010 (16 pixels), then the next two set of rows would be used instead? So, assuming I understand that correctly, when the BG3 v_offset is changed mid screen to point to next/new/different set of rows - then those values are used instead of the tile offsets as it's drawing the next map line? That's really cool. So you get both; full map tile offset, and just regular column scrolling. Either one, depending on how much resource you want to put into it.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3645">tomaitheous</a> — Wed Feb 18, 2015 4:21 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[AWJ]]></name></author>
<updated>2015-02-18T15:26:48-07:00</updated>
<published>2015-02-18T15:26:48-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12396&amp;p=141482#p141482</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12396&amp;p=141482#p141482"/>
<title type="html"><![CDATA[Re: Documentation on offset-per-tile]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12396&amp;p=141482#p141482"><![CDATA[
<div class="quotetitle">tomaitheous wrote:</div><div class="quotecontent"><br /><div class="quotetitle">AWJ wrote:</div><div class="quotecontent">Tomathious is a bit confused. The &quot;third tilemap&quot; used in offset-per-tile modes isn't a full 32x32 tilemap; it's only 32x2. The first row contains the horizontal offsets for each full column of the other tilemap(s); the second row contains the vertical offsets for each full column.<br /></div><br /><br />For one... <!-- m --><a class="postlink" href="http://wiki.superfamicom.org">http://wiki.superfamicom.org</a><!-- m --> can eat a d*ick. Ughh. And secondly, why can't documents and sites contain a bit of redundancy in their information? It helps to understand stuff. Looking at what you said, and re-looking over the official dev manual, I can see that <em>now</em>. But even the official documents are crappy in this respect. The example format given for the 'map' (which isn't even a map anymore, it's just a small offset scroll table that just happens to share the same base pointer as BG3 for other modes), doesn't indicate that it's limited to just two rows data.</div><br /><br />It <em>is</em> a tilemap in most respects; the PPU just ignores the electron beam position when deciding what row of it to read. Other than that, it is affected by all the registers that affect BG3. If you set BG3 to use 16x16 tiles then the scroll columns will have 16-pixel granularity instead of 8-pixel (for all the use that is...). Changing the BG3 scroll registers changes exactly where in VRAM the table gets fetched from (this is how you do raster splits; you can't overwrite the offset table in mid-frame because it's in VRAM and the CPU can't access VRAM outside of VBlank, but you <em>can</em> upload several tables during VBlank and then switch between them by HDMAing to the BG3 scroll registers)<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3737">AWJ</a> — Wed Feb 18, 2015 3:26 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[ARM9]]></name></author>
<updated>2015-02-18T14:33:22-07:00</updated>
<published>2015-02-18T14:33:22-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12396&amp;p=141477#p141477</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12396&amp;p=141477#p141477"/>
<title type="html"><![CDATA[Re: Documentation on offset-per-tile]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12396&amp;p=141477#p141477"><![CDATA[
<div class="quotetitle">tepples wrote:</div><div class="quotecontent"><br />Are those effects emulated properly in a debugging emulator like NO$SNS? If so, open them and see how they're arranging BG3.<br /></div><br /><a href="http://www.pasteall.org/pic/show.php?id=84143" class="postlink">Nope.png</a>, but you can still watch the map in the vram viewer.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6115">ARM9</a> — Wed Feb 18, 2015 2:33 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Sik]]></name></author>
<updated>2015-02-18T14:22:41-07:00</updated>
<published>2015-02-18T14:22:41-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12396&amp;p=141475#p141475</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12396&amp;p=141475#p141475"/>
<title type="html"><![CDATA[Re: Documentation on offset-per-tile]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12396&amp;p=141475#p141475"><![CDATA[
<div class="quotetitle">AWJ wrote:</div><div class="quotecontent"><br />One weird limitation of the SNES offset-per-tile modes is the offsets never apply to the leftmost visible tile on the screen. &quot;The leftmost visible tile&quot; can mean a full tile or just a 1-pixel sliver, depending on the horizontal scroll, but there's always at least 1 visible pixel that gets generated without any offset. The upshot is that if you want to use offset-per-tile on a horizontally-scrolling screen to draw a waterfall or something, you have to use the clip window to mask off the leftmost 8 pixels of the screen or you'll see visible artifacts. This limitation is probably one reason offset-per-tile was mainly used in non-scrolling scenes such as title screens, boss fights, and block puzzle games.<br /></div><br />The Mega Drive has a similar limitation in it's per-2-cell vertical scrolling mode. The problem is that it has enough entries for 20 columns (the width of the screen), but because of horizontal scrolling it ends up rendering <em>21</em> columns instead. The column at the leftmost is basically column -1, and because it doesn't have an entry in VSRAM it ends up reading the noise is on the bus instead. This is why games would hide the leftmost 16 pixels when using this mode.<br /><br />At least when horizontal scrolling wasn't used (common in shmups) this issue wouldn't come up since column -1 was completely offscreen. I guess that was the original intention of the mode.<br /><br /><div class="quotetitle">Espozo wrote:</div><div class="quotecontent"><br />But you can only vertically scroll every 16 pixels. Although it is still useful for making things like blocks move up and down, you really cannot fake rotation beyond a tilt. Basically, although the MD has a higher resolution, the SNES can vertically scroll about twice as much, which is actually pretty useful for fake rotation. See the background on Star Fox.<br /></div><br />Honestly what the SNES has isn't that useful beyond tilts either, and yes I'd argue that what Star Fox has is just a tilt. If you want to fake rotation more feasibly you pretty much need pixel granurality (something which wasn't possible in either case due to VRAM bandwidth issues).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4526">Sik</a> — Wed Feb 18, 2015 2:22 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2015-02-18T14:10:38-07:00</updated>
<published>2015-02-18T14:10:38-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12396&amp;p=141474#p141474</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12396&amp;p=141474#p141474"/>
<title type="html"><![CDATA[Re: Documentation on offset-per-tile]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12396&amp;p=141474#p141474"><![CDATA[
Are those effects emulated properly in a debugging emulator like NO$SNS? If so, open them and see how they're arranging BG3.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Wed Feb 18, 2015 2:10 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tomaitheous]]></name></author>
<updated>2015-02-18T13:59:01-07:00</updated>
<published>2015-02-18T13:59:01-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12396&amp;p=141473#p141473</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12396&amp;p=141473#p141473"/>
<title type="html"><![CDATA[Re: Documentation on offset-per-tile]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12396&amp;p=141473#p141473"><![CDATA[
<div class="quotetitle">AWJ wrote:</div><div class="quotecontent"><br />Tomathious is a bit confused. The &quot;third tilemap&quot; used in offset-per-tile modes isn't a full 32x32 tilemap; it's only 32x2. The first row contains the horizontal offsets for each full column of the other tilemap(s); the second row contains the vertical offsets for each full column.<br /></div><br /><br />For one... <!-- m --><a class="postlink" href="http://wiki.superfamicom.org">http://wiki.superfamicom.org</a><!-- m --> can eat a d*ick. Ughh. And secondly, why can't documents and sites contain a bit of redundancy in their information? It helps to understand stuff. Looking at what you said, and re-looking over the official dev manual, I can see that <em>now</em>. But even the official documents are crappy in this respect. The example format given for the 'map' (which isn't even a map anymore, it's just a small offset scroll table that just happens to share the same base pointer as BG3 for other modes), doesn't indicate that it's limited to just two rows data. <br /><br /> Now that that's clear, why the hell is Aladdin slowing down for on the snake boss??? That makes even less sense now.<br /><br />Edit:<br /><br /> Actually, way before snes wiki site, there was an effect in Chrono Trigger that supposedly offset <em>every </em>tile for some weird transition effect (part of a cinema.. a ship?). I'm not sure who said it, but given the interpretation of the SFX dev manual - the claim made sense. Now I'm curious how that effect was pulled off.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3645">tomaitheous</a> — Wed Feb 18, 2015 1:59 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Stef]]></name></author>
<updated>2015-02-18T07:25:17-07:00</updated>
<published>2015-02-18T07:25:17-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12396&amp;p=141453#p141453</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12396&amp;p=141453#p141453"/>
<title type="html"><![CDATA[Re: Documentation on offset-per-tile]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12396&amp;p=141453#p141453"><![CDATA[
Yeah indeed the column scrolling step is finer (1 tile instead of 2 tiles) on SNES but apparently it is not as convenient to setup than the MD.<br />Also just for the comparison :<br />SNES : <!-- m --><a class="postlink" href="https://www.youtube.com/watch?v=A7TF5evojYA">https://www.youtube.com/watch?v=A7TF5evojYA</a><!-- m --><br />MD : <!-- m --><a class="postlink" href="https://www.youtube.com/watch?v=YUZpF2JLF4s">https://www.youtube.com/watch?v=YUZpF2JLF4s</a><!-- m --><br /><br />You have higher inclination on SNES indeed, does it really matter ? not so much i think <img src="http://forums.nesdev.com/images/smilies/icon_wink.gif" alt=";)" title="Wink" /><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6058">Stef</a> — Wed Feb 18, 2015 7:25 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Espozo]]></name></author>
<updated>2015-02-18T06:22:17-07:00</updated>
<published>2015-02-18T06:22:17-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12396&amp;p=141450#p141450</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12396&amp;p=141450#p141450"/>
<title type="html"><![CDATA[Re: Documentation on offset-per-tile]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12396&amp;p=141450#p141450"><![CDATA[
<div class="quotetitle">Stef wrote:</div><div class="quotecontent"><br />you finally end with same limitations : 2 plans - 4bpp.And the MD has the advantage of the higher resolution :p<br /></div><br />But you can only vertically scroll every 16 pixels. Although it is still useful for making things like blocks move up and down, you really cannot fake rotation beyond a tilt. Basically, although the MD has a higher resolution, the SNES can vertically scroll about twice as much, which is actually pretty useful for fake rotation. See the background on Star Fox.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6683">Espozo</a> — Wed Feb 18, 2015 6:22 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Stef]]></name></author>
<updated>2015-02-18T06:05:49-07:00</updated>
<published>2015-02-18T06:05:49-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12396&amp;p=141449#p141449</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12396&amp;p=141449#p141449"/>
<title type="html"><![CDATA[Re: Documentation on offset-per-tile]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12396&amp;p=141449#p141449"><![CDATA[
<div class="quotetitle">AWJ wrote:</div><div class="quotecontent"><br />Tomathious is a bit confused. The &quot;third tilemap&quot; used in offset-per-tile modes isn't a full 32x32 tilemap; it's only 32x2. The first row contains the horizontal offsets for each full column of the other tilemap(s); the second row contains the vertical offsets for each full column. Except in mode 4, where only one row is used and it contains <em>either</em> a horizontal <em>or</em> a vertical offset for that column, depending on bit 15 (this is because of VRAM bandwidth limitations--check my recent post history for a post where I explain how the VRAM bandwidth is &quot;budgeted&quot; in each mode)<br /></div><br /><br />To be honest i always found the offset per tile mode pretty confusing... and still i don't really get what is the real purpose of this mode O_o ? It does look powerful but has some constraints at same time making it complex and not as useful it might be.<br />Also that is the funny thing with the SNES, every graphics mode are actually limited by the VRAM bandwidth and when you have more somewhere (4 plans) you necessary have less elsewhere (2bpp mode). Actually in similar conditions than the MD (which does have column scrolling) you finally end with same limitations : 2 plans - 4bpp.<br />And the MD has the advantage of the higher resolution :p<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />One weird limitation of the SNES offset-per-tile modes is the offsets never apply to the leftmost visible tile on the screen. &quot;The leftmost visible tile&quot; can mean a full tile or just a 1-pixel sliver, depending on the horizontal scroll, but there's always at least 1 visible pixel that gets generated without any offset. The upshot is that if you want to use offset-per-tile on a horizontally-scrolling screen to draw a waterfall or something, you have to use the clip window to mask off the leftmost 8 pixels of the screen or you'll see visible artifacts. This limitation is probably one reason offset-per-tile was mainly used in non-scrolling scenes such as title screens, boss fights, and block puzzle games.<br /></div><br /><br />Hehe, fun to see it shares a &quot;similar bug&quot; with the MD : You have the exact same problem with the column scrolling on the MD, first column scrolling is wrong as there is not enough VSRAM to store the extra column offset depending the current H scroll. So exactly for the same reason as the SNES you need to hide the first column during column scrolling. I believe later MD revision fixed the problem: the MD2 seems to fix the column 0 offset to 0 (where it was somehow randomly picked on MD1) and MD3 even added an extra VSRAM entry for it (really not sure about it but i read it somewhere).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6058">Stef</a> — Wed Feb 18, 2015 6:05 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[bazz]]></name></author>
<updated>2015-02-18T05:50:27-07:00</updated>
<published>2015-02-18T05:50:27-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12396&amp;p=141448#p141448</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12396&amp;p=141448#p141448"/>
<title type="html"><![CDATA[Re: Documentation on offset-per-tile]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12396&amp;p=141448#p141448"><![CDATA[
Whenever I'd read doc on Offset-per-tile it makes my head hurt.. Can anyone make sense of it? Layman's terms.. A visual tutorial or even video demonstrating it would be so key <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" /><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4992">bazz</a> — Wed Feb 18, 2015 5:50 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[AWJ]]></name></author>
<updated>2015-02-18T02:21:47-07:00</updated>
<published>2015-02-18T02:21:47-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12396&amp;p=141444#p141444</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12396&amp;p=141444#p141444"/>
<title type="html"><![CDATA[Re: Documentation on offset-per-tile]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12396&amp;p=141444#p141444"><![CDATA[
<div class="quotetitle">psycopathicteen wrote:</div><div class="quotecontent"><br /><a href="http://www.sega-16.com/forum/showthread.php?18434-Comparison-of-4th-generation-(-quot-8-16-bit-quot-)-system-hardware/page78" class="postlink">http://www.sega-16.com/forum/showthread.php?18434-Comparison-of-4th-generation-(-quot-8-16-bit-quot-)-system-hardware/page78</a><br /><br />In this thread Tomathious says that offset-per-tile mode requires every tile to be individually scrolled, but that is incorrect because I've done collumn-scrolling before, and I didn't need to scroll every single tile in order to do it.  There were a few mysterious hardware quirks, such as you have to write to the second row of tiles in BG3's tile map, and bit-9 has to be set for some reason.<br /></div><br /><br />Tomathious is a bit confused. The &quot;third tilemap&quot; used in offset-per-tile modes isn't a full 32x32 tilemap; it's only 32x2. The first row contains the horizontal offsets for each full column of the other tilemap(s); the second row contains the vertical offsets for each full column. Except in mode 4, where only one row is used and it contains <em>either</em> a horizontal <em>or</em> a vertical offset for that column, depending on bit 15 (this is because of VRAM bandwidth limitations--check my recent post history for a post where I explain how the VRAM bandwidth is &quot;budgeted&quot; in each mode)<br /><br />One weird limitation of the SNES offset-per-tile modes is the offsets never apply to the leftmost visible tile on the screen. &quot;The leftmost visible tile&quot; can mean a full tile or just a 1-pixel sliver, depending on the horizontal scroll, but there's always at least 1 visible pixel that gets generated without any offset. The upshot is that if you want to use offset-per-tile on a horizontally-scrolling screen to draw a waterfall or something, you have to use the clip window to mask off the leftmost 8 pixels of the screen or you'll see visible artifacts. This limitation is probably one reason offset-per-tile was mainly used in non-scrolling scenes such as title screens, boss fights, and block puzzle games.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3737">AWJ</a> — Wed Feb 18, 2015 2:21 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2015-02-18T01:46:38-07:00</updated>
<published>2015-02-18T01:46:38-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12396&amp;p=141443#p141443</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12396&amp;p=141443#p141443"/>
<title type="html"><![CDATA[Re: Documentation on offset-per-tile]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12396&amp;p=141443#p141443"><![CDATA[
The offset per tile is perfectly doccumented in Anomies' doc, and while it is confusing when using horizontal offset-per-tile, I think the vertical offset per tile is very clear.<br /><br />Normally OPT is column wise, but by changing BG2's vertical scrolling you could make it tile-wise or even less. Whenever BG2's scroll is changed, the first (or is it second?) row that would be displayed if BG2 was displayed determines the OPT.<br /><br />The enable bits should just be set, if they are clear then the normal scrolling applies. If the normal file horizontal scrolling is not a multiple of 8 (i.e. whole tile), the first pixels displays part of a tile using normal scrolling, and then OPT is used starting from the next tile.<br /><br />I really recommend restricting to vertical OPT first, because horizontal is extremely confusing, although it makes sense it's hard to keep track what is going on - my understanding is that it can only be used to re-arrange tiles in a row rather than doing actual scrolling.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Wed Feb 18, 2015 1:46 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[psycopathicteen]]></name></author>
<updated>2015-02-17T22:33:30-07:00</updated>
<published>2015-02-17T22:33:30-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12396&amp;p=141433#p141433</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12396&amp;p=141433#p141433"/>
<title type="html"><![CDATA[Re: Documentation on offset-per-tile]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12396&amp;p=141433#p141433"><![CDATA[
It is briefly mentioned in the BG layer section of wiki.superfamicom.org, but it is really unclear.  There is some C++ algorithm that I don't understand, but I did notice something about if $2000 is set, apply to BG1, if $4000 is set, apply to BG2.  Maybe it wasn't bit 9 then, I probably misremembered it as $0200, since I haven't used it in a while.  It doesn't mention anything about columns versus tiles.  Maybe it keeps the tile scroll value down until it hits another tile with bit 13 set.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4383">psycopathicteen</a> — Tue Feb 17, 2015 10:33 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tomaitheous]]></name></author>
<updated>2015-02-17T20:50:37-07:00</updated>
<published>2015-02-17T20:50:37-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12396&amp;p=141417#p141417</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12396&amp;p=141417#p141417"/>
<title type="html"><![CDATA[Re: Documentation on offset-per-tile]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12396&amp;p=141417#p141417"><![CDATA[
Jump in the thread and give your opinion, or correction, or whatever. It's not an exclusive club, kiddos  <img src="http://forums.nesdev.com/images/smilies/icon_razz.gif" alt=":P" title="Razz" /> <br /><br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />but that is incorrect because I've done collumn-scrolling before, and I didn't need to scroll every single tile in order to do it. There were a few mysterious hardware quirks, such as you have to write to the second row of tiles in BG3's tile map, and bit-9 has to be set for some reason.<br /></div><br /> Huh? Is this documented? <br /><br /><div class="quotetitle">93143 wrote:</div><div class="quotecontent"><br />This stuff makes perfect sense<strong> if you think of sprite tables as 16x16-tile squares</strong>.  It's Famicom design heritage, presumably intended to make OBJ easy to mock up on a sheet of graph paper.<br /></div><br /><br /> You know what.. that actually makes sense in that context: if you view the entire bank as a grid of 16x16 tiles. But it wasn't 1983 when the SFC came out - who was using sheets of paper for development or sprite layout??? Doesn't seem very optimal layout for dma'ing or such. Either way, it definitely isn't a clean design like the PCE or MD. Convoluted was a little strong to describe it (I reserve that for other aspects of the SNES, sPPU, etc), so &quot;strange&quot; seemed appropriate.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3645">tomaitheous</a> — Tue Feb 17, 2015 8:50 pm</p><hr />
]]></content>
</entry>
</feed>