<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=5&amp;t=8610" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2012-03-02T22:23:22-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=5&amp;t=8610</id>
<entry>
<author><name><![CDATA[Memblers]]></name></author>
<updated>2012-03-02T22:23:22-07:00</updated>
<published>2012-03-02T22:23:22-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8610&amp;p=90837#p90837</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8610&amp;p=90837#p90837"/>
<title type="html"><![CDATA[[Request] (Really portable/tiny) USB SRAM programmer]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8610&amp;p=90837#p90837"><![CDATA[
<div class="quotetitle">Karatorian wrote:</div><div class="quotecontent"><br /><div class="quotetitle">infiniteneslives wrote:</div><div class="quotecontent">How are they not available?<br /></div><br />Sorry, I wrote MPUs when I mean MCUs. Mouser actually has some of the 65C816S based W65C265S chips. But the thing is, they're mask ROM devices. I have no idea what's in the ROM of the chips they've got for sale, but it's probably not what I'd want. Every other 65x MCU I've been able to find has either mask ROM or is OTP. Know anyone with a semi fab?</div><br /><br />According to WDC's site it is "8192 x 8 Embedded Monitor ROM".  I guess that could be useful, but it sounds like external memory is needed to do anything beyond the 576 bytes of on-chip SRAM.<br /><br />I don't think you need a chip fab to make a good replacement, actually that's part of one of my future projects.  I would just write a 6502 interpreter/emulator for a different CPU.  A few years ago I started to code one for the Propeller MCU, but I axed it because I switched over to using the (5V-compatible) PIC32 instead (and totally re-imagining the entire project, heh).<br /><br />Propeller version could have been pretty funny.. it has to fit in 2kB, but then you can have 8 of them running parallel (with 32kB shared RAM among them, and a smaller amount of RAM for the individual 6502's stack and stuff).  The code I have for it is just a skeleton, but looks like I was on track to use about 1024 bytes for data which would leave another 1024 for code (so 256 32-bit instructions, self-modifying code of course).<br /><br />Doing it on the PIC32 sounds less exciting, but will be more useful for my purposes.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=10">Memblers</a> — Fri Mar 02, 2012 10:23 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Karatorian]]></name></author>
<updated>2012-03-02T21:23:04-07:00</updated>
<published>2012-03-02T21:23:04-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8610&amp;p=90831#p90831</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8610&amp;p=90831#p90831"/>
<title type="html"><![CDATA[[Request] (Really portable/tiny) USB SRAM programmer]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8610&amp;p=90831#p90831"><![CDATA[
<div class="quotetitle">infiniteneslives wrote:</div><div class="quotecontent"><br />How are they not available?<br /></div><br />Sorry, I wrote MPUs when I mean MCUs. Mouser actually has some of the 65C816S based W65C265S chips. But the thing is, they're mask ROM devices. I have no idea what's in the ROM of the chips they've got for sale, but it's probably not what I'd want. Every other 65x MCU I've been able to find has either mask ROM or is OTP. Know anyone with a semi fab?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3412">Karatorian</a> — Fri Mar 02, 2012 9:23 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[infiniteneslives]]></name></author>
<updated>2012-03-02T21:10:24-07:00</updated>
<published>2012-03-02T21:10:24-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8610&amp;p=90830#p90830</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8610&amp;p=90830#p90830"/>
<title type="html"><![CDATA[[Request] (Really portable/tiny) USB SRAM programmer]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8610&amp;p=90830#p90830"><![CDATA[
<div class="quotetitle">Karatorian wrote:</div><div class="quotecontent"><br />The Arduino I'm using has a ATmega2560. It also has an (optional) external memory interface. While reading the datasheet, I noticed it and figured it would make writing the memory easier than my current scheme using GPIOs. I haven't bothered to see which pins the Arduino's got it all mapped to though. Hopefully it's something usable.<br /><br />Do you write your AVR code in assembler or C?<br /></div><br />I would imagine that it is available on the arduino but you'd have to check obviously.<br /><br />I write in C for the most part.  I've done some projects in assembly in the past for school projects.  But for personal projects there is rarely value in using assembly.<br /><br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />I wish the Western Design 6502 MPUs where actually available. Or something similar from someone else. If I could get a 6502 core with internal SRAM, Flash, and some GPIOs, I'd be all over it.<br /></div><br /><br />How are they not available?  <a href="http://www.jameco.com/webapp/wcs/stores/servlet/StoreCatalogDrillDownView?langId=-1&amp;storeId=10001&amp;catalogId=10001&amp;freeText=western%20design&amp;search_type=jamecoall" class="postlink">http://www.jameco.com/webapp/wcs/stores/servlet/StoreCatalogDrillDownView?langId=-1&amp;storeId=10001&amp;catalogId=10001&amp;freeText=western%20design&amp;search_type=jamecoall</a><br /><br />Or are you looking for some specific version Jameco doesn't carry?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4832">infiniteneslives</a> — Fri Mar 02, 2012 9:10 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Karatorian]]></name></author>
<updated>2012-03-02T19:54:34-07:00</updated>
<published>2012-03-02T19:54:34-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8610&amp;p=90822#p90822</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8610&amp;p=90822#p90822"/>
<title type="html"><![CDATA[[Request] (Really portable/tiny) USB SRAM programmer]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8610&amp;p=90822#p90822"><![CDATA[
The Arduino I'm using has a ATmega2560. It also has an (optional) external memory interface. While reading the datasheet, I noticed it and figured it would make writing the memory easier than my current scheme using GPIOs. I haven't bothered to see which pins the Arduino's got it all mapped to though. Hopefully it's something usable.<br /><br />Do you write your AVR code in assembler or C?<br /><br />I wish the Western Design 6502 MPUs where actually available. Or something similar from someone else. If I could get a 6502 core with internal SRAM, Flash, and some GPIOs, I'd be all over it.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3412">Karatorian</a> — Fri Mar 02, 2012 7:54 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[infiniteneslives]]></name></author>
<updated>2012-03-01T11:52:34-07:00</updated>
<published>2012-03-01T11:52:34-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8610&amp;p=90771#p90771</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8610&amp;p=90771#p90771"/>
<title type="html"><![CDATA[[Request] (Really portable/tiny) USB SRAM programmer]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8610&amp;p=90771#p90771"><![CDATA[
I'm working on making a cleaner more finished version of this using the atmega 8515.  It's a 40pin DIP and already has built in external memory interface and can address 64KB by adding a 8x Flipflop.<br /><br />That and the ports aren't all hacked up and incomplete as with the atmega8 and similar  parts.  So the code is simpler since you can write to the data bus in one instruction vice 3-4.<br /><br />Not sure how I'm going to publish the design right now but I'll make it available on here at least.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4832">infiniteneslives</a> — Thu Mar 01, 2012 11:52 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Karatorian]]></name></author>
<updated>2012-03-01T11:45:20-07:00</updated>
<published>2012-03-01T11:45:20-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8610&amp;p=90770#p90770</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8610&amp;p=90770#p90770"/>
<title type="html"><![CDATA[[Request] (Really portable/tiny) USB SRAM programmer]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8610&amp;p=90770#p90770"><![CDATA[
I've recently been experimenting with programming some EEPROMs using an Arduino and a breadboard. So something based on an AVR could definitely work. Although using a smaller MPU and a shift register is probably the better method.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3412">Karatorian</a> — Thu Mar 01, 2012 11:45 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[infiniteneslives]]></name></author>
<updated>2012-02-12T22:11:45-07:00</updated>
<published>2012-02-12T22:11:45-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8610&amp;p=89885#p89885</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8610&amp;p=89885#p89885"/>
<title type="html"><![CDATA[[Request] (Really portable/tiny) USB SRAM programmer]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8610&amp;p=89885#p89885"><![CDATA[
<div class="quotetitle">aliman wrote:</div><div class="quotecontent"><br />thx, this is exactly what i needed^^<br />but is it possible to get a picture of your schematic that is more clearly because it is hard to read some numbers and parts.<br />and is it possible to use 62256 without modification of the program or the schematic?<br /></div><br /><br />That's all I got... Take a look at the original schematic of the EEprog I linked to.  I'll strongly caution again, this is no where close to polished...  I'd like it to be as I want to make my own programmer with it for all the memories I'd like to use, but it's a low priority.  Things will NOT work as I've posted, you'd have to work on some things for yourself really.<br /><br />As for components the D- (white) pull up resistor should really be 2.2Kohm(even though it says 1.5K), the series usb resistors are 68ohm, and the zeners are 3.6v 500mA or less diodes.  Any large power cap should do.  I used a 16Mhz xtal but you could also go with 12Mhz.  There should also be ~20pF caps on the two xtal pins going to ground.  The flipflop is a 54HC374 8x flipflop.  The design in the schematic supports up to 16KB, but I modded the schematic from what you see here and put A5 on the flipflop.  That's how the code is written, as is, it ONLY works with 8KB since that's all I cared about for this proof of concept.  <br /><br />If you reaproriated the LED pin as A6 and shifted all the Flipflop addresses by one you could do 32KB for your chip.  I only had one pin for /OE and /CE in the schematic, just hardwire is as you like was my thought.  You could even ditch the /WE pin and just hardwire the SRAM's pin to gnd or put a switch in there.  If you did all that you could do 64KB.  To go beyond that without disabling the reset on the AVR you'd have to add a flip flop or just program one page at a time or something.  Just adding another set of FFs would add support for 32Mb (4MB).  <br /><br />Keep in mind you not only have to fix the schematic and mcu code but also the host application because the pages sizes aren't setup for this stuff.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4832">infiniteneslives</a> — Sun Feb 12, 2012 10:11 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[aliman]]></name></author>
<updated>2012-02-12T14:42:23-07:00</updated>
<published>2012-02-12T14:42:23-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8610&amp;p=89870#p89870</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8610&amp;p=89870#p89870"/>
<title type="html"><![CDATA[[Request] (Really portable/tiny) USB SRAM programmer]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8610&amp;p=89870#p89870"><![CDATA[
<div class="quotetitle">infiniteneslives wrote:</div><div class="quotecontent"><br />I made a pretty small one using an atmega8 and a 8x flipflop to test things out for the NESDEV1.  It really doesn't have a limit to how big the memories can be if you just keep adding flipflops to IO extend.  I just adapted this I2C programmer to work with SRAM:  <a href="http://xldrx.com/xl/EE-Prog.html" class="postlink">http://xldrx.com/xl/EE-Prog.html</a><br /><br />Here's the schematic basically:  <br /><img src="http://dl.dropbox.com/u/18341918/parallel%20programmer%20circuit.jpg" alt="Image" /><br /><br />Code is here: <a href="http://dl.dropbox.com/u/18341918/AVR%20atmega%208.zip" class="postlink">http://dl.dropbox.com/u/18341918/AVR%20atmega%208.zip</a><br /><br />The code is pretty messy as I gunked it up when I was debugging, and then didn't clean things up until I adapted it to the kazzo.  I did try to comment it as much as I could though.  But it's a good starting point if you don't have much experience with it.  Don't count on it working as is you'd have to tinker with it a bit and clean things up.  You'll also have to modify the host code to support things other than 8KB I just moved A5 in the schematic around and hardcoded it to 8KB.  Also reading has not been implemented.<br /><br />I put a video of it in action too:  <a href="http://www.youtube.com/watch?v=jYlYKQpxwA4&amp;feature=plcp&amp;context=C3256575UDOEgsToPDskJtYmVeTlojgob9G0KcgyfO" class="postlink">http://www.youtube.com/watch?v=jYlYKQpxwA4&amp;feature=plcp&amp;context=C3256575UDOEgsToPDskJtYmVeTlojgob9G0KcgyfO</a><br /></div><br />thx, this is exactly what i needed^^<br />but is it possible to get a picture of your schematic that is more clearly because it is hard to read some numbers and parts.<br />and is it possible to use 62256 without modification of the program or the schematic?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5166">aliman</a> — Sun Feb 12, 2012 2:42 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[infiniteneslives]]></name></author>
<updated>2012-02-12T12:51:16-07:00</updated>
<published>2012-02-12T12:51:16-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8610&amp;p=89867#p89867</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8610&amp;p=89867#p89867"/>
<title type="html"><![CDATA[[Request] (Really portable/tiny) USB SRAM programmer]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8610&amp;p=89867#p89867"><![CDATA[
I made a pretty small one using an atmega8 and a 8x flipflop to test things out for the NESDEV1.  It really doesn't have a limit to how big the memories can be if you just keep adding flipflops to IO extend.  I just adapted this I2C programmer to work with SRAM:  <a href="http://xldrx.com/xl/EE-Prog.html" class="postlink">http://xldrx.com/xl/EE-Prog.html</a><br /><br />Here's the schematic basically:  <br /><img src="http://dl.dropbox.com/u/18341918/parallel%20programmer%20circuit.jpg" alt="Image" /><br /><br />Code is here: <a href="http://dl.dropbox.com/u/18341918/AVR%20atmega%208.zip" class="postlink">http://dl.dropbox.com/u/18341918/AVR%20atmega%208.zip</a><br /><br />The code is pretty messy as I gunked it up when I was debugging, and then didn't clean things up until I adapted it to the kazzo.  I did try to comment it as much as I could though.  But it's a good starting point if you don't have much experience with it.  Don't count on it working as is you'd have to tinker with it a bit and clean things up.  You'll also have to modify the host code to support things other than 8KB I just moved A5 in the schematic around and hardcoded it to 8KB.  Also reading has not been implemented.<br /><br />I put a video of it in action too:  <a href="http://www.youtube.com/watch?v=jYlYKQpxwA4&amp;feature=plcp&amp;context=C3256575UDOEgsToPDskJtYmVeTlojgob9G0KcgyfO" class="postlink">http://www.youtube.com/watch?v=jYlYKQpxwA4&amp;feature=plcp&amp;context=C3256575UDOEgsToPDskJtYmVeTlojgob9G0KcgyfO</a><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4832">infiniteneslives</a> — Sun Feb 12, 2012 12:51 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[3gengames]]></name></author>
<updated>2012-02-12T08:47:56-07:00</updated>
<published>2012-02-12T08:47:56-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8610&amp;p=89866#p89866</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8610&amp;p=89866#p89866"/>
<title type="html"><![CDATA[[Request] (Really portable/tiny) USB SRAM programmer]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8610&amp;p=89866#p89866"><![CDATA[
PIC project? You'd need a medium sized pick though. What the heck would you program them with anyway?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4311">3gengames</a> — Sun Feb 12, 2012 8:47 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[aliman]]></name></author>
<updated>2012-02-12T02:20:57-07:00</updated>
<published>2012-02-12T02:20:57-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8610&amp;p=89861#p89861</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8610&amp;p=89861#p89861"/>
<title type="html"><![CDATA[[Request] (Really portable/tiny) USB SRAM programmer]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8610&amp;p=89861#p89861"><![CDATA[
Hi Guys,<br />I need some help:<br />I would like to build my own (really portable/tiny) USB SRAM programmer,<br />which can at least program 6264 SRAMs, but I'm not talented enough (or have got any knowledge)<br />on how something like this is realizable.<br />So, I hope some of you who are familiar with this topic can help me out.<br />Thanks in advance^^<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5166">aliman</a> — Sun Feb 12, 2012 2:20 am</p><hr />
]]></content>
</entry>
</feed>