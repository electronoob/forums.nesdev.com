<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Eighth - a Forth for NES dev (formerly Bytecode Interpreter)</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Eighth - a Forth for NES dev (formerly Bytecode Interpreter)</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=10371">http://forums.nesdev.com/viewtopic.php?f=2&amp;t=10371</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>2</strong> of <strong>3</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Wed Aug 21, 2013 10:18 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Bytecode Interpreter</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">sonder wrote:</div><div class="quotecontent">It's starting to get to the point of frustration - come up with a great idea, bang it out, then reality hits and after all the work that goes into debugging it, it yields only an incremental improvement.  Bleh.  Well, what's done is done and now it's slightly faster.</div><br /><br /><div class="quotetitle">bytecode_zp_y_dtc.s wrote:</div><div class="quotecontent">; the approach from now on is to make this the primary coding environment and<br />;  have an alternate 8-bit interpreter that supports a subset of functionality (and built on much of the main VM)<br />;  and whose purpose is primarily to conserve space over speed.  (map data, simple scripts)</div><br /><br />Seems familiar. There is a whole space of alternate implementations, each trading different things off, and each more appropriate for some use. If you go full-speed down one, you might see another nearby one that was better for your uses. Or you want to take two or more approaches as far as they go, just to have both around (as the comment above indicates). It's one of the things that sometimes derails my efforts, wanting to explore this implementation space, have every one fleshed out, and be able to reach my original goal. I usually have to choose between exploration and focusing on the concrete task and what's necessary to reach it, and possibly then improve on it.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>sonder</b> [ Wed Aug 21, 2013 10:31 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Bytecode Interpreter</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">blargg wrote:</div><div class="quotecontent">Seems familiar. There is a whole space of alternate implementations, each trading different things off, and each more appropriate for some use. If you go full-speed down one, you might see another nearby one that was better for your uses. Or you want to take two or more approaches as far as they go, just to have both around (as the comment above indicates). It's one of the things that sometimes derails my efforts, wanting to explore this implementation space, have every one fleshed out, and be able to reach my original goal. I usually have to choose between exploration and focusing on the concrete task and what's necessary to reach it, and possibly then improve on it.</div><br /><br />Here's the cherry on top.  The fastest intepreter is no interpreter at all - I realized that recently.  What I really wanted was just to code my game in Forth, not to perform a technical magic trick by stuffing it into NROM.   I have 128KB now to splash around in, so I could have used macros and jsr's.  Because it should be 99% source-compatible it can be done anytime.  But there has been enough work done on this for a first game, and it would be a big risk on time to upgrade now.  I didn't know 6502 very well before I started, now I know half the instruction set's sizes and cycle times.  I'm just glad that I decided on basically avoiding writing asm as much as possible.   Doing the Eighth code &quot;by hand&quot; was hellish, but I was putting off writing the compiler because I thought that was going to be worse but it wasn't at all, in fact it was exhilarating.  I just needed a good nap.  Of course, I think &quot;bytecode interpreter&quot; in the pure sense will now be implemented in Eighth and multiple ones tailored to specific applications, similar to the manner of SWEET16 with its embedded register # operands.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>sonder</b> [ Fri Aug 23, 2013 9:17 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Eighth - a Forth for NES dev (formerly Bytecode Interpre</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Got a large amount of code compiling - and achieved buggy-ass collision detection.  Speed is... OK.  I was converting some old Forth code, caught a lot of bugs in the compiler actually.  You really have to be conscious of how efficient your code is.  And of course there are no divides, multiplies, or modulus.  <br /><br />Through this process, I realized that in its current state, without interactive testing it's really only an incremental improvement over C/asm.  There needs to be interactive testing - a pillar of Forth.  Therefore I'm going to write a simulator - basically a program in SwiftForth that lets you compile Eighth programs in &quot;simulator mode&quot; and basically it tries to create the 8-bit environment of the 6502 so you can test out the logic of your various subroutines by typing them into SwiftForth's commandline window and observing the effect on variables and the data stack.  It won't be able to help you with debugging asm words but those are relatively few and short (and you can step through them in a debugger like Nintendulator's or FCEUX).<br /><br />edit: alternatively I was thinking to look into Nintendulator's Lua scripting and implement a dialog to interact with a ROM's compiled Eighth code and asm words using the symbol file.  then you could debug asm words without having to rewrite them in Eighth or Forth so they can work in the simulator.  but then it would require Nintendulator - I don't think that's unfair though.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Fri Aug 23, 2013 1:21 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Eighth - a Forth for NES dev (formerly Bytecode Interpre</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">sonder wrote:</div><div class="quotecontent">edit: alternatively I was thinking to look into Nintendulator's Lua scripting and implement a dialog to interact with a ROM's compiled Eighth code and asm words using the symbol file.  then you could debug asm words without having to rewrite them in Eighth or Forth so they can work in the simulator.  but then it would require Nintendulator - I don't think that's unfair though.</div><br />You'd probably be among the first to use the Lua UI features in NintendulatorDX. They haven't been tested that much so if you decide to do this let me know how it goes!

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>sonder</b> [ Fri Aug 23, 2013 1:30 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Eighth - a Forth for NES dev (formerly Bytecode Interpre</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">thefox wrote:</div><div class="quotecontent"><div class="quotetitle">sonder wrote:</div><div class="quotecontent">edit: alternatively I was thinking to look into Nintendulator's Lua scripting and implement a dialog to interact with a ROM's compiled Eighth code and asm words using the symbol file.  then you could debug asm words without having to rewrite them in Eighth or Forth so they can work in the simulator.  but then it would require Nintendulator - I don't think that's unfair though.</div><br />You'd probably be among the first to use the Lua UI features in NintendulatorDX. They haven't been tested that much so if you decide to do this let me know how it goes!</div><br /><br />I read the docs and it seems promising.  I'm thrilled that you're interested.  The first hurdle is figuring out IUP.  I need a dialog box with a multiline text out, and a text input.   And one more textfield for the data stack.<br /><br />I am leaning in this direction because if it works it is guaranteed to be a reliable way to verify code, whereas a simulator would have some annoying limitations.  I have a good idea of how it will work.  <br /><br />However because I'm using asm6 I am going to have to either port to cc65 (dreading that) or add the debugging file export support to asm6.  It's a shame; I should've stuck with cc65. (though -/+ labels and not dealing with segments have been nice).  I emailed you about it already.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Fri Aug 23, 2013 2:22 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Eighth - a Forth for NES dev (formerly Bytecode Interpre</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">sonder wrote:</div><div class="quotecontent">but then it would require Nintendulator - I don't think that's unfair though.</div><br />It'd be fair enough if Wine were improved to run Nintendulator. Last time I checked, Nintendulator required Genuine Windows. FCEUX, on the other hand, works on GNU/Linux in either Wine or SDL.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>sonder</b> [ Fri Aug 23, 2013 2:32 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Eighth - a Forth for NES dev (formerly Bytecode Interpre</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent"><div class="quotetitle">sonder wrote:</div><div class="quotecontent">but then it would require Nintendulator - I don't think that's unfair though.</div><br />It'd be fair enough if Wine were improved to run Nintendulator. Last time I checked, Nintendulator required Genuine Windows. FCEUX, on the other hand, works on GNU/Linux in either Wine or SDL.</div><br /><br />If FCEUX added Lua scripting the interactive commandline could in theory support that emulator too.  You're only losing interactivity without, the compiler is a separate program.  It may need modification for the Linux version of SwiftForth though.<br /><br />I kind of have to do it this way anyway; I painted myself into a bit of a corner and this is the escape plan.  The simulator idea is not good compared to this.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Fri Aug 23, 2013 3:27 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Eighth - a Forth for NES dev (formerly Bytecode Interpre</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">sonder wrote:</div><div class="quotecontent">If FCEUX added Lua scripting</div><br />Fortunately, <a href="http://www.fceux.com/web/help/fceux.html?LuaScripting.html" class="postlink">if true</a>.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>pops</b> [ Sat Aug 24, 2013 9:20 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Eighth - a Forth for NES dev (formerly Bytecode Interpre</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Do either of these emulators have the ability to call a lua script when the program writes a given value to memory?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bavi_H</b> [ Sat Aug 24, 2013 11:06 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Eighth - a Forth for NES dev (formerly Bytecode Interpre</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">pops wrote:</div><div class="quotecontent">Do either of these emulators have the ability to call a lua script when the program writes a given value to memory?</div><br />In FCEUX, your Lua script can register a function that gets called when a certain address is written, then check if the address contains the desired value inside the function. (In <a href="http://www.fceux.com/web/help/fceux.html?LuaFunctionsList.html" class="postlink">FCEUX Help - Lua Functions List</a>, see memory.register aka memory.registerwrite.) For example, to do something when $82 is written with 0, run this Lua script&#058;<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">function mem_written()<br />&nbsp; if(memory.readbyte(0x82) == 0) then<br />&nbsp; &nbsp; emu.message(&quot;Game over detected&quot;);<br />&nbsp; &nbsp; -- Do something.<br />&nbsp; &nbsp; -- Do something else.<br />&nbsp; &nbsp; -- ...<br />&nbsp; end<br />end<br /><br />memory.registerwrite(0x82, mem_written);</div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>sonder</b> [ Sun Aug 25, 2013 9:45 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Eighth - a Forth for NES dev (formerly Bytecode Interpre</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">sonder wrote:</div><div class="quotecontent"><div class="quotetitle">tepples wrote:</div><div class="quotecontent"><div class="quotetitle">sonder wrote:</div><div class="quotecontent">but then it would require Nintendulator - I don't think that's unfair though.</div><br />It'd be fair enough if Wine were improved to run Nintendulator. Last time I checked, Nintendulator required Genuine Windows. FCEUX, on the other hand, works on GNU/Linux in either Wine or SDL.</div><br /><br />If FCEUX added Lua scripting the interactive commandline could in theory support that emulator too.  You're only losing interactivity without, the compiler is a separate program.  It may need modification for the Linux version of SwiftForth though.<br /><br />I kind of have to do it this way anyway; I painted myself into a bit of a corner and this is the escape plan.  The simulator idea is not good compared to this.</div><br /><br />Crap!! So I added FCEUX-labels-exporting to asm6 only to discover FCEUX doesn't have Lua access to the labels!!! :O  wonder if I should attempt adding it myself or do a feature request :/

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Sun Aug 25, 2013 11:23 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Eighth - a Forth for NES dev (formerly Bytecode Interpre</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">sonder wrote:</div><div class="quotecontent">Crap!! So I added FCEUX-labels-exporting to asm6 only to discover FCEUX doesn't have Lua access to the labels!!! :O  wonder if I should attempt adding it myself or do a feature request :/</div><br />You could generate a Lua file that has corresponding variables for each symbol. Either from asm6 or with a separate tool from the label-file generated by asm6.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>sonder</b> [ Sun Aug 25, 2013 11:42 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Eighth - a Forth for NES dev (formerly Bytecode Interpre</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">thefox wrote:</div><div class="quotecontent"><div class="quotetitle">sonder wrote:</div><div class="quotecontent">Crap!! So I added FCEUX-labels-exporting to asm6 only to discover FCEUX doesn't have Lua access to the labels!!! :O  wonder if I should attempt adding it myself or do a feature request :/</div><br />You could generate a Lua file that has corresponding variables for each symbol. Either from asm6 or with a separate tool from the label-file generated by asm6.</div><br /><br />I think that will be easier.  Thanks.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>sonder</b> [ Mon Aug 26, 2013 12:09 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Eighth - a Forth for NES dev (formerly Bytecode Interpre</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">sonder wrote:</div><div class="quotecontent"><div class="quotetitle">thefox wrote:</div><div class="quotecontent"><div class="quotetitle">sonder wrote:</div><div class="quotecontent">Crap!! So I added FCEUX-labels-exporting to asm6 only to discover FCEUX doesn't have Lua access to the labels!!! :O  wonder if I should attempt adding it myself or do a feature request :/</div><br />You could generate a Lua file that has corresponding variables for each symbol. Either from asm6 or with a separate tool from the label-file generated by asm6.</div><br /><br />I think that will be easier.  Thanks.</div><br /><br />Success!  I lazily implemented it in fits and starts throughout the day, but it's now functional.  You can test any Eighth word interactively and push numbers on the stack.  One caveat is you have to use the assembler labels ... so for instance 1+ has to be typed as oneplus... Coming soon, more than one word per input <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />  And maybe somehow get the punctuated word names in there (the compiler could take care of this).

		
			<br clear="all" /><br />

			<table class="tablebg" width="100%" cellspacing="1">
			<tr>
				<td><b class="genmed">Attachments: </b></td>
			</tr>
			
				<tr>
					<td>
			<a href="./download/file.php?id=813&amp;mode=view"><img src="./download/file.php?id=813&amp;t=1" alt="eighthinterp.png" /></a><br />
			<span class="gensmall">eighthinterp.png [ 167.08 KiB | Viewed 459 times ]</span>
		

		<br />
	</td>
				</tr>
			
			</table>
		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>ehaliewicz</b> [ Thu Oct 10, 2013 3:37 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Eighth - a Forth for NES dev (formerly Bytecode Interpre</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">sonder wrote:</div><div class="quotecontent">Success!  I lazily implemented it in fits and starts throughout the day, but it's now functional.  You can test any Eighth word interactively and push numbers on the stack.  One caveat is you have to use the assembler labels ... so for instance 1+ has to be typed as oneplus... Coming soon, more than one word per input <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />  And maybe somehow get the punctuated word names in there (the compiler could take care of this).</div><br /><br /><br />Very cool!  <br /><br />Have you considered a subroutine threaded compiler?  Instead of an inner interpreter that goes through lists of indirect addresses, you just have a list of jumps.<br /><br />JSR dup<br />JSR drop<br />.... etc.<br /><br />It's typically a bit faster as there's no interpreter and it's easier to perform optimizations on, but the code size is usually bigger.<br /><br />I'm currently writing such a forth compiler for the Genesis, but I wouldn't mind trying the same thing on the nes at some point.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>2</strong> of <strong>3</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>