<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - INC question - possible Nintendulator bug?</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">INC question - possible Nintendulator bug?</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=3&amp;t=9918">http://forums.nesdev.com/viewtopic.php?f=3&amp;t=9918</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>teaguecl</b> [ Wed Mar 13, 2013 9:03 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>INC question - possible Nintendulator bug?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I have been running Blargg's test roms through Nintendulator (much thanks to Blargg and Q for these!).<br />Specfically, I am using this test from the instr_test suite: 01-implied.nes<br /><!-- m --><a class="postlink" href="http://blargg.8bitalley.com/parodius/nes-tests/instr_test-v3.zip">http://blargg.8bitalley.com/parodius/ne ... est-v3.zip</a><!-- m --><br /><br />Fairly early on, this sequence occurs:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">E881&nbsp; C8&nbsp; &nbsp; &nbsp; &nbsp; INY&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;A:00 X:FF Y:FF P:E5 SP:FB CYC:198 SL:244<br />E882&nbsp; D0 FB&nbsp; &nbsp; &nbsp;BNE $E87F&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;A:00 X:FF Y:00 P:67 SP:FB CYC:204 SL:244<br />E884&nbsp; E6 0F&nbsp; &nbsp; &nbsp;INC $0F = 01&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; A:00 X:FF Y:00 P:67 SP:FB CYC:210 SL:244<br /></div><br /><br />Remember that cycles here are PPU cycles.  It shows opcode D0 (BNE) taking 6 cycles.  This is equivalent to 2 CPU clock cycles.  The best information I can find shows that this instruction takes between 3 and 5 cpu cycles to complete:<br />3 if branch is not taken<br />4 if the branch is taken<br />5 if the branch is taken, and a page boundary crossed<br /><br />Is Nintendulator's timing off here, or am I misunderstanding this situation?  Thanks for any advice.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dwedit</b> [ Wed Mar 13, 2013 9:09 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: INC question - possible Nintendulator bug?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />2 CPU cycles if branch isn't taken, 3 if it is, 4 if it crosses a page.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>ulfalizer</b> [ Wed Mar 13, 2013 9:28 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: INC question - possible Nintendulator bug?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><!-- m --><a class="postlink" href="http://www.obelisk.demon.co.uk/6502/reference.html">http://www.obelisk.demon.co.uk/6502/reference.html</a><!-- m --> is a good basic reference for instruction timing. You might be misled if you read something like <!-- m --><a class="postlink" href="http://nesdev.com/6502_cpu.txt">http://nesdev.com/6502_cpu.txt</a><!-- m --> (notice the &quot;Notes:&quot; section though), because the fetch of the next opcode is included among the steps and won't need to be done again.<br /><br />For accurate emulation, you could just follow the steps in the latter document of course, but you will still need to keep in mind that trickiness for the branch instructions.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>teaguecl</b> [ Wed Mar 13, 2013 9:43 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: INC question - possible Nintendulator bug?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Thanks for the help everyone, I was just using inaccurate info.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Sik</b> [ Wed Mar 13, 2013 11:15 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: INC question - possible Nintendulator bug?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />It isn't really inaccurate, it's more that the last cycle of an opcode overlaps the first cycle of the next opcode as it can start decoding ahead of time. For example, EOR imm takes up 3 cycles in theory (one to fetch opcode, one to fetch data, one to execute instruction), but since in the last cycle it doesn't need to touch memory it fetches the opcode for the next instruction, effectively making it last 2 cycles.<br /><br />EDIT: not sure if that's the exact opcode, trying to remember what I saw once regarding C64 timings (which also uses the 6502).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>teaguecl</b> [ Wed Mar 13, 2013 11:35 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: INC question - possible Nintendulator bug?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Thanks again for the help everyone, could someone explain this one to me as well?<br />This trace from Nintendulator shows a BEQ instruction taking 9 PPU clocks (3 CPU clocks).  I don't see how this is the case.<br />To me it seems like this should take 4 CPU clocks.  It should use the two standard cycles, plus the optional cycle since the branch is taken, plus another cycle since it crosses a page boundary.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">CFFC&nbsp; C9 5A&nbsp; &nbsp; &nbsp;CMP #$5A&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; A:5A X:81 Y:69 P:25 SP:FB CYC:286 SL:1<br />CFFE&nbsp; F0 05&nbsp; &nbsp; &nbsp;BEQ $D005&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;A:5A X:81 Y:69 P:27 SP:FB CYC:292 SL:1<br />D005&nbsp; A9 AA&nbsp; &nbsp; &nbsp;LDA #$AA&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; A:5A X:81 Y:69 P:27 SP:FB CYC:301 SL:1<br /></div><br /><br />My best guess is that I am not understanding the page boundary properly - to me this looks like a crossing.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Wed Mar 13, 2013 11:47 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: INC question - possible Nintendulator bug?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />PC=CFFE<br />fetch opcode then increment PC<br />PC=CFFF<br />fetch offset then increment PC<br />PC=D000<br />add offset to PC, no carry from low byte so no extra cycle

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>teaguecl</b> [ Thu Mar 14, 2013 8:58 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: INC question - possible Nintendulator bug?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Thank you!  I couldn't sleep last night thinking about this issue - embarrassed that the answer is so obvious.  Really appreciate the explanation of that one.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Thu Mar 14, 2013 9:28 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: INC question - possible Nintendulator bug?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The answer was never obvious to me at least, and it wasn't helped by the ambiguous &quot;when a branch crosses a page, an extra cycle is taken&quot; that most describe. It should be something like, &quot;if the branch is to an instruction that begins on a different page than the instruction just after the branch begins on, an extra cycle is taken&quot;.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Sik</b> [ Thu Mar 14, 2013 10:17 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: INC question - possible Nintendulator bug?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I think the rule of thumb is that if the high byte of the address bus changes you have to add an extra cycle (low and high bytes are updated on separate cycles, which can lead to some interesting situations with hardware if you aren't careful...).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Thu Mar 14, 2013 10:55 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: INC question - possible Nintendulator bug?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />&quot;If the high byte changes&quot; is ambiguous. A taken branch whose opcode is at $80FF involves a change in the high byte of the PC. So does one whose opcode is at $80FE and branch offset at $80FF. For example, it might not be clear to everyone that the branch offset is fetched, the PC incremented like normal, before the addition takes place. It might seem like the addition occurs with the PC at the branch offset.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>beannaich</b> [ Fri Mar 15, 2013 1:49 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: INC question - possible Nintendulator bug?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Sik wrote:</div><div class="quotecontent">I think the rule of thumb is that if the high byte of the address bus changes you have to add an extra cycle (low and high bytes are updated on separate cycles, which can lead to some interesting situations with hardware if you aren't careful...).</div><br />Better rule of thumb: If adding an 8-bit value to a 16-bit value and there is a carry from bit 7, you add an extra cycle to fix the high 8-bits*<br /><br />Example:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">word.lo_byte += byte;<br /><br />if ( word.lo_byte &lt; byte ) // carry<br />{<br />&nbsp; &nbsp; cycle();<br />&nbsp; &nbsp; word.hi_byte += 1;<br />}</div><br /><br />*Aside from write-only instructions with Absolute X, Absolute Y, and Zero Page Indirect Y addressing. There the extra cycle is fixed and always taken. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /> Also PC increments while fetching opcode/operands don't observe this penalty.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Sik</b> [ Fri Mar 15, 2013 11:45 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: INC question - possible Nintendulator bug?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">blargg wrote:</div><div class="quotecontent">&quot;If the high byte changes&quot; is ambiguous. A taken branch whose opcode is at $80FF involves a change in the high byte of the PC. So does one whose opcode is at $80FE and branch offset at $80FF. For example, it might not be clear to everyone that the branch offset is fetched, the PC incremented like normal, before the addition takes place. It might seem like the addition occurs with the PC at the branch offset.</div><br />Actually this reminds me, there's a massive issue when doing absolute branches (i.e. full address instead of offset), if the address (the operand) happens to cross page zero, <em>it will not be read properly</em> - it will read the low byte from the end of the page and the high byte from the beginning of the same page, instead of the beginning of the next page. This is because the CPU doesn't increment the address properly when reading.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Fri Mar 15, 2013 11:49 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: INC question - possible Nintendulator bug?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I thought the JMP bug was just for indirect jumps like JMP ($xxFF), not for absolute jumps like $xxFE: JMP $9000.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>WedNESday</b> [ Fri Mar 15, 2013 3:08 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: INC question - possible Nintendulator bug?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">I thought the JMP bug was just for indirect jumps like JMP ($xxFF), not for absolute jumps like $xxFE: JMP $9000.</div><br /><br />Correct.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>