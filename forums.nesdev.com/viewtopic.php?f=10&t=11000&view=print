<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Converting Super Mario Bros. to FME-7/Sunsoft 5B?</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Converting Super Mario Bros. to FME-7/Sunsoft 5B?</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=10&amp;t=11000">http://forums.nesdev.com/viewtopic.php?f=10&amp;t=11000</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>DevEd</b> [ Mon Feb 10, 2014 5:46 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Converting Super Mario Bros. to FME-7/Sunsoft 5B?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />As you are most likely aware, I have an INL-ROM board with the flash upgrade and Sunsoft 5B support (including full sound), and my ultimate goal with it is to make a Gimmick repro-cart. However, I wanted to test the cart before I actually put Gimmick onto it. Since I don't want to test JUST Sunsoft 5B games (i.e. Return of the Joker), I also wanted to test some NROM games (i.e. Super Mario Bros.) Then I found out that I needed to modify the ROM to get it working with 5B. What's the bare minimum I need to do in order to get Super Mario Bros. working on the Sunsoft 5B?<br /><br />Also, somewhat related: Is there a test program for the Sunsoft 5B/FME-7 out there?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Mon Feb 10, 2014 8:15 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Converting NROM games to FME-7/Sunsoft 5B</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />You have to initialize the PRG and CHR banks so that they are mapped to the correct locations. To do that, you must first find some empty space in the last (hardwired) bank. This might not be easy, since SMB is prety tightly packed, so you might have to overwrite something (a level, a song, something like that).<br /><br />Once you find a few consecutive bytes you can overwrite, you must change the reset vector (the 2-byte value at $FFFC-$FFFD) to point to this location, because you want the new code to run as soon as the program starts. Take note of the old reset vector, because you'll need to jump to it later so that the original code can run after you have configured the mapper.<br /><br />Now, if you look at the <a href="http://wiki.nesdev.com/w/index.php/Sunsoft_FME-7" class="postlink">documentation</a> you'll see that the NES communicates with this mapper by sending it a command number and them a parameter to complete each command. Just use that information to set all PRG and CHR bank registers. Something like this:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp;;map PRG bank 0 to $8000-$9fff<br />&nbsp; &nbsp;lda #$09<br />&nbsp; &nbsp;sta $8000<br />&nbsp; &nbsp;lda #$00<br />&nbsp; &nbsp;sta $a000<br /><br />&nbsp; &nbsp;;map PRG bank 1 to $a000-$bfff<br />&nbsp; &nbsp;lda #$0a<br />&nbsp; &nbsp;sta $8000<br />&nbsp; &nbsp;lda #$01<br />&nbsp; &nbsp;sta $a000<br /><br />&nbsp; &nbsp;;map PRG bank 2 to $c000-$dfff<br />&nbsp; &nbsp;lda #$0b<br />&nbsp; &nbsp;sta $8000<br />&nbsp; &nbsp;lda #$02<br />&nbsp; &nbsp;sta $a000</div><br />This is easy but needs a lot of space, you could make it more compact if you used tables and/or loops.<br /><br />After the banks are in place, you also have to initialize the mirroring. Mirroring is controlled by register $0c. To set the mirroring to vertical you have to do this:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp;;set mirroring to vertical<br />&nbsp; &nbsp;lda #$0c<br />&nbsp; &nbsp;sta $8000<br />&nbsp; &nbsp;lda #$00<br />&nbsp; &nbsp;sta $a000</div><br />After setting PRG, CHR and mirroring you can jump to the original initialization code (I think you can get away with not initializing the IRQ registers, but if you do run into problems you should consider initializing all the registers), and the game will work as if it were in an NROM cart.<br /><br />Note: If you can't find space for the mapper configuration and you don't want to overwrite anything, you can always increase the amount of PRG-ROM, move (some of) the original initialization code from the fixed bank to a new bank (where your new initialization code will be), and use the space you freed up on the hardwired bank to switch the new bank and jump to it.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>DevEd</b> [ Mon Feb 10, 2014 9:01 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Converting NROM games to FME-7/Sunsoft 5B</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />So I've got the code I need assembled and ready for inserting, however, I still have no idea HOW to insert the code. I want to expand the ROM so I don't have to overwrite anything, but I have no idea how to do that. Also, I couldn't find the &quot;reset vector&quot;. What offset is it located at in Super Mario Bros.?<br /><br />EDIT: Changed topic title.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Mon Feb 10, 2014 9:40 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Converting NROM games to FME-7/Sunsoft 5B</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">DevEd wrote:</div><div class="quotecontent">I want to expand the ROM so I don't have to overwrite anything, but I have no idea how to do that.</div><br />To keep the ROM a power of 2, put 32KB of &quot;nothing&quot; between the header and the original 32KB of PRG-ROM. Don't forget to update the PRG-ROM page count in the header.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Also, I couldn't find the &quot;reset vector&quot;. What offset is it located at in Super Mario Bros.?</div><br />16 bytes of header + 32768 bytes of PRG-ROM - 2 bytes of the IRQ vector - 2 bytes of the reset vector = 32780, which is $800C in hex.<br /><br />But since you're going with ROM expansion, you shouldn't change the address of the reset vector, you should change the routine itself. Go to the address indicated in the reset vector and cut enough of the reset routine to insert a switch to the new bank where your initialization will be. The code will look something like this:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp;lda #$09 ;prepare to map a bank to $8000-$9fff<br />&nbsp; &nbsp;sta $8000<br />&nbsp; &nbsp;lda #$00 ;map the initialization bank<br />&nbsp; &nbsp;sta $a000<br />&nbsp; &nbsp;jmp NewResetHandler ;call the new initialization routine<br />ResumeOriginalProgram:<br />&nbsp; &nbsp;sta $a000 ;map the original SMB bank</div><br />That may require you to move 16 bytes of code from the fixed bank to the new initialization bank, if you can't find that much free space in the fixed bank. That last mapper write (the one after the ResumeOriginalProgram label) must be in the hardwired bank because your initialization bank will be switched out so that the original SMB bank can be mapped in, and you can't have a bank switch itself out or the program would crash, so you can prepare the switch in that bank, but the command must be finalized in the hardwired bank, after you've mapped everything else.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Mon Feb 10, 2014 9:59 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Converting Super Mario Bros. to FME-7/Sunsoft 5B?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Code similar to what I posted for an <a href="http://forums.nesdev.com/viewtopic.php?p=116636#p116636" class="postlink">MMC3 conversion</a> should work, so long as you can find 32 bytes. Untested:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; ldx #12<br />loop:<br />&nbsp; stx $8000<br />&nbsp; lda mmc3tbl,x<br />&nbsp; sta $A000<br />&nbsp; dex<br />&nbsp; bpl loop<br />&nbsp; jmp rest_of_reset<br />&nbsp; ; A=$00 and X=$FF at end, so ready for $2000/$2001 writes and TXS<br />fme7tbl:<br />&nbsp; ; the 13 parameters are eight 1K banks for CHR ROM $0000-$1FFF,<br />&nbsp; ; four 8K banks for CHR ROM $6000-$DFFF, and nametable mirroring type<br />&nbsp; ; see http://wiki.nesdev.com/w/index.php/Sunsoft_FME-7<br />&nbsp; .byt 0,1,2,3,4,5,6,7,&nbsp; 3,4,5,6,&nbsp; 0<br /></div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Mon Feb 10, 2014 10:08 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Converting Super Mario Bros. to FME-7/Sunsoft 5B?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />If you're looking for games just for testing, try FDS games. They won't touch the fixed bank area at $E000-FFFF so you can be free to put your startup code there. There are probably at least a few FDS games that would work, look for ones that aren't writing to the FDS' special RAM areas. Can the INL board do PRG-ROM at $6000?<br /><br />Also, I'm slightly relieved on opening this thread that you're using an INL board and not taking apart an original FME-7 board. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Mon Feb 10, 2014 11:39 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Converting Super Mario Bros. to FME-7/Sunsoft 5B?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />If you just want something for testing, try <a href="http://forums.nesdev.com/viewtopic.php?p=120164#p120164" class="postlink">Holy Diver Batman</a>. It should run on both Holy Diver boards (#78.3) and Batman: Return of the Joker boards (#69) like the one you have.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>DevEd</b> [ Tue Feb 11, 2014 5:51 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Converting Super Mario Bros. to FME-7/Sunsoft 5B?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">rainwarrior wrote:</div><div class="quotecontent">Also, I'm slightly relieved on opening this thread that you're using an INL board and not taking apart an original FME-7 board. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /></div><br /><br />I don't have an original FME-7 board, so taking apart one would be impossible. <span style="font-size: 50%; line-height: normal">but if I had Return Of The Joker... &gt;:}</span><br /><br /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">If you just want something for testing, try <a href="http://forums.nesdev.com/viewtopic.php?p=120164#p120164" class="postlink">Holy Diver Batman</a>. It should run on both Holy Diver boards (#78.3) and Batman: Return of the Joker boards (#69) like the one you have.</div><br /><br />Holy Diver, Batman! I'll have to give that a try at some point.<br /><br />EDIT: Also, A) I STILL don't have an NES for testing, and B) I'm probably going to have to take apart a cartridge in order to put the INL-ROM board into the NES.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>MottZilla</b> [ Tue Feb 11, 2014 12:19 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Converting Super Mario Bros. to FME-7/Sunsoft 5B?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />No one mentioned this yet but FME-7 supports mapping ROM to $6000-$7FFF which could be helpful. SMB resets to $8000, which won't work for the FME-7 which only fixes $E000-$FFFF. If you can find one of the reverse engineered source codes to the game, you should find some area in $E000-$FFFF that is either a routine or data set that you can find all the other references to, and alter those references to find the same thing somewhere in $6000-$7FFF where you will move it to. Then you can reuse the space in that last bank for your reset vector and calling an init routine that could also be in the $6000 bank. <br /><br />Since the source code is around it shouldn't be too hard.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Tue Feb 11, 2014 1:33 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Converting Super Mario Bros. to FME-7/Sunsoft 5B?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Excellent points, MottZilla. You must have the reset vector point to somewhere in the last PRG bank where you can find (or create, by moving something to the new bank and fixing any references to the moved code/data) enough room for the code that maps the new bank to $6000-$7FFF and jumps to the mapper setup code in it. After the whole configuration is done you can just JMP to $8000 to resume the original program.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Tue Feb 11, 2014 3:13 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Converting Super Mario Bros. to FME-7/Sunsoft 5B?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />If you used the FDS version of Super Mario Bros. the relocation from $E000-FFFF to $6000-7FFF might already be done for you...

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>DevEd</b> [ Wed Feb 12, 2014 5:37 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Converting Super Mario Bros. to FME-7/Sunsoft 5B?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I'm sorry, but I fail to comprehend the concept of a FDS game running on a cartridge on an NES.<br /><br />Also, doesn't the FDS use its own mapper?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Wed Feb 12, 2014 6:23 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Converting Super Mario Bros. to FME-7/Sunsoft 5B?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Games can be ported from one mapper to another. Dragon Quest and Maniac Mansion were ported from discrete mappers to MMC1 when brought to 72-pin land so that they could use battery RAM. Family Computer Disk System (FDS) games like Pro Wrestling, Zelda, Metroid, Kid Icarus, and Doki Doki Panic were ported to a cartridge mapper (UNROM, MMC1, or MMC3) when brought to 72-pin land. Tetris was ported from MMC1 to MMC3 to fit on the multicart with Super Mario Bros. and Nintendo World Cup, and Dr. Mario appears to have been ported from MMC1 to MMC3 for one of the official competition multicarts. Nintendo ported SMB1 to FDS, and pirates did the opposite for SMB2 (J).<br /><br />The claim made here is that porting certain FDS games to FME-7 could be almost trivial.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Wed Feb 12, 2014 6:31 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Converting Super Mario Bros. to FME-7/Sunsoft 5B?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The FDS <em>is</em> a cartridge full of RAM that plugs into a Famicom. The disk drive part is only used to load data into that RAM, so aside from the loading part, it's just a cartridge. Yes, it is its own mapper, but a lot of its games don't use most of  its features, especially if they were originally NROM games like Super Mario Bros..<br /><br />The reason I'm suggesting it is that its mapper design has some similarities to the FME-7. It has a &quot;fixed&quot; ROM at $E000-FFFF which was used for its BIOS code, and for this reason an NROM game ported to FDS will have its data already relocated from there, usually to $6000-7FFF. If the game was only a 32k/16k PRG NROM, usually this will be loaded into the FDS once at startup and after that no other FDS mapper features will be needed, so at that point it's effectively a mapper very much like our proposed NROM-368.<br /><br />Open the Super Mario Bros. FDS in an emulator and let it run until the game loads (e.g. get to the title screen), then do a memory dump from $6000-DFFF and you'll have all the data you need to build your PRG ROM. (Dump the 8k of CHR memory as well.) From there, just write a small startup program in the $E000-FFFF fixed bank that sets up your banks and nametable mirroring then jumps to Mario's code, and a vector table for NMI etc.<br /><br />For an FDS game to be suitable for a trivial conversion to FME-7, it should meet the following criteria, which I believe SMB does:<br /><br />1. Only loads data once. (If it loads data multiple times, you could write a replacement for the BIOS' loading code.)<br />2. Outside the initial data load, never writes to $6000-DFFF. (The FDS has RAM here so it's technically writable. You could use PRG-RAM at $6000-7FFF and load it manually for your FME-7 port. Ram writes at $8000-DFFF are non-portable, but likely extremely rare.)<br />3. Doesn't use the FDS' IRQ. (You could probably write a replacement with FME-7's IRQ but takes more work.)<br />4. Doesn't change nametable mirroring. (Requires replacing FDS mirror toggling code with FME-7 mirror toggling code.)<br />5. Doesn't use the FDS expansion audio. (We have a list of those games <a href="http://wiki.nesdev.com/w/index.php/List_of_games_with_expansion_audio#Nintendo_FDS" class="postlink">here</a>. This isn't much of a problem except that the extra audio won't play. I don't think the register writes are in conflict with the FME-7.)<br />6. The code in $6000-DFFF never calls BIOS code. (I.e. the code never jumps back to $E000-FFFF after the initial load. If it does, you'll need to write a replacement routine in the fixed bank.)<br />7. Doesn't write to CHR-RAM after load. (You could possibly run the FME-7 with CHR-RAM? Loading it then requires extra code.)<br />8. Doesn't write directly to nametable from load. (The FDS BIOS routines can load data from disk directly to the nametable. Requires extra code to duplicate this functionality.)<br /><br />You can verify each of these things pretty easily with breakpoints in a debugging emulator like FCEUX. If all of the criteria are met, the port should to FME-7 be extremely easy. Even if they aren't met, they can each be overcome (except the missing audio, or possibly RAM use at $8000-DFFF) with a little work.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Wed Feb 12, 2014 10:38 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Converting Super Mario Bros. to FME-7/Sunsoft 5B?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">Dragon Quest and Maniac Mansion were ported from discrete mappers to MMC1 when brought to 72-pin land so that they could use battery RAM.</div><br />I seriously doubt Maniac Mansion was ported... The Japanese and American releases are completely different games.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>