<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=2&amp;t=7156" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2010-11-27T08:21:24-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=2&amp;t=7156</id>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2010-11-27T08:21:24-07:00</updated>
<published>2010-11-27T08:21:24-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7156&amp;p=70583#p70583</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7156&amp;p=70583#p70583"/>
<title type="html"><![CDATA[Split where?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7156&amp;p=70583#p70583"><![CDATA[
It morphed from 1. MMC1 to 2. someone's cockfighting game on an MMC1 board to 3. data compression for a cockfighting game. There are replies discussing both 1 and 2 and replies discussing both 2 and 3. I can't split whole posts from one topic to a new topic, but I can't split a single reply into two replies. So please answer <a href="http://nesdev.com/bbs/viewtopic.php?p=70170#70170" class="postlink">this post</a>.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Sat Nov 27, 2010 8:21 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[clueless]]></name></author>
<updated>2010-11-27T07:52:24-07:00</updated>
<published>2010-11-27T07:52:24-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7156&amp;p=70582#p70582</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7156&amp;p=70582#p70582"/>
<title type="html"><![CDATA[&quot;Mapper 1&quot; emulation &amp; extension]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7156&amp;p=70582#p70582"><![CDATA[
<div class="quotetitle">tepples wrote:</div><div class="quotecontent"><br /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">What you described is a generic dictionary compression, that uses pointers to strings defined in ROM, right?<br /></div><br />In other words: "tepples, get back to work on that Huffword implementation."</div><br /><br />Interesting.  If by "huffword" you mean: Huffman compression where bit combinations could represent single characters or word fragments or entire words.<br /><br />I was thinking of developing the above algorithm, but with a single global dictionary.<br /><br />We should probably split this thread, as it is now about text compression and not "Mapper #1".<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3664">clueless</a> — Sat Nov 27, 2010 7:52 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2010-11-27T08:15:54-07:00</updated>
<published>2010-11-27T07:42:04-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7156&amp;p=70580#p70580</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7156&amp;p=70580#p70580"/>
<title type="html"><![CDATA[&quot;Mapper 1&quot; emulation &amp; extension]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7156&amp;p=70580#p70580"><![CDATA[
Dwedit: I saw your post in the talk page for Wikipedia's article about LZ77 and LZ78. Something about it looked dubious.<br /><br /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent"><br />to my knowledge, LZ78 starts with a dictionary with only the basic character set, and adds entries to it as the data is decompressed. It certainly doesn't allow random access, because of how the dictionary is generated from character combinations that are found along the way.<br /></div><br />Correct. The basic LZ78 algorithm is to take the most recent dictionary word and add a character to produce the next dictionary word, and LZW uses the first character of the next word for this.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />I think LZ78 would be a bad choice for the NES, because for it to be efficient a large dictionary has to be used, possibly needing more RAM than the NES has.<br /><br />What you described is a generic dictionary compression, that uses pointers to strings defined in ROM, right?<br /></div><br />In other words: "tepples, get back to work on that Huffword implementation."<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Sat Nov 27, 2010 7:42 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2010-11-27T00:05:56-07:00</updated>
<published>2010-11-27T00:05:56-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7156&amp;p=70562#p70562</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7156&amp;p=70562#p70562"/>
<title type="html"><![CDATA[&quot;Mapper 1&quot; emulation &amp; extension]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7156&amp;p=70562#p70562"><![CDATA[
<div class="quotetitle">Dwedit wrote:</div><div class="quotecontent"><br />I'm just referring to all explicit dictionary-type compression as LZ78.<br /></div><br />I don't think this is LZ78... to my knowledge, LZ78 starts with a dictionary with only the basic character set, and adds entries to it as the data is decompressed. It certainly doesn't allow random access, because of how the dictionary is generated from character combinations that are found along the way.<br /><br />I think LZ78 would be a bad choice for the NES, because for it to be efficient a large dictionary has to be used, possibly needing more RAM than the NES has.<br /><br />What you described is a generic dictionary compression, that uses pointers to strings defined in ROM, right?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Sat Nov 27, 2010 12:05 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Dwedit]]></name></author>
<updated>2010-11-26T23:04:59-07:00</updated>
<published>2010-11-26T23:04:59-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7156&amp;p=70561#p70561</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7156&amp;p=70561#p70561"/>
<title type="html"><![CDATA[&quot;Mapper 1&quot; emulation &amp; extension]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7156&amp;p=70561#p70561"><![CDATA[
I saw the Zelda Oracles games using LZ78 for the level compression for dungeons.  LZ78 is random access, so you can start from anywhere, and your dictionary is just a page in ROM somewhere else, instead of a sliding window.<br />I just wonder if there is a better way to encode LZ78 so it isn't so big.<br /><br />I hope I'm not jumbling terms here, I'm just referring to all explicit dictionary-type compression as LZ78.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=53">Dwedit</a> — Fri Nov 26, 2010 11:04 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[clueless]]></name></author>
<updated>2010-11-26T22:57:36-07:00</updated>
<published>2010-11-26T22:57:36-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7156&amp;p=70560#p70560</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7156&amp;p=70560#p70560"/>
<title type="html"><![CDATA[&quot;Mapper 1&quot; emulation &amp; extension]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7156&amp;p=70560#p70560"><![CDATA[
Thanks for the post.  What I find interesting is the use of escape codes embedded in the compressed text to signal a change in fonts / decodings.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3664">clueless</a> — Fri Nov 26, 2010 10:57 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[katzenklavier]]></name></author>
<updated>2010-11-26T22:46:32-07:00</updated>
<published>2010-11-26T22:46:32-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7156&amp;p=70559#p70559</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7156&amp;p=70559#p70559"/>
<title type="html"><![CDATA[&quot;Mapper 1&quot; emulation &amp; extension]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7156&amp;p=70559#p70559"><![CDATA[
The way old Infocom text adventures (best known for the Zork series) encoded text may be of interest here.  <!-- m --><a class="postlink" href="http://www.inform-fiction.org/zmachine/standards/z1point0/sect03.html">http://www.inform-fiction.org/zmachine/ ... ect03.html</a><!-- m --><br /><br />Basically, they used three five-bit characters per two bytes, with an indicator bit left over that marked the end of words.  Dictionary compression was also used, if my memory serves right.  These games had absolutely massive amounts of text and achieved a relatively impressive text compression (obviously nothing as efficient as DEFLATE or something like that, but still very nice) that could be implemented with minimal computational power.  It's worth giving a read, at least.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4582">katzenklavier</a> — Fri Nov 26, 2010 10:46 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[clueless]]></name></author>
<updated>2010-11-19T15:32:54-07:00</updated>
<published>2010-11-19T15:32:54-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7156&amp;p=70231#p70231</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7156&amp;p=70231#p70231"/>
<title type="html"><![CDATA[&quot;Mapper 1&quot; emulation &amp; extension]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7156&amp;p=70231#p70231"><![CDATA[
Someone could probably to huffman on paper.  Maybe a savant could do it in his or her head.  Just saying...<br /><br />But seriously, do and experiment.  Create a simple, custom file format and write a compression tool in your favorite qucik+dirty language.  I like C/C++ and perl.  Tepples like Python.  One of my coworkers writes simulation software in BASH (slower than sh*t though).<br /><br />Do you store your (raw) strings in Pascal format (first byte = strlen), or in C format (terminates on NULL)?<br /><br />Have your tool compute how many bytes would be consumed by the raw text + lsm/msb pointers.  Have it compute the byte size of the output and compare to get a "percent space saved".<br /><br />Then figure out how many bytes are taken up by the decompresser in 6502.<br /><br />This could make for an interesting competition...<br /><br />Bregalad, I don't need text compression at this time. However, if you come up with something easy to invoke from a Linux tool build chain (ie, works well with Make and runs on the Linux CLI), then I would be happy to consider it when the time comes for me to use compressed text.<br /><br />However, I think that if you were making a tool for the "community" then you should consider that some people develop on Macs, some on Linux/bsd/solaris and some on Winblows.  "EXEs" are probably not the best bet.  Perl and Python are portable (enough) and writing parsers in them is sooo much easier than in C/C++.  Java seems like overkill to me.  I don't even have a jre/jdk on my dev box, and hope to avoid needing it.<br /><br />EDIT: Another consideration for NES text compression is decompression speed and code size.<br /><br />Also, in my reverse engineering of Crystalis I noticed (but never fully delved into) that the text is largey dictionary compressed.  There is a dictionary of sorts.  (from memory, so I may be wrong): Certain words were stored in plain text.  Some were only represented by a token, and some were mixes of tokens (word fragments) and normal letters.<br /><br />One would want to extract individual sentences from a corpus of text.  But compressing each sentence / paragraph on its own would be inefficient.  Personally, I think that NES text compression would be best with a global word + word fragment dictionary (like Crystalis), and then compress that token stream with something else.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3664">clueless</a> — Fri Nov 19, 2010 3:32 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2010-11-19T15:23:10-07:00</updated>
<published>2010-11-19T15:23:10-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7156&amp;p=70230#p70230</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7156&amp;p=70230#p70230"/>
<title type="html"><![CDATA[&quot;Mapper 1&quot; emulation &amp; extension]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7156&amp;p=70230#p70230"><![CDATA[
Yeah, and my point was that's why we need tools to do this.<br />The only compression method that can be done without any tools is RLE (unlike you're a superhuman or something).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Fri Nov 19, 2010 3:23 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[clueless]]></name></author>
<updated>2010-11-19T14:55:38-07:00</updated>
<published>2010-11-19T14:55:38-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7156&amp;p=70229#p70229</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7156&amp;p=70229#p70229"/>
<title type="html"><![CDATA[&quot;Mapper 1&quot; emulation &amp; extension]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7156&amp;p=70229#p70229"><![CDATA[
Most English text contains enough entropy to compress it down to 5% of its original size.  Striping the top two bits only gains you 25% bit savings.  One can do much better....<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3664">clueless</a> — Fri Nov 19, 2010 2:55 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[3gengames]]></name></author>
<updated>2010-11-19T13:57:28-07:00</updated>
<published>2010-11-19T13:57:28-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7156&amp;p=70224#p70224</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7156&amp;p=70224#p70224"/>
<title type="html"><![CDATA[&quot;Mapper 1&quot; emulation &amp; extension]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7156&amp;p=70224#p70224"><![CDATA[
You could also compress text down to 6 bits for the value, since there's a total of 96 needed values for text, so you can cut out the 128th value bit for it and compress is and save 1 bit per letter.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4311">3gengames</a> — Fri Nov 19, 2010 1:57 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2010-11-19T05:52:38-07:00</updated>
<published>2010-11-19T05:52:38-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7156&amp;p=70217#p70217</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7156&amp;p=70217#p70217"/>
<title type="html"><![CDATA[&quot;Mapper 1&quot; emulation &amp; extension]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7156&amp;p=70217#p70217"><![CDATA[
<div class="quotetitle">Bregalad wrote:</div><div class="quotecontent"><br />Typically for storing text or maps, you'd have the following :<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">TextPointers<br />  .dw Text1 <br />  .dw Text2<br />  .dw Text3<br /><br />Text1<br />  .asc &quot;Hello guys !&quot;<br />Text2<br />  .asc &quot;I will dominate the world!&quot;<br />Text3<br />  .asc &quot;All oposition is futile&quot;<br /><br /></div><br />Having this compressed in a single .bin file is completely unusable.<br />So a tool that would parse the original data, compress it, and re -output it keeping the labels but replace .asc or .db statements with compressed data would be amazing.<br /></div><br />That or it'd take something like wiki markup and make a label for each level-(something) heading. That's what I had planned for an e-book reader: write the book in something much like MediaWiki markup, and the converter would paginate it, compress it, and make the needed address tables.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />I could probably get something done slightly faster using Java but I bet people would rather see it being made in C(++) compilable into an .exe file which doesn't need JRE.<br /></div><br />For me, it's not the JRE (I could just as easily apt-get install openjdk) as much as <em>Oracle v. Google</em>. A lot of my tools are written in Python nowadays; it's easier to get data structures such as a hash table built and unbuilt in that than in C and the like.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Fri Nov 19, 2010 5:52 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2010-11-19T01:25:58-07:00</updated>
<published>2010-11-19T01:25:58-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7156&amp;p=70212#p70212</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7156&amp;p=70212#p70212"/>
<title type="html"><![CDATA[&quot;Mapper 1&quot; emulation &amp; extension]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7156&amp;p=70212#p70212"><![CDATA[
<div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Then don't store the original text in ASM source files.<br /></div><br />What about if I already had data made that way before I even planned to have it compressed ?<br />Otherwise you're right, you'd want it in plain text with marker for end of every message/map that the compressor should use to make a "break".<br /><br />It's this "break" ability, necessary for any practical use, that all compressing tools so far lacks badly.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Fri Nov 19, 2010 1:25 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[clueless]]></name></author>
<updated>2010-11-18T15:57:58-07:00</updated>
<published>2010-11-18T15:57:58-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7156&amp;p=70194#p70194</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7156&amp;p=70194#p70194"/>
<title type="html"><![CDATA[&quot;Mapper 1&quot; emulation &amp; extension]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7156&amp;p=70194#p70194"><![CDATA[
Then don't store the original text in ASM source files.  Create your own file format and write a quick tool in C, perl or python to compress it and emit temp .s, .inc files.  This is easy to handle with Makefiles or whatever your favorite build system is.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3664">clueless</a> — Thu Nov 18, 2010 3:57 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2010-11-18T15:05:27-07:00</updated>
<published>2010-11-18T15:05:27-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7156&amp;p=70193#p70193</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7156&amp;p=70193#p70193"/>
<title type="html"><![CDATA[&quot;Mapper 1&quot; emulation &amp; extension]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7156&amp;p=70193#p70193"><![CDATA[
Well, tools are definitely badly lacking when it comes to compression.<br /><br />A great thing would be a tool that takes a .bin file or even a .asm file parsing .db statements (and ignoring everything else), compressing the deal with a couple of algorithms which are feasible on the NES, and display the results. Then the user is free to use data from the most efficient compression method (or the one he feels more implementing).<br /><br />But usability for a game developement case should be kept in mind. Typically for storing text or maps, you'd have the following :<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">TextPointers<br />  .dw Text1 <br />  .dw Text2<br />  .dw Text3<br /><br />Text1<br />  .asc &quot;Hello guys !&quot;<br />Text2<br />  .asc &quot;I will dominate the world!&quot;<br />Text3<br />  .asc &quot;All oposition is futile&quot;<br /><br /></div><br />Having this compressed in a single .bin file is completely unusable.<br />So a tool that would parse the original data, compress it, and re -output it keeping the labels but replace .asc or .db statements with compressed data would be amazing. So it would be like that :<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">TextPointers<br />  .dw Text1 <br />  .dw Text2<br />  .dw Text3<br /><br />Text1<br />  .db $64, $06, $1a, $2b, $6c   ;&quot;Random&quot; compressed data comes here<br />Text2<br />  .db  $1a, $7b, $84, $9a<br />Text3<br />  .db $9c, $5d, $4e, $8a, $9c, $1a<br /><br /></div><br /><br />Having every text / screen in a separate file is not practical, you don't want 100+ tiny files in your folder to be compressed.<br /><br />Of course if anyone has a better idea, this is welcome.<br /><br />I'll try to make a tool like that for RLE and huffman coding (the only codings I actually understand fully... so far) but since I'm not a PHD in non-Nesdev computer science and because I'm busy those times it will take ages for me to get something decent. I could probably get something done slightly faster using Java but I bet people would rather see it being made in C(++) compilable into an .exe file which doesn't need JRE.<br /><br />There is lot of C++ sources for Romhacking oriented (de)compression <a href="http://www.romhacking.net/docs/134/" class="postlink">here</a> but I don't know how to use that !<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Thu Nov 18, 2010 3:05 pm</p><hr />
]]></content>
</entry>
</feed>