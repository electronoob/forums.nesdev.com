<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - My results so far</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">My results so far</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=10&amp;t=4410">http://forums.nesdev.com/viewtopic.php?f=10&amp;t=4410</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>2</strong> of <strong>3</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Fri Oct 03, 2008 5:23 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Banshaku wrote:</div><div class="quotecontent">I updated my ines mapper for 3 banks.</div>
<br />This is a situation that doesn't really happen with real hardware, because there isn't a 48KB ROM chip, the sizes are always powers of 2. I'm not saying this is the problem, but some emulators may not like this, so it's better to get it out of the way anyway. Try using 4 or 8 banks and see if anything changes. Even if it doesn't, keep the sizes as powers of 2, always.
<br />
<br />I wouldn't know how to setup these things because my assembler of choice (ASM6) is so easy to use that, as long as each bank starts and ends with ORG statements indicating the starting and ending addresses of that bank, everything assembles just fine, no matter how many banks I have or their sizes.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Fri Oct 03, 2008 6:45 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Banshaku wrote:</div><div class="quotecontent">I updated my ines mapper for 3 banks.</div>
<br />As tokumaru mentioned, try using a number of banks that is a power of two, such as 4. You'll need to add a ROM2 line to MEMORY (where the #etc is) to achieve this.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Banshaku</b> [ Fri Oct 03, 2008 7:37 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">As tokumaru mentioned, try using a number of banks that is a power of two, such as 4. You'll need to add a ROM2 line to MEMORY (where the #etc is) to achieve this.</div>
<br />
<br />That was it, it's now working. It was a beginner's error.  Thanks guys!  So my cfg file was fine, just the amount of banks was not right.  I would have never found that since It was working fine with 1 bank only.
<br />
<br />By the way, is it written on the wiki?  I read about this mapper and never saw anything about it.  My guess is that is not specific to that mapper but it's almost an implied rule on how data should be. If I made this error, other beginner's will do.
<br />
<br />Thanks again guys.  Now the next step is switching my banks and see how it works. I think there is enough information about that so now it's time to go read!  My progress are going well, can't wait to try to make sound fx works with the FT driver.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Fri Oct 03, 2008 10:57 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Banshaku wrote:</div><div class="quotecontent">I would have never found that since It was working fine with 1 bank only.</div><br />Well, 1 is a power of 2! =)<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">By the way, is it written on the wiki?  I read about this mapper and never saw anything about it.  My guess is that is not specific to that mapper but it's almost an implied rule on how data should be.</div>
<br />I guess it's common knowledge that ROMs only exist in powers of 2. But yeah, I can see the problem, since iNES allows for non-standard stuff.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>kyuusaku</b> [ Fri Oct 03, 2008 9:52 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />(Bleh I wrote a reply last night, but the server went down before I could post...)
<br />
<br />In addition to the 2^n size ROMs, you should also put your reset code in $E000 for MMC3 since that's the only truly fixed bank, $C000 may be swappable (and pointing to a random bank) depending on an initial register state, but this normally won't be the case with emulators.
<br />
<br />Also remember that MMC3's banks are 8KiB, so your two defined banks are actually four banks and bank 1 still probably won't address correctly.
<br />
<br />BTW, technically you CAN have non 2^n ROM games, just by decoding the small ROM completely or incompletely (open bus or mirrored data in the unused space) using the mapper's output address. The problem is that since this practice is not common, emulators may implement this a number of ways or not at all, but again is completely possible.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Banshaku</b> [ Sat Oct 04, 2008 7:53 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">Well, 1 is a power of 2! =)</div><br /><br />Doh! .... <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />  That show you how much my math are far away and never used these days!... But I would have not guess by context that it was the issue. <br /><br /><br /><div class="quotetitle">kyuusaku wrote:</div><div class="quotecontent">In addition to the 2^n size ROMs, you should also put your reset code in $E000 for MMC3 since that's the only truly fixed bank, $C000 may be swappable (and pointing to a random bank) depending on an initial register state, but this normally won't be the case with emulators.<br /></div><br /><br />Great comment, I will switch it to the right bank.  This mean I have 8k to put all code that never needs to change. Hmmm... This mean the basic init stuff and maybe the soundplayer hmm. Will experiment soon.<br /><br /><div class="quotetitle">kyuusaku wrote:</div><div class="quotecontent">Also remember that MMC3's banks are 8KiB, so your two defined banks are actually four banks and bank 1 still probably won't address correctly.</div><br /><br />I read about that part on the wiki regarding the 8k banks.  Now I need to check how to take advantage of that format.  Now I need to find the right document that explain how to use MMC3. there must be a tutorial somewhere, I'll check the docs I took long time ago from the nesdev main page.<br /><br /><div class="quotetitle">kyuusaku wrote:</div><div class="quotecontent">BTW, technically you CAN have non 2^n ROM games, just by decoding the small ROM completely or incompletely (open bus or mirrored data in the unused space) using the mapper's output address. The problem is that since this practice is not common, emulators may implement this a number of ways or not at all, but again is completely possible.</div>
<br />
<br />Great to know!  I always like to small details.  Thanks for all your comments, always appreciated.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Sat Oct 04, 2008 10:59 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Banshaku wrote:</div><div class="quotecontent">This mean I have 8k to put all code that never needs to change. Hmmm... This mean the basic init stuff and maybe the soundplayer hmm.</div>
<br />8KB is still a lot of space. I wouldn't place the sound engine there though, because the sound engine is useless without the sound data, which means you'll have to switch the data anyway, so it might as well carry the code along with it, specially since sound is something executed at very predictable times (often once per frame, after the graphical updates made during VBlank).
<br />
<br />Personally, I plan on including the music engine in the same bank that contains unrolled code for PPU updates. When the NMI fires, this bank is immediately switched in, all PPU updates are performed and then the sound is called. This isolates a bunch of code that really doesn't need to be mapped at all times.
<br />
<br />You should probably have your main game engine in the always hardwired bank, a bunch of supporting code at the selectable hardwired bank, while the 2 swappable banks would be useful for mapping data, as well as occasional code (such as VBlank code).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sat Oct 04, 2008 2:18 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Banshaku wrote:</div><div class="quotecontent">Great comment, I will switch it to the right bank.  This mean I have 8k to put all code that never needs to change.</div><br />After code in $E000-$FFFF has initialized the mapper, you still have $8000-$9FFF and $E000-$FFFF (total 16 KiB) for the resident set.<br /><br /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">8KB is still a lot of space. I wouldn't place the sound engine there though, because the sound engine is useless without the sound data, which means you'll have to switch the data anyway, so it might as well carry the code along with it</div>
<br />But then you have to copy the sound engine into each bank that has sound data in it, unless you can figure out how to separate all music data vs. all instrument and sound effect data into two separate banks.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Sat Oct 04, 2008 4:09 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">But then you have to copy the sound engine into each bank that has sound data in it, unless you can figure out how to separate all music data vs. all instrument and sound effect data into two separate banks.</div>
<br />No problem for the MMC3, which has 2 switchable areas. The sound engine could probably share a bank with sound effects and instruments, while actual music tracks would be in other banks, and mapped to the other area. After all, there is nothing else going on while the sound engine is running. After returning from the NMI, the main engine would simply switch back the banks with level maps, object placement and whatever (which vary according to the level). I think it's worth it, it saves a lot of space in the hardwired banks that you can use for the main engine, object routines, etc. Object routines can in fact need a lot of space, depending on how many of them are there and how intelligent they are.
<br />
<br />I have no music engine YET, but that's exactly what I plan to do when I make one. I need all the space I can get in the hardwired banks for object logic (even though one of the switchable areas is already reserved for code as well, for a total of 24KB of code for the game engine when outside of VBlank).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sat Oct 04, 2008 5:42 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent"><div class="quotetitle">tepples wrote:</div><div class="quotecontent">But then you have to copy the sound engine into each bank that has sound data in it, unless you can figure out how to separate all music data vs. all instrument and sound effect data into two separate banks.</div><br />No problem for the MMC3, which has 2 switchable areas.</div><br />SMB3 appears to reserve one bank for DPCM during at least the world map and level screens.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">After all, there is nothing else going on while the sound engine is running.</div>
<br />Other than perhaps channel 5 requesting DMAs.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Sat Oct 04, 2008 6:04 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Yeah, well. Then you gotta pick one, you can't have everything, as the NES isn't exactly the most powerful game machine in the world. I was just suggesting how one could make more room for the stuff that absolutely needs to be mapped during the main engine, which can be quite a lot in complex games. If one uses DPCM, then DPCM is one of those things.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Banshaku</b> [ Sun Oct 05, 2008 9:06 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Interesting comments are flowing in the thread. Great stuff from everyone, I like it <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />
<br />
<br /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">I wouldn't place the sound engine there though, because the sound engine is useless without the sound data, which means you'll have to switch the data anyway, so it might as well carry the code along with it, specially since sound is something executed at very predictable times (often once per frame, after the graphical updates made during VBlank).</div>
<br />
<br />I see your point put since the FT driver is at least 3k, to spread it in all banks that contains the music seems a little bit a waste of space. But that's from a beginner's point of view.
<br />
<br />What I would like to do is put some init/basic code in the main bank, the sound engine and stuff that doesn't change here.
<br />
<br />The real code and data of a specific level should be stored in another bank. So is the music and DPCM data.  There is good chance that the music and DPCM data will be in the same bank, which mean the one that will be loaded at $C000.
<br />
<br />What I don't know yet is how to retrieve the data once I switch bank. I can not define the same segment name in every bank so I have to figure out how that part works.  Always the same address to get the data?  That seems extreme, there must be an easier way.
<br />
<br />How do people retreive the same type of data located in different banks? Since the final address may/will be different after the linker does it job, you cannot hard code that part.  How do people approach this problem?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Sun Oct 05, 2008 4:26 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Banshaku wrote:</div><div class="quotecontent">How do people retreive the same type of data located in different banks? Since the final address may/will be different after the linker does it job, you cannot hard code that part.  How do people approach this problem?</div>
<br />It really depends on the type of data you are reading. Some types of data will be more efficiently dealt with if they are in fact mapped to the exact same location. When they are not always in the same locations, you must use pointers to read them:
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp;;setup the pointer<br />&nbsp; &nbsp;lda #&lt;DataLabel<br />&nbsp; &nbsp;sta DataPointer+0<br />&nbsp; &nbsp;lda #&gt;DataLabel<br />&nbsp; &nbsp;sta DataPointer+1<br /><br />&nbsp; &nbsp;;prepare the index register<br />&nbsp; &nbsp;ldy #$00<br /><br />&nbsp; &nbsp;;read the data<br />&nbsp; &nbsp;lda &#40;DataPointer&#41;, y</div><br />This is in fact not different at all from using pointers without bankswitching, except for the fact that you must be sure the bank is selected before attempting to read anything from it, but there is no difference in the actual reading.<br /><br />In a game, you will hardly do it as directly as I did above, because if you knew what label you wanted to read tou could simply do:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp;ldy #$00<br />&nbsp; &nbsp;lda DataLabel, y</div><br />So, as a more realistic example, say you have your level headers (information about the dimensions of the level, it's name, which tileset it uses, etc) scattered around at unpredictable locations. As long as you have a label for each one, you can build a table of pointer like this:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">HeaderPointersLo:<br />&nbsp; &nbsp;.db &lt;Level1Header, &lt;Level2Header, &lt;Level3Header, ...<br />HeaderPointersHi:<br />&nbsp; &nbsp;.db &gt;Level1Header, &gt;Level2Header, &gt;Level3Header, ...</div><br />Through that table, each header can be identified by a number, and have a pointer prepared like this:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp;ldy LevelIndex<br />&nbsp; &nbsp;lda HeaderPointerLo, y<br />&nbsp; &nbsp;sta Pointer+0<br />&nbsp; &nbsp;lda HeaderPointerHi, y<br />&nbsp; &nbsp;sta Pointer+1<br />&nbsp; &nbsp;ldy #$00</div><br />Now you are ready to read the information contained in the header. If you have the headers scattered across multiple banks, be sure to define another table containing the indexes of the banks, so that you also switch in the correct bank using "LevelIndex" as an index.<br /><br />The disadvantage of using indirect indexed addressing (LDA (), Y) is that it's slower than normal indexed addressing. Not only the LDA instruction takes longer, but you have to increments the Y register for reading consecutive bytes. When the address is known, you can read consecutive bytes by adding the displacement to the base address at compile time (and it doesn't even have to be sequential):<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp;lda DataLabel+0, y<br />&nbsp; &nbsp;&#40;...&#41;<br />&nbsp; &nbsp;lda DataLabel+1, y<br />&nbsp; &nbsp;&#40;...&#41;<br />&nbsp; &nbsp;lda DataLabel+8, y<br />&nbsp; &nbsp;&#40;...&#41;</div>
<br />Basically, speed is the reason you will want to keep certain things at fixed locations, such as metatile definitions. Since you have to read them pretty often, you will want to sacrifice some readability for speed. For example, in the case of metatiles, there are a lot of things you have to store about them: the indexes of the 4 tiles that compose them, the palette they use, their type and collision properties, etc. Instead of storing all of that information sequentially for each tile, it's much faster to make separate tables for each piece of information: One list with the indexes of all the top left tiles of all metatiles, then a list of indexes of all the top right tiles, and so on. When the data is organized like that, all the information about a specific metatile can be read with the same index (index of the metatile, 0 to 255) loaded into one of the index registers.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Banshaku</b> [ Sun Oct 05, 2008 8:47 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Great post Tokumaru! Thanks for the information.
<br />
<br />This give me some insight on how to approach the problem.  Of course, at the beginning my code will be terrible and won't be optimized for speed but the first goal is to make it work and write more 6502 code to gain experience. Then, I may be able to do some of the concept you talked about.
<br />
<br />I remember when I didn't know anything about nes coding, I read a little bit the super mario bros dissasembly and was wondering what was those table about, why did they made that.  Now I know why.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Banshaku</b> [ Mon Oct 06, 2008 7:07 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Defining my banks is starting to work well, now my code run at $E000 without issue.  
<br />
<br />I just found one interesting behavior though.  If I want some data at the beginning to be at $8000, Nintendulator reads the last bank I set in my config file.  In the case of FCEUltra, it takes the first one.
<br />
<br />My guess is that that I didn't init witch bank should be at $8000 when the game started in the reset vector and each emulator handle that behavior differently.  Is it the cause of my current issue?
<br />
<br />I will try to figure out how to switch banks during my lunch time and may update this message if I find the solution.  I read the wiki but still doesn't grasp the idea yet.  Once I figure it out, I should write some example for the wiki in the dev section.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>2</strong> of <strong>3</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>