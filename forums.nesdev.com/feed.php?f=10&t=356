<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=10&amp;t=356" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2005-06-14T00:13:56-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=10&amp;t=356</id>
<entry>
<author><name><![CDATA[Memblers]]></name></author>
<updated>2005-06-14T00:13:56-07:00</updated>
<published>2005-06-14T00:13:56-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=356&amp;p=2449#p2449</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=356&amp;p=2449#p2449"/>
<title type="html"><![CDATA[Copying a chunk of memory on the 6502]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=356&amp;p=2449#p2449"><![CDATA[
Instead of CMP #$80 or DEX, you could also simply do:<br /><br />inc $fe<br />bpl loop<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=10">Memblers</a> — Tue Jun 14, 2005 12:13 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Quietust]]></name></author>
<updated>2005-06-14T00:05:33-07:00</updated>
<published>2005-06-14T00:05:33-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=356&amp;p=2447#p2447</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=356&amp;p=2447#p2447"/>
<title type="html"><![CDATA[Copying a chunk of memory on the 6502]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=356&amp;p=2447#p2447"><![CDATA[
Looks correct to me, though there are a few optimizations that can be made, both for code size and speed.<br /><br />1. Instead of manually incrementing the source and desination addresses on each byte, take advantage of the fact that you are doing indirect INDEXED reads and writes; replace the "INC $FB" and "INC $FD" with "INY" (keep the "LDY #$00" as-is) to speed up your code significantly.<br /><br />2. Instead of checking the destination address for $8000, simply use the X register to store the number of pages to copy; replace "LDX #$00" with "LDX #$20" and replace "LDA $FE" and "CMP #$80" with "DEX" to make the code a bit more versatile.<br /><br />Other than that, you've pretty much got the standard method for copying blocks of memory in 6502 ASM.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=7">Quietust</a> — Tue Jun 14, 2005 12:05 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[drk421]]></name></author>
<updated>2005-06-13T22:28:34-07:00</updated>
<published>2005-06-13T22:28:34-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=356&amp;p=2445#p2445</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=356&amp;p=2445#p2445"/>
<title type="html"><![CDATA[Copying a chunk of memory on the 6502]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=356&amp;p=2445#p2445"><![CDATA[
Ok, so this is a relatively simple operation. I'm new to 6502 machine (or for that matter machine code in general), so take it easy.<br /><br />I'm trying to copy a chunk of memory (8192 bytes to be exact), here is my code:<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />lda #$00     ;set our source memory address to copy from, $8000<br />sta $FB<br />lda #$80  <br />sta $FC<br />lda #$00     ;set our destination memory to copy to, $6000, WRAM<br />sta $FD      <br />lda #$60<br />sta $FE<br />ldy #$00     ;reset x and y for our loop<br />ldx #$00<br /><br />Loop:<br />lda [$FB],Y  ;indirect index source memory address, starting at $00<br />sta [$FD],Y  ;indirect index dest memory address, starting at $00<br />inc $FB      ;increment low order source memory address byte by 1<br />inc $FD      ;increment low order dest memory address byte by 1<br />bne Loop     ;loop until our dest goes over 255<br /><br />inc $FC      ;increment high order source memory address, starting at $80<br />inc $FE      ;increment high order dest memory address, starting at $60<br />lda $FE      ;load high order mem address into a<br />cmp #$80     ;compare with the last address we want to write<br />bne Loop     ;if we're not there yet, loop<br /><br />forever:        ;once we finish with memory loop forever<br />jmp forever<br /></div><br /><br />I'm sure there is a better way to do this... But this should work (I think), can anyone see why?<br /><br /><br />Thanks<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=45">drk421</a> — Mon Jun 13, 2005 10:28 pm</p><hr />
]]></content>
</entry>
</feed>