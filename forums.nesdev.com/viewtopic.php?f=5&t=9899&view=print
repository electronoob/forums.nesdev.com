<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - SNES vs Genesis</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">SNES vs Genesis</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=5&amp;t=9899">http://forums.nesdev.com/viewtopic.php?f=5&amp;t=9899</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>6</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>3gengames</b> [ Thu Mar 07, 2013 9:32 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>SNES vs Genesis</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Where does one beat the other? The Video, sound,  pure power, etc? Just wanted to get some unbiased and technical thought on it...I'll start off by saying:<br /><br />Genesis:<br />68K at 9Mhz. Pretty good, only problem is it takes a ton of cycles to do anything.<br /><br />SNES:<br />65816 at 3.56Mhz. Pretty slow, but offered much more quick general processing but still didn't really out do the Genesis since you can't create clocks at magic. <img src="./images/smilies/icon_surprised.gif" alt=":o" title="Surprised" /><br /><br />What's everyone else takes on the system? In all major areas would be nice if you wanna get in to it. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /> CPU,PPU/VDP,APU,Etc. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Thu Mar 07, 2013 10:07 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: SNES vs Genesis</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Technically they are different. Only when you look at specific things with a numerical rating can you find which scores better.<br /><br />The 68K was certainly far better suited for writing games in a high-level language. 8 general-purpose 8/16/32-bit integer registers and 8 general-purpose 16/32-bit address registers (and also to a limited extent integer), versus a single 16-bit general-purpose register, and two 16-bit indexing registers. No contest.<br /><br />I didn't like the Genesis much. Not very robust case, especially volume slider. Bad controller shape and trigger button layout. Too few buttons. AFAIK no stereo audio out on back, so you had to plug headphone-to-RCA into front, which was very vulnerable to getting hit. Video has annoying vertical artifacts. FM sound resulted in games sounding too similar. Hardware-enforced extra bootup text before game starts on later units. Distorted sound on later units. A few games were great, including music, and I still keep one around to play Michael Jackson's Moonwalker, Quackshot, Target Earth, and Wonder Boy in Monster World.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Fri Mar 08, 2013 4:22 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: SNES vs Genesis</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The SNES is technically supperior in all areas, and the so called faster CPU of the Megadrive is a hoax made by Sega fans, because even if it is clocked faster it needs more cycles to do anything making it roughly the same computing power as the SNES' CPU.<br />This is not surprising as the SNES is more recent

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Fri Mar 08, 2013 5:38 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: SNES vs Genesis</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">3gengames wrote:</div><div class="quotecontent">68K at 9Mhz.</div><br />The clock speed of the Sega Genesis's 68000 CPU is 7.67 MHz. More precisely, it's 15/7 of the NTSC color burst frequency, or 15/7 times the clock speed of the Super NES's 65816 CPU when operating in fast ROM mode. However, the true speed factor is only 15/14 for these reasons:<br /><ul><li>The 68K's data bus is twice as wide. </li><li>The 68K can access its data bus only every four cycles. </li></ul>As for &quot;Blast Processing&quot; in the chipset, the only remotely technical claim I've ever seen about &quot;Blast Processing&quot; is that it refers to high-speed copies from main memory to video memory using the DMA unit. The Super NES can do the same thing.<br /><br /><div class="quotetitle">blargg wrote:</div><div class="quotecontent">The 68K was certainly far better suited for writing games in a high-level language.</div><br />Developer productivity win.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Bad controller shape and trigger button layout. Too few buttons.</div><br />No really usable shoulder buttons, but the later controller does have C, B, A, Z, Y, X.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">AFAIK no stereo audio out on back</div><br />Redesigns had stereo audio out the A/V connector.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Video has annoying vertical artifacts</div><br />Compared to annoying diagonal artifacts on the Super NES.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Hardware-enforced extra bootup text before game starts on later units.</div><br />Game Boy, Game Boy Advance, GameCube, Nintendo DS, and everything later have bootup text as well. (This has been <a href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=9796" class="postlink">parodied</a>.) Worse yet, Wii has no autostart; the player must interact with Disc Channel by pointing at the Sensor Bar with a Wii Remote even if the game can be played without the Sensor Bar.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dwedit</b> [ Fri Mar 08, 2013 6:30 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: SNES vs Genesis</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />You can remove the auto start stuff from the DS and the Wii.  In fact, my Wii overheats and crashes 95% of the time whenever it tries to run the Wii menu.  The only thing that makes the Wii usable is Bootmii auto-booting the Homebrew Channel, and the ability to run Gecko OS to boot disc games.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Fri Mar 08, 2013 6:42 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: SNES vs Genesis</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">blargg wrote:</div><div class="quotecontent">Not very robust case</div><br />Really? I still own the Genesis I had as a kid and I dropped it from a fairly high place (the top of a VCR which was on top of a cabinet) quite a few times (my brother and I often pulled the controller cord too hard!), but it has hardly any scratches, and works perfectly.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">especially volume slider.</div><br />Mine is in great shape, and I abused that as a kid too. The one in the japanese Mega Drive I bought more recently for US$10 is perfect too.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Bad controller shape and trigger button layout. Too few buttons.</div><br />I like it. Maybe it has to do with what we used as kids. If you had a SNES you'll probably find the Genesis controller weird and vice-versa. I love the SNES, but I prefer the Genesis controller (the SNES controller is too small, the directional button is not as responsive, etc.). Like tepples said, more buttons came later.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">AFAIK no stereo audio out on back, so you had to plug headphone-to-RCA into front, which was very vulnerable to getting hit.</div><br />Yes, this is true for the first model. Not that it bothered me when I was a kid, since I only had RF and my TV wasn't even stereo.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Video has annoying vertical artifacts.</div><br />I can hardly see that on my (PAL-M transcoded) Genesis, but it's very noticeable on the japanese MD (not sure if it's still NTSC or has been modded).<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">FM sound resulted in games sounding too similar.</div><br />Little sound memory on SNES results in muffled sound, like if you had your head inside a bucket.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Hardware-enforced extra bootup text before game starts on later units.</div><br />Doesn't bother me at all.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Distorted sound on later units.</div><br />Can't really comment on that, as I've never seen (or heard the sound of) such units. From what I read, this was the case with cheap Genesis-on-a-chip consoles not manufactured by SEGA (even if they were licensed by SEGA).<br /><br />IMO, SNES wins mostly on graphics (more colors, more layers, more effects, slightly lower resolution though), the rest is debatable. Everyone seems to think that SNES sound is God, but it has some serious shortcomings too (it's often muffled as hell because of highly compressed samples), so I really can't give it a win. Genesis music sound really crisp, even if the instruments are repetitive, so both have pros and cons.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Fri Mar 08, 2013 7:04 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: SNES vs Genesis</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">I can hardly see that on my (PAL-M transcoded) Genesis, but it's very noticeable on the japanese MD (not sure if it's still NTSC or has been modded).</div><br />PAL/M is likely to hide a lot of encoding stage sins. For one thing, the Pr component of the color subcarrier inverts phase every line.<br /><br /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">Little sound memory on SNES results in muffled sound, like if you had your head inside a bucket.</div><br />I'm pretty sure that's because samples weren't properly equalized for the Super NES DSP's Gaussian interpolation method. It's possible to make sounds not muffled by applying a pre-emphasis EQ before encoding them with BRR. If I were to get into Super NES development, I'd probably write a short script in numpy to find the proper pre-emphasis curve to make it sound like the more common cubic spline interpolation.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>TmEE</b> [ Fri Mar 08, 2013 8:31 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: SNES vs Genesis</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />This thread makes me laugh...<br /><br />EDIT :<br />I am not as infinitely familiar with SNES as I am with MD and SMS but here goes :<br /><br />Sprite setup is a lot more flexible on MD. You get grouping and chaining from hardware, all the tile layout is linear, you can use any of the 16 possible sizes at any time on any sprite. Sprites can use all of VRAM and coordinates are all flat. You can multiplex sprites too if you can fit at least one VRAM write next to sprite table changes, or the internally cached table is not updated. I could fill 32 x 240 area with just one sprite.<br /><br />VRAM can be updated any time on MD, you will never get missed writes or reads. There is a 4 stage FIFO on the data port too so you can freely blast in small bursts of data during active scan time. Though when FIFO is overflowed the CPU is stalled. There are 18 access slots per line in active scan, one slot every 16 pixels, and one VRAM refresh cycle every 16 pixels, so only 3 slots per 64 pixels. In passive scan you can never overwhelm the FIFO, the VDP can take one access every 2 pixels, totalling 198 slots per line (with refresh slots every 64 pixels as before). DMA can use up ALL the access slots because it is VDP itself that is doung it.<br />There's 313 lines in 50Hz and 262 lines in 60Hz, which of 224 or 240 (only possible in 50Hz) are active. That gives such kind of figures on VDP access :<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">+------------+---------+--------+<br />| Line width | Passive | Active |<br />+------------+---------+--------+<br />| 256 pixels |&nbsp; &nbsp;161&nbsp; &nbsp;|&nbsp; &nbsp;16&nbsp; &nbsp;|<br />| 320 pixels |&nbsp; &nbsp;198&nbsp; &nbsp;|&nbsp; &nbsp;18&nbsp; &nbsp;|<br />+------------+---------+--------+<br /><br />+----+------------+---------+---------+---------+<br />| Hz | Resolution | Passive | Active&nbsp; |&nbsp; Total&nbsp; |<br />+----+------------+---------+---------+---------+<br />| 60 | 256 * 224&nbsp; |&nbsp; &nbsp;6118&nbsp; |&nbsp; &nbsp;3584&nbsp; |&nbsp; &nbsp;9702&nbsp; |<br />|&nbsp; &nbsp; | 320 * 224&nbsp; |&nbsp; &nbsp;7524&nbsp; |&nbsp; &nbsp;4032&nbsp; |&nbsp; 11556&nbsp; |<br />+----+------------+---------+---------+---------+<br />| 50 | 256 * 224&nbsp; |&nbsp; 14329&nbsp; |&nbsp; &nbsp;3584&nbsp; |&nbsp; 17913&nbsp; |<br />|&nbsp; &nbsp; | 320 * 224&nbsp; |&nbsp; 17622&nbsp; |&nbsp; &nbsp;4032&nbsp; |&nbsp; 21654&nbsp; |<br />|&nbsp; &nbsp; | 256 * 240&nbsp; |&nbsp; 11753&nbsp; |&nbsp; &nbsp;3840&nbsp; |&nbsp; 15593&nbsp; |<br />|&nbsp; &nbsp; | 320 * 240&nbsp; |&nbsp; 14454&nbsp; |&nbsp; &nbsp;4320&nbsp; |&nbsp; 18774&nbsp; |<br />+----+------------+---------+---------+---------+<br />Number of tiles that can be transferred :<br />+----+------------+---------+---------+---------+<br />| Hz | Resolution | Passive | Active&nbsp; |&nbsp; Total&nbsp; |<br />+----+------------+---------+---------+---------+<br />| 60 | 256 * 224&nbsp; |&nbsp; &nbsp;191&nbsp; &nbsp;|&nbsp; &nbsp;112&nbsp; &nbsp;|&nbsp; &nbsp;303&nbsp; &nbsp;|<br />|&nbsp; &nbsp; | 320 * 224&nbsp; |&nbsp; &nbsp;235&nbsp; &nbsp;|&nbsp; &nbsp;126&nbsp; &nbsp;|&nbsp; &nbsp;361&nbsp; &nbsp;|<br />+----+------------+---------+---------+---------+<br />| 50 | 256 * 224&nbsp; |&nbsp; &nbsp;447&nbsp; &nbsp;|&nbsp; &nbsp;112&nbsp; &nbsp;|&nbsp; &nbsp;559&nbsp; &nbsp;|<br />|&nbsp; &nbsp; | 320 * 224&nbsp; |&nbsp; &nbsp;550&nbsp; &nbsp;|&nbsp; &nbsp;126&nbsp; &nbsp;|&nbsp; &nbsp;676&nbsp; &nbsp;|<br />|&nbsp; &nbsp; | 256 * 240&nbsp; |&nbsp; &nbsp;367&nbsp; &nbsp;|&nbsp; &nbsp;120&nbsp; &nbsp;|&nbsp; &nbsp;487&nbsp; &nbsp;|<br />|&nbsp; &nbsp; | 320 * 240&nbsp; |&nbsp; &nbsp;451&nbsp; &nbsp;|&nbsp; &nbsp;135&nbsp; &nbsp;|&nbsp; &nbsp;586&nbsp; &nbsp;|<br />+----+------------+---------+---------+---------+</div><br /><br />The numbers in 50Hz are pretty big compared to 60Hz. I would love to see exact numbers of SNES PPU access.<br /><br />One other cool thing that you can do with the VDP is displaying a 512 color flat bitmap at cost of reduced CPU time (proportional to bitmap size). You set up the DMA to Color RAM and put auto-incremeth value to Zero. Now you overwhelm the FIFO to gain synchronity to the VDP, disable VDP rendering and start a DMA transfer. This gives you a 198 or 161 pixel wide flat bitmap with pixel format like this :<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">xxxxRRRxGGGxBBBx</div><br /><br />It is nicely 16 bits too and what 68K can deal with very well. Only problem is that these CRAM pixels are 2 screen pixels wide, with a 4 pixel wide CRAM pixels where VRAM refresh slots are. There are 4 refresh cycles visible, and some in normally invisible screen area.<br />This method also allows to show full screen image, 288 lines in 50Hz and 240 lines in 60Hz. But as said earlier the CPU is halted during this time so it is pretty much limited to slide shows when the image is large. You also cannot start the bitmap during passive scan as you cannot overwhelm the FIFO, you can only do it in active scan.<br />This is a lot more useful in MegaCD applications though where the other CPU can render a new bitmap while MD side is displaying one.<br />Cycle counting is impossible, MD is an async design. One Z80 or VDP access or interrupt is enough to ruin all the precision.<br /><br />Are there any artifacts on SNES when you update a Color RAM entry midline ? On MD you get one pixel in the access slot point with the color of the color being written to the CRAM. This is because the CRAM is single port and you either have missed write or missed read. Write happens and when the color is read the value being written to is read instead.<br /><br />...and now I remembered one more thing... bitplanes. They allow for some neat things but compress badly and are pain to render into when you want to.<br />Without these there would be no 2bpp BG layers modes though... When I work on SMS I wish there were none of that, so I could do some nice optimizations and VRAM use and rendering and tile management. I may be too accustomed to packed pixels though.<br /><br />Z80 in MD is primarly meant for sound management. Unlike the SPC unit, Z80 has full access to ROM and limited access to RAM at all times with no restrictions besides the stupid serial banking register. I can access all the ROM space with no involvement from 68K side.<br />Communication between 68K and Z80 are a bit more complicated because 68K RAM access is restricted, you can only clear a value in it due to bus timing issues. 68K cannot see Z80 RAM at all, until Z80 bus is requested which stops Z80. Then 68K can see ALL the Z80 RAM (and use YM2612, it is on same bus as Z80).<br />The RAM at Z80 side is pretty much only for holding the sound driver, you do not need to put any music or SFX data there, you can read it off ROM directly.<br /><br />As for as sound generation goes, synthesis has its pluses and minuses. Certain sounds are impossible to make without using whole chip for that sound (orchestra hits), but most stuff is. My most I mean it. FM is extremely versatile and powerful, but with about 50 parameters per sound it gets overwhelming when you don't know what you are doing. ADSR of the FM chips is more natural in a way that sound is not forced back to zero on a new note, like it seems to be on the SPC. When you tap a key or string on an instrument the sound gets louder and louder and wont go silent for a moment. You have to use software envelopes to overcome that on the SPC.<br />BRR compression is weird stuff. 4 bit samples that can be filtered to sound less bad, but still bad... Sample RAM is very limited and looping is restricted to block sizes, and many games have badly looped sounds because of it. Lot of games use looping on percussion instruments and it sounds rather... horrible, I don't have a better word to describe it. Other problem with samples is that you really do not get a good range on a sample, only few octaves before the sound gets very different from what it should sound like, there's also no way to shape the timbre of the sound either. On FM you can have really dynamic sounds and you have nearly full octave range on any sound you create. 53KHz sample rate really helps too with the crispness and range.<br />I do like smooth panning that the SPC can do, and the negative volumes. Some neat stuff can be done this way. I wish I could invert output of a channel on the YM chip...<br /><br />I'll stop for now, when you have questions about MD inner workings I can most probably answer.<br /><br />EDIT 2 :<br />Answer to the post below : This stuff is gone through so many millions of time by now... what makes me laugh is some of the ignorance and stubbornness that make such threads appear again from time to time.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Fri Mar 08, 2013 9:05 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: SNES vs Genesis</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Why, because it was doomed to irrelevance from the start? (SNES versus Genesis)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Shiru</b> [ Fri Mar 08, 2013 10:15 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: SNES vs Genesis</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">TmEE wrote:</div><div class="quotecontent">looping is restricted to block sizes, and many games have badly looped sounds because of it.</div><br />This is the most annoying thing in the SNES sound. It is really difficult to make a nicely looped samples other than simple (hand drawn even) waveforms, you have to resample sound to a frequency where a period gets into multiply of 16 samples, do all kind of crossfades to smooth out the transition, and it still sounds bad. Also those clicks, because release stage takes fixed amount of time, and any major volume change or starting a new sample before release goes to zero makes a click. Damn thing.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Fri Mar 08, 2013 10:31 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: SNES vs Genesis</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />BRRTools can be configured to automatically resample samples so they are at a multiple of 16 bytes. Several different resampling algorithms are available, so hopefully at least one of them will have decent results.<br /><br />And I agree the click on new notes are annoying, but this can be easily solved by delaying all keys on by one &quot;frame&quot; (by &quot;frame&quot; I mean instance of the sound engine). This way, if a key off and key on happens at the same time, there is room to first key off the sample (the hardware takes care to make it goes to silent smoothly without clicks) then on the next frame you start the new note properly.<br />This is not restricted to the SNES and is the only way to make a consistent transition between two notes on a channel.<br /><br />About the fixed release time, you are free to implement your own release by using the enveloppe mechanism. Same goes with volume changes.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Why, because it was doomed to irrelevance from the start? (SNES versus Genesis)</div><br />As a side note, Sega's rival console with SNES was named Megadrive I don't know why people insist on calling it Genesis which is a music band's name... it sounds weird to me.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Shiru</b> [ Fri Mar 08, 2013 10:54 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: SNES vs Genesis</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I can tell you from my practice of writing a music driver and making SNES music for my projects that it isn't all that easy. Could be solved, but still, quite a headache.<br /><br />To be fair, Genesis has keyon clicking issues too, but at least no looping problems, and generally it felt much easier and comfortable to make Genesis music.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Fri Mar 08, 2013 11:12 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: SNES vs Genesis</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />In the US, it was SEGA Genesis and Super NES. In Japan, it was the Super Famicom, not SNES, so it's a matter of choosing one of the two names for each system.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>WedNESday</b> [ Fri Mar 08, 2013 1:28 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: SNES vs Genesis</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />To be honest I've never even heard of a group called SNES.<br /><br />Genesis rock. I love Phil Collins.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>MottZilla</b> [ Fri Mar 08, 2013 1:53 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: SNES vs Genesis</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">The SNES is technically supperior in all areas, and the so called faster CPU of the Megadrive is a hoax made by Sega fans, because even if it is clocked faster it needs more cycles to do anything making it roughly the same computing power as the SNES' CPU.<br />This is not surprising as the SNES is more recent</div><br /><br />I don't think so. Since both CPUs are radically different it's hard to compare. But the 68000 in the Sega Genesis (the name is appropriate as it was very popular in North America where it went by that name) probably is faster or rather it offers more computation time for games. The SNES CPU was under powered. Perhaps due to the time between when it was designed and when it was released. But I really doubt that &quot;it needs more cycles to do anything&quot; is a fair assessment. You're going to write programs differently between the two processors so it makes things harder to compare. The difference in speed/performance probably isn't as dramatic has fanboys will make it out to be. One thing to consider is the PC-Engine which has a 65xx type CPU that is clocked at over 7mhz. So it is the same family as the SNES with a CPU going atleast twice as fast. <br /><br />My main complaint about the Genesis hardware was and still is that I think they should have allowed for more palette memory to boost the overall amount of color palettes available to backgrounds and sprites. The 4 palette sets for a technical 64 colors at once is too few. The PC-Engine had 32 palette sets! Perhaps too much. SNES had 16 palette sets (256 colors) which was a good spot. I think it would have had a great benefit to Genesis graphics if sprites and backgrounds had separate palette memory banks, basically 4 * 16 colors for BG, and another 4 * 16 colors for Sprites for 128 colors. I think it would have been sufficient to dull the gap between SNES and Genesis. And I don't think the cost in hardware would be been too great to add logic and the memory to support that. <br /><br />The key thing to remember in all of this debate is that both consoles had games that utilized what was available to them very well and resulted in great games. Both systems in the right hands could produce amazing results.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>6</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>