<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=2&amp;t=17643" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2018-08-11T09:56:33-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=2&amp;t=17643</id>
<entry>
<author><name><![CDATA[Banshaku]]></name></author>
<updated>2018-08-11T09:56:33-07:00</updated>
<published>2018-08-11T09:56:33-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=17643&amp;p=223296#p223296</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=17643&amp;p=223296#p223296"/>
<title type="html"><![CDATA[Re: what are common bugs when doing collision detection?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=17643&amp;p=223296#p223296"><![CDATA[
With that pseudo-code it looks quite clean!<br /><br />In my current code, I have a &quot;manager&quot; for the player and there is a method to check the input.  This is called from the main loop of the current stage. The only thing is since my test assets is mega man, the actor has many state based on specific condition, causing the animation to change. For now I did the change of pointer when the status change but that causes a lot of duplicate code. I need to refactor that mess soon. For now, this is more than enough for testing.<br /><br />What I'm learning from it is that it is hard to make something generic if the game contains many state for animation and have specific context change based on many movement (which mega man has). It's hard to reproduce something just from looking at it, that's for sure.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3559">Banshaku</a> — Sat Aug 11, 2018 9:56 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[na_th_an]]></name></author>
<updated>2018-08-10T14:00:48-07:00</updated>
<published>2018-08-10T14:00:48-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=17643&amp;p=223253#p223253</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=17643&amp;p=223253#p223253"/>
<title type="html"><![CDATA[Re: what are common bugs when doing collision detection?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=17643&amp;p=223253#p223253"><![CDATA[
I do as suggested, deal with axes separately. Do everything for one axis, then for the next. When checking for collision, I usually use two points (or three if the collision box is bigger than collidable metatiles), like this:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">// Vertical<br />// --------<br /><br />// Make acceleration affect velocity (for example, G)<br />vy = vy + g; if (vy &gt; max_vy) vy = max_vy;<br /><br />// Make velocity affect position<br />y = y + vy;<br /><br />// Check for collisions<br />if (vy &gt; 0) {<br />   // Check the two lower vertices of the collision box, reposition, etc.<br />} else if (vy &lt; 0) {<br />   // Check the two upper vertices of the collision box, reposition, etc.<br />}<br /><br />// Extra vertical stuff: jump ,etc.<br /><br />// Horizontal<br />// ----------<br /><br />// Make acceleration affect velocity. In side view, accelerate if pressing D-Pad, deccereate when not.<br />if (pad_left) {<br />   vx = vx - ax; if (vx &lt; -max_vx) vx = -max_vx;<br />} else if (pad_right) {<br />   vx = vx + ax; if (vx &gt; max_vx) vx = max_vx;<br />} else {<br />   if (vx &gt; 0) vx = vx - fx; if (vx &lt; 0) vx = 0;<br />   else if (vx &lt; 0) vx = vx + fx; if (vx &gt; 0) vx = 0;<br />}<br /><br />// Make velocity affect position<br />x = x + vx;<br /><br />// Check for collisions<br />if (vx &gt; 0) {<br />   // Check the two rightmost vertices of the collision box, reposition, etc.<br />} else if (vx &lt; 0) {<br />   // Check the two leftmost vertices of the collision box, reposition, etc.<br />}<br /><br />// etc...<br /></div><br /><br />This is usually pretty strong. I don't do slopes nor anything flashy, tho'.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6012">na_th_an</a> — Fri Aug 10, 2018 2:00 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Banshaku]]></name></author>
<updated>2018-08-10T00:19:33-07:00</updated>
<published>2018-08-10T00:19:33-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=17643&amp;p=223227#p223227</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=17643&amp;p=223227#p223227"/>
<title type="html"><![CDATA[Re: what are common bugs when doing collision detection?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=17643&amp;p=223227#p223227"><![CDATA[
Found the cause of the bug.  It was a fix for a visual &quot;bug/annoyance&quot; that caused this other bug. In my current test data I'm using mega man for testing. When you check an edge and are falling, the animation was switched to jumping state.<br /><br />The problem is if you move fast enough, you could go back on the edge since the velocity has not effected you yet. This gives you a chance on edges but the animation went back to running and ended up that you &quot;landed&quot; on a platform, causing a sound to be played (like the original, I'm testing fx these days). The problem with that is if you do a back and fort on a corner the animation/sound was trigged and it was quite annoying. To remove that &quot;bug&quot;, when this case occurred I gave the actor an additional push downward and made it fall on purpose, which caused that ejection bug when moving fast backward very fast and because of the way the ejection code was written.<br /><br />For now I just removed the extra push and will have to clean-up that part which is too messy. If I keep the &quot;give a chance&quot; to come back on the edge, maybe I will delay by a few frame before the animation is switched and sound played.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3559">Banshaku</a> — Fri Aug 10, 2018 12:19 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[thefox]]></name></author>
<updated>2018-08-09T08:45:09-07:00</updated>
<published>2018-08-09T08:45:09-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=17643&amp;p=223130#p223130</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=17643&amp;p=223130#p223130"/>
<title type="html"><![CDATA[Re: what are common bugs when doing collision detection?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=17643&amp;p=223130#p223130"><![CDATA[
<div class="quotetitle">Sumez wrote:</div><div class="quotecontent"><br />Being off by one pixel to one or more edges is another classic one, as collision detection always raises the &quot;philisophical&quot; question of which side of a pixel coordinate the bounding box of your characters actually begins and ends.<br />Different games might do it in different ways, but it's important to be consistent to avoid bugs.<br /></div><br />I think it's pretty easy to make the &quot;correct&quot; decisions here if you're careful enough, however they might not always be the most performant ones. Of course there are some even more philosophical questions, like should you handle collisions when your object is 0.1 pixels into the platform <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" /><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=80">thefox</a> — Thu Aug 09, 2018 8:45 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[gauauu]]></name></author>
<updated>2018-08-09T08:30:07-07:00</updated>
<published>2018-08-09T08:30:07-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=17643&amp;p=223126#p223126</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=17643&amp;p=223126#p223126"/>
<title type="html"><![CDATA[Re: what are common bugs when doing collision detection?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=17643&amp;p=223126#p223126"><![CDATA[
<div class="quotetitle">Sumez wrote:</div><div class="quotecontent"><br /><div class="quotetitle">gauauu wrote:</div><div class="quotecontent">I've always found <a href="http://higherorderfun.com/blog/2012/05/20/the-guide-to-implementing-2d-platformers/" class="postlink">this blog post on 2d platforming movement</a> to be a great reference in how to manage collision detection and player physics.<br /></div><br /><br />I love this article.</div><br /><br />Yeah, I discovered it after a couple of miserable weekends trying to do ramps. Now I regularly read through it as a refresher before starting any platformer project. I can't recommend it enough.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=7375">gauauu</a> — Thu Aug 09, 2018 8:30 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Banshaku]]></name></author>
<updated>2018-08-09T04:43:51-07:00</updated>
<published>2018-08-09T04:43:51-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=17643&amp;p=223117#p223117</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=17643&amp;p=223117#p223117"/>
<title type="html"><![CDATA[Re: what are common bugs when doing collision detection?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=17643&amp;p=223117#p223117"><![CDATA[
The older code in assembler didn't have those specific issues but had a strange bug that I never found the cause so I decided to try to rewrite in C. Now that bug was fixed but new ones emerged. I think my previous ejection code was unusual, something like if inside a block, go back to previous X position or something like that. Not very good ^^;;; <br /><br />For now it doesn't prevent to develop other aspects but hope I will find them soon just to feel closure on those bugs <img src="http://forums.nesdev.com/images/smilies/icon_lol.gif" alt=":lol:" title="Laughing" /> My next concern will be how easy that engine will be to &quot;change&quot; once I develop my real game. For now I'm using an existing game/style as a template which help me to develop the foundations but how hard it will be to change it to something different is a little bit worrisome but 2d are 2d games so the basics (collisions, basic map transition, entity management) should stay similar to some degree.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3559">Banshaku</a> — Thu Aug 09, 2018 4:43 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Sumez]]></name></author>
<updated>2018-08-09T03:53:35-07:00</updated>
<published>2018-08-09T03:53:35-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=17643&amp;p=223113#p223113</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=17643&amp;p=223113#p223113"/>
<title type="html"><![CDATA[Re: what are common bugs when doing collision detection?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=17643&amp;p=223113#p223113"><![CDATA[
As long as your collision detection is entirely bound to a grid, corner clipping is definitely your worst concern.<br /><br />Being off by one pixel to one or more edges is another classic one, as collision detection always raises the &quot;philisophical&quot; question of which side of a pixel coordinate the bounding box of your characters actually begins and ends.<br />Different games might do it in different ways, but it's important to be consistent to avoid bugs.<br /><br /><div class="quotetitle">gauauu wrote:</div><div class="quotecontent"><br />I've always found <a href="http://higherorderfun.com/blog/2012/05/20/the-guide-to-implementing-2d-platformers/" class="postlink">this blog post on 2d platforming movement</a> to be a great reference in how to manage collision detection and player physics.<br /></div><br /><br />I love this article.<br />It's kind of funny I read through it all before noticing it's written by a guy I used to talk with a lot on IRC during my early game dev days in the late 90s, and when I reconnected with him again later on I made sure to praise him for that article.<br />In fact, I think it's kind of indirectly a part of what lead me into eventually pursuing development on actual retro hardware. I started replicating &quot;the old way&quot; of doing things in my game engines, and ended up figuring out that since I'm doing that anyway, it would be fun to do it the real way. <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" /><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=7819">Sumez</a> — Thu Aug 09, 2018 3:53 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Banshaku]]></name></author>
<updated>2018-08-08T23:53:08-07:00</updated>
<published>2018-08-08T23:53:08-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=17643&amp;p=223095#p223095</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=17643&amp;p=223095#p223095"/>
<title type="html"><![CDATA[Re: what are common bugs when doing collision detection?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=17643&amp;p=223095#p223095"><![CDATA[
For now the engine in mind is for game similar to mega man, ninja gaiden and the like so slopes are not necessary.  I will keep everyone feedback in mind and start debugging the cause of those 2 edge case. Must be just a little something missing.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3559">Banshaku</a> — Wed Aug 08, 2018 11:53 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2018-08-08T21:16:15-07:00</updated>
<published>2018-08-08T21:16:15-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=17643&amp;p=223083#p223083</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=17643&amp;p=223083#p223083"/>
<title type="html"><![CDATA[Re: what are common bugs when doing collision detection?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=17643&amp;p=223083#p223083"><![CDATA[
<div class="quotetitle">Kasumi wrote:</div><div class="quotecontent"><br />Move the object on one axis. Eject the object on that axis. Move the object on the other axis. Eject the object on that axis. And you will not have problems.<br /></div><br />I second this. If you don't do one axis at a time, you may have problems with corners.<br /><br />If you don't want to be unfair to the player, you can carry the order in which you check the axes: when falling down, you can do X first and then Y, to increase the chances of the player reaching a ledge. When going up, do Y first, then X, also to help with ledges. But if you're gonna use the same order every time, I suggest X first.<br /><br />I don't know if you're doing slopes, but if you are, then we have a lot more to discuss!<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Wed Aug 08, 2018 9:16 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Banshaku]]></name></author>
<updated>2018-08-08T18:34:39-07:00</updated>
<published>2018-08-08T18:34:39-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=17643&amp;p=223071#p223071</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=17643&amp;p=223071#p223071"/>
<title type="html"><![CDATA[Re: what are common bugs when doing collision detection?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=17643&amp;p=223071#p223071"><![CDATA[
@dougeff<br /><br />There is no rush. I put that project on hold for almost 10 years so I will first try to find a solution myself and will be more than happy to look at your code later to see if I can improve based on it. Right now that bug is not a blocker and soon I will be able to achieve a big milestone which will be to switch map based on exit point(s) so many bugs will arise anyway <img src="http://forums.nesdev.com/images/smilies/icon_lol.gif" alt=":lol:" title="Laughing" /> Will be more than glad to look at it once it is available.<br /><br />@gauauu<br /><br />I will give it a look, thanks!<br /><br />@Kasumi<br /><br />Right now, if the player is in &quot;JUMPING&quot; state (either going up or down based on velocity) the Y position is calculated and the ejection is done right away. Then if the user is walking, the x position is calculated then the ejection calculated.<br /><br />One thing I realize is that if I'm not moving left/right I don't do any horizontal ejection which could be one possible cause of it. Unless mistaken I do ejection in the following scenario:<br /><br />- first when jumping/falling<br />- when moving left/right I check first the floor then eject if necessary<br /><br />which means, I never eject horizontally if not moving, which could be an issue, hmm..<br /><br />(I see you have updated your post while I was writing and did a quick check. Will in details soon about it. )<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3559">Banshaku</a> — Wed Aug 08, 2018 6:34 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Kasumi]]></name></author>
<updated>2018-08-08T17:38:24-07:00</updated>
<published>2018-08-08T17:38:24-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=17643&amp;p=223066#p223066</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=17643&amp;p=223066#p223066"/>
<title type="html"><![CDATA[Re: what are common bugs when doing collision detection?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=17643&amp;p=223066#p223066"><![CDATA[
Move the object on one axis. Eject the object on that axis. Move the object on the other axis. Eject the object on that axis. And you will not have problems.<br /><br />That is to say:<br />1. Move on X.<br />2. Eject on X.<br />3. Move on Y.<br />4. Eject on Y.<br />Rather than:<br />1. Move on X.<br />2. Move on Y.<br />3. Eject on X.<br />4. Eject on Y.<br /><br />Whether you do Y first or X first depends on what you value.<br />Edit: If you walk right off an edge, then walk left. This could evaluate to:<br />1. Move right on X.<br />2. Eject on X. There's no ejection to be done.<br />3. Move on Y. (Since you're walking, they won't be any movement.)<br />4. Eject on Y. (Check for ground underneath, you'll fall.)<br />Next frame.<br />1. Move left on X.<br />2. Eject on X. (If you fell a pixel in the first frame of being airborne, you'll eject, but that's fine since you had to be further out than the wall to fall in the first place. If you didn't fall a pixel, you'll end up back above the ground.)<br />3. Move on Y. (You might move a bit due to gravity.)<br />4. Eject on Y. (You'll end up in an identical position to where you were the frame before.)<br /><br />It's similar for the corner jump case. If you jump at a corner, you'll always get only one ejection. Either one will make sense.<br /><br />Edit2: The Sequel: This describes separating movement axes with diagrams and such: <!-- m --><a class="postlink" href="https://forums.tigsource.com/index.php?topic=46289.msg1386874#msg1386874">https://forums.tigsource.com/index.php? ... msg1386874</a><!-- m --><br />I do basically that, except I don't check more than two points an axis for objects with a height of width less than the tile size. (Except for slopes...)<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3504">Kasumi</a> — Wed Aug 08, 2018 5:38 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[gauauu]]></name></author>
<updated>2018-08-08T11:25:29-07:00</updated>
<published>2018-08-08T11:25:29-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=17643&amp;p=223035#p223035</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=17643&amp;p=223035#p223035"/>
<title type="html"><![CDATA[Re: what are common bugs when doing collision detection?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=17643&amp;p=223035#p223035"><![CDATA[
I've always found <a href="http://higherorderfun.com/blog/2012/05/20/the-guide-to-implementing-2d-platformers/" class="postlink">this blog post on 2d platforming movement</a> to be a great reference in how to manage collision detection and player physics.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=7375">gauauu</a> — Wed Aug 08, 2018 11:25 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[dougeff]]></name></author>
<updated>2018-08-08T10:04:58-07:00</updated>
<published>2018-08-08T10:04:58-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=17643&amp;p=223026#p223026</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=17643&amp;p=223026#p223026"/>
<title type="html"><![CDATA[Re: what are common bugs when doing collision detection?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=17643&amp;p=223026#p223026"><![CDATA[
I just rewrote the collision code in my C project, a few weeks ago, and will post it on my website in the next month or 2 (whenever I get free time). If you don't mind waiting, you could use that.<br /><br />It's similar to what @tepples said, 4 corners.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=7008">dougeff</a> — Wed Aug 08, 2018 10:04 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Banshaku]]></name></author>
<updated>2018-08-08T09:45:07-07:00</updated>
<published>2018-08-08T09:45:07-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=17643&amp;p=223024#p223024</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=17643&amp;p=223024#p223024"/>
<title type="html"><![CDATA[Re: what are common bugs when doing collision detection?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=17643&amp;p=223024#p223024"><![CDATA[
My current way is quite primitive ^^;; My sprite origin start at the top/left corner (leftover of my previous effort that I need to change someday) I will check 2 points near the feet but the order of testing is based on the direction walking.  <br /><br />For example, if the user is walking right, I will first check first if the point at the bottom left of the feet is still on a surface. If it is, I'm maybe on a edge or a block and don't need to check the second point and continue to be in walking state. If falling, I check the second point on the bottom right to see if there is contact. If there is, then to some degree I'm on a block and can continue walking. If nothing then the actor is now in falling state. The test is reversed when walking left.<br /><br />The reason I test that way is because of my concern/obsession about performance and try to avoid testing as much as I can.  Since the test must be done on every frame , if walking, it &quot;gives&quot; the impression that it is intensive. <br /><br />Maybe I'm worrying too much and should change to another way. The one you are mentioning is interesting. Since the code is in C I guess I could test later a temporary function with that logic but right now my logic call almost to no method to avoid unnecessary call to function (again, concern about performance) so it's 1 big function for input checking and collision.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3559">Banshaku</a> — Wed Aug 08, 2018 9:45 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2018-08-08T09:19:53-07:00</updated>
<published>2018-08-08T09:19:53-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=17643&amp;p=223017#p223017</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=17643&amp;p=223017#p223017"/>
<title type="html"><![CDATA[Re: what are common bugs when doing collision detection?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=17643&amp;p=223017#p223017"><![CDATA[
You could try reading the map at the blocks at the <a href="https://pineight.com/mw/index.php?title=Four-corner_collision_detection" class="postlink">four corners</a> of the actor and then ejecting toward whatever corner is not solid. If the actor's hitbox is bigger than one metatile, treat a block in the middle of a side as being both corners.<br /><br />Are you already doing that?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Wed Aug 08, 2018 9:19 am</p><hr />
]]></content>
</entry>
</feed>