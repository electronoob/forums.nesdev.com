<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Asynchronous game logic</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Asynchronous game logic</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=11075">http://forums.nesdev.com/viewtopic.php?f=2&amp;t=11075</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Movax12</b> [ Thu Mar 06, 2014 11:46 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Asynchronous game logic</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Not sure if I can explain this well, and maybe it's already been explored by someone, but this is my idea:<br /><br />Background:<br />Most (all?) games try to do everything for the game logic during video rendering and get screen updates ready etc and try to beat the render time. If the game doesn't finish processing whatever it needs to do and the next screen is to be drawn then normally we see slowdown. I was thinking that there may be a way to have more complex (I may not have a good example here.) logic running in a way that slowdown shouldn't be a noticeable issue. <br /><br />Idea:<br />Suppose the game is setup with a separate NMI thread structure. <!-- m --><a class="postlink" href="http://wiki.nesdev.com/w/index.php/NMI_thread">http://wiki.nesdev.com/w/index.php/NMI_thread</a><!-- m --><br />Most of the game logic would still operate normally during render time, but if the normal game logic was complete, rather than wait for NMI, the game could switch context to another thread (which if implemented simply is not too hard to do on 6502) that is allowed to calculate something over multiple frames. If this thread is interrupted for NMI, save it's state and switch context back to the main logic after the NMI thread is processed.<br /><br />My thought was that this could help with a more complex enemy AI response, or other things I haven't thought of yet.<br /><br />Of course you would need flags to hold the state of various things and it would a be a bit tricky to setup as there may be race conditions. Is this a valid idea?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>DoNotWant</b> [ Thu Mar 06, 2014 12:17 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Asynchronous game logic</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Something like this? <!-- l --><a class="postlink-local" href="http://forums.nesdev.com/viewtopic.php?t=1292">viewtopic.php?t=1292</a><!-- l -->

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Movax12</b> [ Thu Mar 06, 2014 12:40 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Asynchronous game logic</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />This may be an application of that. <br />Actually, thinking about it more, it may be simpler to have a NMI only thread structure - if the &quot;normal&quot; frame logic is fast enough to always complete on time and then return to the asynchronous thread, rather than managing three states.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Thu Mar 06, 2014 1:19 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Asynchronous game logic</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />So you're saying you want to have 3 threads: main (game logic), NMI (PPU and APU updates), and a new one for various extra calculations, is that it?<br /><br />I don't see this bringing any advantage relative to the regulat 2-thread setup. I mean, if you transfer tasks that would normally be in the main thread to this 3rd thread, and the third thread is interrupted by the NMI, the tasks still won't be completed within a frame's time, so you gain absolutely nothing.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>doynax</b> [ Thu Mar 06, 2014 3:49 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Asynchronous game logic</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I'm doing this in my latest 6502 game project and it does seem to work reasonably well. The trick is finding suitable tasks which may either be completed buffered up ahead of time or non-critical ones which may be allowed to lag behind.<br /><br />For the record this is a C64 game so I'm somewhat more hampered by the hardware. In particular I need to do some heavy lifting in the scrolling (basically a big memcpy) on crossing 8-pixel tiles. Still, this sort of uneven load is common to all systems to one degree or another and any help in spreading the pain to avoid running over budget on spiky frames is much appreciated. Plus even with an even load it may still be preferable to miss every N frames instead of running at a steady 25/30 Hz (the unintentional bullet-time is often appreciated but the sudden cross-over tends to get me killed in twitch games.)<br /><br />In my particular case I upload/mirror player sprite during spare cycles, but on running out of time I stick with the previous frame. There is also some loading and decompression going on in the background though aside from music that really only goes on during room transitions.<br /><br />One cycle-hog of a sub-system which ought to be eminently suitable for prebuffering is music playback though I haven't yet managed to modify a playroutines to do this while mixing in channel-stealing real-time sound effects.<br /><br />Another alternative would be to buffer up multiple OAM frames (along with scrolling coordinates, palette changes, etc) and allow the whole game to run ahead. Unfortunately the details of the buffering can get surprisingly involved, especially if you ever need to feed any information back to the game logic.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Movax12</b> [ Thu Mar 06, 2014 4:08 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Asynchronous game logic</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">So you're saying you want to have 3 threads: main (game logic), NMI (PPU and APU updates), and a new one for various extra calculations, is that it?</div><br /><br />Based on my 1st post, yes.<br /><br /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">I don't see this bringing any advantage relative to the regulat 2-thread setup. I mean, if you transfer tasks that would normally be in the main thread to this 3rd thread, and the third thread is interrupted by the NMI, the tasks still won't be completed within a frame's time, so you gain absolutely nothing.</div><br /><br />Maybe an example of how I am thinking: Imagine really smart 2 player vs CPU Tetris game. You code the game normally and maybe even have some basic AI to deal with the next piece, but have an asyc thread running to do a deeper analysis of what the best move is that is not hampered by having to care that a VRAM update is due. When it is ready to make a change to the gameplay, it can set a flag that the normal frame code can check.. or something like that.<br /><br />Or if you have a number of enemy objects, you could use this idea to make one or more of them smarter: Even if it takes 5 seconds for a &quot;smart&quot; decision, and set a change in an objects state, the player won't notice if the basic code is doing a good enough job of managing the &quot;normal&quot; tasks.<br /><br />Or variations thereof. Does that make more sense, or ?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Thu Mar 06, 2014 4:35 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Asynchronous game logic</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Yes, that makes more sense. I was looking at this all wrong, thinking it was supposed to reduce slowdown, but in fact this is a way to make use of the time that's usually wasted just waiting for VBlank. It's actually a very interesting way to perform non-essential tasks that could improve the overall experience, without sacrificing anything.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Movax12</b> [ Thu Mar 06, 2014 5:13 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Asynchronous game logic</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Hopefully the idea could be used to reduce slowdown if there are tasks that can be moved to the asynchronous thread.<br /><br /><div class="quotetitle">doynax wrote:</div><div class="quotecontent">I'm doing this in my latest 6502 game project and it does seem to work reasonably well</div><br /><br />I figured I couldn't be the first person to think of this idea.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tomaitheous</b> [ Thu Mar 06, 2014 8:51 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Asynchronous game logic</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Not exactly what you have in mind, but a few PC-Engine games use a 3 thread process; vblank/hblank interrupt stuff, game code, and a background process that decompresses LZSS stuff for future vram updates. I assume the game knows how long the LZSS background decompress processing takes, and calls it ahead of time. Gate of Thunder does this, and even on the hardest setting with tons of action on screen - nothing slows down. Ever.<br /><br /><br /> That said, I wonder of parts of the main game logic could start as soon as the last 'frame' finished, instead of just waiting for vblank flag (for vblank related stuffs). I assume that's more along the lines of what you mean?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Thu Mar 06, 2014 9:28 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Asynchronous game logic</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />On NES, it'd essentially be the Super Mario Bros. structure (NMI calls VRAM update and then the next frame's game code) with an LZSS decompressor instead of the <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">forever: jmp forever</tt>.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>psycopathicteen</b> [ Sun Mar 09, 2014 11:18 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Asynchronous game logic</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Perfect place to do sprite rotation.

		
			<br clear="all" /><br />

			<table class="tablebg" width="100%" cellspacing="1">
			<tr>
				<td><b class="genmed">Attachments: </b></td>
			</tr>
			
				<tr>
					<td>
			<span class="genmed">
				<img src="./styles/subsilver2/imageset/icon_topic_attach.gif" width="14" height="18" alt="" title="" /> 
				<a href="./download/file.php?id=1324">gunstar heroes.zip</a> [26.36 KiB]
			</span><br />
			<span class="gensmall">Downloaded 53 times</span>
		

		<br />
	</td>
				</tr>
			
			</table>
		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>