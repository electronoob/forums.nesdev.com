<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Explanation for how different processor cores are connected?</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Explanation for how different processor cores are connected?</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=5&amp;t=17333">http://forums.nesdev.com/viewtopic.php?f=5&amp;t=17333</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>2</strong> of <strong>2</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>pubby</b> [ Tue May 08, 2018 11:35 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Explanation for how different processor cores are connec</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The built-in prefetcher tends to be pretty good though. PREFETCH makes code slower in many cases.<br /><br /><div class="quotetitle">Espozo wrote:</div><div class="quotecontent">I don't know how it would do this for a single intensive program that wants to use the system's full resource; I wouldn't think you could just generically divide up the load, not only because how would you even divide it in the first place, but because obviously programs are going to assume things are going to be processed linearly.</div><br />It's stupidly hard. See: concurrent programming. The billion dollar question is how to generically parallelize things.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Tue May 08, 2018 12:20 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Explanation for how different processor cores are connec</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">pubby wrote:</div><div class="quotecontent">The built-in prefetcher tends to be pretty good though. PREFETCH makes code slower in many cases.</div><br />Built in prefetching works well for some access patterns (esp. serial/linear access), and in a similar way you can often improve performance by reorganizing how your data is stored, which doesn't in itself require manual cache control, and is probably a better first approach to cache optimization if your data structures are still malleable.<br /><br />A misused manual prefetch absolutely does make code slower, but IMO if you're effectively using manual cache control you should already measuring its effect to make sure, so you shouldn't fall into this trap unless you're using it blindly.<br /><br />For instruction prefetching, the automated version tends to work quite well (the main mitigating factor here is branch prediction), since code mostly runs linearly anyway. I've never actually seen manually prefetched code, only data, though I'm sure there's a use case out there somewhere.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>psycopathicteen</b> [ Wed May 09, 2018 3:30 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Explanation for how different processor cores are connec</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I remember the late 90's, early 2000's computers where speed was VERY unpredictable.  Every time there was slightly too much going on, the computer would go from 60 fps to 5 fps.  I'm guessing it's a combination of cache misses, and hard-drive reading/writing.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Wed May 09, 2018 3:57 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Explanation for how different processor cores are connec</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />When you're multitasking, if two programs you're running need to share more RAM than you have available, when the OS switches between them it will temporarily copy RAM to the hard drive to make room. Or even if one program requests too much RAM (web browsers are notorious memory hogs) it may page some of it to the hard disk.<br /><br />I think the larger availability of RAM has made a huge difference for this, which is not the only cause of unpredictable performance loss but it was definitely a major one. You might also consider this a caching issue, as the physical RAM is essentially a faster cache for the larger virtual RAM space including the hard drive.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>adam_smasher</b> [ Wed May 09, 2018 5:57 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Explanation for how different processor cores are connec</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />A couple of other technology improvements that have helped: SSDs mean the difference between disk and memory access is no longer quite so dramatic; multicore processors mean that other processes are less likely to steal your compute time out from underneath you.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Wed May 09, 2018 6:57 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Explanation for how different processor cores are connec</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Oh yeah, and there's also hybrid SSDs where you have a smaller SSD operating on top of a larger traditional hard drive, again a form of cache. Actually hard drives generally have varying types of cache devices, all of it internal and transparent to the interface, usually. Also helps with durability, e.g. you can hold data in the cache if sudden movement is detected to try and prevent a crash.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Wed May 09, 2018 7:08 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Explanation for how different processor cores are connec</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">rainwarrior wrote:</div><div class="quotecontent">Cache is a more generic term, it's not memory-specific. A cache optimization stores some result and reuses it, instead of having to do it the &quot;long&quot; way. That long way could refer to a slow main memory fetch, or it could be some kind of computation, etc.</div><br />For some more reference on this: <a href="https://en.wikipedia.org/wiki/Memoization" class="postlink">Memoization</a> is a term that describes the technique of result caching, and strongly correlated with this is <a href="https://en.wikipedia.org/wiki/Dynamic_programming" class="postlink">Dynamic Programming</a> which is a large family of algorithms that can be made very efficient by caching results progressively.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>koitsu</b> [ Wed May 09, 2018 7:34 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Explanation for how different processor cores are connec</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">adam_smasher wrote:</div><div class="quotecontent">A couple of other technology improvements that have helped: SSDs mean the difference between disk and memory access is no longer quite so dramatic; multicore processors mean that other processes are less likely to steal your compute time out from underneath you.</div><br />Yes, all true, except <a href="http://www.brendangregg.com/blog/2017-05-09/cpu-utilization-is-wrong.html" class="postlink">no longer is CPU load what we expect</a> (and <a href="https://www.youtube.com/watch?v=QkcBASKLyeU" class="postlink">here's a 5 minute presentation</a> of the same content from the same author).  Thanks, Meltdown/Spectre!

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>93143</b> [ Wed May 09, 2018 8:09 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Explanation for how different processor cores are connec</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">adam_smasher wrote:</div><div class="quotecontent">multicore processors mean that other processes are less likely to steal your compute time out from underneath you.</div><br />Even core multithreading by itself helps.  Without it, multitasking had a lot of overhead on a single-core CPU because the OS could only run one thread at a time, and every time it switched tasks the CPU had to get rid of what it was doing and start from scratch on the new thread.  This meant that a single high-priority process could basically stall the whole machine.  When I got a Pentium 4 Prescott (single-core hyperthreading) in 2004, I stopped having this problem - Matlab could get stuck in a tight loop and forget to listen to the command line just like before, but Windows still worked fine around it.  I could run Emulator X and DOSBox (both CPU hogs) in parallel without hiccups, to get realistic orchestra music out of TIE Fighter.  It was pretty neat for the time, I thought...  at least during winter, with an aftermarket cooler...

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>2</strong> of <strong>2</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>