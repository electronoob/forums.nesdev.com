<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=23&amp;t=16351" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2017-08-12T16:08:18-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=23&amp;t=16351</id>
<entry>
<author><name><![CDATA[lidnariq]]></name></author>
<updated>2017-08-12T16:08:18-07:00</updated>
<published>2017-08-12T16:08:18-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=16351&amp;p=202340#p202340</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=16351&amp;p=202340#p202340"/>
<title type="html"><![CDATA[N64 Modeline]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=16351&amp;p=202340#p202340"><![CDATA[
As far as I can tell, the underlying hardware in the N64's Video Interface supports:<br /><br />* A constant pixel clock, approximately 12.3MHz (exactly NTSC×17÷5 or PAL×14÷5)<br />* Something like a standard Xfree86 modeline specifying active width/height, total width/height, sync length and relative start times, but separate values for even and odd fields when interlaced<br />* A bilinear interpolator or nearest-neighbor with a fixed-point scaler to expand (or shrink) the framebuffer to fit the actual output stage.<br /><br />So ... it looks like it should be able to natively draw anything that's remotely sane with that low of a pixel clock, such as 320x480@60Hz.<br /><br />Has anyone ever written a program that would natively play around with the parameters? I know that most N64s don't generate an output format that would accept higher hsync rates...<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3512">lidnariq</a> — Sat Aug 12, 2017 4:08 pm</p><hr />
]]></content>
</entry>
</feed>