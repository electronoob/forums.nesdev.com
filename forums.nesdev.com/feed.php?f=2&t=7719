<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=2&amp;t=7719" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2011-05-06T20:15:36-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=2&amp;t=7719</id>
<entry>
<author><name><![CDATA[Zepper]]></name></author>
<updated>2011-05-06T20:15:36-07:00</updated>
<published>2011-05-06T20:15:36-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7719&amp;p=77784#p77784</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7719&amp;p=77784#p77784"/>
<title type="html"><![CDATA[Mirroring mask for Palette index table]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7719&amp;p=77784#p77784"><![CDATA[
addr ^ 0x10<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=39">Zepper</a> — Fri May 06, 2011 8:15 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[bmac6502]]></name></author>
<updated>2011-05-06T19:04:22-07:00</updated>
<published>2011-05-06T19:04:22-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7719&amp;p=77781#p77781</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7719&amp;p=77781#p77781"/>
<title type="html"><![CDATA[Mirroring mask for Palette index table]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7719&amp;p=77781#p77781"><![CDATA[
One more update. The above is not quite right. It mirrors the high four index values down, but does not mirror the low four index values up. Fixing it isn't hard though.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4860">bmac6502</a> — Fri May 06, 2011 7:04 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[bmac6502]]></name></author>
<updated>2011-05-06T00:09:48-07:00</updated>
<published>2011-05-06T00:09:48-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7719&amp;p=77739#p77739</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7719&amp;p=77739#p77739"/>
<title type="html"><![CDATA[Mirroring mask for Palette index table]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7719&amp;p=77739#p77739"><![CDATA[
Ok, after working it all out...The values ARE only mirrored between the pairs. linking all of the values together does not produce correct results.<br />Also, ignoring pairs other than $00/$10 does not produce correct results either. It appears that in order to get correct behavior from the hardware, it must perform the full mirroring as described on the NESDev wiki.<br /><br />With the in mind, I knew I had something with the identification that the two low bits provided an indication of mirrored values, but I definitely wasn't happy with the convoluted series of bit ops that I arrived at. Thanks to Drag, as both of his observations are excellent. Here is what I finally arrived at:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">void write&#40;addr, value&#41;<br />&#123;<br />   addr&amp;=0x3F1F;<br />   palIdx&#91;addr&#93; = value;<br />   if&#40;addr &amp; 0x3&#41;<br />   &#123;<br />      palIdx&#91;addr&amp;0x3F0F&#93; = value; <br />   &#125;<br />&#125;<br /><br />byte read&#40;addr&#41;<br />&#123;<br />   return palIdx&#91;addr&amp;0x3F1F&#93;;<br />&#125;</div><br /><br />The way I've done it above, it incorporates both of drag's suggestions. Using an AND with a single conditional to test the lower two bits seems obvious in retrospect. Loading the heavier work on the write side since the reads occur per pixel during render is also a great idea. The write side is two ANDs, a memory store, and a conditional branch which might result in an additional AND + memory store, which isn't too horrible for an infrequent operation. The read is only a single AND at all times.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4860">bmac6502</a> — Fri May 06, 2011 12:09 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Drag]]></name></author>
<updated>2011-05-05T22:03:00-07:00</updated>
<published>2011-05-05T22:03:00-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7719&amp;p=77729#p77729</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7719&amp;p=77729#p77729"/>
<title type="html"><![CDATA[Mirroring mask for Palette index table]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7719&amp;p=77729#p77729"><![CDATA[
Yes, $3F10 is mirrored to $3F00, so when you're writing to $3F10, you're actually writing to $3F00, which is the only address that affects the background color. Sorry if I was a little confusing with my wording. :S<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=21">Drag</a> — Thu May 05, 2011 10:03 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[3gengames]]></name></author>
<updated>2011-05-05T21:51:56-07:00</updated>
<published>2011-05-05T21:51:56-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7719&amp;p=77726#p77726</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7719&amp;p=77726#p77726"/>
<title type="html"><![CDATA[Mirroring mask for Palette index table]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7719&amp;p=77726#p77726"><![CDATA[
But the byte $10 write would be mirrored to $00, changing the universal background color. Right? I am pretty sure the fox said that in another post not very long ago.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4311">3gengames</a> — Thu May 05, 2011 9:51 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2011-05-05T21:50:37-07:00</updated>
<published>2011-05-05T21:50:37-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7719&amp;p=77725#p77725</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7719&amp;p=77725#p77725"/>
<title type="html"><![CDATA[Mirroring mask for Palette index table]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7719&amp;p=77725#p77725"><![CDATA[
<div class="quotetitle">Drag wrote:</div><div class="quotecontent"><br />So I think only writes to $3F00 change the background color, with the other "mirrors" just not having any effect.<br /></div><br />I'm pretty sure you overwrite $3F00 when you write to $3F10.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Thu May 05, 2011 9:50 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Drag]]></name></author>
<updated>2011-05-05T21:39:49-07:00</updated>
<published>2011-05-05T21:39:49-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7719&amp;p=77721#p77721</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7719&amp;p=77721#p77721"/>
<title type="html"><![CDATA[Mirroring mask for Palette index table]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7719&amp;p=77721#p77721"><![CDATA[
The wiki says:<br />Addresses $3F04/$3F08/$3F0C can contain unique data, though these values are not used by the PPU when rendering. Addresses $3F10/$3F14/$3F18/$3F1C are mirrors of $3F00/$3F04/$3F08/$3F0C.<br /><br />So I think only writes to $3F00 change the background color, with the other "mirrors" just not having any effect. The method I posted can still be used if you apply it to a seperate array which contains the actual colors-to-be-displayed-for-these-palette-indices. However, you'd only need to propagate the writes if 00 or 10 is being written to. 04 08 0C 14 18 1C would just not have any visible effect.<br /><br />You'd still need to store the physical value written to the addresses though, and 10, 14, 18, and 1C are indeed mirrors of 00, 04, 08, 0C, so the method the OP mentioned would work fine for this purpose.<br /><br />Though, I have to wonder if something like<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">if &#40;address &amp; 0x0003&#41; &#123;<br />  address unchanged<br />&#125; else &#123;<br />  address &amp; 0x3FEF<br />&#125;<br /></div><br />isn't faster than all of the bit masking/shifting. I mean, in 6502 code, having conditional branches would be faster than all of the shifting and bit manipulation. <img src="http://forums.nesdev.com/images/smilies/icon_wink.gif" alt=";)" title="Wink" /><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=21">Drag</a> — Thu May 05, 2011 9:39 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[3gengames]]></name></author>
<updated>2011-05-05T21:28:58-07:00</updated>
<published>2011-05-05T21:28:58-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7719&amp;p=77720#p77720</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7719&amp;p=77720#p77720"/>
<title type="html"><![CDATA[Mirroring mask for Palette index table]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7719&amp;p=77720#p77720"><![CDATA[
Wasn't color $10 color $0,$4,$8,$C if written last or something like that? The fox first said it in another forum post.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4311">3gengames</a> — Thu May 05, 2011 9:28 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Drag]]></name></author>
<updated>2011-05-05T21:17:23-07:00</updated>
<published>2011-05-05T21:17:23-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7719&amp;p=77717#p77717</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7719&amp;p=77717#p77717"/>
<title type="html"><![CDATA[Mirroring mask for Palette index table]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7719&amp;p=77717#p77717"><![CDATA[
$00, $04, $08, $0C, $10, $14, $18, and $1C are all mirrored to $00, I thought. In this case, you'd also have to apply this logic to the 4th and 3rd bits as well as the 5th bit.<br /><br />If you're looking for the speediest solution, only AND with $1F when you're rendering pixels. Whenever one of the aforementioned palette entries is written to, propagate the change to 00, 04, 08, 0C, 10, 14, 18, and 1C. Trust me, writing to those specific palette entries occurs <em>much less frequently</em> than looking up the color stored there, and only needing one AND operation when you're rendering is much better than having to perform a complex bit-shifting/masking operation for each pixel.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=21">Drag</a> — Thu May 05, 2011 9:17 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[clueless]]></name></author>
<updated>2011-05-05T20:59:06-07:00</updated>
<published>2011-05-05T20:59:06-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7719&amp;p=77716#p77716</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7719&amp;p=77716#p77716"/>
<title type="html"><![CDATA[Mirroring mask for Palette index table]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7719&amp;p=77716#p77716"><![CDATA[
Use a 32-entry array of function pointers to optimized getters?<br /><br />Actually, a 32-case "switch" statement would be optimized by the C/C++ compiler into an array of code pointers, so a regular old switch statement should be fine.<br /><br />Have your compiler produce asm output from its code and look at when it emitted. (or just machine-level debug it in an IDE).<br /><br />You can try a few different techniques and run them all (in a contrived test harness) under a code profiler to see which is fastest.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3664">clueless</a> — Thu May 05, 2011 8:59 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2011-05-05T20:24:44-07:00</updated>
<published>2011-05-05T20:24:44-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7719&amp;p=77712#p77712</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7719&amp;p=77712#p77712"/>
<title type="html"><![CDATA[Mirroring mask for Palette index table]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7719&amp;p=77712#p77712"><![CDATA[
<div class="quotetitle">3gengames wrote:</div><div class="quotecontent"><br />What? NES palette is in the PPU's $3F00-$3F1F space and is mirrored to $3FFF.<br /></div><br />He's talking about the weird mirroring that exists with the first color (0) of each palette. The first color of the 4 background palettes can have unique values, but only the first color of the first palette gets displayed when rendering is enabled (the others can be displayed while rendering is off if the PPU address is pointing to them). The first color of the 4 sprite palettes don't exist at all, and are mirrors of the background palettes.<br /><br />So, even though there are 32 memory positions between $3F00 and $3F1F, the NES only has 28 bytes of actual memory for palettes. What bmac6502 described was a way to locate the actual bytes based on the address without having to make logical decisions, which is not trivial because of the weird mirroring.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Thu May 05, 2011 8:24 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[3gengames]]></name></author>
<updated>2011-05-05T19:48:55-07:00</updated>
<published>2011-05-05T19:48:55-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7719&amp;p=77711#p77711</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7719&amp;p=77711#p77711"/>
<title type="html"><![CDATA[Mirroring mask for Palette index table]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7719&amp;p=77711#p77711"><![CDATA[
What? NES palette is in the PPU's $3F00-$3F1F space and is mirrored to $3FFF.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4311">3gengames</a> — Thu May 05, 2011 7:48 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[bmac6502]]></name></author>
<updated>2011-05-05T19:39:45-07:00</updated>
<published>2011-05-05T19:39:45-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7719&amp;p=77710#p77710</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7719&amp;p=77710#p77710"/>
<title type="html"><![CDATA[Mirroring mask for Palette index table]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7719&amp;p=77710#p77710"><![CDATA[
Has anybody every come up with a good masking pattern to produce the mirroring effects seen on the palette. Obviously, an AND with $1F will limit you down to the actual table, but within that table itself, four specific locations ($10, $14, $18, $1C) are mirrored down to ($00, $04, $08, $0C).<br /><br />There isn't a very obvious mask for that pattern. Without one, emulators have to implement it using a series of conditional statements, which, for something like memory and pixel operations in an emulator, is very expensive. I'm not really aware of whether or not this is solved, but I have found a working pattern so I thought I'd share in case someone has use.<br /><br />Essentially, you OR the bottom two bits of the address, shift 5 left, XOR with $FFFF, and then AND that with the address.  What this effectively does is zero out the fifth bit, ONLY if the bottom two bits are clear. This is the one commonality I found among the mirrored table entries, so you can derive a mask for bit 5 from that.<br /><br />Did I do something useful, or was this already obvious to someone? It sure seems useful to me.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4860">bmac6502</a> — Thu May 05, 2011 7:39 pm</p><hr />
]]></content>
</entry>
</feed>