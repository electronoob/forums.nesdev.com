<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Windowed VSync</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Windowed VSync</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=3&amp;t=9262">http://forums.nesdev.com/viewtopic.php?f=3&amp;t=9262</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>5</strong> of <strong>5</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Jarhmander</b> [ Fri Apr 12, 2013 7:37 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Windowed VSync</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />What about <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">#include &lt;vector&gt;</tt>, <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">std::vector&lt;SBitmap&gt; Bitmap&#40;size&#41;;</tt> ? No new, no delete. When you need a pointer, use the <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">Bitmap.data&#40;&#41;</tt> method. All methods are inline, so it's as fast as a regular &quot;malloc'ed&quot; array.<br /><br />… but I think it's enough noise with what Bitmap could have been.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>koitsu</b> [ Fri Apr 12, 2013 10:38 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Windowed VSync</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Zepper wrote:</div><div class="quotecontent">What about creating a BITMAP <strong>structure</strong>, and then... BITMAP *bmp = malloc( foo ) ?</div><br />Sure you can do that.  You might need to force-cast the return value from malloc (to <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">BITMAP *</tt>), and you would want to pass the size of the <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">BITMAP</tt> structure to <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">malloc&#40;&#41;</tt> (e.g. <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">malloc&#40;sizeof&#40;BITMAP&#41;&#41;</tt>).  That just allocates enough for one structure, however, so if you want an &quot;array of BITMAPs&quot;, you need to allocate (and free) them all yourself.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>koitsu</b> [ Fri Apr 12, 2013 10:39 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Windowed VSync</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Jarhmander wrote:</div><div class="quotecontent">What about <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">#include &lt;vector&gt;</tt>, <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">std::vector&lt;SBitmap&gt; Bitmap&#40;size&#41;;</tt> ? No new, no delete. When you need a pointer, use the <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">Bitmap.data&#40;&#41;</tt> method. All methods are inline, so it's as fast as a regular &quot;malloc'ed&quot; array.<br /><br />… but I think it's enough noise with what Bitmap could have been.</div><br />I don't do C++.  Someone else can talk about that.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Fri Apr 12, 2013 11:08 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Windowed VSync</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">koitsu wrote:</div><div class="quotecontent">The behaviour if the allocation is too large (exceeds system limits, etc.) is undefined however; on some systems it might segfault right off the bat, but on others it might do god-knows-what or just lock up.  The risk isn't worth it -- allocate &quot;large chunks&quot; (see those freebsd.org mailing list threads) dynamically so your program can always start/run and can elegantly handle situations where memory pressure is an issue.  You should not depend on the ELF/executable loader to do this for you.</div><br /><br />Well, actually you can. This thread is about a windows-only application, and this particular error, if I'm not mistaken, will result in a popup that says &quot;out of memory&quot;. I'm not sure because it's very rare and hard to trigger (need to open many, many programs to fill up virtual swap space). You actually have to run out of virtual memory space on disk for it to occur.<br /><br />In this case, I'm not able to trigger it because MSVC limits the maximum size of any static array to 2GB, and also limits the executable + static memory to 2GB.<br /><br />Windows will very happily run an executable with 2GB of code + static allocations. This will really be perfectly fine for almost any modern operating system with a hard drive (or suitable amount of virtual swap space). I think the advice to avoid doing this is completely wrong. It is not likely to cause any problem on any intended platform. Even if it did cause a problem, most modern operating systems are able to give usable error reporting when a program cannot be allocated enough system memory-- this is a case they can meaningfully detect! We've come a long way since DOS.<br /><br />Valid reasons not to use the static allocation:<br />1. the bitmap is only needed temporarily, and you would like to release the memory when the program is doing other things.<br />2. you're targeting an embedded platform, or something else with very little RAM and no virtual RAM, and no error reporting, so you want to check the allocation for an error manually so you can report it to the user.<br />3. you want to use an array wrapper class like std::vector to aid debugging with things like bounds checking.<br /><br />In the given case there's no much reason to do something other than the static allocation. This kind of out-of-memory error is practically impossible on the intended platform, and even if it did happen, the OS should report it properly. Having the programmer check for an error that won't happen and report it to the user is pointless busy-work.<br /><br /><br />One thing I would recommend about it, though, is using symbolic constants for the bitmap dimension, so that if you ever need to change it you don't accidentally do something like change the loop numbers, but not the bitmap size. The consequences of that mistake could be annoyingly strange/subtle and hard to diagnose/fix.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sat Apr 13, 2013 6:10 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Windowed VSync</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">koitsu wrote:</div><div class="quotecontent">Tell me: what do you think happens when &quot;the global data allocated by the OS at exe init time&quot; fails?  What happens when do something like [a statically allocated array in the tens of MiB] and the allocation by the ELF loader (or the &quot;executable loader&quot;) fails?  I can tell you what happens: undefined behaviour</div><br />What happens when the executable itself fails to load? Unless you're trying to get something running on an embedded or ancient handheld device, the ELF loader or PE loader will cause about 32 MiB of swapping when building a 32 MiB zeroed array. So you can expect that at least half the operating system's system requirements will be available for allocation. Even Android devices tend to come with 1 GB of RAM nowadays, though their OOM killer is far different from that of GNU/Linux because of a desire to avoid swapping.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>ulfalizer</b> [ Mon Jul 22, 2013 5:17 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Windowed VSync</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Anyone has any experience with getting vsync (windowed or otherwise) working on Linux/X11 (and yeah, that's a bit vague, but work with me - think common setups <img src="./images/smilies/icon_razz.gif" alt=":P" title="Razz" />)? Googled around a bit, and it looks bleak.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Mon Jul 22, 2013 6:19 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Windowed VSync</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />&quot;What are you really trying to do?&quot;<br />SDL provides SDL_Flip()<br />There's the XDoubleBufferExtension; an example is Xscreensaver's &quot;deluxe&quot; screenhack which uses xdbe_get_backbuffer and XdbeSwapBuffers.<br />GL provides its own stuff, but I don't have a reference handy.<br /><br />This will vary so much by application and library it's almost meaningless to ask the generic form.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>ulfalizer</b> [ Mon Jul 22, 2013 7:22 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Windowed VSync</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">lidnariq wrote:</div><div class="quotecontent">&quot;What are you really trying to do?&quot;<br />SDL provides SDL_Flip()<br />There's the XDoubleBufferExtension; an example is Xscreensaver's &quot;deluxe&quot; screenhack which uses xdbe_get_backbuffer and XdbeSwapBuffers.<br />GL provides its own stuff, but I don't have a reference handy.<br /><br />This will vary so much by application and library it's almost meaningless to ask the generic form.</div><br /><br />I'm trying to get a 60 Hz vsynced display (i.e., one without tearing) if supported (with slightly adjusted emulation speed to match). SDL_Flip() does not appear to wait for vertical retrace on Linux, making it equivalent to SDL_UpdateRect().<br /><br />Can those APIs be made to wait for the vertical retrace? Couldn't find anything at a quick glance.<br /><br />Just found <!-- m --><a class="postlink" href="https://github.com/chjj/compton/issues/7">https://github.com/chjj/compton/issues/7</a><!-- m -->. The commit it links to seems to use glXWaitVideoSyncSGI().

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>ulfalizer</b> [ Mon Jul 22, 2013 7:26 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Windowed VSync</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I guess other refresh rates would be acceptable too, to at least get rid of tearing. Unlikely that you'd be able to muck around with refresh rates in windowed mode anyway, or maybe even fullscreen...

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Tue Jul 23, 2013 8:53 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Windowed VSync</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I was under the impression that a compositing desktop would offer applications some way to support windowed mode without tearing, seeing as the compositor itself can see vsync. Perhaps the free desktop really does lack essential features.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Tue Jul 23, 2013 12:40 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Windowed VSync</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />This is a fairly goofy way to do it, but: the Xvideo extension does seem to reliably do vsync synchronized page flipping.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>ulfalizer</b> [ Thu Jul 25, 2013 7:54 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Windowed VSync</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">lidnariq wrote:</div><div class="quotecontent">This is a fairly goofy way to do it, but: the Xvideo extension does seem to reliably do vsync synchronized page flipping.</div><br /><br />Looks interesting. Seems it can do hardware scaling too.<br /><br />I wonder what the gotchas might be, since this isn't exactly intended use. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Fri Jul 26, 2013 1:13 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Windowed VSync</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Just read the earlier comments about large static array vs. dynamic allocation (malloc, new, etc.). I didn't notice for me the key reason: bounds checking with a debugger. Dynamic allocations have better support for catching out-of-bounds accesses in debuggers than static arrays, due to the ability of the debugger to exert more control over how the allocation is made so that it has larger padding around it, etc.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>5</strong> of <strong>5</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>