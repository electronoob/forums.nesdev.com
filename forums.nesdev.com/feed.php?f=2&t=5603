<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=2&amp;t=5603" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2015-02-12T20:30:03-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=2&amp;t=5603</id>
<entry>
<author><name><![CDATA[nocash]]></name></author>
<updated>2015-02-12T20:30:03-07:00</updated>
<published>2015-02-12T20:30:03-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5603&amp;p=141116#p141116</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5603&amp;p=141116#p141116"/>
<title type="html"><![CDATA[Re: Communicating with the Miracle Piano]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5603&amp;p=141116#p141116"><![CDATA[
Nope.<br />The piano cable is 7pin NES to 25pin piano.<br />The weird box is 7pin NES to 5pin MIDI.<br /><br />EDIT: And weirder, it's supporting only one-way direction:<br />RXD is used for MIDI to NES.<br />TXD is just going to a LED.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5211">nocash</a> — Thu Feb 12, 2015 8:30 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Dwedit]]></name></author>
<updated>2015-02-12T20:22:30-07:00</updated>
<published>2015-02-12T20:22:30-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5603&amp;p=141113#p141113</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5603&amp;p=141113#p141113"/>
<title type="html"><![CDATA[Re: Communicating with the Miracle Piano]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5603&amp;p=141113#p141113"><![CDATA[
Isn't the 'weird box' just the conversion cable that comes with the Miracle to connect it to the NES controller port?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=53">Dwedit</a> — Thu Feb 12, 2015 8:22 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[nocash]]></name></author>
<updated>2015-02-12T19:59:29-07:00</updated>
<published>2015-02-12T19:59:29-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5603&amp;p=141112#p141112</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5603&amp;p=141112#p141112"/>
<title type="html"><![CDATA[Re: Communicating with the Miracle Piano]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5603&amp;p=141112#p141112"><![CDATA[
<div class="quotetitle">lidnariq wrote:</div><div class="quotecontent"><br />Many of nocash's notes come from reverse engineering existing software, so his comments there, such as the bit:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">  10th..12th  Unknown<br />  13th..16th  Unknown (would be ID Bit3..0 on other SNES controllers)<br />  17th and up Unknown<br /></div>we now know (thanks to the firmware and schematic) don't do anything, even though it looks like the host side reads a bunch of extra times<br /></div><br />Please don't say that you want me to replace &quot;Unknown&quot; by &quot;Don't do anything&quot;!<br />What I was hoping for would be something like &quot;Nth bit is always 1=Low&quot; (or whatever stable/unstable results are returned by the hardware).<br />But what firmware/schematic are you referring to? If you meant these....<br /><br /><div class="quotetitle">LoneKiltedNinja wrote:</div><div class="quotecontent"><br />Update: upon conversing with one of the original development engineers, more light is shed:<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Nintendo Weird Box schematic and source code<br />/midinin.pdf<br />/NINT3.ASM<br /></div></div><br />Okay, that's interesting. But what is it?<br />Looks like a NES or SNES to MIDI adpator. It's not related to the miracle piano hardware.<br />Either it's some completely different product, or it's intended for using the miracle piano <em>software</em> with 3rd-party keyboards.<br /><br />Searching for &quot;Nintendo Weird Box&quot; doesn't give any hits. Neither does searching &quot;MIDI to Nintendo Converter&quot; (the name used in the schematic), nor &quot;AS-ST-000X&quot; nor &quot;NWB-II&quot; nor &quot;NWB100&quot; (some of names used in the asm file).<br /><br />Was that thing ever produced? Did anybody ever see it for real, or see any adverts mentioning it?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5211">nocash</a> — Thu Feb 12, 2015 7:59 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[lidnariq]]></name></author>
<updated>2014-08-27T18:38:40-07:00</updated>
<published>2014-08-27T18:38:40-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5603&amp;p=133186#p133186</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5603&amp;p=133186#p133186"/>
<title type="html"><![CDATA[Re: Communicating with the Miracle Piano]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5603&amp;p=133186#p133186"><![CDATA[
(repeating myself, because I think I phrased it poorly) If you have access to a ROM reader and are willing to take your miracle piano apart, dumping its firmware might be informative. There's definitely a 'PROM for the code (U17, 27C256P), and probably a ROM for wavetable data (U12, S631001-200).<br /><br />Many of nocash's notes come from reverse engineering existing software, so his comments there, such as the bit:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">  10th..12th  Unknown<br />  13th..16th  Unknown (would be ID Bit3..0 on other SNES controllers)<br />  17th and up Unknown<br /></div>we now know (thanks to the firmware and schematic) don't do anything, even though it looks like the host side reads a bunch of extra times<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3512">lidnariq</a> — Wed Aug 27, 2014 6:38 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[LoneKiltedNinja]]></name></author>
<updated>2014-08-27T18:07:53-07:00</updated>
<published>2014-08-27T18:07:53-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5603&amp;p=133185#p133185</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5603&amp;p=133185#p133185"/>
<title type="html"><![CDATA[Re: Communicating with the Miracle Piano]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5603&amp;p=133185#p133185"><![CDATA[
Thanks, Dwedit- that's perfect!  Although I still don't regret doing my own research given what it led to on the PowerGlove front <img src="http://forums.nesdev.com/images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3570">LoneKiltedNinja</a> — Wed Aug 27, 2014 6:07 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Dwedit]]></name></author>
<updated>2014-08-27T11:42:00-07:00</updated>
<published>2014-08-27T11:42:00-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5603&amp;p=133171#p133171</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5603&amp;p=133171#p133171"/>
<title type="html"><![CDATA[Re: Communicating with the Miracle Piano]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5603&amp;p=133171#p133171"><![CDATA[
Also check out what Martin Korth wrote about the miracle piano:<br /><!-- m --><a class="postlink" href="http://problemkaputt.de/everynes.htm#controllerspianomiraclepianocontrollerport">http://problemkaputt.de/everynes.htm#co ... rollerport</a><!-- m --><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=53">Dwedit</a> — Wed Aug 27, 2014 11:42 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[lidnariq]]></name></author>
<updated>2014-08-26T19:02:12-07:00</updated>
<published>2014-08-26T19:02:12-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5603&amp;p=133133#p133133</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5603&amp;p=133133#p133133"/>
<title type="html"><![CDATA[Re: Communicating with the Miracle Piano]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5603&amp;p=133133#p133133"><![CDATA[
I'm far more amused by that 8031schematic than I probably should be. Kinda delightful seeing how minimally they'd used it: the entire data bus (/RD) just can read from the funny latch ('595./G) that's used to receive data from the NES. The 8031's port 1 and one bit of port 3 is used to transmit 9-bit symbols to the NES, while the '393 automatically counts bits (and the '595 remembers them) so that the 8031can know when the NES has shifted in 8 bits.<br /><br />It looks like in the keyboard itself there should be another 8032 microcontroller—fortunately both the 8031 and 8032 are ROMless versions, so they can't be hiding anything extra outside of the two 27C 'PROMs. Might be interesting to take a look at that.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3512">lidnariq</a> — Tue Aug 26, 2014 7:02 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[LoneKiltedNinja]]></name></author>
<updated>2014-08-27T18:22:36-07:00</updated>
<published>2014-08-26T17:57:34-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5603&amp;p=133124#p133124</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5603&amp;p=133124#p133124"/>
<title type="html"><![CDATA[Re: Communicating with the Miracle Piano]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5603&amp;p=133124#p133124"><![CDATA[
Update: upon conversing with one of the original development engineers, more light is shed:<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />The interface to the Nintendo uses a clocked shift register.  There are three signals, two are generated by the Nintendo itself (clock and load), and the third is data input to the Nintendo.<br />Normally, these signals make it easy to read the button controller using very simple hardware consisting of a shift register IC and some switches.  As I remember, MIDI data was sent to the Nintendo without much, if any, modification, just conversion from the asynchronous serial format to this synchronous clocked format.  MIDI data FROM the Nintendo to the Miracle was more complicated, and I believe it required use of the clock and load signals to carry data in the reverse direction.  This required special software on both sides.<br /><br />The Miracle data connector (a DB-25 connector), has both a standard serial MIDI interface, as well as the three-wire Nintendo interface on different pins.  If you're interested, I still have schematics for the Miracle showing the connections.  The data is standard MIDI over the serial port, though the baud rate may be non-MIDI standard when communicating to a PC serial port, which doesn't support the standard MIDI baud rate.<br /></div><br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Miracle schematics<br />[attached]/MIRB1_0.pdf<br />[attached]/MIRB1_1.pdf<br /><br />Nintendo Weird Box schematic and source code<br />[attached]/midinin.pdf<br />[attached]/NINT3.ASM<br /><br />The power supply does not have to be AC, as I recall.  There is a bridge rectifier on the Miracle board to convert the AC to DC, and DC (or either polarity) would work as well.<br /></div><br /><br />I'll probably get these re-hosed on my own site by the time I have any of my own work to show, but if you have better hosting locations, by all means grab copies.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3570">LoneKiltedNinja</a> — Tue Aug 26, 2014 5:57 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[LoneKiltedNinja]]></name></author>
<updated>2014-08-23T10:31:02-07:00</updated>
<published>2014-08-23T10:31:02-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5603&amp;p=132975#p132975</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5603&amp;p=132975#p132975"/>
<title type="html"><![CDATA[Re: Communicating with the Miracle Piano]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5603&amp;p=132975#p132975"><![CDATA[
One quick unrelated update: as tangentially suggested in <!-- m --><a class="postlink" href="http://www.racketboy.com/forum/viewtopic.php?f=52&amp;t=36962">http://www.racketboy.com/forum/viewtopi ... 52&amp;t=36962</a><!-- m --> , I have found that the enercell / RadioShack part number 273-0328 AT&amp;T multi-voltage 9.10.2/13/13VAC 800mA adapter is sufficient for the Miracle, and it's barrel is even the right size.  If you're making your own, the M-size barrel seems to be a good fit, although after finding the AT&amp;T adapter, I didn't actually need to test an a-la-carte configuration.<br /><br />I still would not as a general recommendation advise using a lower-amperage adapter than specified- put too much current load on a given rated voltage potential and the adapter will have a hard time maintaining that voltage potential.  But since this one advertises sustaining a top-end 13V potential at 0.8A for a total of 10.4W power load, it's not beyond reason to think it can hold 10.4W total at its 12V setting, equivalent to 867mA current draw which, allowing for safety tolerances on both ends, seems to be &quot;close enough&quot; to 1000mA; also keeping in mind that the original supply and power architecture anticipated a worst-case driving not just the piano guts but likely the headphones, speakers, serial port and MIDI-out all at once.  I would not try running this thing at full load on less than a 1000mA (12W) supply, and I'll definitely look for a more robust solution if the AT&amp;T adapter starts heating up or cutting out, but fingers-crossed it will hold for just running the piano, headphones, and the chipset driving the NES connector pins (which in grand theory ought not to be a power draw at all since there's already a power line from the NES that any connecting hardware would normally be expected to get its logic-power from.  Indeed, if the piano is trying to push its own voltage and ground to the NES, I could see some ugly current leakage going on that could damage both systems <img src="http://forums.nesdev.com/images/smilies/icon_razz.gif" alt=":P" title="Razz" /> )<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3570">LoneKiltedNinja</a> — Sat Aug 23, 2014 10:31 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[LoneKiltedNinja]]></name></author>
<updated>2014-08-24T10:26:18-07:00</updated>
<published>2014-08-22T18:36:47-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5603&amp;p=132959#p132959</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5603&amp;p=132959#p132959"/>
<title type="html"><![CDATA[Re: Communicating with the Miracle Piano]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5603&amp;p=132959#p132959"><![CDATA[
This thread... it does not fill me with confidence...<br />I finally got my hands on a Miracle (sans power supply, serial cable, and foot pedal, but all of those are trivially replaced).  I have hoped perhaps against hope that the serial comm would be as simple as latching and then reading a series of 1 bit per key.<br /><br />I still hold out a vague glimmer that sir_cuitous was simply seeing some bad aliasing on account of really really rapid polling, otherwise this thing may be even more of a monster than the Glove was to crack &gt;_&lt;<br /><br />Still, between the graphs and Dwedit's observation about polling, there may be some hope here.  And as I did on the Glove, if I can get the Miracle working and patched into some actual homebrew on an actual NES, I may be able to sidestep some of the overspecification and overgeneralization that other sources came up with testing black-box-style with raw leads against raw traces.<br /><br />If I succeed at anything, I'll be sure to leave notes here.<br /><br /><s>Edit:  In fact, just some hunches to throw off the bat:<br /><br />Think about the functions of the lines.  The only communication from the NES to the Miracle must occur in some combination of the red and green lines; the only return communication can occur on the blue line.<br /><br />Further, the green signal is a very specific animal- it can&#39;t be held high or low manually, it can merely be pulsed by a register read.  So its value as a communication tool is inherently limited.<br /><br />But the blue data line value is completely irrelevant except for when a clock pulse occurs- the NES game code has no way of accessing its value save through the clock strobe.  This very cleanly narrows our search space for meaning: when the clock triggers, the game must know what it&#39;s looking for.<br /><br />So.  I see two possible interpretations &#40;apart from the aliasing theory&#41;:<br /><br />A&#41; the clock, latch, and data lines are actually being used in a reasonable traditional manner, but in slow motion.  It only pulses a clock infrequently because either the game code or the piano hardware can only prepare data infrequently.  But if communication was observed over, say, the length of a musical beat rather than the typical length of a frame, that might be enough to transmit a meaningful number of keys at one key per clock pulse.  The software, after all, only needs enough information to determine whether someone hit a particular note in a particular span of wallclock time.<br /><br />B&#41; It&#39;s a time-sensitive signal.  It&#39;s a fixed blobby implicit time sensitive signal.  And eff you very much, Software Toolworks and your blobby horse-drawn 5.25&quot; floppies.  Basically, from the point the latch falls, the piano starts an internal timer and waits for the latch to rise, with different meanings for different delays.  And the protocol is to dial the correct number on a rotary phone using the latch line &#40;and a gratuitous amount of throwaway instructions for sub-second timing on the NES&#41; to invoke certain functions on the piano.  One can only hope that the simplest form of the protocol is 1 latch drop followed by a series of invisible time windows in which popping a clock will return the value of a specific key, and re-twiddling the latch will tell the keyboard to play a note on its own.  Because if it&#39;s anything more complex than that, we&#39;re throwing darts blindfolded.<br /><br />I&#39;ll spend a bit more time musing over the traces, but if anyone else can capture and post similar records of the lines and what the game is doing at the time &#40;I don&#39;t have sufficient equipment to do so&#41;, it would greatly help me narrow my hypotheses.<br /><br />Edit 2: The lack of the dog barking in the night<br />Anyone else notice how in the familiar use case, the clock line is steady low and pulsed high, whereas in the Miracle case, it <em>appears</em> to be held high and pulsed low?  That is immensely intriguing to me, and potentially profoundly significant.  I&#39;ll need to go back over my notes, but I&#39;m pretty sure my assertion in the first edit is correct: you as the NES programmer don&#39;t get to directly control the clock line.  Even if you want to.  You can directly write the latch, and you can directly read the data, but the clock is an autonomous entity which occurs automagically when you read the data.  So if the default state of the clock is low and it only pulses high automatically on a read, I see no explanation for the Miracle trace other than aliasing error.  The NES is flipping that line like mad, one can only hope in the process of reading 49 keys and 1 pedal per frame &#40;plus possible status bits&#41;, and the capture was merely hitting it high every time save when some amount of processing caused a slight delay.</s><br /><br />Edit 3: disregard the above.  Looks like sir_cuitous was on the right track from the start, and Dwedit's already solved the problem.  First post, second link - <!-- l --><a class="postlink-local" href="http://forums.nesdev.com/viewtopic.php?t=300">viewtopic.php?t=300</a><!-- l --><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Figured it out... At least output anyway.<br />First the game writes 00 to $4016 for the start bit<br />Then does this 8 times:<br />* Writes a byte out to $4016, only the least significant bit is received<br />* Dummy Read from $4016 for some reason (why?)<br />Writes a 00 to $4016 for the stop bit<br /><br />The bit order (after the start bit) is least significant bit first. The 8 sent bits form a byte.<br /><br />The data itself is pure MIDI. Looks like it could be easily integrated into any emulator. It will probably need a special patch map, since the Miracle does not use general midi instruments.<br /><br />I'll bet MIDI input is very similar, start bit, 8 data bits, stop bit.<br /></div><br />So that's where I'll begin, and I can test whether reading is just as simple.  I suspect it is, modulo suspicions already voiced that the first read will return 1 if data is available and 0 otherwise.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3570">LoneKiltedNinja</a> — Fri Aug 22, 2014 6:36 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[frantik]]></name></author>
<updated>2009-10-04T12:53:24-07:00</updated>
<published>2009-10-04T12:53:24-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5603&amp;p=51053#p51053</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5603&amp;p=51053#p51053"/>
<title type="html"><![CDATA[Communicating with the Miracle Piano]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5603&amp;p=51053#p51053"><![CDATA[
let me rephrase that<br /><br />it would be awesome if Memblers made an adapter to plug general midi devices into a NES<br /><br /><img src="http://forums.nesdev.com/images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /><br /><br />midines seems cool but i want to write my own software to use with midi, like a 7bit pcm rompler or drum machine.. or even a midi sequencer would be awesome. <br /><br /> i always thought the miracle plugged midi right into a controller port, but i guess not <img src="http://forums.nesdev.com/images/smilies/icon_sad.gif" alt=":(" title="Sad" /><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3841">frantik</a> — Sun Oct 04, 2009 12:53 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Memblers]]></name></author>
<updated>2009-10-04T12:36:01-07:00</updated>
<published>2009-10-04T12:36:01-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5603&amp;p=51051#p51051</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5603&amp;p=51051#p51051"/>
<title type="html"><![CDATA[Communicating with the Miracle Piano]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5603&amp;p=51051#p51051"><![CDATA[
<div class="quotetitle">frantik wrote:</div><div class="quotecontent"><br />it would be awesome to make an adapter to plug general midi devices into a NES<br /></div><br /><br />The early prototype of MidiNES used the controller port, but later moved all the hardware to the cartridge.<br /><br />At the most basic level all you'd need for the controller port is a PIC (w/ UART) and an opto-isolator.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=10">Memblers</a> — Sun Oct 04, 2009 12:36 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[frantik]]></name></author>
<updated>2009-10-04T12:25:14-07:00</updated>
<published>2009-10-04T12:25:14-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5603&amp;p=51050#p51050</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5603&amp;p=51050#p51050"/>
<title type="html"><![CDATA[Communicating with the Miracle Piano]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5603&amp;p=51050#p51050"><![CDATA[
it would be awesome to make an adapter to plug general midi devices into a NES<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3841">frantik</a> — Sun Oct 04, 2009 12:25 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2009-10-04T05:56:57-07:00</updated>
<published>2009-10-04T05:56:57-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5603&amp;p=51037#p51037</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5603&amp;p=51037#p51037"/>
<title type="html"><![CDATA[Communicating with the Miracle Piano]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5603&amp;p=51037#p51037"><![CDATA[
"MIDI channel" is the low nibble of the "status" byte of each MIDI message that's assigned to a channel. For example, channel 4 would use message $93 kk vv for start note k with velocity v, $A3 kk vv for pressure of a held note, $B3 cc vv for controller value, $C3 ii for instrument change, $D3 vv for pressure of all held notes on this channel, and $E3 ll hh to set pitch bend to h*128+l, where $2000 is center. Channel 6 would use $95, $A5, $B5, $C5, $D5, and $E5 instead.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Sun Oct 04, 2009 5:56 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[sir_cuitous]]></name></author>
<updated>2009-10-03T17:24:38-07:00</updated>
<published>2009-10-03T17:24:38-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5603&amp;p=51020#p51020</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5603&amp;p=51020#p51020"/>
<title type="html"><![CDATA[Communicating with the Miracle Piano]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5603&amp;p=51020#p51020"><![CDATA[
Thank you everybody very much for the replies!<br /><br />Alrighty... as Drag and Dwedit said, the Miracle does in fact use the MIDI protocol, but it has its own custom patch assignments. Drag pointed out that all Miracle Pianos have standard MIDI DIN jacks in the back, which I guess brings up the point that even though this thing communicates with MIDI devices, I don't actually know with certainty that it communicates raw unprocessed MIDI data to/from the NES. The Miracle Port in the back (where the PC/SNES/Genesis/NES cable goes) also sends out MIDI data, at the very least, for the PC software... But on different pins from the ones that connect up to the NES cable. So I guess I need to consider that possibility.<br /><br />I'm not sure how I still have the manual, and in such good condition to boot, but:<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />The Miracle can be connected via MIDI (Musical Instrument Digital Interface) to a standalone or computer-driven sequencer that can digitally record your performances, as well as letting you edit, merge and play back these performances through the Miracle. Through MIDI, the Miracle can also be used as a keyboard input device for another synthesizer.<br /></div><br /><br />and<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />The Miracle Keyboard always sends MIDI information on MIDI Channel 1 and receives on MIDI channels 1 through 8.<br /></div><br /><br />However... That information implies nothing about what kind of data goes to/from the NES, so. Again, I need to keep that in mind.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4064">sir_cuitous</a> — Sat Oct 03, 2009 5:24 pm</p><hr />
]]></content>
</entry>
</feed>