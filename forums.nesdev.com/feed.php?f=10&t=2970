<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=10&amp;t=2970" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2007-02-27T11:49:27-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=10&amp;t=2970</id>
<entry>
<author><name><![CDATA[albailey]]></name></author>
<updated>2007-02-27T11:49:27-07:00</updated>
<published>2007-02-27T11:49:27-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=2970&amp;p=22181#p22181</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=2970&amp;p=22181#p22181"/>
<title type="html"><![CDATA[How do you guys debug your code]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=2970&amp;p=22181#p22181"><![CDATA[
Here is a chunk of broken code:<br /><br />getJoyPad1Input:<br />        LDA CURRENT_JOY1_STATUS<br />        STA LAST_JOY1_STATUS<br />        ;LDA CURRENT_JOY2_STATUS<br />        ;STA LAST_JOY2_STATUS<br /><br />        ; strobe joypad<br />        ldx #$09 ; bit zero is 1<br />        stx JOY1<br />        DEX<br />        stx JOY1 ; bit 0 is zero<br />        ; Now we read 8 times from Joy1<br />:       lda JOY1<br />        LSR A<br />        ROR CURRENT_JOY1_STATUS<br />        ;lda JOY2<br />        ;AND #$03<br />        ;CMP #$01<br />        ;ROL CURRENT_JOY2_STATUS<br />        DEX<br />        BNE :-<br />        rts<br /><br />processAButton:<br />        ; Check if the A button was pressed<br />        LDA #JOY_A_MASK<br />        STA ACTIVE_MASK<br />        jsr checkChangeForInput<br />        LDA MASK_RESULT<br />        CMP #$01<br />        BNE :-     ; This is the error line. It should be BNE :+<br />        ; To Do: process A button<br />:<br />        rts<br /><br /><br />You can see the problem.  Normally I jsr getJoyPad1Input and later jsr processAButton (I didnt include all that code).<br />The bug means I  query JOY1 (4016) some more.  Since I dont know what X is set to, it queries it an indeterminate number of times and causes my CURRENT_JOY1_STATUS variable to have an altered result.  So later when I want to move left, it thinks I've moved right, etc..<br /><br /><br />Nintendulator and Nestopia process the input in a backwards fashion(expected behaviour) <br /><br />FCEU doesnt show me an error (although it should)<br /><br />RockNES and JNES just ignore my input.<br /><br /><br />If anyone would like the .nes file, let me know and I can email it to them or if anyone knows a free hosting service. My geocities site doesnt allow it<br />I cant post a link to the the .nes file (I have a geocities account and they seem to be blocking it)<br /><br /><br />Al<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=772">albailey</a> — Tue Feb 27, 2007 11:49 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2007-02-26T11:41:02-07:00</updated>
<published>2007-02-26T11:41:02-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=2970&amp;p=22172#p22172</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=2970&amp;p=22172#p22172"/>
<title type="html"><![CDATA[How do you guys debug your code]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=2970&amp;p=22172#p22172"><![CDATA[
<div class="quotetitle">albailey wrote:</div><div class="quotecontent"><br />My code compiled fine because I had another anonymous label in  subroutine  "foo" declared before these and since both had an rts, I wasnt getting stack issues.<br /><br />The actual code pertained to my input handling.<br /><br />The code "appeared to work" in FCEU both in memory and in the final output.   (which doesnt make any sense)<br /><br />But the bug revealed itself in Nintendulator, and several other emulators I downloaded.   I only was able to find it by scanning my code line by line (again back to my problem debugging)<br /><br />So, I no longer trust FCEU as much as I used to.  And I run everything<br />in both it and Nintendulator now.<br /></div><br />That's a good idea.<br /><br />In general: If one emulator's behavior differs markedly from that of the top-tier emulators, write a test case that amplifies this behavior difference and post it on a web site. Have the experts here on nesdev try it out on an NES, and you'll know which emulators are misbehaving and where to report the bug. I've done this several times for differences between VisualBoyAdvance and the GBA hardware.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Mon Feb 26, 2007 11:41 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[albailey]]></name></author>
<updated>2007-02-26T07:21:57-07:00</updated>
<published>2007-02-26T07:21:57-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=2970&amp;p=22165#p22165</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=2970&amp;p=22165#p22165"/>
<title type="html"><![CDATA[How do you guys debug your code]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=2970&amp;p=22165#p22165"><![CDATA[
Whats interesting about the direction this thread took, is that its relevant to a debugging problem I encoutnered this weekend (and fixed).<br /><br />I use CA65 and had some subroutines something like this<br /><br />foo:<br />   ... do some stuff...<br />   bne :+<br />   ... do some more stuff...<br />:<br />    rts<br /><br />bar:<br /> ... do some stuff...<br />   bne :-<br />   ... do some more stuff...<br />:<br />    rts<br /><br />Well,  I meant to say bne :+  in the subroutine "bar"<br /><br />My code compiled fine because I had another anonymous label in  subroutine  "foo" declared before these and since both had an rts, I wasnt getting stack issues.<br /><br />The actual code pertained to my input handling.<br /><br />The code "appeared to work" in FCEU both in memory and in the final output.   (which doesnt make any sense)<br /><br />But the bug revealed itself in Nintendulator, and several other emulators I downloaded.   I only was able to find it by scanning my code line by line (again back to my problem debugging)<br /><br />So, I no longer trust FCEU as much as I used to.  And I run everything<br />in both it and Nintendulator now. <br /><br />Al<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=772">albailey</a> — Mon Feb 26, 2007 7:21 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bananmos]]></name></author>
<updated>2007-02-26T07:13:57-07:00</updated>
<published>2007-02-26T07:13:57-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=2970&amp;p=22164#p22164</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=2970&amp;p=22164#p22164"/>
<title type="html"><![CDATA[How do you guys debug your code]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=2970&amp;p=22164#p22164"><![CDATA[
On the other hand, since ca65 is open-source, I guess you could hack in x816-style anonymous labels into it in a few rainy days. Since the convention it uses seems to be mutually exclusive to x816's convention, it looks to me like it could be added without interfering with ca65's existing anonymous labels-conventions at all. (correct me if I'm wrong)<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=106">Bananmos</a> — Mon Feb 26, 2007 7:13 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2007-02-25T19:35:43-07:00</updated>
<published>2007-02-25T19:35:43-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=2970&amp;p=22160#p22160</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=2970&amp;p=22160#p22160"/>
<title type="html"><![CDATA[How do you guys debug your code]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=2970&amp;p=22160#p22160"><![CDATA[
<div class="quotetitle">Anders_A wrote:</div><div class="quotecontent"><br />You use a number of + or - to go forth or back a number of anonymous lables.<br /></div><br />But then you have to count the labels, and adding another anonymous label inside the loop throws off the count.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />If you have a large chunk of code, ca65 syntax will ofcourse get harder to follow, but you shouldn't really use anonymous labels for jumps longer then a couple of rows anyway IMO.<br /></div><br />Like the outer loops in the examples.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Sun Feb 25, 2007 7:35 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Anders_A]]></name></author>
<updated>2007-02-25T19:23:19-07:00</updated>
<published>2007-02-25T19:23:19-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=2970&amp;p=22159#p22159</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=2970&amp;p=22159#p22159"/>
<title type="html"><![CDATA[How do you guys debug your code]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=2970&amp;p=22159#p22159"><![CDATA[
Uhm, bananmos examples in ca65-syntax using anonymous labels:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">: <br />    lda DecrunchingState <br />    beq :- <br />    bpl :- <br /><br />    lda DecrunchingBank <br />    jsr MMC1_WriteRegister3 <br /><br />    lda #&lt;DecrunchedTune <br />    sta TempWord2 <br />    lda #&gt;DecrunchedTune <br />    sta TempWord2+1 <br />    ldx CrunchedTune <br />    ldy CrunchedTune+1 <br />    jsr DecodeLZ77 <br />    <br />    lda #$01 <br />    sta DecrunchingState <br /><br />: <br />    lda DecrunchingState <br />    bne :- <br />    <br />    jmp :--<br /><br /></div><br /><br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">    ldx #8 <br />:<br />    lda _666addHi <br />    beq :+ <br />: <br /><br />    lda _666        ;3 <br />    clc <br />    adc _666add <br />    bcs :+           ;3/2 <br />:   sta _666        ;3      19.xxx/18.xxx <br /><br />    dex <br />    bne :---<br /></div><br /><br />You use n + or - to reference the n'th anonymous label forward or backwards. The implementation of this was buggy in older versions though.<br /><br />I prefer ca65 syntax, since a label isn't really anonymous if you have to name it -- or -. And could just aswell have been named @loop1 and @loop2 or whatever (using ca65 syntax for local labels)<br /><br />If you have a large chunk of code, ca65 syntax will ofcourse get harder to follow, but you shouldn't really use anonymous labels for jumps longer then a couple of rows anyway IMO.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=1601">Anders_A</a> — Sun Feb 25, 2007 7:23 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[AWal]]></name></author>
<updated>2007-02-25T01:30:57-07:00</updated>
<published>2007-02-25T01:30:57-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=2970&amp;p=22145#p22145</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=2970&amp;p=22145#p22145"/>
<title type="html"><![CDATA[How do you guys debug your code]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=2970&amp;p=22145#p22145"><![CDATA[
I have found a fondness to FCEUXD(SP) for it's debug capabilities. I've been hex hacking (mostly game genie codes) for a lot longer than I've been actualy writing code, so seeing the hex numbers for common things like LDA $xxxx, STA #$xx, and BEQ $xx are just natural for me.<br /><br />Of course I have the .asm file to the side of the emulator, just in case I run into some deep trouble.<br /><br />I've been using the same recycled code snippets for some time, so most minor code flaws are not much of an issue to me. <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /><br />P.S.: Am I the only person still using TASM to compile code?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=26">AWal</a> — Sun Feb 25, 2007 1:30 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2007-02-24T10:15:20-07:00</updated>
<published>2007-02-24T10:15:20-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=2970&amp;p=22137#p22137</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=2970&amp;p=22137#p22137"/>
<title type="html"><![CDATA[How do you guys debug your code]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=2970&amp;p=22137#p22137"><![CDATA[
<div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Like I mentioned earlier, I consider list files to be absolutely vital when you need to examine and/or debug the assembled code. I don't know how you get by without them...<br /></div><br />I don't know either, but at least I've no trouble doing so. The list file shows your code, that you can see in your source instead, and the binary data that you can see in the compiled binary file. The only interesting thing you can see is the corelation between both, but WLA can create a symol list, wich is much more handy when you want to know wich variable has been assigned with wich location or something like that, but I don't use it often because you usually see it immediately when tracing your code in FCEU. If you trace code you just wrote, then you can immediately see wich variables are in wich location, but if you trace code you wrote long ago, it may be worth looking at the symbol table so that you can see the correlation between your code in your source and in FCEU.<br />Aside of that I guess most bugs have been corected since. Anyway, what I like most with WLA-DX is that the author is very open to corrections and sugetions, and that no other assembler I know have that strong point.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Sat Feb 24, 2007 10:15 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bananmos]]></name></author>
<updated>2007-02-24T09:47:41-07:00</updated>
<published>2007-02-24T09:47:41-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=2970&amp;p=22136#p22136</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=2970&amp;p=22136#p22136"/>
<title type="html"><![CDATA[How do you guys debug your code]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=2970&amp;p=22136#p22136"><![CDATA[
To be honest, I can't even remember what bugs it had anymore. Think it had something to do with it changing some instructions depending on 8/16-bit mode which should be indifferent to it. But like I said, I can't really remember now. What I do remember though, is that it was royal PITA trying to find track the bugs when the list files weren't working properly. To begin with, they contained no address information whatsoever. Also, some things like macros would put the list generator in some crazy state where it seemed to output nonsense data for lines until it somehow got on the right track again. Here's an excerpt from a list file to illustrate my point:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">$8D $81 $40                             isrSplitScreen<br />$A9 $80                                    phb<br />$8D $82 $40                                phk<br />$20 $CD $D1                                plb<br />$68                                        pha<br />$A8                                        txa<br />$68                                        pha<br />$AA                                        tya<br />$68                                        pha<br />$AB                                     <br />$40                                     <br />$8B                                     ;   lda.b   #0<br />$4B                                     ;   sta   GPU_RenderFlags<br />$AB                                     <br />$48                                     <br />$8A                                        lda.b   #0<br />$48                                        sta   GPU_hBlankStatus<br />$98                                     ;   sta   GPU_hBlankStatus<br />$48                                     ;   sta   GPU_hBlankStatus<br />$A9 $00                                 ;   sta   GPU_hBlankStatus<br />$8D $82 $40                             <br />                                        <br />$A5 $42                                    lda   Joypad<br />$0A                                        asl<br />$10 $02                                    bpl   +<br />$C6 $59                                    dec   scroll2<br />                                        +<br />$A5 $59                                    lda   scroll2<br />$AA                                        tax<br />$BD $66 $CE                                lda   SineTable.w,X<br />$8D $00 $40                                sta   GPU_ScrollXLo<br />                                           ;asl<br />$A5 $59                                    lda   scroll2<br />$18                                        clc<br />$69 $57                                    adc.b   #$57<br />$AA                                        tax<br />$BD $66 $CE                                lda   SineTable.w,X<br />$8D $02 $40                                sta   GPU_ScrollYLo<br /></div><br /><br />Like I mentioned earlier, I consider list files to be absolutely vital when you need to examine and/or debug the assembled code. I don't know how you get by without them...<br /><br />And yes, the "operande hints" you mentioned was one of the biggest problems with WLA-DX that I experienced. In the 65C816 mode, the size of addresses (which translate to different opcodes) and size of operands (which depend on wether the 65C816 is in 8-bit index/accumulator mode) were treated equally. On a 6502 you don't have separate CPU modes, but having to manually specify the size of your addresses on each instruction is just not worth the effort, and something you shouldn't "get used to". That's the assemblers job.<br /><br />Like I said, I did like a lot of features in WLA-DX that other assemblers lack, and the good part was that Ville Helin is very responsive to mails and fixed a lot of the problems in the assembler that I mailed him about. But in the end, there were just too many of them and fixing all of them would require a total rewrite where many of the linker's responsibilities would need to be transferred to the assembler.<br /><br />Therefore, I don't consider WLA-DX a wise choice for 6502/65C816 development. It might still be good for Z80 development though. (that's what Ville Helin made it for after all) But I haven't written enough Z80 code to be able to judge that properly.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=106">Bananmos</a> — Sat Feb 24, 2007 9:47 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2007-02-24T03:56:31-07:00</updated>
<published>2007-02-24T03:56:31-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=2970&amp;p=22133#p22133</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=2970&amp;p=22133#p22133"/>
<title type="html"><![CDATA[How do you guys debug your code]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=2970&amp;p=22133#p22133"><![CDATA[
Well, if the 65816 is actually buggy, that's a lot of trouble for SNESdev, but not so much trouble for NESdev. What kind of bugs did it have ?<br />And about the list file, effectivly it seems to be lacking, but I never use them anyway.<br />I haven't noticed inability to detect zero page, however you have to tell manually to reduce instruction on zero page when one is found, with the instuction '.8bit'. It just doesn't do it automatically.<br /><br />The only real annoayance with WLA-DX is that after the .8bit directive some instuctions (but not all of them) will try to force themselves to 8bit when you exept to adress memory with all 16 bits with them, generating a linking error... So you have to manually place a ".w" after memory location with some operands, wich is anoying, but you get quickly used to it.<br /><br />What I really like with it is to tell you how many bytes are free in each rombank each time you compile your code. Usefull to plan ROM space efficiently.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Sat Feb 24, 2007 3:56 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bananmos]]></name></author>
<updated>2007-02-24T03:23:38-07:00</updated>
<published>2007-02-24T03:23:38-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=2970&amp;p=22132#p22132</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=2970&amp;p=22132#p22132"/>
<title type="html"><![CDATA[How do you guys debug your code]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=2970&amp;p=22132#p22132"><![CDATA[
But what's really bad about WLA-DX (at least last time I tried it, which was a couple of years ago) is:<br /><br />1) Its buggy 65816 support<br />2) Its buggy and incomplete list file support, which make the abovementioned bugs extremely hard to track down<br />3) Its inabilities to automatically detect zero-page or absolute adressing for an instruction, due to the separation of the assembler and the linker stage<br /><br />I really liked WLA-DX's features when I first tried it, but eventually realized it was lacking many elementary features. Unless these issues have been fixed, my recommendation is to avoid it.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=106">Bananmos</a> — Sat Feb 24, 2007 3:23 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2007-02-24T01:50:57-07:00</updated>
<published>2007-02-24T01:50:57-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=2970&amp;p=22131#p22131</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=2970&amp;p=22131#p22131"/>
<title type="html"><![CDATA[How do you guys debug your code]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=2970&amp;p=22131#p22131"><![CDATA[
Wla-DX also supports '-' and '+' labels, in theory up to 8 + or - aligned, but in practice I never use more than 3 to keep the code readable.<br />What is great with Wla-DX is that is seems the only assembler that has serious provisions for bankswitched code and RAM.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Sat Feb 24, 2007 1:50 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Disch]]></name></author>
<updated>2007-02-23T19:32:03-07:00</updated>
<published>2007-02-23T19:32:03-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=2970&amp;p=22129#p22129</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=2970&amp;p=22129#p22129"/>
<title type="html"><![CDATA[How do you guys debug your code]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=2970&amp;p=22129#p22129"><![CDATA[
EDIT -- nevermind  I just realized you answered my Q already in one of your examples  =P<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=33">Disch</a> — Fri Feb 23, 2007 7:32 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bananmos]]></name></author>
<updated>2007-02-23T18:19:13-07:00</updated>
<published>2007-02-23T18:19:13-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=2970&amp;p=22127#p22127</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=2970&amp;p=22127#p22127"/>
<title type="html"><![CDATA[How do you guys debug your code]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=2970&amp;p=22127#p22127"><![CDATA[
Thanks for displaying the difference tepples. That shows pretty well why I prefer the x816-style. I find those colons to be somewhat ugly, and the inability to overlap the reference kills most of the benefits of unnamed labels IMO.<br /><br />But to each his own... some might say that too many unnamed labels make the code less readable as well, and I can't say they don't have a point. But I find code equally hard to read when there's too much "label clutter".<br /><br />Though I'm not saying I could never become a ca65 convert if I had good enough reasons. (an emulator which allowed source-code debugging would probably qualify as a good one :)<br /><br />Yeah, an interrupt handler changes DecrunchingState in the first example. Both sections are from Years Behind btw. The code that handles music switching in the NMI routine sets DecrunchingState to #$80 once all the variables for the DecodeLZ77 routine have been initialized. This will put the main loop into the decrunching state. Once the tune is decrunched, the main loop sets DecrunchingState to #$01 to signal that decrunching is complete. The NMI routine will then call NED_SetupNED once and then reset DecrunchingState to #$00. <br /><br />The mainloop gets a few scanlines of cycles at the end of screen rendering, but even more of them in the volume bar window where the replay routine would normally be called. The NMI routines grants it these extra scanlines by setting off a DPCM IRQ and returning prematurely from the NMI. The IRQ handler will then jump back into the NMI routine and the code continues where it left off. If anyone ever wondered why YB buzzes when switching tunes, this is the reason.<br /><br />In the second example _666 is a "cycle accumulator" that keeps track of how to adjust the cycles to keep the scanline code in phase with the PPU. Since we have a fractional amount of cycles on both NTSC and PAL, we need to emulate (harhar) a fraction of a cycle somehow, and the only way to do that it to make the scanline code take an extra cycle at regular intervals, so that the average number of cycles/scanline becomes a non-integer value. The code would normally look like this: (the clc can be skipped if you're running low on cycles)<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">    lda _666<br />    clc <br />    adc #113   ;use #85 for NTSC<br />    bcs +<br />+   sta _666<br /></div><br /><br />This will make your code take an extra cycle every time the adc gives a carry. The _666 variable was named so by Loopy, who showed me this nifty trick in the first place.<br /><br />But since there's DPCM in years behind, the DPCM DMA will steal some extra cycles every now and then, so you must adjust the #113 constant to other values which depend on the playback frequncy. And on the higher frequencies, it takes more than a cycle per scanline, and the _666 variable won't be enough any longer. So _666addHi works a a flag for this case. Both are changed accordingly in the replay routine.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=106">Bananmos</a> — Fri Feb 23, 2007 6:19 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2007-02-23T17:21:18-07:00</updated>
<published>2007-02-23T17:21:18-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=2970&amp;p=22126#p22126</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=2970&amp;p=22126#p22126"/>
<title type="html"><![CDATA[How do you guys debug your code]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=2970&amp;p=22126#p22126"><![CDATA[
<div class="quotetitle">Bananmos wrote:</div><div class="quotecontent"><br />What I love so much about them (besides not having to spend half your coding time thinking up pointless label names)<br /></div><br />You could use <a href="http://www.cc65.org/doc/ca65-5.html#ss5.4" class="postlink">label names that start with '@'</a>. Labels named this way are local, that is, they are valid only between label names that don't start with '@'. This means you can use '@loop' in more than one subroutine. CA65 has also a slightly different flavor of <a href="http://www.cc65.org/doc/ca65-5.html#ss5.5" class="postlink">anonymous labels</a>, called ':', which can be referenced backward with ':-' or forward with ':+' .<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">-<br />    lda DecrunchingState<br />    bne -</div><br />Is this supposed to loop forever? Or does an interrupt handler change DecrunchingState?<br /><br />Anyway, I translated the first code to CA65, using an @-label:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">@mainLoop:<br />:<br />    lda DecrunchingState<br />    beq :-<br />    bpl :-<br /><br />    lda DecrunchingBank<br />    jsr MMC1_WriteRegister3<br /><br />    lda #&lt;DecrunchedTune<br />    sta TempWord2<br />    lda #&gt;DecrunchedTune<br />    sta TempWord2+1<br />    ldx CrunchedTune<br />    ldy CrunchedTune+1<br />    jsr DecodeLZ77<br />    <br />    lda #$01<br />    sta DecrunchingState<br /><br />:<br />    lda DecrunchingState<br />    bne :-<br />    <br />    jmp @mainLoop<br /></div><br /><br />And the second one. The biggest difference is that a CA65 program can't easily use backward references that overlap forward references. (But what exactly does _666 do?)<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">    ldx #8<br />@loop:<br />    lda _666addHi<br />    beq :+<br />:<br /><br />    lda _666        ;3<br />    clc<br />    adc _666add<br />    bcs :+           ;3/2<br />:<br />    sta _666        ;3      19.xxx/18.xxx<br /><br />    dex<br />    bne @loop<br /></div><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Fri Feb 23, 2007 5:21 pm</p><hr />
]]></content>
</entry>
</feed>