<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - n00b SNESdev questions</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">n00b SNESdev questions</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=12&amp;t=6946">http://forums.nesdev.com/viewtopic.php?f=12&amp;t=6946</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>artakserkso</b> [ Wed Sep 08, 2010 5:01 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>n00b SNESdev questions</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Okay, here's some code I threw together with help of Bazz's tutorial (available <a href="http://wiki.superfamicom.org/snes/show/HomePage" class="postlink">here</a>). In bsnes it works fine, so I thought it should work on the SNES PowerPak after a quick ucon64 -padn=524288. It doesn't.
<br />
<br />The point is showing a Mario sprite in the middle of the screen and doing nothing until Right on the D-pad is pressed. That's when the Mario sprite should do... Guess what! <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" />
<br />
<br />So far I've had no trouble with padding something small/homebrew for the PowerPak and getting it to run (for example, when I had no joypad code and only wanted to put Mario on screen).
<br />
<br />This time Mario either pops up on screen, does nothing when I press anything and after a while <em>dissapears</em> off screen. Huh?! Sometimes when I reset or recopy the code from CF, he doesn't appear on screen at all. I'm very puzzled by all this.
<br />
<br />Anyway, here's the code. Also, any good programming tips I might be able to use are highly appreciated. Sorry for the code being messy as all hell.
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">.INCLUDE &quot;header.inc&quot;<br />.INCLUDE &quot;initsnes.asm&quot;<br /><br />.MACRO LoadPalette&nbsp; &nbsp;&nbsp; &nbsp;;DMA transfers a palette to CGRAM &#40;A:8b,XY:16b&#41;<br />&nbsp; &nbsp;lda #\2&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; &nbsp;&nbsp; &nbsp;;args: 24b source, 8b dest, 8b number of colors<br />&nbsp; &nbsp;sta $2121<br />&nbsp; &nbsp;lda #:\1<br />&nbsp; &nbsp;ldx #\1<br />&nbsp; &nbsp;ldy #&#40;\3*2&#41;<br />&nbsp; &nbsp;jsr DMAPalette<br />.ENDM<br /><br />.MACRO LoadBlockToVRAM&nbsp; &nbsp;&nbsp; &nbsp;;DMA transfers a block to VRAM &#40;A:8b,XY:16b&#41;<br />&nbsp; &nbsp;ldx #\2&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;;args: 24b source, 16b dest, 8b size in bytes<br />&nbsp; &nbsp;stx $2116<br />&nbsp; &nbsp;lda #:\1<br />&nbsp; &nbsp;ldx #\1<br />&nbsp; &nbsp;ldy #\3<br />&nbsp; &nbsp;jsr LoadVRAM<br />.ENDM<br /><br />.BANK 0 SLOT 0<br />.ORG 0<br /><br /><br />.ENUM $0002<br />Joy1Raw&nbsp; &nbsp; &nbsp;DW&nbsp; &nbsp; &nbsp; ; Holder of RAW joypad data from register &#40;from last frame&#41;<br />Joy2Raw&nbsp; &nbsp; &nbsp;DW<br /><br />Joy1Press&nbsp; &nbsp;DW&nbsp; &nbsp; &nbsp; ; Contains only pressed buttons &#40;not held down&#41;<br />Joy2Press&nbsp; &nbsp;DW<br /><br />Joy1Held&nbsp; &nbsp; DW&nbsp; &nbsp; &nbsp; ; Contains only buttons that are Held<br />Joy2Held&nbsp; &nbsp; DW<br /><br />&nbsp;.ENDE<br /><br />&nbsp; &nbsp;<br />.SECTION &quot;Main&quot;<br />&nbsp; &nbsp;<br />Start:<br />&nbsp; &nbsp;InitSNES<br />&nbsp; &nbsp;lda #$80<br />&nbsp; &nbsp;sta $4200<br />&nbsp; &nbsp;lda #$80&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;;don't increment VRAM address until written to $2119<br />&nbsp; &nbsp;sta $2115&nbsp; &nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;;&#40;as opposed to $2118&#41;<br />&nbsp; &nbsp;LoadPalette SprPal, 128, 16&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ;sprite palettes start at 128<br />&nbsp; &nbsp;LoadBlockToVRAM Sprite, $0000, $0800<br />&nbsp; &nbsp;jsr SpriteInit<br />&nbsp; &nbsp;lda #&#40;256/2-16&#41;<br />&nbsp; &nbsp;sta $0000<br />&nbsp; &nbsp;lda #&#40;224/2-16&#41;<br />&nbsp; &nbsp;sta $0001<br />&nbsp; &nbsp;lda #%01010100<br />&nbsp; &nbsp;sta $0200<br />&nbsp; &nbsp;jsr SetupVideo<br />&nbsp; &nbsp;<br />loop:<br />&nbsp; &nbsp;wai<br />&nbsp; &nbsp;lda Joy1Press+1<br />&nbsp; &nbsp;and #$01<br />&nbsp; &nbsp;beq loop<br />&nbsp; &nbsp;inc $0000<br />&nbsp; &nbsp;inc $0000<br />&nbsp;&nbsp; &nbsp;jmp loop<br /><br />SetupVideo:<br />&nbsp; &nbsp;php<br />&nbsp; &nbsp;rep #$10<br />&nbsp; &nbsp;sep #$20<br />&nbsp; &nbsp;stz $2102<br />&nbsp; &nbsp;stz $2103<br />&nbsp; &nbsp;ldy #$0400<br />&nbsp; &nbsp;sty $4300<br />&nbsp; &nbsp;stz $4302<br />&nbsp; &nbsp;stz $4303<br />&nbsp; &nbsp;lda #$7E<br />&nbsp; &nbsp;sta $4304<br />&nbsp; &nbsp;ldy #$0220<br />&nbsp; &nbsp;sty $4305<br />&nbsp; &nbsp;lda #$01<br />&nbsp; &nbsp;sta $420B<br />&nbsp; &nbsp;lda #%10100000<br />&nbsp; &nbsp;sta $2101<br />&nbsp; &nbsp;lda #%00010000<br />&nbsp; &nbsp;sta $212C<br />&nbsp; &nbsp;lda #$0F<br />&nbsp; &nbsp;sta $2100<br />&nbsp; &nbsp;plp<br />&nbsp; &nbsp;rts<br /><br />LoadVRAM:&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;;initiates DMA transfer to VRAM<br />&nbsp; &nbsp;php<br />&nbsp; &nbsp;stx $4302<br />&nbsp; &nbsp;sta $4304<br />&nbsp; &nbsp;sty $4305<br />&nbsp; &nbsp;lda #$01<br />&nbsp; &nbsp;sta $4300&nbsp; &nbsp;&nbsp; &nbsp;;first write to $2118, then $2119, then $2118...<br />&nbsp; &nbsp;lda #$18<br />&nbsp; &nbsp;sta $4301<br />&nbsp; &nbsp;lda #$01<br />&nbsp; &nbsp;sta $420B<br />&nbsp; &nbsp;plp<br />&nbsp; &nbsp;rts<br />&nbsp; &nbsp;<br />DMAPalette:&nbsp; &nbsp;&nbsp; &nbsp; ;initiates DMA transfer to CGRAM<br />&nbsp; &nbsp;php<br />&nbsp; &nbsp;stx $4302<br />&nbsp; &nbsp;sta $4304<br />&nbsp; &nbsp;sty $4305<br />&nbsp; &nbsp;stz $4300&nbsp; &nbsp;&nbsp; &nbsp;;only write to $2122<br />&nbsp; &nbsp;lda #$22<br />&nbsp; &nbsp;sta $4301<br />&nbsp; &nbsp;lda #$01<br />&nbsp; &nbsp;sta $420B<br />&nbsp; &nbsp;plp<br />&nbsp; &nbsp;rts<br /><br />SpriteInit:&nbsp; &nbsp;&nbsp; &nbsp; ;move all sprites off screen<br />&nbsp; &nbsp;php<br />&nbsp; &nbsp;rep #$30<br />&nbsp; &nbsp;ldx #$0000<br />&nbsp; &nbsp;lda #$01<br />_offscreen:<br />&nbsp; &nbsp;sta $0000,x<br />&nbsp; &nbsp;inx<br />&nbsp; &nbsp;inx<br />&nbsp; &nbsp;inx<br />&nbsp; &nbsp;inx<br />&nbsp; &nbsp;cpx #$0200<br />&nbsp; &nbsp;bne _offscreen<br /><br />&nbsp; &nbsp;lda #$5555<br />&nbsp; &nbsp;ldx #$0000<br />_xsmb:<br />&nbsp; &nbsp;sta $0200,x<br />&nbsp; &nbsp;inx<br />&nbsp; &nbsp;inx<br />&nbsp; &nbsp;cpx #$0020<br />&nbsp; &nbsp;bne _xsmb<br />&nbsp; &nbsp;plp<br />&nbsp; &nbsp;rts<br />&nbsp; &nbsp;<br />VBlank:<br />&nbsp; &nbsp;php<br />&nbsp; &nbsp;jsr Joypad<br />&nbsp; &nbsp;stz $2102<br />&nbsp; &nbsp;stz $2103<br />&nbsp; &nbsp;sep #$20<br />&nbsp; &nbsp;lda $0000<br />&nbsp; &nbsp;sta $2104<br />&nbsp; &nbsp;lda $0001<br />&nbsp; &nbsp;sta $2104<br />&nbsp; &nbsp;plp<br />&nbsp; &nbsp;rti<br /><br />Joypad:<br />&nbsp; &nbsp;php<br />&nbsp; &nbsp;rep #$30<br />&nbsp; &nbsp;lda $4212<br />&nbsp; &nbsp;and #$01<br />&nbsp; &nbsp;beq Joypad<br />&nbsp; &nbsp;lda #$81<br />&nbsp; &nbsp;sta $4200<br />&nbsp; &nbsp;ldx Joy1Raw<br />&nbsp; &nbsp;lda $4218<br />&nbsp; &nbsp;sta Joy1Raw<br />&nbsp; &nbsp;txa<br />&nbsp; &nbsp;eor Joy1Raw<br />&nbsp; &nbsp;and Joy1Raw<br />&nbsp; &nbsp;sta Joy1Press<br />&nbsp; &nbsp;txa<br />&nbsp; &nbsp;and Joy1Raw<br />&nbsp; &nbsp;sta Joy1Held<br />&nbsp; &nbsp;plp<br />&nbsp; &nbsp;rts&nbsp; &nbsp;<br />.ENDS<br />&nbsp; &nbsp;<br />.BANK 1 SLOT 0<br />.ORG 0<br />.SECTION &quot;CharacterData&quot;<br />Sprite:<br />&nbsp; &nbsp;.INCBIN &quot;biker.pic&quot;<br /><br />SprPal:<br />&nbsp; &nbsp;.INCBIN &quot;biker.clr&quot;<br />.ENDS<br /></div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>mic_</b> [ Wed Sep 08, 2010 5:41 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I didn't do a full analysis so there may be other problems as well, but this:
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">Joypad:<br />&nbsp; &nbsp;php<br />&nbsp; &nbsp;rep #$30<br />&nbsp; &nbsp;lda $4212<br />&nbsp; &nbsp;and #$01<br />&nbsp; &nbsp;beq Joypad <br /></div>
<br />does not seem like a good idea, since you could end up trashing the stack completely by having the PHP instruction inside the loop.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>artakserkso</b> [ Wed Sep 08, 2010 7:38 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I knew it was something ridiculous, but this...  <img src="./images/smilies/icon_eek.gif" alt=":shock:" title="Shocked" /> 
<br />
<br />Thanks, mic_!
<br />
<br />I have to be more careful with the P reg...
<br />
<br />Btw, Mario moves a bit differently than I would have expected him to. If I tap Right fairly quickly (without trying too much), but at constant speed, Mario only moves once every two taps. Also, when I press and hold Right, he moves every half-second or so.
<br />
<br />In bsnes, however, pressing and holding Right only moves him once and tapping quickly really does move him as many times as I tap (this behaviour is what I would expect and like). Guess that must have something to do with cycles and my taking care of VBlank/the Joypad routine improperly.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Wed Sep 08, 2010 8:06 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />If you enable automatic joypad reading (bit 0 of $4200 = 1), it takes about three scanlines after vertical blank for the bits of $4218-$421F to settle. So do your DMA transfers to VRAM and wait for the controller reads to finish (that is, wait for bit 0 of $4212 to become 0) before you read them.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>artakserkso</b> [ Wed Sep 08, 2010 8:49 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Ah, right... You only need to set bit 0 of $4200 once. Noted.
<br />
<br />Also, I already had the wait for joypad stuff. But I accidentally put rep #$30 after the check, which probably meant I waited too long from when the joypad was ready to actually reading it.
<br />
<br />Thanks, tepples, it now works as it should!

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>byuu</b> [ Thu Sep 09, 2010 6:28 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">In bsnes, however, pressing and holding Right only moves him once and tapping quickly really does move him as many times as I tap (this behaviour is what I would expect and like).</div>
<br />
<br />You mean it works differently on real hardware?
<br />
<br />Yeah, that's most likely auto joypad polling. It strobes the controller between V=225 to V=227, bit-by-bit. But unfortunately nobody knows how that strobe works. blargg looked into the timing for me, but it turns out to be ridiculously complex.
<br />
<br />At the moment, I do all the polling at V=227. So if you read at V=225 with that on, you're basically getting the previous frames' completed state, whereas on the real thing you'd get weird data back.
<br />
<br />There's a small number of things even I can't do yet:
<br />- auto joypad polling
<br />- CPU revision 1 HDMA&lt;&gt;DMA conflict crashing
<br />- CPU&lt;&gt;SMP bus conflict issues
<br />- CGRAM/OAM writes mid-scanline going to the wrong addresses
<br />- SMP test register has two timing bits, and r1 has a rare timer glitch
<br />- DSP has a mute pulse, not an instant mute
<br />- initial memory states are not 'randomized' like the real thing
<br />- PPU doesn't always cache registers at the right times for mid-scanline writes
<br />
<br />Outside of those issues, and bugs we don't even know about yet, it should be perfect.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>artakserkso</b> [ Fri Sep 10, 2010 3:44 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Thanks a lot for the inside info, byuu, that's always great to hear!
<br />
<br />I hope some day the issues you mentioned get sorted out.
<br />
<br />By the way, bsnes is fantastic. It really helps when I have to test my code. I absolutely adore the debugger. Without the memory editor, I'm completely certain I'd never be able to understand why my code fails at first.
<br />
<br />Keep up the good work!

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>