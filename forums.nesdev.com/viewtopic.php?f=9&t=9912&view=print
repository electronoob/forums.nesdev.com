<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Just how cranky is the PPU OAM?</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Just how cranky is the PPU OAM?</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=9&amp;t=9912">http://forums.nesdev.com/viewtopic.php?f=9&amp;t=9912</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>3</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Mon Mar 11, 2013 8:41 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Just how cranky is the PPU OAM?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />About half a year ago, nocash released his <a href="http://forums.nesdev.com/viewtopic.php?p=100147#p100147" class="postlink">CHR-less Magic Floor</a>, and verified it against his PAL NES. I recently tried to make a reproduction of it on my NTSC NES, and it haaaaates it. All the sprites are wrong, and the dot usually disappears immediately. (Which is because the PPU OAM readback is somewhat broken in the 2C02, but there's more).<br /><br />Magic Floor originally moved the dot by doing something like<div class="codetitle"><b>Code:</b></div><div class="codecontent">LDA #0<br />STA $2003<br />LDA $2004<br />CLC<br />ADC YdirectionAndVelocity<br />STA $2004<br />LDA #3<br />STA $2003<br />LDA $2004<br />CLC<br />ADC XdirectionAndVelocity<br />STA $2004</div><br />I shadowed away the reads from $2004; tried resetting $2003 to 0 at the end, and even tried replacing the <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">$2003←3</tt> with <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">$2004←#Tile; $2004←0</tt>, but none of them really ever made it happy.<br /><br />And despite the entire OAM being set on powerup (all #$EF or #$FF, I tried both), there's still garbage sprites appearing in the upper left corner (if I had to guess, somewhere around X=Y=16). And behavior still gets worse as the PPU gets warmer.<br /><br />I finally switched the entire code to just use OAM DMA like everyone else, and it worked fine. So what's going on? Just how tricky is the OAM? Is it possible to do partial OAM updates on an NTSC NES? It seems silly to spend 513 or 514 cycles doing OAM DMA instead of ≈24.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Tue Mar 12, 2013 12:37 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Just how cranky is the PPU OAM?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I'll be pretty surprised if after all these years it turns out that even the $2004 writes (using STA) do not work correctly on 2C02. I mean, is it really possible that nobody has tested this properly before? Although I *do* distinctly remember several people wondering why their $2004 writing code didn't work.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Tue Mar 12, 2013 12:44 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Just how cranky is the PPU OAM?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Sprite DMA technically IS writes to $2004, they are just done by DMA.<br /><br />Reading from $2004 is however very ambigious. I think different revisions of the PPU are different, some allow reading OAM, some don't.<br />Anyway I see no valid reason to ever read OAM, to be honest.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Tue Mar 12, 2013 12:53 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Just how cranky is the PPU OAM?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I remember someone saying a long time ago that using $2004 for sprites wasn't reliable. For a while I thought his was true, but more recently someone else said this was nonsense. I have no idea what the deal really is with $2003/$2004.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Tue Mar 12, 2013 1:52 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Just how cranky is the PPU OAM?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I remember spending tens of hours trying to make sense of it when writing some tests. Suffice to say, $2003/$2004 aren't a simple address-data read/write pair or at least OAM has lots of quirks that cause extra things to happen.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>nocash</b> [ Thu Mar 14, 2013 1:20 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Just how cranky is the PPU OAM?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">Sprite DMA technically IS writes to $2004, they are just done by DMA.</div><br />Yes, technically (concerning what is passed through addresss/data bus), DMA and non-DMA should be same.<br />The differences that may cause the problems on NTSC consoles might be transfer timing, or transfer length (DMA writes all 100h bytes, whilst my Magic Floor game updates only 2 bytes; the sprites X and Y coordinates).<br /><br /><div class="quotetitle">lidnariq wrote:</div><div class="quotecontent">I shadowed away the reads from $2004; tried resetting $2003 to 0 at the end</div><br />Setting [2003h]=00h after manual transfers <em>should</em> leave the OAM address in same state as DMA transfer (assuming that DMA started at 00h, and wrapped to 00h after writing its 100h bytes).<br />However, as that didn't work: Did you try setting [2003h]=FFh, and then writing a dummy byte [2004h]=EFh? That would produce the same wrapping from FFh to 00h as happening at the end of DMA. Don't know if that will fix the problem... maybe the PPU is internally containing two OAM address registers, [2003h], and a second internal address register that gets updated only on writes to [2004h].

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Thu Mar 14, 2013 3:00 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Just how cranky is the PPU OAM?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">nocash wrote:</div><div class="quotecontent">Did you try setting [2003h]=FFh, and then writing a dummy byte [2004h]=EFh? That would produce the same wrapping from FFh to 00h as happening at the end of DMA.</div> You appear to be on to something.<br /><br />I made test ROMs that tried any one of these sequences:<br />$2003←$00, $2004←ty, $2004←0, $2004←0, $2004←tx, $2003←$00<br /><strong>$2003←$00, $2004←ty, $2004←0, $2004←0, $2004←tx, $2003←$FF, $2004←tx</strong><br /><strong>$2003←$FC, $2004←ty, $2004←$FC, $2004←$FC, $2004←tx</strong><br />$2003←$FC, $2004←ty, $2004←$FC, $2004←$FC, $2004←tx, $2003←$00<br />$2003←$FC, $2004←ty, $2004←$FC, $2004←$FC, $2004←tx, $2003←$FF, $2004←tx<br /><br />The ones in bold worked, i.e. the sprite not only appeared at all but also in the right place.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Thu Mar 14, 2013 4:54 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Just how cranky is the PPU OAM?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I recently wrote an <a href="http://rainwarrior.ca/projects/nes/bill.zip" class="postlink">NES ROM</a> using STA $2004 to fill up the OAM. It runs fine on a PowerPak, but strangely on the PowerPak Lite about half the sprites will be missing/elsewhere. (I should try it from an EPROM later...)<br /><br /><s>I find this really weird, especially since the sprites are still messed up on the PowerPak Lite even if I reset the cart. &#40;And on the PowerPak they&#39;re still fine if I reset.&#41; Exactly which sprites are messed up is mostly consistent, but sometimes changes a little from reset to reset.<br /><br />I thought this might be a problem with my PowerPak Lite, but maybe there&#39;s some really weird conditions for when it&#39;s safe to write $2004, or maybe the wiring of the cartridge is important. I dunno!</s><br /><br />Edit: After doing some testing, I have found that the $2004 writes work fine as long as I do them immediately before turning on rendering. See my later post for more info.<br /><br />Edit: Hrm, it's not -quite- reliable even when doing that! Wow. See my later posts.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Thu Mar 14, 2013 5:56 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Just how cranky is the PPU OAM?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I idly wonder if this is at all related to the <a href="http://forums.nesdev.com/viewtopic.php?f=9&amp;t=9902" class="postlink">MMC1+OAM problems</a> infiniteneslives was having.<br /><br />Something I find additionally confusing: when I first made the test ROM, all the irrelevant sprites were (as I said) somewhere around X=Y=16. Now all the offscreen ones are staying offscreen.<br /><br />For the record: I'm using NES-CNROM-256-05, where I removed the mask ROMs, desoldered H, V, and CPU A14 jumpers, shorted VRAM /OE to ground, connected VRAM A10 to PPU A13, jumpered  PRG /WR to Vcc, and just for good measure I removed the 161. PRG has been socketed with pin 1 folded out (so /BUSY won't try to sink power from Vcc), and I'm using an AT28C64-15PC (so 150ns)<br /><br /><span style="font-size: 70%; line-height: normal">Maybe the reason the CPU has OAM DMA and asserts M2 for 15/24 of the cycle is for the PPU, not for external ROMs? Maybe the reason that the 2C07 isn't cranky is because the 2A07 is clocked just a little slower?</span> … Probably not, given that people regularly report success at overclocking the 2A03 by 200%.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Memblers</b> [ Fri Mar 15, 2013 3:22 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Just how cranky is the PPU OAM?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">rainwarrior wrote:</div><div class="quotecontent">I recently wrote an <a href="http://rainwarrior.ca/projects/nes/bill.zip" class="postlink">NES ROM</a> using STA $2004 to fill up the OAM. It runs fine on a PowerPak, but strangely on the PowerPak Lite about half the sprites will be missing/elsewhere. (I should try it from an EPROM later...)<br /></div><br /><br />I would guess that the PowerPak menu has used the DMA, and that would account for the difference.<br /><br />Makes me wonder if using DMA for several frames, then switching over to manual writes would be any different.  I think it's been established that the PPU displaying sprites isn't enough to refresh the DRAM (by Andrew Davie's story about testing The Three Stooges).  I don't know much about the physics behind DRAM, but can we know if writing to $2004 is enough to refresh it?  If not, I guess $2004 would never be safely usable (maybe interspersed with DMA copies?).  But if it does, can a partially uninitialized/unrefreshed DRAM be unstable?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Fri Mar 15, 2013 3:35 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Just how cranky is the PPU OAM?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />If I'm not mistaken, with DRAM, bits will randomly change from '1' to '0' after some time. When the same cell is written again, it will of course take the new value, and normally other cells shouldn't be affected.<br /><br />I think it is common in DRAM that there is a mecanism that automatically writes back a read value during the same cycle. This way, just by reading the data, it can be refreshed, and this is simpler than doing a read cycle followed by a write cycle (especially if done in software !).<br />Nowadays most DRAM refresh in hardware (there is something that reads the cells permanently internally), but this is probably not the case with NES' DRAM.<br /><br />I've heard some old computer even had their main RAM as non-refreshable DRAM, and the NMI-style interrupt was meant to tell the CPU that it should read all the RAM to refresh it. This should hurt the performance terribly though.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Fri Mar 15, 2013 3:46 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Just how cranky is the PPU OAM?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Memblers wrote:</div><div class="quotecontent">I don't know much about the physics behind DRAM, but can we know if writing to $2004 is enough to refresh it?</div><br /><br />Generically, writing to DRAM is good enough to refresh it. With the OAM... dunno. One thought, given the experiment I had above: maybe when the address overflows from $FF to 0 it triggers a refresh?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Fri Mar 15, 2013 4:48 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Just how cranky is the PPU OAM?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">lidnariq wrote:</div><div class="quotecontent"><div class="quotetitle">Memblers wrote:</div><div class="quotecontent">I don't know much about the physics behind DRAM, but can we know if writing to $2004 is enough to refresh it?</div><br /><br />Generically, writing to DRAM is good enough to refresh it. With the OAM... dunno. One thought, given the experiment I had above: maybe when the address overflows from $FF to 0 it triggers a refresh?</div><br />Why wouldn't these work then?<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">$2003←$FC, $2004←ty, $2004←$FC, $2004←$FC, $2004←tx, $2003←$00<br />$2003←$FC, $2004←ty, $2004←$FC, $2004←$FC, $2004←tx, $2003←$FF, $2004←tx</div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Fri Mar 15, 2013 5:31 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Just how cranky is the PPU OAM?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Memblers wrote:</div><div class="quotecontent">I think it's been established that the PPU displaying sprites isn't enough to refresh the DRAM (by Andrew Davie's story about testing The Three Stooges).</div><br /><br />The two times I've built ROMs that loads once at startup through $2004, both of them were completely stable for at least 30 minutes with no writes at all to OAM but rendering on (don't think I've tested them for longer).<br /><br />Reading <em>should</em> be enough to refresh DRAM, though I don't know if the system is guaranteed to read all OAM bytes every frame. Does it quit early in the case of an 8-sprite overflow? It could just be that my use case didn't include this possibility.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Quietust</b> [ Fri Mar 15, 2013 7:16 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Just how cranky is the PPU OAM?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />It doesn't need to read every byte - all it needs to do is read all 32 <strong>rows</strong>, and that's guaranteed to happen every scanline if you have rendering enabled.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>3</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>