<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Reverse Engineering the CIC</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Reverse Engineering the CIC</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=9&amp;t=1219">http://forums.nesdev.com/viewtopic.php?f=9&amp;t=1219</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>15</strong> of <strong>27</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Sun Dec 03, 2006 2:23 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">My vote would be option 2, read the rom from the other regions. Assuming only the seed is being changed it should be very easy to pick out the bits that are different and form the seed. </div><br />It's just an assumtion. I've another one : Maybe Nintendo did just change the formula between the coded string lenght the main CIC sends and between the actual stirng lenght. (I mean the forumla dvdmth posted on page 12). I think that would be rather a easy way from Nintendo to get totally different data sterams, with the same seed and code, and just a diferent lenght formula.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Members, I've done a lot with the AVR series, and I much prefer the instruction set to that of the PICs. The software is much easier and I would be happy to loan you my STK500 to work on the Tiny11. Going from the 6502's instruction set to the AVR was much easier for me, than the PICs. </div><br />Maybe so, but from what I just reseached smaller AVR are DIP28, and it would be wastefull to use a chip with so much I/Os for that stupid CIC. I've never programmed any AVR, so I just cannot tell. Effectivly the PIC instruction set has absolutely nothing to do with the 6502 (6502 is much more powerfull in my opinion), but it's just different, and you can easily get used to it. The main difference is that for almost each opperation you have to tell if the result goes to "file" or "W register", so you can do crazy things like incrementing a variable and load it to the W accumulator in one single istruction, and without affecting the original variable. The main problem is that there is no indexed mode, you have no chance to ever do "lda Array,X", you're forced to use indirect adressing or just direct adressing.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">It's jumping the gun a bit to do this by itself though, the idea kevtris and I both had was that we should start out by keeping the timing and code separate. So to start with and make sure we've got a valid base to start with, we could wire one of the PIC's I/O pins to a lockout chip's clock. Run one emulated instruction, clock the CIC, run another, clock, and so on. So I guess just add a macro at the start or end of every translated instruction, should be no problem. </div>
<br />That would require the PIC's clock to be at least ten times faster than CICs, and maybe even more. Even with a PLL circuit we only can get 4 times faster (form what I got) and with two PLL circuits in series it would be 16 times faster, but the PIC12F509 will never run at a such rate (64MHz). I just think it's better to rewrite the whole algorithm in PIC assembly, and I'm pretty sure the PIC can perform actual calculations much faster than CIC, simply emulating the instuction like I did won't be of much use. I think I'll stop to just emulating instuction on the PIC and I'll try to do my best to understand the actual algorithm. This instruction set is horrible and incredibly confusing, tough. I think I'll work with it.
<br />
<br />EDIT : I still have no idea on the behaviour of the X Register, so maybe I'm getting things all wrong. I'm now trying to understand how the first nybble transmission works (the transmition in the initialisation code). However, it's nearly impossible becaue it relies on its reset state, wich is unpredictable, so the state of RAM after initialisation is totally unpredicatable. I don't know if all RAM is supposed to be cleared on powerup, but I don't think so.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>BootGod</b> [ Sun Dec 03, 2006 9:30 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />dvdmth updated his doc the other day, <a href="http://bootgod.dyndns.org:7777/downloads/TengenQ.txt" class="postlink">here</a> is the updated version.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>drk421</b> [ Sun Dec 03, 2006 10:55 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Check out the AVR instruction set:
<br />
<br />You get 32 registers w/ indirect access using x,y or z registers.
<br />
<br />More about the instruction set can be found here:
<br />
<br /><!-- m --><a class="postlink" href="http://homepage.ntlworld.com/matthew.rowe/micros/avrinstr.htm">http://homepage.ntlworld.com/matthew.ro ... rinstr.htm</a><!-- m -->
<br />
<br />and
<br />
<br /><!-- m --><a class="postlink" href="http://www.atmel.com/atmel/acrobat/doc0856.pdf">http://www.atmel.com/atmel/acrobat/doc0856.pdf</a><!-- m -->
<br />
<br />and
<br />
<br /><!-- m --><a class="postlink" href="http://en.wikipedia.org/wiki/AVR_instruction_set">http://en.wikipedia.org/wiki/AVR_instruction_set</a><!-- m -->

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Memblers</b> [ Sun Dec 03, 2006 12:45 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />drk421: Thanks for the great devkit loan offer, I'll give it some thought.
<br />
<br /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">Maybe so, but from what I just reseached smaller AVR are DIP28, and it would be wastefull to use a chip with so much I/Os for that stupid CIC. <br /></div><br /><br />There is an DIP8 one, ATTiny11 is 50 cents from Digikey.  1kB of program memory (not sure about instruction size though), and 32 bytes of RAM, which is barely enough but there a decent amount of registers.  But the main reason it's interesting is because it runs 1 instruction per clock, rather than 1 instruction per 4 clocks on the PIC and Tengen chip.  It almost allows us to be lazy and translate the code, but surely understanding the algorithm would be much nicer.<br /><br />Ultimately, the algorithm doesn't matter too much, the lockout chip is all about the timing.  It's very possible the CIC will know something is up if we write to it's data-in even once on any clock cycle other than the exactly correct one.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">That would require the PIC's clock to be at least ten times faster than CICs, and maybe even more.<br /></div>
<br />
<br />That's not the purpose though, what I mean is all the speed in the world won't make any difference if we don't have the instruction set and execution 100% perfectly accurate.  Programming a PIC and sticking it right onto an NES cart as a test would be awesome if it works, it's not impossible and I'd be very impressed, but if it doesn't work it'll be a dead end that's nearly impossible to debug.
<br />
<br />I'm just advocating the safe way, taking the CIC out of the NES and letting the PIC clock it at it's own leisurely pace.  Eventually it could be whittled down to clock the CIC for every PIC instruction, and <em>then</em> when that works it should be ready to stick onto an NES cart for the real test.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Sun Dec 03, 2006 1:41 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">There is an DIP8 one, ATTiny11 is 50 cents from Digikey. 1kB of program memory (not sure about instruction size though), and 32 bytes of RAM, which is barely enough but there a decent amount of registers. But the main reason it's interesting is because it runs 1 instruction per clock, rather than 1 instruction per 4 clocks on the PIC and Tengen chip.</div><br />Sound interesting. I think this is a option to be considerated, but I'm pretty sure the PIC can do it as well (just a totally different way to reproduce the same algorithm faster and then kill the remaining time should work fine). There is already places where the Tengin chip kills time to wait Nintendo's one.<br /><br />EDIT : Looking at the datasheet is doesn't seem that the AVR tigny supports external clock, wich is a pain in the ass, just like the PIC10F series. Maybe there is another variant that does ? (I just looked at the first datasheet that came up, it was ATigny15L)<br /><br />EDIT 2 : Okay, the ATigny 13 supports external clock it seems.<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Ultimately, the algorithm doesn't matter too much, the lockout chip is all about the timing. It's very possible the CIC will know something is up if we write to it's data-in even once on any clock cycle other than the exactly correct one. </div><br />Well, the NES' part lock CIC is supposed to be the exact same code, so we're supposed to know exactly how they behave. BTW I'm surprised there is just no place where the programm actually reads the lock/key input pin. I think the Tengen chip is key only, and the lock mode was replaced by the test mode. Also, the lock and keys most probably runs the same programm, but with slight differences.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I'm just advocating the safe way, taking the CIC out of the NES and letting the PIC clock it at it's own leisurely pace. Eventually it could be whittled down to clock the CIC for every PIC instruction, and then when that works it should be ready to stick onto an NES cart for the real test.</div>
<br />Yeah, that'd be less frustrating to see it don't work with a plain LED or multimeter than with the actual conole, hehe.
<br />
<br />Also, I've updated my PIC emulating code above and fixed a lot of things that was wrong. I think it emulates the main thing proprely, but there is probably still errors in the translation. Also I looked at the 18F509 datasheet, and yeah, PLL is supported so that's still an option.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Mon Dec 04, 2006 9:36 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">Well, the NES' part lock CIC is supposed to be the exact same code, so we're supposed to know exactly how they behave. BTW I'm surprised there is just no place where the programm actually reads the lock/key input pin. I think the Tengen chip is key only, and the lock mode was replaced by the test mode. Also, the lock and keys most probably runs the same programm, but with slight differences.</div>
<br />Yeah, it is key only. Also, if you look at my C-translation of the CIC code, you'll see that Tengen chip already does calculate also the "lock" part of the signal. It uses 15 nibbles in the first bank to calculate the "key" part, and 15 nibbles in the second bank to calculate the "lock" part (as dvdmth said in an earlier post). The only reason it reads DATA IN, is to compare its calculations to what the lock is sending. It seems to me that neither the DATA IN values or its internal "lock" calculations matter what it is sending to DATA OUT.
<br />
<br />So in short: AFAIK, once it has read the 4-bit ID from lock, it doesn't need the DATA IN at all. But it has to calculate the "lock" data, because the calculations don't run in static time (the time varies based on the calculations). Ie. if it didn't calculate them, it would not be in sync with the lock.
<br />
<br />If somebody feels up to it, it would be useful to have longer dumps of conversations between the lock and the key (all variations), than the LOCK2.BIN by kevtris.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Lord Nightmare</b> [ Tue Dec 05, 2006 6:01 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Neviksti: I vote for option 1. We still don't understand how the rom is even laid out in the real Nintendo CIC, once that part is figured out (and possibly the instruction decoder and ALU also) then we can get somewhere. Its probably best to image the whole chip so we don't miss anything.
<br />
<br />The problem with this is that it takes a long time and is a lot of work for you to snap ~100 pictures of a chip die. So I guess its really up to you.
<br />
<br />Lord Nightmare
<br />
<br />P.S. I have an SGB-CPU and a PAL SNES CIC if you want to decap those. I also have a few other chips I need decapped but can probably scan myself once the plastic package is removed.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>kevtris</b> [ Thu Dec 07, 2006 11:04 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Fri Dec 08, 2006 9:48 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />That's very interesting. I don't know pretty much how you did it, but it seems like a kinda small timing error or something. Maybe it's just a branch that eats you too much cycles in a main loop or something.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>dvdmth</b> [ Fri Dec 08, 2006 9:48 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">kevtris wrote:</div><div class="quotecontent">On inspection, 8h was loaded into location 07h... which is the somewhat "special" case where it adjusts the offset from 0 to 1.</div>
<br />I assume you're taking into account the two NOPs that the Tengen chip executes when this condition is true.  Make sure you're using up the right amount of time (two instructions = eight cycles) when $07 == 8.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>kevtris</b> [ Fri Dec 08, 2006 3:43 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>dvdmth</b> [ Fri Dec 08, 2006 7:40 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I did the disassembly by hand.  I double-checked the work by comparing with the logs, and I'm 99% sure I checked every instruction (except for the unimportant ones from $C1-DF).  I'll re-check my work, and I invite anyone to find any errors I might've made.
<br />
<br />A possibility might be an error in the instruction set description.  I placed my interpretation of the instruction set (based mostly on what had already been posted here) at the top of the file.  If there are any errors in the instruction set description, that can change the resulting disassembly.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Fri Dec 08, 2006 7:51 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">kevtris wrote:</div><div class="quotecontent">One question- was that disassembly of the lockout data done manually, or was it done using a program?  If it was done manually there's a chance some errors were introduced maybe.</div>
<br />My C-translation, on the other hand, was not based on dvdmth's disassembly. Instead I wrote my own disassembler, which disassembled the machine code to some basic C code. Then I iterated over and over those pieces of code, until it was clear enough. So, it is possible my disassembler, and thus the C-translation, is faulty.
<br />
<br />As I said earlier, it would be cool to have longer dumps of data of CIC conversations (with different seeds AND different types of chips), so I could test my stuff out with them. So far I've only tested them (the emulator, the output of the disassembler, and the optimized C-algo), with kevtris' LOCK2.BIN, with which they worked flawlessly, but that's not *that* long a dump.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>kevtris</b> [ Fri Dec 08, 2006 10:12 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>kevtris</b> [ Sat Dec 09, 2006 3:09 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>15</strong> of <strong>27</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>