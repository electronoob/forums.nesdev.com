<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - KNES library for CC65 (aka Programming the NES in C)</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">KNES library for CC65 (aka Programming the NES in C)</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=7099">http://forums.nesdev.com/viewtopic.php?f=2&amp;t=7099</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>3</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Tue Oct 26, 2010 11:34 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>KNES library for CC65 (aka Programming the NES in C)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />This is a replacement NES library for CC65, somewhat alike to <a href="http://nesdev.com/bbs/viewtopic.php?t=4814" class="postlink">rNES</a>. I have removed bunch of “useless” stuff from the default nes.lib and replaced crt0.s with a new version. There's also a platformer demo with source.
<br />
<br />Get it from <!-- m --><a class="postlink" href="http://kkfos.aspekt.fi/projects/nes/knes-library-for-cc65/">http://kkfos.aspekt.fi/projects/nes/kne ... -for-cc65/</a><!-- m -->
<br />
<br />Any comments and suggestions are welcome.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>GradualGames</b> [ Thu Oct 28, 2010 9:30 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Hey, that's really neat. Hopefully someone will use it for something cool. At the very least perhaps it could help make learning the NES a little easier for some people. They could start with C and then gradually migrate to replacing their C code with asm, perhaps. I know for me I'm so used to asm I don't think I'll need to use C...but it is still neat that it is now proven it is possible to write a decent game for the NES in C. Good work. I'm assuming the demo is similar to the C platformer demo you posted a while ago?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Thu Oct 28, 2010 10:14 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Gradualore wrote:</div><div class="quotecontent">Hey, that's really neat. Hopefully someone will use it for something cool. At the very least perhaps it could help make learning the NES a little easier for some people. They could start with C and then gradually migrate to replacing their C code with asm, perhaps.</div><br />Yeah, that was one of the goals. Hopefully it brings more people to the homebrew scene. Nerdy Nights style programming tutorial for C could work really well. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /><br />It's funny to think that the bulk of the currently released homebrew games could have been written in C... (well, it's mostly puzzle games anyways).<br /><br /><div class="quotetitle">Gradualore wrote:</div><div class="quotecontent">I know for me I'm so used to asm I don't think I'll need to use C...but it is still neat that it is now proven it is possible to write a decent game for the NES in C. Good work. I'm assuming the demo is similar to the C platformer demo you posted a while ago?</div>
<br />Yeah, the demo is almost exactly the same. I simply added a few more features and fixed a couple of things. It's not still a full game but there's plenty of CPU time to add features (especially if the music engine is replaced with one written in assembly).
<br />
<br />I actually quite like writing NES stuff in C. I'm probably going to write some of the less speed critical parts of my WIP game in C, like menus and cut scenes.
<br />
<br />Also I think it can be useful for prototyping algorithms. Of course it's possible to use something like SDL for the same purpose (and I have done so in the past) but at least I have another option now. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /> It's much less error prone than writing the same stuff in asm, IMO.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Thu Oct 28, 2010 10:29 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />If it's good enough for Koei...

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>3gengames</b> [ Fri Oct 29, 2010 8:30 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I've always wanted to program the NES in basic....even through an interpreter. Maybe there is some way to use BASIC compiled into assembly for the NES? -pokes all the 1980's Basics-
<br />
<br />
<br />And seeing the performance hit for C on a NES.....I think it's just too insane. 6K cycles for only a few commands? Ickkk.....and anyone who knows C should be able to pick up assembly IMO. I think if we were to make a programming language people who can't program could make stuff with, I don't think C would be the answer..... :/

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Fri Oct 29, 2010 9:29 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">65024U wrote:</div><div class="quotecontent">I've always wanted to program the NES in basic</div>
<br />Family BASIC exists. It was never ported to NES because the keyboard wasn't brought over. In fact, as I understand it, there is still no standard keyboard for the 72-pin NES, nor an adapter for PS/2 or USB keyboards. If there were one, I'd probably have made something years ago.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Fri Oct 29, 2010 9:30 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">65024U wrote:</div><div class="quotecontent">And seeing the performance hit for C on a NES.....I think it's just too insane. 6K cycles for only a few commands? Ickkk.....and anyone who knows C should be able to pick up assembly IMO.</div>
<br />Now I don't want to come out too defensive, you're entitled to your opinion, but I don't agree with you.
<br />
<br />1) You're refering to the figures I posted at NintendoAGE? I don't know where you get "only a few commands" from... The code checks controller state, updates sprites, physics and checks collisions in update_frame(), hardly "only a few commands". Also there is room for (algorithmic) optimization.
<br />
<br />2) Even if there IS a performance hit (of course there is compared to assembly, unless the assembly is programmed really poorly), it doesn't matter UNLESS it matters. What I'm trying to say, it doesn't matter how much CPU time it uses if it does the job in time. Premature optimization is the root of all evil.
<br />
<br />3) "and anyone who knows C should be able to pick up assembly".. but assembly isn't C. C code is more maintainable, more readable, faster to code etc etc. To put it short, I think you're missing the point.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Fri Oct 29, 2010 9:45 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />It's great to see a C library released for the NES.
<br />I didn't look into it, but it sounds all good to me. Saying the performance hit isn't worth the trouble coding in C before even trying is now a good engineering approach. You'd want to at least try to code a game in C, and if it's too slow, port it to assembly, if still too slow port it to a faster system <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />
<br />
<br />What you guys seems to be forgetting is that it's perfectly possible to mix assembly and C in the same project. So in a typical case, you'd do tight loops that are executed often in assembly, and complex code that isn't executed often in C. Typically :
<br />- Interrupts
<br />- Sprites mazing
<br />- Scroll updates
<br />- Controller reading
<br />- Music engine
<br />
<br />Must be done in assembly. For game logic, it's probably not much of a performance hit if you write it in C. I might be wrong, but without trying you can't know.
<br />
<br />Oh and of course you have to reserve an argument stack which is a bit annoying and will eat RAM... but maybe this will kill some bugs. I've had so many bugs in assembly because of variable conflicts, especially with TempX or whatever general purpose variables.
<br />
<br />PS : A major problem though is that th most you use "tricks" to make C more optimized, like using static variables instead of parameters, the most it will end up complex to read and understand as ASM, so in the end you'd as well use ASM.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Fri Oct 29, 2010 10:17 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">PS : A major problem though is that th most you use "tricks" to make C more optimized, like using static variables instead of parameters, the most it will end up complex to read and understand as ASM, so in the end you'd as well use ASM.</div>
<br />This is definitely true (I assume you meant global variables). Also looking at the C generated assembly listing for hours trying to figure out ways to make the C code more optimized can end up taking more time than writing the same thing in ASM, and can defeat the purpose of using C. But oh well. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>cartlemmy</b> [ Fri Oct 29, 2010 10:22 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I think this is a great thing! To me great thing about it is it provides and easier starting point for those just new to NES development. Naturally when they reach the limitations of C code they will be forced to move on the ASM, and by that point they should understand enough that it won't be seemingly impossible. I know I just about gave up when I fist looked at it.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Fri Oct 29, 2010 11:38 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />If you provide a library that contains useful reusable routines that do significant work, the C code can do the light-duty stuff and thus not need to be as efficient. For example, you might have an asm routine that does sprite DMA, and copies tens of bytes to VRAM quickly in VBL, and make it usable from C.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>clueless</b> [ Fri Oct 29, 2010 11:54 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">thefox wrote:</div><div class="quotecontent"><div class="quotetitle">65024U wrote:</div><div class="quotecontent">And seeing the performance hit for C on a NES.....I think it's just too insane. 6K cycles for only a few commands? Ickkk.....and anyone who knows C should be able to pick up assembly IMO.</div><br />Now I don't want to come out too defensive, you're entitled to your opinion, but I don't agree with you.<br /><br />1) You're refering to the figures I posted at NintendoAGE? I don't know where you get "only a few commands" from... The code checks controller state, updates sprites, physics and checks collisions in update_frame(), hardly "only a few commands". Also there is room for (algorithmic) optimization.<br /><br />2) Even if there IS a performance hit (of course there is compared to assembly, unless the assembly is programmed really poorly), it doesn't matter UNLESS it matters. What I'm trying to say, it doesn't matter how much CPU time it uses if it does the job in time. Premature optimization is the root of all evil.<br /><br />3) "and anyone who knows C should be able to pick up assembly".. but assembly isn't C. C code is more maintainable, more readable, faster to code etc etc. To put it short, I think you're missing the point.</div>
<br />
<br />As someone with many years of experience in both C and asm, I have to agree 99% with thefox's three points.  Being able to program in pure asm has a certain "coolness factor" to it.  However, pure asm is not always the right answer.  There are different tools and different jobs.  Sometimes several tools are equally valid choices, and sometimes only one tool will do (and sometimes no tools work).
<br />
<br />My only issue is with "pre-mature optimization".  Some people (ok, my former boss) are militant about deferring optimization until really late.  The problem is that by then the project becomes too difficult to optimize (sometimes).  Choosing proper data structures at the beginning will go a long way to ensuring that your project will be optimal enough later.  For my personal projects I tend to profile, optimize and refactor my code many times as I develop it.  If nothing else, I'll make it crunch a large data set while running inside a profiler so that at least I know where it is spending its time.
<br />
<br />That being said, I still have not experimented with using C (or any other high-level language) in a NES project.  I liked the idea of NESHLA, but I did not like its implementation or syntax.  I write all of my asm in ca65, so throwing in cc65 should not be too difficult.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>3gengames</b> [ Fri Oct 29, 2010 1:03 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Haha sorry, I didn't want to make it explode. I think this is really cool, but shouldn't it be more for newbies? This is very cool and worth looking into, but still.....wouldn't a BASIC-type OS that also could translate to 6502 ASM on the same system work a bit better then C?
<br />
<br />
<br />
<br />I am just thinking....If you could make a BASIC interpreter that at the end of development, be assembled to assembly? Or atleast include C functions that are smaller and do less so you don't have to call whole functions, because the less you can do per instruction, the more you can add and customize.
<br />
<br />
<br />
<br />And wasn't there a C compiler from some game company? We need to contact them!  <img src="./images/smilies/icon_lol.gif" alt=":lol:" title="Laughing" />
<br />
<br />
<br />I'll probably mess with this later....If the weekend ever gets here.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Memblers</b> [ Fri Oct 29, 2010 3:38 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Great demo.  Pretty cool to see the source for an NES program, coded in C.  I think I will use C for some things on NES, and having a base to start with helps.  I've been doing asm for years, but C is new to me.
<br />
<br />65024U: There is one BASIC compiler I'm aware of - <a href="http://bobrost.com/nes/files/nbasic_manual.html" class="postlink">nbasic</a>.  But you're sure to need inline assembly with this.  A BASIC interpreter would be cool, Family BASIC seems good enough to use though.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Fri Oct 29, 2010 3:51 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">65024U wrote:</div><div class="quotecontent">wouldn't a BASIC-type OS that also could translate to 6502 ASM on the same system work a bit better then C?</div>
<br />Work better in what sense? <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /> I think it's bit of an apples and oranges situation...

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>3</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>