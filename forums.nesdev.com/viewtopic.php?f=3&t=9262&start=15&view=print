<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Windowed VSync</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Windowed VSync</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=3&amp;t=9262">http://forums.nesdev.com/viewtopic.php?f=3&amp;t=9262</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>2</strong> of <strong>5</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>ccovell</b> [ Fri Sep 07, 2012 11:23 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Windowed VSync</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />You can skip my post, but coming from an upbringing on systems that had instantaneous scrolling and animation (NES, Amiga) the lagginess &amp; shearing that still seems unavoidable in Windows makes me...  (searches for the &quot;puke&quot; smiley)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Fri Sep 07, 2012 11:33 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Windowed VSync</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />It's not unavoidable at all if you go to fullscreen mode and put your game thread at higher priority.<br /><br />The reason windows is laggy and sheary in windowed mode is because you're doing 10 things at once. Your NES couldn't do that at all. Stuff that ran on the Amiga workbench had <a href="http://www.youtube.com/watch?v=_9Dwk98gb7o#t=7m10s" class="postlink">plenty of lag and flicker</a>.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sat Sep 08, 2012 5:59 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Windowed VSync</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I did several things at once on a 1999 laptop with one 0.333 GHz P6-class core. Clock speeds, number of cores, and instructions per clock have increased since then. Shouldn't a 2 GHz quad core i7 (6x clock, 4x parallelism, 2x IPC) be able to run more than 10 things?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>ReaperSMS</b> [ Sun Sep 09, 2012 3:24 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Windowed VSync</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Various issues with some of the ideas in this discussion:<br /><br />&quot;VSync should just be an interrupt!&quot;: Ok, who gets it, and in what order? If it's a single core machine, at best everything that asked to be notified will find out about it, in some order. You have no idea what other programs are trying to do, and the OS can't really enforce things. Likely outcome: you tear anyways, because your particular timeslice doesn't land until halfway down the screen.<br /><br />&quot;Scrolling and large movements look terrible, they didn't on my amiga!&quot;: Drawing under windows is inherently tied to the WM_PAINT message, that gets delivered to each window that needs it. For it to show up, first the message goes into the application's message queue, which it's main thread has to pump occasionally. Windows has no control over when that happens, and applications are terrible about doing that in a timely fashion. When you get the usual &quot;Blah (Not Responding)&quot; that's the application not pumping it's message loop. If it isn't pumped, the message doesn't go to the window, and no draw commands happen.<br /><br />Once the message is delivered, windows calls the window proc, and usually that just switches on the message type. WM_PAINT messages have some additional requirements, they have to wrap their draws with BeginPaint() and EndPaint(), which validates the part of the screen they're asked to repaint. The drawing for most things is generally done with GDI, and has a terrible track record for hardware acceleration. Additionally, applications can catch and override any of the messages windows sends down, including the ones involved in painting the window frame, title bar, etc.<br /><br />On top of all that, a lot of apps do not bother trying to paint just the part that was invalidated, and redraw their entire window no matter what. Usually they start with a clear, to make sure things look right, and may take a particularly long time to iterate through redrawing all their controls. You've probably seen the crap that shows up in parts of a window that get uncovered when that app isn't responding to WM_PAINT for some reason. Apps that have a more active update approach (emulators, games, anything that's doing particularly intensive video playback, etc) may update an offscreen buffer, and blit it over in WM_PAINT, but that isn't necessarily guaranteed to happen at any particular time.<br /><br />Further complicating that are situations like dragging, or hitting menus, etc. Sometimes people write horrible message loops that stall the rest of the application while the user is interacting with that stuff. Whether you drag windows or outlines is under user control, if it's outlines, you won't get any WM_PAINT messages anyways.<br /><br />Lastly, there's just a ton of data to move around some times. A naive redraw may redraw every pixel in the window 2-3 times, between clearing, and excessive amounts of text or transparent junk. A 1024x768 window at 32bb is ~4M of noncontiguous data in the framebuffer. 1920x1080 is ~8.3M<br /><br />tl;dr: GUIs are Hard.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>WedNESday</b> [ Sun Sep 09, 2012 3:51 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Windowed VSync</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />VSync should just be a bit going from low to high like on the NES. Yes I know that all kinds of programs might wait for it to go high and then all want a piece of the action at the same time but it would still be a nice feature especially if you could via the Windows API change which program(s) get the highest priority.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>ccovell</b> [ Sun Sep 09, 2012 5:39 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Windowed VSync</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">ReaperSMS wrote:</div><div class="quotecontent">Various issues with some of the ideas in this discussion:<br /><br />&quot;Scrolling and large movements look terrible, they didn't on my amiga!&quot;: Drawing under windows is inherently tied to the WM_PAINT message, that gets delivered to each window that needs it. For it to show up, first the message goes into the application's message queue, which it's main thread has to pump occasionally. Windows has no control over when that happens, and applications are terrible about doing that in a timely fashion. When you get the usual &quot;Blah (Not Responding)&quot; that's the application not pumping it's message loop. If it isn't pumped, the message doesn't go to the window, and no draw commands happen.<br /><br />...<br /><br />On top of all that, a lot of apps do not bother trying to paint just the part that was invalidated, and redraw their entire window no matter what. Usually they start with a clear, to make sure things look right, and may take a particularly long time to iterate through redrawing all their controls. You've probably seen the crap that shows up in parts of a window that get uncovered when that app isn't responding to WM_PAINT for some reason. Apps that have a more active update approach (emulators, games, anything that's doing particularly intensive video playback, etc) may update an offscreen buffer, and blit it over in WM_PAINT, but that isn't necessarily guaranteed to happen at any particular time.<br /><br />tl;dr: GUIs are Hard.</div><br /><br />Rainwarrior: Well, the Amiga in that vid had a clock speed of 7.14 Mhz... so some GUI redraw lag is quite forgivable.<br /><br />Another thing compounding that, and related to what Reaper said, the default redrawing mode for Amiga windows is &quot;simple&quot; which means everything gets redrawn every time something is moved, resized...   There is a &quot;smart&quot; redraw which uses the blitter to store hidden windows in RAM, then blit them to &quot;VRAM&quot; when they are revealed as windows are moved.  Dumb programs might also only use the &quot;simple&quot; method.<br /><br />Hopefully smart Windows programs also use some kind of smart window caching routine and don't tie up the rest of the system too.<br /><br />But I guess this topic is about window refresh, not redrawing, so ignore my comments...  <img src="./images/smilies/icon_arrow.gif" alt=":arrow:" title="Arrow" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>WedNESday</b> [ Sat Dec 15, 2012 2:23 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Windowed VSync</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />What if I were to wait for the vblank with a DirectX function and then start a timer and time say 100 frames to get an average. That way could I just wait for my timer to hit 0 and the Blt windowed?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>natt</b> [ Sat Dec 15, 2012 2:49 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Windowed VSync</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">WedNESday wrote:</div><div class="quotecontent">What if I were to wait for the vblank with a DirectX function and then start a timer and time say 100 frames to get an average. That way could I just wait for my timer to hit 0 and the Blt windowed?</div><br /><br />Do you have access to a timer that good?  Probably not.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>snarfblam</b> [ Sat Dec 15, 2012 5:27 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Windowed VSync</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />It sounds like it's worth a try. Just keep in mind that the accuracy of timers can vary between different machines.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>koitsu</b> [ Sat Dec 15, 2012 5:39 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Windowed VSync</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><a href="http://support.microsoft.com/kb/172338" class="postlink">QueryPerformanceCounter()</a> (<a href="http://www.mindcontrol.org/~hplus/misc/simple-timer.html" class="postlink">another</a>) with <a href="http://msdn.microsoft.com/en-us/library/windows/desktop/ms644905%28v=vs.85%29.aspx" class="postlink">QueryPerformanceFrequency()</a>.  Or possibly <a href="http://www.virtualdub.org/blog/pivot/entry.php?id=106" class="postlink">timeGetTime()</a>.<br /><br />Bottom line: if the underlying hardware the OS is being run on lacks decent timecounters (i.e. the HPET implementation is broken or not enabled, ACPI DSDT is wrong, TSC is broken (this would affect a lot more than just QPC though!), or (and god forbid this be the case) the system's TC is the i8254), then too bad.  I wouldn't bother trying to cater to those folks either, especially anyone using the i8254.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>natt</b> [ Sat Dec 15, 2012 6:05 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Windowed VSync</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />QueryPerformanceCounter() doesn't give you a way to sleep your thread and be woken up with accurate timing, though.  And if you just spin on it, you're wasting CPU time, and the OS will swap you out at some point; could miss your vblank that way?<br /><br />Bizhawk uses D3D9's D3DPRESENT_INTERVAL_ONE if the user asks for vsync.  It seems to work well for me in windowed mode (low CPU usage, stable with 30hz test patterns), but I guess some implementations are better than others.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>koitsu</b> [ Sat Dec 15, 2012 6:31 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Windowed VSync</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">natt wrote:</div><div class="quotecontent">QueryPerformanceCounter() doesn't give you a way to sleep your thread and be woken up with accurate timing, though.  And if you just spin on it, you're wasting CPU time, and the OS will swap you out at some point; could miss your vblank that way?</div><br />Please define &quot;accurate timing&quot;.  Give me numbers and units.  How granular are we talking here?  1ms?  2ms?  10ms?  Longer?  Without actual numbers it's difficult to say &quot;you're right&quot; or &quot;let me point you to a resource...&quot;.<br /><br />On *IX systems -- I'll use FreeBSD as an example but I know Linux and Solaris have their own implementations as well -- we have <a href="http://www.freebsd.org/cgi/man.cgi?query=kqueue&amp;apropos=0&amp;sektion=0&amp;manpath=FreeBSD+9.0-RELEASE&amp;arch=default&amp;format=html" class="postlink">kqueue(2)</a> which allows a userland application a way to tell the kernel to &quot;call back into&quot; the userland application and run code at a set interval (resolution as low as 1ms -- see EVFILT_TIMER).<br /><br />I'm fairly certain Windows has an equivalent of this; <a href="http://msdn.microsoft.com/en-us/windows/hardware/gg463347.aspx" class="postlink">this article implies such</a>.  But in general, as discussed <a href="http://forums.nesdev.com/viewtopic.php?p=102945#p102945" class="postlink">in this thread</a> there are certain CPU-level features (specifically CPU P-states and EIST) that can add delays to the interval time.  There's nothing you can do about that, honestly -- and don't think those necessarily will cause massive amounts of latency (see very last post in that thread; author insisted those features were cause of stuttering, but the issue turned out to be in his code).<br /><br />Some posts on stackoverflow also indicate that GetTickCount(), preceded by a call to timeBeginPeriod() (to request 1ms resolution), tends to be more accurate.  The problem with GetTickCount() is that you do have to spin in a tight loop.  Not very ideal.  I will admit here that I have not looked at Windows' thread creation API so I don't know what's available WRT that.<br /><br />But as I understand it, on Windows the best option you have to keep a CPU from being maxxed out while waiting for a thread to fire is Sleep().  And that's discussed <a href="http://forums.nesdev.com/viewtopic.php?f=3&amp;t=9254" class="postlink">in this thread</a>.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>natt</b> [ Sat Dec 15, 2012 7:03 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Windowed VSync</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">koitsu wrote:</div><div class="quotecontent"><div class="quotetitle">natt wrote:</div><div class="quotecontent">QueryPerformanceCounter() doesn't give you a way to sleep your thread and be woken up with accurate timing, though.  And if you just spin on it, you're wasting CPU time, and the OS will swap you out at some point; could miss your vblank that way?</div><br />Please define &quot;accurate timing&quot;.  Give me numbers and units.  How granular are we talking here?  1ms?  2ms?  10ms?  Longer?  Without actual numbers it's difficult to say &quot;you're right&quot; or &quot;let me point you to a resource...&quot;.<br /></div><br /><br />Vblank can vary quite a bit from setup to setup, so I'll put some specific numbers on:  My nVidia drivers, at 1920x1080@60.00hz, CVT reduced blanking, give a vblank length of 465us.  Using DMT only puts that up to 667us.  At that resolution and refresh rate, GTF and CVT are out of the range of HDMI single speed (165Mhz), and so are not possible.  (I don't think my setup is all that atypical?)<br /><br />I'm not aware of any capability in MS Windows to time that finely without spinning or involving some particular hardware interrupt that isn't universally available.  There are a lot of Windows APIs out there, though.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>koitsu</b> [ Sat Dec 15, 2012 11:08 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Windowed VSync</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />...but QueryPerformanceCounter() will give you microsecond precision, despite slight bits of overhead (depends on what you're doing.  So I'm still not convinced this is a problem.  Here's some other information I found, which also contains code:<br /><br /><!-- m --><a class="postlink" href="http://www.geisswerks.com/ryan/FAQS/timing.html">http://www.geisswerks.com/ryan/FAQS/timing.html</a><!-- m --><br /><br />The conclusion he reaches at the end of this article is that a combination of the two models should work best.  And given what I understand of both of those models, I'm in full agreement.  This, to me, is separate from the thread issue -- again, I have little experience/knowledge about Windows' threading model, but Sleep() should do the trick for the most part.<br /><br />Overall if there is some API that's similar to FreeBSD kqueue(2) that lets the kernel call userland code at set intervals but with <strong>microsecond</strong> granularity, that would be ideal.  But I guess my point is that PC hardware today, and over the past 5-6 years, all offer HPETs and ACPI timers that are extremely granular.  Software can detect ones which aren't, so I'm left wondering where the issue lies, other than &quot;all this is so damn complex!&quot; (with which I completely agree :-) ).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Sat Dec 15, 2012 11:54 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Windowed VSync</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Doesn't the OS allow you to have it blit the entire window on the next frame without any tearing? It seems like very commonly-needed functionality, for anything showing any kind of video. At least on OS X (even back at 10.3, maybe earlier), this was automatic; once you were done with all the window drawing, I believe you just called a function to tell the OS to update it, and it would all occur on the next frame without any visual glitching or half-drawn things appearing.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>2</strong> of <strong>5</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>