<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Level designing</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Level designing</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=444">http://forums.nesdev.com/viewtopic.php?f=2&amp;t=444</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>6</strong> of <strong>8</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Celius</b> [ Sat Jul 30, 2005 10:32 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Oh, well i didn't know that it hid unavoidable stuff, but since you put it that way, I guess I'm rather Pro-clipping.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sat Jul 30, 2005 10:42 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Under the official specification for the NTSC TV signal, the scanline is 280 NES pixel clocks wide including horizontal overscan. Thus, perfect aspect ratio correction involves rendering to a 280x240 pixel buffer (leaving four pixels blank on each side), drawing &quot;SAMSUNG&quot; over whatever isn't visible on your TV (which may not be a perfect rectangle; many SDTVs have more bezel at the corners than at the center of each side), and then stretching the result to fill the screen (e.g. 320x240, 640x480, or on a PC or HDTV monitor 960x720).<br /><br />EDIT: fixed scanline width

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Celius</b> [ Sat Jul 30, 2005 10:56 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Okay, my BG making method isn't reliable due to one thing. THE X AND Y REGISTERS CAN'T GO ABOVE $FF! So in order to load a screen, I have to do dumb tedious methods a couple times to fill the Name Table, so I think I'll just try and make a level editor. I don't know how to make it output code that the NES can use, though! Is there a good example of this anywhere?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Sun Jul 31, 2005 2:16 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Celius wrote:</div><div class="quotecontent">Okay, my BG making method isn't reliable due to one thing. THE X AND Y REGISTERS CAN'T GO ABOVE $FF! So in order to load a screen, I have to do dumb tedious methods a couple times to fill the Name Table, so I think I'll just try and make a level editor. I don't know how to make it output code that the NES can use, though! Is there a good example of this anywhere?</div>
<br />Use Zero-Page pointers with the instruction lda [$xx],Y and so on. You'll need it anyway.
<br />Edit :
<br />About designing levels, the usual way to encode a map is to separe it with small portions of graphics, that can be assembled like a puzzle, and they'll point to the tiles that you have to write to the name table. You can do just one encoding level, like I think Final Fantasy does (at least the first one), but you can also do two or even more level of "small portions of graphics". I'm now writting a game that works with two levels of this, i.e. a map is composed with big blocks, that'll point to small blocks, that'll point to tiles. While scooling, I write one "big block" at once, but it would be a two high portion of graphics to scroll in the direction that is mirrored, so this only works for 2 directionnal scrooling (like Megaman 1/2, CastleVania, LifeForce and many others).
<br />FF uses some smaller 2x2 tiles blocks to encode its maps, and I think it's a good method, but at least RLE compression is needed to decode it.
<br />Of course use .nam files suck for levels, but it can be usefull for title screens or so on (I like using another format for my title screens personally).
<br />But the .incbin directive is needed if you make your level with an hex editor, and that's easier thant just input lots of .db

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Celius</b> [ Sun Jul 31, 2005 12:17 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Okay, am I the only one that thinks .nam files suck in general, because the camera always shows name table 1.5? It shows the bottom half of the upper name table, and the top half of the lower name table.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Celius</b> [ Sun Jul 31, 2005 12:46 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Okay, how are you supposed to do RLE compression with NESASM? Is it possible? Because you can't just do 
<br />
<br />.db $7,$8*15,$9
<br />
<br />because it just show $8 times $F, which is 15 in decimal, which comes out to be 78, and displays the letter x instead of 15 $8s. So yeah, what method does NESASM use?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Disch</b> [ Sun Jul 31, 2005 1:30 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />.db just puts a byte in your assembled binary.  How you interpret those byte depends on your decompression code -- not on how the assembler works.
<br />
<br />If you want to put 15 8's in a row (which i'd assume is what you were trying to do) -- that wouldn't even be compressing it =P
<br />
<br />If your code is just reading one byte at a time, then you're code isn't decompressing... it's just using the raw data.
<br />
<br />
<br />A common format for RLE compression is kind of like the following:
<br />
<br />if high bit is on, this is a run and low 7 bits are the length of the run.  Next byte is the byte to run.
<br />
<br />If high bit is off, this is not a run and the low 7 bits are the length of the non-run.  Next X bytes are the non run (X being the length)
<br />
<br />Therefore the following:
<br />
<br />23 23 23 23 64 78 64 12 78 35 35 35 35 18 18 18 18 18 23 23 23 23
<br />
<br />Could compress to:
<br />
<br />84 23 05 64 78 64 12 78 84 35 85 18 84 23
<br />
<br />
<br />To make that a little clearer:
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">23 23 23 23|64 78 64 12 78|35 35 35 35|18 18 18 18 18|23 23 23 23|<br />|&nbsp; &nbsp; &nbsp; ___/&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /&nbsp; &nbsp; &nbsp;______/ _____________/&nbsp; _________/<br />|&nbsp; &nbsp; &nbsp;/&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;/&nbsp; &nbsp; &nbsp;/&nbsp; &nbsp; &nbsp;__/&nbsp; &nbsp;____________/<br />|&nbsp; &nbsp; |&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|&nbsp; &nbsp; &nbsp;|&nbsp; &nbsp; &nbsp;|&nbsp; &nbsp; &nbsp;/<br />84 23|05 64 78 64 12 78|84 35|85 18|84 23|<br /></div>
<br />
<br />So if you want it to be compressed in your file you'd do:
<br />
<br />.db $84, $23, $05, $64, $78, $64,   etc
<br />
<br />However it would be MUCH easier to keep that in a binary file and .incbin it.  That way whatever editor your using will have a much easier time reading/writing to it and it won't clutter up your code source.
<br />
<br />
<br />Rembember -- if you want to decompress it you will have to actually write the code to decompress it.  nesasm will not automatically decompress your data.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Celius</b> [ Sun Jul 31, 2005 2:25 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Okay I got most of that, and thank you for telling me that. But I was confused about one thing. Why is there a $05 in there?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Disch</b> [ Sun Jul 31, 2005 2:32 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />It's the first byte in the set which specifies the length.  '05' means 'the next 5 bytes are not compressed.  Whereas '85' means 'repeat the next byte 5 times'
<br />
<br />But this is just one way of implimenting RLE -- you can do it however you want.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Celius</b> [ Sun Jul 31, 2005 2:46 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Oh, I get it. That's handy. So does 86 mean repeat the next byte 6 more times, where as 06, means the next 6 bytes are not compressed?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Quietust</b> [ Sun Jul 31, 2005 4:09 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />As we've already mentioned several times, you can use <em>whatever RLE format you want</em> (you could switch around the meaning of $86 and $06 if you wanted to, or you could store the 'repeat' bit in the bottom bit and LSR to get the count), but you'll ALSO have to write 6502 code to 'decompress' the data.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Celius</b> [ Sun Jul 31, 2005 5:57 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I wasn't sure how to decompress it, so I googled "6502 RLE decompression" and the first result was this <a href="http://gavin.panicus.org/doc/6502%20RLE%20Decompression.txt" class="postlink">http://gavin.panicus.org/doc/6502%20RLE%20Decompression.txt</a>. Do you think this is reliable?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Celius</b> [ Sun Jul 31, 2005 6:06 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Okay, how are you supposed to compress the Raw data with 6502? I really want to know so I can just get this over with and not carry this forum out to be 8 pages long. It's unfortunately 6 pages already, which is the longest forum here I've ever seen. I'm sorry, I know you all think I know NOTHING about the 6502, but could someone give me an example of compression in 6502? I know Disch, that you gave the example up there, but how are you supposed to actually compress it?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Disch</b> [ Sun Jul 31, 2005 6:14 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />He uses asbolute indexed mode -- so you will be limited to smaller sizes (compressed/decompressed data can't be larger than 256 bytes).  He also doesn't check for a decompressed size -- it looks like he processes 256 bytes of data and then stops -- so if you only have 64 bytes or something it won't work.
<br />
<br />
<br />Something like this you should write yourself -- since your needs may be more specific than a general purpose function.
<br />
<br />Decompression logic is very simple:
<br />1)  Take a byte
<br />
<br />2)  Look at high bit -- if on:
<br />-a) turn off high bit and use low bits as length
<br />-b) Take another byte
<br />-c) Use that byte X times (where X is the length)
<br />-d) Repeat from step 1 until done
<br />
<br />3)  If high bit is off:
<br />-a) use byte as length
<br />-b) Take X bytes and use them as-is (where X is the length)
<br />-c) Repeat from step 1 until done
<br />
<br />
<br />And actually -- this might be a good learning experience, since it involves several concepts like looping, branching, possibly indirection and other areas which you'll need to be familiar with if you're going to program a game.
<br />
<br />
<br />edit:
<br />
<br />Compression is significantly more difficult (especially on a 6502), as it involves looking ahead and finding patterns.  For now I'd just compress by hand and get a decompression routine working.  Once you have it decompressing <em>then</em> worry about making a compression routine.
<br />
<br />Your game won't have to compress data anyway -- so you could (and probably should) write it in some other language -- which ever one you're making you're editor in.
<br />
<br />And if you are concerned about thread size, perhaps you should edit posts instead of double-posting?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Sun Jul 31, 2005 6:23 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />That RLE decompressor doesn't look to be general (it seems to only allow output data of 7 bits) and isn't documented well.
<br />
<br />You seem to be in way over your head. This means you are wasting time trying to figure out whether a problem you're having is due to a lack of foundation or specific to what you're trying at the moment. It's the same as making many changes to a program and then encountering a new bug -- every change is a possible cause.
<br />
<br />You've probably been damaged by public schooling in the US (and perhaps elsewhere) where real learning is shunned and only rote learning (memorization) is practiced. This means you probably have little experience with actual learning, which involves lots of experimentation, a desire for clarity, and development of the ability to recognize mastery.
<br />
<br />Run-length data compression can be considered in the abstract, without reference to computers. Think about ways of transforming a sequence of bytes into a shorter sequence such that the original sequence can be recovered. One thing you'll encounter is the concept of meta-data: data embedded within the actual data, and ways of reliably recognizing this.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>6</strong> of <strong>8</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>