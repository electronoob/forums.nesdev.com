<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - [Alpha] QASM - A Simplified CA65 with Debugger Output</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">[Alpha] QASM - A Simplified CA65 with Debugger Output</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=7800">http://forums.nesdev.com/viewtopic.php?f=2&amp;t=7800</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>qbradq</b> [ Sat May 28, 2011 9:11 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>[Alpha] QASM - A Simplified CA65 with Debugger Output</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Edited 06/30/2011 - New version 0.07 introduces a character encoding feature that allows you to specify text as an ASCII string and have the assembler translate it to your custom encoding for you. Also numerous bug fixes, tweaks to the macro system and additional features to incbin and data structures added.
<br />
<br />Well I finally got bored enough to write that assembler I've been talking about. Right now it is feature complete in terms of have-to-have features for an assembler. I will be testing the assembler by porting my current project over to it.
<br />
<br />The motivation behind this is that I absolutely love TheFox's debugging extensions for Nintendulator, but there are several things I do not like about CA65. So I set out to write an assembler that is to my liking, but also outputs debugging information that is compatible with CA65. I have now accomplished this.
<br />
<br />The assembler is written with Python 2.5, so it should be compatible with just about any system under the sun.
<br />
<br />Quick points:
<br />
<br />1. Traditional one-shot assembler, no intermediate object format
<br />2. Uses segments like CA65, but they are specified within the code in a simpler format
<br />3. Nested segment entry
<br />4. Real lexical scopes that can be nested and referenced before they are defined
<br />5. Anonymous scopes
<br />6. Basic set of directives
<br />7. Generates memory usage map
<br />8. Generates debugging output that is <strong>compatible with TheFox's debugging extensions for Nintendulator</strong>, yay!
<br />9. Supports macros and complex expressions
<br />10. Supports conditional assembly
<br />11. Now supports data structures
<br />
<br />Links:
<br /><a href="https://sites.google.com/site/qbradq/projects-1/qasm" class="postlink">Project Page</a>
<br /><a href="https://sites.google.com/site/qbradq/projects-1/qasm/documentation" class="postlink">Documentation</a>
<br /><a href="https://sites.google.com/site/qbradq/projects-1/qasm/qasm_v0_07.zip" class="postlink">Direct Download</a>
<br />
<br />If any of you give this a try (or just read the documentation) let me know what you think. I am very interested in what directives others would be interested in being implemented. I have only implemented those directives which I use in my own code, but that may not cover everyone.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Sun May 29, 2011 5:29 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />That is pretty cool. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />
<br />
<br />FYI the iNES header in nestest1 is invalid.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>qbradq</b> [ Sun May 29, 2011 7:52 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Why is the header invalid? It's the same one I use on all of my projects. I'd like to know how to fix it <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" />
<br />
<br />Edit: Well I figured something out. I did not have the SRAM bit of the header set.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>qbradq</b> [ Tue May 31, 2011 8:08 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I have finished macro support and updated to version 0.02. The first post has been updated to reflect this and the download link has also been updated.
<br />
<br />The documentation was also updated for macros. <a href="https://sites.google.com/site/qbradq/projects-1/qasm/documentation#TOC-Macros" class="postlink">Here</a> is the macro documentation.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Tue May 31, 2011 9:10 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">qbradq wrote:</div><div class="quotecontent">Why is the header invalid? It's the same one I use on all of my projects. I'd like to know how to fix it :D</div>ines.s says "mapper 1", but the .word value there is $1200 and should be $0010
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">$ file nestest1.nes<br />nestest1.nes: iNES1 ROM, Mapper 0x10, 16x16k PRG, 16x8k CHR, &#91;Horz&#93;, &#91;PC10&#93;</div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>qbradq</b> [ Tue May 31, 2011 9:52 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Ah, right you are. I was using that .word instead of two .bytes just to test out the .word directive. I'll fix that now.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>qbradq</b> [ Tue May 31, 2011 11:38 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Wow, I implemented complex expressions over my lunch break <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /> That was a huge surprise to me. I thought it would take days. I guess having done it once before helped out a lot.
<br />
<br />So this thing is ready to use for a largish program. I am going to start porting my project over to it now, and hopefully work out any bugs in the process. If anyone else finds this useful, has a bug report or feature request let me know.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>oRBIT2002</b> [ Tue May 31, 2011 12:09 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I'm pretty impressed by people writing their own assemblers. To me it seems like a coders nightmare with all parsing and stuff. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />
<br />Do you have any education that helped you with this project? Or is there a "Programming an assembler for dummies" book somewhere? <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>qbradq</b> [ Tue May 31, 2011 12:28 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The one article that helped me the most was <a href="http://compilers.iecc.com/crenshaw/" class="postlink">Let's Build a Compiler, by Jack Crenshaw</a>. This is a very old article but it steps you through the process of writing a left-right parser in detail.
<br />
<br />Converting this to an Assembler is straight forward once you understand how a two-pass assembler works.
<br />
<br />On the first pass you are really just counting bytes and assigning labels their values. If you run into a label that has not yet been defined you assume it's value to be 0.
<br />
<br />On the second pass you now know where all of those labels point to and you can do your real code generation. If you find an undefined label on this pass then you know it is an error.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Wave</b> [ Wed Jun 01, 2011 12:12 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Seems really good! will you support "Structs" sometime?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>qbradq</b> [ Wed Jun 01, 2011 2:36 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Sure, I can implement structs. Can you give me an example of the syntax? This is a feature I've never used in an assembler.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Wave</b> [ Wed Jun 01, 2011 3:22 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Something like:
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">.equ NUM_PLAYERS 4<br />.struct struct_players<br />&nbsp; &nbsp; .res x NUM_PLAYERS<br />&nbsp; &nbsp; .res y NUM_PLAYERS<br />&nbsp; &nbsp; .res life NUM_PLAYERS<br />.endstruct<br /><br />.res players struct_players<br /><br />//Load player 3 x position<br />ldx #2<br />lda players.x, x<br /></div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>qbradq</b> [ Wed Jun 01, 2011 3:35 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Oh cool! So you specify the data structure like in C, but then the assembler lays out the memory as a table like a traditional assembly programmer would.
<br />
<br />I love this idea! This will make my project a heck of a lot easier to code. Right now I am doing things like this:
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">.res obj_posx_lo MAX_OBJ<br />.res obj_posx_hi MAX_OBJ<br /><br />lda obj_posx_lo,x<br /></div>
<br />
<br />Thanks for the idea! I'll get cracking on it.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Wave</b> [ Wed Jun 01, 2011 3:45 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />You're welcome <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />
<br />Also I miss the .define .ifdef .ifndef .else labels (I readed there's a .define label but for segments) for conditional code.
<br />
<br />Like:
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">.define pal<br /><br />.ifdef pal<br />&nbsp; &nbsp; .equ velocity 3<br />.endif<br />.ifdef ntsc <br />&nbsp; &nbsp; .equ velocity 2<br />.endif<br /><br />.ifdef debug<br />&nbsp; &nbsp; .out &quot;Debug release&quot;<br />.else<br />&nbsp; &nbsp; .out &quot;NonDebug release&quot;<br />.endif<br /><br /></div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>qbradq</b> [ Wed Jun 01, 2011 3:59 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Wow, I completely forgot about conditional assembly. I'll change .define to .memory (it's more descriptive anyway) and add in the conditional assembly bits.
<br />
<br />I need to restructure the assembler for all of these "skip this section if" conditions (like skip macro definitions if we are not in the macro pass). My current "for line in lines" approach is a little naive for all of this.
<br />
<br />Thanks again for all of the inspiration! You keep reminding me of things I forgot I needed, or never thought of before.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>