<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=2&amp;t=17669" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2018-08-16T16:59:35-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=2&amp;t=17669</id>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2018-08-16T16:59:35-07:00</updated>
<published>2018-08-16T16:59:35-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=17669&amp;p=223613#p223613</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=17669&amp;p=223613#p223613"/>
<title type="html"><![CDATA[Re: What is the practical use of indexed indirect addressing]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=17669&amp;p=223613#p223613"><![CDATA[
<div class="quotetitle">pubby wrote:</div><div class="quotecontent"><br />If Y is tied up you can set X to zero and use it as a worse way to pointer dereference. That's what I use it for.<br /></div><br />Yeah, I've done that too.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Thu Aug 16, 2018 4:59 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[pubby]]></name></author>
<updated>2018-08-16T16:07:06-07:00</updated>
<published>2018-08-16T16:07:06-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=17669&amp;p=223608#p223608</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=17669&amp;p=223608#p223608"/>
<title type="html"><![CDATA[Re: What is the practical use of indexed indirect addressing]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=17669&amp;p=223608#p223608"><![CDATA[
If Y is tied up you can set X to zero and use it as a worse way to pointer dereference. That's what I use it for.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=7486">pubby</a> — Thu Aug 16, 2018 4:07 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[FrankenGraphics]]></name></author>
<updated>2018-08-16T16:02:10-07:00</updated>
<published>2018-08-16T16:02:10-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=17669&amp;p=223607#p223607</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=17669&amp;p=223607#p223607"/>
<title type="html"><![CDATA[Re: What is the practical use of indexed indirect addressing]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=17669&amp;p=223607#p223607"><![CDATA[
Please do! This stuff is interesting, especially as my book is quite sparse on practical examples. <br /><br />From MOS technology's own reference manual:<br />&quot;<em>An attempt to define problems to take advantage of this shorter memory and execution time by defining fields should be investigated first. However, in almost every program, the same operation must be performed several times. In those cases, it is sometimes more useful to define a subroutine and set the values that the subroutine will operate on as fields in memory. Pointers to these fields are placed in the Zero Page of memory and then the indexed indirect operation is used to perform the function. This is the primary use of the indexed indirect operation.</em> &quot;<br /><br />It also specifically but very briefly mentions &quot;polling I/O&quot; and &quot;string processing&quot;.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=7508">FrankenGraphics</a> — Thu Aug 16, 2018 4:02 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[koitsu]]></name></author>
<updated>2018-08-16T15:23:16-07:00</updated>
<published>2018-08-16T15:23:16-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=17669&amp;p=223601#p223601</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=17669&amp;p=223601#p223601"/>
<title type="html"><![CDATA[Re: What is the practical use of indexed indirect addressing]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=17669&amp;p=223601#p223601"><![CDATA[
<div class="quotetitle">tokumaru wrote:</div><div class="quotecontent"><br /><div class="quotetitle">koitsu wrote:</div><div class="quotecontent"><div class="codetitle"><b>Code:</b></div><div class="codecontent">jmp (table,x)</div><br /></div><br />The original 6502 can't do that, though... That's probably a 65816 thing.</div><br />My apologies, you're right, the 6502 cannot do this.  The indirect indexed addressing mode for <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">jmp</tt> was introduced in the 65c02, thus the 65816 has it as well.<br /><br />It's not the first time I've made this mistake publicly.  Those that know me well know I often &quot;screw up&quot; some opcodes when doing 6502 in this way.  This is because when I first started doing 6502, I actually started on an Apple IIE, which was a 65c02, which has several additional instructions and opcodes with additional addressing modes (<tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">inc a / dec a</tt> or just <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">inc / dec</tt>, instead of <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">clc / adc #1 or sec / sbc #1</tt> is the most well-known).  About 6 months later I started doing work on an Apple II+ (6502), followed by 6-8 months later getting an Apple IIGS (65816).  So, my brain tends to have a memory of 65c02/65816 addressing modes and instructions.  It's very easy to forget which (of the more basic) aren't available on the 6502.<br /><br />That said: I can quote some examples from the book I referenced if asked (and that is a pure 6502 book).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3">koitsu</a> — Thu Aug 16, 2018 3:23 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[FrankenGraphics]]></name></author>
<updated>2018-08-16T15:08:09-07:00</updated>
<published>2018-08-16T15:08:09-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=17669&amp;p=223599#p223599</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=17669&amp;p=223599#p223599"/>
<title type="html"><![CDATA[Re: What is the practical use of indexed indirect addressing]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=17669&amp;p=223599#p223599"><![CDATA[
yeah... the book i just read from confusingly stated that jmp could be seen as indexed indirect, but that x is always 0. That's one weird way to put that it is not indexed indirect, haha. But the rule for jmp stands.<br /><br />Instructions that can use indexed indirect:<br />ADC<br />AND<br />CMP<br />EOR<br />LDA<br />ORA<br />SBC<br />STA<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=7508">FrankenGraphics</a> — Thu Aug 16, 2018 3:08 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2018-08-16T15:03:57-07:00</updated>
<published>2018-08-16T15:03:57-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=17669&amp;p=223597#p223597</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=17669&amp;p=223597#p223597"/>
<title type="html"><![CDATA[Re: What is the practical use of indexed indirect addressing]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=17669&amp;p=223597#p223597"><![CDATA[
<div class="quotetitle">koitsu wrote:</div><div class="quotecontent"><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">jmp (table,x)</div><br /></div><br />The original 6502 can't do that, though... That's probably a 65816 thing.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Thu Aug 16, 2018 3:03 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[FrankenGraphics]]></name></author>
<updated>2018-08-16T14:42:51-07:00</updated>
<published>2018-08-16T14:42:51-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=17669&amp;p=223595#p223595</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=17669&amp;p=223595#p223595"/>
<title type="html"><![CDATA[Re: What is the practical use of indexed indirect addressing]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=17669&amp;p=223595#p223595"><![CDATA[
Just maybe, you could additionally use the addressing mode to prefetch a strip of data (or cherrypick data here and there into a strip) at a time when you have plenty of time to do so, in order to read the resulting strip from zp at another time when you don't have as much time, using indexed indirect. That is, if you have the zp to spare. <br /><br />Some games use a soubroutine handler that load pointers piecemeal and then go to them based on some return value from a subroutine. Instead, you could maybe rather load a whole strip of them this way. An then, if one of the pointed-to subroutines needs  to modify what's next in order, it can do so, either by modifying next pointer, or the simply the x register, before returning. The &quot;what's next&quot; handler will just step on to the next or specified pointer cluelessly. It makes for a simple &quot;what's next routine&quot;, i think... I'm clearly not an expert.  <br /><br />Basically: you lay out a preliminary string of pointers that is the basic marching order of a section of the program, and then the subroutines will evaluate something and for example modify the what's next counter or a cell within the strip.<br /><br /><br />Edit: &quot;<em>Pre-indexed indirect addressing is useful for choosing one of a set of indirect addresses to use</em>&quot; -Lance Leventhal, in <em>6502 assembly language programming</em>, page 3-10. So yeah, what everyone basically already said. The book also contains atomic examples of using CMP and EOR with indexed indirect, but they seem to be mostly there to explain what is happening if you use it. They aren't part of any explanation why you might want to do that.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=7508">FrankenGraphics</a> — Thu Aug 16, 2018 2:42 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[koitsu]]></name></author>
<updated>2018-08-16T14:41:11-07:00</updated>
<published>2018-08-16T14:41:11-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=17669&amp;p=223594#p223594</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=17669&amp;p=223594#p223594"/>
<title type="html"><![CDATA[Re: What is the practical use of indexed indirect addressing]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=17669&amp;p=223594#p223594"><![CDATA[
Question better-suited for <a href="http://forum.6502.org/" class="postlink">6502.org forum</a>, as it's about 6502 and not so much NES.<br /><br />In general, indirect indexed (<tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">&#40;foo&#41;,y</tt>) is more useful given that it allows you to address the entire 64KByte memory space.  That said:<br /><br />A simple jump table is one of the most common uses of the indexed indirect addressing (<tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">&#40;foo,x&#41;</tt>) mode.  Example routine, where you load the &quot;table index&quot; into the accumulator in advance (ex. <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">lda #4 / jmp doit</tt>):<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">doit:<br />  asl<br />  tax<br />  jmp (table,x)<br />  ...<br /><br />table:<br />  .dw routine1<br />  .dw routine2<br />  .dw routine3<br />  .dw routine4<br />  .dw routine5<br />  .dw routine6<br />  ...<br /></div><br />There are tons of ways you can accomplish the above differently.  It all depends on use cases and programmer/developer choice.  It is impossible to know each and every one of them.  OP asked for one, so there it is.  If you want others, just ask, but they're all generally the same -- all use-cases that are table-based, particularly a table of pointers.<br /><br />&quot;Programming the 6502&quot; by Rodney Zaks, 1983, has several examples of where indexed indirect addressing is useful.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3">koitsu</a> — Thu Aug 16, 2018 2:41 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2018-08-16T14:30:55-07:00</updated>
<published>2018-08-16T14:30:55-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=17669&amp;p=223592#p223592</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=17669&amp;p=223592#p223592"/>
<title type="html"><![CDATA[Re: What is the practical use of indexed indirect addressing]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=17669&amp;p=223592#p223592"><![CDATA[
For example, in my Pently audio driver, because audio channels' MMIO ports in $400x are 4 apart, the pointers stored in zero page are also 4 bytes apart.<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">; Pently persistent zero page layout<br />;       +0                +1                +2                +3<br />;  0  | Sq1 sound effect data ptr           Sq1 music pattern data ptr<br />;  4  | Sq2 sound effect data ptr           Sq2 music pattern data ptr<br />;  8  | Tri sound effect data ptr           Tri music pattern data ptr<br />; 12  | Noise sound effect data ptr         Noise music pattern data ptr<br />; 16  | Sq1 envelope data ptr               Attack music pattern data ptr<br />; 20  | Sq2 envelope data ptr               Conductor track position<br />; 24  | Tri envelope data ptr               Tempo counter<br />; 28  | Noise envelope data ptr             Play/Pause        Attack channel<br /></div><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Thu Aug 16, 2018 2:30 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[dougeff]]></name></author>
<updated>2018-08-16T13:59:28-07:00</updated>
<published>2018-08-16T13:59:28-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=17669&amp;p=223589#p223589</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=17669&amp;p=223589#p223589"/>
<title type="html"><![CDATA[Re: What is the practical use of indexed indirect addressing]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=17669&amp;p=223589#p223589"><![CDATA[
With (zp, x) mode, remember that the table of pointers needs to be in the zeropage, because it wraps back into the zeropage. Also, you need to Inx twice to switch between them.<br /><br />Correct me if I'm wrong, it's been a while since I used it.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=7008">dougeff</a> — Thu Aug 16, 2018 1:59 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2018-08-16T12:20:16-07:00</updated>
<published>2018-08-16T12:20:16-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=17669&amp;p=223586#p223586</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=17669&amp;p=223586#p223586"/>
<title type="html"><![CDATA[Re: What is the practical use of indexed indirect addressing]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=17669&amp;p=223586#p223586"><![CDATA[
<div class="quotetitle">truffly wrote:</div><div class="quotecontent"><br />But why would you <em>ever</em> need to use indexed indirect addressing with the X register? What practical purpose does this serve?<br /></div><br />That is indeed the least used addressing mode in the 6502, but there are a few cases where it may be useful. The intended use is obviously for when you have an array of pointers, so you can use X to select which pointer to use. One common example often mentioned here is sound engines, which have to handle multiple tracks, so it may be convenient to select the track to read using the X register, which you can also use to access other word-sized attributes/states of each track.<br /><br />It basically allows access to multiple streams that are supposed to be read sequentially, meaning that there's no need to preserve the base address and you can simply increment the pointers themselves in order to move on to the next item.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Thu Aug 16, 2018 12:20 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[lidnariq]]></name></author>
<updated>2018-08-16T12:19:11-07:00</updated>
<published>2018-08-16T12:19:11-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=17669&amp;p=223585#p223585</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=17669&amp;p=223585#p223585"/>
<title type="html"><![CDATA[Re: What is the practical use of indexed indirect addressing]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=17669&amp;p=223585#p223585"><![CDATA[
much as <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">lda &#40;zp&#41;,y</tt> lets you take a pointer and add Y to it, <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">lda &#40;zp, x&#41;</tt> lets you load one of multiple different pointers.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3512">lidnariq</a> — Thu Aug 16, 2018 12:19 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[truffly]]></name></author>
<updated>2018-08-16T11:56:35-07:00</updated>
<published>2018-08-16T11:56:35-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=17669&amp;p=223583#p223583</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=17669&amp;p=223583#p223583"/>
<title type="html"><![CDATA[What is the practical use of indexed indirect addressing?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=17669&amp;p=223583#p223583"><![CDATA[
Hello all,<br /><br />I was recently working on an NES project, and I realized I really needed some pointers in order to deal with a graphics buffer. As such, I am using indirect indexed addressing with the Y register -- for example, <div class="codetitle"><b>Code:</b></div><div class="codecontent">lda (zp), y</div> I can understand very practical uses for this--you load in a ZP address, and it uses that byte and the subsequent byte as a pointer to the address you want to access; from there, it uses the Y register as an index. This seems very useful, as it lets us point to, for example, an array, and access an element from the array using the Y register.<br /><br />But why would you <em>ever</em> need to use indexed indirect addressing with the X register? What practical purpose does this serve? There has to be some situation where this feature would prove useful, otherwise I'd assume it wouldn't be featured in the processor design. Have you ever used indexed indirect addressing in your programs? Do you think it is particularly useful, or do you think indirect indexed addressing is a better tool?<br /><br />Thanks in advance for the replies!<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9303">truffly</a> — Thu Aug 16, 2018 11:56 am</p><hr />
]]></content>
</entry>
</feed>