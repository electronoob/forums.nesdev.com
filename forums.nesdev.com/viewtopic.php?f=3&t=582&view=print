<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - NES Test ROMs</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">NES Test ROMs</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=3&amp;t=582">http://forums.nesdev.com/viewtopic.php?f=3&amp;t=582</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>WedNESday</b> [ Tue Sep 20, 2005 3:34 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>NES Test ROMs</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I am going to start writing some ROMs that will test EVERY GODDAMN ASPECT OF THE NES, no matter how tiny or seemingly insignificant. I will start off with the CPU and then move on to the PPU, APU etc. However, I do need your help in ideas for the actual tests. Here is our chance to improve on NEStress.
<br />
<br />So far I am going to implement testing on;
<br />
<br />1. All Addressing modes including zero page wrapping and indirect bug
<br />2. All Opcodes including all flags
<br />3. Trapping read/write only registers/memory/ROM
<br />4. CPU RAM/Register mirroring
<br />
<br />Work has already started so please post sooner rather than later. I'll make the ROM downloadable from my emulator site soon I hope.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Tue Sep 20, 2005 4:52 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Writing the most basic ROMs will be tricky since they can't depend on much. A subset of the CPU instruction that's easy to implement properly would be good to stick to. The first ones will need a particular order of verification where each allows more instructions to be used in the next, a "bootstrapping" process.
<br />
<br />Before the PPU is verified, you could use the APU or even just a memory location to report the result. The APU is very simple to use for reporting result codes and doesn't require any polling as the PPU does. It <em>is</em> possible to write code that doesn't depend on the PPU being implemented, by using a timeout loop while waiting for the VBL status bit. This would allow the tests to be converted to an NSF (using an automated tool) and run on an NSF player without modification. Write the code in a way that separates the reporting from the tests, so it can be improved without having to rewrite tests.
<br />
<br />Don't just test for positive behavior, also test for things that should not occur. These must be chosen by predicting things emulators are likely to get wrong, or finding common errors in past emulator development; they can't be generated mechanically from the NES specification.
<br />
<br />It's not possible to exhaustively test everything, since that would involve every possible set of program code, mapper, and joypad input. Again, the things to test depend on what is likely to be implemented incorrectly in an emulator. For example, there's little point in checking that an lda at address $8005 works if an lda at $8004 already worked. But there is a point in checking that an lda works at $bfff which crosses to another bank on a cartridge with a mapper. It's probably of little benefit (compared to the cost of writing the test) to check every single instruction for bank-crossing problems, though.
<br />
<br />Try to make it possible to easily run the ROMs in an automated fashion, so emulator authors can add an automatic test and run it often. I suppose NEStress-style testing could be run as a movie, but checking the result would require a bit of code to parse the nametable for the result.
<br />
<br />You can test the tests (and watch the watchers) by intentionally breaking your emulator in specific ways. It's fun to do this and see the test ROMs knowing exactly what error your introduced. This is important because tests are often fairly intricate and easy to mess up.
<br />
<br />A couple of CPU testscome to mind (not sure if NEStress already checks these):
<br />
<br />- Extra clock when branch "crosses page" (very poorly described in most documentation). This should cover these cases, of which I don't even remember which count as page crossing:
<br />
<br />$4fe: bne $4f0
<br />$4fe: bne $510
<br />$4ff: bne $4f0
<br />$4ff: bne $510
<br />$500: bne $4f0
<br />$500: bne $510
<br />
<br />You could make use of the VBL flag as a time reference and run the branch thousands of times making any error in timing detectable as whether the VBL occurred or not.
<br />
<br />- The value of bit 4 of the byte pushed on the stack containing the status flags when NMI, IRQ, PHP, and BRK occur.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Zepper</b> [ Thu Sep 22, 2005 1:55 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />AFAIK, you cannot test EVERY CPU opcode in a single way. You can, however, build an image output (or math) for each opcode correctly emulated. Even NEStress cannot test the things - I had problems to identify an error in a certain opcode. In fact, it wasn't checking the instruction itself, but the instruction *right before* using the addressing mode (can't remember which one).
<br />
<br />Test ROMs are ALWAYS welcome, no doubt... but think about something more logical than psycological... ^_^;;

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>