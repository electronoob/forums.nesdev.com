<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=10&amp;t=8600" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2012-02-08T08:50:34-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=10&amp;t=8600</id>
<entry>
<author><name><![CDATA[FARID]]></name></author>
<updated>2012-02-08T08:50:34-07:00</updated>
<published>2012-02-08T08:50:34-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8600&amp;p=89718#p89718</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8600&amp;p=89718#p89718"/>
<title type="html"><![CDATA[1997 SUPER HIK 8 IN 1 EW-800 - Menu Code Reverse Engineering]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8600&amp;p=89718#p89718"><![CDATA[
I could extract the necessary menu code which is inside of <a href="http://nesdev.com/bbs/viewtopic.php?t=8550&amp;sid=0b1ce5d8888f7c593985ec1f49b20eaa" class="postlink">1997 SUPER HIK 8 IN 1 EW-800</a><br />This menu can run on a emulator under NROM header :<br /><br /><img src="http://up5.iranblog.com/images/86561185759567777582.png" alt="Image" /><br /><br />I want to understand what is happening in the code.<br />I could write this code by using NES DeCompose by BlazarSoft v.62 and FCEUX built in debugger<br />Please help me to write a comment for important lines :<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">8000:78        SEI<br />8001:D8        CLD<br />8002:A2 FF     LDX #$FF<br />8004:9A        TXS<br />8005:A9 00     LDA #$00<br />8007:8D 00 20  STA $2000<br />800A:8D 01 20  STA $2001<br />800D:8D 00 E0  STA $E000<br />8010:A9 80     LDA #$80<br />8012:8D 01 A0  STA $A001<br />8015:A9 00     LDA #$00   ; CHR bank select command<br />8017:8D 00 80  STA $8000   ; Select CHR bank in the PPU<br />801A:A9 78     LDA #$78   ; CHR bank load command<br />801C:8D 01 80  STA $8001   ; Load CHR bank from ROM<br />801F:A9 01     LDA #$01   ; CHR bank select command<br />8021:8D 00 80  STA $8000   ; Select CHR bank in the PPU<br />8024:A9 7A     LDA #$7A   ; CHR bank load command<br />8026:8D 01 80  STA $8001   ; Load CHR bank from ROM<br />8029:20 AF 80  JSR $80AF<br />802C:20 BA 80  JSR $80BA<br />802F:20 D5 80  JSR $80D5<br />8032:20 FB 80  JSR $80FB<br />8035:A9 00     LDA #$00<br />8037:8D 00 20  STA $2000<br />803A:A9 00     LDA #$00<br />803C:8D 01 20  STA $2001<br />803F:8D 01 03  STA $0301<br />8042:A9 B3     LDA #$B3<br />8044:85 00     STA $0000<br />8046:A9 83     LDA #$83<br />8048:85 01     STA $0001<br />804A:20 1B 81  JSR $811B<br />804D:A9 20     LDA #$20<br />804F:85 04     STA $0004<br />8051:A9 8B     LDA #$8B<br />8053:85 05     STA $0005<br />8055:20 AC 81  JSR $81AC<br />8058:A2 00     LDX #$00<br />805A:BD 12 83  LDA $8312,X @ $8312 = #$59<br />805D:8D 07 20  STA $2007   ; VRAM I/O Register<br />8060:E8        INX<br />8061:E0 08     CPX #$08<br />8063:D0 F5     BNE $805A   ; $805A -09<br />8065:A9 21     LDA #$21<br />8067:85 06     STA $0006<br />8069:A9 04     LDA #$04<br />806B:85 07     STA $0007<br />806D:A0 00     LDY #$00<br />806F:20 41 81  JSR $8141<br />8072:20 F2 80  JSR $80F2<br />8075:20 33 81  JSR $8133<br />8078:20 F2 80  JSR $80F2<br />807B:A9 00     LDA #$00<br />807D:8D 05 03  STA $0305<br />8080:A9 00     LDA #$00<br />8082:8D 00 20  STA $2000   ; PPU1<br />8085:A9 18     LDA #$18<br />8087:8D 01 20  STA $2001   ; PPU2<br />808A:A9 FF     LDA #$FF<br />808C:8D 15 40  STA $4015   ; Sound/Vertical Clock Signal Register<br />808F:A9 00     LDA #$00<br />8091:8D 03 20  STA $2003   ; SPR-RAM Address Register<br />8094:A9 02     LDA #$02<br />8096:8D 14 40  STA $4014   ; Sprite DMA Register<br />8099:A2 00     LDX #$00<br />809B:20 AF 80  JSR $80AF<br />809E:E8        INX<br />809F:E0 0A     CPX #$0A<br />80A1:D0 F8     BNE $809B   ; $809B -06<br />80A3:20 FC 81  JSR $81FC<br />80A6:20 13 82  JSR $8213<br />80A9:20 F2 80  JSR $80F2<br />80AC:4C 8F 80  JMP $808F<br />80AF:AD 02 20  LDA $2002   ; PPU Status<br />80B2:30 FB     BMI $80AF   ; $80AF -03<br />80B4:AD 02 20  LDA $2002   ; PPU Status<br />80B7:10 FB     BPL $80B4   ; $80B4 -03<br />80B9:60        RTS<br />80BA:A2 00     LDX #$00<br />80BC:8A        TXA<br />80BD:95 00     STA $00,X @ $00FF<br />80BF:9D 00 02  STA $0200,X @ $02FF<br />80C2:9D 00 03  STA $0300,X @ $03FF<br />80C5:9D 00 04  STA $0400,X @ $04FF<br />80C8:9D 00 05  STA $0500,X @ $05FF<br />80CB:9D 00 06  STA $0600,X @ $06FF<br />80CE:9D 00 07  STA $0700,X @ $07FF<br />80D1:CA        DEX<br />80D2:D0 E9     BNE $80BD   ; $80BD -15<br />80D4:60        RTS<br />80D5:A9 00     LDA #$00<br />80D7:18        CLC<br />80D8:69 20     ADC #$20<br />80DA:8D 06 20  STA $2006   ; VRAM Address Register #2<br />80DD:A9 00     LDA #$00<br />80DF:8D 06 20  STA $2006   ; VRAM Address Register #2<br />80E2:A9 5F     LDA #$5F<br />80E4:A2 04     LDX #$04<br />80E6:A0 00     LDY #$00<br />80E8:8D 07 20  STA $2007   ; VRAM I/O Register<br />80EB:C8        INY<br />80EC:D0 FA     BNE $80E8   ; $80E8 -04<br />80EE:CA        DEX<br />80EF:D0 F5     BNE $80E6   ; $80E6 -09<br />80F1:60        RTS<br />80F2:A9 00     LDA #$00<br />80F4:8D 05 20  STA $2005   ; VRAM Address Register #1<br />80F7:8D 05 20  STA $2005   ; VRAM Address Register #1<br />80FA:60        RTS<br />80FB:A9 23     LDA #$23<br />80FD:8D 06 20  STA $2006   ; VRAM Address Register #2<br />8100:A9 C0     LDA #$C0<br />8102:8D 06 20  STA $2006   ; VRAM Address Register #2<br />8105:A9 00     LDA #$00<br />8107:A2 10     LDX #$10<br />8109:20 14 81  JSR $8114<br />810C:A9 FF     LDA #$FF<br />810E:A2 30     LDX #$30<br />8110:20 14 81  JSR $8114<br />8113:60        RTS<br />8114:8D 07 20  STA $2007   ; VRAM I/O Register<br />8117:CA        DEX<br />8118:D0 FA     BNE $8114   ; $8114 -04<br />811A:60        RTS<br />811B:A0 3F     LDY #$3F<br />811D:A9 00     LDA #$00<br />811F:8C 06 20  STY $2006   ; VRAM Address Register #2<br />8122:8D 06 20  STA $2006   ; VRAM Address Register #2<br />8125:A0 00     LDY #$00<br />8127:A2 20     LDX #$20<br />8129:B1 00     LDA &#40;$00&#41;,Y @ $83B3 = #$01<br />812B:8D 07 20  STA $2007   ; VRAM I/O Register<br />812E:C8        INY<br />812F:CA        DEX<br />8130:D0 F7     BNE $8129   ; $8129 -07<br />8132:60        RTS<br />8133:A2 00     LDX #$00<br />8135:BD D3 83  LDA $83D3,X @ $83D3 = #$40<br />8138:9D 00 02  STA $0200,X @ $0200<br />813B:E8        INX<br />813C:E0 10     CPX #$10<br />813E:D0 F5     BNE $8135   ; $8135 -09<br />8140:60        RTS<br />8141:A9 1A     LDA #$1A<br />8143:85 08     STA $0008<br />8145:A9 83     LDA #$83<br />8147:85 09     STA $0009<br />8149:A5 06     LDA $0006 = #$21<br />814B:85 04     STA $0004<br />814D:A5 07     LDA $0007 = #$04<br />814F:85 05     STA $0005<br />8151:20 AF 80  JSR $80AF<br />8154:20 AC 81  JSR $81AC<br />8157:B1 08     LDA &#40;$08&#41;,Y @ $831A = #$00<br />8159:AA        TAX<br />815A:E0 FE     CPX #$FE<br />815C:F0 1A     BEQ $8178   ; $8178 +1C &#40;Return&#41;<br />815E:E0 FF     CPX #$FF<br />8160:F0 17     BEQ $8179   ; $8179 +19<br />8162:8E 07 20  STX $2007   ; VRAM I/O Register<br />8165:E8        INX<br />8166:8E 07 20  STX $2007   ; VRAM I/O Register<br />8169:20 8D 81  JSR $818D<br />816C:E8        INX<br />816D:8E 07 20  STX $2007   ; VRAM I/O Register<br />8170:E8        INX<br />8171:8E 07 20  STX $2007   ; VRAM I/O Register<br />8174:C8        INY<br />8175:4C 54 81  JMP $8154<br />8178:60        RTS<br />8179:20 B7 81  JSR $81B7<br />817C:A9 40     LDA #$40<br />817E:18        CLC<br />817F:65 07     ADC $0007 = #$04<br />8181:85 07     STA $0007<br />8183:A9 00     LDA #$00<br />8185:65 06     ADC $0006 = #$21<br />8187:85 06     STA $0006<br />8189:C8        INY<br />818A:4C 41 81  JMP $8141<br />818D:A9 20     LDA #$20<br />818F:18        CLC<br />8190:65 05     ADC $0005 = #$04<br />8192:48        PHA<br />8193:A9 00     LDA #$00<br />8195:65 04     ADC $0004 = #$21<br />8197:8D 06 20  STA $2006   ; VRAM Address Register #2<br />819A:68        PLA<br />819B:8D 06 20  STA $2006   ; VRAM Address Register #2<br />819E:A9 02     LDA #$02<br />81A0:18        CLC<br />81A1:65 05     ADC $0005 = #$04<br />81A3:85 05     STA $0005<br />81A5:A9 00     LDA #$00<br />81A7:65 04     ADC $0004 = #$21<br />81A9:85 04     STA $0004<br />81AB:60        RTS<br />81AC:A5 04     LDA $0004 = #$20<br />81AE:8D 06 20  STA $2006   ; VRAM Address Register #2<br />81B1:A5 05     LDA $0005 = #$8B<br />81B3:8D 06 20  STA $2006   ; VRAM Address Register #2<br />81B6:60        RTS<br />81B7:20 8D 81  JSR $818D<br />81BA:A9 FF     LDA #$FF<br />81BC:8D 07 20  STA $2007   ; VRAM I/O Register<br />81BF:C8        INY<br />81C0:B1 08     LDA &#40;$08&#41;,Y @ $831E = #$FF<br />81C2:AA        TAX<br />81C3:E0 FD     CPX #$FD<br />81C5:F0 07     BEQ $81CE   ; $81CE +09 &#40;Return&#41;<br />81C7:8E 07 20  STX $2007   ; VRAM I/O Register<br />81CA:C8        INY<br />81CB:4C C0 81  JMP $81C0<br />81CE:60        RTS<br />81CF:40        RTI<br />81D0:AD 05 03  LDA $0305 = #$00<br />81D3:AA        TAX<br />81D4:BD E3 83  LDA $83E3,X @ $84E0 = #$00<br />81D7:8D 00 02  STA $0200<br />81DA:8D 08 02  STA $0208<br />81DD:18        CLC<br />81DE:69 08     ADC #$08<br />81E0:8D 04 02  STA $0204<br />81E3:8D 0C 02  STA $020C<br />81E6:60        RTS<br />81E7:A9 1F     LDA #$1F<br />81E9:8D 04 40  STA $4004   ; pAPU Pulse #2 Ctrl Register<br />81EC:A9 99     LDA #$99<br />81EE:8D 05 40  STA $4005   ; pAPU Pulse #2 Ramp Ctrl Register<br />81F1:A9 EF     LDA #$EF<br />81F3:8D 06 40  STA $4006   ; pAPU Pulse #2 Fine Tune Register<br />81F6:A9 08     LDA #$08<br />81F8:8D 07 40  STA $4007   ; pAPU Pulse #2 Coarse Tune Register<br />81FB:60        RTS<br />81FC:A2 01     LDX #$01<br />81FE:8E 16 40  STX $4016   ; Gamepad #1<br />8201:A2 00     LDX #$00<br />8203:8E 16 40  STX $4016   ; Gamepad #1<br />8206:A0 08     LDY #$08<br />8208:AD 16 40  LDA $4016 = #$FF   ; Gamepad #1<br />820B:4A        LSR<br />820C:2E 04 03  ROL $0304 = #$00<br />820F:88        DEY<br />8210:D0 F6     BNE $8208   ; $8208 -08<br />8212:60        RTS<br />8213:A9 08     LDA #$08<br />8215:CD 04 03  CMP $0304 = #$00<br />8218:F0 16     BEQ $8230   ; $8230 +18<br />821A:A9 04     LDA #$04<br />821C:CD 04 03  CMP $0304 = #$00<br />821F:F0 26     BEQ $8247   ; $8247 +28<br />8221:A9 10     LDA #$10<br />8223:CD 04 03  CMP $0304 = #$00<br />8226:F0 36     BEQ $825E   ; $825E +38<br />8228:A9 C0     LDA #$C0<br />822A:2C 04 03  BIT $0304 = #$00<br />822D:D0 2F     BNE $825E   ; $825E +31<br />822F:60        RTS<br />8230:20 E7 81  JSR $81E7                    ; related to up button<br />8233:AD 05 03  LDA $0305 = #$07<br />8236:F0 07     BEQ $823F   ; $823F +09<br />8238:CE 05 03  DEC $0305 = #$07<br />823B:20 D0 81  JSR $81D0<br />823E:60        RTS<br />823F:A9 07     LDA #$07   ; Limit games selection toward up<br />8241:8D 05 03  STA $0305<br />8244:4C 3B 82  JMP $823B<br />8247:20 E7 81  JSR $81E7<br />824A:AD 05 03  LDA $0305 = #$00<br />824D:C9 07     CMP #$07   ; Limit games selection toward down<br />824F:F0 06     BEQ $8257   ; $8257 +08<br />8251:EE 05 03  INC $0305 = #$00<br />8254:4C 3B 82  JMP $823B<br />8257:A9 00     LDA #$00<br />8259:8D 05 03  STA $0305<br />825C:F0 DD     BEQ $823B   ; $823B -21<br />825E:A9 00     LDA #$00<br />8260:8D 00 20  STA $2000   ; PPU1<br />8263:8D 01 20  STA $2001   ; PPU2<br />8266:8D 15 40  STA $4015   ; Sound/Vertical Clock Signal Register<br />8269:AD 05 03  LDA $0305 = #$00<br />826C:C9 05     CMP #$05   ; Set default slot for running initial game<br />826E:D0 13     BNE $8283   ; $8283 +15<br />8270:20 BA 80  JSR $80BA<br />8273:A9 80     LDA #$80<br />8275:8D 01 A0  STA $A001<br />8278:A9 C9     LDA #$C9<br />827A:8D 00 68  STA $6800<br />827D:4C 8D F9  JMP $F98D       ; *JUMP TO START OF THE GAME*<br />8280:4C 00 C0  JMP $C000<br />8283:20 89 82  JSR $8289<br />8286:4C 00 04  JMP $0400<br />8289:A2 00     LDX #$00<br />828B:BD 97 82  LDA $8297,X @ $8297 = #$AD<br />828E:9D 00 04  STA $0400,X @ $0400<br />8291:E8        INX<br />8292:E0 80     CPX #$80<br />8294:D0 F5     BNE $828B   ; $828B -09<br />8296:60        RTS<br /><br />8297 : AD 05 03 C9 00 F0 1C C9 01 <br />82A0 : F0 20 C9 02 F0 24 C9 03 F0 28 C9 04 F0 2C C9 06 <br />82B0 : F0 30 A9 FB 8D 00 68 4C 53 04 A9 CC 8D 00 68 4C <br />82C0 : 53 04 A9 DD 8D 00 68 4C 53 04 A9 EE 8D 00 68 4C <br />82D0 : 53 04 A9 FF 8D 00 68 4C 53 04 A9 D8 8D 00 68 4C <br />82E0 : 53 04 A9 EA 8D 00 68 4C 53 04 A9 80 8D 01 A0 A0 <br />82F0 : 00 A2 00 A9 00 95 00 9D 00 01 9D 00 02 9D 00 03 <br />8300 : 9D 00 06 9D 00 05 9D 00 07 CA D0 E9 8D 00 E0 6C <br />8310 : FC FF 59 5F 5F 5A 5B 5F 5F 58 00 04 08 0C FF 91 <br />8320 : 8E 9B 98 8E 9C AF 8F 92 90 91 9D 92 97 90 FD 00 <br />8330 : 04 10 14 FF 8D 98 8D 90 8E AF 8B 8A 95 95 FD 00 <br />8340 : 04 18 1C FF 91 8E 9B 98 8E 9C AF 9C 9D 98 9B A2 <br />8350 : FD 00 04 68 6C 70 FF 9C 99 98 9B 9D 9C AF 96 8E <br />8360 : 8E 9D 92 97 90 FD 00 04 28 24 FF 91 8E 9B 98 8E <br />8370 : 9C AF 92 8C 8E AF 91 98 8C 94 8E A2 FD 00 04 2C <br />8380 : 24 FF 9F 98 95 95 8E A2 AF 8B 8A 95 95 FD 00 04 <br />8390 : 20 24 FF 91 8E 9B 98 8E 9C AF 90 98 8A 95 AF 83 <br />83A0 : FD 00 04 30 24 FF 8B 8A 9C 94 8E 9D AF 8B 8A 95 <br />83B0 : 95 FD FE 01 96 96 96 0F F0 F0 F6 0F F0 F0 F0 0F <br />83C0 : F6 36 36 01 26 26 35 0F 26 27 F9 0F 15 21 30 0F <br />83D0 : 15 29 30 40 54 00 10 48 56 00 10 40 55 00 18 48 <br />83E0 : 57 00 18 40 50 60 70 80 90 A0 B0<br /><br /><br />FF80:78        SEI<br />FF81:D8        CLD<br />FF82:A9 00     LDA #$00<br />FF84:8D 00 20  STA $2000   ; PPU1  ;Base nametable address<br />FF87:8D 01 20  STA $2001   ; PPU2<br />FF8A:A2 04     LDX #$04<br />FF8C:AC 02 20  LDY $2002 = #$00   ; PPU Status<br />FF8F:10 FB     BPL $FF8C   ; $FF8C -03   ;Jump until S or 7 bit of LD? will be set<br />FF91:AC 02 20  LDY $2002 = #$00   ; PPU Status<br />FF94:30 FB     BMI $FF91   ; $FF91 -03<br />FF96:CA        DEX<br />FF97:10 F3     BPL $FF8C   ; $FF8C -0B<br />FF99:9A        TXS<br />FF9A:8D 00 20  STA $2000   ; PPU1<br />FF9D:8D 01 20  STA $2001   ; PPU2<br />FFA0:A9 00     LDA #$00<br />FFA2:8D 00 80  STA $8000<br />FFA5:8D 00 A0  STA $A000<br />FFA8:A9 80     LDA #$80<br />FFAA:8D 01 A0  STA $A001<br />FFAD:8D 00 E0  STA $E000<br />FFB0:A9 06     LDA #$06   ; PRG bank select command<br />FFB2:8D 00 80  STA $8000            ; Select PRG bank in the CPU<br />FFB5:A9 17     LDA #$17   ; PRG bank load command<br />FFB7:8D 01 80  STA $8001            ; Load PRG bank from ROM<br />FFBA:4C 00 80  JMP $8000<br /><br />FFE6:A9 90     LDA #$90<br />FFE8:8D 01 A0  STA $A001<br />FFEB:8D 00 70  STA $7000<br />FFEE:D0 90     BNE $FF80   ; $FF80 -6E<br /><br />FFF0:A9 80     LDA #$80<br />FFF2:8D 01 A0  STA $A001            ; Enable SRAM<br />FFF5:EA        NOP<br />FFF6:EA        NOP<br />FFF7:EA        NOP<br />FFF8:D0 86     BNE $FF80   ; $FF80 -78             ;Check Zero Flag if is clear<br /><br />FFFA:    .db $3F   ; NMI / VBLANK vector: $FF3F<br />FFFB:    .db $FF<br />FFFC:    .db $F0   ; Reset vector: $FFF0<br />FFFD:    .db $FF<br />FFFE:    .db $42   ; IRQ / BRK vector: $FF42<br />FFFF:    .db $FF<br /></div><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4330">FARID</a> — Wed Feb 08, 2012 8:50 am</p><hr />
]]></content>
</entry>
</feed>