<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Discrete Logic Mapper Toolbox</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Discrete Logic Mapper Toolbox</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=9&amp;t=9283">http://forums.nesdev.com/viewtopic.php?f=9&amp;t=9283</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>4</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Wed Sep 05, 2012 3:24 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Discrete Logic Mapper Toolbox</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />A couple weeks ago I started trying to consolidate a list of all the ways one could usefully use 1-3 logic ICs in a discrete logic mapper. I thought I'd post the list here to see if it inspires some other ideas.<br /><br />Without further ado:<br /><ul><li>1 IC<br /><ul><li>Anything usable as an inverter, such as (⅙ 7404, 05, 06, 07, 14, 16, 19, ¼ 7400, 01, 02, 03, 24, 25, 26, 28, 33, 36, 37, 38, 39, 86, ⅓ 7410, 12, 27, ½ 7413, 18, 20, 22, 23, 25, 40)<br />→ Avoids bus conflicts on bankswitch writes by making <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">ROM /OE ← NOT R/W</tt></li><li>Selecting logic such as 7420, 138, 139<br />→ <a href="http://wiki.nesdev.com/w/index.php/PRG_RAM_circuit" class="postlink">Add up to 8KiB WRAM mapped from $6000-$7fff</a><br />→ (138, ½ 139) Split 32KiB into 16KiB RAM from $8000-$BFFF and 16KiB ROM from $C000-$FFFF</li><li>7485 (4-bit comparator)<br />→ <a href="http://forums.nesdev.com/viewtopic.php?p=94322#p94322" class="postlink">Map up to 46KiB from $4800-$FFFF</a><br />→ Map up to 44KiB from $5000-$FFFF without bus conflicts</li><li>7486 (quad XOR)<br />→ Double effective CHR with a palette reordering of tiles by e.g. making <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">CHR&#40;A3&#41; ← PPU&#40;A11&#41; XOR PPU&#40;A3&#41;</tt> (swaps colors 1 and 2).<br />→ Double effective CHR with a vertical flip by making <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">CHR&#40;A0,A1,A2&#41; ← PPU&#40;A11&#41; XOR PPU&#40;A0,A1,A2&#41;</tt>.</li><li>Any latch with an active-low clock enable, such as 74161, 74377<br />→ Most of Nintendo's discrete-logic mappers (AxROM, BNROM, CNROM, GNROM, MHROM)<br />→ Arbitrary GNROM-style mappers with 32KiB PRG banks and 8KiB CHR banks<br />→ Mapper-controlled 1-screen mirroring (a la AxROM)<br />→ Oeka Kids-style dynamic banking of CHR with zones as small as the size of an attribute byte (32x32 pixel), by connecting <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">Latch./CLKEN ← /PPUA13</tt> and <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">Latch.CLK ← /RD</tt><br />→ Additionally, a simple circuit (diode, resistor, capacitor) can automatically clear a 161 on reset</li><li> Any sufficiently large binary counter, such as (74)4020<br />→ Interrupts for 2ⁿ X every 2⁽ⁿ⁺¹⁾ X, where X could be (A12 rises = scanlines·8, cpu cycles, PPU reads)</li><li> Tristatable dual 4-input multiplexer (74'253) in lieu of CHR ROM, plus 8 ≈1kΩ resistors (or a 74244):<br />→ Game Genie style low-resolution graphics, where each 4-by-4 pixel zone is individually controllable and can have any color <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">D3…D0←SEL&#40;A3…A2,A11…A8&#41;</tt> and <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">D7…D4←SEL&#40;A3…A2,A7…A4&#41;</tt></li><li> 74'153 or 74'157, plus 8 ≈1kΩ resistors (or a 74244): (added 2013-III-10)<br />→ Allow selective disabling of 1kB NT RAM so-as-to split bitplanes. <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">CIRAM/SEL ← SEL&#40;A3,A10,A11&#41;</tt>, <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">SEL/E ← A13</tt>, <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">D0…D7 ← A12</tt> through resistors or buffer</li></ul></li><li>2 ICs<ul><li>Any obsolete RAM such as 74170, 670, 189, 219, 289  plus decoding logic (7432) :<br />→ <a href="http://forums.nesdev.com/viewtopic.php?t=2669" class="postlink">4 (for the two 74?70)</a> or 16 (for the three 74??9) independently controlled banks.</li><li>7485 + 74(4078) (comparator+8-input NOR)<br />→ Map almost 48KiB from $4020-$FFFF without bus conflicts</li><li>Any latch plus decoding logic, such as 7400, 02, 32, 133, 138 + 7474, 173, 174, 176<br />→ GNROM-style mappers as made by not-Nintendo</li><li>Timer/counter plus decoding logic, such as 7400 + 555/(74)4020/74123<br />→ <em>Acknowledgable</em> interrupts</li><li>Two multiplexers forming an eight-of-sixteen multiplexer (2× 74157)<br />→ Double effective CHR with a horizontal flip of tiles by making <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">PPU&#40;D0…D7&#41; ← SELECT&#40;PPU&#40;A11&#41;,CHR&#40;D0…D7&#41;,CHR&#40;D7…D0&#41;&#41;</tt></li><li>Eight XOR gates (2x 7486) <span style="font-size: 65%; line-height: normal">added 2012-IX-6</span><br />→ Double effective CHR with a palette inversion (3↔0, 1↔2) by making <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">PPU&#40;D0…D7&#41; ← CHR&#40;D0…D7&#41; XOR A11</tt></li><li>Any latch with an active-low clock enable plus:<ul><li>Masking logic, such as 7400, 02, 08, 32<br />→ UxROM and similar with a fixed bank of PRG or CHR</li><li>Inverting masking logic, such as 7400, 02 (added 2013-V-2)<br />→ UxROM without bus conflicts and similar with a fixed bank of PRG or CHR (max 3 bits of banking)</li><li>a quad 1-of-2 multiplexer (74157)<br />→ Two independently controllable banks<br />→ Two independently controllable banks and two duplicate fixed banks</li><li>Tristatable quad 1-2 multiplexer (74'257) and four &gt;1kΩ resistors (refinement of previous, added 2013-V-12)<br />→ Two independently controllable banks and two different fixed banks (128kiB PRG example: Three resistors pull ROM A14..A16 high. The last connects CPU A13→ROM A13 but can be overridden by the mux)</li><li>½ dual 1-of-4 multiplexer (74153)<br />→ Controllable horizontal/vertical/1screen mirroring</li><li>A single 1-of-2 multiplexer (7400)<br />→ Controllable horizontal/vertical mirroring (as used by Holy Diver)</li></ul></li><li>Inverter (such as 7400, 7404, 7486) + 8KB RAM <a href="http://forums.nesdev.com/viewtopic.php?p=99148#p99148" class="postlink"><span style="font-size: 65%; line-height: normal">added 2012-IX-6</span></a><br />→Map 8KB RAM into PPU $0xxx and $2xxx for 4KB CHR-RAM slice and 4-screen mirroring, inverter makes <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">NOT A12</tt> to decode 4KB ROM (or 4KB window) in $1xxx</li></ul></li><li>3 ICs<ul><li>Latch, Logic, quad 1-of-2 multiplexer <a href="http://forums.nesdev.com/viewtopic.php?p=99148#p99148" class="postlink"><span style="font-size: 65%; line-height: normal">added 2012-IX-6</span></a><br />→ Split CPU or PPU space into 2ⁿ moving and (the rest) fixed bank. e.g. using a 7408: Make PPU $0000-$17FF fixed with a 2KB bank at $1800-$1FFF by <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">SEL←PPUA12 AND PPUA11</tt> and using the multiplexer to either pass 0,0,A12,A11 to the CHR or the latched value.</li></ul></li></ul><br />Do you have any other ideas?<br /><br /><span style="font-size: 70%; line-height: normal">edit: add link to tepples's 74'670 quad-banked design<br />edit: some new ideas</span>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Wed Sep 05, 2012 5:40 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Discrete Logic Mapper Toolbox</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I'm a bit curious about the &quot;Double effective CHR&quot; features... how exactly would those work? Would it be possible to mix the regular set with the alternate set(s)?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Wed Sep 05, 2012 6:23 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Discrete Logic Mapper Toolbox</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />As for the obsolete RAMs, I proposed something using that a long time ago: <a href="http://forums.nesdev.com/viewtopic.php?t=2669" class="postlink">Mapper 670</a>.<br /><br />As I understand the description of doubling the CHR, it'd borrow one bit from the tile number. I wonder how much effort it'd take to implement the bare minimum of something like ExGrafix using two VRAMs in parallel, one to hold the ordinary nametables and one to hold the flip bits and the like.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Wed Sep 05, 2012 6:24 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Discrete Logic Mapper Toolbox</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The FlipY one works by taking the address line that we interpret as the control line, sign-extending to to a 3-bit number, and XORing it with the 3 least significant address lines. Since A2…A0 are already known to encode tile Y coordinate, when we XOR it with 0 or 7, we either leave it unchanged or take the 2's compliment of it, i.e. 7-Y which is a vertical flip. <br /><br />It's definitely combinable, if superfluous for the sprites, and probably most useful with an MMC3 or other mappers with address lines to spare.<br /><br />Any of the transformer designs could also use some latched output instead of an address line, then all tiles would be transformed simultaneously.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Wed Sep 05, 2012 7:35 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Discrete Logic Mapper Toolbox</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">As I understand the description of doubling the CHR, it'd borrow one bit from the tile number.</div><br />But then you'd still have only 256 unique tiles to pick from... I fail to see the advantage.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I wonder how much effort it'd take to implement the bare minimum of something like ExGrafix using two VRAMs in parallel, one to hold the ordinary nametables and one to hold the flip bits and the like.</div><br />Now that would be interesting!

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>infiniteneslives</b> [ Wed Sep 05, 2012 9:47 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Discrete Logic Mapper Toolbox</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Some very interesting ideas you've got here especially with only two chips!  Although I'm having a hard time picturing how some of the doubling effective CHR stuff is working exactly... <br /><br /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">I wonder how much effort it'd take to implement the bare minimum of something like ExGrafix using two VRAMs in parallel, one to hold the ordinary nametables and one to hold the flip bits and the like.</div><br />With all the decoding going managable discrete logic is out of the question for FULL MMC5 ExGraphix it'd even be a tall feat for a simple CPLD.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Wed Sep 05, 2012 11:44 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Discrete Logic Mapper Toolbox</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />By &quot;doubling effective CHR&quot; I meant &quot;You start with 4KiB ROM and get something that looks like 8KiB ROM&quot;, if that makes it any clearer; it just uses an address line (from whatever provenance) as a control line.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Thu Sep 06, 2012 12:39 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Discrete Logic Mapper Toolbox</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I think we can get you something similar to ExGraphix (16 bit tile selector, but old 16x16 attribute zones) for some glue logic, a 2KiB RAM, a latch ('377) and a tristateable buffer ('245).<br /><br />The glue logic would need to:<ul><li>Divide the $2000-$3fff zone into two halves, mapping the internal VRAM to $2000-$2fff (with whatever mirroring) and the new nametable RAM to $3000-$3fff</li><li>Writes to $2000-$3fff would only go to one RAM or the other</li><li>(Optionally: Reads from $3000-$3fff would read from the extra ram)</li><li>Reads from $2000-$2fff would also read from the extra ram and when <strong>not from the attribute tables</strong> (PPU A9…A6 ≠ 0b1111) latch its output in the '377</li><li>The output of this latch would become CHR A19…A13</li></ul><br />The glue logic isn't very complicated but it doesn't conveniently fit in a single 74xx part:<br />CIRAMSEL ← (A13 A12 == 0b10)<br />CE2 ← (A13 A12 == 0b11 OR A13 /RD == 0b10)<br />74377.Clock ← (A13 A12 /RD == 0b100 AND A9…A6 != 0b1111)<br />74245./Enable ← (A13 A12 /RD == 0b110)<br />The 2KiB RAM is probably the most awkward part.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Thu Sep 06, 2012 6:17 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Discrete Logic Mapper Toolbox</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">lidnariq wrote:</div><div class="quotecontent">By &quot;doubling effective CHR&quot; I meant &quot;You start with 4KiB ROM and get something that looks like 8KiB ROM&quot;, if that makes it any clearer; it just uses an address line (from whatever provenance) as a control line.</div><br />It's a really interesting idea, I'm just worried about what address line can be used that will make this useful. If you can't freely mix regular and flipped tiles, effectively having more than 256 tiles to chose from, this is meaningless (if you can't access more than 256 you could just as well have the mirrored tiles stored in the CHR normally). I'm having trouble seeing this mirroring trick being useful without extra memory to hold the mirroring bits (and possibly extra index bits). It's still impressive that it can be done with such simple logic, though.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>MottZilla</b> [ Thu Sep 06, 2012 9:38 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Discrete Logic Mapper Toolbox</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">lidnariq wrote:</div><div class="quotecontent">→ Additionally, a simple circuit (diode, resistor, capacitor) can automatically clear a 161 on reset<br /></div><br /><br />Could you describe this a bit more. Does this rely on the CIC signals or is this supposed to work on any system? And is it truely reset or is it on power up only?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Thu Sep 06, 2012 9:43 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Discrete Logic Mapper Toolbox</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I think he meant that M2 goes tri-state when the CPU is Reset.<br />However this wouldn't work on power-up, so....

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Thu Sep 06, 2012 11:24 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Discrete Logic Mapper Toolbox</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">MottZilla wrote:</div><div class="quotecontent">Could you describe this a bit more. Does this rely on the CIC signals or is this supposed to work on any system? And is it truely reset or is it on power up only?</div><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">M2 --|&gt;|--+-+- 74161 /CLEAR<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; | |<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; R C<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; | |<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; +-+- Ground</div>And yes, it works on both power-up and on reset.<br />R·C ≅ (2/1789772 Hz ≅ 1µs → something like R=10k C=100pF)<br />This schematic has actually been used by a number of pirate multicarts; it's Nintendo's first-party multicarts that so misused <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">CIC KEY RESET</tt><br /><br /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">I think he meant that M2 goes tri-state when the CPU is Reset.<br />However this wouldn't work on power-up, so....</div>No, it works fine on power-up for two different reasons:<ul><li>the Vcc rail takes a while to stabilize before the 2A03 is released from reset. That's the entire point of the CIC replacement circuit discussion, or of the 0.1µF capacitor on pin 7 of the 3193, or of the 0.47µF capacitor on /RST on the famicom. They both provide ~10-100ms after Vcc rises to valid before the system is released from reset, which is more than enough time for the RC to discharge while M2 is high-impedance.</li><li>On power-up, the capacitor will be discharged, instantaneously clearing the 74'161, and the only thing that could charge it is the diode. Even if M2 goes high almost immediately, it takes something less than 30ns for /CLEAR to work.</li></ul>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>infiniteneslives</b> [ Thu Sep 06, 2012 11:42 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Discrete Logic Mapper Toolbox</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">lidnariq wrote:</div><div class="quotecontent">I think we can get you something similar to ExGraphix (16 bit tile selector, but old 16x16 attribute zones) for some glue logic, a 2KiB RAM, a latch ('377) and a tristateable buffer ('245).</div><br /><br />You're better off with a small ~$1 CPLD to do all of this if you've already got a ~$1 gal/pal and a handful of chips...  Not to mention it could help out with the awkwardness of 2KB of RAM.<br /><br />I see the benefit of discrete logic with simplicity and no need for programming, but if you're reaching for some pal/gal to use as glue logic you may as well save money and part count and go for the CPLD with the configurability benefits.<br /><br />Really I'd argue the same thing with ~3 or more discrete logic chips if you can handle designing the logic in a IDE and use a JTAG programmer.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Thu Sep 06, 2012 11:49 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Discrete Logic Mapper Toolbox</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">infiniteneslives wrote:</div><div class="quotecontent">Really I'd argue the same thing with ~3 or more discrete logic chips if you can handle designing the logic in a IDE and use a JTAG programmer.</div><br />Which is why I stopped at 2 <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Thu Sep 06, 2012 6:13 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Discrete Logic Mapper Toolbox</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Here's two more ideas:<br /><br />2 ICs:<br />Inverter + RAM<br />→ Map 8KB RAM into PPU $0xxx and $2xxx for 4KB CHR-RAM slice and 4-screen mirroring, inverter makes <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">NOT A12</tt> to decode 4KB ROM (or 4KB window) in $1xxx<br /><br />3 ICs:<br />Latch, Logic, quad 1-of-2 multiplexer<br />→ e.g. using a 7408: Make PPU $0000-$17FF fixed with a 2KB bank at $1800-$1FFF by <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">SEL←PPUA12 AND PPUA11</tt> and using the multiplexer to either pass 0,0,A12,A11 to the CHR or the latched value.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>4</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>