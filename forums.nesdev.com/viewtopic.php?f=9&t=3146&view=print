<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - What is present on the CPU bus on rests ?</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">What is present on the CPU bus on rests ?</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=9&amp;t=3146">http://forums.nesdev.com/viewtopic.php?f=9&amp;t=3146</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Wed Apr 04, 2007 1:15 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>What is present on the CPU bus on rests ?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />It's a question that tortures me for a while.
<br />What is present on the CPU bus, when the CPU rests (or does an internal operation wihtout any acess on the bus) ? CPUs with dual /RD and /WR lines (like the NES's PPU too) can just leave them both high for a cicle. However, CPUs with only one R/W line and a validation/clock like (PHI2) cannot do this.
<br />
<br />For example when the 6502 exectutes a STA $xx (as a exemple) the sequence is the following :
<br />1 - Fetch the opcode (the CPU bus reads at the programm counter location)
<br />2 - Fetch the argument (the CPU bus reads at the programm counter location+1)
<br />3 - Writes the accumulator to memors (the CPU bus writes to the adress specified by the argument read in 2).
<br />
<br />So each step effectively takes an acess to the bus (the opcode is 3 cycles).
<br />
<br />However, this don't work for all opcodes. Here you are a NOP sequence :
<br />1 - Fetch the opcode (the CPU bus reads the NOP opcode)
<br />2 - Do nothing (what is present on the CPU bus ??)
<br />
<br />Or another example for ROL A :
<br />1 - Fetch the opcode (the CPU reads the ROL A opcode)
<br />2 - Rotate the acumulator (no acess to the CPU bus, what is present on it ?)
<br />
<br />I can see only 2 solutions :
<br />1 - The M2 lines stay low for one (or more) cycles.
<br />2 - The CPU reads a dummy adress.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Wed Apr 04, 2007 2:23 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: What is present on the CPU bus on rests ?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">It's a question that tortures me for a while.<br />What is present on the CPU bus, when the CPU rests (or does an internal operation wihtout any acess on the bus) ?</div><br />The second cycle of an instruction is always a read of the byte after the opcode. This is true even of "implied" instructions such as NOP, INX, and ROL A. Yes, this wastes memory bandwidth, but memory bandwidth was cheaper than CPU logic in the 1970s when the 6502 architecture was developed.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I can see only 2 solutions :<br />1 - The M2 lines stay low for one (or more) cycles.<br />2 - The CPU reads a dummy adress.</div>
<br />The latter is the case.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Wed Apr 04, 2007 2:28 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Hah, this explains everything. So yeah, today CPUs are fast enough to fetch and execute on a single clock, but that's not the case for the 6502, so it makes dummy fetches (and never 'rests', even in NOPs).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>p2</b> [ Wed Apr 04, 2007 8:28 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">Hah, this explains everything. So yeah, today CPUs are fast enough to fetch and execute on a single clock, but that's not the case for the 6502, so it makes dummy fetches (and never 'rests', even in NOPs).</div>
<br />
<br />Actually the reason today's CPUs are able to execute one instruction (and more) per cycle is Pipelining. What happens is internally you get a number N of stages that gets filled up. When the cpu makes access to memory, it checks the cache first then goes to the main memory, halting the whole pipeline until ready.
<br />
<br />The 6502 used no cache and actually accesses the memory every cycle. There is no way to know when a "good" access is made. Also, keep in mind RESET is implemented just like NMI, INT and BRK are. The difference is R/W is forced high, the int vector is set to $FFFC/$FFFD and writes are disabled but the stack still is decremented by 2.
<br />
<br />Inside the 6502, NOPs are just like any other instruction except for the fact that nothing happens. That means you can get 1-byte, 2-byte etc nops. Think of it as LDA but without saving anything: the operands are still fetched.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Thu Apr 05, 2007 1:20 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />You mean on reset, that the CPU actually READS 3 stack locations (instead of writing to it) ?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>p2</b> [ Thu Apr 05, 2007 4:23 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">You mean on reset, that the CPU actually READS 3 stack locations (instead of writing to it) ?</div>
<br />
<br />Yep. Dummy read

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>dvdmth</b> [ Sun Apr 08, 2007 2:09 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Summary of dummy memory accesses:
<br />
<br />* Single-byte instructions have a dummy PC fetch on the second cycle.
<br />* Stack pull operations (PLA, RTS, etc.) have a dummy stack read on the third cycle (before S is incremented).
<br />* JSR has a dummy stack read on the third cycle (for some unknown reason).  The last byte of the JSR instruction isn't read until the last cycle.
<br />* Hardware interrupts have two dummy PC reads (with PC held unchanged) on the first two cycles.
<br />* RESET has three dummy stack reads (with S being decremented) on the third, fourth, and fifth cycles.
<br />* BRK has a dummy PC read on the second cycle (PC is still incremented, however).
<br />* Read-modify-write instructions (such as INC) have a dummy WRITE after the operand is read and before it is modified and written back.  For example, if INC is performed on an address currently containing the value $17, the instruction reads $17, writes $17, then writes $18.
<br />* Zero page indexed addressing has a dummy zero page access on the third cycle, before the index is added.
<br />* Absolute indexed addressing has a dummy read on the fourth cycle, after the index is added to the lower byte but before the upper byte is adjusted.  Note that if the instruction is a read operation and if the upper byte does not change (no page crossing), this dummy read becomes valid and one cycle of execution is saved.
<br />* For branch instructions, the first byte of the instruction following the branch is read on the third cycle.  If the branch is taken, this result is thrown away and another byte is fetched after adjusting the lower byte of the PC.  If a page boundary is crossed, this result is also thrown out and a new byte is read after fixing the upper byte of the PC.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>