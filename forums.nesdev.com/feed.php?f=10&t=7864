<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=10&amp;t=7864" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2011-06-24T14:11:34-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=10&amp;t=7864</id>
<entry>
<author><name><![CDATA[MottZilla]]></name></author>
<updated>2011-06-24T14:11:34-07:00</updated>
<published>2011-06-24T14:11:34-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7864&amp;p=80509#p80509</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7864&amp;p=80509#p80509"/>
<title type="html"><![CDATA[Memory mirroring?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7864&amp;p=80509#p80509"><![CDATA[
The address lines are the bits that make up the address you are accessing. In order to access the RAM the system checks that certain bits in the address are low (0) to determine you are accessing the memory region between $0000 and $2000. This means you have less bits to check than specifically checking for less than $0800. <br /><br />So what happens is if the address is $1FFF which is<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">01111111111111<br />32109876543210 - guide<br /></div><br /><br />That 0 which would start being set at address $2000 is letting the logic know to enable the RAM chip. Since the address lines above $7FF don't actually connect to the memory it loops around as the lines that are connected still change.<br /><br />Not sure how to make it much more clear. <br /><br />In a smaller example say you had a memory that was only 4 bytes. If the address is 00, 01, 10, or 11 they would all access a different byte of memory. When you try to access 100, that first 1 is ignored cause it connects to nothing. So you're accessing the same as 00. <br /><br />Logically you can get the RAM address for NES by doing Address &amp; $7FF. This logical and operation will remove any address bits higher than what actually exists on the NES RAM chip. I hope this helped.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=1726">MottZilla</a> — Fri Jun 24, 2011 2:11 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2011-06-24T14:06:22-07:00</updated>
<published>2011-06-24T14:06:22-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7864&amp;p=80506#p80506</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7864&amp;p=80506#p80506"/>
<title type="html"><![CDATA[Memory mirroring?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7864&amp;p=80506#p80506"><![CDATA[
Well how you guys are over complicating things.<br /><br />Simply put, the RAM chip is enabled to respond in the $0000-$1fff range, but is only 2k, so like cpow said two adress lines are simply unconnected to the chip and will not have any effect on it.<br />The higher adress lines aren't connected to the chip eihter - they are instead connected to some 74 series logic chip that will do the decoding / that is tell the RAM chip to respond when the CPU acess $0000-$1fff, tell the PPU to respond when adressing $2000-$3fff, etc...<br /><br />Of course it could have been possible to fully decode the adress and disable the RAM chip for range $800-$1fff, but this would waste hardware for no reason.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Fri Jun 24, 2011 2:06 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[cpow]]></name></author>
<updated>2011-06-24T13:40:51-07:00</updated>
<published>2011-06-24T13:40:51-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7864&amp;p=80500#p80500</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7864&amp;p=80500#p80500"/>
<title type="html"><![CDATA[Memory mirroring?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7864&amp;p=80500#p80500"><![CDATA[
<div class="quotetitle">Edgyr45 wrote:</div><div class="quotecontent"><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Because not all address lines are decoded<br /></div><br /><br />What is an address line?<br /><br />0x0700 = 00000111 00000000b<br />0x0F00 = 00001111 00000000b<br /><br />Perhaps with this post you will identify what is it I don't get...<br />Thanks</div><br /><br />An address line is a physical wire that carries a signal.  A signal is a voltage level (say 0volts to 5volts).  In *most* computers the signal is "quantized" into three regions where a "voltage above some value" means a logic 1 and a "voltage below some other value" means a logic 0 (and a voltage between these values is "bad news" but that's not relevant here).  Realistically a computer doesn't *know* it's dealing with 1's and 0's.  But...anyway.<br /><br />If you look at the addresses you've converted from hexadecimal to binary notation above, you should quickly see the only difference between them is that leftmost 1 in the 0x0F00 case that is not there in the 0x0700 case.  It is that 0/1 bit of the address that rides on an address line that is not connected to the NES RAM.  The rest of the address lines to the right of that 0/1 bit *are* connected to the NES RAM.  Thus, for both of those addesses you gave above the NES RAM will put data onto the data bus from its "address 0x0700".<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3705">cpow</a> — Fri Jun 24, 2011 1:40 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Edgyr45]]></name></author>
<updated>2011-06-24T13:29:59-07:00</updated>
<published>2011-06-24T13:29:59-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7864&amp;p=80498#p80498</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7864&amp;p=80498#p80498"/>
<title type="html"><![CDATA[Memory mirroring?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7864&amp;p=80498#p80498"><![CDATA[
<div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Because not all address lines are decoded<br /></div><br /><br />What is an address line?<br />0x0700 is an address<br />0x0000-0x0700 is a range of addresses<br /><br />I'm really trying to understand this here (you can laugh at me all you want <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" />)<br /><br />I'll take 0x0700 which is in the 0x0000-0x07FF range that get repeated 3 times in RAM. <br /><br />If I want to read 0x0700's mirror, I must read at : 0x0700 + 2kb = 0x0F00 which is also in the range of the 1st mirror memory 0x0800–0x0FFF<br /><br />I tried to see how those two memory are related and I still don't get it...<br /><br />0x0700 = 00000111 00000000b<br />0x0F00 = 00001111 00000000b<br /><br />Perhaps with this post you will identify what is it I don't get...<br />Thanks<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4908">Edgyr45</a> — Fri Jun 24, 2011 1:29 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2011-06-15T09:59:06-07:00</updated>
<published>2011-06-15T09:59:06-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7864&amp;p=79852#p79852</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7864&amp;p=79852#p79852"/>
<title type="html"><![CDATA[Memory mirroring?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7864&amp;p=79852#p79852"><![CDATA[
Because not all address lines are decoded. The NES decides which memory chips to activate based on the addresses that are accessed by the CPU or PPU. For example, since PRG-ROM is supposed to be mapped at $8000-$FFFF, only one address line is required to detect that this range is being accessed: A15 will be low when accessing $0000-$7FFF, and high when acessing $8000-$FFFF.<br /><br />Since it takes more hardware to watch more address lines, some of them are ignored if there are no undesired side effects. The NES only has 2KB of RAM, mapped at $000-$7FF. To guarantee that this RAM would be visible <strong>only</strong> at that range, the CPU would have to check if a bunch of address lines were low, which would require extra hardware and would bring no advantage. So it's easier/cheaper to ignore those address lines, causing the same memory to be visible no matter what those lines are, effectively making the same memory visible at different addresses.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Wed Jun 15, 2011 9:59 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[shawnleblanc]]></name></author>
<updated>2011-06-15T09:17:08-07:00</updated>
<published>2011-06-15T09:17:08-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7864&amp;p=79848#p79848</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7864&amp;p=79848#p79848"/>
<title type="html"><![CDATA[Memory mirroring?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7864&amp;p=79848#p79848"><![CDATA[
I've always wondered: why do the NES CPU and PPU have areas in their memory map that are mirrors of other areas?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4879">shawnleblanc</a> — Wed Jun 15, 2011 9:17 am</p><hr />
]]></content>
</entry>
</feed>