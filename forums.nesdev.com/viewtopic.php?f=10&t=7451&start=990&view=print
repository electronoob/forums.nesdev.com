<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - 8x16 and whatever else unreg wants to know</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">8x16 and whatever else unreg wants to know</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=10&amp;t=7451">http://forums.nesdev.com/viewtopic.php?f=10&amp;t=7451</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>67</strong> of <strong>83</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Kasumi</b> [ Tue Jun 04, 2013 12:06 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: 8x16 sprite is really a 16x32 pixel image?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">levellength+1 is 4... so cameraposition would have to be big enough to reach 768... my logic doesn't work well right now.</div><br />Where is levellength+1 even coming from? You've used it in both your posts, and I'm not seeing it. Also 4 (in the examples I gave) would mean your level is only 4 pixels wide. If you're saying that's the number of screens across your level is, your levellength (following my example) is really 4*256 (1024) pixels, and your cameraposition/ladyposition have to be two bytes to hold that large a number.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"> ...I remember that cmp would work because it acts just like subtraction only it discards the answer... and that would be fine... the carry would still be cleared.</div><br />No, you cannot use cmp for 16bit numbers (which you'll need for scrolling past more than one screen) because cmp also ignores the state of the carry before the operation.<br /><br />Edit: (Disclaimer: You can totally use cmp for 16 bit numbers with branches and such, but it's more work for probably no gain in this case.)<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">lda #$00<br />clc<br />sbc #$00<br />;Carry is clear<br /></div><br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">lda #$00<br />clc<br />cmp #$00<br />;Carry is set.<br /></div><br />This will affect the higher bytes of all subtractions greater than 8 bits, so you must use sbc.<br /><br />Edit:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">lda camerapositionlow<br />sec<br />sbc ladypositionlow<br />sta camerapositionlow<br /><br />lda camerapositionhigh<br />sbc ladypositionhigh<br />sta camerapositionhigh<br />bcs abovezero<br />lda #$00<br />sta camerapositionhigh<br />sta camperapositionlow<br /><br />abovezero:<br /></div><br />Edit: The above is totally wrong. See <a href="http://forums.nesdev.com/viewtopic.php?p=112764#p112764" class="postlink">this post</a> for a fix.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>unregistered</b> [ Tue Jun 04, 2013 1:04 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: 8x16 sprite is really a 16x32 pixel image?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Kasumi wrote:</div><div class="quotecontent"><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">levellength+1 is 4... so cameraposition would have to be big enough to reach 768... my logic doesn't work well right now.</div><br />Where is levellength+1 even coming from? You've used it in both your posts, and I'm not seeing it. Also 4 (in the examples I gave) would mean your level is only 4 pixels wide. If you're saying that's the number of screens across your level is, your levellength (following my example) is really 4*256 (1024) pixels, and your cameraposition/ladyposition have to be two bytes to hold that large a number.</div> When I added the +1 at the end... that +1 means levellength is a two byte variable.  I don't know if I also knew that cameraposition/ladyposition would have to be two bytes to hold that large a number.  You should know that levellength+1 could be used for your subtract 256... decrement levellength+1 by 1.<br /><br />I appreciate your helpfullness  <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />  ...and I'm sorry for using +1 to mean my variable is the high byte.  <img src="./images/smilies/icon_sad.gif" alt=":(" title="Sad" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Tue Jun 04, 2013 1:48 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: 8x16 sprite is really a 16x32 pixel image?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />To compare large numbers, try using cmp for the first and sbc for the rest.<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; lda this_lo<br />&nbsp; cmp that_lo&nbsp; &nbsp;; set up carry for next sbc<br />&nbsp; lda this_hi<br />&nbsp; sbc that_hi<br />&nbsp; ; right now, carry is set if and only if this &gt;= that<br /></div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>unregistered</b> [ Tue Jun 04, 2013 2:07 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: 8x16 sprite is really a 16x32 pixel image?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Kasumi wrote:</div><div class="quotecontent"><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"> ...I remember that cmp would work because it acts just like subtraction only it discards the answer... and that would be fine... the carry would still be cleared.</div><br />No, you cannot use cmp for 16bit numbers (which you'll need for scrolling past more than one screen) because cmp also ignores the state of the carry before the operation.</div>  Why does the state of the carry before the operation matter? <br /><br /><div class="quotetitle">Kasumi wrote:</div><div class="quotecontent">Edit: (Disclaimer: You can totally use cmp for 16 bit numbers with branches and such, but it's more work for probably no gain in this case.)<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">lda #$00<br />clc<br />sbc #$00<br />;Carry is clear<br /></div><br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">lda #$00<br />clc<br />cmp #$00<br />;Carry is set.<br /></div><br />This will affect the higher bytes of all subtractions greater than 8 bits, so you must use sbc.</div> Thank you for the correction! <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /><br /><br /><div class="quotetitle">Kasumi wrote:</div><div class="quotecontent">Edit:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">lda camerapositionlow<br />sec<br />sbc ladypositionlow<br />sta camerapositionlow<br /><br />lda camerapositionhigh<br />sbc ladypositionhigh<br />sta camerapositionhigh<br />bcs abovezero<br />lda #$00<br />sta camerapositionhigh<br />sta camperapositionlow<br /><br />abovezero:<br /></div></div><s>Thought I understood this code.</s> <span style="color: #40BFFF"> No I do not understand.  <img src="./images/smilies/icon_redface.gif" alt=":oops:" title="Embarassed" /></span><br /><br /><span style="color: #40BFFF">edit.</span>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Kasumi</b> [ Tue Jun 04, 2013 10:10 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: 8x16 sprite is really a 16x32 pixel image?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">and I'm sorry for using +1 to mean my variable is the high byte. </div><br />I was just interpreting it as an addition to a value rather than address. No need to be sorry. I just always only see things one way.  <img src="./images/smilies/icon_sad.gif" alt=":(" title="Sad" /> <br /><br /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">To compare large numbers, try using cmp for the first and sbc for the rest.</div><br />YO!!!! That made my evening, I can use that in quite a few places!  <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /> I concede, it's not more work to do that at all.<br />Edit2: I really can't thank you enough. Off topic, but you caught me in the middle of rewriting some object collision/interaction stuff and I can now save a small amount of time in subroutines that will be run many times per frame.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Why does the state of the carry before the operation matter? </div><br />Because the sbc/adc (but not cmp) take the carry before the operation into account.<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">lda #$00<br />sec<br />sbc #$00<br />;Result is #$00 with set carry.<br /></div><br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">lda #$00<br />clc<br />sbc #$00<br />;Result is #$FF, with clear carry.<br /></div><br />And then the second subtraction of the 16 bit number needs to take the result of the carry from the first into account. (which cmp doesn't do.)<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"> No I do not understand. <img src="./images/smilies/icon_redface.gif" alt=":oops:" title="Embarassed" /></div><br /><br />Edit: Because I don't think things through sometimes. It should be this:  <img src="./images/smilies/icon_redface.gif" alt=":oops:" title="Embarassed" /> <br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">lda ladypositionlow<br />sec<br />sbc #128;#$80<br />sta camerapositionlow<br /><br />lda ladypositionhigh<br />sbc #$00;High byte of $0080<br />sta camerapositionhigh<br />bcs abovezero<br />lda #$00<br />sta camerapositionhigh<br />sta camperapositionlow<br /><br />abovezero:<br />;Can be optimized in cute ways... ^_^<br /></div><br /><br />Which will make infinitely more sense, because what I posted before will not work at all. My logic <a href="http://forums.nesdev.com/viewtopic.php?p=110599#p110599" class="postlink">here</a> was sound, but what I wrote in 6502 wasn't that logic... Not thinking, not debugging, etc... I'm sorry. I kind of look forward to these posts, but then, sometimes... I hurt more than help.<br /><br />Also, this does not include the &quot;If cameraposition &gt; levellength -256, cameraposition = levellength-256.&quot;

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Wed Jun 05, 2013 6:14 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: 8x16 sprite is really a 16x32 pixel image?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />For more explanations about 16-bit comparisons, see <!-- m --><a class="postlink" href="http://www.6502.org/tutorials/compare_beyond.html">http://www.6502.org/tutorials/compare_beyond.html</a><!-- m -->

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>unregistered</b> [ Wed Jun 05, 2013 10:25 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: 8x16 sprite is really a 16x32 pixel image?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Kasumi wrote:</div><div class="quotecontent"><div class="quotetitle">tepples wrote:</div><div class="quotecontent">To compare large numbers, try using cmp for the first and sbc for the rest.</div><br />YO!!!! That made my evening, I can use that in quite a few places!  <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /> I concede, it's not more work to do that at all.<br />Edit2: I really can't thank you enough. Off topic, but you caught me in the middle of rewriting some object collision/interaction stuff and I can now save a small amount of time in subroutines that will be run many times per frame.</div><strong>sbc</strong> is the same as <strong>cmp</strong> in cycles use... so after looking at tepples post again I'm guessing you save (don't require) an <strong>sec</strong>.  Is that correct? <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /> <br /><br />I'm still confuzzled <img src="./images/smilies/icon_confused.gif" alt=":?" title="Confused" /> about&#058;<br /><div class="quotetitle">Kasumi wrote:</div><div class="quotecontent"><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Why does the state of the carry before the operation matter? </div><br />Because the sbc/adc (but not cmp) take the carry before the operation into account.<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">lda #$00<br />sec<br />sbc #$00<br />;Result is #$00 with set carry.<br /></div><br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">lda #$00<br />clc<br />sbc #$00<br />;Result is #$FF, with clear carry.<br /></div><br />And then the second subtraction of the 16 bit number needs to take the result of the carry from the first into account. (which cmp doesn't do.)</div>I can see what happens but my brain is missing the why. Lunch... <span style="color: #80BFFF">(I'm going to come back to this...  and honestly I am excited about learning about the carry and math. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /> )</span><br /><br /><span style="color: #80BFFF">edit.</span>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>unregistered</b> [ Wed Jun 05, 2013 2:11 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: 8x16 sprite is really a 16x32 pixel image?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Kasumi wrote:</div><div class="quotecontent"><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">and I'm sorry for using +1 to mean my variable is the high byte. </div><br />I was just interpreting it as an addition to a value rather than address. No need to be sorry. I just always only see things one way.  <img src="./images/smilies/icon_sad.gif" alt=":(" title="Sad" /> </div><div class="quotetitle">Kasumi wrote:</div><div class="quotecontent"><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"> No I do not understand. <img src="./images/smilies/icon_redface.gif" alt=":oops:" title="Embarassed" /></div><br /><br />Edit: Because I don't think things through sometimes. It should be this:  <img src="./images/smilies/icon_redface.gif" alt=":oops:" title="Embarassed" /> <br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">lda ladypositionlow<br />sec<br />sbc #128;#$80<br />sta camerapositionlow<br /><br />lda ladypositionhigh<br />sbc #$00;High byte of $0080<br />sta camerapositionhigh<br />bcs abovezero<br />lda #$00<br />sta camerapositionhigh<br />sta camperapositionlow<br /><br />abovezero:<br />;Can be optimized in cute ways... ^_^<br /></div><br /><br />Which will make infinitely more sense, because what I posted before will not work at all. My logic <a href="http://forums.nesdev.com/viewtopic.php?p=110599#p110599" class="postlink">here</a> was sound, but what I wrote in 6502 wasn't that logic... Not thinking, not debugging, etc... I'm sorry. I kind of look forward to these posts, but then, sometimes... I hurt more than help.</div>Aw... you are very kind! <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /> <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />  Look forward to these posts.  I appreciate your honesty and apology and I don't think you hurt more than help. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /> : )<br /><br /><div class="quotetitle">Kasumi wrote:</div><div class="quotecontent">Also, this does not include the &quot;If cameraposition &gt; levellength -256, cameraposition = levellength-256.&quot;</div>Thank you Kasumi! <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Kasumi</b> [ Wed Jun 05, 2013 10:18 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: 8x16 sprite is really a 16x32 pixel image?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">sbc is the same as cmp in cycles use... so after looking at tepples post again I'm guessing you save (don't require) an sec. Is that correct? <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /> </div><br />This is correct. Although, sometimes you can avoid the sec anyway, even when using sbc. What matters is not that sec is used, just that the carry is set.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">bcc somewhere<br />;If we're here, we didn't branch, so the carry is set.<br />lda variable<br />;sec;Not needed right here, because we can guarantee the carry is already set<br />sbc variable2;<br />somewhere:<br /></div><br /><br />Stuff like this is why it takes forever for me to write code. I think I like optimizing more than getting things working. *shrug* <br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I can see what happens but my brain is missing the why</div><br />I'm not sure I can explain that stuff better than the guides, but apparently I'm giving it a shot. Check the 6+5 = 11 on this poster: <!-- m --><a class="postlink" href="http://www.abcteach.com/documents/poster-regrouping-in-addition-elem-24639">http://www.abcteach.com/documents/poste ... elem-24639</a><!-- m --> (It's kiddy, but it actually shows what I want to show)<br />The orange 1 is basically like the carry bit. For the tens place, it's adding 0+0. PLUS CARRY (1 in this case)! <br />If you were adding 4+5, the tens place would add 0+0. PLUS CARRY (0, in that case! Because 4+5 doesn't carry to the tens place.)<br /><br />So when you add on the 6502 with adc, you are <em>always</em> adding the two numbers. PLUS CARRY! It just carries over to the next byte when it overflows, instead of the next place when you run out of digits.<br /><br />This is why you clear the carry before most additions. If you don't, you will add an extra one if the carry was set!<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp;00|FF (the | separates the two bytes into &quot;places&quot; like the one and tens place in the decimal addition example)<br />+00|01<br />------<br />&nbsp;01|00<br /></div><br />You'll notice for the high bytes, you're doing 00+00, just like for the tens place in that example poster. But, like in the example poster, the addition of the lower place causes an overflow. FF+01 is greater than 255, so the carry ends up set. 5+6 is greater than 9, so you end up carrying one. <br /><br />Anytime you add a number and result would have been greater than the byte can hold, the carry is set. Otherwise it is cleared. <br /><br />For clarity: ADC will always set/clear the carry based on the result of the addition. See this code:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">sec<br />lda #$00<br />adc #$00<br />;Carry is cleared.<br /></div><br />The carry is not &quot;left alone&quot; (In this case, it does not stay set) if there was no carryover. If there was no carryover, it is clear. If there was, it is set. Nothing else.<br /><br />This ensures that when you add the higher bytes (places) of the number, they get the correct result. This is why you DO NOT change the carry between operations that are part of the same multi byte add or subtract. The previous operations will make the carry right (whether there was a carry or not) and you don't have to worry about it to get the right result.<br /><br />Now... subtraction is a bit different. It subtracts the two numbers and the OPPOSITE of the carry. So when the carry is set (1), it will just subtract one number from the other. When the carry is clear (0), it will subtract one number from the other, AND an additional one.<br /><br />The way I used to remember it... If the carry is opposite what you would normally set it to before that operation, that's when you get the extra one. (You clear the carry before addition, so when it's set it adds one more. You set the carry before subtraction, so when it's clear, it subtracts one more.) <br /><br />Three things to take away:<br />1. The carry is ALWAYS taken into account when you use adc or sbc, so make sure it's right for the operation you intend to do before that operation runs. (Clear before addition, set before subtraction)<br />2. The carry will become the opposite of what you would normally initialize it to if the operation goes outside the boundaries of a byte. (So if an addition would have yielded more than 255, or a subtraction would have yielded less than 0.) Otherwise, the carry becomes what you would normally initialize it to.<br />3. If the carry is the opposite of what you would normally initialize it to, one extra will be used in the operation. (One extra will be subtracted for sbc, or one extra will be added for adc.)<br /><br />That's really all there is to it. The rest is the &quot;why&quot; behind it. With the knowledge, you can do fun stuff like this:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">bcc somewhere<br />;The carry is set because we didn't branch<br />;We want to add eight to the accumulator<br />;clc;We could clear the carry<br />;adc #$08;And add 8.<br />adc #$07;Or... we could add 7. Because we know the carry is set, and 7+1 is eight.<br /></div><br />But... don't do stuff like that in your game until you're really sure about it. If you understand it why it works, though, you've got a handle on the carry.<br /><br />I really do look forward to these posts. This is my favorite section of the forum, and I always feel bad when I mislead people.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>unregistered</b> [ Thu Jun 06, 2013 5:58 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: 8x16 sprite is really a 16x32 pixel image?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Kasumi wrote:</div><div class="quotecontent"><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">sbc is the same as cmp in cycles use... so after looking at tepples post again I'm guessing you save (don't require) an sec. Is that correct? <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /> </div><br />This is correct. Although, sometimes you can avoid the sec anyway, even when using sbc. What matters is not that sec is used, just that the carry is set.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">bcc somewhere<br />;If we're here, we didn't branch, so the carry is set.<br />lda variable<br />;sec;Not needed right here, because we can guarantee the carry is already set<br />sbc variable2;<br />somewhere:<br /></div><br /><br />Stuff like this is why it takes forever for me to write code. I think I like optimizing more than getting things working. *shrug* <br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I can see what happens but my brain is missing the why</div><br />I'm not sure I can explain that stuff better than the guides, but apparently I'm giving it a shot. Check the 6+5 = 11 on this poster: <!-- m --><a class="postlink" href="http://www.abcteach.com/documents/poster-regrouping-in-addition-elem-24639">http://www.abcteach.com/documents/poste ... elem-24639</a><!-- m --> (It's kiddy, but it actually shows what I want to show)<br />The orange 1 is basically like the carry bit. For the tens place, it's adding 0+0. PLUS CARRY (1 in this case)! <br />If you were adding 4+5, the tens place would add 0+0. PLUS CARRY (0, in that case! Because 4+5 doesn't carry to the tens place.)<br /><br />So when you add on the 6502 with adc, you are <em>always</em> adding the two numbers. PLUS CARRY! It just carries over to the next byte when it overflows, instead of the next place when you run out of digits.<br /><br />This is why you clear the carry before most additions. If you don't, you will add an extra one if the carry was set!<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp;00|FF (the | separates the two bytes into &quot;places&quot; like the one and tens place in the decimal addition example)<br />+00|01<br />------<br />&nbsp;01|00<br /></div><br />You'll notice for the high bytes, you're doing 00+00, just like for the tens place in that example poster. But, like in the example poster, the addition of the lower place causes an overflow. FF+01 is greater than 255, so the carry ends up set. 5+6 is greater than 9, so you end up carrying one. <br /><br />Anytime you add a number and result would have been greater than the byte can hold, the carry is set. Otherwise it is cleared. <br /><br />For clarity: ADC will always set/clear the carry based on the result of the addition. See this code:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">sec<br />lda #$00<br />adc #$00<br />;Carry is cleared.<br /></div><br />The carry is not &quot;left alone&quot; (In this case, it does not stay set) if there was no carryover. If there was no carryover, it is clear. If there was, it is set. Nothing else.<br /><br />This ensures that when you add the higher bytes (places) of the number, they get the correct result. This is why you DO NOT change the carry between operations that are part of the same multi byte add or subtract. The previous operations will make the carry right (whether there was a carry or not) and you don't have to worry about it to get the right result.<br /><br />Now... subtraction is a bit different. It subtracts the two numbers and the OPPOSITE of the carry. So when the carry is set (1), it will just subtract one number from the other. When the carry is clear (0), it will subtract one number from the other, AND an additional one.<br /><br />The way I used to remember it... If the carry is opposite what you would normally set it to before that operation, that's when you get the extra one. (You clear the carry before addition, so when it's set it adds one more. You set the carry before subtraction, so when it's clear, it subtracts one more.) <br /><br />Three things to take away:<br />1. The carry is ALWAYS taken into account when you use adc or sbc, so make sure it's right for the operation you intend to do before that operation runs. (Clear before addition, set before subtraction)<br />2. The carry will become the opposite of what you would normally initialize it to if the operation goes outside the boundaries of a byte. (So if an addition would have yielded more than 255, or a subtraction would have yielded less than 0.) Otherwise, the carry becomes what you would normally initialize it to.<br />3. If the carry is the opposite of what you would normally initialize it to, one extra will be used in the operation. (One extra will be subtracted for sbc, or one extra will be added for adc.)<br /><br />That's really all there is to it. The rest is the &quot;why&quot; behind it. With the knowledge, you can do fun stuff like this:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">bcc somewhere<br />;The carry is set because we didn't branch<br />;We want to add eight to the accumulator<br />;clc;We could clear the carry<br />;adc #$08;And add 8.<br />adc #$07;Or... we could add 7. Because we know the carry is set, and 7+1 is eight.<br /></div><br />But... don't do stuff like that in your game until you're really sure about it. If you understand it why it works, though, you've got a handle on the carry.</div> Yes, I understand everything well<span style="color: #FF4080">; it is written very well</span>. <span style="color: #FF4080">Great job Kasumi!</span> Even your last code example... I was suprized you quoted your code...  but suddenly I was happy to see those comments... it was a really cool experience!  <span style="color: #40BFFF"><s>&#40;:</s> <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /></span><br /><span style="font-size: 200%; line-height: normal"><span style="color: #FFFF00"><strong>THANK YOU KASUMI!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!</strong></span></span><span style="font-size: 150%; line-height: normal"><span style="color: #00FF00">!!!!!!!!!!!!!!!!!!!!!!</span></span> <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /><br /><img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /><br /> <br /><div class="quotetitle">Kasumi wrote:</div><div class="quotecontent"><br />I really do look forward to these posts. This is my favorite section of the forum, and I always feel bad when I mislead people.</div>This is my favorite section of the forum too! <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /><br /><br /><span style="color: #40BFFF">edit.</span><br /><span style="color: #FF4080">once more.</span>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>unregistered</b> [ Fri Jun 07, 2013 10:08 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: 8x16 sprite is really a 16x32 pixel image?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Kasumi wrote:</div><div class="quotecontent"><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"> No I do not understand. <img src="./images/smilies/icon_redface.gif" alt=":oops:" title="Embarassed" /></div><br /><br />Edit: Because I don't think things through sometimes. It should be this:  <img src="./images/smilies/icon_redface.gif" alt=":oops:" title="Embarassed" /> <br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">lda ladypositionlow<br />sec<br />sbc #128;#$80<br />sta camerapositionlow<br /><br />lda ladypositionhigh<br />sbc #$00;High byte of $0080<br />sta camerapositionhigh<br />bcs abovezero<br />lda #$00<br />sta camerapositionhigh<br />sta camperapositionlow<br /><br />abovezero:<br />;Can be optimized in cute ways... ^_^<br /></div><br /></div><br /><br />So... this code is susposed to  take care of <br /><span style="color: #FF8000">cameraposition = ladyposition - 128.</span><br />and  <br /><span style="color: #FF0080">If cameraposition &lt; 0, cameraposition = 0.</span><br />because you ended with:<br /><div class="quotetitle">Kasumi wrote:</div><div class="quotecontent">Also, this does not include the &quot;If cameraposition &gt; levellength -256, cameraposition = levellength-256.&quot;</div><br /><br />Ok well I copied your code and wrote my questions:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">lda ladypositionlow<br />sec<br />sbc #128;#$80<br />sta camerapositionlow<br /><br />lda ladypositionhigh&nbsp; &nbsp; ;why do you load ladypositionhigh here?<br />sbc #$00;High byte of $0080&nbsp; &nbsp;;&lt;-- what does this comment mean?<br />sta camerapositionhigh<br />bcs abovezero&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;;I understand this... it is going to a place where cameraposition &gt; 0<br />lda #$00&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ;I also understand these... cameraposition = 0<br />sta camerapositionhigh<br />sta camperapositionlow<br /><br />abovezero:<br />;Can be optimized in cute ways... ^_^<br /></div><br /><br />edit: Well... I looked at this some more and want to say that I notice you aren't using <strong>sec</strong> before my first question line... so that 128 would be the low... and 00 would be the high...  I still don't understand, I'm thinking... but Yes I dont understand.  <img src="./images/smilies/icon_redface.gif" alt=":oops:" title="Embarassed" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Kasumi</b> [ Sat Jun 08, 2013 5:42 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: 8x16 sprite is really a 16x32 pixel image?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">lda ladypositionhigh    ;why do you load ladypositionhigh here?</div><br />Because ladyposition is one number stored in two bytes. If you want to subtract a number from it, you have to subtract both bytes of that number from both bytes of ladyposition. If you don't also subtract from the high byte, it's going to end up wrong when the low byte wraps. This is 16 bit subtraction.<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">sbc #$00;High byte of $0080   ;&lt;-- what does this comment mean?</div><br />We're subtracting 128. 128 is $80 if you use one byte. 128 is $0080 if you use two bytes. So the high byte for 128 is $00.<br /><br />To add 256, you'd do this:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">lda ladypositionlow<br />clc<br />adc #$00<br />sta camerapositionlow<br /><br />lda ladypositionhigh<br />adc #$01;High byte of $0100 (256)<br />sta camerapositionhigh<br />;Well... for code clarity you'd do that, anyway. <br /></div><br />to add one, you'd do this:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">lda ladypositionlow<br />clc<br />adc #$01<br />sta camerapositionlow<br /><br />lda ladypositionhigh<br />adc #$00;High byte of $0001<br />sta camerapositionhigh<br /></div><br />Let's pretend ladyposition is $00FF or 255 (so ladypositionlow is #$FF and ladypositionhigh is #$00) in the above add one example.<br />Use what you've learned about the carry to see how ladyposition gets to $0100 or 256. (so ladypositionlow is #$00 and ladypositionhigh is #$01). Does it make sense? Then see how it goes to $0101. The carry is what allows one byte to overflow into the next without branching.<br /><br />That's how you do 16bit math. I'm not prepared to write a huge post on it at the moment, though.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>unregistered</b> [ Sat Jun 08, 2013 11:45 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: 8x16 sprite is really a 16x32 pixel image?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Kasumi wrote:</div><div class="quotecontent"><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">lda ladypositionhigh    ;why do you load ladypositionhigh here?</div><br />Because ladyposition is one number stored in two bytes. If you want to subtract a number from it, you have to subtract both bytes of that number from both bytes of ladyposition. If you don't also subtract from the high byte, it's going to end up wrong when the low byte wraps. This is 16 bit subtraction.<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">sbc #$00;High byte of $0080   ;&lt;-- what does this comment mean?</div><br />We're subtracting 128. 128 is $80 if you use one byte. 128 is $0080 if you use two bytes. So the high byte for 128 is $00.<br /><br />To add 256, you'd do this:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">lda ladypositionlow<br />clc<br />adc #$00<br />sta camerapositionlow<br /><br />lda ladypositionhigh<br />adc #$01;High byte of $0100 (256)<br />sta camerapositionhigh<br />;Well... for code clarity you'd do that, anyway. <br /></div><br />to add one, you'd do this:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">lda ladypositionlow<br />clc<br />adc #$01<br />sta camerapositionlow<br /><br />lda ladypositionhigh<br />adc #$00;High byte of $0001<br />sta camerapositionhigh<br /></div><br />Let's pretend ladyposition is $00FF or 255 (so ladypositionlow is #$FF and ladypositionhigh is #$00) in the above add one example.<br />Use what you've learned about the carry to see how ladyposition gets to $0100 or 256. (so ladypositionlow is #$00 and ladypositionhigh is #$01). Does it make sense? Then see how it goes to $0101. The carry is what allows one byte to overflow into the next without branching.<br /><br />That's how you do 16bit math. I'm not prepared to write a huge post on it at the moment, though.</div><br /><br />I am going to understand 16bit math; thank you for answering me. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /><br />edit: Yes that makes sense.  Now I must apply what I've learned.  Give me a while to do this. It is 1:56pm n0ow. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>unregistered</b> [ Fri Jun 14, 2013 3:08 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: 8x16 sprite is really a 16x32 pixel image?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="codetitle"><b>Code:</b></div><div class="codecontent">;camera movement<br />;<br />;<br />;<br />;***********************<br /><br />.enum&nbsp; LocalVariables4mvement<br /><br />&nbsp; t12 .dsb 2<br />&nbsp; ladyposition .dsb 2<br />&nbsp; ;ladypositionlow&nbsp; .dsb 1 ;players position<br />&nbsp; ;ladypositionhigh .dsb 1 ;players position<br />&nbsp; cameraposition .dsb 2<br />&nbsp; ;camerapositionlow .dsb 1<br />&nbsp; ;camerapositionhigh .dsb 1<br />.ende<br /><br />camera_aim:<br /><br />&nbsp; <br />&nbsp; <br />&nbsp; ;determines how much to move based on the players position<br />&nbsp; sta $ff<br />&nbsp; <br />&nbsp; ;set players position and cameraposition<br />&nbsp; lda oX+0<br />&nbsp; sta ladyposition+0<br />&nbsp; lda oX+1<br />&nbsp; sta ladyposition+1<br />&nbsp; lda CameraX+0<br />&nbsp; sta cameraposition+0<br />&nbsp; lda CameraX+1<br />&nbsp; sta cameraposition+1 <br />&nbsp; <br />&nbsp; <br />&nbsp; ;Is our players position is greater than half the screen<br />&nbsp; lda ladyposition+0 ;players position<br />&nbsp; bpl +question2<br />&nbsp; <br />&nbsp; &nbsp; lda ladyposition+0<br />&nbsp; &nbsp;sec<br />&nbsp; &nbsp; sbc #128 ;cameraposition = ladyposition - 128.<br />&nbsp; &nbsp; sta CameraX+0 <br />&nbsp; <br />&nbsp; &nbsp; lda ladyposition+1<br />&nbsp; &nbsp; sbc #$00<br />&nbsp; &nbsp; sta CameraX+1<br />&nbsp; <br /><br />+question2<br /><br />&nbsp; ;Is cameraposition &gt; levellength-256<br />&nbsp; lda cameraposition+1<br />&nbsp; cmp levellength_high<br />&nbsp; bcs +question3<br />&nbsp; <br />&nbsp; &nbsp; ;make cameraposition = levellength-256<br />&nbsp; &nbsp;clc<br />&nbsp; &nbsp;lda #$00<br />&nbsp; &nbsp;sta CameraX+0<br />&nbsp; &nbsp;lda levellength_high ;...is already set at levellength-256<br />&nbsp; &nbsp;sta CameraX+1<br />&nbsp; &nbsp; <br />+question3&nbsp; <br />&nbsp; <br />&nbsp; ;Is cameraposition &lt; 0,<br />&nbsp; lda CameraX+1<br />&nbsp; bpl +abovezero<br />&nbsp; &nbsp; &nbsp; <br />&nbsp; &nbsp;;cameraposition = 0<br />&nbsp; &nbsp;lda #$00<br />&nbsp; &nbsp; sta CameraX+1 ;cameraposition+1<br />&nbsp; &nbsp; sta CameraX+0 ;cameraposition+0<br />&nbsp; &nbsp; jmp +end<br />&nbsp; <br />+abovezero: <br /><br />&nbsp; &nbsp; ;move camera<br />&nbsp; <br />+end&nbsp; rts ;end of camera_aim<br /></div><br /><br />My code is above... how do I determine if cameraposition &lt; 0?  I noticed you branched if the carry was set right in the middle of the first question.  I'm trying to deal with each question individually.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Fri Jun 14, 2013 3:17 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: 8x16 sprite is really a 16x32 pixel image?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />If the camera position has fallen below 0, then the high byte will have become 0xFF.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>67</strong> of <strong>83</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>