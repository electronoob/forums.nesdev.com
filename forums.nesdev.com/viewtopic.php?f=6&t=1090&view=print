<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - NSF Support for PCM Samples</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">NSF Support for PCM Samples</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=6&amp;t=1090">http://forums.nesdev.com/viewtopic.php?f=6&amp;t=1090</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>4</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Fri Feb 10, 2006 1:00 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>NSF Support for PCM Samples</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I'd like to verify the details of the experimental PCM support <a href="http://nesdev.com/bbs/viewtopic.php?p=9220#9220" class="postlink">Quietust added to his NSF player</a> and used by the experimental rips of <a href="http://www.qmtpro.com/~nes/nsf/battletoads_pcm.zip" class="postlink">Battletoads</a> and <a href="http://www.lau-net.de/~nl2305/nsf/nsf_btdd.zip" class="postlink">Battletoads &amp; Double Dragon</a>. What follows is my best understanding of the changes and what seems to work in my NSF player.
<br />
<br />- The init routine can now run indefinitely (never return)
<br />
<br />- The play routine is now invoked at the playback rate, regardless of whether init routine has returned yet.
<br />
<br />- The NSF player must save the CPU registers (PC, A, X, Y, P) before invoking the play routine, and restore them after it returns.
<br />
<br />- The first call to the play routine should be delayed by four frames, to allow time for a normal init routine to return.
<br />
<br />Did I leave anything out? Are there any problems with this scheme?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Fri Feb 10, 2006 1:31 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: NSF Support for PCM Samples</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">blargg wrote:</div><div class="quotecontent">What follows is my best understanding of the changes and what seems to work in my NSF player.<br /><br />- The init routine can now run indefinitely (never return)<br /></div><br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">- The play routine is now invoked at the playback rate, regardless of whether init routine has returned yet.<br /><br />- The NSF player must save the CPU registers (PC, A, X, Y, P) before invoking the play routine, and restore them after it returns.</div><br />Which would correspond to a 'pha : txa : pha : tya : pha : jsr play_address : pla : tay : pla : tax : pla : rti' in the hypothetical hardware NSF player's NMI routine, right?<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">- The first call to the play routine should be delayed by four frames, to allow time for a normal init routine to return.</div>
<br />And to allow the DAC enough time to reach a stable level so that init codes that write to $4011 don't produce a click.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Quietust</b> [ Fri Feb 10, 2006 1:45 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Actually, my player only preserves the registers it modifies on its way to the "JSR play_address" - the PHA/TXA/PHA/TYA/PHA must be done within the NSF itself, ideally as a stub around the play routine - 
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">stub_play:<br />&nbsp; &nbsp;PHA<br />&nbsp; &nbsp;TXA<br />&nbsp; &nbsp;PHA<br />&nbsp; &nbsp;TYA<br />&nbsp; &nbsp;PHA<br />&nbsp; &nbsp;JSR real_play_address<br />&nbsp; &nbsp;PLA<br />&nbsp; &nbsp;TAY<br />&nbsp; &nbsp;PLA<br />&nbsp; &nbsp;TAX<br />&nbsp; &nbsp;PLA<br />&nbsp; &nbsp;RTS<br /><br />...<br />NSF_PLAY:<br />&nbsp; &nbsp;JSR nsf_play_address<br />&nbsp; &nbsp;RTI</div>
<br />
<br />In my NSF_PLAY routine, I had to preserve X (and, therefore, A) because I'm using IRQs rather than NMIs, and because my IRQs can have multiple meanings (init, play, or stop) which I must read from a register (as well as to acknowledge the IRQ). In addition, I had to execute a CLI before jumping off to the INIT routine (so the PLAY IRQ could make it through).
<br />
<br />The reason I chose 4 frames for the init code is simply arbitrary - I wanted to make sure I gave it plenty of time to initialize, and I decided that 1 frame might not have been sufficient. In most cases, 1 frame would probably be plenty.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Guest</b> [ Fri Feb 10, 2006 2:02 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Should an expansion byte be used to denote that the play routine should be called even if the init routine doesn't return, ensuring that no current rips are broken, or should an extra memory-mapped register be added to the spec(allowing for mixed behavior in different songs)?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Fri Feb 10, 2006 2:52 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Quietust wrote:</div><div class="quotecontent">Actually, my player only preserves the registers it modifies on its way to the "JSR play_address" - the PHA/TXA/PHA/TYA/PHA must be done within the NSF itself, ideally as a stub around the play routine - </div><br /><br />One of the Battletoads rips didn't work when I didn't save the registers around the play routine invocation. It'd be good to make clear whether an NSF player must save registers around it. The lazy part of me doesn't want to (even though it's just a couple of lines of code), but the consistent part wants to, since the play routine should be thought of something that is called from the game's IRQ handler, which would usually save and restore registers itself.<br /><br />So let's decide one way or the other, otherwise we'll have compatibility problems. Forcing the NSF player to save/restore registers around the play call makes it simplest for NSF authors, which outnumber NSF player authors.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Should an expansion byte be used to denote that the play routine should be called even if the init routine doesn't return, ensuring that no current rips are broken</div><br /><br />I or Quietust could scan Kevin Horton's archive with an emulator that notes any NSF init routines which take longer than four frames to return. It's unlikely any take this long, so these extensions should be backwards-compatible.<br /><br /><div class="quotetitle">Quietust wrote:</div><div class="quotecontent">I wanted to make sure I gave it plenty of time to initialize, and I decided that 1 frame might not have been sufficient. In most cases, 1 frame would probably be plenty.</div>
<br />
<br />When I first wrote my NSF player a while back, I found a few NSF init routines that took a bit longer than a frame to return.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Guest</b> [ Sat Feb 11, 2006 6:51 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Will you also scan the large number of  NSFs from commercial games that are not in Kevin Horton's archive, and also the hundreds of homebrewn NSFs, many of which are scattered across Japanese message boards?
<br />
<br />Calling the play routine before the init routine has returned will also cause sound distortion in experimental-ish NSFs that rely on tight CPU timing(like those raw PCM playback demos), although they could be written to use a play routine that never returns instead...

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Sat Feb 11, 2006 8:05 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />So do we try to find something backwards-compatible or add a second NSF playback environment that is enabled by a new flag? What advantages does backwards-compatibility have over adding a new flag, that outweigh the potential problems due to unexpected behavior of NSF files that work with the current spec? Admittedly, the current spec doesn't really say what happens if the init routine never returns, or the play routine takes more than one frame to return, so anything which does this is already outside well-defined behavior. From the NSF spec:
<br />
<br /><em><strong>Initalizing a tune</strong>: [...] Once the song # and optional PAL/NTSC standard are loaded, simply call the INIT address. Once init is done, it should perform an RTS.<br /><strong>Playing a tune</strong>: Once the tune has been initalized, it can now be played.  To do this, simply call the play address several times a second.</em>
<br />
<br />I suppose this does allow for an init routine that never returns, in which case play is never called. Following the spec carefully, this PCM hack could work by instead rewriting the <em>Battletoads</em> NSFs so that the play routine never return (which isn't covered in the NSF spec). In this case the first call of the play routine would run the PCM code, and subsequent calls would clock the music and return normally. This method would likely not break any current NSF files since it's unlikely that their <em>play</em> routine takes longer than a frame before returning (or if it does, it's already using this idea).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>NewRisingSun</b> [ Sat Feb 11, 2006 10:21 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The PCM playback definitely shouldn't be in the play routine.
<br />I advocate a third approach:
<br />
<br />Instead of using a watchdog timer that gets triggered if the init routine takes more than four frames, let the init routine signal to the player that it's never going to return by writing to a special memory address (i.e. 3FF5 or something like that). No existing NSF writes to that memory address, so for them, the player will behave as usual, that is, not calling play until init returns.
<br />NSFs that never return from init because of PCM playback will write to that memory address as soon as they're ready to have "play" called.
<br />
<br />I like this approach because it seems that this is already what some players are already doing; for example, the 3FF5 address is used by FCEUltra's NSF bios for the very purpose of signaling that Play should be called (my Battletoads &amp; Double Dragon PCM still doesn't work in FCE Ultra because it doesn't properly return from the Play routine).
<br />
<br />Another way would be to add a fourth code pointer to the header: in addition to load, init and play, there would be an address for an "idle" routine where the PCM playback code sits. 
<br />This method has the advantage that older players, who do not recognize the "idle" field, will still be able to play those files since the init routine still returns, minus the PCM drums since the idle routine is never called. Newer players would check this field and if it is != 0, call the routine after init, never expecting it to return.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Sat Feb 11, 2006 11:49 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"> let the init routine signal to the player that it's never going to return by writing to a special memory address (i.e. 3FF5 or something like that).</div><br /><br />How about writing $80 to $2000? :)<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">[...] in addition to load, init and play, there would be an address for an "idle" routine where the PCM playback code sits. This method has the advantage that older players, who do not recognize the "idle" field, will still be able to play those files [...]</div>
<br />
<br />I like this approach a lot, especially the way the <em>Battletoads</em> soundtracks would revert to how the PCM-less rips have always sounded. Too bad that would halve the number of unused bytes in the NSF header. This approach has the advantage of being workable on NES hardware (well, as workable as current NSFs are).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>NewRisingSun</b> [ Sat Feb 18, 2006 4:53 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Let's finish this up, shall we. In order to better allow for raw PCM playback while retaining compatibility with existing players, the NSF specification shall be updated as follows:
<br />
<br />Header bytes 0x7C-0x7D: (lo/hi) address of an "idle" routine. If zero, player behaves as usual, waiting for init/play to return before calling play again. If nonzero, player calls it after "init" has finished and doesn't expect it to return, calling "play" at the normal interval and properly returning to "idle" afterwards.
<br />
<br />Yea or Nay? <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Sat Feb 18, 2006 11:13 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Does the player save and restore A, X, Y, and P around the call to play from the idle routine? I think it should. Either way, it sounds good to me. I'd like to get the response of a few other people whom this affects (Quietust, Disch, perhaps the author of the original NSF spec).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>NewRisingSun</b> [ Fri Feb 24, 2006 2:58 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I see the response is overwhelming... <img src="./images/smilies/icon_rolleyes.gif" alt=":roll:" title="Rolling Eyes" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Fri Feb 24, 2006 3:53 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The real question has been answered: people apparently don't care much about PCM support in NSF music. If Quietust implements this proposed idle routine (with automatic register saving when the play routine interrupts), I'll add it to my NSF library, which means it'll go into a <a href="http://static.morbo.org/kode54/?v=" class="postlink">bunch</a> <a href="http://www.slack.net/~ant/game-music-box" class="postlink">of</a> <a href="http://bannister.org/software/ao.htm" class="postlink">players</a> <a href="http://audacious-media-player.org/Main_Page" class="postlink">on</a> <a href="http://mahen.free.fr/geronto/index-en.htm" class="postlink">the</a> <a href="http://www.nightmode.org/oldplay/" class="postlink">next</a> release.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Zepper</b> [ Fri Feb 24, 2006 5:28 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Yea. ^_^;;

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Quietust</b> [ Fri Feb 24, 2006 5:45 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />It'll take me a little while to implement it, since I'll have to make some significant changes to both my NSF player BIOS (code changes, as well as adding a pair of registers to read the 'idle' address from) and to my emulator (update the emu to load said 'idle' address and update the mapper interface to store it).
<br />
<br />Before I do so, however, I'd like to have the NSF spec officially updated.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>4</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>