<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Spawning and deactiviting enemies as you scroll?</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Spawning and deactiviting enemies as you scroll?</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=6985">http://forums.nesdev.com/viewtopic.php?f=2&amp;t=6985</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dwedit</b> [ Tue Sep 28, 2010 2:31 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Spawning and deactiviting enemies as you scroll?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />So now I'm wondering about what good ways there are to handle enemies as you scroll around.
<br />
<br />So you have your 4-way scrolling map.  You have enemies placed at various locations, in no particular order.
<br />
<br />What we need is a way to tell when an enemy is about to be scrolled onto the screen, so it can wake up.
<br />We also need a way to tell when an enemy has gotten far away enough from the screen and should deactivate.
<br />
<br />Then we need to decide whether it deactivates in the location it left the screen, or returns to its spawn location.  And if it returns to its spawn location, it should not reappear if the spawn location is on the screen.  (Some games spawn enemies in visible areas on the screen!  I think The Nerd mentioned Ninja Gaiden as one of them)
<br />
<br />One approach I can think of is to have a complete object table for every single enemy in the level, then do range checks as you iterate over each enemy.  This is probably not the best way to do it, as it compares every single object's position, and that's slow.
<br />
<br />Another approach is to add objects from a passive list into the active list as you approach them.  Then you still need to look at a range of objects from the passive list as you scroll.  Still a lot of checks though.  Maybe force the checks to occur only every 32 or 64 pixels or whatever.  But then you get slowdown if you scroll left and right repeatedly on a seam.
<br />Games which scroll in only one pair of directions have it easy, since they only need to look at one object to decide to spawn more.
<br />
<br />Another thing to think about is that a monster may have 'buddies'.  There could be three monsters behind the screen boundary waiting to attack the player.  If you used an algorithm where each object activates separately, you could slowly approach the edge, wait for the first enemy to attack you, move back, then kill it.  You could take out the monsters one at a time.  In that kind of situation, you'd want to activate them all at once, even if the buddies are farther away from the screen.  I think this also may apply for deactivating as well.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tomaitheous</b> [ Tue Sep 28, 2010 2:51 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Another thing to think about is that a monster may have 'buddies'. There could be three monsters behind the screen boundary waiting to attack the player. If you used an algorithm where each object activates separately, you could slowly approach the edge, wait for the first enemy to attack you, move back, then kill it. You could take out the monsters one at a time. In that kind of situation, you'd want to activate them all at once, even if the buddies are farther away from the screen. I think this also may apply for deactivating as well.</div>
<br />
<br /> Like an aggro radius system? I can't say I'm too fond of that system. Well, at least for old school still games.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Tue Sep 28, 2010 9:29 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />This is actually quite an interesting topic that I don't think has been discussed before. Has anybody checked how the commercial games do it?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Wed Sep 29, 2010 2:10 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Spawning and deactiviting enemies as you scroll?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I haven't implemented this yet, but what I plan on doing is having the list of objects/enemies sorted by horizontal coordinate in ROM. In RAM, two pointers indicate the leftmost and rightmost "active" objects (the space between them is somewhat wider than a screen, so that objects have some time between being loaded and scrolling into view). The scrolling engine is responsible for moving these pointers left and right as the camera moves.
<br />
<br />Whenever objects enter the active range, their vertical coordinates are checked and if they are also in range they are loaded. When scrolling vertically, all objects between the two pointers are checked, and if their Y coordinates are in range, they are loaded.
<br />
<br />I plan on doing the range checks every few scrolled pixels, like you mentioned. Maybe 16 or 32, so that range checks consist basically of checking if the coordinates of the objects belong in the new "stripe" that scrolled in, something that can quickly be done by comparing the highest bits of the coordinates to the index of the "stripe".
<br />
<br />Another important detail is that each object has a bit in RAM indicating if they are dead or alive. When an object is loaded, it sets its bit to the "dead" state, to prevent it from being loaded again in case its original position gets in range again.
<br />
<br />Some care must be taken when deactivating objects. You can only do it when they are off screen <strong>and</strong> their spawn point is out of the active range. This is something that objects have to check themselves. I chose to leave this responsibility to them because some of them can get away with simpler logic (the ones that don't move, for example), so there is no need to use the same complex logic for everyone. One way I though of implementing this is that objects keep an internal "can-deactivate" flag, and have them watch the indexes of the stripes that enter and leave the active range (these are "broadcast" by the scrolling engine), so that they can modify the flag as their spawn point enters and leaves the active range.
<br />
<br /><div class="quotetitle">Dwedit wrote:</div><div class="quotecontent">Another thing to think about is that a monster may have 'buddies'.</div>
<br />In this case, I suggest you create an object whose only purpose is to group other objects. They are dummy objects pointing to lists of actual objects that you load all at once when the dummy object gets in range.
<br />
<br />If we are talking objects that are always linked, you don't need that kind of sophistication. When you load any of the sister objects you just look around (a few entries before and after it) for the other one(s) and load them all at once.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Wed Sep 29, 2010 5:36 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">This is actually quite an interesting topic that I don't think has been discussed before. Has anybody checked how the commercial games do it?</div>
<br />Most just delete enemies when they go off screen and they keep re-spawning when you scroll back to their original position. Some games have flags for when you kill an enemy, but most don't. (note that I didn't disassembly anything, it's just speculation from what I observed)
<br />
<br />What I'd do if I were to do this is to handle on-screen or off-screen enemies exactly the same, but just not display off-screen enemies. Also, if this is too slow, I'd have the AI be simplified if the enemy is off-screen, but this might not be necessary, as what is really slow is usually drawing sprites (not the AI itself).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Wed Sep 29, 2010 6:27 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent"><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">This is actually quite an interesting topic that I don't think has been discussed before. Has anybody checked how the commercial games do it?</div><br />Most just delete enemies when they go off screen and they keep re-spawning when you scroll back to their original position. Some games have flags for when you kill an enemy, but most don't. (note that I didn't disassembly anything, it's just speculation from what I observed)</div>
<br />I more so meant the technical implementation.. how to, for example, most efficiently check when an enemy needs to be activated and so on.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Wed Sep 29, 2010 7:45 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">What I'd do if I were to do this is to handle on-screen or off-screen enemies exactly the same</div>
<br />You do realize that depending on the size of the level you could have, I don't know, say, up to 70 enemies? Definitely way too much to process (CPU bottleneck) and to maintain states of (RAM bottleneck). Your idea would only work if the levels were really small and had only 20 or so enemies.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>p1xl</b> [ Wed Sep 29, 2010 10:43 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I don't have a lot of NES dev experience, but on other platforms I often implement patterned baddies as an FSM for the patterns with a counter/timer for states that need tweening.
<br />
<br />What about something like:
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">byte 0<br />&nbsp; b0-6 pattern state &#40;init,chase,jump,explode,etc.&#41;<br />&nbsp; b7&nbsp; &nbsp;is the baddie active<br />byte 1 counter/timer<br />byte 2-3 X coor<br />byte 4-5 Y coor<br /></div>
<br />That would give you 42 baddies in 256 bytes; loaded when the level loads.
<br />When a baddie goes far enough off screen it would be deactivated, but it keeps it's state.  Each frame (or set of frames if you split up the loop) you'd scan over the 42 baddies. 
<br />
<br />If bit 7 is on then you update the baddie by jsr-ing to the update routine referenced by the pattern state (via jmp table?).  
<br />If it's off you check if the baddie should be activated.  If it needs to be activated, flip the bit then jsr to a routine that initializes the oam based upon pattern state.
<br />
<br />It might be possible to pack the bits in a little tighter too, like if your level was only 16x16 screens then you could save a byte on the coors.
<br />
<br />I don't know if this would be fast enough however.  I'm still learning the limits of the NES.
<br />What do you think?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Wed Sep 29, 2010 11:49 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Here's what I guess existing games do:
<br />
<br />Each map has an array of enemies. The entries are sorted by X coordinate to allow bidirectional traversal within a sliding window. When you spawn an enemy, first check that the enemy's index in the array doesn't belong to any active enemy; if so, fail. This check shouldn't take more than 12 cycles per element in the array.
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; ; input: A = index of critter in the map's enemy table<br />&nbsp; ldx #MAX_ACTIVE_CRITTERS-1<br />findCritterInTable:<br />&nbsp; cmp activeCritterIndex,x<br />&nbsp; beq alreadyExists<br />&nbsp; dex<br />&nbsp; bpl findCritterInTable<br />&nbsp; ; omitted: find a slot and spawn the critter</div>
<br />If an enemy falls out of a sliding window surrounding the camera, remove the enemy from the table so that it can respawn when the player returns to its spawn point.
<br />
<br />And if you want, keep a bitmap of which enemy indices have been destroyed, and check that before spawning. For 256 enemies, this takes 32 bytes.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Wed Sep 29, 2010 11:57 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">p1xl wrote:</div><div class="quotecontent">What do you think?</div>
<br />I think 6 bytes in not enough for an active object/enemy. Where will you store his type? Health/hit count? Animation frame? Fractional coordinate? Speed?
<br />
<br />In my engine, I have dedicated 28 bytes for each of the 24 active objects, and even with that amount of RAM I'm not sure how I'll handle certain objects. Like I said before, objects are loaded and unloaded as the camera moves, so they have to backup their state to a dedicated location of RAM if they want to remember it when they are loaded again.
<br />
<br />I honestly don't think that iterating over all the objects in the level every frame is practical at all, even if all you do is check how far from the camera they are. You'd have to subtract the camera's coordinates from the object's coordinates, compare the results against a threshold to separate the close objects from the distant ones, and then you still have to run the AI for the close ones. That looks like a lot of wasted CPU if you have 50+ enemies in the level.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Wed Sep 29, 2010 12:04 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">I honestly don't think that iterating over all the objects in the level every frame is practical at all, even if all you do is check how far from the camera they are.</div>
<br />You wouldn't have to if they're sorted by the primary scroll direction. Then you'd only have to iterate when your sliding window moves, and only over the areas that have been added to or removed from the sliding window.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Wed Sep 29, 2010 12:14 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">And if you want, keep a bitmap of which enemy indices have been destroyed, and check that before spawning. For 256 enemies, this takes 32 bytes.</div><br />If you do that, you don't have to do this:<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">When you spawn an enemy, first check that the enemy's index in the array doesn't belong to any active enemy; if so, fail. This check shouldn't take more than 12 cycles per element in the array.</div><br />I'd rather not spend 12 * (active objects) cycles every time an object is loaded, since changing the bitmap to pretend it was destroyed would be much faster.<br /><br />You could conceptually see the bitmap as load/don't load instead of dead/alive. The object having been destroyed is a reason to not load it, but so is the fact that it is already loaded.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">If an enemy falls out of a sliding window surrounding the camera, remove the enemy from the table so that it can respawn when the player returns to its spawn point.</div>
<br />Both the enemy and its spawn point must be outside of the window for it to be unloaded. If you check only its current position, his spawn point might still be inside the window and the enemy will appear to have vanished if you decide to chase it after it went off screen. If you check only the spawn point, the enemy might disappear while still on screen.
<br />
<br />Anyway, I said all of this in my first reply to this thread. Maybe I wasn't clear enough.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Wed Sep 29, 2010 12:18 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent"><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">I honestly don't think that iterating over all the objects in the level every frame is practical at all, even if all you do is check how far from the camera they are.</div><br />You wouldn't have to if they're sorted by the primary scroll direction. Then you'd only have to iterate when your sliding window moves, and only over the areas that have been added to or removed from the sliding window.</div>
<br />I know, that was my first suggestion. Did you read my first post? Are my English writing skills that bad?
<br />
<br />What you have quoted there is a reply to p1xl's suggestion, which involves no sliding window.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>p1xl</b> [ Wed Sep 29, 2010 1:16 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">I think 6 bytes in not enough for an active object/enemy. Where will you store his type? Health/hit count? Animation frame? Fractional coordinate? Speed?</div><br /><br />Type is stored in the state, as is animation frames. Fractional coors could be stored as fixed point in the x,y words.  Speed is built into the state as well.  You're pretty much substituting rom space for the extra ram by hard coding constants.  Hit count would probably need another byte or nybble.<br /><br /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">I honestly don't think that iterating over all the objects in the level every frame is practical at all, even if all you do is check how far from the camera they are. You'd have to subtract the camera's coordinates from the object's coordinates, compare the results against a threshold to separate the close objects from the distant ones, and then you still have to run the AI for the close ones. That looks like a lot of wasted CPU if you have 50+ enemies in the level.</div>
<br />
<br />Now this is where I don't have experience.  You're probably correct.  But (in my naivety) sometimes simplicity is a fair trade for extra CPU.  Good thoughts tho.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>cartlemmy</b> [ Wed Sep 29, 2010 1:54 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">p1xl wrote:</div><div class="quotecontent">But (in my naivety) sometimes simplicity is a fair trade for extra CPU.  G</div>
<br />
<br />I could be wrong (I have little to no experience programming the NES), but from what I've read you pretty much should never do anything that uses extra CPU on the NES if there is an alternative; The NES is extremely limited on CPU resources. Am I correct in saying that?

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>