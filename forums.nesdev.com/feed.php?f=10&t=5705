<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=10&amp;t=5705" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2009-11-07T05:18:26-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=10&amp;t=5705</id>
<entry>
<author><name><![CDATA[chmaster]]></name></author>
<updated>2009-11-07T05:18:26-07:00</updated>
<published>2009-11-07T05:18:26-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5705&amp;p=52232#p52232</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5705&amp;p=52232#p52232"/>
<title type="html"><![CDATA[Need coding help]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5705&amp;p=52232#p52232"><![CDATA[
Thank you Bregalad. I've got the idea. Now I'll try to figure out what is the easist and best for me. <img src="http://forums.nesdev.com/images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4092">chmaster</a> — Sat Nov 07, 2009 5:18 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2009-11-07T02:34:23-07:00</updated>
<published>2009-11-07T02:34:23-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5705&amp;p=52226#p52226</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5705&amp;p=52226#p52226"/>
<title type="html"><![CDATA[Need coding help]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5705&amp;p=52226#p52226"><![CDATA[
Well, a shift register shifs right or left (doesn't matter really), and when that is done, 1 bit is "out" of the register and 1 bit is "in".<br /><br />When doing it on a 6502 (8-bit register), the bit who is "out" goes to C, and the bit who is "in" is either the old value of C (ROL/ROR instructions) or always 0 (ASL/LSR instructions).<br /><br />By making the bit who is "in" a function of the current state of the register, using AND, OR and NOT operations (this includes XOR too) on bits who are inside the registers, it is possible to make it act as a pseudo-RNG, but it have to be seed with an initial value, and after a while the values will repeat. The longer it takes until they repeat, the better is your pseudo-RNG. Look for code example for what functions works the best for a long repeat sequence.<br /><br />In software, this will translate with you taking some value from the register, mess up with some AND, OR, EOR instructions until you get the "in" bit in your carry, and do ROR/ROL operations on your registers (you'll probably want more than 8-bit to get a decently long sequence).<br />I guess an example of it is found in the FDS bios, which you can find disassembled and commented using google.<br /><br />I can't tell you much more because I'm unfamiliar with that method. In my game I use the multiply &amp; add method, which works well too. The big advantage of the shift register method is that it is simpler to do in hardware when dealing with flip-flops and AND/OR/NOT gates. As long as you have a CPU, it doesn't matter if you use the add/substract, shift register, or if you're lazy fast counter method.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Sat Nov 07, 2009 2:34 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[chmaster]]></name></author>
<updated>2009-11-06T19:47:11-07:00</updated>
<published>2009-11-06T19:47:11-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5705&amp;p=52201#p52201</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5705&amp;p=52201#p52201"/>
<title type="html"><![CDATA[Need coding help]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5705&amp;p=52201#p52201"><![CDATA[
There seems quite a discussion here. I'm not scared away at all. On the contrary, I read every word posted and get many valuable ideas and thoughts I've never thought before. Really appreciate. <img src="http://forums.nesdev.com/images/smilies/icon_lol.gif" alt=":lol:" title="Laughing" /> <br /><br />Now I'm reconsidering my gaming system. Hope can make it more friendly to 6502. Also, I'm studying the 8-bit divide, LFSR, and PRNG. It's good to my coding skill. Not sure if I can understand them though. <img src="http://forums.nesdev.com/images/smilies/icon_eek.gif" alt=":shock:" title="Shocked" /> <br /><br />I've checked <!-- m --><a class="postlink" href="http://en.wikipedia.org/wiki/Linear_feedback_shift_register">http://en.wikipedia.org/wiki/Linear_fee ... t_register</a><!-- m -->, but still can't figure out how it works. It's full of terms I don't understand. Can anyone just briefly explain the idea of it with words not so abstract please? <img src="http://forums.nesdev.com/images/smilies/icon_redface.gif" alt=":oops:" title="Embarassed" /><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4092">chmaster</a> — Fri Nov 06, 2009 7:47 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2009-11-05T16:11:52-07:00</updated>
<published>2009-11-05T16:11:52-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5705&amp;p=52145#p52145</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5705&amp;p=52145#p52145"/>
<title type="html"><![CDATA[Need coding help]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5705&amp;p=52145#p52145"><![CDATA[
<div class="quotetitle">tepples wrote:</div><div class="quotecontent"><br />Someone experienced in developing AJAX apps to run on modern JavaScript engines on modern budget subnotebook computers (like the Eee PC I'm typing this into) might have trouble adjusting to the significantly slower floating-point arithmetic on an Apple II, Commodore 64, or NES.<br /></div><br />My point exactly.<br /><br /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent"><br />Oh I guess I got it. You says not to use powers of two (1/2, 1/4, 1/16, etc...), but like 3/16 is a fraction of a power of two, because 16 is a power of 2 right ?<br /></div><br />Yup. Sorry if I wasn't clear before.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />OK I'll stop being picky.<br /></div><br />Thank you. I just hope we didn't scare the OP away! O_O<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Thu Nov 05, 2009 4:11 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2009-11-05T15:49:26-07:00</updated>
<published>2009-11-05T15:49:26-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5705&amp;p=52143#p52143</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5705&amp;p=52143#p52143"/>
<title type="html"><![CDATA[Need coding help]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5705&amp;p=52143#p52143"><![CDATA[
Oh I guess I got it. You says not to use powers of two (1/2, 1/4, 1/16, etc...), but like 3/16 is a fraction of a power of two, because 16 is a power of 2 right ?<br /><br />But then you can aproximate anything pretty much with such "fractions of power of two", for example 13/128 is a good aproximation of 1/10. 51/512 is an even better aproximation, and so on. As you get a precision of n bits under the fraction bar, it becomes the same a a integer division with n bits of result.<br /><br />OK I'll stop being picky.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Thu Nov 05, 2009 3:49 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2009-11-05T15:43:52-07:00</updated>
<published>2009-11-05T15:43:52-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5705&amp;p=52142#p52142</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5705&amp;p=52142#p52142"/>
<title type="html"><![CDATA[Need coding help]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5705&amp;p=52142#p52142"><![CDATA[
<div class="quotetitle">tokumaru wrote:</div><div class="quotecontent"><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">the 6502 isn't limited in calculations or algorithms, it is only limited in speed.<br /></div><br />That's a lame thing to say about the 6502 in particular, because this is true for every freaking processor ever created. All of them can do any task, some at the expense of more time and space. Don't you agree?</div><br />Yes, but some CPUs are more limited than others. Someone experienced in developing AJAX apps to run on modern JavaScript engines on modern budget subnotebook computers (like the Eee PC I'm typing this into) might have trouble adjusting to the significantly slower floating-point arithmetic on an Apple II, Commodore 64, or NES.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Thu Nov 05, 2009 3:43 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2009-11-05T15:31:38-07:00</updated>
<published>2009-11-05T15:31:38-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5705&amp;p=52141#p52141</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5705&amp;p=52141#p52141"/>
<title type="html"><![CDATA[Need coding help]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5705&amp;p=52141#p52141"><![CDATA[
<div class="quotetitle">Bregalad wrote:</div><div class="quotecontent"><br />Well I was just pointing out that you said, probably by error, if you don't make them power of two make them power of two which sounds like a paradox to me.<br /></div><br />I read it again and there was no error it was just badly written and difficult to read. I said that if he can't turn his fractions into <strong>powers of two</strong>, then he should turn the fractions into <strong>fractions of powers of two</strong>. As in: if the fractions themselves are not powers of two, they could at least be fractions of numbers that are, which is easier than handling them as fractions of 10. Got it?<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Are you just picking on me today for fun?<br /></div><br />Yes :p</div><br />Thought so.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />the 6502 isn't limited in calculations or algorithms, it is only limited in speed.<br /></div><br />That's a lame thing to say about the 6502 in particular, because this is true for every freaking processor ever created. All of them can do any task, some at the expense of more time and space. Don't you agree?<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />I've read too much times (not only this particular one) that the 6502 wasn't able to mulitply or divide, which is wrong, it's just that he doesn't have dedicated instructions.<br /></div><br />Well, we have to differentiate the processors somehow. If all of them can do everything there isn't much left to talk about, right? Anyway, saying "it doesn't have dedicated instructions" is exactly the same as saying "it lacks multiplication and division", you're just being picky for the heck of it.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Computing damage isn't always "simple". If you have a complex RPG, a complex damage forumula can be the key to make the game balanced and enjoyable.<br /></div><br />I won't say anything else about this because RPG's are really not my thing, so I'll just leave this to you guys.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Thu Nov 05, 2009 3:31 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2009-11-05T14:55:42-07:00</updated>
<published>2009-11-05T14:55:42-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5705&amp;p=52138#p52138</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5705&amp;p=52138#p52138"/>
<title type="html"><![CDATA[Need coding help]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5705&amp;p=52138#p52138"><![CDATA[
<div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Instead of using 1/10, 2/10 or whatever, use 1/16, 2/16, etc. This will give you more possibilities than using only powers of two but still doesn't need a division in the end.<br /></div><br />Well I was just pointing out that you said, probably by error, if you don't make them power of two make them power of two which sounds like a paradox to me. Not a big deal tough, mistake is human.<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Are you just picking on me today for fun?<br /></div><br />Yes :p<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />If a function has to be coded by a person it isn't built-in the processor. By your logic, I can say that the 6502 doesn't lack Super Mario Brothers, I just have to code it myself. WTF, how much sense does that make? The processor doesn't have MUL/DIV instructions as much as it doesn't have an SMB instruction.<br /></div><br />Well, in short the 6502 isn't limited in calculations or algorithms, it is only limited in speed. I've read too much times (not only this particular one) that the 6502 wasn't able to mulitply or divide, which is wrong, it's just that he doesn't have dedicated instructions. Some RISC processors have much less dedicated instructions for stuff than the 6502 does, and yet they aren't any less powerful, on the other side it makes it uses less transitors so it can have a higher clock.<br /><br />PS : Computing damage isn't always "simple". If you have a complex RPG, a complex damage forumula can be the key to make the game balanced and enjoyable. Too many RPGs, especially in the early days, have been ruined by the lack of balance. On the other side I guess all Fire Emblem games, even modern ones, always used a simple linear formula (attack - defense) for damage, and they managed to make it work well.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Thu Nov 05, 2009 2:55 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2009-11-05T09:46:31-07:00</updated>
<published>2009-11-05T09:46:31-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5705&amp;p=52119#p52119</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5705&amp;p=52119#p52119"/>
<title type="html"><![CDATA[Need coding help]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5705&amp;p=52119#p52119"><![CDATA[
<div class="quotetitle">Bregalad wrote:</div><div class="quotecontent"><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"> If for some reason you don't want to make the fractions powers of two, at least make them all fractions of a power of 2<br /></div><br />Huh, was this supposed to make any sense ?</div><br />Instead of using 1/10, 2/10 or whatever, use 1/16, 2/16, etc. This will give you more possibilities than using only powers of two but still doesn't need a division in the end.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />No the NES don't lack multiplication and division, you just have to code them all by yourself.<br /></div><br />Are you just picking on me today for fun? If a function has to be coded by a person it isn't built-in the processor. By your logic, I can say that the 6502 doesn't lack Super Mario Brothers, I just have to code it myself. WTF, how much sense does that make? The processor doesn't have MUL/DIV instructions as much as it doesn't have an SMB instruction.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />And again it's not easier to avoid multiplication or division, doing them is NOT HARD AT ALL.<br /></div><br />Certainly not hard for you or for me, but for someone that's used to working with JavaScript it might be. And even if it isn't, it's slow enough to be used for something as simple as calculating damage.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Thu Nov 05, 2009 9:46 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2009-11-05T01:37:08-07:00</updated>
<published>2009-11-05T01:37:08-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5705&amp;p=52100#p52100</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5705&amp;p=52100#p52100"/>
<title type="html"><![CDATA[Need coding help]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5705&amp;p=52100#p52100"><![CDATA[
<div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />If for some reason you don't want to make the fractions powers of two, at least make them all fractions of a power of 2<br /></div><br />Huh, was this supposed to make any sense ?<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Although the 6502 lacks multiplication and division, multiplications are easier to code.<br /></div><br />No the NES don't lack multiplication and division, you just have to code them all by yourself. And again it's not easier to avoid multiplication or division, doing them is NOT HARD AT ALL.<br /><br />Just take a sheet of paper, do the division manually, and then code an algorithm that does the same on a computer... the fact there is only '0' and '1' to deal with makes it much simpler than doing it with all digits '0' to '9'.<br /><br />You'd want to use power of 2 if you care about speed or size of the code, but else I don't see an issue. Since you typically compute damage once in a while, and don't do it like 20 times per frame, I don't see any need for more speed in the calculations.<br /><br />As for random number generator, as far I know there is 3 techniques arround :<br />- Use a value captured from a counter that increments much faster than the rate you capture it (for example it increments every frame but you only read it ocasionally). Not applicable if you need random numbers at high rate<br /><br />- The shift register with feedback technique, which tepples described and which is used for the noise channel. This will give you a predictable random sequence with a fixed lenght before it repeats.<br /><br />- The multiply, add and tuncate to lower n bits technique. Different multipliers and adders gives you a different amount of random numbers before they repeat, the larger the better.<br /><br />These techniques will typically give you a random number between 0 and 255. It's not too hard to make it act like a random number of another range using AND operations, or divisions.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Thu Nov 05, 2009 1:37 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2009-11-04T19:21:38-07:00</updated>
<published>2009-11-04T19:21:38-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5705&amp;p=52089#p52089</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5705&amp;p=52089#p52089"/>
<title type="html"><![CDATA[Need coding help]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5705&amp;p=52089#p52089"><![CDATA[
If you want to use a ready-made pseudorandom number generator based on a linear feedback shift register, there's one in <a href="http://lj65.org/" class="postlink">LJ65</a> that I'll let you use. But be advised that LFSRs prefer ranges that are a power of two in size: coin flip, d4, d8, d16, etc. There are hacky ways of working around this, involving subtle manipulation of probabilities that a casual player will not notice.<br /><br />On one of the Tetris fan forums there was a discussion about the PRNGs in classic Tetris games. Ideally, a pre-2001 Tetris game would roll a d7 to determine which tetromino to send out next. Someone noticed that in Tetris for Game Boy, immediate repeats happen less often than they would with a d7. I suggested that it might use a d32: 0-4 go to next piece, 5-9 go to the piece after that, ..., 25-29 go 6 pieces ahead, 30-31 use the same piece.<br /><br />Early versions of LJ65 rolled a d8 and mapped 0-6 to I,J,L,O,S,T,Z. It kept a counter of what piece to send out when it rolled a 7 and incremented that every time; the comments called it "possession arrow" logic, after the rule in NCAA basketball that corresponds to jump balls in NBA basketball.<br /><br />Sometime in the 0.3x series, I changed LJ65 to store the seven pieces sorted by how recent they are, and then roll a d4 to choose one of the four least recent.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Wed Nov 04, 2009 7:21 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2009-11-04T15:32:44-07:00</updated>
<published>2009-11-04T15:32:44-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5705&amp;p=52072#p52072</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5705&amp;p=52072#p52072"/>
<title type="html"><![CDATA[Need coding help]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5705&amp;p=52072#p52072"><![CDATA[
<div class="quotetitle">Dwedit wrote:</div><div class="quotecontent"><br />If you use fractions of powers of 2 close to the numbers (1/2, 1/4, 1/8, 1/16, etc), you can do it much easier.<br /></div><br />This is why it's better that we know the whole picture. What you want to do is something common in games, but the way you wanted to do it at first is not very friendly to 8-bit processors.<br /><br />I'd do what Dwedit said and work with the powers of two. If for some reason you don't want to make the fractions powers of two, at least make them all fractions of a power of 2 (such as 16 or 256), instead of 10, so that the final division that Bregalad suggested can be replaced with shifts. Although the 6502 lacks multiplication and division, multiplications are easier to code.<br /><br />Regerding random numbers, take a look at this: <a href="http://en.wikipedia.org/wiki/Linear_feedback_shift_register" class="postlink">http://en.wikipedia.org/wiki/Linear_feedback_shift_register</a><br /><br />The NES doesn't have a built-in way of generating random numbers, or any register/location that is random enough to serve as the source of one, so you have to code your own <strong>pseudorandom number generator (PRNG)</strong>. Luckly, this has been done a lot before and you gan probably get good results by searching for "6502 PRNG" on google.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Wed Nov 04, 2009 3:32 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Dwedit]]></name></author>
<updated>2009-11-04T11:54:46-07:00</updated>
<published>2009-11-04T11:54:46-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5705&amp;p=52060#p52060</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5705&amp;p=52060#p52060"/>
<title type="html"><![CDATA[Need coding help]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5705&amp;p=52060#p52060"><![CDATA[
If you use fractions of powers of 2 close to the numbers (1/2, 1/4, 1/8, 1/16, etc), you can do it much easier.<br /><br />For instance:<br />damage = (STR*0.5) + (DEX*0.25) + (CON*0.125) + (A random from 0~5) <br />would be much easier to calculate since you can use right shifts instead of division.  But if you don't want DEX / 4 to be truncated, you need to use fixed point math.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=53">Dwedit</a> — Wed Nov 04, 2009 11:54 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Rid]]></name></author>
<updated>2009-11-04T10:31:18-07:00</updated>
<published>2009-11-04T10:31:18-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5705&amp;p=52052#p52052</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5705&amp;p=52052#p52052"/>
<title type="html"><![CDATA[Need coding help]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5705&amp;p=52052#p52052"><![CDATA[
Here it is : <a href="http://wiki.nesdev.com/w/index.php/8-bit_Divide" class="postlink">8-bit Divide</a><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3907">Rid</a> — Wed Nov 04, 2009 10:31 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[chmaster]]></name></author>
<updated>2009-11-04T10:04:01-07:00</updated>
<published>2009-11-04T10:04:01-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5705&amp;p=52049#p52049</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5705&amp;p=52049#p52049"/>
<title type="html"><![CDATA[Need coding help]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5705&amp;p=52049#p52049"><![CDATA[
First, I want to thank everyone who is so kind to reply. <img src="http://forums.nesdev.com/images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /> <br />tokumaru and Bregalad's suggestions are very nice. Now I'm thinking.<br /><br />Yes, I should tell what I'm trying to do. That'll be better.<br /><br />It's just the attacking damage formula.<br />For example:<br /><br />1. damage = (STR*0.5) + (DEX*0.2) + (CON*0.1) + (A random from 0~5)<br />2. If attacker = warrior, and defender = elf, then damage*1.3<br /><br />I try to keep the number as small as possible because as Anders_A said, it's only 8bit. I think smaller number can be handled more easily. But if there's another way to do it, I'll take it, too.<br /><br />These are the basic ideas. It doesn't have to be exactly the same. Now I'm still working on my game plan. When I come up with something, I try to think if I can make it with 6502. If not, I change my plan.<br /><br />And how to divide by 10 as Bregalad said?<br />Where is the example on the wiki? Can give me the url please? Thank you.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4092">chmaster</a> — Wed Nov 04, 2009 10:04 am</p><hr />
]]></content>
</entry>
</feed>