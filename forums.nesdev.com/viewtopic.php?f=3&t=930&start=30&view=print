<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - NTSC NES Composite Video Emulator</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">NTSC NES Composite Video Emulator</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=3&amp;t=930">http://forums.nesdev.com/viewtopic.php?f=3&amp;t=930</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>3</strong> of <strong>5</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Tue Jan 24, 2006 11:07 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Yeah, it has room for improvement. Apparently Nestopia 1.25 has a bug that causes the dot crawl pattern to be wrong (alternate between two patterns every other line, rather than cycle between <em>three</em>). It also crops to 640 for other reasons, cutting off active NES pixels.
<br />
<br />As for sharpness and specifics to the algorithm, I want to improve that and am slowly reading up on NTSC video modulation and have a desire to obtain an oscilloscope so I can find the exact NES composite video encoding scheme. Regarding how visible the dot crawl is, this is partly due to the quality of your display's chroma filter (comb filter). Currently this emulates a TV with no filter, resulting in very visible artifacts.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Zepper</b> [ Wed Jan 25, 2006 6:38 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Yes, I noticed that. Just play Rockman and pay attention to its score - colors are messed up.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>NewRisingSun</b> [ Wed Jan 25, 2006 11:59 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">alternate between two patterns every other line</div>It should cycle between three patterns from line to line, and two patterns between every other field.
<br />
<br />As for sharpness, make sure you actually use an 8/3 stretching factor, nothing else (which means that you will at least need a work resolution of 256*8/3 = 683 pixels, without overscan). Also, the source I sent you had too much chroma, causing too many cross-luma artifacts. Better use a chroma amplitude of 0.4 and a luma amplitude of (level*0.375), until you've done your scope effort. The 0.0/1.0 clipping code also adds incorrect distortions, better don't use clipping to get a clean picture.
<br />
<br />Lastly, only use full NTSC emulation if you're perfectly synced to your monitor's refresh rate and you can run at full speed. This is necessary because only then will the two fields be visible an equal amount of time and, as a result, most artifacts will cancel each other out. If you can't do that, don't use NTSC emulation.
<br />
<br />Combining two fields into one interlaced frame looks like crap as well, so don't do that either.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Jagasian</b> [ Wed Jan 25, 2006 12:01 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">blargg wrote:</div><div class="quotecontent">As for sharpness and specifics to the algorithm, I want to improve that and am slowly reading up on NTSC video modulation and have a desire to obtain an oscilloscope so I can find the exact NES composite video encoding scheme. Regarding how visible the dot crawl is, this is partly due to the quality of your display's chroma filter (comb filter). Currently this emulates a TV with no filter, resulting in very visible artifacts.</div>
<br />
<br />blargg, you are doing good work.  I bet most people would have never thought that NES emulation would eventually go for accurate emulation of analog components of the NES.  An oscilloscope would be a methodical, scientific approach.  Can you get a good scope on the cheap?  Would it be possible to eventually make the algorithm more parametric, so that it can be tweaked via a GUI to range between RF-quality NTSC, mid-range composite, and high-end composite?  I grew up using my toaster NES via RF and  Japanese Famicom users did the same, but I am sure many others are used to a high-end composite look of the toaster or AV Famicom.
<br />
<br />So what is the correct term for accurate emulation of analog systems?  People say "cycle accurate" to imply that an emulator is very accurate with regards to the digital part of a game system.  Should we call something like this "wave accurate"  <img src="./images/smilies/icon_wink.gif" alt=":wink:" title="Wink" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Great Hierophant</b> [ Wed Jan 25, 2006 10:13 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Lastly, only use full NTSC emulation if you're perfectly synced to your monitor's refresh rate and you can run at full speed. This is necessary because only then will the two fields be visible an equal amount of time and, as a result, most artifacts will cancel each other out. If you can't do that, don't use NTSC emulation. </div>
<br />
<br />I assume you mean that your montior must do 60Hz and your system must be able to render 60 frames per second, correct?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Thu Jan 26, 2006 12:56 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />As NewRisingSun said, your monitor needs to be refreshing at 60 or 120 Hz, otherwise you'll get aliasing in the time domain where the even frames get more time, then the odd frames, at a rate based on the refresh rate difference.
<br />
<br />One solution I've considered is having the emulator mix even and odd frames together (not interlacing; no vertical resolution doubling), eliminating the need for a matching refresh rate. This would lessen artifacts when scrolling, through. Another solution is to write a nice general framerate conversion blitter similar to what they use to convert the frame rate of movies. I've seen some where if you pause the screen, some output frames are a mix of two input frames, one for the upper part of the screen, another for the lower part, with a very smooth mix between them. I was impressed by this since it looked visually seamless. This would benefit all emulator video modes.
<br />
<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Can you get a good scope on the cheap?</div><br /><br />Right now I'm hoping someone will loan me one. I doubt it would need to be very sophisticated, since I could use the joypad strobe as a software-controller trigger, allowing me to easily zero in on any part of the video waveform by using cycle-timed 6502 code.<br /><br />I imagine multiple TV emulators could be provided, matching RF, composite, and composite with a 3-line notch filter.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">So what is the correct term for accurate emulation of analog systems? People say "cycle accurate" to imply that an emulator is very accurate with regards to the digital part of a game system. Should we call something like this "wave accurate"</div>
<br />
<br />Heh. Signal accurate, analog accurate, waveform accurate?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Fri Feb 17, 2006 6:43 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Yesterday I finally figured out how to rewrite the NTSC code to use all integer operations in the emulation loop, making it about 3 times faster than before. A 15-bit color output version on my 400 MHz Mac ran at 160 frames per second! Here is the updated C version with an SDL demo:
<br />
<br /><a href="http://www.io.com/~greens/temp/ntsc_emu6.zip" class="postlink">ntsc_emu6.zip</a>
<br />
<br />- Included 88% horizontal shrinking to allow image to be displayed directly on screen (assuming it's doubled vertically)
<br />
<br />- Added optional even/odd field merging to eliminate flicker if monitor refresh rate isn't 60 Hz
<br />
<br />- Simplified interface to always generate 32-bit RGB color
<br />
<br />- Added adjustable sharpness control
<br />
<br />The new algorithm basically uses NewRisingRun's original slow-but-accurate algorithm to generate every possible version of a single NES pixel with different colors, alignments, and PPU phases, then captures the RGB result as a convolution kernel for that combination. Then when rendering pixels, it just uses the appropriate kernel from the table. Each kernel is 14 pixels wide, since a single NES pixel has an effect many pixels away.
<br />
<br />This means that the speed of the initialization doesn't matter much, so it gives greater flexibility in setting up the pixel characteristics, and can be applied to other systems and video standards without having write any new speed-critical code. So for example the horizontal shrinking and even/odd field merging don't affect speed at all. This should allow further adjustments to NES graphics, like making a halfway NTSC emulator that duplicates some of the effects of full NTSC but with less artifacts.
<br />
<br />Here's a Zelda dungeon shot with sharpness at 0.4 and field merging enabled:
<br />
<br /><img src="http://www.io.com/~greens/temp/zelda_mixed_fields.png" alt="Image" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>hap</b> [ Fri Feb 17, 2006 6:52 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Your machine being that 400mhz Mac ?
<br />Anyway, cool, I'll give it a try later.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Zepper</b> [ Fri Feb 17, 2006 6:57 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Things are becoming interesting... <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />
<br />By the way, as far as I know... the TV *does* anti-aliasing. Just pay attention to any fonts displayed.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>NewRisingSun</b> [ Fri Feb 17, 2006 7:11 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Quick comments:
<br />
<br />1. I'm a little tired of emulators ignoring the overscan. It's necessary for correct aspect ratio, so I suggest hard-coding it into the algorithm, instead allowing it to be reduced to 256.
<br />
<br />2. You asked how I'm going to account for the emphasis bits when directly creating the filtered signal which is what I do, when the original waveform is not a 50% square wave. Basically, you consider the emphasis' attenuation as another YIQ waveform which is subtracted from the normal chroma YIQ waveform. Since the attenuation is dependent on the normal signal itself (signal*something + somethingElse), the emphasis waveform's amplitude will be a function of the normal signal's amplitude and offset. 
<br />
<br />3. The "rgb" parameter for the ntsc_emu_init has NOTHING to do with the "phosphor" being used. It's the chroma decoder's matrix used for converting YIQ into RGB, which is not a function of the phosphor being used (since you're working with gamma-corrected signals, and to adjust for different phosphors, you would need to work with linear signals).
<br />Please rename it from "rgb" to just "decoderMatrix", if you plan on continuing to use it. I suggest against it, as I've found that especially 80s TV sets decode in such a non-standard way that can't be accurately described with just a different matrix. More on that only if you're interested.
<br />
<br />Phosphor chromaticities are a completely different thing. Adjusting from one phosphor to another requires color management. To do that, you first convert your "normal" (gamma-corrected) RGB triplet to linear RGB, then from linear RGB to CIE XYZ using the "source phosphor"'s chromaticities, and from CIE XYZ to a second linear RGB triplet using the "target phosphor"'s chromaticities, and then that linear RGB triplet back to gamma-corrected RGB. For example, if you want to make it look like on a 1954's RCA CT-100, you'd use the 1953 NTSC chromaticities as the "source phosphor", and your particular monitor's chromaticities (usually sRGB) as the "target phosphor". I already have written code for that purpose if you are interested in that.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Zepper</b> [ Fri Feb 17, 2006 7:54 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Umm... You two should chat a bit before a release... <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Fri Feb 17, 2006 8:18 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">The "rgb" parameter for the ntsc_emu_init has NOTHING to do with the "phosphor" being used. It's the chroma decoder's matrix used for converting YIQ into RGB.</div><br /><br />Sorry, noted. I really should just remove it; if someone wants to use a different decoder (one more complex like you mention), they can modify the source code.<br /><br />So the RGB matrix simply translates between coordinate systems, whereas the characteristics of a given phosphor color is a graph of its intensity across the spectrum, the handling of which is non-trivial.<br /><br />I'll see what I can do about making it harder to screw up overscan. Now that it has built-in 7/8 horizontal rescaling, if you specify 640 output pixels it'll give you 637 output pixels (multiple of 7) and use 273 NES pixels, enough for 8 overscan pixels on each side (less than the actual NES, unfortunately).<br /><br />Now that calculation is effectively decoupled from rendering, we should be able to freely increase the sophistication of the NTSC decoder used to initialize the tables. I might work on further generalizing this framework and making it easy for you to plug in your own code for the table initialization so I don't have to remain a bottleneck for this stuff. Let me know if there's anything stopping you from taking my code, fixing it, and posting that (or perhaps posting your own code with the desired features and letting me duplicate them in my optimized version).<br /><br /><div class="quotetitle">Fx3 wrote:</div><div class="quotecontent">Umm... You two should chat a bit before a release... </div>
<br />
<br />The code I'm posting here isn't a release of a polished package, just the progress I'm making in case anyone wants to take part in the process. If you want something reliable and free of serious problems, wait until something gets posted with a version number like 0.1.
<br />
<br />EDIT: Updated Zelda dungeon screenshot to be what you'd get on a 640x480 emulator (637x480 with around 8 source NES overscan pixels on each edge set to the current background color).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>NewRisingSun</b> [ Sat Feb 18, 2006 4:45 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">blargg wrote:</div><div class="quotecontent">I might work on further generalizing this framework and making it easy for you to plug in your own code for the table initialization so I don't have to remain a bottleneck for this stuff. Let me know if there's anything stopping you from taking my code, fixing it, and posting that</div>I'm not sure I understand the code correctly. You're storing the RGB output for every possible pixel color and alignment. Let's say I want this for the CGA's 640x200x2 mode. In this mode, there's four monochrome pixels per color clock, so depending which pixel columns are illuminated, you'll get 16 different colors (at a color resolution of 160x200). For a solid color, two or three color clocks need to me illuminated the same way, otherwise the original monochrome columns remain visible, which is also why 320x200 text is still readable. Since the CGA's line rate is an integer divisor of the subcarrier frequency, the color burst reference stays the same from line to line.<br />How would this play with your code?<br /><br />Also, am I correct that if you want the correct NES aspect ratio, therefore going from 282 to 752 to 640, thus having a factor of 40/47 instaed of 7/8, each kernel would have to be 80 pixels wide?<br /><br /><div class="quotetitle">blargg wrote:</div><div class="quotecontent"> I really should just remove it; if someone wants to use a different decoder (one more complex like you mention), they can modify the source code.</div>Consider the following as an example, using the normal decoder matrix (0.956...) at a hue=0 rather than -15:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">if &#40;&#40;I &gt;= 0&#41; &amp;&amp; &#40;Q &lt; 0&#41;&#41; &#123;<br />&nbsp; factor = &#40;I * -Q&#41; / &#40;I*I + Q*Q&#41;;<br />&nbsp; I = I * &#40;1.0 + factor&#41;;<br />&nbsp; Q = Q * &#40;1.0 - factor&#41;;<br />&#125;<br />if &#40;&#40;Q &gt; 0&#41; &amp;&amp; &#40;I &lt;= 0&#41;&#41; &#123;<br />&nbsp; factor = &#40;-I * Q&#41; / &#40;I*I + Q*Q&#41;;<br />&nbsp; I = I * &#40;1.0 + factor&#41;;<br />&nbsp; Q = Q * &#40;1.0 - factor&#41;;<br />&#125;</div><br />Do this <em>after</em> adjusting for user hue (should be 0 anyway) and color burst, otherwise you'll end up with different colors from line to line.<br /><div class="quotetitle">blargg wrote:</div><div class="quotecontent">So the RGB matrix simply translates between coordinate systems, whereas the characteristics of a given phosphor color is a graph of its intensity across the spectrum, the handling of which is non-trivial.</div>Correct. Well, not as non-trivial as what we're already doing here. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sat Feb 18, 2006 7:29 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />You probably won't need to emulate phosphors in software for the first release. A good monitor can already emulate phosphors at different color temperatures. All I'm looking for is alt-tabbing between my TV-in card and the emulator and getting a comparable image.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>NewRisingSun</b> [ Sat Feb 18, 2006 8:51 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Looking closer at that screenshot, I see the monochrome signal shimmering through even in solid-colored areas. That shouldn't happen; check your filter please.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>3</strong> of <strong>5</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>