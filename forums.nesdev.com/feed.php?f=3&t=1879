<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=3&amp;t=1879" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2006-08-12T11:25:31-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=3&amp;t=1879</id>
<entry>
<author><name><![CDATA[Quietust]]></name></author>
<updated>2006-08-12T11:25:31-07:00</updated>
<published>2006-08-12T11:25:31-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1879&amp;p=16191#p16191</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1879&amp;p=16191#p16191"/>
<title type="html"><![CDATA[PPU questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1879&amp;p=16191#p16191"><![CDATA[
<div class="quotetitle">Disch wrote:</div><div class="quotecontent"><br />P3 1GHz, 512MB RAM.  It wasn't top of the line when I bought it (probably around 1999?  Can't remember), but it was pretty decent.<br /><br />Nowadays, yeah I suppose it's a relic.  I'd upgrade if I could, but you need money for that kind of thing.  ;P<br /></div><br /><br />Same system I use, except mine's got 768MB RAM.<br /><br />Yes, Nintendulator doesn't even run full speed <em>on my own system</em>.<br />This is one of the reasons why I want to upgrade. <img src="http://forums.nesdev.com/images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=7">Quietust</a> — Sat Aug 12, 2006 11:25 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Disch]]></name></author>
<updated>2006-08-12T07:07:11-07:00</updated>
<published>2006-08-12T07:07:11-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1879&amp;p=16186#p16186</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1879&amp;p=16186#p16186"/>
<title type="html"><![CDATA[PPU questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1879&amp;p=16186#p16186"><![CDATA[
P3 1GHz, 512MB RAM.  It wasn't top of the line when I bought it (probably around 1999?  Can't remember), but it was pretty decent.<br /><br />Nowadays, yeah I suppose it's a relic.  I'd upgrade if I could, but you need money for that kind of thing.  ;P<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=33">Disch</a> — Sat Aug 12, 2006 7:07 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[hap]]></name></author>
<updated>2006-08-12T04:52:38-07:00</updated>
<published>2006-08-12T04:52:38-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1879&amp;p=16181#p16181</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1879&amp;p=16181#p16181"/>
<title type="html"><![CDATA[PPU questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1879&amp;p=16181#p16181"><![CDATA[
<div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Granted my computer is several years old and it's not all that hot<br /></div>Mine's several years old too (2002 technology), and runs Nintendulator just fine, yours must be antique then <img src="http://forums.nesdev.com/images/smilies/icon_wink.gif" alt=";)" title="Wink" /> .. but seriously, I think it's actually an advantage being a developer and having a slower computer, it gives you the will/need to prioritize optimalisation.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=115">hap</a> — Sat Aug 12, 2006 4:52 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2006-08-11T19:16:07-07:00</updated>
<published>2006-08-11T19:16:07-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1879&amp;p=16172#p16172</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1879&amp;p=16172#p16172"/>
<title type="html"><![CDATA[PPU questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1879&amp;p=16172#p16172"><![CDATA[
<div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />I can say that in my emu, when I catch the PPU up between every CPU instruction, the hit in speed is very noticable.<br /></div><br /><br />A design meant for catch-up won't be optimized for having the various subsystem emulator functions called every cycle, so it will naturally give much poorer performance than one originally intended for continuous operation (like Nintendulator). Thinking about this more, both designs require extra attention to different key areas: catch-up needs reliable prediction and precise "run until" functionality, and continuous needs heavy optimization for the code paths that run every cycle.<br /><br />And now I can't remember what this thread was originally about. <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" /><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Fri Aug 11, 2006 7:16 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Disch]]></name></author>
<updated>2006-08-11T17:49:01-07:00</updated>
<published>2006-08-11T17:49:01-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1879&amp;p=16171#p16171</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1879&amp;p=16171#p16171"/>
<title type="html"><![CDATA[PPU questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1879&amp;p=16171#p16171"><![CDATA[
<div class="quotetitle">Quietust wrote:</div><div class="quotecontent"><br />That's funny, since that's exactly how Nintendulator does it. And it isn't really <em>that</em> slow - any Pentium 4 system can run it fine at full speed with zero frameskip with at least 25% CPU to spare.<br /></div><br /><br />Eehhh..<br /><br />I would call Nintendulator slow.  Not that I'm trying to knock it or anything, but it's the only NES emu I can't get a steady framerate on (even with 1x scaling and sound disabled), and I can run most others ablazing with graphics filters, full sound, and speedy fastforwarding capabilities without a hitch.<br /><br />Granted my computer is several years old and it's not all that hot -- but I guess my point is what is considered "slow" is subjective.  I can say that in my emu, when I catch the PPU up between every CPU instruction, the hit in speed is <em>very</em> noticable.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=33">Disch</a> — Fri Aug 11, 2006 5:49 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[hap]]></name></author>
<updated>2006-08-11T15:24:54-07:00</updated>
<published>2006-08-11T15:24:54-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1879&amp;p=16166#p16166</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1879&amp;p=16166#p16166"/>
<title type="html"><![CDATA[PPU questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1879&amp;p=16166#p16166"><![CDATA[
Yeah, PPU and CPU have to be kept in sync constantly for MMC3, but I don't think that's a big speed hit: MMC3 games on my emulator run about 5% slower than an NROM game that uses a catch-up method to keep CPU and PPU in sync.<br /><br />Having every read and write going through a function, instead of direct, is more of a 'problem' for speed. It allows for greater flexibility though, not just for MMC3. My whole emulator state is mostly based on a bunch of functionpointers.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=115">hap</a> — Fri Aug 11, 2006 3:24 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2006-08-11T15:14:17-07:00</updated>
<published>2006-08-11T15:14:17-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1879&amp;p=16165#p16165</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1879&amp;p=16165#p16165"/>
<title type="html"><![CDATA[PPU questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1879&amp;p=16165#p16165"><![CDATA[
Inefficiency also becomes a problem if you want to port your emulator to handheld devices.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Fri Aug 11, 2006 3:14 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2006-08-11T15:01:18-07:00</updated>
<published>2006-08-11T15:01:18-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1879&amp;p=16164#p16164</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1879&amp;p=16164#p16164"/>
<title type="html"><![CDATA[PPU questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1879&amp;p=16164#p16164"><![CDATA[
Polling something hundreds of thousands or millions of times per emulated second is a lot slower than predicting it in advance (possibly updating that a few times) and then carrying it out at the predicted time. Things really add up if you're polling multiple subsystems. It may not be a problem for emulating at normal speed on modern systems, but when you want to do fast-forward or run multiple emulators at once, it becomes a problem.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Fri Aug 11, 2006 3:01 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Quietust]]></name></author>
<updated>2006-08-11T14:26:37-07:00</updated>
<published>2006-08-11T14:26:37-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1879&amp;p=16162#p16162</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1879&amp;p=16162#p16162"/>
<title type="html"><![CDATA[PPU questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1879&amp;p=16162#p16162"><![CDATA[
<div class="quotetitle">Disch wrote:</div><div class="quotecontent"><br /><div class="quotetitle">hap wrote:</div><div class="quotecontent">I've read it now, it's at a higher level than what I have: a function call for ever PPU read, and if MMC3 is used, overriding them by setting a few functionpointers to its IRQ handler.<br /></div><br /><br />How do you predict upcoming IRQs with that method?  It sounds like you'd have to constantly be keeping the CPU and PPU in sync (sloooooooow).</div><br /><br />That's funny, since that's exactly how Nintendulator does it. And it isn't really <em>that</em> slow - any Pentium 4 system can run it fine at full speed with zero frameskip with at least 25% CPU to spare.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=7">Quietust</a> — Fri Aug 11, 2006 2:26 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Disch]]></name></author>
<updated>2006-08-11T14:11:36-07:00</updated>
<published>2006-08-11T14:11:36-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1879&amp;p=16159#p16159</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1879&amp;p=16159#p16159"/>
<title type="html"><![CDATA[PPU questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1879&amp;p=16159#p16159"><![CDATA[
<div class="quotetitle">hap wrote:</div><div class="quotecontent"><br />I've read it now, it's at a higher level than what I have: a function call for ever PPU read, and if MMC3 is used, overriding them by setting a few functionpointers to its IRQ handler.<br /></div><br /><br />How do you predict upcoming IRQs with that method?  It sounds like you'd have to constantly be keeping the CPU and PPU in sync (sloooooooow).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=33">Disch</a> — Fri Aug 11, 2006 2:11 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[hap]]></name></author>
<updated>2006-08-11T13:20:02-07:00</updated>
<published>2006-08-11T13:20:02-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1879&amp;p=16151#p16151</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1879&amp;p=16151#p16151"/>
<title type="html"><![CDATA[PPU questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1879&amp;p=16151#p16151"><![CDATA[
<div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />I did a basic outline of my method in another thread if you're interested<br /></div>I've read it now, it's at a higher level than what I have: a function call for ever PPU read, and if MMC3 is used, overriding them by setting a few functionpointers to its IRQ handler.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=115">hap</a> — Fri Aug 11, 2006 1:20 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Disch]]></name></author>
<updated>2006-08-11T05:05:53-07:00</updated>
<published>2006-08-11T05:05:53-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1879&amp;p=16139#p16139</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1879&amp;p=16139#p16139"/>
<title type="html"><![CDATA[PPU questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1879&amp;p=16139#p16139"><![CDATA[
<div class="quotetitle">hap wrote:</div><div class="quotecontent"><br />Then how do you handle MMC2/4 CHR bankswitching when fetching sprites?<br /></div><br /><br />That'd be done where the sprites are fetched for the next scanline.  After I put the sprite pixels in the intermediate buffer I simply check which tile was loaded and if it was $FD/$FE, I notify the mapper.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">if&#40;MprMMC2Latch &amp;&amp; &#40;count &lt; 8&#41; &amp;&amp; &#40;tl &gt;= 0xFD&#41; &amp;&amp; &#40;tl &lt;= 0xFE&#41;&#41;<br />  &#40;this-&gt;*MprMMC2Latch&#41;&#40;nSpCHRPage,tl == 0xFE&#41;;<br /></div><br /><br />(the "count &lt; 8" thing is so that it will only swap if this is one of the first 8 sprites being rendered -- since I have the option to not limit drawing to 8 sprites per scanline, I wouldn't want additional sprites to mess with the CHR page)<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />And is it possible to have an accurate MMC3/6 IRQ counter?<br /></div><br /><br />Sure -- since I keep my IRQ counter tracking events in their own way (completely unrelated to how the PPU emu is running).<br /><br />I did a basic outline of my method in another thread if you're interested:<br /><br /><a href="http://nesdev.com/bbs/viewtopic.php?t=1822" class="postlink">http://nesdev.com/bbs/viewtopic.php?t=1822</a><br /><br />The code IS pretty atrocious though, and very hard to follow.  But if you are interested I could upload it for you.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Sounds familiar, I'm using something similar, got the idea from you over a year ago. You reminded me I forgot to credit you for it.<br /></div><br /><br />Hah.  Don't worry about crediting me for an idea.  Man if I credited every person I got a coding idea or technique from, I'd have a 10 page list.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=33">Disch</a> — Fri Aug 11, 2006 5:05 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[hap]]></name></author>
<updated>2006-08-11T02:43:54-07:00</updated>
<published>2006-08-11T02:43:54-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1879&amp;p=16137#p16137</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1879&amp;p=16137#p16137"/>
<title type="html"><![CDATA[PPU questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1879&amp;p=16137#p16137"><![CDATA[
Then how do you handle MMC2/4 CHR bankswitching when fetching sprites? And is it possible to have an accurate MMC3/6 IRQ counter?<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />In addition to having the desired pixel, the intermediate buffer also tracks two flags to signal the properties of that pixel. Bit 7 indicates foreground/background priority. If set, this sprite pixel has background priority. Bit 6 indicates the pixel belongs to sprite 0 (so that checks for sprite-0 hit can be made with the approprate BG pixel during rendering).<br /></div> Sounds familiar, I'm using something similar, got the idea from you over a year ago. You reminded me I forgot to credit you for it.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=115">hap</a> — Fri Aug 11, 2006 2:43 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Disch]]></name></author>
<updated>2006-08-10T16:56:33-07:00</updated>
<published>2006-08-10T16:56:33-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1879&amp;p=16126#p16126</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1879&amp;p=16126#p16126"/>
<title type="html"><![CDATA[PPU questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1879&amp;p=16126#p16126"><![CDATA[
My way isn't 100% accurate as far as when sprite patterns are fetched, but it's "accurate enough" for practical purposes.  The only real way I could practically impove the accuracy would be to be more precise about when I load the CHR, but meh...<br /><br /><br />ANYWAY...  my method is as follows:<br /><br /><br />I keep an intermediate buffer for sprite pixels (256+8 bytes wide).<br /><br />On cycle 257 (near start of HBlank) I do all my sprite evaluations for the NEXT scanline, and fill the intermediate buffer with sprite pixels as they will be rendered on the next scanline.  When rendering pixels, I take the appropriate byte from the buffer and render it.  This means copying sprites pixels twice (once to intermediate buffer and once to output buffer), so it's not the most efficient method ever, but it's <em>very</em> easy and flexible.<br /><br />In addition to having the desired pixel, the intermediate buffer also tracks two flags to signal the properties of that pixel.  Bit 7 indicates foreground/background priority.  If set, this sprite pixel has background priority.  Bit 6 indicates the pixel belongs to sprite 0 (so that checks for sprite-0 hit can be made with the approprate BG pixel during rendering).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=33">Disch</a> — Thu Aug 10, 2006 4:56 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[dvdmth]]></name></author>
<updated>2006-08-10T07:27:30-07:00</updated>
<published>2006-08-10T07:27:30-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1879&amp;p=16110#p16110</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1879&amp;p=16110#p16110"/>
<title type="html"><![CDATA[PPU questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1879&amp;p=16110#p16110"><![CDATA[
Sprites cannot change their positions during rendering, AFAIK.  Sprite memory cannot be written (through $2004 or $4014) except during VBlank or if rendering is disabled ($2001 bits 3-4 are both clear).<br /><br />Sprites are processed one scanline before they are drawn.  This is why games have to subtract 1 from the sprite's Y position before updating sprite memory.  The PPU first scans sprite RAM, looking for sprites that are in-range.  Each sprite that is found is placed in a temporary buffer.  There are only 32 bytes in this buffer, enough for 8 sprites worth of data, which is why you cannot have more than eight sprites on a scanline.  Then, during HBlank (the time between scanlines), the PPU goes to CHR-ROM or CHR-RAM (whichever is present) and gets the appropriate tile data for these sprites.  The results are placed in another buffer, eight pixels per sprite, so that they can be rendered on the next scanline.  During that scanline, the PPU scans each buffer looking for a non-transparent pixel to draw.  It looks at the first sprite and sees if its pixel is non-transparent at that X-position.  If it is, the other sprites aren't even looked at - the pixel is rendered and drawn (assuming the background doesn't overlap it and has priority).  If the pixel is transparent, it is thrown out and the second sprite data is exaamined.  The process is repeated until either a non-transparent pixel is found or all eight sprites have been examined (at which point no pixel is drawn in the sprite layer).<br /><br />Thus, during each scanline, the PPU draws the sprites that were processed on the previous scanline, while simultaneously processing sprites to be drawn on the next scanline.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=360">dvdmth</a> — Thu Aug 10, 2006 7:27 am</p><hr />
]]></content>
</entry>
</feed>