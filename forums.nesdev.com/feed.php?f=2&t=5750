<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=2&amp;t=5750" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2009-11-19T15:27:03-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=2&amp;t=5750</id>
<entry>
<author><name><![CDATA[neilbaldwin]]></name></author>
<updated>2009-11-19T15:26:13-07:00</updated>
<published>2009-11-19T15:26:13-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5750&amp;p=52796#p52796</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5750&amp;p=52796#p52796"/>
<title type="html"><![CDATA[Bank-switching for Beginners]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5750&amp;p=52796#p52796"><![CDATA[
<div class="quotetitle">tepples wrote:</div><div class="quotecontent"><br />This NMI handler will not interfere with bankswitching:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">.proc nmi_handler<br />  inc retraces<br />  rti<br />.endproc</div><br /></div><br /><br />True.... <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" /><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3896">neilbaldwin</a> — Thu Nov 19, 2009 3:26 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2009-11-19T15:27:03-07:00</updated>
<published>2009-11-19T15:25:01-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5750&amp;p=52795#p52795</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5750&amp;p=52795#p52795"/>
<title type="html"><![CDATA[Bank-switching for Beginners]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5750&amp;p=52795#p52795"><![CDATA[
This NMI handler will not interfere with bankswitching:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">.proc nmi_handler<br />  inc retraces<br />  rti<br />.endproc</div><br />Then the main loop can spin on that flag to see when to blast VRAM updates.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Thu Nov 19, 2009 3:25 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2009-11-19T14:39:23-07:00</updated>
<published>2009-11-19T14:39:23-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5750&amp;p=52789#p52789</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5750&amp;p=52789#p52789"/>
<title type="html"><![CDATA[Bank-switching for Beginners]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5750&amp;p=52789#p52789"><![CDATA[
<div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />I was just thinking about the NMI issue, couldn't you increment a flag in the NMI, read it at the start of your bank switching routine and also at the end and if it's changed, write the bank switch again?<br /></div><br />Oh my this is clever, much better than what I did. You'll have to reset the mapper in NMI before writing tough (implying this method can't be used if you use a non-standard bankswitching sheme), and like my complex solution, you can't use the same bankswitching routines inside and outside NMI.<br /><br />So in summary when you use MMC1 :<br />- If your NMI timing is VERY tight and if you use the standard banswitching method, do what Neil sugested (and forgot about my complex approach)<br />- If it is acceptable to have a slightly shorter NMI, disable NMI (via $2000) between the MMC1 writes and enable it back after that.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Thu Nov 19, 2009 2:39 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[neilbaldwin]]></name></author>
<updated>2009-11-19T14:04:02-07:00</updated>
<published>2009-11-19T14:04:02-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5750&amp;p=52788#p52788</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5750&amp;p=52788#p52788"/>
<title type="html"><![CDATA[Bank-switching for Beginners]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5750&amp;p=52788#p52788"><![CDATA[
<div class="quotetitle">Bregalad wrote:</div><div class="quotecontent"><br />Well neil I guess you pretty much got it, in order to work with the MMC1 you have to write routines that does write 5 bits to it's registers and just call them.<br /><br />For resetting the MMC1, you typically just do it once at reset by doing inc to somewhere in ROM that contains a value greater than $80 (such as $fffb, the high byte of your reset vector). I don't know what you were trying to do here, but it looks overly complicated. Just do it one in the reset code and you should be allright.<br /><br />The problem is what happens if you try to write to a register NMI, if you were unlucky enough to have your main code interrupted when it was doing a register write. The most common solution is to set a flag each time you write to a MMC1 register, and skip the sound code in NMI if this flag is set. Another solution is to disable NMIs when writing to the MMC1, and enable it back when the write is done (which can ocasionally make VBlank time slightly shorter).<br />The "infamous" solution is posted <a href="http://nesdev.com/bbs/viewtopic.php?t=3924&amp;highlight=mmc1" class="postlink">here</a> but I guess it works only if you use the standard 16k variable, 16k fixed bankwitching (which is the most common).<br /></div><br /><br />LOL @ myself. I read in one of the NES MMCx wikis that to reset the MMC1 you write $80 to $FF to the register. That's what my reset loop is doing, in a rather clumsy way. Oh dear <img src="http://forums.nesdev.com/images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /><br /><br />I was just thinking about the NMI issue, couldn't you increment a flag in the NMI, read it at the start of your bank switching routine and also at the end and if it's changed, write the bank switch again?<br /><br />Kind of like;<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent"><br />NMI:<br />  inc NMI_counter<br />  rti<br /><br />SET_BANK:<br />  ldx NMI_counter<br />  sta $E000<br />  lsr a<br />  etc<br />  cpx NMI_counter<br />  bne SET_BANK<br />  rts<br /></div><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3896">neilbaldwin</a> — Thu Nov 19, 2009 2:04 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Dwedit]]></name></author>
<updated>2009-11-19T12:52:32-07:00</updated>
<published>2009-11-19T12:52:32-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5750&amp;p=52784#p52784</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5750&amp;p=52784#p52784"/>
<title type="html"><![CDATA[Bank-switching for Beginners]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5750&amp;p=52784#p52784"><![CDATA[
Megaman 2 has an infamous bug where the MMC1 bankswitch routine can be interrupted by the NMI, if there are lots of objects on the screen causing lag.  Some tool assisted speedruns expoit the bug.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=53">Dwedit</a> — Thu Nov 19, 2009 12:52 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2009-11-19T11:00:45-07:00</updated>
<published>2009-11-19T11:00:45-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5750&amp;p=52780#p52780</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5750&amp;p=52780#p52780"/>
<title type="html"><![CDATA[Bank-switching for Beginners]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5750&amp;p=52780#p52780"><![CDATA[
Well neil I guess you pretty much got it, in order to work with the MMC1 you have to write routines that does write 5 bits to it's registers and just call them.<br /><br />For resetting the MMC1, you typically just do it once at reset by doing inc to somewhere in ROM that contains a value greater than $80 (such as $fffb, the high byte of your reset vector). I don't know what you were trying to do here, but it looks overly complicated. Just do it one in the reset code and you should be allright.<br /><br />The problem is what happens if you try to write to a register NMI, if you were unlucky enough to have your main code interrupted when it was doing a register write. The most common solution is to set a flag each time you write to a MMC1 register, and skip the sound code in NMI if this flag is set. Another solution is to disable NMIs when writing to the MMC1, and enable it back when the write is done (which can ocasionally make VBlank time slightly shorter).<br />The "infamous" solution is posted <a href="http://nesdev.com/bbs/viewtopic.php?t=3924&amp;highlight=mmc1" class="postlink">here</a> but I guess it works only if you use the standard 16k variable, 16k fixed bankwitching (which is the most common).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Thu Nov 19, 2009 11:00 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[neilbaldwin]]></name></author>
<updated>2009-11-19T09:46:53-07:00</updated>
<published>2009-11-19T09:46:53-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5750&amp;p=52777#p52777</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5750&amp;p=52777#p52777"/>
<title type="html"><![CDATA[Bank-switching for Beginners]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5750&amp;p=52777#p52777"><![CDATA[
Right, this is what I've got. It seems to be working now (perhaps the stripping down tidied it up a bit). Am I on the right lines?;<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">; iNES header<br /><br />; iNES identifier<br />.byte &quot;NES&quot;,$1a <br /><br />; Number of PRG-ROM blocks<br />.byte $03<br /><br />; Number of CHR-ROM blocks<br />.byte $01<br /><br />; ROM control bytes: Horizontal mirroring, no SRAM<br />; or trainer, Mapper #0<br />;.byte $00, $00<br />.byte %00010000, %00000000         ;MMC1 with SRAM<br /><br />; Filler<br />.byte $00,$00,$00,$00,$00,$00,$00,$00   <br />      <br />SCREEN   EQU $2000<br />PPU0   EQU $2000<br />PPU1   EQU $2001<br />PPU_STATUS   EQU $2002<br /><br />   ;Zero page variables<br />   ENUM $0000<br />tempvec   db 0,0<br />tmp0   db 0<br />tmp1   db 0<br />tmp2   db 0<br />tmp3   db 0<br />tmp4   db 0<br />tmp5   db 0<br />tmp6   db 0<br />tmp7   db 0<br />   ENDE<br /><br />;--------------------------------------------------------------------------------<br />; BANK 00<br />;--------------------------------------------------------------------------------<br />   ORG $0000<br />   BASE $8000<br />bank00   inc $FE<br />   rts<br />   PAD $BFFA<br />   DW vblank, reset, irq<br />;--------------------------------------------------------------------------------<br />; BANK 01<br />;--------------------------------------------------------------------------------<br /><br />   BASE $8000<br />bank01   inc $FF<br />   rts<br />   PAD $BFFA<br />   DW vblank, reset, irq<br /><br />;--------------------------------------------------------------------------------<br />; FIXED BANK<br />;--------------------------------------------------------------------------------<br />      <br />   ORG $C000<br />reset   sei<br /><br />   jsr vblankwait<br />   jsr resetMMC1<br />   lda #%01100   ;Set bank layout<br />   jsr setMMC1r0<br />   lda #$00<br />   jsr setPRGBank<br />      <br />   ;clear RAM<br />   lda #$00<br />   ldx #$00<br />_reset_0   sta $0000,x<br />   sta $0100,x<br />   sta $0200,x<br />   sta $0300,x<br />   sta $0400,x<br />   sta $0500,x<br />   sta $0600,x<br />   sta $0700,x<br />   inx<br />   bne _reset_0<br /><br />   ;reset Stack<br />   ldx #$FF<br />   txs<br /><br />   lda #$00<br />   sta PPU0<br />   sta PPU1<br /><br />   ;set PPU registers<br />   lda #%10001000<br />   sta PPU0<br />   lda #%00011010<br />   sta PPU1<br /><br />main_loop   jmp main_loop<br />   <br />vblankwait   bit $2002<br />   bpl vblankwait<br />   rts<br />   <br />vblankendwait   bit $2002<br />   bmi vblankendwait<br />   rts<br /><br />vblank   ;rti<br />   pha<br />   txa<br />   pha<br />   tya<br />   pha<br />   bit $2002<br /><br />   jsr screen_off<br /><br />   lda #&gt;SCREEN<br />   sta $2006<br />   lda #&lt;SCREEN<br />   sta $2006<br />   lda $Fe      ;write content of $FE and $FE to screen<br />   sta $2007<br />   lda $FF<br />   sta $2007<br />   <br />   lda #%00011110<br />   jsr screen_on<br />   <br />   lda #$00      ;call routine in bank 00 to inc $FE<br />   jsr setPRGBank<br />   jsr bank00<br /><br />   lda #$01      ;call routine in bank 01 to inc $FF<br />   jsr setPRGBank<br />   jsr bank01<br />   <br />   pla<br />   tay<br />   pla<br />   tax<br />   pla<br />   rti<br /><br />irq   rti<br /><br />setPRGBank   <br />   sta $E000<br />   lsr a<br />   sta $E000<br />   lsr a<br />   sta $E000<br />   lsr a<br />   sta $E000<br />   lsr a<br />   sta $E000<br />   rts<br />   <br />screen_on   sta $2001<br />   ldx #$00<br />   stx $2005<br />   stx $2005<br />   stx $2006<br />   stx $2006<br />   rts<br />   <br />screen_off   lda #%00010000<br />   sta $2001<br />   sta $2005<br />   sta $2005<br />   sta $2006<br />   sta $2006<br />   rts<br />         <br />resetMMC1   ldx #$7F<br />@b   inx<br />   bne @a<br />   rts<br />@a   stx $8000<br />   bne @b<br />   rts<br />   <br />setMMC1r0   sta $9fff<br />   lsr a<br />   sta $9fff<br />   lsr a<br />   sta $9fff<br />   lsr a<br />   sta $9fff<br />   lsr a<br />   sta $9fff<br />   rts<br /><br /><br />   ORG $FFFA<br />   DW vblank, reset, irq<br />   <br />;--------------------------------------------------------------------------------<br />; CHR ROM<br />;--------------------------------------------------------------------------------<br />   BASE $0000<br />   incbin &quot;set2.chr&quot;<br />   ;incbin &quot;set2.chr&quot;<br />   ALIGN $2000<br />   <br />;--------------------------------------------------------------------------------<br />; END OF ROM<br />;--------------------------------------------------------------------------------<br /><br />            </div><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3896">neilbaldwin</a> — Thu Nov 19, 2009 9:46 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[neilbaldwin]]></name></author>
<updated>2009-11-19T09:08:43-07:00</updated>
<published>2009-11-19T09:08:43-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5750&amp;p=52776#p52776</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5750&amp;p=52776#p52776"/>
<title type="html"><![CDATA[Bank-switching for Beginners]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5750&amp;p=52776#p52776"><![CDATA[
<div class="quotetitle">NESICIDE wrote:</div><div class="quotecontent"><br /><div class="quotetitle">neilbaldwin wrote:</div><div class="quotecontent">:(<br /><br />Can someone knock up a bit of code to show me how to set up for MMC1 bank switching using fixed $C000-FFFF and 2 switchable banks @ $8000?<br /><br />I think I've got as far as putting the banks in the right place.... :S<br /></div><br />Someone asked if I could include this type of thing in NESICIDE and I had always planned on providing something like a "New Project Wizard" that includes "Mapper Interfacing".  I had gotten as far as putting the mechanics together to be able to provide the wizard but none of the content, which is what you are after.  I know someone will probably reply to this before I get that done [with a well-formed, ready-to-assemble ROM shell], but your post has reinvigorated my interest in getting something like that done inside my tool.  It will be very similar to the MS Visual Studio "// TODO: Insert your specialized command handler code here" type of functional shell with inserted guidance comments.</div><br /><br />Good idea.<br /><br />Seriously, someone throw something into the ring. I can't remember the last time I spent such an utterly fruitless time trying to get something working on the NES. I've got better things to do (yes, that's me admitting defeat <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" /> ) and I'd like to know I can get this working before diving in with a massive chunk of the tracker editor.<br /><br />In the meantime I'm going to strip down my reset/NMI code so I can show you my non-working code.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3896">neilbaldwin</a> — Thu Nov 19, 2009 9:08 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Banshaku]]></name></author>
<updated>2009-11-19T08:30:49-07:00</updated>
<published>2009-11-19T08:30:49-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5750&amp;p=52774#p52774</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5750&amp;p=52774#p52774"/>
<title type="html"><![CDATA[Bank-switching for Beginners]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5750&amp;p=52774#p52774"><![CDATA[
Sorry Neil, we're stealing your thread, it will be split I guess (split me). I would like to help you with the MMC1 but I never tried yet, only MMC3/VRC6/VCR7.<br /><br />@Nesicide:<br />Regarding your editor, if it could be more like visual studio 2008, with an MDI interface with tabbed documents, syntax highlighting, mouse over help, intellisense for known symbols by scope, support for ca65 (at the least) and other assemblers: I would be using it right away.  <br /><br />An editor that help beginner is great and all but even advanced users wants one with more options.  I wanted to make one (like many project on my todo list) but gave up since I have no more free time these days. I just came from work and it's already midnight... So forget hobbies..<br /><br />Then if you could debug, put break points in your code: even better.  But if the format is all binary like the current build and not text, being a full time developer during the day, I would skip it.<br /><br />My comments on the subject.  I really would like to see that editor available some day. Remote debugging with your own source code/comments/symbols.. That would be nice.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3559">Banshaku</a> — Thu Nov 19, 2009 8:30 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[cpow]]></name></author>
<updated>2009-11-19T06:19:47-07:00</updated>
<published>2009-11-19T06:19:47-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5750&amp;p=52770#p52770</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5750&amp;p=52770#p52770"/>
<title type="html"><![CDATA[Bank-switching for Beginners]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5750&amp;p=52770#p52770"><![CDATA[
<div class="quotetitle">neilbaldwin wrote:</div><div class="quotecontent"><br />:(<br /><br />Can someone knock up a bit of code to show me how to set up for MMC1 bank switching using fixed $C000-FFFF and 2 switchable banks @ $8000?<br /><br />I think I've got as far as putting the banks in the right place.... :S<br /></div><br />Someone asked if I could include this type of thing in NESICIDE and I had always planned on providing something like a "New Project Wizard" that includes "Mapper Interfacing".  I had gotten as far as putting the mechanics together to be able to provide the wizard but none of the content, which is what you are after.  I know someone will probably reply to this before I get that done [with a well-formed, ready-to-assemble ROM shell], but your post has reinvigorated my interest in getting something like that done inside my tool.  It will be very similar to the MS Visual Studio "// TODO: Insert your specialized command handler code here" type of functional shell with inserted guidance comments.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3705">cpow</a> — Thu Nov 19, 2009 6:19 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2009-11-19T06:05:42-07:00</updated>
<published>2009-11-19T06:05:42-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5750&amp;p=52769#p52769</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5750&amp;p=52769#p52769"/>
<title type="html"><![CDATA[Bank-switching for Beginners]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5750&amp;p=52769#p52769"><![CDATA[
MMC1 has one switchable PRG bank.<br /><br />But fixed $C000 is the scenario you get when you reset the mapper anyway.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Thu Nov 19, 2009 6:05 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[neilbaldwin]]></name></author>
<updated>2009-11-19T04:31:26-07:00</updated>
<published>2009-11-19T04:31:26-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5750&amp;p=52767#p52767</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5750&amp;p=52767#p52767"/>
<title type="html"><![CDATA[Bank-switching for Beginners]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5750&amp;p=52767#p52767"><![CDATA[
<img src="http://forums.nesdev.com/images/smilies/icon_sad.gif" alt=":(" title="Sad" /><br /><br />Can someone knock up a bit of code to show me how to set up for MMC1 bank switching using fixed $C000-FFFF and 2 switchable banks @ $8000?<br /><br />I think I've got as far as putting the banks in the right place.... :S<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3896">neilbaldwin</a> — Thu Nov 19, 2009 4:31 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2009-11-18T18:29:59-07:00</updated>
<published>2009-11-18T18:29:59-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5750&amp;p=52754#p52754</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5750&amp;p=52754#p52754"/>
<title type="html"><![CDATA[Re: Bank-switching for Beginners]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5750&amp;p=52754#p52754"><![CDATA[
<div class="quotetitle">MetalSlime wrote:</div><div class="quotecontent"><br />I think I read once that somebody (Memblers?) made an altered UNROM that had $8000-BFFF fixed and $C000-FFFF swappable though.<br /></div><br />You're thinking of the <a href="http://wiki.nesdev.com/w/index.php/INES_Mapper_180" class="postlink"><em>Crazy Climber</em> board</a>, which is an UNROM or UOROM board modded to replace the quad OR gate (74HC32) with a quad AND gate (74HC08). This fixes $8000-$BFFF to bank 0 and allows swapping $C000-$FFFF. You lose six bytes at the end of each bank for vectors, but that's no problem because DPCM ignores the last 15 bytes of each sample anyway. MMC1 can be configured to work this way as well (<a href="http://wiki.nesdev.com/w/index.php/MMC1#Control_.28internal.2C_.248000-.249FFF.29" class="postlink">control register</a> set to bank mode 1, bank location 0). And the upshot: RetroZone sells boards compatible with UOROM and MMC1 software, so you don't have to worry about finding a highly uncommon* donor cart.<br /><br />If you want to run the music once per vblank, you could have the NMI handler just set a flag that your main code spins on. <em>Final Fantasy</em> does this, as does LJ65.<br /><br />The small piece of replicated code that tokumaru mentions is often called a "trampoline".<br /><br /><br /><span style="font-size: 84%; line-height: normal">* Can't really say "rare" without making people think of A*ROM.</span><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Wed Nov 18, 2009 6:29 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2009-11-18T11:24:38-07:00</updated>
<published>2009-11-18T11:24:38-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5750&amp;p=52747#p52747</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5750&amp;p=52747#p52747"/>
<title type="html"><![CDATA[Re: Bank-switching for Beginners]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5750&amp;p=52747#p52747"><![CDATA[
<div class="quotetitle">neilbaldwin wrote:</div><div class="quotecontent"><br />If so, what's the protocol for switching PRG, calling routines and returning?<br /></div><br />If the mapper you use has a fixed bank, you typically place all the bankswitching routines in it. If the mapper switches the whole 32KB space at once, it's good practice to replicate a small piece of code across all banks, containing the reset code and the bankswitching routines, so that they appear to be always mapped at the same location, no matter what bank is active.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Wed Nov 18, 2009 11:24 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2009-11-18T10:30:34-07:00</updated>
<published>2009-11-18T10:30:34-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5750&amp;p=52746#p52746</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5750&amp;p=52746#p52746"/>
<title type="html"><![CDATA[Bank-switching for Beginners]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5750&amp;p=52746#p52746"><![CDATA[
<div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Presumably I could have the music player in a switchable bank and do the bank switching somewhere in my NMI, call the music refresh routine, switch the bank back, JMP back to where I left off?<br /></div><br />Well I guess the "standard" way to do is to banswitch it in and call it from NMI (who is typically fixed bank), but yeah you have to back-up the old bank and restore it after the sound code returns. I don't know if that's what you described.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Wed Nov 18, 2009 10:30 am</p><hr />
]]></content>
</entry>
</feed>