<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=3&amp;t=17133" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2018-03-11T04:41:07-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=3&amp;t=17133</id>
<entry>
<author><name><![CDATA[Bananmos]]></name></author>
<updated>2018-03-11T04:41:07-07:00</updated>
<published>2018-03-11T04:41:07-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=17133&amp;p=214971#p214971</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=17133&amp;p=214971#p214971"/>
<title type="html"><![CDATA[Correct emulation of PAL DMC DMA cycle steals]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=17133&amp;p=214971#p214971"><![CDATA[
Whilst trying out the new nifty PPU write register debug view in the Mesen emulator, I've realised that we still don't have correct emulation for the cycles stolen by the DMC DMA for PAL NES systems.<br /><br />I tried running my old &quot;Years Behind&quot; music demo from 2003: <a href="https://files.scene.org/view/parties/2003/mainframe03/demo_8bit/retrocoders_-_years_behind.zip" class="postlink">https://files.scene.org/view/parties/2003/mainframe03/demo_8bit/retrocoders_-_years_behind.zip</a><br /><br />This demo runs on PAL systems only, and compensates for the DMA DMC cycle steal by adjusting the skipped/taken cycle every scanline based on the current DMC playback rate. It's not 100% perfect, but mostly comes pretty close at keeping the writes within the safe hblank window.<br />(keep in mind some of the PPU register writes do happen before the hblank. This is perfectly fine, because they only affect the temporary 't' register rather than the 'v' register) <br /><br />I've hacked this demo to replace the scroll register writes with writes to $2001 which enable/disable monochrome mode. <br />The hacked version can be found here: <a href="https://drive.google.com/open?id=1Uxsdx6t6Y4xjdIMyRzEDelK4vlOplhYZ" class="postlink">https://drive.google.com/open?id=1Uxsdx6t6Y4xjdIMyRzEDelK4vlOplhYZ</a><br />And a video of it running on my PAL NES is here: <a href="https://drive.google.com/open?id=1JVvSYFIShNs_zHKjv7CJBRKsBdD9SCcr" class="postlink">https://drive.google.com/open?id=1JVvSYFIShNs_zHKjv7CJBRKsBdD9SCcr</a><br /><br />Running the demo in an emulator produces a noticeably different view compared to the video, as the purple bar gets skewed *a lot more* and wraps around to the left side of the screen. Here's a screenshot in Mesen, for example: MesenBoomjunk.png<br /><br />I've also tried Nintendulator and FCEUX, and the results look pretty consistent with Mesen. So it looks like there's still an unsolved mystery when it comes to DMC DMA behavior on PAL systems.<br /><br />Getting this right will probably involve a lot of analysis and test ROM writing. I don't have the time/motivation to be in the driving seat for this one, so just putting it out there in case someone is looking for one last emulation mystery to unravel. <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" /> <br />But I'd be happy to assist with testing on my PAL console if anyone else picks this up.<br /><br />Good starting points could be the DMC DMA tests previously done for NTSC systems:<br /><a href="https://forums.nesdev.com/viewtopic.php?f=3&amp;t=14120" class="postlink">https://forums.nesdev.com/viewtopic.php?f=3&amp;t=14120</a><br /><a href="http://forums.nesdev.com/viewtopic.php?t=6100" class="postlink">http://forums.nesdev.com/viewtopic.php?t=6100</a><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=106">Bananmos</a> â€” Sun Mar 11, 2018 4:41 am</p><hr />
]]></content>
</entry>
</feed>