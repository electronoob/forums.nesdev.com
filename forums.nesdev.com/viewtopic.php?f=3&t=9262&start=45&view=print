<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Windowed VSync</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Windowed VSync</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=3&amp;t=9262">http://forums.nesdev.com/viewtopic.php?f=3&amp;t=9262</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>4</strong> of <strong>5</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>WedNESday</b> [ Fri Mar 01, 2013 3:16 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Windowed VSync</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />*Bump*<br /><br />I have finally got windowed VSYNC working in Windows 7 64-bit, Aero theme.<br /><br />0% CPU usage. 1% GPU usage. 60 FPS.<br /><br />I basically use Direct3DCreate9 and use a point list with custom colours to render pixels followed by a call to Present().<br /><br />If anybody would like the code I'll PM it to them.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>FHorse</b> [ Wed Apr 10, 2013 4:45 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Windowed VSync</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">WedNESday wrote:</div><div class="quotecontent">*Bump*<br /><br />I have finally got windowed VSYNC working in Windows 7 64-bit, Aero theme.<br /><br />0% CPU usage. 1% GPU usage. 60 FPS.<br /><br />I basically use Direct3DCreate9 and use a point list with custom colours to render pixels followed by a call to Present().<br /><br />If anybody would like the code I'll PM it to them.</div><br /><br />I am interested.  <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>WedNESday</b> [ Thu Apr 11, 2013 4:06 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Windowed VSync</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Due to demand for some code I've decided to post some.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">#include &lt;d3d9.h&gt;<br /><br />#pragma comment (lib, &quot;d3d9.lib&quot;)<br /><br />D3DPRESENT_PARAMETERS D3DPP;<br /><br />LPDIRECT3D9 LPD3D9;<br />LPDIRECT3DDEVICE9 LPD3DD9;<br />LPDIRECT3DVERTEXBUFFER9 LPD3DVB9;<br /><br />void * ppbData;<br /><br />struct SBitmap<br />{<br />&nbsp; &nbsp;float x;<br />&nbsp; &nbsp;float y;<br />&nbsp; &nbsp;float z;<br />&nbsp; &nbsp;float rhw;<br /><br />&nbsp; &nbsp;COLORREF Colour;<br />} Bitmap&#91;256 * 240&#93;;<br /><br />void Blt()<br />{<br />&nbsp; &nbsp;LPD3DD9-&gt;BeginScene();<br />&nbsp; &nbsp;LPD3DVB9-&gt;Lock(NULL, NULL, &amp;ppbData, NULL);<br /><br />&nbsp; &nbsp;memcpy(ppbData, Bitmap, sizeof(SBitmap));<br /><br />&nbsp; &nbsp;LPD3DVB9-&gt;Unlock();<br /><br />&nbsp; &nbsp;LPD3DD9-&gt;SetFVF(D3DFVF_DIFFUSE | D3DFVF_XYZRHW);<br />&nbsp; &nbsp;LPD3DD9-&gt;SetStreamSource(NULL, LPD3DVB9, NULL, sizeof(SBitmap));<br />&nbsp; &nbsp;LPD3DD9-&gt;DrawPrimitive(D3DPT_POINTLIST, NULL, 256 * 240);<br />&nbsp; &nbsp;LPD3DD9-&gt;EndScene();<br /><br />&nbsp; &nbsp;LPD3DD9-&gt;Present(NULL, NULL, NULL, NULL);<br />}<br /><br />void CreateBitmap()<br />{<br />&nbsp; &nbsp;LPD3D9 = Direct3DCreate9(D3D_SDK_VERSION);<br /><br />&nbsp; &nbsp;ZeroMemory(&amp;D3DPP, sizeof(D3DPRESENT_PARAMETERS));<br />&nbsp; &nbsp;D3DPP.hDeviceWindow = hWnd;<br />&nbsp; &nbsp;D3DPP.PresentationInterval = D3DPRESENT_INTERVAL_ONE;<br />&nbsp; &nbsp;D3DPP.SwapEffect = D3DSWAPEFFECT_DISCARD;<br />&nbsp; &nbsp;D3DPP.Windowed = true;<br /><br />&nbsp; &nbsp;LPD3D9-&gt;CreateDevice(D3DADAPTER_DEFAULT, D3DDEVTYPE_HAL, hWnd, D3DCREATE_SOFTWARE_VERTEXPROCESSING, &amp;D3DPP, &amp;LPD3DD9);<br /><br />&nbsp; &nbsp;LPD3DD9-&gt;CreateVertexBuffer(sizeof(SBitmap), NULL, D3DFVF_DIFFUSE | D3DFVF_XYZRHW, D3DPOOL_MANAGED, &amp;LPD3DVB9, NULL);<br /><br />&nbsp; &nbsp;temp2 = 0;<br /><br />&nbsp; &nbsp;while (temp2 &lt; 240)<br />&nbsp; &nbsp;{<br />&nbsp; &nbsp;&nbsp; &nbsp;temp = 0;<br /><br />&nbsp; &nbsp;&nbsp; &nbsp;while (temp &lt; 256)<br />&nbsp; &nbsp;&nbsp; &nbsp;{<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;Bitmap&#91;(temp2 * 256) + temp&#93;.Colour = 0x00000000;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;Bitmap&#91;(temp2 * 256) + temp&#93;.rhw = 0.0;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;Bitmap&#91;(temp2 * 256) + temp&#93;.x = (float)256;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;Bitmap&#91;(temp2 * 256) + temp&#93;.y = (float)240;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;Bitmap&#91;(temp2 * 256) + temp&#93;.z = 1.0;<br /><br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;temp++;<br />&nbsp; &nbsp;&nbsp; &nbsp;}<br /><br />&nbsp; &nbsp;&nbsp; &nbsp;temp2++;<br />&nbsp; &nbsp;}<br />}<br /></div><br /><br />The NULLs in Present can be changed to suit your needs. The order of the variables in SBitmap cannot be changed.<br /><br />Bitmap[0].Colour = 0 means edit the first pixel and Bitmap[61439] = 0 means edit the last. That's all you need to do to update the bitmap.<br /><br />Edit: Improved code.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Thu Apr 11, 2013 7:01 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Windowed VSync</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I really don't understand why this would get any better results than drawing two textured triangles.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>WedNESday</b> [ Thu Apr 11, 2013 7:29 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Windowed VSync</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">thefox wrote:</div><div class="quotecontent">I really don't understand why this would get any better results than drawing two textured triangles.</div><br /><br />From all the code that I read up on regarding using textures the code was about 10x bigger than what is above. Someone even posted their texture D3D10 code for me and it was incredibly longer.<br /><br />I have done no speed comparison of the two but the above is so damn fast you really wouldn't need any better.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>koitsu</b> [ Thu Apr 11, 2013 9:15 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Windowed VSync</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Two questions:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp;LPD3DD9-&gt;CreateVertexBuffer(sizeof(SBitmap) * 256 * 240, NULL, D3DFVF_DIFFUSE | D3DFVF_XYZRHW, D3DPOOL_MANAGED, &amp;LPD3DVB9, NULL);<br /></div><br /><br />Why not <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">LPD3DD9-&gt;CreateVertexBuffer&#40;sizeof&#40;Bitmap&#41;, NULL, D3DFVF_DIFFUSE | D3DFVF_XYZRHW, D3DPOOL_MANAGED, &amp;LPD3DVB9, NULL&#41;;</tt> ?<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Bitmap&#91;(temp2 * 256) + temp&#93;.x = (float)256;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Bitmap&#91;(temp2 * 256) + temp&#93;.y = (float)240;<br /></div><br /><br />Why force-casting when members <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">x</tt> and <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">y</tt> are already <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">float</tt>?  The compiler will not throw warnings if you removed the force-cast of <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">&#40;float&#41;</tt>.<br /><br />Politely: you have an awful, awful tendency to force-cast things excessively, dude.  Break this habit ASAP, as it WILL bite you.<br /><br />I would also get rid of that statically-allocated <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">Bitmap[256*240]</tt> nonsense and use <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">malloc&#40;&#41;</tt> instead.  That's multiple megabytes of crap allocated on the heap which you can't guarantee will actually be available (your program will crash mysteriously as a result).  You can handle error conditions with <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">malloc&#40;&#41;</tt>.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Zelex</b> [ Thu Apr 11, 2013 9:49 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Windowed VSync</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">koitsu wrote:</div><div class="quotecontent">Two questions:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp;LPD3DD9-&gt;CreateVertexBuffer(sizeof(SBitmap) * 256 * 240, NULL, D3DFVF_DIFFUSE | D3DFVF_XYZRHW, D3DPOOL_MANAGED, &amp;LPD3DVB9, NULL);<br /></div><br /><br />Why not <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">LPD3DD9-&gt;CreateVertexBuffer&#40;sizeof&#40;Bitmap&#41;, NULL, D3DFVF_DIFFUSE | D3DFVF_XYZRHW, D3DPOOL_MANAGED, &amp;LPD3DVB9, NULL&#41;;</tt> ?<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Bitmap&#91;(temp2 * 256) + temp&#93;.x = (float)256;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Bitmap&#91;(temp2 * 256) + temp&#93;.y = (float)240;<br /></div><br /><br />Why force-casting when members <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">x</tt> and <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">y</tt> are already <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">float</tt>?  The compiler will not throw warnings if you removed the force-cast of <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">&#40;float&#41;</tt>.<br /><br />Politely: you have an awful, awful tendency to force-cast things excessively, dude.  Break this habit ASAP, as it WILL bite you.<br /><br />I would also get rid of that statically-allocated <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">Bitmap[256*240]</tt> nonsense and use <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">malloc&#40;&#41;</tt> instead.  That's multiple megabytes of crap allocated on the heap which you can't guarantee will actually be available (your program will crash mysteriously as a result).  You can handle error conditions with <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">malloc&#40;&#41;</tt>.</div><br /><br />Its a global variable. So its in the data or zero section of the executable. That won't crash a program any more than malloc could fail. Your also talking about 256*240*20 = 1.17mb. If you can't malloc 1.17mb you may have bigger problems.<br /><br />Also, accessing the global variable may be faster than a pointer dereference. (marginally so in most cases, but still faster.)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>WedNESday</b> [ Thu Apr 11, 2013 9:50 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Windowed VSync</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Actually koitsu;<br /><br />1. I use the C++ new keyword instead of Bitmap[256 * 240].<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">} *Bitmap;<br /><br />Bitmap = new SBitmap&#91;BitmapWidth * BitmapHeight&#93;;<br /></div><br /><br />2. If I don't use (float) then VS gives me a warning about using integers with floats etc.<br /><br />In fact any force-casting that you see in my code is just there temporarily. What you see above is just an example that wasn't supposed to be too serious.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>WedNESday</b> [ Thu Apr 11, 2013 9:51 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Windowed VSync</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Just removed the unnecessary 256 * 240 code above. Thanks koitsu.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Zelex</b> [ Thu Apr 11, 2013 9:56 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Windowed VSync</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Also, I don't see anything in that code that specifically guarantees windowed vsync. It may just happen to vsync on your machine by chance only. Asking D3D to vsync windowed doesn't always work reliably unfortunately =/

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>WedNESday</b> [ Thu Apr 11, 2013 11:31 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Windowed VSync</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Zelex wrote:</div><div class="quotecontent">Also, I don't see anything in that code that specifically guarantees windowed vsync. It may just happen to vsync on your machine by chance only. Asking D3D to vsync windowed doesn't always work reliably unfortunately =/</div><br /><br />Well in that case if possible could someone give it a try please. I know that FHorse will at some point.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>koitsu</b> [ Thu Apr 11, 2013 12:47 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Windowed VSync</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Zelex wrote:</div><div class="quotecontent"><div class="quotetitle">koitsu wrote:</div><div class="quotecontent">Two questions:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp;LPD3DD9-&gt;CreateVertexBuffer(sizeof(SBitmap) * 256 * 240, NULL, D3DFVF_DIFFUSE | D3DFVF_XYZRHW, D3DPOOL_MANAGED, &amp;LPD3DVB9, NULL);<br /></div><br /><br />Why not <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">LPD3DD9-&gt;CreateVertexBuffer&#40;sizeof&#40;Bitmap&#41;, NULL, D3DFVF_DIFFUSE | D3DFVF_XYZRHW, D3DPOOL_MANAGED, &amp;LPD3DVB9, NULL&#41;;</tt> ?<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Bitmap&#91;(temp2 * 256) + temp&#93;.x = (float)256;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Bitmap&#91;(temp2 * 256) + temp&#93;.y = (float)240;<br /></div><br /><br />Why force-casting when members <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">x</tt> and <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">y</tt> are already <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">float</tt>?  The compiler will not throw warnings if you removed the force-cast of <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">&#40;float&#41;</tt>.<br /><br />Politely: you have an awful, awful tendency to force-cast things excessively, dude.  Break this habit ASAP, as it WILL bite you.<br /><br />I would also get rid of that statically-allocated <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">Bitmap[256*240]</tt> nonsense and use <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">malloc&#40;&#41;</tt> instead.  That's multiple megabytes of crap allocated on the heap which you can't guarantee will actually be available (your program will crash mysteriously as a result).  You can handle error conditions with <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">malloc&#40;&#41;</tt>.</div><br /><br />Its a global variable. So its in the data or zero section of the executable. That won't crash a program any more than malloc could fail.</div><br />1) Scope has no bearing on this,<br />2) It's in one of a series of segments (I don't care to remember which -- <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">.dynsym</tt>, <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">.text</tt>, <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">.rodata</tt>, <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">.data</tt>, <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">.bss</tt>, or god knows what else), correct<br />3) Incorrect.  There are two reasons for this:<br /><br />i) If the size of the buffer exceeds stack size, the program's behaviour is unknown (it varies per OS, and on some OSes the result is undefined).  There is really no justification for allocating such large amounts of memory on the stack.<br /><br />ii) With the &quot;static allocation&quot; method, once the data inside of <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">Bitmap[]</tt> is used, it can never be released back to the OS -- there is no way to <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">free&#40;&#41;</tt> it.  Ultimately whether or not this matters depends on what the application is doing, naturally, but it's a very bad habit to get into -- instead, just use <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">malloc&#40;&#41;</tt> and friends and you'll always be safe, with no negative trade-offs.<br /><br />I've talked about item #3 at length on the FreeBSD lists as well:<br /><br /><!-- m --><a class="postlink" href="http://lists.freebsd.org/pipermail/freebsd-stable/2013-February/072530.html">http://lists.freebsd.org/pipermail/free ... 72530.html</a><!-- m --><br /><!-- m --><a class="postlink" href="http://lists.freebsd.org/pipermail/freebsd-stable/2013-February/072534.html">http://lists.freebsd.org/pipermail/free ... 72534.html</a><!-- m --><br /><!-- m --><a class="postlink" href="http://lists.freebsd.org/pipermail/freebsd-stable/2013-February/072545.html">http://lists.freebsd.org/pipermail/free ... 72545.html</a><!-- m --><br /><br />There are some ways on OSes to &quot;advise&quot; the VM on what to do with such memory, but they're often not portable.<br /><br /><div class="quotetitle">Zelex wrote:</div><div class="quotecontent">Your also talking about 256*240*20 = 1.17mb. If you can't malloc 1.17mb you may have bigger problems.</div><br />Except that you can handle the situation gracefully if you do the allocation yourself, rather than the user getting a bizarre error from the OS that may not make any sense.<br /><br /><div class="quotetitle">Zelex wrote:</div><div class="quotecontent">Also, accessing the global variable may be faster than a pointer dereference. (marginally so in most cases, but still faster.)</div><br />Again: scope has no bearing here.  As for the dereferencing hit -- it's negligible in 98% of the cases out there.<br /><br />Footnote: for C++ you're supposed to use <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">new</tt> and <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">delete</tt> and all that crap -- sure, whatever works -- I'm used to how shit works under the hood.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Zelex</b> [ Fri Apr 12, 2013 1:07 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Windowed VSync</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />wait wait, how does a global variable have anything to do with the size of your stack? Is this some kind of &quot;this is how it works with some compiler on some obscure embedded platform?&quot;<br /><br />Also global data is allocated by the OS at exe init time. Its not allocated on first use. You may be thinking of a local static variable. For example,<br /><br />int foo() {<br /> static int bar = 0;<br /> return bar++;<br />}<br /><br />bar in this example is allocated at program startup by the OS, it is however only initialized to 0 when foo is first run. (watch out for multi-threading issues)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>koitsu</b> [ Fri Apr 12, 2013 5:53 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Windowed VSync</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Zelex wrote:</div><div class="quotecontent">wait wait, how does a global variable have anything to do with the size of your stack? Is this some kind of &quot;this is how it works with some compiler on some obscure embedded platform?&quot;<br /><br />Also global data is allocated by the OS at exe init time. Its not allocated on first use. You may be thinking of a local static variable. For example,<br /><br />int foo() {<br /> static int bar = 0;<br /> return bar++;<br />}<br /><br />bar in this example is allocated at program startup by the OS, it is however only initialized to 0 when foo is first run. (watch out for multi-threading issues)</div><br />That code does nothing and is mostly irrelevant to the discussion.  Are we talking past one another?  I'm not sure.<br /><br />Tell me: what do you think happens when &quot;the global data allocated by the OS at exe init time&quot; fails?  What happens when do something like <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">char buf[1024*1024*32];</tt> (scope doesn't matter) and the allocation by the ELF loader (or the &quot;executable loader&quot;) fails?  I can tell you what happens: undefined behaviour, based on too many situations/scenarios/variables.  Instead, allocate memory during runtime and you can handle this situation elegantly.<br /><br />Edit: Okay, it looks like scope does matter, at least on *IX systems.  With <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">char buf[1024*1024*32];</tt> declared outside of <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">main&#40;&#41;</tt>, the allocation ends up being part of the processes active datasize.  If declared inside of <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">main&#40;&#41;</tt>, it ends up being part of the processes active stacksize.  If inside of a sub-function, the allocation only happens when that function is called and is part of the processes active stacksize.  If inside of a sub-function that isn't used, the allocation never happens.<br /><br />The behaviour if the allocation is too large (exceeds system limits, etc.) is undefined however; on some systems it might segfault right off the bat, but on others it might do god-knows-what or just lock up.  The risk isn't worth it -- allocate &quot;large chunks&quot; (see those freebsd.org mailing list threads) dynamically so your program can always start/run and can elegantly handle situations where memory pressure is an issue.  You should not depend on the ELF/executable loader to do this for you.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Zepper</b> [ Fri Apr 12, 2013 6:59 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Windowed VSync</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />What about creating a BITMAP <strong>structure</strong>, and then... BITMAP *bmp = malloc( foo ) ?

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>4</strong> of <strong>5</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>