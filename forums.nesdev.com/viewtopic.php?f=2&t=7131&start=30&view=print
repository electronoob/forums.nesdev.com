<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Jump Physics</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Jump Physics</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=7131">http://forums.nesdev.com/viewtopic.php?f=2&amp;t=7131</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>3</strong> of <strong>3</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Mon Nov 08, 2010 2:35 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I also like the simple approach that Memblers and tepples have suggested in the past, of firing an IRQ when a certain tile is used. This is region independent and very flexible, as you can use sprites or the background to do it. This is kinda like a "sprite 0 hit done right" IMO, because it uses IRQs instead of register polling and doesn't have that solid pixel limitation. And it can be used multiple times in the same frame.</div><br />I third that it's a very good idea. If an automatic CHR switching system based on this worked well for Punch Out, Famicom Wars and Fire Emblem, something that would trigger an IRQ would be as good (as long as there is something to prevent triggering 8 IRQs in 8 consecutive scanlines...).<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I'm OK with this kind of scanline counter too. PAL compatibility is overrated, because it's not like scanline counting is the only thing in the way of region compatibility..</div>
<br />With a CPU cycle counter such as FME7's, N106's or FDS's there is no problem, you can just adjust the counter's value for PAL compatibility.
<br />
<br />With VRC mappers however it becomes real crap, because the value is multiplied by 113.66666 automatically without having you being able to do anything with it. This made the counter terribly practical for NTSC (as you don't have to do any computations based on the # of lines you want to wait), and terribly impractical for PAL (you'd have to multiply the value by 15/16, round it down and wait the remaiding time by a timed loop).
<br />
<br />Also I agree MMC3's way of generating IRQs is too complex as opposed to what it could be. This whole "delay between A12 raises" thing is complex and weird. It it was just A12 divided by 8 it would make more sense.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Memblers</b> [ Mon Nov 08, 2010 4:22 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Unfortunately, the problem with the 'Sprite IRQ' is the larger amount of CHR address pins needed to check for the condition.  If those inputs can also be re-used for something else, it would be a little more attractive, but I can't think of anything.  The other methods only need a single input.
<br />
<br />One way to prevent 8 IRQs in a row would be to check CHR data.  In the game that means that you would have to 'hide' at least one visible pixel, which is a similar one of the annoyances with sprite #0 detect.  I'm sure there's a better solution, perhaps using a counter.
<br />
<br />With my first Squeedo prototype (I still have like 40 of those boards, heh), it was dead simple to get IRQs working using a PIC16 or PIC18.  I was using a higher-end one ($4-$6), but it should just as well on cheapest ones (&gt;$1).  That's what I figured I would do if I needed just IRQ, by itself.  I should consider putting that on my cheap CPLD board, as an option to develop later perhaps.
<br />
<br />You can prescale CHR-A12 by 8 to get the scanline timer, or can also use a CPU cycle timer.  No reason you can't use both at the same time, too (on the PIC at least, you'd need a way to check on NES).  I expanded on that idea for example, by making the PIC also control the CHR banking.  So at least for CHR stuff, the NES doesn't even have to be interrupted, if it told the PIC what to do beforehand.  For the NES CPU, that's no latency, no overhead.  Not that there's much overhead in CHR switching anyways, unless you're really getting crazy with it.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Kreese</b> [ Mon Nov 08, 2010 4:33 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Jump Physics</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">cartlemmy wrote:</div><div class="quotecontent">Just wanted to get some input on my character physics model before I move on. There is no real collision detection yet, so it won't fall down the hole.<br /><br /><a href="http://www.yibbleware.com/nes/cartlemmy-test-0.3.nes" class="postlink">http://www.yibbleware.com/nes/cartlemmy-test-0.3.nes</a></div>
<br />I think it's a nice feeling to this! Something that would add a little more feeling to it, would be that the left-right movement don't stop emiditly when you release the left/right on the d-pad. Now it feels like "he" is falling straight down when you release left/right even if you "run" and jump... I'm not saying that it should move alot, but a bit before it stops.
<br />
<br />Hope you understand what I mean...

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Memblers</b> [ Fri Nov 12, 2010 6:01 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Sorry to derail this thread a bit more, but I looked into the IRQ problem, and I think I now have the solution for a cheap single-chip solution (well, it must combine with my CPLD, but it's already there) for a PPU-based (tile $FF) IRQ, which could be accurate down to a single pixel (and can be transparent, I suppose).  But all that accuracy is thrown out the window of course, if a CPU IRQ is generated (by latency of the current instruction executing).
<br />
<br />I'll see if I can work that into controlling CHR banking at the same time, that would be nice.  I'm removing i2c functionality to fit this in, so I guess I'll find out soon if there's room to work with that idea.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>clueless</b> [ Fri Nov 12, 2010 7:01 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I think that putting a PIC or other micro-controller in a NES cart as a sort-of co-processor is intriguing.
<br />
<br />How much circuitry (meaning... $$$ cost) would it take to be able to load a program into the controller from the NES at boot time (or any time)?  Like using $5fff, $5ffe, similar to writing to PPUADDR and PPUDATA.
<br />
<br />It would make adding support to emulators more difficult.  I wonder what could be done with a general-purpose cart-based co-processor.  I imagine that if it existed most people would use it for raster effects and bank switching tricks.  But would there be any other uses?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Fri Nov 12, 2010 8:19 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">clueless wrote:</div><div class="quotecontent">I wonder what could be done with a general-purpose cart-based co-processor.  I imagine that if it existed most people would use it for raster effects and bank switching tricks.  But would there be any other uses?</div>
<br />Do "Super FX", "SA-1", and "Super Game Boy" give you any ideas?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>clueless</b> [ Fri Nov 12, 2010 8:20 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I have never had a game with a SA-1 or Super-FX.  I do own a super-game-boy though.
<br />
<br />One thing that I can think of for the NES is generating a per-line IRQ, and then feeding unique interrupt vector addresses to the CPU.  This saves CPU cycles by the CPU not having to look up a scan-line counter to determine what to do.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>cartlemmy</b> [ Fri Nov 12, 2010 8:55 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Jump Physics</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Kreese wrote:</div><div class="quotecontent">Something that would add a little more feeling to it, would be that the left-right movement don't stop emiditly when you release the left/right on the d-pad. Now it feels like "he" is falling straight down when you release left/right even if you "run" and jump... I'm not saying that it should move alot, but a bit before it stops.<br /><br />Hope you understand what I mean...</div>
<br />
<br />Yes, I do understand what you mean, and I totally agree. Thanks!

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Memblers</b> [ Fri Nov 12, 2010 10:38 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">clueless wrote:</div><div class="quotecontent">I think that putting a PIC or other micro-controller in a NES cart as a sort-of co-processor is intriguing.<br /><br />How much circuitry (meaning... $$$ cost) would it take to be able to load a program into the controller from the NES at boot time (or any time)?  Like using $5fff, $5ffe, similar to writing to PPUADDR and PPUDATA.<br /><br />It would make adding support to emulators more difficult.  I wonder what could be done with a general-purpose cart-based co-processor.  I imagine that if it existed most people would use it for raster effects and bank switching tricks.  But would there be any other uses?</div>
<br />
<br />The cost is mostly for the MCU itself.  Cost is maybe ranging from $3.50 - $9 for PICs with a parallel port (easy for NES to read/write) + oscillator + 3.3V power (for the ones that need it).  Here's the first board I made that can use various PIC16 or PIC18s - <a href="http://www.parodius.com/~memblers/nes/squeedo/pics/sqproto-side.jpg" class="postlink">http://www.parodius.com/~memblers/nes/squeedo/pics/sqproto-side.jpg</a>  Other info is here: <a href="http://www.parodius.com/~memblers/nes/squeedo/" class="postlink">http://www.parodius.com/~memblers/nes/squeedo/</a> but it's all outdated stuff.
<br />
<br />You could pretty much run the entire game in the coprocessor, if you wanted to.  I'm using PIC32 in later designs, which is pretty decent to program in C (MIPS32 core.. relative of the N64's cpu <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" />).
<br />
<br />With the PIC18F I was able to make 4 extra sound channels, wavetable synth with 8-bit volume for each channel.  The NES gets the IRQ from it and writes the sound data to $4011.  The newer version of the synth, that I've rewritten recently is much better though (but remains to be tested on hardware).
<br />
<br />An MCU by itself probably won't be able to do any special IRQ vectoring, it would need some external logic probably.  Pretty nifty idea though.  For a later design I have a plan for an IRQ priority encoder with separate vectors.  On the older board, what I did in my NES IRQ routine was read the (first) byte from the PIC, then use that as the index to the jump table.  Plenty of overhead there, but there were a lot of different causes for an IRQ (UART, sound, scanline timer, CPU timer, math function results).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>MottZilla</b> [ Fri Nov 12, 2010 11:22 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">clueless wrote:</div><div class="quotecontent">I wonder what could be done with a general-purpose cart-based co-processor.  I imagine that if it existed most people would use it for raster effects and bank switching tricks.  But would there be any other uses?</div>
<br />
<br />You could as Memblers suggested, run your actual game program on the coprocessor which would be much faster than the 1.79mhz 6502 type cpu. This would mean you would have alot more time to calculate game logic, meaning you could have even more complex game logic. This also means that the host CPU in the NES, similar to the SNES with SA-1, could just have the tasks of taking the update data for video updates and sending them to the PPU and other general tasks that it must do. 
<br />
<br />Perhaps your coprocessor could handle decompression as well. That was popular on SNES for graphics. Many games just used the large amount of RAM in the SNES and the main cpu, where as other games like Street Fighter Alpha 2 and Star Ocean had the SDD1 that could decompress graphics extremely fast. 
<br />
<br />With a coprocessor maybe you could do a 3D game sort of like Star Fox. 
<br />
<br />If you did put a coprocessor in a NES cartridge you'd probably want to carefully consider what you want to do before choosing what hardware to use. If you were to make a general purpose board for other developers to use, it might make the most sense to have the CPU be 65xx based so learning curve to use it would be minimal. 
<br />
<br />That really would be cool to put a fast 65xx type CPU in a cartridge as a coprocessor maybe along with some audio enhancement.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Memblers</b> [ Sat Nov 13, 2010 1:24 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">MottZilla wrote:</div><div class="quotecontent">That really would be cool to put a fast 65xx type CPU in a cartridge as a coprocessor maybe along with some audio enhancement.</div>
<br />
<br />What I hoped to do was emulate the 6502.  I've got the sound part <a href="http://nesdev.com/bbs/viewtopic.php?t=6586" class="postlink">covered</a> (not complete yet).  PIC32 natively runs 1 instruction per clock @ 80mhz, so I'm sure it could at least match the NES CPU's performance even with an unoptimized emulator.  The audio stuff will load the CPU down, depending on the number of audio channels (and sample rate).
<br />
<br />I looked into using real 65xx hardware, but really, there wasn't anything good for the price (especially with their MCUs).  It looks like the 32-bit version might never be seen.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sat Nov 13, 2010 10:16 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">MottZilla wrote:</div><div class="quotecontent">If you were to make a general purpose board for other developers to use, it might make the most sense to have the CPU be 65xx based so learning curve to use it would be minimal.</div>
<br />That or some sort of ARM on which one can easily use C++.[1] Imagine Super Game Boy... <em>advance.</em>
<br />
<br />
<br /><span style="font-size: 84%; line-height: normal">[1] But not necessarily the <a href="http://pineight.com/mw/?title=C%2B%2B_vs._C#Minuses" class="postlink">icky parts</a>.</span>

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>3</strong> of <strong>3</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>