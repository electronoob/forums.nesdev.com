<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Games that pushed the limits of the NES</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Games that pushed the limits of the NES</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=5&amp;t=6314">http://forums.nesdev.com/viewtopic.php?f=5&amp;t=6314</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>2</strong> of <strong>4</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Mon Apr 26, 2010 8:59 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">UncleSporky wrote:</div><div class="quotecontent">Pushing the limits of the NES is a bit hard to define - do you mean it uses the maximum amount of system resources without choking on it, or that it makes things look and sound as good as possible, up to a 16-bit console level?</div>
<br />The latter. A game pushes a platform's limits if one could easily confuse it for the platform's successor's launch titles.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Mon Apr 26, 2010 9:05 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Well you'd have to be pretty dumb to confuse the sound coming out of the NES and the SNES.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>psycopathicteen</b> [ Fri May 28, 2010 11:26 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><!-- m --><a class="postlink" href="http://en.wikipedia.org/wiki/Mode_7">http://en.wikipedia.org/wiki/Mode_7</a><!-- m --> 
<br />
<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Mode 7 can only work on backgrounds, not sprites; therefore, any object that does not rotate/scale with the background must be a sprite, even items that would normally be thought of as part of the background, such as fixed platforms. The game developer must create a sprite with the same appearance as that object. For instance, in Super Castlevania IV, battles in which a boss rotates, such as with Koranot, have the mobile boss as the background, while the blocks on which the protagonist stands are sprites. With the obvious enhancements, this is similar to how some NES games featured battles against a giant movable boss without the slowdown and flicker inherent in a large sprite setâ€”by making the boss the background, and then moving and animating it. Both systems' examples only must apply to objects in the horizontal plane of the moving object. For instance, a floor, ceiling or scoreboard can remain part of a background in both the NES and SNES examples as long as they are completely "above" or "below" the field of gameplay. They can also be turned into sprites if the whole screen is needed, but this can cause slowdown.</div>
<br />
<br />Moving a bunch of sprites in unity with each other causes slowdown?  That must take a lot of cpu work moving one sprite individually and moving everything else from a displacement of that one sprite.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Fri May 28, 2010 11:54 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">psycopathicteen wrote:</div><div class="quotecontent">Moving a bunch of sprites in unity with each other causes slowdown?</div>
<br />The fact that having many sprites on screen causes slowdown is a common misconception. People often get that impression because usually sprites are used to represent game objects, and what actually causes the slowdown is the amount of game objects, not sprites.
<br />
<br />Usually, each game object performs physics calculations, checks for collisions, and so on, so when there are lots of them this adds up to a lot of CPU time. But if a bunch of sprites are supposed to represent the same game object (without lots of individually moving parts), then it shouldn't slow the game down at all.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>UncleSporky</b> [ Fri May 28, 2010 1:07 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Indeed, here's a test ROM I found that can load more than 64 sprites worth of data at once (with heavy flickering) that shows very little slowdown:
<br />
<br /><!-- m --><a class="postlink" href="http://www.geocities.jp/littlimi/arc/fc/titania_test_2010-02-21.zip">http://www.geocities.jp/littlimi/arc/fc ... -02-21.zip</a><!-- m -->
<br />
<br />(Made by the same guy who did the Touhou Bad Apple <a href="http://www.youtube.com/watch?v=AZehH55i_wg" class="postlink">video</a>/<a href="http://www.geocities.jp/littlimi/arc/fc/bad_apple_2_2010-02-21.zip" class="postlink">ROM</a>, which by the way is the most impressive thing I've seen on the NES.)
<br />
<br />EDIT: Sorry about that, <a href="http://www.geocities.jp/littlimi/bad_apple_2.htm" class="postlink">here's the Bad Apple ROM page</a> and <a href="http://www.geocities.jp/littlimi/fc.htm" class="postlink">here's the sprite test one</a> (bottom picture).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Kasumi</b> [ Fri May 28, 2010 3:37 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Those rom links don't work, and I'm quite sure it's because all of Geocities was taken down.
<br />
<br />Edit: nvm, got it. I guess the japanese geocities was spared. I just got a currently unavailable message the first few times I tried it.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Fri May 28, 2010 3:40 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Kasumi wrote:</div><div class="quotecontent">Edit: nvm, got it. I guess the japanese geocities was spared. I just got a currently unavailable message the first few times I tried it.</div>
<br />Ad-supported web hosting commonly blocks access from an external HTTP Referer. I needed to copy the URL and paste it into a new window.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>psycopathicteen</b> [ Sat May 29, 2010 7:13 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Another stupid common misconception:  The Genesis can "scroll backgrounds" faster than the Snes.
<br />
<br />I'm so glad I found this website.  I've been on smwcentral.com and it gave me a bad perception of the snes development scene.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sat May 29, 2010 10:16 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">psycopathicteen wrote:</div><div class="quotecontent">Another stupid common misconception:  The Genesis can "scroll backgrounds" faster than the Snes.</div>
<br />If an architecture can decompress maps and load nametables faster, it can scroll backgrounds faster. Tokumaru says his Sonic clone engine pushes the NES's limits at 16 pixels per frame in each direction. How fast can the Genesis and Super NES load nametables? And with both the Genesis and Super NES using CHR RAM, loading pattern tables once the player reaches a new area is also a concern.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Sat May 29, 2010 11:53 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">The fact that having many sprites on screen causes slowdown is a common misconception. People often get that impression because usually sprites are used to represent game objects, and what actually causes the slowdown is the amount of game objects, not sprites.</div>
<br />In fact this is not completely true. Because you normally clear the sprite buffer, and re-map all sprites in it every frame, each sprite will take a considerable amount of time to be mapped into shadow OAM. I figured my "maze sprites" routine was by far the one in the gameplay loop which took the most CPU time. Usually much more than the AI/collision routines.
<br />
<br />The AI/collision routines takes much more time for the programmer to program them tough, and this gets fairly complex quickly, so he gets the impression it will take a lot of CPU time. But no, the simpler-to-write mazing sprite routine, which is ran a very high number of time each frame, takes the most CPU time, and this, having too much sprites on the screen can be a major cause of lagging.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>psycopathicteen</b> [ Sat May 29, 2010 1:19 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />@ tepples:
<br />
<br />Snes can upload almost 3 screens of tile map during v-blank, if nothing else is being uploaded during that time.
<br />
<br />@ bregald:
<br />
<br />How does your "maze sprites" routine work?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Sat May 29, 2010 1:52 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />For each object on the screen, it checks which animation frame it uses, and which direction it's facting, and fetch the corresponding meta-sprite. Then it calls the routine which mazes a meta-sprite to memory while translating it on the screen to the specified main position, and apply parameters to it (such as palette swap, horizontal flipping, or text-box area sprite clipping). It does this on each hardware sprite.
<br />
<br />I don't know if this is the "standard" way to do this, but I think most games does something similar than mine. The only bad thing with mine is that "1 object = 1 meta-sprite" limitaton (although there is a way to make object invisible, there is no way to make them use multiple metasprites)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Sat May 29, 2010 2:36 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">Because you normally clear the sprite buffer, and re-map all sprites in it every frame, each sprite will take a considerable amount of time to be mapped into shadow OAM.</div><br />Depends on how you do it. I for example don't clear the the whole sprite buffer every frame. I simply overwrite last frame's sprites with the current frame's ones and only clear (using a high Y coordinate, no need to waste time on the other bytes) the ones that weren't used. This means that if I use all 64 sprites, or something close to that, I'll spend nearly/absolutely no time clearing memory.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I figured my "maze sprites" routine was by far the one in the gameplay loop which took the most CPU time. Usually much more than the AI/collision routines.</div><br />Again, depends on how you do it. If you are writing the sprites linearly first and "mazing" them later, I bet this is quite slow, because you spend time moving data around. I try to code my programs in a way that avoids moving already processed data around (I try to always read data from the source location, process it, and storing at the final location). My sprite cycling is done by processing (AI and drawing) the objects in random order every frame, which causes them to use "random" contiguous segments of OAM. It may not be as ideal as "mazing" the individual sprites, but it does the trick (all objects get a chance to be displayed) and isn't slow.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">The AI/collision routines takes much more time for the programmer to program them tough, and this gets fairly complex quickly, so he gets the impression it will take a lot of CPU time.</div><br />I'm pretty sure that in my engine the physics calculations take more time than drawing sprites... Reading metatiles from the map and processing collision information is no piece of cake for the CPU. But this is a platformer with lots of floor deformations I'm talking about... In a game with a top-down view you usually don't have to worry about floor deformation (metatiles are either solid or empty), gravity and things like that, so if your game is like that I guess I can understand your claims.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">But no, the simpler-to-write mazing sprite routine, which is ran a very high number of time each frame, takes the most CPU time, and this, having too much sprites on the screen can be a major cause of lagging.</div>
<br />I really think this is the fault of the approach you selected to handle the sprite cycling. I'm sure there are less CPU-intensive ways. I'm not saying your solution is bad though... As long as you can get the game to run without (much) slowdown, it's perfect.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>psycopathicteen</b> [ Sat May 29, 2010 4:30 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I use a build_metasprite macro that puts the sprite attributes of each sprite of the metasprite onto a fake oam, then I have an oam processing routine that takes 16-bit x and y coordinates and turns them into 8-bit coordinates and interweves the 9th x-bit with the size bit.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Sat May 29, 2010 5:23 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I have a "DrawSprite" routine that objects call when they want to draw themselves. This routine subtracts the camera's coordinates from the object's coordinates to find the screen coordinate of the object, and then it positions each sprite of the metasprite using this coordinate as a reference. If one of these sprites is found to be off screen, it's skipped.
<br />
<br />The "DrawSprite" routine receives as a parameter a value that is EOR'ed to every attribute byte, so that the sprite can be flipped (although there are extra calculations involving the coordinates for that), color changed or priority adjusted. The resulting data is sent directly to the OAM buffer.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>2</strong> of <strong>4</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>