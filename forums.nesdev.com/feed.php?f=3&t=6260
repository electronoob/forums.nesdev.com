<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=3&amp;t=6260" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2010-04-05T04:36:53-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=3&amp;t=6260</id>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2010-04-05T04:36:53-07:00</updated>
<published>2010-04-05T04:36:53-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6260&amp;p=59659#p59659</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6260&amp;p=59659#p59659"/>
<title type="html"><![CDATA[New emu: SMB status bar flashes when scrolling]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6260&amp;p=59659#p59659"><![CDATA[
<div class="quotetitle">Disch wrote:</div><div class="quotecontent"><br />Edit:  wtf @ double line breaks<br /></div><br />I get this too on GNOME when I copy a Windows-line-ending text file from Gedit to Firefox.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Mon Apr 05, 2010 4:36 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Disch]]></name></author>
<updated>2010-04-04T22:06:24-07:00</updated>
<published>2010-04-04T22:06:24-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6260&amp;p=59647#p59647</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6260&amp;p=59647#p59647"/>
<title type="html"><![CDATA[New emu: SMB status bar flashes when scrolling]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6260&amp;p=59647#p59647"><![CDATA[
Yeah that page you linked outlines exactly what you need to do.<br /><br />Glad I could help  =)<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=33">Disch</a> — Sun Apr 04, 2010 10:06 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[pops]]></name></author>
<updated>2010-04-04T22:02:41-07:00</updated>
<published>2010-04-04T22:02:41-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6260&amp;p=59646#p59646</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6260&amp;p=59646#p59646"/>
<title type="html"><![CDATA[New emu: SMB status bar flashes when scrolling]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6260&amp;p=59646#p59646"><![CDATA[
Your solution worked perfectly Disch. I really appreciate your help.<br /><br />I hacked your solution into my emulator so that if VRAM_Address = 0 after $2006 is written to with the latch set, I clear the Name table base address (D1-D0 of $2000)... and while this works perfectly for SMB, I should obviously look into emulating loopy_t. So I'll be diving into <!-- m --><a class="postlink" href="http://h1.ripway.com/blargg/temp/nes_ppu_scrolling.txt">http://h1.ripway.com/blargg/temp/nes_ppu_scrolling.txt</a><!-- m --> tomorrow. :)<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4328">pops</a> — Sun Apr 04, 2010 10:02 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Disch]]></name></author>
<updated>2010-04-04T21:26:43-07:00</updated>
<published>2010-04-04T21:26:43-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6260&amp;p=59642#p59642</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6260&amp;p=59642#p59642"/>
<title type="html"><![CDATA[New emu: SMB status bar flashes when scrolling]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6260&amp;p=59642#p59642"><![CDATA[
I think I figured it out guys.<br /><br />The "incorrect" code is really correct.  What's going on is the game is writing new map data.  I'm guessing the screen is flickering when the screen scrolls, right?   As in new data is being drawn.<br /><br />The game may not write to $2000 after drawing, but from looking at the smb disassembly, it <em>DOES</em> zero $2006.  See my notes at the beginning and end of this code snippit:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">;;**<br />;; HERE IS THE PROBLEM JSR TO THE CODE THAT WRITES TO $2000<br />;;**<br /><br />SetupWrites:   jsr WritePPUReg1          ;write to register<br />               pla                       ;pull from stack and shift to left again<br />               asl<br />               bcc GetLength             ;if d6 of third byte was clear, do not repeat byte<br />               ora #%00000010            ;otherwise set d1 and increment Y<br />               iny<br />GetLength:     lsr                       ;shift back to the right to get proper length<br />               lsr                       ;note that d1 will now be in carry<br />               tax<br />OutputToVRAM:  bcs RepeatByte            ;if carry set, repeat loading the same byte<br />               iny                       ;otherwise increment Y to load next byte<br />RepeatByte:    lda &#40;$00&#41;,y               ;load more data from buffer and write to vram<br />               sta PPU_DATA<br />               dex                       ;done writing?<br />               bne OutputToVRAM<br />               sec          <br />               tya<br />               adc $00                   ;add end length plus one to the indirect at $00<br />               sta $00                   ;to allow this routine to read another set of updates<br />               lda #$00<br />               adc $01<br />               sta $01<br />               lda #$3f                  ;sets vram address to $3f00<br />               sta PPU_ADDRESS<br />               lda #$00<br />               sta PPU_ADDRESS<br />               sta PPU_ADDRESS           ;then reinitializes it for some reason<br />               sta PPU_ADDRESS<br />;;**<br />;; THE ABOVE STA'S CLEAR $2006<br />;;**</div><br /><br />You guys must not be doing the scrolling properly.  Remember that $2006, $2005, <em>and the low 2 bits of $2000</em> all change the same register ("loopy_t").  So by writing zero to $2006 twice, the low 2 bits of $2000 are effectively zero'd as well.<br /><br /><br />Edit:  wtf @ double line breaks<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=33">Disch</a> — Sun Apr 04, 2010 9:26 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[pops]]></name></author>
<updated>2010-04-04T18:57:21-07:00</updated>
<published>2010-04-04T18:57:21-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6260&amp;p=59631#p59631</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6260&amp;p=59631#p59631"/>
<title type="html"><![CDATA[New emu: SMB status bar flashes when scrolling]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6260&amp;p=59631#p59631"><![CDATA[
<div class="quotetitle">Zepper wrote:</div><div class="quotecontent"><br />- This isn't an human-friendly readable disassembled code.<br /></div>Apologies for that.<br /><br />NickMass, your output and mine both have the same problem: instruction $8EE2 reads from $0301, which should be zero. If it is non-zero, then this bug appears (I've noticed values $3F and $26 in $0301, although certainly other values may be possible).<br /><br />This value is loaded at $8AF5 ($26) and $89F2 ($3F).<br /><br />Per the smb disassembly (at <!-- m --><a class="postlink" href="http://www.romhacking.net/docs/344/">http://www.romhacking.net/docs/344/</a><!-- m -->), the routines at these two addresses are ColorRotation and MushroomIconData<br /><br />$89F2<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">ColorRotation:<br />              lda FrameCounter         ;get frame counter<br />              and #$07                 ;mask out all but three LSB<br />              bne ExitColorRot         ;branch if not set to zero to do this every eighth frame<br />              ldx VRAM_Buffer1_Offset  ;check vram buffer offset<br />              cpx #$31<br />              bcs ExitColorRot         ;if offset over 48 bytes, branch to leave<br />              tay                      ;otherwise use frame counter's 3 LSB as offset here<br />GetBlankPal:  lda BlankPalette,y       ;get blank palette for palette 3<br />              sta VRAM_Buffer1,x       ;store it in the vram buffer *** WRITE TO 0301<br />              inx                      ;increment offsets<br />              iny<br />              cpy #$08<br />              bcc GetBlankPal          ;do this until all bytes are copied<br />              ldx VRAM_Buffer1_Offset  ;get current vram buffer offset<br />              lda #$03<br />              sta $00                  ;set counter here<br />              lda AreaType             ;get area type<br />              asl                      ;multiply by 4 to get proper offset<br />              asl<br />              tay                      ;save as offset here<br />GetAreaPal:   lda Palette3Data,y       ;fetch palette to be written based on area type<br />              sta VRAM_Buffer1+3,x     ;store it to overwrite blank palette in vram buffer<br />              iny<br />              inx<br />              dec $00                  ;decrement counter<br />              bpl GetAreaPal           ;do this until the palette is all copied<br />              ldx VRAM_Buffer1_Offset  ;get current vram buffer offset<br />              ldy ColorRotateOffset    ;get color cycling offset<br />              lda ColorRotatePalette,y<br />              sta VRAM_Buffer1+4,x     ;get and store current color in second slot of palette<br />              lda VRAM_Buffer1_Offset<br />              clc                      ;add seven bytes to vram buffer offset<br />              adc #$07<br />              sta VRAM_Buffer1_Offset<br />              inc ColorRotateOffset    ;increment color cycling offset<br />              lda ColorRotateOffset<br />              cmp #$06                 ;check to see if it's still in range<br />              bcc ExitColorRot         ;if so, branch to leave<br />              lda #$00<br />              sta ColorRotateOffset    ;otherwise, init to keep it in range<br />ExitColorRot: rts                      ;leave<br /></div><br />$8AF5:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">MushroomIconData:<br />      .db $07, $22, $49, $83, $ce, $24, $24, $00<br /><br />DrawMushroomIcon:<br />              ldy #$07                ;read eight bytes to be read by transfer routine<br />IconDataRead: lda MushroomIconData,y  ;note that the default position is set for a<br />              sta VRAM_Buffer1-1,y    ;1-player game *** WRITE TO 0301<br />              dey<br />              bpl IconDataRead<br />              lda NumberOfPlayers     ;check number of players<br />              beq ExitIcon            ;if set to 1-player game, we're done<br />              lda #$24                ;otherwise, load blank tile in 1-player position<br />              sta VRAM_Buffer1+3<br />              lda #$ce                ;then load shroom icon tile in 2-player position<br />              sta VRAM_Buffer1+5<br />ExitIcon:     rts<br /></div><br /><br />[edit]<br />Memory location 0301 is set to zero again at instruction $80D8... which is after the offending branch. I don't think it's reset anywhere else...<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4328">pops</a> — Sun Apr 04, 2010 6:57 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[NickMass]]></name></author>
<updated>2010-04-04T18:46:01-07:00</updated>
<published>2010-04-04T18:46:01-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6260&amp;p=59630#p59630</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6260&amp;p=59630#p59630"/>
<title type="html"><![CDATA[New emu: SMB status bar flashes when scrolling]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6260&amp;p=59630#p59630"><![CDATA[
The emulator I've been working on has exactly the same issue with the blinking status bar, and it seems my tracer output is identical but a bit more verbose, here's what mine outputs if it can help diagnose what is going on.<br /><br />Correct:<br /><a href="http://nickmass.com/emu/correct.txt" class="postlink">http://nickmass.com/emu/correct.txt</a><br /><br />Incorrect:<br /><a href="http://nickmass.com/emu/incorrect.txt" class="postlink">http://nickmass.com/emu/incorrect.txt</a><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4318">NickMass</a> — Sun Apr 04, 2010 6:46 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Zepper]]></name></author>
<updated>2010-04-04T18:17:24-07:00</updated>
<published>2010-04-04T18:17:24-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6260&amp;p=59629#p59629</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6260&amp;p=59629#p59629"/>
<title type="html"><![CDATA[New emu: SMB status bar flashes when scrolling]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6260&amp;p=59629#p59629"><![CDATA[
- This isn't an human-friendly readable disassembled code.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=39">Zepper</a> — Sun Apr 04, 2010 6:17 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[pops]]></name></author>
<updated>2010-04-04T17:17:10-07:00</updated>
<published>2010-04-04T17:17:10-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6260&amp;p=59626#p59626</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6260&amp;p=59626#p59626"/>
<title type="html"><![CDATA[New emu: SMB status bar flashes when scrolling]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6260&amp;p=59626#p59626"><![CDATA[
<div class="quotetitle">Disch wrote:</div><div class="quotecontent"><br />it might help if your tracer  printed what address the CPU was reading/writing instead of just the instruction and addressing mode.  As it is now, the tracer doesn't really do much of a job of illustrating what's going on.<br /><br />Where are the $2000 writes in this code?<br /><br />I assume those columns on the right are A,X,Y, but which is which?<br /></div>My bad, I forgot a key. The values are +1, +2, A, X, Y, SP, P, $0, $1.<br />+1: PC + 1 <br />+2: PC + 2 <br />$0: Mem @ $0000 <br />$1: Mem @ $0001 <br /><br />So the second instruction, LDX_Absolute   02 20 loads $2002 into X.<br /><br />I'll work on better tracer output, but for the moment, this is what I have. :)<br /><br />Here's better output. Key is: last mem address accessed, last mem value, a, x, y, sp, p. I've indicated ppu address writes to $2000 with "PPU.4000 : value" (which appear before the instructions in the traced code.<br />Correct:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">*** SCANLINE 242                        8059 80    91 0D D0 FF 89<br />8082  AD  LDA_Absolute                  0778 11    11 0D D0 FC 09<br />8085  29  AND_Immediate                 8086 7F    11 0D D0 FC 09<br />8087  8D  STA_Absolute                  0778 11    11 0D D0 FC 09<br />808A  29  AND_Immediate                 808B 7E    10 0D D0 FC 09<br />PPU.4000 : 16                           2000 10    10 0D D0 FC 09<br />808C  8D  STA_Absolute                  2000 10    10 0D D0 FC 09<br />808F  AD  LDA_Absolute                  0779 1E    1E 0D D0 FC 09<br />8092  29  AND_Immediate                 8093 E6    06 0D D0 FC 09<br />8094  AC  LDY_Absolute                  0774 00    06 0D 00 FC 0B<br />8097  D0  BNE                           8097 D0    06 0D 00 FC 0B<br />8099  AD  LDA_Absolute                  0779 1E    1E 0D 00 FC 09<br />809C  09  ORA_Immediate                 809D 1E    1E 0D 00 FC 09<br />809E  8D  STA_Absolute                  0779 1E    1E 0D 00 FC 09<br />80A1  29  AND_Immediate                 80A2 E7    06 0D 00 FC 09<br />80A3  8D  STA_Absolute                  2001 06    06 0D 00 FC 09<br />80A6  AE  LDX_Absolute                  2002 80    06 80 00 FC 89<br />80A9  A9  LDA_Immediate                 80AA 00    00 80 00 FC 0B<br />80AB  20  JSR                           01FB AD    00 80 00 FA 0B<br />8EE6  8D  STA_Absolute                  2005 00    00 80 00 FA 0B<br />8EE9  8D  STA_Absolute                  2005 00    00 80 00 FA 0B<br />8EEC  60  RTS                           01FC 80    00 80 00 FC 0B<br />80AE  8D  STA_Absolute                  2003 00    00 80 00 FC 0B<br />80B1  A9  LDA_Immediate                 80B2 02    02 80 00 FC 09<br />80B3  8D  STA_Absolute                  4014 02    02 80 00 FC 09<br />80B6  AE  LDX_Absolute                  0773 00    02 00 00 FC 0B<br />80B9  BD  LDA_AbsoluteX                 805A 01    01 00 00 FC 09<br />80BC  85  STA_ZeroPage                  0000 01    01 00 00 FC 09<br />80BE  BD  LDA_AbsoluteX                 806D 03    03 00 00 FC 09<br />80C1  85  STA_ZeroPage                  0001 03    03 00 00 FC 09<br />80C3  20  JSR                           01FB C5    03 00 00 FA 09<br />8EDD  AE  LDX_Absolute                  2002 00    03 00 00 FA 0B<br />8EE0  A0  LDY_Immediate                 8EE1 00    03 00 00 FA 0B<br />8EE2  B1  LDA_IndirectY                 0301 00    00 00 00 FA 0B<br />*** SCANLINE 243                        0301 00    00 00 00 FA 0B<br />8EE4  D0  BNE                           8EE4 D0    00 00 00 FA 0B<br />8EE6  8D  STA_Absolute                  2005 00    00 00 00 FA 0B<br />8EE9  8D  STA_Absolute                  2005 00    00 00 00 FA 0B<br />8EEC  60  RTS                           01FC 80    00 00 00 FC 0B</div><br />Incorrect:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">8082  AD  LDA_Absolute                  0778 11    11 05 04 FC 09<br />8085  29  AND_Immediate                 8086 7F    11 05 04 FC 09<br />8087  8D  STA_Absolute                  0778 11    11 05 04 FC 09<br />808A  29  AND_Immediate                 808B 7E    10 05 04 FC 09<br />PPU.4000 : 16                           2000 10    10 05 04 FC 09<br />808C  8D  STA_Absolute                  2000 10    10 05 04 FC 09<br />808F  AD  LDA_Absolute                  0779 1E    1E 05 04 FC 09<br />8092  29  AND_Immediate                 8093 E6    06 05 04 FC 09<br />8094  AC  LDY_Absolute                  0774 00    06 05 00 FC 0B<br />8097  D0  BNE                           8097 D0    06 05 00 FC 0B<br />8099  AD  LDA_Absolute                  0779 1E    1E 05 00 FC 09<br />809C  09  ORA_Immediate                 809D 1E    1E 05 00 FC 09<br />809E  8D  STA_Absolute                  0779 1E    1E 05 00 FC 09<br />80A1  29  AND_Immediate                 80A2 E7    06 05 00 FC 09<br />80A3  8D  STA_Absolute                  2001 06    06 05 00 FC 09<br />80A6  AE  LDX_Absolute                  2002 80    06 80 00 FC 89<br />80A9  A9  LDA_Immediate                 80AA 00    00 80 00 FC 0B<br />80AB  20  JSR                           01FB AD    00 80 00 FA 0B<br />8EE6  8D  STA_Absolute                  2005 00    00 80 00 FA 0B<br />8EE9  8D  STA_Absolute                  2005 00    00 80 00 FA 0B<br />8EEC  60  RTS                           01FC 80    00 80 00 FC 0B<br />80AE  8D  STA_Absolute                  2003 00    00 80 00 FC 0B<br />80B1  A9  LDA_Immediate                 80B2 02    02 80 00 FC 09<br />80B3  8D  STA_Absolute                  4014 02    02 80 00 FC 09<br />80B6  AE  LDX_Absolute                  0773 00    02 00 00 FC 0B<br />80B9  BD  LDA_AbsoluteX                 805A 01    01 00 00 FC 09<br />80BC  85  STA_ZeroPage                  0000 01    01 00 00 FC 09<br />80BE  BD  LDA_AbsoluteX                 806D 03    03 00 00 FC 09<br />80C1  85  STA_ZeroPage                  0001 03    03 00 00 FC 09<br />80C3  20  JSR                           01FB C5    03 00 00 FA 09<br />8EDD  AE  LDX_Absolute                  2002 00    03 00 00 FA 0B<br />8EE0  A0  LDY_Immediate                 8EE1 00    03 00 00 FA 0B<br />8EE2  B1  LDA_IndirectY                 0301 3F    3F 00 00 FA 09<br />*** SCANLINE 243                        0301 3F    3F 00 00 FA 09<br />8EE4  D0  BNE                           8EE5 AC    3F 00 00 FA 09<br />8E92  8D  STA_Absolute                  2006 3F    3F 00 00 FA 09<br />8E95  C8  INY                           8E95 C8    3F 00 01 FA 09<br />8E96  B1  LDA_IndirectY                 0302 0C    0C 00 01 FA 09<br />8E98  8D  STA_Absolute                  2006 0C    0C 00 01 FA 09<br />8E9B  C8  INY                           8E9B C8    0C 00 02 FA 09<br />8E9C  B1  LDA_IndirectY                 0303 04    04 00 02 FA 09<br />8E9E  0A  ASL_Accumulator               8E9E 0A    08 00 02 FA 08<br />8E9F  48  PHA                           01FA 08    08 00 02 F9 08<br />8EA0  AD  LDA_Absolute                  0778 11    11 00 02 F9 08<br />8EA3  09  ORA_Immediate                 8EA4 04    15 00 02 F9 08<br />8EA5  B0  BCS                           8EA5 B0    15 00 02 F9 08<br />8EA7  29  AND_Immediate                 8EA8 FB    11 00 02 F9 08<br />8EA9  20  JSR                           01F8 AB    11 00 02 F7 08<br />PPU.4000 : 17                           2000 11    11 00 02 F7 08<br />8EED  8D  STA_Absolute                  2000 11    11 00 02 F7 08<br />8EF0  8D  STA_Absolute                  0778 11    11 00 02 F7 08<br />8EF3  60  RTS                           01F9 8E    11 00 02 F9 08</div><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4328">pops</a> — Sun Apr 04, 2010 5:17 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Disch]]></name></author>
<updated>2010-04-04T17:04:08-07:00</updated>
<published>2010-04-04T17:04:08-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6260&amp;p=59625#p59625</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6260&amp;p=59625#p59625"/>
<title type="html"><![CDATA[New emu: SMB status bar flashes when scrolling]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6260&amp;p=59625#p59625"><![CDATA[
it might help if your tracer  printed what address the CPU was reading/writing instead of just the instruction and addressing mode.  As it is now, the tracer doesn't really do much of a job of illustrating what's going on.<br /><br />Where are the $2000 writes in this code?<br /><br />I assume those columns on the right are A,X,Y, but which is which?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=33">Disch</a> — Sun Apr 04, 2010 5:04 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[pops]]></name></author>
<updated>2010-04-04T17:14:50-07:00</updated>
<published>2010-04-04T16:51:58-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6260&amp;p=59622#p59622</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6260&amp;p=59622#p59622"/>
<title type="html"><![CDATA[New emu: SMB status bar flashes when scrolling]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6260&amp;p=59622#p59622"><![CDATA[
I've been putting together my first emulator over the past week. So far I have SMB working just about right... except that the status bar flashes on and off when scrolling.<br /><br />I know that the status bar is maintained in the $2000 name table, and when scrolling, the game uses $2400 as well, necessitating the sprite0 flag check at scanline 30-31 or so. On VINT, the SMB rom sets the name table address flag (D1-D0 of $2000) to 0, and then sets it back to 1 after sprite0. <br /><br />But half of the time the game almost immediately after setting D1-D0 to 0, sets it to 1 again.<br /><br />The difference between setting it to 0 and exiting, and resetting it to 1 (which happens twice(!) sometimes) is a BNE check at $8EE4; this should, I believe, not branch when the code is executing correctly.<br /><br />Key:<br />+1: PC + 1<br />+2: PC + 2<br />$0: Mem @ $0000<br />$1: Mem @ $0001<br /><br />Here's what happen's when D0-D1 is set once, to 0:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">PC__  OP_____________________           +1 +2 A_ X_ Y_ SP P_ $0 R1<br />80C3  20  JSR                           DD 8E 03 00 00 FC 09 01 03<br />8EDD  AE  LDX_Absolute                  02 20 03 00 00 FA 09 01 03<br />8EE0  A0  LDY_Immediate                 00 B1 03 00 00 FA 0B 01 03<br />8EE2  B1  LDA_IndirectY                 00 D0 03 00 00 FA 0B 01 03<br />*** SCANLINE 243                        D0 AC 00 00 00 FA 0B 01 03<br />8EE4  D0  BNE                           AC 8D 00 00 00 FA 0B 01 03<br />8EE6  8D  STA_Absolute                  05 20 00 00 00 FA 0B 01 03<br />8EE9  8D  STA_Absolute                  05 20 00 00 00 FA 0B 01 03<br />8EEC  60  RTS                           8D 00 00 00 00 FA 0B 01 03<br /></div><br /><br />Here's what happens when D0-D1 is set to 1 (erroneously I believe):<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">PC__  OP_____________________           +1 +2 A_ X_ Y_ SP P_ $0 R1<br />80C3  20  JSR                           DD 8E 03 00 00 FC 09 01 03  ;update screen with buffer contents<br />8EDD  AE  LDX_Absolute                  02 20 03 00 00 FA 09 01 03  ;reset flip-flop<br />8EE0  A0  LDY_Immediate                 00 B1 03 00 00 FA 0B 01 03  ;load first byte from indirect as a pointer<br />8EE2  B1  LDA_IndirectY                 00 D0 03 00 00 FA 0B 01 03  <br />*** SCANLINE 243                        D0 AC 3F 00 00 FA 09 01 03<br />8EE4  D0  BNE                           AC 8D 3F 00 00 FA 09 01 03  ;if byte is zero we have no further updates to make here<br />8E92  8D  STA_Absolute                  06 20 3F 00 00 FA 09 01 03  ;store high byte of vram address<br />8E95  C8  INY                           B1 00 3F 00 00 FA 09 01 03<br />8E96  B1  LDA_IndirectY                 00 8D 3F 00 01 FA 09 01 03  ;load next byte &#40;second&#41;<br />8E98  8D  STA_Absolute                  06 20 0C 00 01 FA 09 01 03  ;store low byte of vram address<br />8E9B  C8  INY                           B1 00 0C 00 01 FA 09 01 03  <br />8E9C  B1  LDA_IndirectY                 00 0A 0C 00 02 FA 09 01 03  ;load next byte &#40;third&#41;<br />8E9E  0A  ASL_Accumulator               48 AD 04 00 02 FA 09 01 03  ;shift to left and save in stack<br />8E9F  48  PHA                           AD 78 08 00 02 FA 08 01 03<br />8EA0  AD  LDA_Absolute                  78 07 08 00 02 F9 08 01 03  ;load mirror of $2000,<br />8EA3  09  ORA_Immediate                 04 B0 11 00 02 F9 08 01 03  ;set ppu to increment by 32 by default<br />8EA5  B0  BCS                           02 29 15 00 02 F9 08 01 03  ;if d7 of third byte was clear, ppu will<br />8EA7  29  AND_Immediate                 FB 20 15 00 02 F9 08 01 03  ;only increment by 1<br />8EA9  20  JSR                           ED 8E 11 00 02 F9 08 01 03  ;write to register<br />8EED  8D  STA_Absolute                  00 20 11 00 02 F7 08 01 03<br />PPU.4000 : 17                           8D 78 11 00 02 F7 08 01 03<br /></div><br /><br />I've been staring this error down for a couple of hours now - it's the first major stumbling block I've run up against, and I have no idea what's going wrong. Could someone give me a hint as to what I'm doing wrong?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4328">pops</a> — Sun Apr 04, 2010 4:51 pm</p><hr />
]]></content>
</entry>
</feed>