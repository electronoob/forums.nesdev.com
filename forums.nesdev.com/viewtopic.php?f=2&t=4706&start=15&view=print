<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - [President] Remembering collected items without extra RAM?</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">[President] Remembering collected items without extra RAM?</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=4706">http://forums.nesdev.com/viewtopic.php?f=2&amp;t=4706</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>2</strong> of <strong>4</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>UncleSporky</b> [ Thu Jan 08, 2009 2:06 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />You guys who have made full games before, what does your RAM look like?  How much do you devote to each task?  How much for active objects, level maps, random flags and variables?
<br />
<br />I've seen incomplete maps for games like Super Mario Bros. and they're always fragmented and hard to read, almost haphazard.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Thu Jan 08, 2009 2:16 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">UncleSporky wrote:</div><div class="quotecontent">You guys who have made full games before, what does your RAM look like?  How much do you devote to each task?  How much for active objects, level maps, random flags and variables?</div>
<br />How many complete homebrew games can you list that had complex level maps and dynamic objects? I can list none. Most have a few constant objects, little to no screen movement, and look pretty comfortable in 2KB.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Thu Jan 08, 2009 2:28 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Yes, I could do checkpoints that break backtracking. SMB1 had checkpoints, namely the flagpoles.
<br />
<br /><div class="quotetitle">UncleSporky wrote:</div><div class="quotecontent">That's 447 things in the level that are interactive and would need at least 1 bit to indicate whether they still exist in their original state.  (The multi coin blocks would require more.)  If all you needed was 1 bit each that's 56 bytes for the whole level not including the pipe detour, ending staircase, or anything else I might've missed.</div>
<br />True, I could devote a 64-byte buffer to tracking things that have been interacted with. But how would I associate each interactive thing to an address in this bitfield as the map is decoded?
<br />
<br />Backtracking, destruction, no PRG RAM: pick two.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Thu Jan 08, 2009 2:51 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">Backtracking, destruction, no PRG RAM: pick two.</div>
<br />If you don't take the challenge, I will. I was planning on making the Sonic game into something else anyway because a) Sonic physics are way too complex for my little head to recreate; b) I can't sell/spread a game containing a copyrighted character. I know I might fail after all, but right now I feel like taking the challenge, because it just seems possible.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Thu Jan 08, 2009 2:52 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">You guys who have made full games before, what does your RAM look like? How much do you devote to each task? How much for active objects, level maps, random flags and variables? </div><br />In fact there is only 2 full games yet, namely Solar Wars and NeSnake 2. None of them implement any scrolling of any sort, and both are not side-scrolling platformers.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Backtracking, destruction, no PRG RAM: pick two.</div><br />I'd guess it pretty much summaries things well. Altough in Castlevnania, you can pick candles that won't reapear, it is possible to backtrack in a range that is limited by 2 doors and there is no PRG RAM. There is some walls that destroys themselves to leave secrets, but in small quantities (compared to destroyable blocks in SMB games). Also, if you backtrack, the wall will be here again and won't be destroyable.<br /><br />Oh by the way it's fun but in modern Castlevania games, the candles re-appear when you exit a room and go back in. The NES games too if you take stairs, but not if you just backtrack in the same screen.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">b) I can't sell/spread a game containing a copyrighted character</div>
<br />Why everyone on this board seems suddently attracted by $$$$ ?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>smkd</b> [ Thu Jan 08, 2009 5:28 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />i think all a video game needs is player interaction and some sort of goal for the player to aim for, why would it need anything more to be classified as a 'video game'?
<br />
<br />i've only made one game which scrolls but doesn't have to account for anything but previously loaded sprites, it all operates in about 1kb or slightly over.  to get back on topic i think tepples is right with this:
<br />
<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Backtracking, destruction, no PRG RAM: pick two.</div>
<br />
<br />if you really want 'destruction' in terms of being able to change any block on map to either a preset alternative or a completely different block altogether it pretty much calls for PRG-RAM.  MC Kids programmer cited 600~ bytes or whatever it was to have 1 bit assigned for each block on the map so even the simplest method of having every block on the map being able to be assigned at the very minimum a preset alternate already blows away a huge amount of your RAM budget, and it's still not as flexible as having PRG-RAM levels.  i do not have smb3 editors/roms here at the moment i would assume both games which both store levels in RAM would have a similar number of blocks in the level.
<br />
<br />smb3 if i remember right mainly has only 1 possible alternate for block destruction (used block for powerups, blank space for smashable bricks).  but then there's the multiple coin bocks as has been mentioned along with for example the ice blocks which can have a froze, melted, and collected status.  1bit per block is not enough to handle a game like smb3 because of these special cases.
<br />
<br />sprites i think is dead simple alot of games didn't have any trouble with it.  a 32 sprite table and you already have the capacity to avoid loading sprites after they've been 'expended' with up to 256 sprites in your level.  i don't believe you could recreate smb3 without prg ram without making enormous sacrifices with RAM to get block changes right (2 bits per object is over half your RAM).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Thu Jan 08, 2009 5:41 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I've split the fan game copyright discussion to a separate topic.
<br />
<br />I thought of two reasonable compromises, selected by a flag per map.
<br />
<br /><strong>Limit backtracking:</strong> Let the player back the screen up a bit, still staying within that two-screen-wide sliding window. If you've played Super Mario Bros. Deluxe for GBC, you might understand what I'm talking about.
<br />
<br /><strong>Limit interactive object density:</strong> Allow only one "interactive" object, such as a coin or ? block, per column. A 64-byte buffer would allow 32 screens between checkpoints, which is wider than the 24 screens of SMB1's 8-1. (Thanks UncleSporky for the map link.)
<br />
<br />
<br />Oh, and "President" stands for Another Side Scroller Hosted On a Limited Environment. (Die, hinmin!)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>UncleSporky</b> [ Thu Jan 08, 2009 6:40 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">Yes, I could do checkpoints that break backtracking. SMB1 had checkpoints, namely the flagpoles.</div><br />I meant the way Mario 3 does it in many worlds.  As one example, this door:<br /><br /><img src="http://img388.imageshack.us/img388/3543/supermariobrothers30hc7.png" alt="Image" /><img src="http://img387.imageshack.us/img387/4552/supermariobrothers31jf1.png" alt="Image" /><br /><br />Additionally Mario 3 has quite a few autoscrolling levels.  Clearly they do these things for gameplay rather than to be economical with RAM but I wanted to illustrate the concept.  You don't have to call a level finished in order to clear part of memory and start fresh.<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">True, I could devote a 64-byte buffer to tracking things that have been interacted with. But how would I associate each interactive thing to an address in this bitfield as the map is decoded?</div><br />Well here's an interesting thought experiment.  You could employ one type of system that would only work for mostly static objects.  By this I mean blocks or coins, or blocks that are thrown and destroyed; anything that doesn't leave its origin point and survive.  Objects that fall under this category would need a flag.  You also need a pointer to where you are in the bitfield, an index for where you are within the byte, and a counter for the total number of bitfield positions currently in memory.  (An 8-bit counter could only handle about 2/3 of 30x12 metatiles being filled.)<br /><br />Set every flag in the bitfield to 1 when the level is loaded.  Also at the start of a level, you iterate through the objects currently in memory, incrementing your index and stopping at the far edge of the screen (usually right).  As the player runs through the level and new tiles are loaded, you continue to iterate through each new line vertically.  If any bits are zero, you don't load that object.<br /><br />Any time an object is destroyed or otherwise irreversably removed, it leaves behind a special byte at that map location (rather than just turning into a sky tile or something).  As objects scroll out of memory and are unloaded, you compare your bitfield (decremented by the counter) with the objects in that column.  If they are still present, you leave the 1.  If the special byte is present then they have been removed and you write a 0.<br /><br />This method would not work well for keeping track of a map taller than one screen.  If absolutely necessary you could load vertically as well (30x24) since you must continue scanning sequentially for it to work.  Note that games such as Mario 3 and McKids never have backtrackable areas more than two screens tall and often have a minimum of objects on the higher screen.  If you need to record a second layer of objects such as a front-and-back castle, I can think of no other way than to have a second bitfield.<br /><br />Extremely cumbersome and with many caveats.  Perhaps too slow to work.  But that's just the first way that occurred to me, and I'm not very good at figuring this stuff out yet; I'm sure there are better ways.  Perhaps a system to divide the map into metascreens and keep track of the objects per screen.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Limit interactive object density: Allow only one "interactive" object, such as a coin or ? block, per column. A 64-byte buffer would allow 32 screens between checkpoints, which is wider than the 24 screens of SMB1's 8-1.</div>
<br />
<br />See, that's what I mean, you guys are a lot more clever than I. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />
<br />
<br />Personally, if I were determined to operate with 2k RAM, I would design my game around the limitation.  Rooms with excessive numbers of objects would be non-returnable, utilize checkpoints and autoscrolling levels, etc.  It would be an interesting challenge.
<br />
<br />This is really your worst case scenario, typically it's going to be far better than this:
<br />
<br /><img src="http://img444.imageshack.us/img444/2388/roomuv5.png" alt="Image" />
<br />
<br />By the way, <a href="http://www.vgmaps.com/Atlas/NES/index.htm" class="postlink">for more study/reference on level design...</a>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Thu Jan 08, 2009 7:40 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">smkd wrote:</div><div class="quotecontent">MC Kids programmer cited...</div><br />I really think people should stop quoting that guy for the truth. MC Kids is a mediocre game that lacks a lot and in many areas. Any good programmer reading his article can tell many things were done inefficiently and in a half-assed way.<br /><br />I admit he's got the fact that he finished a game to back him up, something most of us here do not, but that doesn't mean we can't see the flaws in his designs.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">but then there's the multiple coin bocks as has been mentioned along with for example the ice blocks which can have a froze, melted, and collected status.  1bit per block is not enough to handle a game like smb3 because of these special cases.</div>
<br />Did you read my idea that combines 1-bit flags with multi-byte states? The idea consists on having one bit for every object, and the order in which the objects are arranged in the object table (or whatever you call it) define which bits they use (first object = first bit). There will be some wasted bits, because not all objects need them.
<br />
<br />Anyway, in addition to the single bit, complex objects can make use of more memory simply by indicating what part of a block of memory reserved for objects it wants to use. This pointer is in the definition of the object, along with it's coordinates, type, etc. This means that each instance of that type of object can use a different part of that memory block. If you set aside, say, 128 bytes for this block, all the complex objects of the level combined can't use more than 128 bytes for remembering states.
<br />
<br />This makes it possible to remember more information about the objects that really need it.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Fri Jan 09, 2009 2:50 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Limit backtracking: Let the player back the screen up a bit, still staying within that two-screen-wide sliding window. If you've played Super Mario Bros. Deluxe for GBC, you might understand what I'm talking about. </div>
<br />Well, SMB Deluxe is probably limiting the backtracking as the NES version does, but since the GBC screen is smaller, the scroll depending where Mario is on the Screen, and that was cheap in my opinion (aslo the GBC have more system RAM than the NES, and I guess that particular cartridge also have extra RAM with battery).
<br />
<br />If you plan to limit the backtracking, it's much more clever to limit backtracking with doors and/or fast scrolling screen split as does Castlevania and Mega Man games respectively. (I guess SMB3 doors counts as well, but they are much rarer than CV doors and done in a different style. In the case show above it's clearly because of raster effects).
<br />
<br />Also, a door would look stupid for a game that happens on the outside.
<br />
<br />@smkd: Do you really want to turn on your NES and play with a 1k game without music for hours ? I personally dont.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>smkd</b> [ Fri Jan 09, 2009 7:16 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />tokumaru: mc kids being mediocre doesn't change how many bits there are in a byte and the fact that if you want to assign 1 bit for every block in the level, you need totalblocks/8 bytes.  all the author did was run a quick formula based on block counts in his level, how does mediocre programming come into this? i only used it for example's sake.
<br />
<br />the pointer into the block of memory for multi-byte states sounds nice, although the limitation irks me (inevitable i guess), to make levels as SMB3 presented them would just need finding the worst case scenario and allocating enough memory for this while still having enough for everything else if that's even possible.  i'm not sure how much RAM SMB3 requires, or if i should even keep bringing up SMB3...
<br />
<br />how will it be accessed when the player or an enemy touches it? when for example the player touches a block in the level and it needs to change state in this state table, how is it going to reach the associated pointer? sequentially running through the block data until matching coordinates are found would be dead slow.  you could have an additional table that for every block buffered (like how SMB1 does it for an area 2 screens wide) an index into this state table is stored for quick lookup with a huge RAM cost.  what idea do you have in mind.
<br />
<br />could you post a mockup ram map for this layout in the 2kb since it's an interesting topic and i'd like to see how someone else would pull this off.
<br />
<br />bregalad: personally i couldn't play any game for hours at a time although lack of music wouldn't push me much closer to the power-off button.  not sure what point youre trying to address though.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Fri Jan 09, 2009 7:34 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">Well, SMB Deluxe is probably limiting the backtracking as the NES version does, but since the GBC screen is smaller, the scroll depending where Mario is on the Screen, and that was cheap in my opinion (aslo the GBC have more system RAM than the NES</div><br />For one thing, the GBC forces one-screen mirroring, with a 10x9-metatile viewable window within a 16-metatile-wide sliding window on the map. (I'm using vertical.) For another, some of the game's puzzles (e.g. 4-4, 7-4, 8-4) rely on the lack of backtracking.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">If you plan to limit the backtracking, it's much more clever to limit backtracking with doors and/or fast scrolling screen split as does Castlevania and Mega Man games respectively.</div><br />But if you have a gate every screen or two, it turns into Pitfall or A Boy and His Blob very quickly. And I always thought Mega Man had the quick scroll because of CHR size limitations.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Also, a door would look stupid for a game that happens on the outside.</div>
<br /><a href="http://en.wikipedia.org/wiki/Gate" class="postlink">Not necessarily</a>.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Fri Jan 09, 2009 7:52 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">For one thing, the GBC forces one-screen mirroring, with a 10x9-metatile viewable window within a 16-metatile-wide sliding window on the map. (I'm using vertical.) For another, some of the game's puzzles (e.g. 4-4, 7-4, 8-4) rely on the lack of backtracking. </div><br />Yeah I guess it's close to the same size of a NES nametable, but since the screen is smaller it is possible to scroll without glitches. You get a good point here.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">But if you have a gate every screen or two, it turns into Pitfall or A Boy and His Blob very quickly. And I always thought Mega Man had the quick scroll because of CHR size limitations.<br /></div>
<br />As long as you keep descroyable objects under a certain amont between two doors I don't see the problem. And yes if you do it Mega Man like you could get 2-in-1 (altough you are right Mega Man does this for CHR and not for backtracking, as backtacking is mostly allowed in Mega Man games).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dwedit</b> [ Fri Jan 09, 2009 9:42 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />For some reason, I get the impression that Mega Man 1 was designed to be a FDS game.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Fri Jan 09, 2009 11:34 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">smkd wrote:</div><div class="quotecontent">tokumaru: mc kids being mediocre doesn't change how many bits there are in a byte and the fact that if you want to assign 1 bit for every block in the level, you need totalblocks/8 bytes.  all the author did was run a quick formula based on block counts in his level, how does mediocre programming come into this?</div><br />It comes in because he used the simple straightforward idea of assigning 1 bit to each block in the level. This is obviously wasteful, because not all blocks will change state. If more thought was given to the problem, a better idea could come up that would make it possible. You can't say something is impossible just because it is so using a specific method. Chances are there is a way to make it happen.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">i only used it for example's sake.</div><br />It's just that is has pissed me off lately that whenever we talk about platform games that article is quoted, probably just because it is the largest compilation of platforming material. But that doesn't mean the information contained there is the standard or the best that can be done for the NES, it's just what worked for that little mediocre game.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">i'm not sure how much RAM SMB3 requires, or if i should even keep bringing up SMB3...</div><br />If tepples wants to clone SMB3, we definitely should be talking about it.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">how will it be accessed when the player or an enemy touches it? when for example the player touches a block in the level and it needs to change state in this state table, how is it going to reach the associated pointer?</div><br />There are many ways to do that. If there were not many blocks, I'd say just treat them as active objects, apply regular object x object collision, and store the pointer to the state memory as part of the object's properties. I can see how this would be slow in cases where there are many blocks.<br /><br />One solution I can think of is having a rectangular array of blocks as a level object, and it could act as a map within the map.<br /><br />The fastest way would probably be to hardcode the blocks to map locations, and special metatile codes would be linked to the interactive blocks that change state. Maybe a pointer to the state could be stored right after the metatile type, if the map doesn't require that 1 metatile be defined by only 1 byte. That way, only interactive blocks would have state bits.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">could you post a mockup ram map for this layout in the 2kb since it's an interesting topic and i'd like to see how someone else would pull this off.</div>
<br />I'd have to think more than I'm willing to right now, but I'll see if I find a suitable RAM map description from an old archive of my project, from when I was still planning it for just 2KB.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>2</strong> of <strong>4</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>