<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Program counter [ca65]</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Program counter [ca65]</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=10435">http://forums.nesdev.com/viewtopic.php?f=2&amp;t=10435</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>3</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>StephenM</b> [ Fri Aug 30, 2013 10:55 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Program counter [ca65]</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />My goal here is to write a nes rom in assembly using ca65 which sets the accumulator to $FF and loops forever.<br /><br />I have been looking over the following list of articles:<br /><br /><a href="http://shiru.untergrund.net/articles/programming_nes_games_in_c.htm" class="postlink">http://shiru.untergrund.net/articles/programming_nes_games_in_c.htm</a><br /><a href="http://oliverschmidt.github.io/cc65/doc/ld65-5.html" class="postlink">http://oliverschmidt.github.io/cc65/doc/ld65-5.html</a><br /><a href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=9896&amp;p=109046&amp;hilit=nes.cfg#p109046" class="postlink">http://forums.nesdev.com/viewtopic.php?f=2&amp;t=9896&amp;p=109046&amp;hilit=nes.cfg#p109046</a><br /><a href="http://forums.nesdev.com/viewtopic.php?t=3816" class="postlink">http://forums.nesdev.com/viewtopic.php?t=3816</a><br /><br />And based on my understanding (or lack thereof) I have distilled everything to the following two files.<br /><br />My &quot;nes.cfg&quot; file:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">MEMORY {<br />&nbsp; &nbsp;RAM:&nbsp; &nbsp; start = $0000, size = $1FFF;<br />&nbsp; &nbsp;IOREG:&nbsp; start = $2000, size = $201F;<br />&nbsp; &nbsp;EXROM:&nbsp; start = $4020, size = $1FDF;<br />&nbsp; &nbsp;SRAM:&nbsp; &nbsp;start = $6000, size = $1FFF;<br />&nbsp; &nbsp;PRGROM: start = $8000, size = $7FFF;<br />}<br /><br />SEGMENTS {<br />&nbsp; &nbsp;HEADER:&nbsp; load = RAM,&nbsp; &nbsp; type = ro;<br />&nbsp; &nbsp;STARTUP: load = PRGROM, type = ro;<br />&nbsp; &nbsp;VECTORS: load = PRGROM, type = ro;<br />&nbsp; &nbsp;CHARS:&nbsp; &nbsp;load = PRGROM, type = ro;<br />}<br /></div><br /><br />My assembly code:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">; TESTING<br />; cl65 -t nes test.s<br /><br />.segment &quot;HEADER&quot;<br />&nbsp; &nbsp;.byte &quot;NES&quot; ; signature<br />&nbsp; &nbsp;.byte $1A&nbsp; &nbsp;; signature<br />&nbsp; &nbsp;.byte $01&nbsp; &nbsp;; # of 16kb PRG-ROM banks<br />&nbsp; &nbsp;.byte $01&nbsp; &nbsp;; # of 8kb VROM banks<br />&nbsp; &nbsp;.byte $00&nbsp; &nbsp;; ROM control byte one<br />&nbsp; &nbsp;.byte $00&nbsp; &nbsp;; ROM control byte two<br />&nbsp; &nbsp;.byte $01&nbsp; &nbsp;; # of 8kb RAM banks<br />&nbsp; &nbsp;.byte $00&nbsp; &nbsp;; reserved<br /><br />.segment &quot;STARTUP&quot;<br /><br />INIT:<br />&nbsp; &nbsp;LDA #$FF<br />LOOP:<br />&nbsp; &nbsp;JMP LOOP<br /><br />.segment &quot;VECTORS&quot;<br /><br />&nbsp; &nbsp;<br />.segment &quot;CHARS&quot;<br /><br /><br /></div><br /><br />Using an emulator I am able to see the my &quot;LDA #$FF&quot; instruction is indeed being loaded into memory at the correct location by the accumulator isn't being set - which, given what I know, means the program counter isn't making it to $8000 - where my code is.<br /><br />Any ideas on what I'm missing here?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Fri Aug 30, 2013 11:11 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Program counter [ca65]</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />You need to add the RESET vector (it tells 6502 what address to jump to when the CPU is reset). You also need to specify a base address $FFFA for the VECTORS segment.<br /><br />Since you're using an emulator, right now you should see that when the program starts, PC is set to 0 (the value at the RESET vector, since you haven't specified it).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Fri Aug 30, 2013 11:26 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Program counter [ca65]</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">StephenM wrote:</div><div class="quotecontent"><div class="codetitle"><b>Code:</b></div><div class="codecontent">MEMORY {<br />&nbsp; &nbsp;RAM:&nbsp; &nbsp; start = $0000, size = $1FFF;<br />&nbsp; &nbsp;IOREG:&nbsp; start = $2000, size = $201F;<br />&nbsp; &nbsp;EXROM:&nbsp; start = $4020, size = $1FDF;<br />&nbsp; &nbsp;SRAM:&nbsp; &nbsp;start = $6000, size = $1FFF;<br />&nbsp; &nbsp;PRGROM: start = $8000, size = $7FFF;<br />}<br /><br />SEGMENTS {<br />&nbsp; &nbsp;HEADER:&nbsp; load = RAM,&nbsp; &nbsp; type = ro;<br />&nbsp; &nbsp;STARTUP: load = PRGROM, type = ro;<br />&nbsp; &nbsp;VECTORS: load = PRGROM, type = ro;<br />&nbsp; &nbsp;CHARS:&nbsp; &nbsp;load = PRGROM, type = ro;<br />}</div></div><br />Your sizes are all one too small. The way you have the segments will cause even the RAM ones to be written to the file. Here's a .cfg that I've used before that's straight forward and sets up all the zeropage, bss areas:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent"># ca65 configuration for iNES file<br /><br /># Defines areas where code/data is put into memory during linking<br /># fill=yes forces area to be padded to specified size in output<br />MEMORY<br />{<br />&nbsp; &nbsp; # 2K RAM in NES<br />&nbsp; &nbsp; ZP:&nbsp; &nbsp; &nbsp; start =&nbsp; &nbsp; &nbsp;0, size =&nbsp; $100, type = rw;<br />&nbsp; &nbsp; # Skip the $100 bytes for stack<br />&nbsp; &nbsp; SRAM:&nbsp; &nbsp; start =&nbsp; $200, size =&nbsp; $600, type = rw;<br />&nbsp; &nbsp; <br />&nbsp; &nbsp; # Pseudo area for iNES header<br />&nbsp; &nbsp; HEADER:&nbsp; start =&nbsp; &nbsp; &nbsp;0, size =&nbsp; &nbsp; 16, type = ro, fill = yes;<br />&nbsp; &nbsp; <br />&nbsp; &nbsp; # ROM<br />&nbsp; &nbsp; ROM:&nbsp; &nbsp; &nbsp;start = $8000, size = $7FFA, type = ro, fill = yes;<br />&nbsp; &nbsp; VECTORS: start = $FFFA, size =&nbsp; &nbsp; &nbsp;6, type = ro, fill = yes;<br />&nbsp; &nbsp; <br />&nbsp; &nbsp; # CHR ROM<br />&nbsp; &nbsp; CHARS:&nbsp; &nbsp;start =&nbsp; &nbsp; &nbsp;0, size = $2000, type = ro, fill = yes;<br />}<br /><br /># Defines named segments you refer to in assembler, and sets up order<br /># of data in output file<br /># align=$100 allows use of .align directive with a value up to $100<br />SEGMENTS<br />{<br />&nbsp; &nbsp; # These make up the iNES file<br />&nbsp; &nbsp; HEADER:&nbsp; &nbsp;load = HEADER, type = ro;<br />&nbsp; &nbsp; CODE:&nbsp; &nbsp; &nbsp;load = ROM,&nbsp; &nbsp; type = ro, align = $100;<br />&nbsp; &nbsp; VECTORS:&nbsp; load = VECTORS,type = ro;<br />&nbsp; &nbsp; CHARS:&nbsp; &nbsp; load = CHARS,&nbsp; type = ro;<br />&nbsp; &nbsp; <br />&nbsp; &nbsp; # These put data into memory<br />&nbsp; &nbsp; ZEROPAGE: load = ZP,&nbsp; &nbsp; &nbsp;type = zp;<br />&nbsp; &nbsp; BSS:&nbsp; &nbsp; &nbsp; load = SRAM,&nbsp; &nbsp;type = bss;<br />}</div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>StephenM</b> [ Sat Aug 31, 2013 8:51 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Program counter [ca65]</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Thank you for the advice, I seem to be making process.<br /><br />Is it normal for ld65 to throw the following warning messages if &quot;STARTUP&quot; isn't defined in the &quot;nes.cfg&quot; file segments section?<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">ld65.exe: Warning: [builtin config](37): Segment 'STARUP' does not exist<br /></div><br /><br />The &quot;buildin config&quot; in that warning message has me worried that ld65 isn't actually using my nes.cfg file (my cfg also doesn't have a line 37)... the nes.cfg is within the same folder as my code and I'm running cl65.exe from this folder as well (enviromental variable). I installed cc65 from an executable so all relevant cc65 folders/binaries are in my &quot;Program Files/cc65/&quot; directory. During my investigation I noticed this directory &quot;/cc65/cfg/&quot; contains what appears to be some default config files but moving these files doesn't make a difference (which I guess makes sense since they all look like they are for the Apple ][ anyway).<br /><br />Here are me new files, taking into account what <em>thefox</em> and <em>blargg</em> mentioned:<br /><br />&quot;nes.cfg&quot;<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">MEMORY {<br />&nbsp; &nbsp;ZP:&nbsp; &nbsp; &nbsp; start = $0000, size = $0100, type = rw;<br />&nbsp; &nbsp;SRAM:&nbsp; &nbsp; start = $0200, size = $0600, type = rw;<br />&nbsp; &nbsp;<br />&nbsp; &nbsp;ROM:&nbsp; &nbsp; &nbsp;start = $8000, size = $7FFA, type = ro, fill = yes;<br />&nbsp; &nbsp;VECTORS: start = $FFFA, size = $0006, type = ro, fill = yes;<br />&nbsp; &nbsp;<br />&nbsp; &nbsp;CHARS:&nbsp; &nbsp;start = $0000, size = $2000, type = ro, fill = yes;<br />&nbsp; &nbsp;<br />&nbsp; &nbsp;HEADER:&nbsp; start = $0000, size = $0016, type = ro, fill = yes;<br />}<br /><br />SEGMENTS {<br />&nbsp; &nbsp;HEADER:&nbsp; &nbsp;load = HEADER,&nbsp; type = ro;<br />&nbsp; &nbsp;CODE:&nbsp; &nbsp; &nbsp;load = ROM,&nbsp; &nbsp; &nbsp;type = ro,&nbsp; align = $0100;<br />&nbsp; &nbsp;VECTORS:&nbsp; load = VECTORS, type = ro;<br />&nbsp; &nbsp;CHARS:&nbsp; &nbsp; load = CHARS,&nbsp; &nbsp;type = ro;<br />&nbsp; &nbsp;<br />&nbsp; &nbsp;ZEROPAGE: load = ZP,&nbsp; &nbsp; &nbsp; type = zp;<br />&nbsp; &nbsp;BSS:&nbsp; &nbsp; &nbsp; load = SRAM,&nbsp; &nbsp; type = bss;<br />}<br /></div><br /><br />&quot;test.s&quot;<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">; TESTING<br />; cl65 -t nes -o test.nes test.s<br /><br />.segment &quot;HEADER&quot;<br />&nbsp; &nbsp;.byte &quot;NES&quot; ; signature<br />&nbsp; &nbsp;.byte $1A&nbsp; &nbsp;; signature<br />&nbsp; &nbsp;.byte $01&nbsp; &nbsp;; # of 16kb PRG-ROM banks<br />&nbsp; &nbsp;.byte $01&nbsp; &nbsp;; # of 8kb VROM banks<br />&nbsp; &nbsp;.byte $00&nbsp; &nbsp;; ROM control byte one<br />&nbsp; &nbsp;.byte $00&nbsp; &nbsp;; ROM control byte two<br />&nbsp; &nbsp;.byte $01&nbsp; &nbsp;; # of 8kb RAM banks<br />&nbsp; &nbsp;.byte $00&nbsp; &nbsp;; reserved<br /><br />.segment &quot;CODE&quot;<br /><br />RESET:<br />&nbsp; &nbsp;LDA #$FF<br />&nbsp; &nbsp;JMP LOOP<br />LOOP:<br />&nbsp; &nbsp;JMP LOOP<br /><br />NMI:<br />IRQ:<br /><br />.segment &quot;VECTORS&quot;<br />&nbsp; &nbsp;.word NMI<br />&nbsp; &nbsp;.word RESET<br />&nbsp; &nbsp;.word IRQ<br /><br /></div><br /><br />The accumulator currently isn't being set, nor is the PC changing its value<br /><br />EDIT: I just realized this post probably fits better in &quot;Newbie Help Center&quot; section, apologies.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Movax12</b> [ Sat Aug 31, 2013 9:20 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Program counter [ca65]</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Regarding the linker, or actually the cl65 compile and link utility, you should use: <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">cl65 -t none -C nes.cfg</tt> <br />Apparently ca65 and ld65 will default to none, but cl65 will default to c64, and <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">-t nes</tt> will use a default linker config designed for use with C.<br /><br />I think you need to move your HEADER entry in the MEMORY section to be the first line, or at least the first line with <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">type = ro</tt>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Jarhmander</b> [ Sat Aug 31, 2013 9:22 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Program counter [ca65]</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Sorry, I won't be helping you with the code here, but rather give you a compliment.<br /><br />How often do we see (new(b)) people trying to make a game <em>from the start</em> then ask for help here because it doesn't assemble/run? What I admire here is that you begin with the most trivial program and verify that it works. When asking for help, this is very great because we don't have to wade through lot of code, we essentially focus on your specific problem (here your setup). You even use a debugger to check if the code run correctly. I suspect you know already programmed in some other programming language, don't you?<br /><br />Cheers, man  <img src="./images/smilies/Mfr_icon_homebrew.png" alt=":beer:" title="Beer" /> ― and welcome to the nesdev forums!  <img src="./images/smilies/icon_wink.gif" alt=":wink:" title="Wink" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Sat Aug 31, 2013 9:28 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Program counter [ca65]</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />cl65, I never knew about a single-command assemble-and-link, nice!<br /><br />As for segments not defined, you can make some optional, which is nice for say CHARS if you want the .s file able to decide between CHR RAM and CHR ROM without needing separate .cfg files:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">MEMORY {<br />&nbsp; &nbsp; &#91;...&#93;<br />&nbsp; &nbsp; CHARS:&nbsp; start = 0, size = $2000;<br />}<br />SEGMENTS {<br />&nbsp; &nbsp; &#91;...&#93;<br />&nbsp; &nbsp; CHARS: load = CHARS, type = ro, optional=yes;<br />}</div><br />This way if you don't put anything into the CHARS segment, you won't get a warning (the optional=yes part arranges this) and won't get anything besides the iNES header and PRG data in the output file. A caveat is that because you now don't have (and can't have) fill=yes in the MEMORY section, you must be sure to completely fill CHARS if you define any of it, or it won't be the full $2000 bytes. e.g. .incbin &quot;mychars.bin&quot; where that file is 8K.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Sat Aug 31, 2013 9:44 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Program counter [ca65]</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">blargg wrote:</div><div class="quotecontent">you must be sure to completely fill CHARS if you define any of it, or it won't be the full $2000 bytes. e.g. .incbin &quot;mychars.bin&quot; where that file is 8K.</div><br />Tangenting here a bit, but in this case it's a good idea to set <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">define=yes</tt> for the segment in the config and use an <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">.assert</tt>. Something like (not tested):<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">.assert ( __CHARS_SIZE__ &amp; $1FFF ) = 0, error, &quot;CHARS size not a multiple of $2000&quot;<br /></div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Movax12</b> [ Sat Aug 31, 2013 9:50 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Program counter [ca65]</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">blargg wrote:</div><div class="quotecontent">cl65, I never knew about a single-command assemble-and-link, nice!<br /></div><br /><br />You should look into using make with cc65, it works well with cl65 dependency files. It might require some modifying to get it working as you like/expect, but it's very helpful for larger projects when you get it working well.<br /><br /><!-- m --><a class="postlink" href="http://wiki.cc65.org/doku.php?id=cc65:project_setup">http://wiki.cc65.org/doku.php?id=cc65:project_setup</a><!-- m -->

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Sat Aug 31, 2013 9:51 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Program counter [ca65]</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />By the way, if you prefer to put the alignment in the SEGMENTS rather than MEMORY, this can also be done. I prefer this, especially when banking, so I can basically just have one MEMORY line per bank, and then as many SEGMENTS as I need to align within each bank. Here's an example NROM config:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">MEMORY {<br />&nbsp; &nbsp; ZP:&nbsp; &nbsp; &nbsp;start = $00,&nbsp; &nbsp; size = $100,&nbsp; &nbsp; type = rw, file = &quot;&quot;;<br />&nbsp; &nbsp; RAM:&nbsp; &nbsp; start = $0200,&nbsp; size = $600,&nbsp; &nbsp; type = rw, file = &quot;&quot;;<br />&nbsp; &nbsp; HDR:&nbsp; &nbsp; start = $0000,&nbsp; size = $10,&nbsp; &nbsp; &nbsp;type = ro, file = %O, fill = yes;<br />&nbsp; &nbsp; PRG:&nbsp; &nbsp; start = $8000,&nbsp; size = $8000,&nbsp; &nbsp;type = ro, file = %O, fill = yes;<br />&nbsp; &nbsp; CHR:&nbsp; &nbsp; start = $0000,&nbsp; size = $2000,&nbsp; &nbsp;type = ro, file = %O, fill = yes;<br />}<br /><br />SEGMENTS {<br />&nbsp; &nbsp; ZEROPAGE:&nbsp; &nbsp;load = ZP,&nbsp; type = zp;<br />&nbsp; &nbsp; BSS:&nbsp; &nbsp; &nbsp; &nbsp; load = RAM, type = bss;<br />&nbsp; &nbsp; HEADER:&nbsp; &nbsp; &nbsp;load = HDR, type = ro;<br />&nbsp; &nbsp; CODE:&nbsp; &nbsp; &nbsp; &nbsp;load = PRG, type = ro, start = $8000;<br />&nbsp; &nbsp; DPCM:&nbsp; &nbsp; &nbsp; &nbsp;load = PRG, type = ro, start = $C000, optional = yes;<br />&nbsp; &nbsp; VECTORS:&nbsp; &nbsp; load = PRG, type = ro, start = $FFFA;<br />&nbsp; &nbsp; TILES:&nbsp; &nbsp; &nbsp; load = CHR, type = ro;<br />}</div><br /><br />The other nice feature is that segments can be optional. In this example if you don't use DPCM, that's perfectly fine, and you can also fill CODE up past $C000 if you don't put anything in the DPCM segment.<br /><br />You also don't have to specify size with segments. They will just fill the space they're given if defined like this.<br /><br />Edit: CHR size was accidentally $4000 instead of $2000.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sat Aug 31, 2013 12:14 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Program counter [ca65]</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I made a <a href="http://forums.nesdev.com/viewtopic.php?f=22&amp;t=7991&amp;hilit=simple+sprite+demo+for+teaching" class="postlink">fairly minimal working example</a> of using ca65/ld65 with GNU Make.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>StephenM</b> [ Sat Aug 31, 2013 1:58 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Program counter [ca65]</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />==<br />Thank you <em>Jarhmander</em> for a warm welcome!! I have experience with quite a few different programming languages but have always had a sweet spot in my heart for low level languages like C and ASM (strangely I wish more aspects of life required ASM, like my job  <img src="./images/smilies/icon_lol.gif" alt=":lol:" title="Laughing" /> ). During the most recent Ludum Dare game jam I participated in, someone was making a NES game and I was instantly found a new hobby (a wonderful mix of challenge and nostalgia).<br /><br />==<br /><em>Movax12</em>, thank you! I won't have guessed that cl65 defaults to c64 config, this is extremely good to know.<br /><br />==<br /><em>tepples</em>, your examples are very helpful. The &quot;nes.ini/nes.cfg&quot; file in the &quot;nrom-template&quot; is what actually got my code working!! So my original goal is complete but I have a bigger problem.<br /><br />==<br />I don't understand the difference between <em>rainwarrior</em>'s config file and the config file I got from the &quot;nrom-template&quot; (<a href="http://forums.nesdev.com/viewtopic.php?t=7991" class="postlink">http://forums.nesdev.com/viewtopic.php?t=7991</a>, <em>tepples</em>' template). There are a few differences in preference but one works for me and the other doesn't:<br /><br />Works:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">MEMORY {<br />&nbsp; &nbsp;ZP:&nbsp; &nbsp; &nbsp;start = $10,&nbsp; &nbsp;size = $f0,&nbsp; &nbsp;type = rw;<br />&nbsp; &nbsp;HEADER: start = 0,&nbsp; &nbsp; &nbsp;size = $0010, type = ro, file = %O, fill=yes, fillval=$00;<br />&nbsp; &nbsp;RAM:&nbsp; &nbsp; start = $0300, size = $0500, type = rw;<br />&nbsp; &nbsp;ROM7:&nbsp; &nbsp;start = $C000, size = $4000, type = ro, file = %O, fill=yes, fillval=$FF;<br />}<br /><br />SEGMENTS {<br />&nbsp; &nbsp;HEADER:&nbsp; &nbsp;load = HEADER, type = ro,&nbsp; align = $10;<br />&nbsp; &nbsp;ZEROPAGE: load = ZP,&nbsp; &nbsp; &nbsp;type = zp;<br />&nbsp; &nbsp;BSS:&nbsp; &nbsp; &nbsp; load = RAM,&nbsp; &nbsp; type = bss, align = $100,&nbsp; define = yes;<br />&nbsp; &nbsp;DMC:&nbsp; &nbsp; &nbsp; load = ROM7,&nbsp; &nbsp;type = ro,&nbsp; align = 64,&nbsp; &nbsp; optional = yes;<br />&nbsp; &nbsp;CODE:&nbsp; &nbsp; &nbsp;load = ROM7,&nbsp; &nbsp;type = ro,&nbsp; align = $100;<br />&nbsp; &nbsp;RODATA:&nbsp; &nbsp;load = ROM7,&nbsp; &nbsp;type = ro,&nbsp; align = $100;<br />&nbsp; &nbsp;VECTORS:&nbsp; load = ROM7,&nbsp; &nbsp;type = ro,&nbsp; start = $FFFA;<br />}<br /></div><br /><br />Doesn't:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">MEMORY {<br />&nbsp; &nbsp; ZP:&nbsp; &nbsp; &nbsp;start = $00,&nbsp; &nbsp; size = $100,&nbsp; &nbsp; type = rw, file = &quot;&quot;;<br />&nbsp; &nbsp; RAM:&nbsp; &nbsp; start = $0200,&nbsp; size = $600,&nbsp; &nbsp; type = rw, file = &quot;&quot;;<br />&nbsp; &nbsp; HDR:&nbsp; &nbsp; start = $0000,&nbsp; size = $10,&nbsp; &nbsp; &nbsp;type = ro, file = %O, fill = yes;<br />&nbsp; &nbsp; PRG:&nbsp; &nbsp; start = $8000,&nbsp; size = $8000,&nbsp; &nbsp;type = ro, file = %O, fill = yes;<br />&nbsp; &nbsp; CHR:&nbsp; &nbsp; start = $0000,&nbsp; size = $4000,&nbsp; &nbsp;type = ro, file = %O, fill = yes;<br />}<br /><br />SEGMENTS {<br />&nbsp; &nbsp; ZEROPAGE:&nbsp; &nbsp;load = ZP,&nbsp; type = zp;<br />&nbsp; &nbsp; BSS:&nbsp; &nbsp; &nbsp; &nbsp; load = RAM, type = bss;<br />&nbsp; &nbsp; HEADER:&nbsp; &nbsp; &nbsp;load = HDR, type = ro;<br />&nbsp; &nbsp; CODE:&nbsp; &nbsp; &nbsp; &nbsp;load = PRG, type = ro, start = $8000;<br />&nbsp; &nbsp; DPCM:&nbsp; &nbsp; &nbsp; &nbsp;load = PRG, type = ro, start = $C000, optional = yes;<br />&nbsp; &nbsp; VECTORS:&nbsp; &nbsp; load = PRG, type = ro, start = $FFFA;<br />&nbsp; &nbsp; TILES:&nbsp; &nbsp; &nbsp; load = CHR, type = ro;<br />}<br /></div><br /><br />I agree with <em>rainwarrior</em> and have a preference for putting alignments in SEGMENTS rather than MEMORY.<br /><br />What is also puzzling for me is - with the working config file I noticed that the code is loaded to $8000 but is being reloaded and executed around $C001. As a bonus my $FFFF is set to OVERFLOW so I'm thinking my alignments are all messed up? I'm not sure..<br /><br />Also, my ASM since it has changed a little since last time.<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">; TESTING<br />; cl65 -t none -C nes.cfg -o test.nes test.s<br /><br />.segment &quot;HEADER&quot;<br />&nbsp; &nbsp;.byte &quot;NES&quot; ; signature<br />&nbsp; &nbsp;.byte $1A&nbsp; &nbsp;; signature<br />&nbsp; &nbsp;.byte $01&nbsp; &nbsp;; # of 16kb PRG-ROM banks<br />&nbsp; &nbsp;.byte $00&nbsp; &nbsp;; # of 8kb VROM banks<br />&nbsp; &nbsp;.byte $00&nbsp; &nbsp;; ROM control byte one<br />&nbsp; &nbsp;.byte $00&nbsp; &nbsp;; ROM control byte two<br />&nbsp; &nbsp;.byte $00&nbsp; &nbsp;; # of 8kb RAM banks<br />&nbsp; &nbsp;.byte $00&nbsp; &nbsp;; reserved<br /><br />.segment &quot;VECTORS&quot;<br />&nbsp; &nbsp;.addr NMI<br />&nbsp; &nbsp;.addr RESET<br />&nbsp; &nbsp;.addr IRQ<br />&nbsp; &nbsp;<br />.segment &quot;CODE&quot;<br /><br />RESET:<br />&nbsp; &nbsp;SEI<br />&nbsp; &nbsp;LDA #$FF<br />LOOP:<br />&nbsp; &nbsp;JMP LOOP<br />&nbsp; &nbsp;RTI<br /><br />NMI:<br />&nbsp; &nbsp;RTI<br /><br />IRQ:<br />&nbsp; &nbsp;RTI<br /><br />.segment &quot;CHARS&quot;<br />.segment &quot;TILES&quot;<br /></div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Sun Sep 01, 2013 6:28 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Program counter [ca65]</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Could you explain what isn't working about my example? (I wouldn't have posted it if it didn't work fine for me.) Though I did notice I accidentally had twice as much CHR as necessary (easy to fix though, just changed $4000 to $2000), which apparently wasn't causing problems in the emulators I'd tried (since it's at the end of the file anyway), but it might in some.<br /><br />If you're using a 16k NROM, your PRG will be mirrored at both $8000 and $C000, so I presume that's what you're seeing.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>StephenM</b> [ Sun Sep 01, 2013 9:10 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Program counter [ca65]</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />In your example the memory seems to be set in the emulator just fine. The only problem I'm having is that the program counter isn't pointer to my RESET label at runtime. My current hypothesis is that it has something to do with my header, but I'm not sure. From what I've gathered I seem to be writing a 16kb nrom? Embarrassingly, I'm still not 100% on what that means. Nevertheless, I'm currently fueled with excitement since it is Labor day weekend in the US, thus giving me more time to dig in and figure stuff out.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sun Sep 01, 2013 9:19 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Program counter [ca65]</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />NROM-128 has 16384 bytes of PRG ROM and 8192 bytes of CHR ROM. NROM-256 has 32768 bytes of PRG ROM and 8192 bytes of CHR ROM. (The numbers in the board names refer to kibibits, which equal 1024 bits or 128 bytes.) You have to make sure that the ROM size in the linker configuration file matches the ROM size in the iNES header.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>3</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>