<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=2&amp;t=7800" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2011-06-30T09:44:27-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=2&amp;t=7800</id>
<entry>
<author><name><![CDATA[qbradq]]></name></author>
<updated>2011-06-30T09:44:27-07:00</updated>
<published>2011-06-30T09:44:27-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7800&amp;p=80889#p80889</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7800&amp;p=80889#p80889"/>
<title type="html"><![CDATA[[Alpha] QASM - A Simplified CA65 with Debugger Output]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7800&amp;p=80889#p80889"><![CDATA[
Well I finally caught up on my documentation so I figured I'd go ahead and release version 0.7. Here's what's changed:<br /><br />Version 0.7<br /><br />* Macro parameter expressions are now scoped to the line invoking the macro, not the macro body<br />* Added offset and length parameters to the .incbin directive<br />* Added option to print the memory map to the screen following assembly<br />* Added support for custom character encodings<br />* Added the .encoding, .endencoding, .char, .range and .text directives<br />* Fixed a bug that created invalid addresses when forward-referencing zero-page labels<br />* Fixed a bug that prevented the use of labels within macros defined outside of a segment block<br />* Added .__size__ default labels for data structure definitions, objects, object arrays and data tables<br />* Added .__count__ default labels for objects, object arrays and data tables<br />* Added .__size__ and .__count__ default labels to all .res labels<br /><br />Version 0.06<br /><br />* Fixed missed requirement: macro bodies are scopes without an associated label address<br />* More useful error messages for bad named value pairs<br />* Fixed a crash bug that occurred when a macro parameter name masked the name of a label within the macro's parent scope<br />* Added the .error directive<br />* Added support for multiple symbols to the .ifdef and .ifndef directives<br /><br /><br />I am very happy with the progress made on the assembler. As I continue to use it for my projects I keep adding nice features and finding the bugs. Hopefully this will be ready to use by others soon <img src="http://forums.nesdev.com/images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3706">qbradq</a> — Thu Jun 30, 2011 9:44 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[qbradq]]></name></author>
<updated>2011-06-06T06:49:05-07:00</updated>
<published>2011-06-06T06:49:05-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7800&amp;p=79293#p79293</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7800&amp;p=79293#p79293"/>
<title type="html"><![CDATA[[Alpha] QASM - A Simplified CA65 with Debugger Output]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7800&amp;p=79293#p79293"><![CDATA[
Minor update, I added a syntax highlighting definition for notepad++ including folding.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3706">qbradq</a> — Mon Jun 06, 2011 6:49 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[qbradq]]></name></author>
<updated>2011-06-03T13:42:54-07:00</updated>
<published>2011-06-03T13:42:54-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7800&amp;p=79135#p79135</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7800&amp;p=79135#p79135"/>
<title type="html"><![CDATA[[Alpha] QASM - A Simplified CA65 with Debugger Output]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7800&amp;p=79135#p79135"><![CDATA[
Updated to version 0.05 with support for data structures. I have ported my entire scrolling demo over to this assembler and fixed a lot of bugs in the process.<br /><br />If anyone wants to try this out, now is the time. I am going to start working on my demo again using this assembler. Hopefully that will work out any more bugs that may be present.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3706">qbradq</a> — Fri Jun 03, 2011 1:42 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[qbradq]]></name></author>
<updated>2011-06-03T12:28:25-07:00</updated>
<published>2011-06-03T12:28:25-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7800&amp;p=79133#p79133</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7800&amp;p=79133#p79133"/>
<title type="html"><![CDATA[[Alpha] QASM - A Simplified CA65 with Debugger Output]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7800&amp;p=79133#p79133"><![CDATA[
I have realized that the whole data structure thing is a little mis-guided. It breaks if you allow fields to be larger than one byte. It is still very useful for that though. You just have to address your multi-byte values as individual bytes.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3706">qbradq</a> — Fri Jun 03, 2011 12:28 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[qbradq]]></name></author>
<updated>2011-06-03T04:54:52-07:00</updated>
<published>2011-06-03T04:54:52-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7800&amp;p=79120#p79120</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7800&amp;p=79120#p79120"/>
<title type="html"><![CDATA[[Alpha] QASM - A Simplified CA65 with Debugger Output]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7800&amp;p=79120#p79120"><![CDATA[
Yea, definitely wait a bit. I have found and fixed a ton of bugs in version 0.04 that came from the rewrite. I am going to wait until I've ported over some of my own code with 0.05 before I release it so I can try to get some of the bugs out <img src="http://forums.nesdev.com/images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3706">qbradq</a> — Fri Jun 03, 2011 4:54 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Wave]]></name></author>
<updated>2011-06-02T23:52:27-07:00</updated>
<published>2011-06-02T23:52:27-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7800&amp;p=79114#p79114</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7800&amp;p=79114#p79114"/>
<title type="html"><![CDATA[[Alpha] QASM - A Simplified CA65 with Debugger Output]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7800&amp;p=79114#p79114"><![CDATA[
Cool, I'm waiting for that part to try to port over my nes framework to it.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4116">Wave</a> — Thu Jun 02, 2011 11:52 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[qbradq]]></name></author>
<updated>2011-06-02T13:55:23-07:00</updated>
<published>2011-06-02T13:55:23-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7800&amp;p=79093#p79093</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7800&amp;p=79093#p79093"/>
<title type="html"><![CDATA[[Alpha] QASM - A Simplified CA65 with Debugger Output]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7800&amp;p=79093#p79093"><![CDATA[
Updated to version 0.04 with conditional assembly support. Man, that was a major rewrite <img src="http://forums.nesdev.com/images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /> It will be a lot easier to implement new features now though.<br /><br />The next thing I will work on is data structures. I want to use them when I port over my demo.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3706">qbradq</a> — Thu Jun 02, 2011 1:55 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Wave]]></name></author>
<updated>2011-06-01T10:39:59-07:00</updated>
<published>2011-06-01T10:39:59-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7800&amp;p=78999#p78999</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7800&amp;p=78999#p78999"/>
<title type="html"><![CDATA[[Alpha] QASM - A Simplified CA65 with Debugger Output]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7800&amp;p=78999#p78999"><![CDATA[
Yeah, yeah, that's what I was talking about too <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" /><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4116">Wave</a> — Wed Jun 01, 2011 10:39 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[qbradq]]></name></author>
<updated>2011-06-01T09:51:40-07:00</updated>
<published>2011-06-01T09:51:40-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7800&amp;p=78997#p78997</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7800&amp;p=78997#p78997"/>
<title type="html"><![CDATA[[Alpha] QASM - A Simplified CA65 with Debugger Output]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7800&amp;p=78997#p78997"><![CDATA[
What I am talking about is specifying the data in an interleaved fashion, but outputting it in a non-interleaved fashion.<br /><br />So this code:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">.table object_templates object<br />   .data x=0x0170, y=0x00a0, vx=48, vy=0, shape=7<br />   .data x=0x0170, y=0x00a0, vx=96, vy=0, shape=4<br />.endtable</div><br /><br />Would be equivalent to this code, but with an easier to understand syntax:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">.scope object_templates<br />   x: .word 0x0170, 0x0170<br />   y: .word 0x00a0, 0x00a0<br />   vx: .byte 48, 96<br />   vy: 0, 0<br />   shape: 7, 4<br />.endscope</div><br /><br />This gives you the convenience of C-style structs and the runtime efficiency of tables.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3706">qbradq</a> — Wed Jun 01, 2011 9:51 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Wave]]></name></author>
<updated>2011-06-01T08:56:46-07:00</updated>
<published>2011-06-01T08:56:46-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7800&amp;p=78995#p78995</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7800&amp;p=78995#p78995"/>
<title type="html"><![CDATA[[Alpha] QASM - A Simplified CA65 with Debugger Output]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7800&amp;p=78995#p78995"><![CDATA[
This is for discussion but it seemed it was easier to access data in "non interleaved" fashion, like:<br />x,x,x,x,y,y,y,y,z,z,z,z<br />instead of x,y,z,x,y,z,x,y,z<br /><br />In interleaved you have:<br />ldx numplayer * sizeof(data)<br />lda data + offset(z), x<br />On non interleaved:<br />ldx numplayer * sizeof(z) <br />lda data.z, x<br /><br />As struct sizes can be any number and variables inside a struct would usually be 1~4 bytes, seems that non-interleaved would be better.<br />(as stated on KNES C library recommendations)<br />Also you could access more than 256 bytes using only the x register (up to 256bytes per struct entry)<br /><br />I don't know if it's clear what I'm saying...<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4116">Wave</a> — Wed Jun 01, 2011 8:56 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[qbradq]]></name></author>
<updated>2011-06-01T08:34:46-07:00</updated>
<published>2011-06-01T08:34:46-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7800&amp;p=78992#p78992</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7800&amp;p=78992#p78992"/>
<title type="html"><![CDATA[[Alpha] QASM - A Simplified CA65 with Debugger Output]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7800&amp;p=78992#p78992"><![CDATA[
Yea, that's what I assumed from your first post. Here's the example code I've written:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">; Define a data structure<br />.datastruct object<br />   .res x      2   ; X position in pixels / 16<br />   .res y      2   ; Y position in pixels / 16<br />   .res vx      1   ; X velocity in pixels / 16<br />   .res vy      1   ; Y velocity in pixels / 16<br />   .res shape   1   ; Shape number<br />.enddatastruct<br /><br /><br />; Create a single object instance<br />.struct player object<br /><br /><br />; Create a table of objects<br />.equ MAX_OBJECTS 16<br />.struct game_objects object MAX_OBJECTS<br /><br /><br />; Define an initialized object instance<br />.data some_obj object x=0x0170, y=0x00a0, vx=48, vy=0, shape=7<br /><br /><br />; Define an initialized table of objects<br />.table object_templates object<br />   .data x=0x0170, y=0x00a0, vx=48, vy=0, shape=7<br />   .data x=0x0170, y=0x00a0, vx=96, vy=0, shape=4<br />.endtable<br /></div><br /><br />These directives take care of an awful lot of problems I have when defining data for my game. I think this will make the whole process much smoother.<br /><br />One thing I also like is that this will be easy for an external tool to parse the initialized data tables. For instance, I have a script that generates a tile set image based on definitions, graphics files and palette files. I could easily read the tile definitions in from the table definition.<br /><br />Thanks for all of the inspiration! I now have a road map through version 0.05 :d<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3706">qbradq</a> — Wed Jun 01, 2011 8:34 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Wave]]></name></author>
<updated>2011-06-01T04:07:46-07:00</updated>
<published>2011-06-01T04:07:46-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7800&amp;p=78974#p78974</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7800&amp;p=78974#p78974"/>
<title type="html"><![CDATA[[Alpha] QASM - A Simplified CA65 with Debugger Output]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7800&amp;p=78974#p78974"><![CDATA[
I'm glad I can be of any help. If this assembler has all the features I have in NESHLA I'll try to switch to it (losing switch and while statements I guess)<br /><br />EDIT:<br />Also on structs maybe it could be like:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">.equ NUM_PLAYERS 4<br />.struct struct_players<br />    .res x 2<br />    .res y 2<br />    .res life<br />.endstruct<br /><br />.res players struct_players NUM_PLAYERS</div><br />So it creates player X and Y as 2 * NUM_PLAYERS, this way you only use the number of objects once and every entry can have a different size.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4116">Wave</a> — Wed Jun 01, 2011 4:07 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[qbradq]]></name></author>
<updated>2011-06-01T03:59:29-07:00</updated>
<published>2011-06-01T03:59:29-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7800&amp;p=78973#p78973</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7800&amp;p=78973#p78973"/>
<title type="html"><![CDATA[[Alpha] QASM - A Simplified CA65 with Debugger Output]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7800&amp;p=78973#p78973"><![CDATA[
Wow, I completely forgot about conditional assembly. I'll change .define to .memory (it's more descriptive anyway) and add in the conditional assembly bits.<br /><br />I need to restructure the assembler for all of these "skip this section if" conditions (like skip macro definitions if we are not in the macro pass). My current "for line in lines" approach is a little naive for all of this.<br /><br />Thanks again for all of the inspiration! You keep reminding me of things I forgot I needed, or never thought of before.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3706">qbradq</a> — Wed Jun 01, 2011 3:59 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Wave]]></name></author>
<updated>2011-06-01T03:45:07-07:00</updated>
<published>2011-06-01T03:45:07-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7800&amp;p=78972#p78972</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7800&amp;p=78972#p78972"/>
<title type="html"><![CDATA[[Alpha] QASM - A Simplified CA65 with Debugger Output]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7800&amp;p=78972#p78972"><![CDATA[
You're welcome <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br />Also I miss the .define .ifdef .ifndef .else labels (I readed there's a .define label but for segments) for conditional code.<br /><br />Like:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">.define pal<br /><br />.ifdef pal<br />    .equ velocity 3<br />.endif<br />.ifdef ntsc <br />    .equ velocity 2<br />.endif<br /><br />.ifdef debug<br />    .out &quot;Debug release&quot;<br />.else<br />    .out &quot;NonDebug release&quot;<br />.endif<br /><br /></div><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4116">Wave</a> — Wed Jun 01, 2011 3:45 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[qbradq]]></name></author>
<updated>2011-06-01T03:35:57-07:00</updated>
<published>2011-06-01T03:35:57-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7800&amp;p=78970#p78970</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7800&amp;p=78970#p78970"/>
<title type="html"><![CDATA[[Alpha] QASM - A Simplified CA65 with Debugger Output]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7800&amp;p=78970#p78970"><![CDATA[
Oh cool! So you specify the data structure like in C, but then the assembler lays out the memory as a table like a traditional assembly programmer would.<br /><br />I love this idea! This will make my project a heck of a lot easier to code. Right now I am doing things like this:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">.res obj_posx_lo MAX_OBJ<br />.res obj_posx_hi MAX_OBJ<br /><br />lda obj_posx_lo,x<br /></div><br /><br />Thanks for the idea! I'll get cracking on it.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3706">qbradq</a> — Wed Jun 01, 2011 3:35 am</p><hr />
]]></content>
</entry>
</feed>