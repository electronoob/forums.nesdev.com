<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=2&amp;t=5944" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2010-01-15T04:26:14-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=2&amp;t=5944</id>
<entry>
<author><name><![CDATA[UncleSporky]]></name></author>
<updated>2010-01-15T04:26:14-07:00</updated>
<published>2010-01-15T04:26:14-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5944&amp;p=55208#p55208</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5944&amp;p=55208#p55208"/>
<title type="html"><![CDATA[MAIN loop in an nes assembler program?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5944&amp;p=55208#p55208"><![CDATA[
More specifically, the address that you put in starting at $FFFC will be the first place the CPU goes.  $FFFC is at the very end of PRG-ROM and probably one of the last things you'll find in one of your program skeletons.  You could theoretically put any address there, from $0000 to $FFFF, and the CPU will begin executing whatever assembly instructions it finds there.<br /><br />Of course, a majority of those locations are probably not code you want to execute.  Most people will use an address somewhere after $C000, which is typically the last block of PRG-ROM and a safe, non-bankswitched area for programming.  And the address is usually signified by a "reset" label:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">.org $C000<br /><br />reset:<br /><br />&lt;insert startup code and programs here&gt;<br /><br />.pad $FFFA<br />.dw vblank,reset,irq</div><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3438">UncleSporky</a> — Fri Jan 15, 2010 4:26 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[koitsu]]></name></author>
<updated>2010-01-15T03:35:38-07:00</updated>
<published>2010-01-15T03:35:38-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5944&amp;p=55207#p55207</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5944&amp;p=55207#p55207"/>
<title type="html"><![CDATA[MAIN loop in an nes assembler program?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5944&amp;p=55207#p55207"><![CDATA[
It's based on wherever the reset vector points to.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3">koitsu</a> — Fri Jan 15, 2010 3:35 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Nadia]]></name></author>
<updated>2010-01-15T02:52:19-07:00</updated>
<published>2010-01-15T02:52:19-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5944&amp;p=55206#p55206</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5944&amp;p=55206#p55206"/>
<title type="html"><![CDATA[MAIN loop in an nes assembler program?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5944&amp;p=55206#p55206"><![CDATA[
I have writte quite a few of my own nes programs. But I have used ready made skeleton programs and most of the processing I do at the moment is inside the controller input handling section of the code(and that is too unstructured).<br /><br />In High level programming languages the program execution is controlled\started from a function called "main".<br /><br />My question is : In a 6502 program for NES where exactly does execution start from? Where is the main loop located(or a similar infinite loop) ?  <br /><br />For Instance the answer to this question will let me decide where to place my collision detection code in my program.<br /><br />Thanks<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4104">Nadia</a> — Fri Jan 15, 2010 2:52 am</p><hr />
]]></content>
</entry>
</feed>