<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - STA indirect indexed double-increments PPU address?</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">STA indirect indexed double-increments PPU address?</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=9407">http://forums.nesdev.com/viewtopic.php?f=2&amp;t=9407</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Tue Oct 16, 2012 1:42 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>STA indirect indexed double-increments PPU address?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I was playing around with cc65, and I noticed that something like the following:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">((unsigned char*)0)&#91;0x2007&#93; = a</div><br />Compiles into to something equivalent to:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">LDX #$20<br />STX $11<br />LDX #$00<br />STX $10<br />LDY #$07<br />STA ($10), Y</div><br /><br />This example is simplified, it isn't exactly what you get from cc65, but it seems cc65's [] operator in this case results in an indexed indirect store similar to this one.<br /><br />What I discovered, though, is that across all the emulators I tried, STA to $2007 via an indirect indexed address like this appears to increment the PPU write address by two, rather than just one. On the first increment, PPU memory is not written. On the second increment, my value in A is stored to the PPU. So... it skips the byte I was aiming for and writes the next one instead! What is it about indirect indexed addressing that causes this behaviour?<br /><br />Anyhow, this is also a warning, I guess, that if you're going to use cc65, don't try to write memory mapped registers this way. (edit: see posts below for syntax that does not have this problem.)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Shiru</b> [ Tue Oct 16, 2012 1:48 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: STA indirect indexed double-increments PPU address?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I don't really understand, why ((unsigned char*)0)[0x2007] = a rather than *((unsigned char*)0x2007)=a ?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Tue Oct 16, 2012 1:53 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: STA indirect indexed double-increments PPU address?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Ah! That works much better, thanks!<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">*((unsigned char*)0x2007) = a</div><br />Generates:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">STA $2007</div><br /><br />And by the way, the reason I had done it the other way first was because of suggestion #12 in this cc65 doc: <a href="http://www.cc65.org/doc/coding.html" class="postlink">http://www.cc65.org/doc/coding.html</a><br />I misapplied it... I suppose the advice is only for when wanting to add to a pointer as an index, not for using static addresses like this.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Tue Oct 16, 2012 7:09 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: STA indirect indexed double-increments PPU address?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Which then leads to header files looking like this:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">#define PPUCTRL&nbsp; &nbsp;(*(volatile unsigned char*)0x2000)<br />#define PPUMASK&nbsp; &nbsp;(*(volatile unsigned char*)0x2001)<br />#define PPUSTATUS (*(volatile unsigned char*)0x2002)<br />#define OAMADDR&nbsp; &nbsp;(*(volatile unsigned char*)0x2003)<br />#define OAM_DMA&nbsp; &nbsp;(*(volatile unsigned char*)0x4014)<br />#define PPUSCROLL (*(volatile unsigned char*)0x2005)<br />#define PPUADDR&nbsp; &nbsp;(*(volatile unsigned char*)0x2006)<br />#define PPUDATA&nbsp; &nbsp;(*(volatile unsigned char*)0x2007)<br /></div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Tue Oct 16, 2012 7:47 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: STA indirect indexed double-increments PPU address?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">Which then leads to header files looking like this:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">#define PPUCTRL&nbsp; &nbsp;(*(volatile unsigned char*)0x2000)<br />#define PPUMASK&nbsp; &nbsp;(*(volatile unsigned char*)0x2001)<br />#define PPUSTATUS (*(volatile unsigned char*)0x2002)<br />#define OAMADDR&nbsp; &nbsp;(*(volatile unsigned char*)0x2003)<br />#define OAM_DMA&nbsp; &nbsp;(*(volatile unsigned char*)0x4014)<br />#define PPUSCROLL (*(volatile unsigned char*)0x2005)<br />#define PPUADDR&nbsp; &nbsp;(*(volatile unsigned char*)0x2006)<br />#define PPUDATA&nbsp; &nbsp;(*(volatile unsigned char*)0x2007)<br /></div></div><br />I like to do this:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">struct _PPU {<br />&nbsp; &nbsp; byte ctrl;<br />&nbsp; &nbsp; byte mask;<br />&nbsp; &nbsp; byte const status;<br />&nbsp; &nbsp; byte oam_addr;<br />&nbsp; &nbsp; byte oam_data;<br />&nbsp; &nbsp; byte scroll;<br />&nbsp; &nbsp; byte addr;<br />&nbsp; &nbsp; byte data;<br />};<br />#define&nbsp; &nbsp; PPU&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;( *( struct _PPU volatile * )0x2000 )<br /></div><br />(BTW, volatile has no effect in CC65 currently.)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>exdeath</b> [ Tue Oct 16, 2012 8:19 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: STA indirect indexed double-increments PPU address?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />It's doing exactly what you're telling it to.  It's compiling array/pointer dereferencing and indexing arithmetic, so an indexed indirect addressing opcode is the most perfect output code.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Tue Oct 16, 2012 8:23 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: STA indirect indexed double-increments PPU address?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">exdeath wrote:</div><div class="quotecontent">It's doing exactly what you're telling it to.  It's compiling array/pointer dereferencing and indexing arithmetic, so an indexed indirect addressing opcode is the most perfect output code.</div><br />Most perfect? No way, it should/could know that the address is constant and optimize accordingly.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>exdeath</b> [ Tue Oct 16, 2012 8:27 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: STA indirect indexed double-increments PPU address?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">thefox wrote:</div><div class="quotecontent"><div class="quotetitle">exdeath wrote:</div><div class="quotecontent">It's doing exactly what you're telling it to.  It's compiling array/pointer dereferencing and indexing arithmetic, so an indexed indirect addressing opcode is the most perfect output code.</div><br />Most perfect? No way, it should/could know that the address is constant and optimize accordingly.</div><br /><br /> <img src="./images/smilies/icon_mrgreen.gif" alt=":mrgreen:" title="Mr. Green" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Tue Oct 16, 2012 8:28 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: STA indirect indexed double-increments PPU address?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Heh, mine is now just:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">#define RAW_BUS(x) (*(unsigned char*)(x))</div><br />Am I the only one who likes to use the registers by number instead of naming them?<br /><br />With cc65's weak optimizer, <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">volatile</tt> isn't really capable of doing anything, but the sentiment is right, semantically.<br /><br />How does the compiler like that struct, TheFox? Does it manage to reduce 0x2000 + offset at compile time? (Edit: apparently it does! Turns into the <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">STA $2007</tt> it deserves.)<br /><br />Also, nobody has any insight as to what is special about STA (zp), Y? That was the question I was most interested in. Why does it generate an extra increment?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>exdeath</b> [ Tue Oct 16, 2012 8:37 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: STA indirect indexed double-increments PPU address?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">rainwarrior wrote:</div><div class="quotecontent">Also, nobody has any insight as to what is special about STA (zp), Y? That was the question I was most interested in. Why does it generate an extra increment?</div><br /><br />Yeah... not sure.  Whats the 6502 bus doing on that opcode?  Maybe the ZP accesses for the base address cause dummy bus accesses that confuse the PPU and toggle a false write and increment?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dwedit</b> [ Tue Oct 16, 2012 8:46 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: STA indirect indexed double-increments PPU address?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />STA (xx),Y adds a dummy read.<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; PC&nbsp; &nbsp; &nbsp; &nbsp;R&nbsp; fetch opcode, increment PC<br />&nbsp; &nbsp; &nbsp; &nbsp; 2&nbsp; &nbsp; &nbsp; PC&nbsp; &nbsp; &nbsp; &nbsp;R&nbsp; fetch pointer address, increment PC<br />&nbsp; &nbsp; &nbsp; &nbsp; 3&nbsp; &nbsp; pointer&nbsp; &nbsp; R&nbsp; fetch effective address low<br />&nbsp; &nbsp; &nbsp; &nbsp; 4&nbsp; &nbsp;pointer+1&nbsp; &nbsp;R&nbsp; fetch effective address high,<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;add Y to low byte of effective address<br />&nbsp; &nbsp; &nbsp; &nbsp; 5&nbsp; &nbsp;address+Y*&nbsp; R&nbsp; read from effective address,<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;fix high byte of effective address<br />&nbsp; &nbsp; &nbsp; &nbsp; 6&nbsp; &nbsp;address+Y&nbsp; &nbsp;W&nbsp; write to effective address<br /></div><br />They did it this way in case they needed to fix up the high byte before performing a write, because they figured that reads wouldn't have side effects like writes would.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Tue Oct 16, 2012 8:51 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: STA indirect indexed double-increments PPU address?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">exdeath wrote:</div><div class="quotecontent">It's doing exactly what you're telling it to.  It's compiling array/pointer dereferencing and indexing arithmetic, so an indexed indirect addressing opcode is the most perfect output code.</div><br />One of the primary advantages of C over assembly is that the compiler is able to pick from equivalent implementations of a statement, so that it can do &quot;what's best&quot; for the situation. There really isn't such a thing as &quot;exactly what you tell it&quot;. That's an assembly programming concept, not a C concept.<br /><br />Frankly I'm a little disturbed that cc65 isn't able to tell the difference between a static pointer and a variable in this case. It's really weird too, because if I create a named static array (via assembly/linker), it manages to reduce just fine into an absolute address. It's this strange case where ((unsigned char*)x) isn't treated as a static pointer with the [] operator. Not intuitive at all.<br /><br />For instance if I do something like this:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">.segment &quot;PPU_REGISTERS&quot;<br />_ppu_register: .res 8<br />.export _ppu_register</div><br />I can get well behaved results from something like:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">extern unsigned char ppu_register&#91;8&#93;;<br />ppu_register&#91;7&#93; = a;</div><br /><br />It's only when using a number literal cast to an address that it has problems with []. As TheFox pointed out, you can cast it to a struct and it has no problem at all!

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Tue Oct 16, 2012 9:00 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: STA indirect indexed double-increments PPU address?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Thanks Dwedit. Is that copied from a reference somewhere? (I'd like to read it, if it exists.)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dwedit</b> [ Tue Oct 16, 2012 9:02 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: STA indirect indexed double-increments PPU address?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />It's from this file:<br /><!-- m --><a class="postlink" href="http://nesdev.com/6502_cpu.txt">http://nesdev.com/6502_cpu.txt</a><!-- m --><br /><br />Yeah, there's a bunch of files linked from the main page of the site.  But this one looks like the best for knowing what the CPU is actually doing.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Tue Oct 16, 2012 9:17 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: STA indirect indexed double-increments PPU address?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">exdeath wrote:</div><div class="quotecontent"><div class="quotetitle">thefox wrote:</div><div class="quotecontent"><div class="quotetitle">exdeath wrote:</div><div class="quotecontent">It's doing exactly what you're telling it to.  It's compiling array/pointer dereferencing and indexing arithmetic, so an indexed indirect addressing opcode is the most perfect output code.</div><br />Most perfect? No way, it should/could know that the address is constant and optimize accordingly.</div><br /><br /> <img src="./images/smilies/icon_mrgreen.gif" alt=":mrgreen:" title="Mr. Green" /></div><br />Wat.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>