<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=9&amp;t=7796" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2011-05-27T13:47:02-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=9&amp;t=7796</id>
<entry>
<author><name><![CDATA[infiniteneslives]]></name></author>
<updated>2011-05-27T13:47:02-07:00</updated>
<published>2011-05-27T13:47:02-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7796&amp;p=78809#p78809</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7796&amp;p=78809#p78809"/>
<title type="html"><![CDATA[FPGA &amp; CPLD References]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7796&amp;p=78809#p78809"><![CDATA[
It really depends on what your trying to do there are pros and cons to each.<br /><br />CPLD:<br />-usually cheaper<br />-less capable: meaning it would be good if you're just trying to make up a decent amount of gates or flipflops.  Good for replacing a handfull of discrete logic chips.  The limit of these is somewhere around the equivalent of a MMC3, if you choose a big enough CPLD.  You couldn't do soemthing like a MMC5 or NES on a chip with a CPLD.<br />-EEPROM on board configuration (see below)<br />-programmer is cheap<br /><br />FPGA:<br />-generally more expensive<br />-very capable: You could easily get an FPGA to perform as an MMC5 or Nes on a chip.<br />-SRAM on board configuration.<br />-programmer is expensive and propreitary assuming you don't buy a chinese knock off.<br /><br />Configuration of the CLPD/FPGA is one of the biggest differences besides capability.  See your the configuration you brew up in the IDE needs to be stored on the chip somehow.  CPLD's use EEPROM so it stays configured when the power is off.  You could program it once and it'd perform for life, or course you can reprogram the EEPROM but if you do this ALOT one might be concerned about cell failure.  You can fairly easily program the chip with a low cost CPLD programmer.<br /><br />FPGAs are a bit more trickey because they use SRAM.  So you have to configure the chip everytime you power up.  You don't have the lifespan limits on reprograms because it's SRAM not EEPROM though.  When your developing if you buy the proprietary programmer it ain't cheap couple hundred bucks, you could resort to the chinese version though.  When you go to actually implement the FPGA you have to have something configure the SRAM everysingle time...  Manufactures offer specific chips to do this, otherwise you'll have to do it with a microcontroller or something like the NES in the case of the Powerpak if I'm not mistaken.<br /><br />If you're new to the whole programmable logic idea I recommend starting by learning on some basic circuits designed on a CPLD.  If you went with an FPGA to start off you would DEFINETLY want to invest in a development board ~$200 it will help you get the process started and take care of the configuration issues.  The main problem though is there aren't any 5V dev boards out there anymore so you'd have to level shift everything for the NES.<br /><br />Don't forget about the 5V capability when shopping for an FPGA/CPLD you'd rather not level shift to and from 3.3V if you didn't have to.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4832">infiniteneslives</a> — Fri May 27, 2011 1:47 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Dr. Floppy]]></name></author>
<updated>2011-05-27T13:18:31-07:00</updated>
<published>2011-05-27T13:18:31-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7796&amp;p=78808#p78808</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7796&amp;p=78808#p78808"/>
<title type="html"><![CDATA[FPGA &amp; CPLD References]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7796&amp;p=78808#p78808"><![CDATA[
I've narrowed down my introductory search to three FPGA/CPLD references; is any one of these especially superior to the others? (Rodney Zaks tends to be the go-to author for 6502 material; I'm just wondering if there's a similar name in the FPGA/CPLD field?)<br /><br /><br /><span style="text-decoration: underline">Digital Systems Design with FPGAs and CPLDs</span> (Ian Grout)<br /><br /><!-- m --><a class="postlink" href="http://www.amazon.com/Digital-Systems-Design-FPGAs-CPLDs/dp/075068397X/ref=sr_1_3?s=books&amp;ie=UTF8&amp;qid=1306526392&amp;sr=1-3">http://www.amazon.com/Digital-Systems-D ... 392&amp;sr=1-3</a><!-- m --><br /><br /><br /><span style="text-decoration: underline">Designing with FPGAs and CPLDs</span> (Bob Zeidman)<br /><br /><!-- m --><a class="postlink" href="http://www.amazon.com/Designing-FPGAs-CPLDs-Bob-Zeidman/dp/1578201128/ref=sr_1_4?s=books&amp;ie=UTF8&amp;qid=1306527214&amp;sr=1-4">http://www.amazon.com/Designing-FPGAs-C ... 214&amp;sr=1-4</a><!-- m --><br /><br /><br /><span style="text-decoration: underline">Digital Fundamentals: Experiments and Concepts with CPLDs</span> (Leo Chartrand)<br /><br /><!-- m --><a class="postlink" href="http://www.amazon.com/Digital-Fundamentals-Experiments-Concepts-CPLDs/dp/1401842461/ref=sr_1_5?s=books&amp;ie=UTF8&amp;qid=1306527214&amp;sr=1-5">http://www.amazon.com/Digital-Fundament ... 214&amp;sr=1-5</a><!-- m --><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4866">Dr. Floppy</a> — Fri May 27, 2011 1:18 pm</p><hr />
]]></content>
</entry>
</feed>