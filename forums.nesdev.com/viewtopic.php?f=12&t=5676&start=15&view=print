<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - What happened with SNES CIC reverse engineering?</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">What happened with SNES CIC reverse engineering?</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=12&amp;t=5676">http://forums.nesdev.com/viewtopic.php?f=12&amp;t=5676</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>2</strong> of <strong>17</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>neviksti</b> [ Sun Jan 17, 2010 3:17 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">caitsith2 wrote:</div><div class="quotecontent">All of this was figured out by segher, one of the few that hangs out on IRC.</div><br />Did he reproduce this himself by looking at the IC chip, or is this just based on my circuit tracing here (and other circuit tracing comments in other threads)?<br /><!-- m --><a class="postlink" href="http://nesdev.com/bbs/viewtopic.php?p=43119#43119">http://nesdev.com/bbs/viewtopi ... 3119#43119</a><!-- m --><br /><br />It sounds like he traced out the first three PC cells? (And possibly the "reset" state?) Both of which I did not get around to doing yet.  That would be great.<br /><br />Breaking the rom into 'quadrants' instead of just the usual row address / column address are high/low (or vice versa) was discussed as well.  But I'd have to reread all the threads and/or find the rest of my notes to see if I got the same exact address decoding as you wrote there. <br /><br />As an aside, the earlier CICs had 12 "columns" instead of just 8.<br /><br /><div class="quotetitle">segher wrote:</div><div class="quotecontent">&gt; Then please enlighten me<br /><br />Hint: the fixed point of an LFSR is 0, and that is the start address here.<br /><br />The correct name for this kind of thing is "polynomial counter".</div><br />I have to agree with Tepples here.<br />We've been calling this a LFSR from the beginning of that revelation about the PC, and while I feel the term is correct, even if you do not it should be clear what was meant by it.  We're all friendly here.  <br /><br />If there is some information we are lacking by all means point it out, but please don't create semantic barriers and then not provide clarifying information when dismissing what others say.  OK?  Let's all work together.  The atmosphere was much more congenial when everyone worked on the Tengen chip.<br /><br /><div class="quotetitle">segher wrote:</div><div class="quotecontent">It is neither Harvard architecture nor Von Neumann architecture.<br /><br />Quoting wackypedia doesn't make you look smart, btw; quite the opposite.</div>
<br />How is it not Harvard?
<br />The program code is even a different bit width than the ram, and the ROM addressing can come ONLY from the PC.  Those two facts seem to require it to be Harvard to me.
<br />
<br />Again, please don't be dismissive without explaining why.  Just disagreeing and then taking a crack at tepples is not helpful.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>segher</b> [ Sun Jan 17, 2010 2:59 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />&gt; Did he reproduce this himself by looking at the IC chip,
<br />
<br />I couldn't get any good photos of the chip, I would love to see some.
<br />
<br />I reverse engineered this all from just the bits in the rom, and a lot of 
<br />datasheet/patent archeology.  Couldn't find the exact cpu fwiw.
<br />
<br />&gt; or is this just based on my circuit tracing here (and other circuit tracing 
<br />&gt; comments in other threads)?
<br />&gt; <!-- m --><a class="postlink" href="http://nesdev.com/bbs/viewtopic.php?p=43119#43119">http://nesdev.com/bbs/viewtopi ... 3119#43119</a><!-- m -->
<br />
<br />No, interesting though.  For some reason I totally missed that thread.
<br />
<br />&gt; It sounds like he traced out the first three PC cells? (And possibly the
<br />&gt; "reset" state?) Both of which I did not get around to doing yet.
<br />&gt; That would be great.
<br />
<br />I messed around with permuting and inverting the address bits until I
<br />got something that looked resonable.  Then I figured out the jump/call/ret
<br />opcodes, which then allowed me to fine-tune the address decoding (jumps
<br />have to go somewhere reasonable).
<br />
<br />Figuring out the rest of the opcodes is harder: I did not even know what
<br />registers there are!  So reversing the opcodes and reversing the cpu has
<br />to be done in parallel.
<br />
<br />Right now I have one opcode left to do.  It is used only in the "nescic"
<br />rom, and only once.
<br />
<br />&gt; As an aside, the earlier CICs had 12 "columns" instead of just 8.
<br />
<br />Those are _earlier_?!  The code in the "12-bit cic" is much nicer, smaller
<br />code, which does pretty much the same thing.
<br />
<br />It does make sense though: it has a few opcodes swapped, while "nescic"
<br />and "d411" are the same.
<br />
<br />&gt; I have to agree with Tepples here.
<br />&gt; We've been calling this a LFSR from the beginning
<br />
<br />That doesn't make it right though ;-)
<br />
<br />An LFSR is a _linear feedback_ shift register.  XNOR isn't linear.
<br />It matters a lot mathematically, and e.g. when you try to brute-force
<br />this stuff by trying out all LFSRs and giving each a score.  I ended
<br />up with the rom backwards, since the complement of the PC counter
<br />_is_ an LFSR of course (there is an even number of taps).
<br />
<br />&gt; We're all friendly here.  
<br />
<br />I hope so, so am I, I hope.
<br />
<br />&gt; If there is some information we are lacking
<br />
<br />As I said already, I'll post about this later, just not yet, give me some
<br />more time.  It's much more efficient for everyone if I simply explain
<br />this stuff, rather than you having to pry it from me with a 
<br />question-and-answer game.
<br />
<br />&gt; How is it not Harvard?
<br />
<br />It can read data from insn rom.
<br />
<br />
<br />Segher

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sun Jan 17, 2010 7:58 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">byuu wrote:</div><div class="quotecontent">Dear god why, why would anyone design hardware like this? ;_;</div><br />Today NovaYoshi was making a really simple CPU in KLogic as an experiment. I told him how the CIC's program counter was a polynomial counter, much like the noise generator in the 2A03 and the POKEY.<br /><br />His first question: "Wait, what? That's a CPU? Why would Nintendo include a CPU in every Game Pak for lockout and not for DSP?" I told him the 4-bit microcontroller was cheap enough for Nintendo to have made that it was worth avoiding the pile of total crap released for a certain Atari console around the mid-1980s video game recession.<br /><br />His second question was like yours: "Why does it use a polynomial counter?" I told him my guess: a row of latches and an XNOR gate save a few gates off the row of half adders that make a up a linear program counter.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Is there a place one can obtain the SNES CIC ROM, and some logs of observed output from a real CIC?</div><br />We could try with the (well-known) NES data, provided it actually is the same CPU.<br /><br /><div class="quotetitle">segher wrote:</div><div class="quotecontent">It can read data from insn rom.</div>
<br />Then it's a modified Harvard architecture. But if the instructions for reading from data memory and from instruction memory are separate, and there's no mechanism for writing to instruction memory or executing from data memory, it's still a lot closer to Harvard than von Neumann. But my point was it'd still be a pain to squeeze a linearly indexed array into the program space if the program itself is not linearly indexed.
<br />
<br />I just got uncomfortable when you started disrespecting the work of Wikipedia contributors. Nevertheless, I <a href="http://en.wikipedia.org/wiki/Talk:Linear_feedback_shift_register#Linear_functions_of_single_bits" class="postlink">raised the issue</a> of "XNOR polynomial counters are not strictly linear" on the LFSR article's talk page.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>segher</b> [ Sun Jan 17, 2010 9:48 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I have posted an article at <!-- m --><a class="postlink" href="http://hackmii.com/2010/01/the-weird-and-wonderful-cic/">http://hackmii.com/2010/01/the-weird-and-wonderful-cic/</a><!-- m --> .
<br />
<br />It describes the architecture and instruction set of the CIC.  I also posted disassemblies of the NES and SNES ROMs, and the source code for the disassembler (which is at <!-- m --><a class="postlink" href="http://git.infradead.org/users/segher/dis-cic.git">http://git.infradead.org/users/segher/dis-cic.git</a><!-- m --> ).
<br />
<br />Have fun!  Questions welcome, of course.
<br />
<br />
<br />Segher

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>segher</b> [ Sun Jan 17, 2010 9:58 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />&gt; His second question was like yours: "Why does it use a polynomial
<br />&gt; counter?" I told him my guess: a row of latches and an XNOR gate save
<br />&gt; a few gates off the row of half adders that make a up a linear program
<br />&gt; counter.
<br />
<br />Yes, it is actually only about half the area, which is worthwhile given that
<br />this chip is so simple that _anything_ is big :-)
<br />
<br />&gt;&gt; It can read data from insn rom.
<br />&gt; Then it's a modified Harvard architecture.
<br />
<br />Sure, it is closer to Harvard arch than to Von Neumann arch.
<br />
<br />&gt; But my point was it'd still be a pain to squeeze a linearly indexed array
<br />&gt; into the program space if the program itself is not linearly indexed.
<br />
<br />Not really; the table lookup insns use a different bank of ROM anyway.
<br />
<br />&gt; I just got uncomfortable when you started disrespecting the work of
<br />&gt; Wikipedia contributors.
<br />
<br />I don't disrespect their work, or the contributors; I don't find wikipedia
<br />a trustworthy source of information though.
<br />
<br />
<br />&gt; Nevertheless, I raised the issue
<br />
<br />Thank you.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>neviksti</b> [ Mon Jan 18, 2010 12:24 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Thanks for taking the time to write that up.
<br />
<br /><div class="quotetitle">segher wrote:</div><div class="quotecontent">I reverse engineered this all from just the bits in the rom, and a lot of datasheet/patent archeology.  Couldn't find the exact cpu fwiw.</div><br />Did you compare with the Tengen code, ala 'rosetta' style?  Otherwise I don't understand how you are gleaning information on opcodes.<br /><br />And stuff like "there is a four entry stack for the PC; it’s not in RAM, it is separate".  As I mentioned, I could see that when I traced out the circuit, but I don't understand how you can see that just from the ROM dump and with no knowledge of which cpu is used.<br /><br />Basically, it is important for my learning process to know what assumptions went into creating this ... where intuition and guesses are separated from derivations.  This is important to me.  I would like to understand the process better, so I can understand the current state of knowledge better.<br /><br /><div class="quotetitle">segher wrote:</div><div class="quotecontent">&gt; How is it not Harvard?<br /><br />It can read data from insn rom.<br /><br />...<br /><br />Not really; the table lookup insns use a different bank of ROM anyway.<br /></div>
<br />Since I've traced out the PC and stack myself, I don't see how a lookup physically is possible (unless there are complicated multi-cycle instructions involving the stack).  It looks to me like you can only have data from the ROM in the sense that an "immediate" address mode opcode contains data in the opcode itself.
<br />
<br />Scanning your opcode list, I don't see any table lookup instructions.  So it still looks like Harvard architecture to me.  If I'm missing something material here, please let me know. (If you feel I'm misusing terminology again, I guess it can only help to clear that up as well.)
<br />
<br />While this line of questions may seem silly, since I approached this rev-engineering mostly from bottom-&gt;up from the IC circuitry itself, it is important to me to reconcile this information with what I have learning from studying the circuitry myself.
<br />
<br />---
<br />EDIT:
<br />You wrote:
<br /><em>"that third ROM is 768 bytes, which I don’t handle in my little conversion script, so you’ll need to remove the extra columns (they are empty anyway)"</em>
<br />
<br />Actually, there is one byte in there that is not empty.  I wonder if this corresponds with your 'mystery' opcode in some way.  I'm tired right now, so I'm going to bed.  I'll re-read all this stuff tomorrow after some rest.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>caitsith2</b> [ Mon Jan 18, 2010 12:37 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">neviksti wrote:</div><div class="quotecontent">---<br />EDIT:<br />You wrote:<br /><em>"that third ROM is 768 bytes, which I don’t handle in my little conversion script, so you’ll need to remove the extra columns (they are empty anyway)"</em><br /><br />Actually, there is one byte in there that is not empty.  I wonder if this corresponds with your 'mystery' opcode in some way.  I'm tired right now, so I'm going to bed.  I'll re-read all this stuff tomorrow after some rest.</div>
<br />
<br />That not-empty byte is only a "t 400" instruction. (machine code 0x80.)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>segher</b> [ Mon Jan 18, 2010 12:59 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />&gt; Thanks for taking the time to write that up.
<br />
<br />My pleasure, it was a wonderful ride.  I hope this info is useful in some way.
<br />
<br />&gt; Did you compare with the Tengen code, ala 'rosetta' style?
<br />
<br />Yes I did.  The Tengen code isn't a 1-1 translation, it does some things
<br />in a different order, and it doesn't do most of the work at all.
<br />
<br />It certainly helped though, esp. the timing info.
<br />
<br />&gt; Otherwise I don't understand how you are gleaning information on opcodes.
<br />
<br />You take a frequent opcode, see in what patterns it is used, and go
<br />from there.  Lots of trial and error.
<br />
<br />&gt; And stuff like "there is a four entry stack for the PC; it’s not in RAM, it is 
<br />&gt; separate".  As I mentioned, I could see that when I traced out the 
<br />&gt; circuit, but I don't understand how you can see that just from the ROM 
<br />&gt; dump and with no knowledge of which cpu is used.
<br />
<br />A big part of the work was finding and reading as much documentation
<br />on this chip as possible.  None is there that I could find, but some family
<br />members have a bit of info hidden in various patents.  Also, some newer
<br />family members have actual datasheets available.
<br />
<br />I think the actual chip is a Sharp SM4 (or some very old SM5).
<br />
<br />Gleaning the PC stack from the best die photographs i could find
<br />( <!-- m --><a class="postlink" href="https://netfiles.uiuc.edu/mantey/www/D411/D411_overview.jpg">https://netfiles.uiuc.edu/mantey/www/D4 ... erview.jpg</a><!-- m --> ) was easy.  It is not so easy to find registers on there etc., and I cannot read
<br />out the insn decoder PLA on that resolution/quality ;-)
<br />
<br />&gt; Basically, it is important for my learning process to know what 
<br />&gt; assumptions went into creating this ... where intuition and guesses are 
<br />&gt; separated from derivations.  This is important to me.  I would like to 
<br />&gt; understand the process better, so I can understand the current state of 
<br />&gt; knowledge better.
<br />
<br />Find me on IRC, it is hard to explain in a forum.  You can write it up if you 
<br />want to, it's not like I want to keep it a secret or something, I just don't
<br />know where to start.
<br />
<br />&gt; &gt; &gt; How is it not Harvard?
<br />&gt; &gt; It can read data from insn rom.
<br />
<br />&gt; &gt; Not really; the table lookup insns use a different bank of ROM anyway.
<br />
<br />&gt; Since I've traced out the PC and stack myself, I don't see how a lookup 
<br />&gt; physically is possible (unless there are complicated multi-cycle 
<br />&gt; instructions involving the stack).  It looks to me like you can only have 
<br />&gt; data from the ROM in the sense that an "immediate" address mode 
<br />&gt; opcode contains data in the opcode itself.
<br />
<br />It indeed does a push to stack, then it fetches a byte (from a special bank, offset X and A), to X and A, and finally it pops PC again.  That is how it is
<br />described for different SM5 anyway.
<br />
<br />&gt; Scanning your opcode list, I don't see any table lookup instructions.
<br />
<br />Yes, I have only insns that are _used_ in there, I have no way of figuring
<br />out the rest without a much better die photograph, or some ancient docs
<br />showing up magically.  There might not _be_ a table insn on this even, I
<br />thought there was though.
<br />
<br />&gt; So it still looks like Harvard architecture to me.  If I'm missing
<br />&gt; something material here, please let me know. (If you feel I'm misusing 
<br />&gt; terminology again, I guess it can only help to clear that up as well.)
<br />
<br />Many opcodes have immediate operands in the opcode; that isn't "pure 
<br />Harvard".  But almost nothing is, heh.  It is pretty silly to want to divide
<br />all CPU designs into these two groups; some CPUs are *very* much not like
<br />either Harvard or Von Neumann arch!
<br />
<br />I agree now that the CIC CPU is quite like Harvard though.
<br />
<br />&gt; While this line of questions may seem silly, since I approached this 
<br />&gt; rev-engineering mostly from bottom-&gt;up from the IC circuitry itself, it is 
<br />&gt; important to me to reconcile this information with what I have learning 
<br />&gt; from studying the circuitry myself.
<br />
<br />Yeah, it is great to hear (and see) how other people approach the problem,
<br />in my experience everyone has a very different way of working.
<br />
<br />&gt; &gt; "that third ROM is 768 bytes, which I don’t handle in my little conversion 
<br />&gt; &gt; script, so you’ll need to remove the extra columns (they are empty 
<br />&gt; &gt; anyway)"
<br />
<br />&gt; Actually, there is one byte in there that is not empty.
<br />
<br />It's a "t 0" at offset 7f, you have that in every bank.  Doesn't do anything
<br />useful, probably an artifact of the assembler?
<br />
<br />&gt; I wonder if this corresponds with your 'mystery' opcode in some way.  
<br />
<br />Not as far as I can see, sorry :-(
<br />
<br />I think the mystery 5e sets some internal flag or I/O something, btw.
<br />
<br />
<br />Segher

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>ikari_01</b> [ Tue Jan 19, 2010 5:14 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />OK, so this is kind of groundbreaking and also great news for people who would like to build small series of SNES dev carts or the likes. <img src="./images/smilies/icon_wink.gif" alt=";)" title="Wink" />
<br />So, do any ROM dumps or die photographs exist of the D413A (PAL CIC)?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Jeroen</b> [ Tue Jan 19, 2010 6:18 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />^^I could be wrong but I don't think they've actually cracked it yet. They're getting closer though.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>ikari_01</b> [ Tue Jan 19, 2010 6:39 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The progress is amazing. AFAICS there are only two mysteries left: 
<br /><ul><li>Instruction $5e (which is not used in the currently dumped SNES CIC ROMs)</li><li>multiple consecutive ldi instructions. </li></ul>
<br />AFAICS the latter are used in seed initialization so it might actually help to have another ROM dump.
<br />I do have a spare D413A but I seriously have no idea how to go about decapping it and taking pictures. I'm afraid I don't have access to the necessary equipment.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Jeroen</b> [ Tue Jan 19, 2010 10:55 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Oh wow thats awesome. Wonder how long it'll take till we have a working clone then <img src="./images/smilies/icon_biggrin.gif" alt=":-D" title="Very Happy" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>segher</b> [ Tue Jan 19, 2010 2:11 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />&gt; OK, so this is kind of groundbreaking and also great news for people who 
<br />&gt; would like to build small series of SNES dev carts or the likes. ;)
<br />&gt; So, do any ROM dumps or die photographs exist of the D413A (PAL CIC)?
<br />
<br />I haven't seen any ROM dumps or die shots for those.
<br />
<br />They aren't needed though (assuming the PAL versions etc. use the same
<br />algorithm, just different initial values / "keys").  The easiest way to create
<br />a "sciclone" would be to sniff the data stream on a D411, and verify that we
<br />understand the algorithm from that; also, you can derive the timings from
<br />that (much easier than counting cycles in the disassembly; well, much less
<br />tedious and error-prone anyway).
<br />
<br />Then, take a D413 etc., and sniff the streams on that; then, write some 
<br />simple program that derives the initial values from that (it isn't exactly
<br />a cryptographically secure cipher).
<br />
<br />The algorithm for the SNES CIC is almost identical to the one on the NES
<br />CIC: the main (only?) difference is that it runs the "mangle" function three
<br />times in a row where the NES CIC does it only once.
<br />
<br />Someone _could_ have figured that out from the data alone even.  It's 
<br />hard to speculate how much of a long shot that would have been.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>segher</b> [ Tue Jan 19, 2010 2:19 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />&gt; The progress is amazing. AFAICS there are only two mysteries left: 
<br />
<br />Depends what you think is the goal of all of this.  If the goal is to actually
<br />figure out the instruction set, there probably are some more opcodes that
<br />aren't used in the CIC code.  If the goal is to figure out the algorithm used
<br />on the SNES CIC, then we have plenty of information (together with
<br />stream dumps) to figure it all out.
<br />
<br />I am also not claiming there are no mistakes in my interpretation of what
<br />the instruction set and CPU architecture is.
<br />
<br />&gt; [*]Instruction $5e (which is not used in the currently dumped SNES CIC ROMs)
<br />
<br />Yeah, I have no real clue what this does.
<br />
<br />&gt; [*]multiple consecutive ldi instructions.
<br />&gt; AFAICS the latter are used in seed initialization so it might actually help
<br />&gt; to have another ROM dump.
<br />
<br />They are used in a few other places.  It isn't necessary to really understand
<br />those to create a clone, it is almost trivial to reconstruct the initial state
<br />from a few dumps of the actual data streams.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>bunnyboy</b> [ Tue Jan 19, 2010 4:00 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Not sure if this has been posted yet, but a while ago I made a logic analyzer dump of the D411 when stream 1111 is picked.  
<br />
<br /><!-- m --><a class="postlink" href="http://nesmuseum.com/10nes/snes1111.png">http://nesmuseum.com/10nes/snes1111.png</a><!-- m -->
<br />
<br />The idea is similar to the NES cic where the console sends the 4 bit stream to use (shown before the -400uS line) then its sparse bits from console and cart.  I can make more accurate picts if needed but there should be a couple people with manual logging equipment to large cycle accurate tables.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>2</strong> of <strong>17</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>