<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=2&amp;t=5230" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2009-05-31T13:46:21-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=2&amp;t=5230</id>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2009-05-31T13:46:21-07:00</updated>
<published>2009-05-31T13:46:21-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5230&amp;p=47482#p47482</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5230&amp;p=47482#p47482"/>
<title type="html"><![CDATA[Map data interleaving, worth it?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5230&amp;p=47482#p47482"><![CDATA[
<div class="quotetitle">Celius wrote:</div><div class="quotecontent"><br />Well actually I plan to use the same <em>scrolling</em> engine for each of my games<br /></div><br />I sometimes say that to myself too, but I always end up rewriting stuff. I always think I can do better than last time, although that's not always true. I'm a control freak, that's probably my problem.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />I would not plan on using the same <em>map decoder</em> for each project, as completely different types of level formats will probably be necessary for each type of game I make.<br /></div><br />I get your point. It's probably a good thing to code yourself a set of "libraries" to use across multiple projects. I believe you could always reuse the music engine and the NMI handler for example, if they are generic enough. That should help you a lot with a second or third game.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />The only concern would be that it scrolls 8 pixels at max per frame, which I know for some people  <img src="http://forums.nesdev.com/images/smilies/icon_wink.gif" alt=":wink:" title="Wink" /> isn't going to cut it.<br /></div><br />I didn't say anything... =)<br /><br /><div class="quotetitle">NESICIDE wrote:</div><div class="quotecontent"><br />I can imagine though, that there are a few simple map engines that wouldn't be too hard to provide as starting places.<br /></div><br />A basic map scrolling engine can be pretty straightforward to code, I don't think you should have to go through the trouble of disassembling games and such. You could design your own system, like Banshaku is doing. Only you should probably use a more generic map format.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Sun May 31, 2009 1:46 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[cpow]]></name></author>
<updated>2009-05-31T13:29:38-07:00</updated>
<published>2009-05-31T13:29:38-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5230&amp;p=47480#p47480</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5230&amp;p=47480#p47480"/>
<title type="html"><![CDATA[Map data interleaving, worth it?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5230&amp;p=47480#p47480"><![CDATA[
<div class="quotetitle">tokumaru wrote:</div><div class="quotecontent"><br />I don't know exactly what your tool does, but couldn't providing a standard map/scrolling engine be a little beyond its scope? Well, maybe it will be good for people that don't have any idea on how to implement their own scrollers yet, so a generic one is better than nothing. I just wouldn't dream of making an engine generic enough for all kinds of scrollers.<br /></div><br />I guess I was thinking of that, yes.  People that want a place to start...but if possible, a starting place that could also be used as a map editor for existing maps.  Pipe dream?  Sure.  I'm full of them.  <br /><br />I can imagine though, that there are a few simple map engines that wouldn't be too hard to provide as starting places.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3705">cpow</a> — Sun May 31, 2009 1:29 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Celius]]></name></author>
<updated>2009-05-31T13:24:53-07:00</updated>
<published>2009-05-31T13:24:53-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5230&amp;p=47478#p47478</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5230&amp;p=47478#p47478"/>
<title type="html"><![CDATA[Map data interleaving, worth it?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5230&amp;p=47478#p47478"><![CDATA[
Well actually I plan to use the same <em>scrolling</em> engine for each of my games, as all the scrolling engine does is move the screen across all of the name tables and update a row/column of tiles/attributes when requested. However, I would not plan on using the same <em>map decoder</em> for each project, as completely different types of level formats will probably be necessary for each type of game I make. The only concern would be that it scrolls 8 pixels at max per frame, which I know for some people  <img src="http://forums.nesdev.com/images/smilies/icon_wink.gif" alt=":wink:" title="Wink" /> isn't going to cut it.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=138">Celius</a> — Sun May 31, 2009 1:24 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2009-05-31T12:07:58-07:00</updated>
<published>2009-05-31T12:07:58-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5230&amp;p=47476#p47476</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5230&amp;p=47476#p47476"/>
<title type="html"><![CDATA[Map data interleaving, worth it?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5230&amp;p=47476#p47476"><![CDATA[
I guess this varies from game to game more than you imagine. Each game has very different requirements. For example, the maps in a platformer are likely to be handled very different than the ones in an RPG. Even within the same style of game there are terribly different approaches used depending on various characteristics of the games, such as how large the levels are, how repetitive, the amount of ROM and RAM available, whether backtracking is allowed, and so on.<br /><br />You will probably only find the same format used across multiple games if they are made by the same company, but even then the scrolling engines and map formats might be quite different depending on the type of the game. The only safe bet is on games that belong to the same series, such as Mega Man. All Mega Man games are likely to use the same map format, although minor modifications/improvements are expected from game to game. Some map formats are known and documented. Some even have editors made for them.<br /><br />I don't know exactly what your tool does, but couldn't providing a standard map/scrolling engine be a little beyond its scope? Well, maybe it will be good for people that don't have any idea on how to implement their own scrollers yet, so a generic one is better than nothing. I just wouldn't dream of making an engine generic enough for all kinds of scrollers.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Sun May 31, 2009 12:07 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[cpow]]></name></author>
<updated>2009-05-31T08:59:58-07:00</updated>
<published>2009-05-31T08:59:58-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5230&amp;p=47467#p47467</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5230&amp;p=47467#p47467"/>
<title type="html"><![CDATA[Map data interleaving, worth it?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5230&amp;p=47467#p47467"><![CDATA[
This thread sparked a thought.  Is there a set of a few standard ways in which side-, vertical- or both-scroller map data is stored and algorithms to retrieve and display it?  <br /><br />I could go through an analysis of how some popular games do it ... but I'm sure people have probably already done this?  It'd be neat to document and/or incorporate into a tool.  <img src="http://forums.nesdev.com/images/smilies/icon_wink.gif" alt=":wink:" title="Wink" /><br /><br />Right now my tool only supports static playfield (Balloon Fight/etc.) style but I think it'd be a hoot to be able to lay out maps and 'walk' them.<br /><br />If nobody knows of such an analysis of the algorithms to both compress/store and decompress/display map data for a typical side-scroller, perhaps I'll start there.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3705">cpow</a> — Sun May 31, 2009 8:59 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Celius]]></name></author>
<updated>2009-05-30T11:23:08-07:00</updated>
<published>2009-05-30T11:23:08-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5230&amp;p=47424#p47424</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5230&amp;p=47424#p47424"/>
<title type="html"><![CDATA[Map data interleaving, worth it?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5230&amp;p=47424#p47424"><![CDATA[
<div class="quotetitle">Banshaku wrote:</div><div class="quotecontent"><br />Since you interleave the data this way for the map, this now mean that your require 7 pointer to the data, which mean 7 variables in the zero page area. Am I correct?  Without those variables, you would require a method per map just to extract the data.<br /></div><br /><br />Yeah, you would probably end up doing that. But actually, in my engine I have a list of pointers which point to each row in ROM. I don't have the ultrafast access that I described; I have to copy each pointer manually, which actually now that I think of it really sucks and makes me not reap all the benefits interleaving has to offer. Oh well, my map decoder runs fine anyways. I'll think better for next time <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" /> .<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=138">Celius</a> — Sat May 30, 2009 11:23 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Banshaku]]></name></author>
<updated>2009-05-30T10:07:18-07:00</updated>
<published>2009-05-30T10:07:18-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5230&amp;p=47421#p47421</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5230&amp;p=47421#p47421"/>
<title type="html"><![CDATA[Map data interleaving, worth it?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5230&amp;p=47421#p47421"><![CDATA[
<div class="quotetitle">tokumaru wrote:</div><div class="quotecontent"><br />I don't know if it's the normal thing to do, but I always have tons of addresses in ZP. Because of my map format, I need 16 addresses just to read a metatile from the map.<br /></div><br /><br />Then I will stop thinking too much them <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /><br /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent"><br />About interleaving map data, I guess it really depends on your map format. If it's too big to the point where an index register alone can't index any part of it (meaning you'd have to mess with the pointer as well), it may not be worth it. If you have 256 columns or less, it may be worth it, otherwise I don't really see the point. With 256 columns you can have levels that are 32 screens wide (assuming your columns are 32 pixels wide), maybe that's enough for what you have in mind.<br /></div><br /><br />I added the interleaved option for my export of data and tested with metatile and the map. It make accessing the data easier in general and I'm quite happy to have learned this approach. And like you said, for the kind of game I'm aiming for, 32 screen wide seems quite enough. If I reach the limit, you just do a transition between 2 maps and that's it. If later, for some reason, the interleaved data becomes a problem, I just need to re-export the data again in the format I want and just re-factor the code that was taking care of that part.<br /><br /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent"><br />Anyway, data interleaving can be harder and less intuitive when you are not sure about the dimensions/size of the objects composed by that data, so I tend to do it only for things that don't vary in size.<br /></div><br /><br />I see. In my case my data doesn't vary in size so it is quite easy to handle.<br /><br />Once I can scroll my data, I need to figure out how to update the attributes... I treat my data in column of 4x4 tiles so I need to check what is the trick to update them.  In that case, I don't think the PPU increment by 32 does any help here.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3559">Banshaku</a> — Sat May 30, 2009 10:07 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2009-05-30T09:06:14-07:00</updated>
<published>2009-05-30T09:06:14-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5230&amp;p=47415#p47415</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5230&amp;p=47415#p47415"/>
<title type="html"><![CDATA[Map data interleaving, worth it?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5230&amp;p=47415#p47415"><![CDATA[
<div class="quotetitle">Banshaku wrote:</div><div class="quotecontent"><br />Since they are address, this mean already 30 bytes just for referencing data.  Maybe I'm just thinking too much and this is just the normal way of doing things.<br /></div><br />I don't know if it's the normal thing to do, but I always have tons of addresses in ZP. Because of my map format, I need 16 addresses just to read a metatile from the map. There are also the addresses used to read object definitions, the ones used for sound... I wouldn't be surprised if I ended up using half of ZP just for pointers. I don't see any problems with it though, as there is still plenty of room for other variables. Also, it's not like all variables must be in ZP.<br /><br />About interleaving map data, I guess it really depends on your map format. If it's too big to the point where an index register alone can't index any part of it (meaning you'd have to mess with the pointer as well), it may not be worth it. If you have 256 columns or less, it may be worth it, otherwise I don't really see the point. With 256 columns you can have levels that are 32 screens wide (assuming your columns are 32 pixels wide), maybe that's enough for what you have in mind.<br /><br />My level maps are not interleaved, but since they index 256x256-pixel blocks they don't take much space. In order to have easy access to it I have a single pointer, and a table in RAM of pre-calculated 8-bit indexes indicating where each row starts. My levels can be quite tall, and storing pointers for each row would take too much space. The 8-bit indexes use half the space.<br /><br />Anyway, data interleaving can be harder and less intuitive when you are not sure about the dimensions/size of the objects composed by that data, so I tend to do it only for things that don't vary in size.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Sat May 30, 2009 9:06 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Banshaku]]></name></author>
<updated>2009-05-30T00:00:15-07:00</updated>
<published>2009-05-30T00:00:15-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5230&amp;p=47400#p47400</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5230&amp;p=47400#p47400"/>
<title type="html"><![CDATA[Map data interleaving, worth it?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5230&amp;p=47400#p47400"><![CDATA[
I can see you point to use data as row now.  My way of keeping the address of every column is overkill and required more data the more the map became bigger. This way is simple, requires N pointer for the number of row and that's it.<br /><br />I can see that I'm not used yet to think in interleaved data format at all since what I tried to do was too complicated for nothing.  I will test it once I can export data this way.  <br /><br />Thanks for the comment!<br /><br />Edit:<br /><br />@Celius<br /><br />Since you interleave the data this way for the map, this now mean that your require 7 pointer to the data, which mean 7 variables in the zero page area. Am I correct?  Without those variables, you would require a method per map just to extract the data.<br /><br />That may sound strange for a question but I'm just confirming since more and more pointers seems required for the data in the ZP.  4 for metatile, 4 for meta-metatile, 7 for the map data, some for data attributes etc. Since they are address, this mean already 30 bytes just for referencing data.  Maybe I'm just thinking too much and this is just the normal way of doing things.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3559">Banshaku</a> — Sat May 30, 2009 12:00 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Celius]]></name></author>
<updated>2009-05-29T23:24:12-07:00</updated>
<published>2009-05-29T23:24:12-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5230&amp;p=47399#p47399</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5230&amp;p=47399#p47399"/>
<title type="html"><![CDATA[Map data interleaving, worth it?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5230&amp;p=47399#p47399"><![CDATA[
I recommend actually having all data interleaved. It makes things very fast, and less complex a lot of the time. In my current side scrolling project, I have all of the columns of tiles interleaved, meaning in one array I have all of the top tiles together, then in another I have all of the second tiles together, then in another I have the third tiles in the columns grouped together, etc. It just so happens that this "interleaving" is actually the same as me storing the map data in <em>rows</em>.<br /><br />If you store your map data in rows, it will be MUCH easier to manage. Say you know the column number you're looking for, and you're trying to copy the IDs of the tiles in the column to an array in RAM. With your current map format, you might have to do something like:<br /><br />lda ColumnNumber<br />ldx #7<br />jsr Multiply_A_by_X_and_store_in_Y<br /><br />lda MapData,y<br />sta Column<br />iny<br />lda MapData,y<br />sta Column+1<br />iny<br />lda MapData,y<br />sta Column+2<br />...<br />iny<br />lda MapData,y<br />sta Column+6<br /><br />I know, that's assuming your map is less than 256 bytes and that you access it immediately. Basically you multiply the column number by 7 and use that as an offset for map data, and you probably have to manually increment the offset to get to the next byte. Now watch this:<br /><br />ldx ColumnNumber<br />lda Row0,x<br />sta Column<br />lda Row1,x<br />sta Column+1<br />lda Row2,x<br />sta Column+2<br />lda Row3,x<br />sta Column+3<br />lda Row4,x<br />sta Column+4<br />lda Row5,x<br />sta Column+5<br />lda Row6,x<br />sta Column+6<br /><br />See how much faster and clean that was? Of course, you'd have to change this up as you'd want variable "rows" to choose from.<br /><br />What I do for my game is I have for each level a list of pointers to each row, and I copy these addresses to RAM. So I'd say ditch the column system and store your levels as rows. Just my opinion though.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=138">Celius</a> — Fri May 29, 2009 11:24 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Banshaku]]></name></author>
<updated>2009-05-29T22:24:49-07:00</updated>
<published>2009-05-29T22:24:49-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5230&amp;p=47397#p47397</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5230&amp;p=47397#p47397"/>
<title type="html"><![CDATA[Map data interleaving, worth it?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5230&amp;p=47397#p47397"><![CDATA[
In a previous <a href="http://nesdev.com/bbs/viewtopic.php?t=5213" class="postlink">post</a> I asked some details about how to render a map for a side scroller.  From that thread, the topic of interleaving data was mentioned. For metatile data, the concept is great and make accessing the data a lot more easier.  Now I was thinking, can I apply this concept for map data too?<br /><br />Since it's a side scroller, the map data is organized by column of metatile.  One way that come to my mind for interleaving data is to have 2 LUT: one for the high and low address of the column.  I have 7 metatile per column. So instead to try to find the adress of the metatile by multiplying by 7 the metatile column index, I would just use the column index and use both LUT to get the address of the data and maybe put it in a zero page variable like this:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">      ldx zpColumnIndex<br /><br />      lda &#40;zpMapDataAdrHi&#41;,x<br />      sta zpCurrentColumnDataAdr<br /><br />      lda &#40;zpMapDataAdrLo&#41;,x<br />      sta zpCurrentColumnDataAdr + 1<br /><br /></div> <br /><br />The pro is that you can access data very fast and have up to 256 metatile column before passing a page boundary. The con is that you now have 2 extra byte per metatile column. but I guess for the simplicity and speed gained, it may be worth it.<br /><br />Does it all make sense or I'm trying to think too hard?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3559">Banshaku</a> — Fri May 29, 2009 10:24 pm</p><hr />
]]></content>
</entry>
</feed>