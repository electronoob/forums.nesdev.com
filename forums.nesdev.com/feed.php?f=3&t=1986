<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=3&amp;t=1986" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2006-10-07T11:24:59-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=3&amp;t=1986</id>
<entry>
<author><name><![CDATA[Memblers]]></name></author>
<updated>2006-10-07T11:24:59-07:00</updated>
<published>2006-10-07T11:24:59-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1986&amp;p=18259#p18259</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1986&amp;p=18259#p18259"/>
<title type="html"><![CDATA[Newbie to emulation questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1986&amp;p=18259#p18259"><![CDATA[
The damaging PPU thing is a myth, as far as I know.  More than a few games used combinations of it (Super Spy Hunter comes to mind, as one that uses all 3 bits at once).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=10">Memblers</a> — Sat Oct 07, 2006 11:24 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[mattmatteh]]></name></author>
<updated>2006-10-07T11:07:03-07:00</updated>
<published>2006-10-07T11:07:03-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1986&amp;p=18258#p18258</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1986&amp;p=18258#p18258"/>
<title type="html"><![CDATA[Newbie to emulation questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1986&amp;p=18258#p18258"><![CDATA[
could you start a new thread instead of using a general newbie one?  :)<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=170">mattmatteh</a> — Sat Oct 07, 2006 11:07 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[kyuusaku]]></name></author>
<updated>2006-10-07T09:01:04-07:00</updated>
<published>2006-10-07T09:01:04-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1986&amp;p=18255#p18255</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1986&amp;p=18255#p18255"/>
<title type="html"><![CDATA[Newbie to emulation questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1986&amp;p=18255#p18255"><![CDATA[
New questions:<br /><br />- Are the R,G,B, black background colors from the palette or different entirely? Will something other than $0,1,2,4 really damage the PPU? What do these bits do in monochrome mode? (conflicting information) <br /><br />-Is it: color mode = background colors, monochrome = emphasis or the opposite or neither?<br /><br />- I plan to render in real time, pixel by pixel. What would would be the best way for me then to implement a pattern table/nametable viewer? Should I decode the tiles beforehand (ie not render pixel by pixel) and copy them both to the screen buffer and viewer? Would pixel rendering to each be stupidly slow?<br /><br />-What's the fastest way to fetch pixels?<br /><br />pixel0 = *palette[((atthi &amp; 0x80)&gt;&gt;4)|((attlo &amp; 0x80)&gt;&gt;5)|((tilehi &amp; 0x80)&gt;&gt;6)|((tilelo &amp; 0x80)&gt;&gt;7)] ?<br /><br />I notice some emulators use tables to merge bits, could someone please describe a table method?<br /><br /><br />Thanks<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=20">kyuusaku</a> — Sat Oct 07, 2006 9:01 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[mattmatteh]]></name></author>
<updated>2006-09-21T20:16:08-07:00</updated>
<published>2006-09-21T20:16:08-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1986&amp;p=17877#p17877</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1986&amp;p=17877#p17877"/>
<title type="html"><![CDATA[Newbie to emulation questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1986&amp;p=17877#p17877"><![CDATA[
then i suggest start with the cpu.   and the memory functions.  and i would update the cpu clock cycles for each cpu cycle needed.  get the cpu working.<br /><br />i think there is a link at the bottom of the cpu page on the wiki, the new wiki.<br /><br />mine is a double switch statement.  i would also suggest this too,  as there is less redunant code.  you can keep all the addressing modes together and the keep all the instructions together<br /><br />matt<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=170">mattmatteh</a> — Thu Sep 21, 2006 8:16 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[kyuusaku]]></name></author>
<updated>2006-09-21T19:48:57-07:00</updated>
<published>2006-09-21T19:48:57-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1986&amp;p=17873#p17873</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1986&amp;p=17873#p17873"/>
<title type="html"><![CDATA[Newbie to emulation questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1986&amp;p=17873#p17873"><![CDATA[
Right now I've got pseudocode and flowcharts ;)<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=20">kyuusaku</a> — Thu Sep 21, 2006 7:48 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[mattmatteh]]></name></author>
<updated>2006-09-21T16:47:53-07:00</updated>
<published>2006-09-21T16:47:53-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1986&amp;p=17867#p17867</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1986&amp;p=17867#p17867"/>
<title type="html"><![CDATA[Newbie to emulation questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1986&amp;p=17867#p17867"><![CDATA[
yes there are 3 ppu cycles in one cpu cycle (for ntsc, not pal)<br /><br />a cpu instruction has more than one cpu cycle.  i think you got it right.<br /><br />so you dont burn your bridges, i wouldnt hard code 1 cpu cycle to 3 ppu cycles.  you wont be able to add pal supppor later on.<br /><br />what do you have started now ?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=170">mattmatteh</a> — Thu Sep 21, 2006 4:47 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[kyuusaku]]></name></author>
<updated>2006-09-21T16:14:30-07:00</updated>
<published>2006-09-21T16:14:30-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1986&amp;p=17865#p17865</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1986&amp;p=17865#p17865"/>
<title type="html"><![CDATA[Newbie to emulation questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1986&amp;p=17865#p17865"><![CDATA[
You're fast, this isn't the first time I've edited my post to have it already replied to ;)<br /><br />I don't understand your question. I mean running 3 PPU cycles for every CPU cycle that was in the last instruction.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=20">kyuusaku</a> — Thu Sep 21, 2006 4:14 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[mattmatteh]]></name></author>
<updated>2006-09-21T16:06:32-07:00</updated>
<published>2006-09-21T16:06:32-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1986&amp;p=17863#p17863</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1986&amp;p=17863#p17863"/>
<title type="html"><![CDATA[Newbie to emulation questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1986&amp;p=17863#p17863"><![CDATA[
i think you mean cpu cycle ?    a cpu instruction is at least 2 cpu cycles <br /><br />the emu would be more accurate that way.  however that would probably cause alot of cache misses and extra funciton calls.  this is how nintendulator works (quietust can comment more on his emu).  <br /><br />mine does the catch up method, in the cpu i count the cpu cycles and catch up the ppu to the cycle read.   this works for now.  i will try to improve it later.<br /><br />matt<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=170">mattmatteh</a> — Thu Sep 21, 2006 4:06 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[kyuusaku]]></name></author>
<updated>2006-09-21T16:09:54-07:00</updated>
<published>2006-09-21T15:57:41-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1986&amp;p=17861#p17861</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1986&amp;p=17861#p17861"/>
<title type="html"><![CDATA[Newbie to emulation questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1986&amp;p=17861#p17861"><![CDATA[
Are there any drawbacks to running one CPU instruction, then 3*(last instruction's cycles) PPU cycles?<br /><br />Can anything other than CPU writes alter rendering?<br /><br />Is there a benefit to synching the CPU to PPU cycles?<br /><br />I don't plan to support MMC2/MMC4/MMC5 initially but what should I be building into the framework so in case I do later on, I don't burn my bridges?<br /><br />Thanks!<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=20">kyuusaku</a> — Thu Sep 21, 2006 3:57 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[mattmatteh]]></name></author>
<updated>2006-09-17T22:19:06-07:00</updated>
<published>2006-09-17T22:19:06-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1986&amp;p=17669#p17669</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1986&amp;p=17669#p17669"/>
<title type="html"><![CDATA[Newbie to emulation questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1986&amp;p=17669#p17669"><![CDATA[
i was going to do this.  i kinda put that on hold for now.  i was looking into different controller and keyboard input libs.<br /><br />right now i have 2 threads,  the nes core thread and the main thread for input.  the main thread will set the nes controller variables when changed, then the nes core reads them.  its even driven.  not sure if this is a good way to code, but works for the time being.<br /><br />matt<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=170">mattmatteh</a> — Sun Sep 17, 2006 10:19 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[kyuusaku]]></name></author>
<updated>2006-09-17T22:12:45-07:00</updated>
<published>2006-09-17T22:12:45-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1986&amp;p=17668#p17668</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1986&amp;p=17668#p17668"/>
<title type="html"><![CDATA[Newbie to emulation questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1986&amp;p=17668#p17668"><![CDATA[
I planned to fetch and handle input whenever the game strobed the controller, I don't know how realistic this is however.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=20">kyuusaku</a> — Sun Sep 17, 2006 10:12 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[mattmatteh]]></name></author>
<updated>2006-09-17T22:08:31-07:00</updated>
<published>2006-09-17T22:08:31-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1986&amp;p=17667#p17667</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1986&amp;p=17667#p17667"/>
<title type="html"><![CDATA[Newbie to emulation questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1986&amp;p=17667#p17667"><![CDATA[
each render frame is 16.6 milliseconds.  i round to that.  and even if you/i didnt, i would guess that a single core cpu would, since it can do the input or emulator.  unless you are polling.  but i also havent perfected my input that much.  i am still working on getting the core done still.<br /><br />matt<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=170">mattmatteh</a> — Sun Sep 17, 2006 10:08 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[kyuusaku]]></name></author>
<updated>2006-09-17T22:10:14-07:00</updated>
<published>2006-09-17T21:57:04-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1986&amp;p=17666#p17666</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1986&amp;p=17666#p17666"/>
<title type="html"><![CDATA[Newbie to emulation questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1986&amp;p=17666#p17666"><![CDATA[
Do you not handle controller input and sound output in realtime then? How long do you wait? Just until the next frame? What's the benefit of using SDL's timers to time.h?<br /><br />To clarify, my routine does is not use the time() but a function that returns clock cycles since program started, and translates that into execution time of time1 to time 2. By timing the emulation event over and over, I figure it will execute about the desired speed assuming it can complete a loop at the desired speed.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=20">kyuusaku</a> — Sun Sep 17, 2006 9:57 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[mattmatteh]]></name></author>
<updated>2006-09-17T21:46:59-07:00</updated>
<published>2006-09-17T21:46:59-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1986&amp;p=17665#p17665</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1986&amp;p=17665#p17665"/>
<title type="html"><![CDATA[Newbie to emulation questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1986&amp;p=17665#p17665"><![CDATA[
i use sdl right now for approxamate timing.  also, you can not profile with time().  its only good to the nearest 10 milliseconds i think.<br /><br />is that 18.624 micro seconds ?  that will not work.  the cpu can not switch applications that fast, its more like in a few milliseconds.   i do an entire render frame then sleep.<br /><br />matt<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=170">mattmatteh</a> — Sun Sep 17, 2006 9:46 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[kyuusaku]]></name></author>
<updated>2006-09-18T13:53:33-07:00</updated>
<published>2006-09-17T21:21:27-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1986&amp;p=17664#p17664</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1986&amp;p=17664#p17664"/>
<title type="html"><![CDATA[Newbie to emulation questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1986&amp;p=17664#p17664"><![CDATA[
Right now I'm not concerned with profiling for speed, what I need help with is more basic: getting everything synched and call step_PPU() every ~18.624uS (PPU cycle).<br /><br />This is what I've come up with so far:<br /><br />loop()<br />{<br />wait(((1/(21477270/4))-(time2-time1/CLOCKS_PER_SEC))<br />time1 = clock()<br />step_NES()<br />time2 = clock()<br />}<br /><br />Edit: bad algo<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=20">kyuusaku</a> — Sun Sep 17, 2006 9:21 pm</p><hr />
]]></content>
</entry>
</feed>