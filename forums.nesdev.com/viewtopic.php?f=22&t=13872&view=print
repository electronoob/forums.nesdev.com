<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Long-term goal: a Metal Gear-like game for NES</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Long-term goal: a Metal Gear-like game for NES</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=22&amp;t=13872">http://forums.nesdev.com/viewtopic.php?f=22&amp;t=13872</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>AlexE</b> [ Sun Feb 21, 2016 11:14 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Long-term goal: a Metal Gear-like game for NES</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Americans were first introduced to the <em>Metal Gear</em> series through the NES port of <em>Metal Gear</em>, originally for the MSX computer. The game was hastily made without Hideo Kojima's oversight and it most definitely shows; there are plenty of frustrating quirks and poor game design choices made in the development of this game. What could've been a great game had the time and resources thrown at it and so it ended in a --- let's just say --- &quot;difficult-to-play&quot; classic NES game. A few years later, <em>Snake's Revenge</em> came out (oddly enough with no mention in the title of Metal Gear even though it's a <em>Metal Gear</em> game  <img src="./images/smilies/icon_rolleyes.gif" alt=":roll:" title="Rolling Eyes" /> ) and was a sequel to the NES port, not the MSX version, so the plot was set in a different timeline, etc., etc. The sequel played much better than the original did, but MAN is it difficult. Thankfully, we live in THE <span style="font-size: 150%; line-height: normal"><span style="color: #FF0000">F</span><span style="color: #FF0040">U</span><span style="color: #FF0080">T</span><span style="color: #FF00BF">U</span><span style="color: #FF00FF">R</span><span style="color: #FF40FF">E</span></span>, so we have the use of save states that cut down on the grind of redoing unfair 2D segments and needlessly far-away checkpoints. So I thought to myself, <em>why can't there be a fun 8-bit Metal Gear game?</em><br /><br />Thus, my ultimate goal in learning 6502 ASM is to make a tactical stealth game for the NES that is <span style="color: #00BF40">fun</span> instead of <span style="color: #FF0000">frustrating</span>. <br /><br />The goal isn't a fan game but an original concept with inspiration from Kojima's stellar video game series, <em>The Legend of Zelda</em>, and the like. Naturally, this endeavor isn't an easy one. There must be a lot of planning and know-how in many different areas such as ludology, game design, technical design, visual and musical composition, economics, storytelling and cinematography, programming for NES 6502, and so on; definitely something that would normally require a team. Unfortunately, teammates aren't cheap in game making. I looked around on Google for &quot;6502 programmers for hire&quot; and I found a <strong>$10,000</strong> NES game project (and I'm not talkin' about hex here! BA DUM TISH). Unless there are some hardcore original <em>Metal Gear</em> fans who deal in 6502 philanthropy, it seems like a project I'll be heading alone. <br /><br />I'm currently at the point of 6502 virtuous skill and heightened intellect where I've made a single, small happy face loop from left to right after following The New 8-Bit Heroes's ASM6 tutorial. There, I managed to understand a little bit of how 6502 ASM works more so than from Nerdy Nights's NESASM3 tutorials. I think the need to have a more defined structure in ASM6 helps me understand what should go where rather than in NESASM3 where things can be placed whichever way the programmer would like to order it. If only New 8-Bit Heroes would make more tutorials on ASM6 nudge nudge wink wink...<br /><div class="attachtitle">Attachment:</div><div class="attachcontent">
			<span class="gensmall"><b>File comment:</b> The PRG with a very simple CHR file. If you want to compile this file to remake the ROM, just make a single sprite, save the CHR, and compile it in ASM6.</span><br />
		
			<span class="genmed">
				<img src="./styles/subsilver2/imageset/icon_topic_attach.gif" width="14" height="18" alt="" title="" /> 
				<a href="./download/file.php?id=5157">TutorialGame.asm</a> [7.46 KiB]
			</span><br />
			<span class="gensmall">Downloaded 80 times</span>
		

		<br />
	</div><br /><div class="attachtitle">Attachment:</div><div class="attachcontent">
			<span class="gensmall"><b>File comment:</b> The compiled ROM of that ASM file. Bask in its wake as you sit perilously in your chair as you witness a pink smiley face move from left to right over and over.</span><br />
		
			<span class="genmed">
				<img src="./styles/subsilver2/imageset/icon_topic_attach.gif" width="14" height="18" alt="" title="" /> 
				<a href="./download/file.php?id=5155">YO DARREN CHECK IT.nes</a> [20.02 KiB]
			</span><br />
			<span class="gensmall">Downloaded 129 times</span>
		

		<br />
	</div> <br />In the proof-of-concept demo of this stealth game, you can control the player with WASD (D-pad) and switch between Running Mode and the slower but sneakier Crawling Mode with J (Select). Eventually, you will be able to punch with K (B), shoot with L (A), and bring up the Inventory &amp; Weapons Menu with Enter (Start). There's plenty of bugs in the demo and it's not 6502 ASM (it's GML. Blasphemy, I know). However, I do have a basic level layout with guards and security cameras as well as an intentionally vague minimap system in place. I'm using some graphics from <em>Snake's Revenge</em> as placeholders. <br />-------------------------------<br /><img src="https://40.media.tumblr.com/bbeb2046c97dd6040bf89f75e5d4db89/tumblr_o2xp5a3sv41su4v6oo1_540.png" alt="Image" /><br /><span style="font-size: 85%; line-height: normal">The yellow rings are for testing purposes only. For a proper NES version of the game, most likely all GUI elements will not be implemented the way they are here; more likely they will be in its own section of the screen like in <em>Super Mario 3</em>. A minimap will either be its own menu or gotten rid of entirely since the NES can only handle a max of 4 nametables at a time with the assistance of mappers and this minimap is representing a 9x9 grid of 256x224-pixel screens.</span><br />-------------------------------<br />I've also been working on the music for the game using VRC6 expansion with inspiration from bands and artists like Rush, Genesis, and Tim Follin, though the music will likely have to be downgraded to more simple 2A03 if the NES version ever comes to development. Preferably, I'd like to keep the music the way it is or better for a greater experience, though I'm likely saying this underestimating how much that will be a pain to program. But Konami managed to do it in 1987 and it's 2016 now (aka THE <span style="font-size: 150%; line-height: normal"><span style="color: #FF0000">F</span><span style="color: #FF0040">U</span><span style="color: #FF0080">T</span><span style="color: #FF00BF">U</span><span style="color: #FF00FF">R</span><span style="color: #FF40FF">E</span></span>), so it MUST be possible somehow. <br /><div class="attachtitle">Attachment:</div><div class="attachcontent">
			<span class="gensmall"><b>File comment:</b> The music I'm making currently.</span><br />
		
			<span class="genmed">
				<img src="./images/upload_icons/mid.gif" alt="" /> 
				<a href="./download/file.php?id=5156">OP Immortality.ftm</a> [59.74 KiB]
			</span><br />
			<span class="gensmall">Downloaded 89 times</span>
		

		<br />
	</div><br />Alternatively, I was thinking of some ideas of having a separate, new &quot;8-bit&quot; synth chip on the game pak to run its own music separate from the native audio hardware so that music could be called upon in PRG without the complications of having to code music and sound effects in tandem with game logic or using a sound engine with its own set of limitations (no disrespect to the folk who made them!). I recently bought an ENIO EXP board for my NES in order to play expansion audio and I found myself dumbfounded from hearing FM synthesis on a console I've always heard bleeps and bloops from all my life. As to how I would implement this for hardware let alone emulation would definitely be a pickle. HOWEVER, I have seen Game Pak mods where someone took the Japanese release of <em>Castlevania 3</em>, stuck an RCA audio cable in the cartridge, and played VRC6 audio from the Game Pak instead of through the NES. I could take that idea and use it for the custom expansion synth with the benefits of not needing to mod a vanilla NES or buy an ENIO board (which keeps things less complicated for the common homebrew demographic), however it will likely look pretty goofy, cost more to produce, and be a mess with wires and audio adapters. All of this is pure guessing and it might not be possible, but hey it <em>may</em> be possible.<br /><br />Currently, I'm at the point where I'm learning the basics of NES 6502 programming and Game Maker Language (for the demo), brainstorming level design, gameplay rules, and music (and some story). If anyone is interested in jumping in on the project, <em>let me know</em>. As I said, there's no money in the project, however if there is in the future, I can contact you with that news in mind. I can post the demo in the comments if you'd like to take a crack at it. <br /><br />Another idea I've been thinking about for after the game is successfully released is a new and improved sequel for the SEGA Genesis. That way, you can sneak around in all its STEREOPHONIC HIGH-DEFINITION 16-BIT GRAPHICS BLAST PROCESSING 1990s SEGA DOES NINTENDON'T GLORY. <br />...But that's a topic for a different forum.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>AlexE</b> [ Sun Feb 21, 2016 11:45 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Long-term goal: a Metal Gear-like game for NES</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><em>6502 Philanthropy</em> actually has a nice ring to it, don't 'cha think? Like a name of an indie game studio.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>JoeGtake2</b> [ Mon Feb 22, 2016 8:12 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Long-term goal: a Metal Gear-like game for NES</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Wow - I'm glad to hear the project helped someone get started!  Yes, there are many more to come.  Some we will be just getting out there, some will be part of a bigger project that also comes with our in house tools we used, etc.  I'm certainly not the best ASM programmer, but I think I can help teach people who are in that epic chasm...there seem to be a lot of tutorials for people who know little to nothing about programming in general and are complete beginners on every level...then there is a divide...then there are resources for people with heavy knowledge of comp sci.  I have experience teaching game development in high school, so hopefully that experience can pay off to help educate people that fall in that middle section how to employ what they may know about program to NES development.  <img src="./images/smilies/icon_smile.gif" alt=":-)" title="Smile" /><br /><br />Glad it helped, and I'm working on them along with the doc and the game!

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Nitroman</b> [ Mon Feb 22, 2016 12:28 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Long-term goal: a Metal Gear-like game for NES</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I'd love more to see a Metal Gear 2: Solid Snake from MSX coming to NES on VRC6 with it's original music.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Memblers</b> [ Mon Feb 22, 2016 4:42 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Long-term goal: a Metal Gear-like game for NES</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Sounds like an interesting idea, I'm enjoying the music too.<br /><br />On the soundchip stuff, I've been determined to make my own synth add-on for NES for a while, actually I've made a couple different versions.  In fact it was directly inspired by the Metal Gear 2 MSX soundtrack, and stuff like the arcade version of Spy Hunter.  And yeah the whole issue of where to put the audio is a never-ending pain.  The original version just gave an IRQ, NES reads digital audio, and writes to the register $4011 DAC.  That can work with no system modifications, but sucks up some significant NES CPU time (and sprite DMA every frame halts audio updates).  Another interesting option that was suggested to me recently is DPCM, which has the advantages of requiring no system mods, much less CPU usage and it cooperates with sprite-DMA.  But with DPCM the audio quality will take quite a hit, both on frequency range and usable dynamic range.  However it would sound strangely characteristic of the NES, I'm sure. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /><br />I don't know if you had your own type of synth in mind, or something off the shelf, but when I eventually get the project finished, it will be available.  VRC6-type sound would be no problem.  The old synth I made was just 256-byte wavetables, the new one is that, plus noise, polynomial (Atari), phase distortion (Casio), PCM, and hopefully, eventually phase modulation (Yamaha) too.  The old version synth was just directly controlled by the NES CPU, the newer one is more hands-off.  It currently takes live MIDI-IN, in the final version you'll be able to just upload a standard MIDI file (which would include instrument settings etc.) and just let it go.  The new version though currently doesn't exist as hardware directly connected to the NES, though I suppose one could do MIDI-OUT through the controller port to it, heheh.<br /><br />Anyways if you were curious I have some old audio recordings of it uploaded here:<br /><a href="http://membler-industries.com/squeedo/" class="postlink">http://membler-industries.com/squeedo/</a><br />Unfortunately they pretty much only show off the wavetable synthesis mode (and noise), little bit of PCM too, and with my generic WIP General MIDI instrument set.  Nothing customized to the actual MIDI files that were being played.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Mon Feb 22, 2016 5:51 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Long-term goal: a Metal Gear-like game for NES</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Memblers wrote:</div><div class="quotecontent">Another interesting option that was suggested to me recently is DPCM, which has the advantages of requiring no system mods, much less CPU usage and it cooperates with sprite-DMA.<br /></div>I was thinking about this a little more after I suggested it. Unfortunately, since the PIC's PSP only has a single 8-bit latch for both reads and writes, it's harder to use the PSP for both DPCM streaming and audio coprocessor configuration (at least, not without allowing occasional corruption, or adding an entirely separate interface for the other direction of data)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>AlexE</b> [ Tue Feb 23, 2016 12:14 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Long-term goal: a Metal Gear-like game for NES</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Nitroman wrote:</div><div class="quotecontent">I'd love more to see a Metal Gear 2: Solid Snake from MSX coming to NES on VRC6 with it's original music.</div><br /><br />That's practically what the goal is without the Metal Gear characters since <em>Metal Gear 2: Solid Snake</em> really improved in a lot of areas the original was lacking in (like being able to punch walls to distract guards). In the game, a textbox pops up and interrupts the flow of the game, so I might have it where there is no textbox pop-up and the guard just gets question marks above his head or I might have DPCM voice acting. I'd love to hear &quot;What was <strong>that</strong> noise?&quot; in a 8-bit game. <br /><br />I've played every Metal Gear game except for 5-1 and 5-2 and so they're all playing a part of inspiration for gameplay and rules. MGS 5-1 and 5-2 are both games I'm super looking forward to playing eventually. I'm also looking for various other games for influence.<br /><br /><div class="quotetitle">Memblers wrote:</div><div class="quotecontent">On the soundchip stuff, I've been determined to make my own synth add-on for NES for a while, actually I've made a couple different versions. In fact it was directly inspired by the Metal Gear 2 MSX soundtrack, and stuff like the arcade version of Spy Hunter. And yeah the whole issue of where to put the audio is a never-ending pain. The original version just gave an IRQ, NES reads digital audio, and writes to the register $4011 DAC. That can work with no system modifications, but sucks up some significant NES CPU time (and sprite DMA every frame halts audio updates). Another interesting option that was suggested to me recently is DPCM, which has the advantages of requiring no system mods, much less CPU usage and it cooperates with sprite-DMA. But with DPCM the audio quality will take quite a hit, both on frequency range and usable dynamic range. However it would sound strangely characteristic of the NES, I'm sure. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /></div><br /><br />I actually found out about the Squeedo directly after posting this thread to the forum. Having a range of synthesis options would make the game's music sound very characteristic, similar to how <em>Larange Point</em> is the only NES game that sounds like a Genesis with 2-operator FM synthesis (or is is phase modulation synthesis on the VRC7? I can never tell the difference between the two). I'd love to know what kind of things the Squeedo synth is capable of technically speaking and how it works. How many channels does it have? If it runs off of MIDI files, does the ROM send out a message to the synth of which MIDI to play, and then the expansion music travels through the console with an ENIO board? When the NES game is ready for development, having this synth would be so cool. One thing I noticed when listening to the examples (especially ones with simpler and lower frequency waveforms) is that the Squeedo has a very Genesis-esque DAC ladder effect distortion when you listen through the headphone jack. It gives it a kind of grunge to it, I think. <br /><br />There's the problem of emulation. Emulators and NSF players like FCEUX would have to emulate the Squeedo like the VRC6/7, FDS, etc. This sounds more like a far-off problem, but that would definitely be neat development for emulators!<br /><br /><div class="quotetitle">Memblers wrote:</div><div class="quotecontent">I don't know if you had your own type of synth in mind, or something off the shelf, but when I eventually get the project finished, it will be available. VRC6-type sound would be no problem. The old synth I made was just 256-byte wavetables, the new one is that, plus noise, polynomial (Atari), phase distortion (Casio), PCM, and hopefully, eventually phase modulation (Yamaha) too. The old version synth was just directly controlled by the NES CPU, the newer one is more hands-off. It currently takes live MIDI-IN, in the final version you'll be able to just upload a standard MIDI file (which would include instrument settings etc.) and just let it go. The new version though currently doesn't exist as hardware directly connected to the NES, though I suppose one could do MIDI-OUT through the controller port to it, heheh. Unfortunately they pretty much only show off the wavetable synthesis mode (and noise), little bit of PCM too, and with my generic WIP General MIDI instrument set. Nothing customized to the actual MIDI files that were being played.</div><br /><br />So with a 256-byte wavetable, that means that there are 256 parameters in the composition of a waveform, right? The 2A03 has volume positions 0 through F (16 levels). How many volume positions are there in the wavetable?<br /><br />I don't recognize polynomial synthesis. Is that where the waveform is plotted out mathematically like a vector line?<br /><br />Phase distortion synthesis sounds super neat from the Casio synths I've seen. Recently, I've been trying to decide whether I should get a Yamaha DX7 II or Casio CZ-1 for that sick 80s digital synthesizer (because, alas, Minimoogs are really expensive) and I've been meaning to get into phase distortion synthesis. What are the capabilities of PCM? Like 44.1-kHz, 128-kbps MP3 quality or lossless WAV? I presume that this synth goes in the cartridge and not the console itself.<br /><br />This project looks really, really intriguing. The ability to have more customizable and expressive music and sound effects to NES homebrew without fiddling with the CPU would be so cool. I'm totally in support this project.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Memblers</b> [ Wed Feb 24, 2016 2:42 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Long-term goal: a Metal Gear-like game for NES</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />lidnariq: The older PICs have that simple PSP, but the newer ones like dsPIC33 and PIC32 have a nicer enhanced version of in.  In PSP mode it gives you 4 bytes to latch, and it can either be addressable (2 address inputs) or act as a 4-deep FIFO.  Those PICs also have a DMA controller, which I'm sure could be hooked up the port, so I'm pretty confident it could work.  Actually I've kinda wondered too if the NES could run (non-branching) code directly off of that, heheh. <img src="./images/smilies/icon_razz.gif" alt=":P" title="Razz" /><br /><br /><div class="quotetitle">AlexE wrote:</div><div class="quotecontent">I actually found out about the Squeedo directly after posting this thread to the forum. Having a range of synthesis options would make the game's music sound very characteristic, similar to how <em>Larange Point</em> is the only NES game that sounds like a Genesis with 2-operator FM synthesis (or is is phase modulation synthesis on the VRC7? I can never tell the difference between the two). I'd love to know what kind of things the Squeedo synth is capable of technically speaking and how it works. How many channels does it have? If it runs off of MIDI files, does the ROM send out a message to the synth of which MIDI to play, and then the expansion music travels through the console with an ENIO board? When the NES game is ready for development, having this synth would be so cool. One thing I noticed when listening to the examples (especially ones with simpler and lower frequency waveforms) is that the Squeedo has a very Genesis-esque DAC ladder effect distortion when you listen through the headphone jack. It gives it a kind of grunge to it, I think. <br /></div><br /><br />I have some goals for the number of channels, ultimately it depends on type of synthesis that is used.  They can all be used at the same time, and instruments can use multiple channel/types (several instruments can be chained together and transposed).  I haven't done phase modulation yet, but I've been expecting it to be the big one, so I've got low expectations of 4 channels, maybe 8, of 4-operator FM.  Most of the other synthesis types are fairly simple, so for those I'd consider 16 channels to be a success, but I'm hoping to get 24, which would meet General MIDI specs.  The reason I don't have hard numbers for these is because I haven't benchmarked it on the target hardware, I'm still running it as a PC program for now.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">There's the problem of emulation. Emulators and NSF players like FCEUX would have to emulate the Squeedo like the VRC6/7, FDS, etc. This sounds more like a far-off problem, but that would definitely be neat development for emulators!<br /></div><br /><br />Actually, this time around I've got a solution for that.  I'm keeping the main version written in C, and if needed to meet my channel and low latency requirements, I'll add optimizations in assembly and/or Verilog.  So I should be able to supply a DLL file of my C reference version that an emulator could use, or a VST file, free to use.  The hardware version should sound the same, might end up with some optional global (not per-channel) DSP effects like EQ, bass boost, etc that can't be in the DLL (because the code belongs to Dolby Labs, Texas Instruments, or somebody).  The main difference with the free vs hardware version is that the hardware version would have much lower latency.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">So with a 256-byte wavetable, that means that there are 256 parameters in the composition of a waveform, right? The 2A03 has volume positions 0 through F (16 levels). How many volume positions are there in the wavetable?<br /></div><br /><br />Yes, and currently all the samples are 8 bits and the volume control is 7 bits (I started with 8 bits but the difference seemed imperceptible).<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I don't recognize polynomial synthesis. Is that where the waveform is plotted out mathematically like a vector line?<br /></div><br />It's pseudo-random, LFSR, basically taking a short segment of a random sequence.  The longer the sequence is, the more distorted and noise-like it becomes.  So like the Atari 2600's TIA, POKEY, though the controls were more inspired by the Atari Lynx sound hardware.<br /><br />Vector synthesis is something different but sounds very interesting.  I have what I think might be a basic form of it, but there's only one axis instead of 2.  The wavetable mode always selects 2 waveforms, and there a balance control which creates an interpolated version of the waveform.  Of those MP3s I had uploaded, on the second half of Tron Theme I was manually adjusting the balance between square and saw while it played.<br /><br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Phase distortion synthesis sounds super neat from the Casio synths I've seen. Recently, I've been trying to decide whether I should get a Yamaha DX7 II or Casio CZ-1 for that sick 80s digital synthesizer (because, alas, Minimoogs are really expensive) and I've been meaning to get into phase distortion synthesis. What are the capabilities of PCM? Like 44.1-kHz, 128-kbps MP3 quality or lossless WAV? I presume that this synth goes in the cartridge and not the console itself.<br /><br />This project looks really, really intriguing. The ability to have more customizable and expressive music and sound effects to NES homebrew without fiddling with the CPU would be so cool. I'm totally in support this project.</div><br /><br />Currently it's 44.1khz 8-bit, I suppose I should make it 48khz though.  16-bit samples would be possible, right now the limit is that they're playing from a fairly small amount of RAM/ROM, when I make the hardware version I'll add external flash memory and see how many channels it can handle before going to 16-bit.  But yeah it is just normal lossless WAV.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>AlexE</b> [ Wed Feb 24, 2016 10:16 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Long-term goal: a Metal Gear-like game for NES</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Memblers wrote:</div><div class="quotecontent">I have some goals for the number of channels, ultimately it depends on type of synthesis that is used.  They can all be used at the same time, and instruments can use multiple channel/types (several instruments can be chained together and transposed).  I haven't done phase modulation yet, but I've been expecting it to be the big one, so I've got low expectations of 4 channels, maybe 8, of 4-operator FM.  Most of the other synthesis types are fairly simple, so for those I'd consider 16 channels to be a success, but I'm hoping to get 24, which would meet General MIDI specs.  The reason I don't have hard numbers for these is because I haven't benchmarked it on the target hardware, I'm still running it as a PC program for now.</div><br /><br />Naturally, the more the merrier.  <img src="./images/smilies/icon_cool.gif" alt="8-)" title="Cool" /> <br /><br /><div class="quotetitle">Memblers wrote:</div><div class="quotecontent">Actually, this time around I've got a solution for that.  I'm keeping the main version written in C, and if needed to meet my channel and low latency requirements, I'll add optimizations in assembly and/or Verilog. So I should be able to supply a DLL file of my C reference version that an emulator could use, or a VST file, free to use.  The hardware version should sound the same, might end up with some optional global (not per-channel) DSP effects like EQ, bass boost, etc that can't be in the DLL (because the code belongs to Dolby Labs, Texas Instruments, or somebody).  The main difference with the free vs hardware version is that the hardware version would have much lower latency.</div><br /><br />Processing effects like an equalizer, echo, and reverb that work on hardware would be even more awesome! I bet that messing with the EQ could act like a low-pass, band-pass, and high-pass filter by attenuation plus resonance by boosting.<br /><br /><div class="quotetitle">memblers wrote:</div><div class="quotecontent">It's pseudo-random, LFSR, basically taking a short segment of a random sequence.  The longer the sequence is, the more distorted and noise-like it becomes.  So like the Atari 2600's TIA, POKEY, though the controls were more inspired by the Atari Lynx sound hardware.<br /><br />Vector synthesis is something different but sounds very interesting.  I have what I think might be a basic form of it, but there's only one axis instead of 2.  The wavetable mode always selects 2 waveforms, and there a balance control which creates an interpolated version of the waveform.  Of those MP3s I had uploaded, on the second half of Tron Theme I was manually adjusting the balance between square and saw while it played.</div><br /><br />Ah, okay. The Genesis sound chip is capable of that randomized synthesis, I believe. It was hardly used, though. There's a VST called FMDrive that nearly perfectly emulates the YM2612 and it opens up a few tricks the chip could do that was never really utilized.<br /><br />So in Wavetable Mode, you have the option of fading between two waveshapes per channel? That reminds me of the Minimoog Voyager where the Oscillator knob fades between sawtooth, square, triangle, etc. instead of having completely separate waveshapes.<br /><br /><div class="quotetitle">memblers wrote:</div><div class="quotecontent">Currently it's 44.1khz 8-bit, I suppose I should make it 48khz though.  16-bit samples would be possible, right now the limit is that they're playing from a fairly small amount of RAM/ROM, when I make the hardware version I'll add external flash memory and see how many channels it can handle before going to 16-bit.  But yeah it is just normal lossless WAV.</div><br /><br />Well then I guess I can just cross off voice acting through DPCM and use 48kHz WAVs instead! The difference between 44.1kHz and 48 kHz is staggering, but to my knowledge there isn't a noticeable difference between 8-bit WAVs and 16-bit WAVs besides the resolution of loudness (I could very easily be wrong on that). Though, of course, the farther the hardware can be pushed, the better; it's better to have more than less.<br /><br />Another question is how would this be connected to a NES to sound through the RCA jack on the back? There's a mod you can do to a NES to enable Famicom peripherals including expansion audio (and the Squeedo is, after all, expansion audio), the ENIO EXP board to latch to the uber-mysterious expansion port on the bottom of the console, or a RCA cable sticking out of the cartridge itself. Is the link between the expansion audio on the cartridge and the RCA audio out port on the NES a consistent audio signal path or is there some abstract digital processing involved?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Joe</b> [ Thu Feb 25, 2016 10:24 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Long-term goal: a Metal Gear-like game for NES</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">AlexE wrote:</div><div class="quotecontent">The difference between 44.1kHz and 48 kHz is staggering, but to my knowledge there isn't a noticeable difference between 8-bit WAVs and 16-bit WAVs besides the resolution of loudness (I could very easily be wrong on that).</div><br />I think you've got that backwards. There's no difference between 44.1kHz and 48kHz, but the difference in resolution between 8-bit and 16-bit is usually very noticeable.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>AlexE</b> [ Thu Feb 25, 2016 12:12 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Long-term goal: a Metal Gear-like game for NES</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Joe wrote:</div><div class="quotecontent">I think you've got that backwards. There's no difference between 44.1kHz and 48kHz, but the difference in resolution between 8-bit and 16-bit is usually very noticeable.</div><br /><br />Are you sure? The sample rate of an audio file determines the highest frequency available and I can easily tell the difference between a 44.1kHz WAV and a 48kHz WAV. The latter sounds fuller and brighter. Beyond that, I can't tell the difference. I looked around the internet for an answer in terms of bit depth. The bit depth affects how loud a sound can be (96 dB at 16 bits and 48 dB at 8 bits) and the noise floor (lower the bit depth, the higher the noise floor).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Thu Feb 25, 2016 1:08 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Long-term goal: a Metal Gear-like game for NES</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">AlexE wrote:</div><div class="quotecontent">Are you sure?</div><br />Yes, he is correct.<br /><br />The difference between 44.1 kHz and 48 kHz is above the practical range of human hearing. It does not make any human-hearable difference in quality. The only reason these two samplerates exists have to do with hardware manufacturing; it has <em>nothing</em> to do with sound quality. Similar for 96 kHz: it doesn't make a real difference in the sound you hear, it's just convenient for the hardware.<br /><br />If they sound different on your hardware, this is a hardware compatibility issue. Some hardware may natively only support 44.1 kHz or 48 kHz and have to convert between them, and that conversion may introduce a noticeable change in high frequency sound. This is not the samplerate's fault, but the fault of a poor/cheap conversion operation, and has nothing to do with 48 kHz having slightly more bandwidth.<br /><br />8 or 16 bit depth, on the other hand, does make quite a difference. The difference between 8 and 16 bits is <em>well within</em> the human capabilities of hearing. It is not subtle. More than 16 bits isn't going to be noticeable for any output sound (though if you're doing recording/mixing or scientific work there are reasons to use more bits which don't really have to do with human hearing).<br /><br />There's a really good video here explaining details of digital audio like this: <a href="https://www.xiph.org/video/vid2.shtml" class="postlink">https://www.xiph.org/video/vid2.shtml</a>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Joe</b> [ Thu Feb 25, 2016 1:57 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Long-term goal: a Metal Gear-like game for NES</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />...Hey, that's what I was going to say! <img src="./images/smilies/icon_razz.gif" alt=":P" title="Razz" /> <br /><br />There is one thing left for me to mention, regarding this statement:<br /><br /><div class="quotetitle">AlexE wrote:</div><div class="quotecontent">I can easily tell the difference between a 44.1kHz WAV and a 48kHz WAV.</div><br />Aside from faulty hardware/software, it's also possible that you're subconsciously expecting a difference. It's called expectation bias. Don't feel bad, everyone has it.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>AlexE</b> [ Thu Feb 25, 2016 8:45 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Long-term goal: a Metal Gear-like game for NES</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I just realized. For some reason, I was confusing sample rate with bit rate. What I meant to say is that I can tell the difference between a 128 kbps file and a 320 kbps, not the sample rate. <img src="./images/smilies/icon_redface.gif" alt=":oops:" title="Embarassed" /> You're both correct.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">There's a really good video here explaining details of digital audio like this: <!-- m --><a class="postlink" href="https://www.xiph.org/video/vid2.shtml">https://www.xiph.org/video/vid2.shtml</a><!-- m --><br />Post	Posted: Thu Feb 25, 2016 3:08 pm<br /></div><br /><br />Well that debunking of digital audio as stairsteps just rocked my world. That explanation really helps me appreciate digital recordings rather than analog recordings since I now know that digital audio is not an exaggerated &quot;pixel-ation&quot; of the analog source and that the sound is sort of interpolated between sample points. I had no idea.<br /><br />That video makes also want to get an analog oscilloscope and frequency analyzer. They look like useful tools and interesting props for films.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thenewguy</b> [ Sat Feb 27, 2016 2:39 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Long-term goal: a Metal Gear-like game for NES</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I really like NES Metal Gear. I grew up playing that game, and it was a lot of fun.<br /><br />Anyway, good luck with the game. It'd be cool to see something like this on the NES!

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>