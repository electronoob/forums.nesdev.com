<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Define a Pallete Only For The Background</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Define a Pallete Only For The Background</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=6201">http://forums.nesdev.com/viewtopic.php?f=2&amp;t=6201</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>nathanpc</b> [ Sun Mar 21, 2010 4:53 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Define a Pallete Only For The Background</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Hello,
<br /> I'm using a background, but I want to use a different pallete for it, because at the time I only have one pallete assigned, but on the source folder I have another one called <em>bkg.pal</em>, that is a pallete for the background. But my code is like this now:
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp;.inesprg 1&nbsp; &nbsp;; 1 bank of code<br />&nbsp; &nbsp;.ineschr 1&nbsp; &nbsp;; 1 bank of spr/bkg data<br />&nbsp; &nbsp;.inesmir 1&nbsp; &nbsp;; something always 1<br />&nbsp; &nbsp;.inesmap 0&nbsp; &nbsp;; we use mapper 0<br /><br />&nbsp; &nbsp;.bank 0&nbsp; &nbsp;; bank 0 - our place for code.<br />&nbsp; &nbsp;.org $0000<br />addrLO = $10 <br />addrHI = $11<br />Sprite1_X&nbsp; &nbsp;.db 50&nbsp; &nbsp; &nbsp; &nbsp;; a X position for our sprite, start at 20<br />Sprite1_Y&nbsp; &nbsp;.db 20&nbsp; &nbsp; &nbsp; &nbsp;; a Y position for our sprite, start at 20<br />;Sprite2_X&nbsp; &nbsp;.db 50&nbsp; &nbsp; &nbsp; &nbsp;; a X position for our sprite, start at 20<br />;Sprite2_Y&nbsp; &nbsp;.db 20&nbsp; &nbsp; &nbsp; &nbsp;; a Y position for our sprite, start at 20<br />&nbsp; &nbsp;.org $8000&nbsp; ; code starts at $8000<br />&nbsp; &nbsp;<br />Start:&nbsp; <br />&nbsp; &nbsp;lda #%10001000&nbsp; ; do the setup of PPU<br />&nbsp; &nbsp;sta $2000&nbsp; &nbsp; &nbsp; &nbsp;; that we<br /><br />&nbsp; &nbsp;ldx #$00&nbsp; &nbsp; ; clear X<br /><br />&nbsp; &nbsp;lda #$3F&nbsp; &nbsp; ; have $2006 tell<br />&nbsp; &nbsp;sta $2006&nbsp; &nbsp;; $2007 to start<br />&nbsp; &nbsp;lda #$00&nbsp; &nbsp; ; at $3F00 &#40;pallete&#41;.<br />&nbsp; &nbsp;sta $2006<br /><br />loadpal:&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ; this is a freaky loop<br />&nbsp; &nbsp;lda tilepal, x&nbsp; ; that gives 32 numbers<br />&nbsp; &nbsp;sta $2007&nbsp; &nbsp; &nbsp; &nbsp;; to $2007, ending when<br />&nbsp; &nbsp;inx&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; X is 32, meaning we<br />&nbsp; &nbsp;cpx #32&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; are done.<br />&nbsp; &nbsp;bne loadpal&nbsp; &nbsp; &nbsp;; if X isn't =32, goto &quot;loadpal:&quot; line.<br /><br />&nbsp; &nbsp;lda #$20<br />&nbsp; &nbsp;sta $2006 ; give $2006 both parts of address $2020.<br />&nbsp; &nbsp;sta $2006 <br />&nbsp; &nbsp;ldx #$00<br /><br />Map_Load: <br />&nbsp; &nbsp; &nbsp;LDA $2002&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; read PPU status to reset the high/low latch <br />&nbsp; &nbsp; &nbsp;LDA #$20 <br />&nbsp; &nbsp; &nbsp;STA $2006&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; write the high byte of $2000 address <br />&nbsp; &nbsp; &nbsp;LDA #$00 <br />&nbsp; &nbsp; &nbsp;STA $2006&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; write the low byte of $2000 address <br />&nbsp; &nbsp; &nbsp;lda #low&#40;ourMap&#41; <br />&nbsp; &nbsp; &nbsp;sta addrLO <br />&nbsp; &nbsp; &nbsp;lda #high&#40;ourMap&#41;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ; start out at 0 <br />&nbsp; &nbsp; &nbsp;sta addrHI <br /><br />&nbsp; &nbsp; &nbsp;ldx #4 <br />&nbsp; &nbsp; &nbsp;ldy #0 <br /><br />Map_Load_loop: <br />&nbsp; &nbsp; &nbsp;LDA &#91;addrLO&#93;, y&nbsp; &nbsp; &nbsp;; load data from address &#40;background + the value in x&#41; <br />&nbsp; &nbsp; &nbsp;STA $2007&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; write to PPU <br />&nbsp; &nbsp; &nbsp;INy&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; X = X + 1 <br />&nbsp; &nbsp; &nbsp;BNE Map_Load_loop&nbsp; ; Branch to LoadBackgroundLoop if compare was Not Equal to zero <br />&nbsp; &nbsp; &nbsp;inc addrHI <br />&nbsp; &nbsp; &nbsp;dex <br />&nbsp; &nbsp; &nbsp;bne Map_Load_loop <br /><br />waitblank1:&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<br />&nbsp; &nbsp;lda $2002&nbsp; ; these 3 lines wait for VBlank, this loop will actually miss VBlank<br />&nbsp; &nbsp;bpl waitblank1 ; alot, in a later Day, I'll give a better way<br />&nbsp; &nbsp;txa <br />clrmem: <br />&nbsp; &nbsp;sta $000,x <br />&nbsp; &nbsp;sta $100,x <br />&nbsp; &nbsp;sta $200,x <br />&nbsp; &nbsp;sta $300,x <br />&nbsp; &nbsp;sta $400,x <br />&nbsp; &nbsp;sta $500,x <br />&nbsp; &nbsp;sta $600,x <br />&nbsp; &nbsp;sta $700,x&nbsp; ; Remove this if you're storing reset-persistent data <br />&nbsp; &nbsp;inx <br />&nbsp; &nbsp;bne clrmem<br />&nbsp; &nbsp;<br />waitblank2:&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<br />&nbsp; &nbsp;lda $2002&nbsp; ; these 3 lines wait for VBlank, this loop will actually miss VBlank<br />&nbsp; &nbsp;bpl waitblank2 ; alot, in a later Day, I'll give a better way<br />&nbsp; &nbsp;lda #%00011110<br />&nbsp; &nbsp;sta $2001<br />&nbsp; &nbsp;<br />loop:<br />&nbsp; &nbsp;jmp loop<br />&nbsp; &nbsp;<br />infinite:&nbsp; ; a label to start our infinite loop<br />nmi:<br /><br />&nbsp; &nbsp;; Load Sprite1<br />&nbsp; &nbsp;lda Sprite1_Y<br />&nbsp; &nbsp;sta $0300<br />&nbsp; &nbsp;lda #$11<br />&nbsp; &nbsp;sta $0301<br />&nbsp; &nbsp;lda #$00<br />&nbsp; &nbsp;sta $0302<br />&nbsp; &nbsp;lda Sprite1_X<br />&nbsp; &nbsp;sta $0303<br />&nbsp; &nbsp;<br />&nbsp; &nbsp;; Load Sprite2<br />&nbsp; &nbsp;;lda Sprite2_Y<br />&nbsp; &nbsp;;sta $0304<br />&nbsp; &nbsp;;lda #$12<br />&nbsp; &nbsp;;sta $0305<br />&nbsp; &nbsp;;lda #$00<br />&nbsp; &nbsp;;sta $0306<br />&nbsp; &nbsp;;lda Sprite2_X<br />&nbsp; &nbsp;;sta $0307<br />&nbsp; &nbsp;<br />&nbsp; &nbsp;lda #$01&nbsp; &nbsp;; these<br />&nbsp; &nbsp;sta $4016&nbsp; ; lines<br />&nbsp; &nbsp;lda #$00&nbsp; &nbsp;; setup/strobe the <br />&nbsp; &nbsp;sta $4016&nbsp; ; keypad.<br /><br />&nbsp; &nbsp;lda $4016&nbsp; ; load Abutton Status ; note that whatever we ain't interested<br />&nbsp; &nbsp;lda $4016&nbsp; ; load Bbutton Status ; in we just load so it'll go to the next one.<br />&nbsp; &nbsp;lda $4016&nbsp; ; load Select button status<br />&nbsp; &nbsp;lda $4016&nbsp; ; load Start button status<br />&nbsp; &nbsp;lda $4016&nbsp; ; load UP button status<br />&nbsp; &nbsp;and #1&nbsp; &nbsp; &nbsp;; AND status with #1<br />&nbsp; &nbsp;bne UPKEYdown&nbsp; ; for some reason &#40;not gonna reveal yet&#41;, need to use NotEquals<br />&nbsp; &nbsp;;with ANDs. So it'll jump &#40;branch&#41; if key was down.<br />&nbsp; &nbsp;<br />&nbsp; &nbsp;lda $4016&nbsp; ; load DOWN button status<br />&nbsp; &nbsp;and #1&nbsp; &nbsp; &nbsp;; AND status with #1<br />&nbsp; &nbsp;bne DOWNKEYdown<br /><br />&nbsp; &nbsp;lda $4016&nbsp; ; load LEFT button status<br />&nbsp; &nbsp;and #1&nbsp; &nbsp; &nbsp;; AND status with #1<br />&nbsp; &nbsp;bne LEFTKEYdown<br /><br />&nbsp; &nbsp;lda $4016&nbsp; ; load RIGHT button status<br />&nbsp; &nbsp;and #1&nbsp; &nbsp; &nbsp;; AND status with #1<br />&nbsp; &nbsp;bne RIGHTKEYdown<br />&nbsp; &nbsp;jmp NOTHINGdown&nbsp; ; if nothing was down, we just jump &#40;no check for conditions&#41;<br />&nbsp; &nbsp;; down past the rest of everything.<br /><br />UPKEYdown:<br />&nbsp; &nbsp;lda Sprite1_Y ; load A with Y position<br />&nbsp; &nbsp;sbc #1&nbsp; ; subtract 1 from A. Only can do math on A register. SBC &#40;Subtract with Borrow&#41;<br />&nbsp; &nbsp;sta Sprite1_Y ; store back to memory<br />&nbsp; &nbsp;;lda Sprite2_Y ; load A with Y position<br />&nbsp; &nbsp;;sbc #1&nbsp; ; subtract 1 from A. Only can do math on A register. SBC &#40;Subtract with Borrow&#41;<br />&nbsp; &nbsp;;sta Sprite2_Y ; store back to memory<br />&nbsp; &nbsp;jmp NOTHINGdown&nbsp; ; jump over the rest of the handling code.<br /><br />DOWNKEYdown:<br />&nbsp; &nbsp;lda Sprite1_Y <br />&nbsp; &nbsp;adc #1&nbsp; ; add 1 to A. ADC &#40;Add with Carry&#41;&#40;&#40;to A register&#41;&#41;<br />&nbsp; &nbsp;sta Sprite1_Y<br />&nbsp; &nbsp;jmp NOTHINGdown ; jump over the rest of handling code.<br /><br />LEFTKEYdown:<br />&nbsp; &nbsp;lda Sprite1_X<br />&nbsp; &nbsp;sbc #1&nbsp; <br />&nbsp; &nbsp;sta Sprite1_X<br />&nbsp; &nbsp;jmp NOTHINGdown <br />;the left and right handling code does the same as UP and Down except.. well.. with<br />; left and right. :&#41;<br /><br />RIGHTKEYdown:<br />&nbsp; &nbsp;lda Sprite1_X<br />&nbsp; &nbsp;adc #1<br />&nbsp; &nbsp;sta Sprite1_X<br />&nbsp; &nbsp;; don't need to jump to NOTHINGdown, it's right below. Saved several bytes of<br />&nbsp; &nbsp;; PRG-Bank space! :&#41;<br />&nbsp; &nbsp;<br />NOTHINGdown:<br />&nbsp; &nbsp;lda #$03<br />&nbsp; &nbsp;sta $4014<br />&nbsp; &nbsp;rti<br /><br />tilepal:<br />&nbsp; &nbsp;.incbin &quot;our.pal&quot; ; include and label our pallete<br />&nbsp; &nbsp;<br />ourMap:<br />&nbsp; &nbsp;.incbin &quot;our.map&quot; ; assuming our.map is the binary map file.<br />&nbsp; &nbsp;.bank 1&nbsp; &nbsp;; following goes in bank 1<br />&nbsp; &nbsp;.org $FFFA&nbsp; ; start at $FFFA<br />&nbsp; &nbsp;.dw nmi&nbsp; &nbsp; ; dw stands for Define Word and we give 0 as address for NMI routine<br />&nbsp; &nbsp;.dw Start ; give address of start of our code for execution on reset of NES.<br />&nbsp; &nbsp;.dw 0&nbsp; &nbsp;; give 0 for address of VBlank interrupt handler, we tell PPU not to<br />&nbsp; &nbsp;; make an interrupt for VBlank.<br />&nbsp; &nbsp;<br />&nbsp; &nbsp;.bank 2&nbsp; &nbsp;; switch to bank 2<br />&nbsp; &nbsp;.org $0000&nbsp; ; start at $0000<br />&nbsp; &nbsp;.incbin &quot;our.bkg&quot;&nbsp; ; background data<br />&nbsp; &nbsp;.incbin &quot;our.spr&quot;&nbsp; ; our sprite pic data</div>
<br />Then I want to know how can I assign a pallete only for the background.
<br />
<br />Best Regards,
<br /> Nathan Paulino Campos

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sun Mar 21, 2010 4:54 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />To assign a palette for the background, write to PPU $3F01-$3F0F.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Sun Mar 21, 2010 5:18 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Your code is based on GBAGuy's tutorial isn't it? It's full of errors. Before talking about the palette I'm gonna talk about those errors, or else your program is never going to run on a real NES.
<br />
<br />First, there are several initializations steps necessary for your program to be stable that your code just doesn't do. Take a look at the <a href="http://wiki.nesdev.com/w/index.php/Init_code" class="postlink">init code</a> from the wiki. All your programs should start with code like that, because all those steps have a reason to be there. I see that you have part of it in your code, but it's erroneously placed after several PPU operations. The initialization must be before everything. clearing the memory is optional though, and not necessary if you are careful with each variable you use (never use memory without initializing it first).
<br />
<br />Only after that initial code, after waiting 2 VBlanks, the PPU is ready for being used. See, the PPU needs some time to warm up, this is why we must wait a while before using it. But your program starts using it right away, so it would certainly fail on a real NES.
<br />
<br />OK, the palette then: You are currently loading 32 bytes of palette data, and that corresponds to 8 whole palettes (4 for the background and 4 for the foreground). Instead of using that loop that copies 32 bytes to $3F00 you can code a loop to copy any number of bytes you want to any address you want.
<br />
<br />If you want to update only the background palettes (the 4 of them), copy 16 bytes to $3F00. Want to update only the sprite palettes? Then copy 16 bytes to $3F10. It all depends of which palettes you want to update, you are not forced to update them all at once.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>nathanpc</b> [ Sun Mar 21, 2010 7:10 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Yeah, I was using many parts of the GBAGuy's tutorial, but before I start correcting the Init code things, let's do the pallete thing. I've added a new label called <em>bkgpal</em> after the <em>tilepal</em> label, like this:
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">tilepal:<br />&nbsp; &nbsp;.incbin &quot;our.pal&quot; ; include and label our sprite pallete<br />&nbsp; &nbsp;<br />bkgpal:<br />&nbsp; &nbsp;.incbin &quot;bkg.pal&quot; ; include and label our background pallete</div><br />And also, changed some things at the lines 22 to 49, now they are like this:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp;lda #$3F&nbsp; &nbsp; ; have $2006 tell<br />&nbsp; &nbsp;sta $2006&nbsp; &nbsp;; $2007 to start<br />&nbsp; &nbsp;lda #$10&nbsp; &nbsp; ; at $3F00 &#40;pallete&#41;.<br />&nbsp; &nbsp;sta $2008<br /><br />loadsprpal:&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ; this is a freaky loop<br />&nbsp; &nbsp;lda tilepal, x&nbsp; ; that gives 16 numbers<br />&nbsp; &nbsp;sta $2007&nbsp; &nbsp; &nbsp; &nbsp;; to $2007, ending when<br />&nbsp; &nbsp;inx&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; X is 16, meaning we<br />&nbsp; &nbsp;cpx #16&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; are done.<br />&nbsp; &nbsp;bne loadsprpal&nbsp; &nbsp; &nbsp;; if X isn't =16, goto &quot;loadpal:&quot; line.<br /><br />&nbsp; &nbsp;lda #$20<br />&nbsp; &nbsp;sta $2006 ; give $2006 both parts of address $2020.<br />&nbsp; &nbsp;sta $2006 <br />&nbsp; &nbsp;ldx #$00<br />&nbsp; &nbsp;<br />loadbkgpal:&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ; this is a freaky loop<br />&nbsp; &nbsp;lda bkgpal, x&nbsp; &nbsp; &nbsp;; that gives 16 numbers<br />&nbsp; &nbsp;sta $2009&nbsp; &nbsp; &nbsp; &nbsp;; to $2007, ending when<br />&nbsp; &nbsp;inx&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; X is 16, meaning we<br />&nbsp; &nbsp;cpx #16&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; are done.<br />&nbsp; &nbsp;bne loadbkgpal&nbsp; ; if X isn't =16, goto &quot;loadpal:&quot; line.<br /><br />&nbsp; &nbsp;lda #$20<br />&nbsp; &nbsp;sta $2008 ; give $2006 both parts of address $2020.<br />&nbsp; &nbsp;sta $2008 <br />&nbsp; &nbsp;ldx #$00</div>
<br />But when I've started to emulate, I just displays a entire black screen with nothing.
<br />
<br />What's wrong now?
<br /><em>PS: At least now I've tried to do it myself, without asking for code.</em> <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />
<br />
<br />Best Regards,
<br /> Nathan Paulino Campos

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Sun Mar 21, 2010 7:56 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />You're pretty much just guessing, right...? OK, I'll try to help.
<br />
<br />The palette is just a group of 32 bytes at address $3F00-$3F1F of VRAM. In order to modify the palette you have to write the colors you want to use to that location.
<br />
<br />The code you copied from GBAGuy copies all 32 bytes from the "our.pal" file to that location. The "our.pal" file is nothing more than a list of colors. If you want the quickest and cleanest solution, just edit the "our.pal" file and change the first 16 values to those you want. That's all you have to do.
<br />
<br />Now let me point out some things in your code that don't make sense. You had the VRAM address set to $2020 before trying to write your palette. That address is for a name table, you can't write your palette there. The palettes stay at $3F00.
<br />
<br />Then you try to write the data to $2009. Where did you get the $2009 from? VRAM should <strong>always</strong> be written to through the register mapped at $2007.
<br />
<br />The code you used should work if you fix it to set the VRAM address to $3F00 instead of $2020 and use register $2007 to write the data instead of $2009. But you should understand that the original 32 colors are still being used, you'll just overwrite the first 16 by doing it like that. The clean solution is to just modify the .pal file, like I said above.
<br />
<br />Also, you don't <strong>have</strong> to use external files for palettes. You can very well write the colors you want directly in the source file, like this (which I find easier to work with than an external binary file):
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">bkgpal:<br />&nbsp; &nbsp;.db $0f, $11, $21, $31 ;palette 0<br />&nbsp; &nbsp;.db $0f, $14, $24, $34 ;palette 1<br />&nbsp; &nbsp;.db $0f, $18, $28, $38 ;palette 2<br />&nbsp; &nbsp;.db $0f, $19, $29, $39 ;palette 3</div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>nathanpc</b> [ Mon Mar 22, 2010 9:11 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Thanks very much! Now all is working. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />
<br />
<br />Also, now I'm going to take a look on the Init code as you've suggested for me. <img src="./images/smilies/icon_wink.gif" alt=";)" title="Wink" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Disch</b> [ Mon Mar 22, 2010 1:10 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />also note that $2008,$2009 are not registers (they mirror $2000,$2001).  So I'm not sure why you're writing to them.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Zepper</b> [ Mon Mar 22, 2010 2:40 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Disch wrote:</div><div class="quotecontent">also note that $2008,$2009 are not registers (they mirror $2000,$2001).  So I'm not sure why you're writing to them.</div>
<br />
<br />- Uh, yeah. Weird. o.O

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Orsi</b> [ Mon Mar 22, 2010 2:47 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />$2008 and $2009 are the registers used in the GBAguy tutorial. It left me confused as well.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Mon Mar 22, 2010 3:04 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />One more reason to get rid of his tutorials.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>nathanpc</b> [ Tue Mar 23, 2010 11:21 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Oh! <img src="./images/smilies/icon_surprised.gif" alt=":o" title="Surprised" />
<br />Wait, now I've tried to change the code as you said, but I still got the same black and empty screen. My code now:
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp;lda #$3F&nbsp; &nbsp; ; have $2006 tell<br />&nbsp; &nbsp;sta $2006&nbsp; &nbsp;; $2007 to start<br />&nbsp; &nbsp;lda #$10&nbsp; &nbsp; ; at $3F00 &#40;pallete&#41;.<br />&nbsp; &nbsp;sta $2008<br /><br />loadsprpal:&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ; this is a freaky loop<br />&nbsp; &nbsp;lda tilepal, x&nbsp; ; that gives 16 numbers<br />&nbsp; &nbsp;sta $2007&nbsp; &nbsp; &nbsp; &nbsp;; to $2007, ending when<br />&nbsp; &nbsp;inx&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; X is 16, meaning we<br />&nbsp; &nbsp;cpx #16&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; are done.<br />&nbsp; &nbsp;bne loadsprpal&nbsp; &nbsp; &nbsp;; if X isn't =16, goto &quot;loadpal:&quot; line.<br /><br />&nbsp; &nbsp;lda #$20<br />&nbsp; &nbsp;sta $2006 ; give $2006 both parts of address $2020.<br />&nbsp; &nbsp;sta $2006 <br />&nbsp; &nbsp;ldx #$00<br />&nbsp; &nbsp;<br />loadbkgpal:&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ; this is a freaky loop<br />&nbsp; &nbsp;lda bkgpal, x&nbsp; &nbsp; &nbsp;; that gives 16 numbers<br />&nbsp; &nbsp;sta $2007&nbsp; &nbsp; &nbsp; &nbsp;; to $2007, ending when<br />&nbsp; &nbsp;inx&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; X is 16, meaning we<br />&nbsp; &nbsp;cpx #16&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; are done.<br />&nbsp; &nbsp;bne loadbkgpal&nbsp; ; if X isn't =16, goto &quot;loadpal:&quot; line.<br /><br />&nbsp; &nbsp;lda #$3F<br />&nbsp; &nbsp;sta $2006 ; give $2006 both parts of address $3F00.<br />&nbsp; &nbsp;lda #$00<br />&nbsp; &nbsp;sta $2006 <br />&nbsp; &nbsp;ldx #$00</div>
<br />
<br />This is making me crazy!  <img src="./images/smilies/icon_confused.gif" alt=":?" title="Confused" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Tue Mar 23, 2010 11:48 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />You are doing things in the wrong order.
<br />
<br /><strong>FIRST</strong> you have to set the destination address for the palette (through register $2006), <strong>THEN</strong> you write the data to register $2007. There is no reason for you to use the address $2020 (that address points to a name table, it has nothing to do with palettes) there in the middle, and your use of X is all messed up. You forgot to initialize it before the first loop, and you needlessly initialize it at the end.
<br />
<br />I don't like to give out code (because people tend to just copy&amp;paste it rather than study it), but this is the correction to the code you just posted:
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp;;set the destination address for sprite palettes &#40;$3F10&#41;<br />&nbsp; &nbsp;lda #$3F<br />&nbsp; &nbsp;sta $2006<br />&nbsp; &nbsp;lda #$10<br />&nbsp; &nbsp;sta $2006<br /><br />&nbsp; &nbsp;;copy 16 colors<br />&nbsp; &nbsp;ldx #$00<br />LoadSpritePalette:<br />&nbsp; &nbsp;lda SpritePalette, x<br />&nbsp; &nbsp;sta $2007<br />&nbsp; &nbsp;inx<br />&nbsp; &nbsp;cpx #16<br />&nbsp; &nbsp;bne LoadSpritePalette<br /><br />&nbsp; &nbsp;;set the destination address for background palettes &#40;$3F00&#41;<br />&nbsp; &nbsp;lda #$3F<br />&nbsp; &nbsp;sta $2006<br />&nbsp; &nbsp;lda #$00<br />&nbsp; &nbsp;sta $2006<br /><br />&nbsp; &nbsp;;copy 16 colors<br />&nbsp; &nbsp;ldx #$00<br />LoadBackgroundPalette:<br />&nbsp; &nbsp;lda BackgroundPalette, x<br />&nbsp; &nbsp;sta $2007<br />&nbsp; &nbsp;inx<br />&nbsp; &nbsp;cpx #16<br />&nbsp; &nbsp;bne LoadBackgroundPalette</div>
<br />This will write the palettes to the correct locations. However, this is just a waste of space, you don't need 2 loops for that, you could very well just store the 2 palettes together (one after the other) and copy all 32 bytes using a single loop, like the original code did.
<br />
<br />Nathan, let me give you some advice: You are clearly just guessing things, instead of trying to understand them. Guessing things until the program works is a very bad way of learning things, because in the end you don't know what you did right, it was pure luck. At this point, you should already have understood what $2006 and $2007 do, and you should already know where the palette and the name tables are in VRAM, so you shouldn't be making these silly mistakes of setting the wrong addresses.
<br />
<br />If you don't know that stuff, then you should go back and read a bit more about the architecture of the NES before trying to code again. Knowing the memory map well and knowing how to write data to VRAM are things that every newbie has to understand before writing code, otherwise we'll keep being part of this frustrating cycle where you have no idea of what's happening and need others to fix the most basic things in your code.
<br />
<br />If english is a barrier for you, you can always PM me or use the international forum and I'll try to explain stuff in portuguese, if you think that will help. But you have to do your part and study these things, because I will not have time to teach you about every little thing. I can help with stuff you don't get, but for this to work you must get some of it on your own.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Zepper</b> [ Tue Mar 23, 2010 11:50 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp;<br />&nbsp; &nbsp;ldx #$00<br />&nbsp; &nbsp;lda $2002&nbsp; ; clears the flip flop, you probably already did it before, no?<br />&nbsp; &nbsp;lda #$3F<br />&nbsp; &nbsp;sta $2006 <br />&nbsp; &nbsp;lda #$10&nbsp; &nbsp;; sprite color RAM start<br />&nbsp; &nbsp;sta $2006<br /><br />loadsprpal:&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ; this is a freaky loop<br />&nbsp; &nbsp;lda tilepal, x&nbsp; ; that gives 16 numbers<br />&nbsp; &nbsp;sta $2007&nbsp; &nbsp; &nbsp; &nbsp;; to $2007, ending when<br />&nbsp; &nbsp;inx&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; X is 16, meaning we<br />&nbsp; &nbsp;cpx #16&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; are done.<br />&nbsp; &nbsp;bne loadsprpal&nbsp; &nbsp; &nbsp;; if X isn't =16, goto &quot;loadpal:&quot; line.<br /><br />&nbsp; &nbsp;lda #$3F<br />&nbsp; &nbsp;sta $2006<br />&nbsp; &nbsp;lda #$00<br />&nbsp; &nbsp;sta $2006 <br />&nbsp; &nbsp;<br />loadbkgpal:&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ; this is a freaky loop<br />&nbsp; &nbsp;lda bkgpal, x&nbsp; &nbsp; &nbsp;; that gives 16 numbers<br />&nbsp; &nbsp;sta $2007&nbsp; &nbsp; &nbsp; &nbsp;; to $2007, ending when<br />&nbsp; &nbsp;inx&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; X is 16, meaning we<br />&nbsp; &nbsp;cpx #16&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; are done.<br />&nbsp; &nbsp;bne loadbkgpal&nbsp; ; if X isn't =16, goto &quot;loadpal:&quot; line.<br /></div>
<br />
<br />EDIT: Meh, Tokumaru was faster. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Tue Mar 23, 2010 11:54 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Zepper, you forgot to initialize X for the second loop.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>nathanpc</b> [ Tue Mar 23, 2010 12:01 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><img src="./images/smilies/icon_lol.gif" alt=":lol:" title="Laughing" /> Dois brazucas vendo quem vai ser o primeiro a ajudar. <img src="./images/smilies/icon_razz.gif" alt=":P" title="Razz" />
<br /><strong>tokumaru</strong> Wins! <img src="./images/smilies/icon_razz.gif" alt=":P" title="Razz" />
<br />
<br />Thanks very much guys, now I promise that I'm going to study the code. <img src="./images/smilies/icon_wink.gif" alt=";)" title="Wink" />

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>