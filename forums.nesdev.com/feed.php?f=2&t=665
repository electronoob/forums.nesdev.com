<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=2&amp;t=665" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2005-10-18T20:55:56-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=2&amp;t=665</id>
<entry>
<author><name><![CDATA[Celius]]></name></author>
<updated>2005-10-18T20:55:56-07:00</updated>
<published>2005-10-18T20:55:56-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=665&amp;p=5629#p5629</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=665&amp;p=5629#p5629"/>
<title type="html"><![CDATA[My RLE Compression method]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=665&amp;p=5629#p5629"><![CDATA[
I've already downloaded your NES tools package. I've been using name for making title screens. I like it quite a bit. But I revised my compression code, and it works good. I'll put it up, I'm not on my PC right now, so I have to put it up when I get to my PC. I prefer my compression method, I think it will do for now.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=138">Celius</a> — Tue Oct 18, 2005 8:55 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2005-10-18T20:33:20-07:00</updated>
<published>2005-10-18T20:33:20-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=665&amp;p=5627#p5627</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=665&amp;p=5627#p5627"/>
<title type="html"><![CDATA[My RLE Compression method]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=665&amp;p=5627#p5627"><![CDATA[
I've got some ready-made, working, tested (on NTSC NES hardware no less) RLE compression and decompression code in <a href="http://www.pineight.com/pc/#ted" class="postlink">my NES tools package</a>.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Tue Oct 18, 2005 8:33 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2005-10-18T05:54:27-07:00</updated>
<published>2005-10-18T05:54:27-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=665&amp;p=5615#p5615</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=665&amp;p=5615#p5615"/>
<title type="html"><![CDATA[My RLE Compression method]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=665&amp;p=5615#p5615"><![CDATA[
<div class="quotetitle">Celius wrote:</div><div class="quotecontent"><br />It does work for me... I just wrote that today, so I will be making modifications to make it better. I'm surprised that it seems like it would work to other people.<br /></div><br /><br />In this case it is not a matter of "working". The code may do what it is supposed to, but may be inneficient at that.<br /><br />I would really like to agree with Disch when he says "If it ain't broke, don't fix it". In fact this logic works for most stuff, but in a machine as slow as the NES somethings can make quite a difference...<br /><br />It certainly is much better to use 1 instruction (AND) instead of 8 (4 ASL + 4 LSR). And since your flag is only 1 bit (bit 7) it would be faster even if you did 1 ASL followed by 1 LSR.<br /><br />Having more bits for the repeat count is good, as it can describe longer runs and improve the compression ratio. Compressing 127 bytes can only be better than compressing 15, right?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Tue Oct 18, 2005 5:54 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Disch]]></name></author>
<updated>2005-10-17T22:37:57-07:00</updated>
<published>2005-10-17T22:37:57-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=665&amp;p=5608#p5608</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=665&amp;p=5608#p5608"/>
<title type="html"><![CDATA[My RLE Compression method]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=665&amp;p=5608#p5608"><![CDATA[
<div class="quotetitle">Celius wrote:</div><div class="quotecontent"><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">   pha<br />   rts<br /></div><br /></div><br /><br /><br />CRASH<br /><br />The return address will be screwed if you leave stuff pushed on the stack... RTS will think the value you just pushed is the address to jump back to... and will jump to garbage code.<br /><br />I don't see where you're seperating runs from non-runs... this code looks like it will treat EVERY block as a run... instead of looking at the high bit to see if it should run or not.<br /><br />I think you were more on the right track with your first post's code.  And hey, if that first posts code worked, then rock on.  If it ain't broke, don't fix it.  ;D<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=33">Disch</a> — Mon Oct 17, 2005 10:37 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Celius]]></name></author>
<updated>2005-10-17T22:28:32-07:00</updated>
<published>2005-10-17T22:28:32-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=665&amp;p=5607#p5607</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=665&amp;p=5607#p5607"/>
<title type="html"><![CDATA[My RLE Compression method]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=665&amp;p=5607#p5607"><![CDATA[
Okay, I haven't tested this yet, and I'm really not sure if this works, but it should. This could be the master RLE compression method! Here it is, study and see if you can get what I'm trying to do:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">mapload:<br />   dec amount<br />here:<br />   lda mapdata,x<br />   pha<br />   inx<br />   lda mapdata,x<br />   tay<br />   inx<br />display:<br />   lda mapdata,x<br />   sta $2007<br />   dey<br />   bne display<br />   pla<br />   tay   <br />   cpy #$00<br />   bne gohere<br />   rts<br /><br />gohere:<br />   dey<br />   inx<br />   tya<br />   pha<br />   rts<br />   <br />mapdata:<br />   .db $04,$FF,$39,$38,$37,$36<br /></div><br /><br />This really could be awesome! what do you think? I haven't tested it. There could be some awful error. Do you think it could work?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=138">Celius</a> — Mon Oct 17, 2005 10:28 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Disch]]></name></author>
<updated>2005-10-17T22:02:51-07:00</updated>
<published>2005-10-17T22:02:51-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=665&amp;p=5606#p5606</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=665&amp;p=5606#p5606"/>
<title type="html"><![CDATA[My RLE Compression method]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=665&amp;p=5606#p5606"><![CDATA[
AND is used for "flipping off" bits.  When you want to ignore certain bits of a byte, you can use AND to mask them off.  Simply AND with the bits you want to keep.<br /><br />so AND #$0F  will turn off the high 4 bits of A, leaving the low 4 bits in tact.  AND #$7F will turn off only the high bit, leaving the low 7.<br /><br />Conversely, ORA turns on certain bits.  Just ORA with the bits you want to turn on.  Like if you want to flip on the high bit, you could just ORA #$80.<br /><br />EOR toggles bits.  just EOR with the bits you want to be toggled.  ie  "EOR #$F0" will toggle the high 4 bits (0 becomes 1, 1 becomes 0), and will leave the low 4 bits unchanged.<br /><br />As for using the low 7 bits... you wouldn't have to change anything in your code... except you'd AND with #$7F instead of #$0F (keep the low 7 bits instead of just the low 4).  After that, A can be used as your length for the following loops<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=33">Disch</a> — Mon Oct 17, 2005 10:02 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Celius]]></name></author>
<updated>2005-10-17T21:56:28-07:00</updated>
<published>2005-10-17T21:56:28-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=665&amp;p=5605#p5605</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=665&amp;p=5605#p5605"/>
<title type="html"><![CDATA[My RLE Compression method]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=665&amp;p=5605#p5605"><![CDATA[
It does work for me... I just wrote that today, so I will be making modifications to make it better. I'm surprised that it seems like it would work to other people. I really hate the and instruction. Okay, just so I'm getting this right, in the and instruction, isn't it like so:<br /><br />0&amp;0=0<br />1&amp;0=0<br />0&amp;1=0<br />1&amp;1=1<br /><br />Okay, so I could just change that aslx4 lsrx4 to and #$0F? Okay, so I'll do that. But how I use all 7 bits for the RLE method? I bet I could just have it say like:<br /><br />if the first bit is 7<br />and #$0F<br />remainder=r<br />next byte=c<br />dipsplay the next r tiles c times<br /><br />Mapdata:<br /> .db $84,$FF,$31,$32,$33,$34<br /><br />How does that sound? I think that's excellent. What do you think? that would completely fill the name table! That code up there would.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=138">Celius</a> — Mon Oct 17, 2005 9:56 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Disch]]></name></author>
<updated>2005-10-17T21:39:26-07:00</updated>
<published>2005-10-17T21:39:26-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=665&amp;p=5604#p5604</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=665&amp;p=5604#p5604"/>
<title type="html"><![CDATA[My RLE Compression method]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=665&amp;p=5604#p5604"><![CDATA[
ASL x4, LSR x4?  Any reason why you're avoiding  AND?<br /><br />Also, why only use the low 4 bits for the length?  why not all 7?<br /><br />You can push the 'here' label forward one line (after the LDA command) for a slight speed increase, since A nor X never change inside the loop, you don't have to keep reloading A every iteration.<br /><br />Plus that seems like a <span style="text-decoration: underline">very</span> strange place to put your $2005 writes o_O<br /><br />Looks like it'll work though =D.  Although it seems to only want to decompress one "block" ($85,$24,$03,$45,$24,$59 --- it will stop [rts] after it does the $85 $24 .. is that what you want?)<br /><br />Don't want to sound critical... just trying to offer optimization suggestions ^^.  Call it a bad habit... I overanalyze things sometimes.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=33">Disch</a> — Mon Oct 17, 2005 9:39 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Celius]]></name></author>
<updated>2005-10-17T21:28:48-07:00</updated>
<published>2005-10-17T21:28:48-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=665&amp;p=5603#p5603</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=665&amp;p=5603#p5603"/>
<title type="html"><![CDATA[My RLE Compression method]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=665&amp;p=5603#p5603"><![CDATA[
I believe Disch is the one who told me of this, but I've created a routine in 6502 that will load this map successfully. How the compression works:<br /><br />Mapdata:<br />.db $85,$24<br /><br />This is only part of the .db segment by the way. Okay, the decompression will read the first byte, and it will read that bit 7 is set, and it will then take the 2nd digit of the first byte, and that will be the number of times the following tile number will be displayed. So with just that, 24 will be displayed 5 times. Understand? Okay. Here we have more tiles, but these next ones are uncompressed tiles:<br /><br />Mapdata:<br />.db $85,$24,$03,$45,$24,$59<br /><br />Notice that the third byte says 03. It is set up so that if bit 7 is 0, then take the second digit, which is 3, and display the next 3 as uncompressed tiles. Understand? okay. Here's the decompression code:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">namload:<br />   dec amount<br />it:<br />   lda mapdata,x<br />   bmi putit<br />   asl a<br />   asl a<br />   asl a<br />   asl a<br />   lsr a<br />   lsr a<br />   lsr a<br />   lsr a<br />   tay<br />   inx<br />putmore:<br />   lda mapdata,x<br />   sta $2007<br />   inx<br />   dey<br />   bne putmore<br />   inx<br />   lda #$00<br />   sta $2005<br />   sta $2005   <br />   rts<br /><br />putit:<br />   asl a<br />   asl a<br />   asl a<br />   asl a<br />   lsr a<br />   lsr a<br />   lsr a<br />   lsr a<br />   tay<br />   inx<br />here:<br />   lda mapdata,x<br />   sta $2007<br />   dey<br />   bne here<br />   inx<br />   lda #$00<br />   sta $2005<br />   sta $2005<br />   rts<br /></div><br /><br />And amount is a variable that holds the amount of bytes are in the "mapdata" array/arrays. And in my quick demo, I just had it jsring to this routine until amount was 0. Tell me if you have any questions. Just thought I'd be somewhat helpful to people that were wondering about this.<br /><br />Edit:<br />Also, another thing. This will be kind of confusing. You must set "amount" to equal as many different tile#'s there are minus two, not how many bytes there are.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=138">Celius</a> — Mon Oct 17, 2005 9:28 pm</p><hr />
]]></content>
</entry>
</feed>