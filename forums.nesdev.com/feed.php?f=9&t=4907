<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=9&amp;t=4907" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2009-06-26T18:48:57-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=9&amp;t=4907</id>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2009-06-26T18:48:57-07:00</updated>
<published>2009-06-26T18:48:57-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4907&amp;p=48285#p48285</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4907&amp;p=48285#p48285"/>
<title type="html"><![CDATA[PowerPak unorthodox expansions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4907&amp;p=48285#p48285"><![CDATA[
<div class="quotetitle">naI wrote:</div><div class="quotecontent"><br />Or, best idea, what about an integrated development environment in which people could code in BASIC or assembly?<br /></div><br /><a href="http://nesdev.com/bbs/viewtopic.php?p=44879#44879" class="postlink">Last time we discussed this</a>, I'm not sure if we figured out a proper keyboard substitute for the NES.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Fri Jun 26, 2009 6:48 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[naI]]></name></author>
<updated>2009-06-26T17:54:31-07:00</updated>
<published>2009-06-26T17:54:31-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4907&amp;p=48282#p48282</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4907&amp;p=48282#p48282"/>
<title type="html"><![CDATA[PowerPak unorthodox expansions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4907&amp;p=48282#p48282"><![CDATA[
Any chance for an inline .ips patcher on the PowerPak?<br /><br />Or, best idea, what about an integrated development environment in which people could code in BASIC or assembly?  Obviously, it would require modding a keyboard, because who honestly has a Famicom keyboard?  Oooh!  Maybe it could interface with the Commodore 64/128!  I would love to have that ability...<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3959">naI</a> — Fri Jun 26, 2009 5:54 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[marvelus10]]></name></author>
<updated>2009-04-29T23:31:05-07:00</updated>
<published>2009-04-29T23:31:05-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4907&amp;p=46370#p46370</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4907&amp;p=46370#p46370"/>
<title type="html"><![CDATA[PowerPak unorthodox expansions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4907&amp;p=46370#p46370"><![CDATA[
Did this get abandoned?<br />I'm curious to know what you guys have come up with if it didn't.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=2415">marvelus10</a> — Wed Apr 29, 2009 11:31 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2009-03-09T16:11:03-07:00</updated>
<published>2009-03-09T16:11:03-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4907&amp;p=44072#p44072</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4907&amp;p=44072#p44072"/>
<title type="html"><![CDATA[PowerPak unorthodox expansions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4907&amp;p=44072#p44072"><![CDATA[
<div class="quotetitle">NovaYoshi wrote:</div><div class="quotecontent"><br />something simple like adding bankswitched CHR-RAM to an SNROM type mapper wouldn't make it stop being an NES game<br /></div><br />I agree. It would add capabilities that have already been seen in CPROM (Videomation).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Mon Mar 09, 2009 4:11 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[NovaYoshi]]></name></author>
<updated>2009-03-09T12:22:03-07:00</updated>
<published>2009-03-09T12:22:03-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4907&amp;p=44064#p44064</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4907&amp;p=44064#p44064"/>
<title type="html"><![CDATA[PowerPak unorthodox expansions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4907&amp;p=44064#p44064"><![CDATA[
In my opinion, something simple like adding bankswitched CHR-RAM to an SNROM type mapper wouldn't make it stop being an NES game...<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3838">NovaYoshi</a> — Mon Mar 09, 2009 12:22 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Super-Hampster]]></name></author>
<updated>2009-03-07T22:42:14-07:00</updated>
<published>2009-03-07T22:42:14-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4907&amp;p=44010#p44010</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4907&amp;p=44010#p44010"/>
<title type="html"><![CDATA[PowerPak unorthodox expansions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4907&amp;p=44010#p44010"><![CDATA[
So would I. For the record I was speaking hypothetically about the 2600, but I would be impressed.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=493">Super-Hampster</a> — Sat Mar 07, 2009 10:42 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[marvelus10]]></name></author>
<updated>2009-03-07T21:22:07-07:00</updated>
<published>2009-03-07T21:22:07-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4907&amp;p=44007#p44007</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4907&amp;p=44007#p44007"/>
<title type="html"><![CDATA[PowerPak unorthodox expansions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4907&amp;p=44007#p44007"><![CDATA[
If you could emulate other systems through the NES I would be very impressed.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=2415">marvelus10</a> — Sat Mar 07, 2009 9:22 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Super-Hampster]]></name></author>
<updated>2009-03-07T16:47:08-07:00</updated>
<published>2009-03-07T16:47:08-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4907&amp;p=43994#p43994</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4907&amp;p=43994#p43994"/>
<title type="html"><![CDATA[PowerPak unorthodox expansions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4907&amp;p=43994#p43994"><![CDATA[
I say push it to the limit. I'm not all caught up in the whole "is it still an NES game" argument. If you can figure out how to boot a 2600 rom on a powerpak more power to you. Go for it I say.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=493">Super-Hampster</a> — Sat Mar 07, 2009 4:47 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[strangenesfreak]]></name></author>
<updated>2009-03-03T22:31:05-07:00</updated>
<published>2009-03-03T22:31:05-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4907&amp;p=43893#p43893</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4907&amp;p=43893#p43893"/>
<title type="html"><![CDATA[PowerPak unorthodox expansions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4907&amp;p=43893#p43893"><![CDATA[
<div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />SID would be way better. SID + 2A03 = awesome<br /></div><br />The SID is indeed a talented chip.  Amazing how they were able to make something like that for just a 1982 computer!<br /><br /><div class="quotetitle">kyuusaku wrote:</div><div class="quotecontent"><br />I'm not sure I understand, what I had in mind was using block RAM for a sprite system that would overlay the background. Since the overlay would require the VRAM also be in block RAM, the number of sprites would be limited.. also the sprites would have to use the same palette as the BG tile... I can't really think of anywhere this'd be a good idea <img src="http://forums.nesdev.com/images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /><br /></div><br /><br />Many MSX games and some NES games (Gauntlet comes to mind) draw some/most their enemy objects to the BG, which move tile by tile.  A number of NES games (CV, CVIII, etc.) also draw moving spike pillars to the BG, tile by tile.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Oh yeah, an X/Y coordinate interrupt system is doable.<br /></div><br />What do you mean?  For multi-layered scrolling?<br /><br />Another solution I thought of to background layered scrolling was to make use of the 512KB CHR-RAM and simply have either the game or the mapper calculate the patterns of the layers at 8 different pixel offsets and write to CHR-RAM.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3329">strangenesfreak</a> — Tue Mar 03, 2009 10:31 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[CartCollector]]></name></author>
<updated>2009-03-03T20:39:17-07:00</updated>
<published>2009-03-03T20:39:17-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4907&amp;p=43888#p43888</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4907&amp;p=43888#p43888"/>
<title type="html"><![CDATA[PowerPak unorthodox expansions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4907&amp;p=43888#p43888"><![CDATA[
<div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />For example: Adding an Atari TIA or POKEY chip for additional expanded audio.<br /></div><br /><br />SID would be way better. SID + 2A03 = awesome<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=1345">CartCollector</a> — Tue Mar 03, 2009 8:39 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[kyuusaku]]></name></author>
<updated>2009-03-03T20:09:10-07:00</updated>
<published>2009-03-03T20:09:10-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4907&amp;p=43885#p43885</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4907&amp;p=43885#p43885"/>
<title type="html"><![CDATA[PowerPak unorthodox expansions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4907&amp;p=43885#p43885"><![CDATA[
<div class="quotetitle">strangenesfreak wrote:</div><div class="quotecontent"><br /><div class="quotetitle">kyuusaku wrote:</div><div class="quotecontent">Another scrolling background is doable with the block RAM.<br /></div><br />Ah, yeah, I forgot about that.  I would assume that the block RAM would be for CHR-RAM in this case, correct?</div><br />It would serve as replacement VRAM, but since there's 3K and not 4K of BRAM, the new background must use another NT/AT system to fit more than a single screen into 1K. It would also be possible to ignore the PPU's BG and just have two new 1.5 screen layers. (With a bus arbiter the VRAM can be mapped to CPU space too).<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />I assume this is about the block RAM...<br /></div><br />Right, a portion of CHR RAM implemented in block RAM or registers, with a pixel interface.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Like the tile-based "sprites" in most MSX games?  That would be interesting, since on an NES, these "sprites" could do smooth vertical scrolling while the BG objects in many MSX games usually do not.<br /></div><br />I'm not sure I understand, what I had in mind was using block RAM for a sprite system that would overlay the background. Since the overlay would require the VRAM also be in block RAM, the number of sprites would be limited.. also the sprites would have to use the same palette as the BG tile... I can't really think of anywhere this'd be a good idea :D<br /><br />Oh yeah, an X/Y coordinate interrupt system is doable.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=20">kyuusaku</a> — Tue Mar 03, 2009 8:09 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[strangenesfreak]]></name></author>
<updated>2009-03-03T19:08:01-07:00</updated>
<published>2009-03-03T19:08:01-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4907&amp;p=43882#p43882</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4907&amp;p=43882#p43882"/>
<title type="html"><![CDATA[PowerPak unorthodox expansions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4907&amp;p=43882#p43882"><![CDATA[
<div class="quotetitle">kyuusaku wrote:</div><div class="quotecontent"><br />Another scrolling background is doable with the block RAM.<br /></div><br />Ah, yeah, I forgot about that.  I would assume that the block RAM would be for CHR-RAM in this case, correct?<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />-background sprites<br /></div><br />Like the tile-based "sprites" in most MSX games?  That would be interesting, since on an NES, these "sprites" could do smooth vertical scrolling while the BG objects in many MSX games usually do not.  But horizontally scrolling would still need to be choppy.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />-virtual framebuffer -&gt; CHR RAM mapper<br /></div><br />I assume this is about the block RAM... or are you talking about the regular CHR-RAM?  The lack of pin access for the FPGA makes this a bit tricky.  Perhaps the mapper could generate code of an unrolled loop to the CPU.  It could save the PC, feed LDA $whatever, STA $2007 for a number of times, then feed a JMP back to the saved PC.<br /><br />This brings back the CPU optimization idea I had.  Note that all of this CPU optimization can only be done while PRG is executed, not the NES stock RAM.  Here's an example of the mapper making an indirect JSR out of an illegal instruction, and optimizing an RTS into a JMP:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">  KIL ;$02<br />  db &lt;lookup, &gt;lookup<br /><br />;When the mapper fetches $02 as an opcode from the PRG-RAM data bus, it'll save the PC to block RAM, disable PRG-RAM for that byte, and feed the CPU bus with $6C, turning it into:<br /><br />  JMP &#40;lookup&#41; ;lookup points to &quot;routine&quot;<br /><br />routine:<br />  ...<br />  RTS<br /><br />;When the mapper fetches $60 as an opcode from the data bus, it'll restore the PC from block RAM, disable PRG-RAM, and feed instead:<br /><br />  JMP saved_PC<br /></div><br /><br />Hopefully, that's clarified better.  The generation of unrolled loops by the mapper could also be an interesting expansion as well.  They must be planned so that the PC will not overflow to zero page.  Here's an example with writes from CPU $0300-$04FF to PPU $2000-$21FF via $2007:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">  LDA #$20<br />  STA $2006<br />  LDA #$00<br />  STA $2006<br />  LDA #$01 ;high byte of block size<br />  STA highblock ;mapper register<br />  LDA #$FF ;low byte of block size<br />  STA lowblock ;mapper register<br />  LDA #$03 ;high byte of address to read<br />  STA highaddr ;mapper register<br />  LDA #$00 ;low byte of address<br />  STA low addr<br />  STA write_to_2007 ;next instruction is at &quot;saved_PC&quot;<br /><br />;at this point, the mapper would save the PC and feed the following:<br /><br />  LDA $0300<br />  STA $2007<br />  LDA $0301<br />  STA $2007<br /><br />;...<br />  <br />  LDA $04FF<br />  STA $2007<br />  JMP saved_PC ;the mapper feeds in the address for the absolute jump<br /><br />saved_PC: ;continuing off from &quot;STA write_to_2007&quot;<br />  ...<br /></div><br /><br />If the same mapper also supported sound feed to $4011 (such as Memblers's Squeedo mapper), this unrolled loop generation (for writes to $2004) could also be used as an interrupt-able substitute for sprite DMA.  That way, interrupts for writing to $4011 can go smoothly without interference by sprite DMA.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3329">strangenesfreak</a> — Tue Mar 03, 2009 7:08 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[kyuusaku]]></name></author>
<updated>2009-03-02T22:22:38-07:00</updated>
<published>2009-03-02T22:22:38-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4907&amp;p=43852#p43852</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4907&amp;p=43852#p43852"/>
<title type="html"><![CDATA[PowerPak unorthodox expansions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4907&amp;p=43852#p43852"><![CDATA[
Another scrolling background is doable with the block RAM.<br /><br />Other ideas:<br />-very small RISC core (40/80 MHz using DLL)<br />-dual port CHR RAM (only 3K of block RAM available)<br />-virtual framebuffer -&gt; CHR RAM mapper<br />-background sprites<br />-high frequency sequential math unit<br />-working MMC5 <img src="http://forums.nesdev.com/images/smilies/icon_rolleyes.gif" alt=":roll:" title="Rolling Eyes" /><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=20">kyuusaku</a> — Mon Mar 02, 2009 10:22 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[strangenesfreak]]></name></author>
<updated>2009-03-02T19:11:45-07:00</updated>
<published>2009-03-02T19:11:45-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4907&amp;p=43848#p43848</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4907&amp;p=43848#p43848"/>
<title type="html"><![CDATA[PowerPak unorthodox expansions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4907&amp;p=43848#p43848"><![CDATA[
<div class="quotetitle">tokumaru wrote:</div><div class="quotecontent"><br />Me too, but color attributes will really get in the way.<br /></div><br />If the extra layer is behind the foreground, you could still use attributes that only change vertically.  If it's in front of the background, attributes could be normal but horizontal scrolling of the layer would have to increase ahead of the foreground by 8 pixel amounts.  For both cases, transparency between layers would have to be per 8 horizontal pixels (or per 8x8 tile, practically), not per individual pixel.  I made a <a href="http://strfr.freehostia.com/nes.shtml#choppy" class="postlink">demo</a> that demonstrates what it would look like with the latter case of layered scrolling.<br /><br />Unfortunately, I doubt that merely the FPGA is enough to allow for this.  It has no access to CHR-RAM bits 3-19, so it may be impossible without rewiring the PowerPak.<br /><br />Another possible expansion I had thought of was PRG code optimization.  This would make use of extra RAM within the PowerPak, as an extra stack.  The mapper would need to know the 6502 instruction set and read off whatever the PRG chips send to the bus.  So if it finds satisfied branches, subroutine calls, and returns, the mapper would generate JMPs instead.  It could also read redundant/useless illegal instructions to generate code, effectively creating new instructions out of useless ones, such as indirect JSRs, branch always, etc.  This may be hard to understand, so I'll elaborate on this some time later.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3329">strangenesfreak</a> — Mon Mar 02, 2009 7:11 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2009-03-02T18:51:33-07:00</updated>
<published>2009-03-02T18:51:33-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4907&amp;p=43845#p43845</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4907&amp;p=43845#p43845"/>
<title type="html"><![CDATA[PowerPak unorthodox expansions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4907&amp;p=43845#p43845"><![CDATA[
<div class="quotetitle">Anders_A wrote:</div><div class="quotecontent"><br />I'd like to see a second background layer with independent scrolling.<br /></div><br />Me too, but color attributes will really get in the way.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Mon Mar 02, 2009 6:51 pm</p><hr />
]]></content>
</entry>
</feed>