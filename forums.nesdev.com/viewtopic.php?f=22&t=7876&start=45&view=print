<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - New Project</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">New Project</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=22&amp;t=7876">http://forums.nesdev.com/viewtopic.php?f=22&amp;t=7876</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>4</strong> of <strong>7</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>dsv101</b> [ Sun Jun 26, 2011 5:49 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />i read it all, i just have to do some other things to get me familiar with NES Programming which what you told me will come into my code soon.
<br />
<br />I never ignore advice, good or bad, it's just how i am <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />
<br />
<br />Now i feel that im creating a bad vibe with you guys, i'm sorry :/

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>unregistered</b> [ Sun Jun 26, 2011 6:37 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Thank you tokumaru and 3gengames for the positive encouragement here!  <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Sun Jun 26, 2011 7:12 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">dsv101 wrote:</div><div class="quotecontent">Now i feel that im creating a bad vibe with you guys, i'm sorry :/</div>
<br />No bad vibe, don't worry...
<br />
<br />You can do as you want now that the advice is given. If you have read what we said and still think that for now you should read the controller your way, then that's your choice. Sometimes we need first hand experience to understand why something is good/bad as opposed to just trusting others.
<br />
<br />I assure you that soon you'll feel the need to switch to the other method! <img src="./images/smilies/icon_cool.gif" alt="8)" title="Cool" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>3gengames</b> [ Sun Jun 26, 2011 7:50 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />If you make the routine use Y for the counter and X to loop which controller to read, then you can also read both controllers if you save another byte and on the ROL and LSR use the mode $4016,X and then ControllerButtons,X and read both controllers inside one loop with about 5 extra lines of code. My game read 4 controllers going through only 2 loops and then passes them to my main program. It a huge help to be able to do so much with a simple JSR, you'll learn the significance of using these types of techniques as your programs get bigger and you get more experienced.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>dsv101</b> [ Sun Jun 26, 2011 10:19 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />thanks or the advice guys <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Mon Jun 27, 2011 5:20 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />It's possible to use the output byte itself as the counter by prefilling it with $01. The ROL clears the carry until after the eighth read, when it sets the carry to true.
<br />
<br />In addition, systems with hardwired controllers (such as the original Family Computer sold in Japan) put the hardwired controller on bit 0 and the plugged-in controller on bit 1. Reading the pad produces $x1 if a button on a hardwired controller is pressed or $x2 if the corresponding button on the plugged-in controller is pressed. So AND with $03 to ignore all other bits and compare with 1 to set carry if one or both of the buttons is pressed.
<br />
<br />Here's the code I use, which modifies neither X nor Y (for various reasons related to postprocessing that I'll teach about later):
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">JOY1 = $4016<br />JOY2 = $4017<br /><br />read_both_pads:<br />&nbsp; lda #$01<br />&nbsp; sta keys_held_2p&nbsp; ; set up so that the 8th ROL will SEC<br />&nbsp; sta JOY1&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ; latch button states into the pads'<br />&nbsp; lda #0&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ; shift registers<br />&nbsp; sta JOY1<br />&nbsp; loop:<br />&nbsp; &nbsp; lda JOY1<br />&nbsp; &nbsp; and #$03&nbsp; &nbsp;; on Famicom, 1 means a press on the hardwired<br />&nbsp; &nbsp; cmp #1&nbsp; &nbsp; &nbsp;; pad and 2 means a press on a plugged-in pad<br />&nbsp; &nbsp; rol keys_held_1p<br />&nbsp; &nbsp; lda JOY2<br />&nbsp; &nbsp; and #$03<br />&nbsp; &nbsp; cmp #1<br />&nbsp; &nbsp; rol keys_held_2p&nbsp; ; after eight of these, the 1 bit from<br />&nbsp; &nbsp; bcc loop&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ; $01 has made its way to carry<br />&nbsp; rts<br /></div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>3gengames</b> [ Mon Jun 27, 2011 9:16 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I've never even though of clearing the pads before, that's a great idea! I'm about to do that in my code. <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /> But even I am confused on the AND #$03 and then CMP #$01. Shouldn't you can the big you want since any unwanted bit read from DB2 will make a true read on the single value since it wasn't cleared from the AND? And in that case, it'd just be better to LDA and then ROL, right?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Mon Jun 27, 2011 9:50 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">3gengames wrote:</div><div class="quotecontent">I am confused on the AND #$03 and then CMP #$01</div>
<br />Some Famicom controllers return the button states in bit 1 instead of bit 0, so the AND #$03 is meant to keep the two bits that can possibly contain button states. The CMP #$01 detects whether a button is pressed regardless of the bit. If either bit is set, the button is pressed.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>3gengames</b> [ Mon Jun 27, 2011 10:44 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent"><div class="quotetitle">3gengames wrote:</div><div class="quotecontent">I am confused on the AND #$03 and then CMP #$01</div><br />Some Famicom controllers return the button states in bit 1 instead of bit 0, so the AND #$03 is meant to keep the two bits that can possibly contain button states. The CMP #$01 detects whether a button is pressed regardless of the bit. If either bit is set, the button is pressed.</div>
<br />
<br />Okay, but the controllers are hardwired on, wouldn't that mean any controller attached to the expansion port would interfere wit hthe hardwired controller and vice versa?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Mon Jun 27, 2011 12:39 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Conventionally, the hardwired controllers on an original Famicom (or the ones plugged into the front ports on the AV model) are numbered 1 and 2, and the plug-in controllers 3 and 4. Player 1 may use controller 1 (first hardwired controller) or 3 (first plug-in controller), and player 2 may use controller 2 or 4. As I understand it, only a four-player game treats all four as distinct input sources.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>3gengames</b> [ Mon Jun 27, 2011 12:41 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Okay, I guess that makes sense, although on NES I guess the data bits are different, so that's why it was confusing. Okay, cool.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>unregistered</b> [ Mon Jun 27, 2011 1:03 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent"><div class="quotetitle">3gengames wrote:</div><div class="quotecontent">I am confused on the AND #$03 and then CMP #$01</div><br />Some Famicom controllers return the button states in bit 1 instead of bit 0, so the AND #$03 is meant to keep the two bits that can possibly contain button states. The CMP #$01 detects whether a button is pressed regardless of the bit. If either bit is set, the button is pressed.</div>
<br />
<br />CMP is magical?  <img src="./images/smilies/icon_confused.gif" alt=":?" title="Confused" />   How does CMP #$01 detect whether a button is pressed rehgardless of the bit?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Mon Jun 27, 2011 1:12 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">unregistered wrote:</div><div class="quotecontent">CMP is magical?  <img src="./images/smilies/icon_confused.gif" alt=":?" title="Confused" />   How does CMP #$01 detect whether a button is pressed rehgardless of the bit?</div>
<br />The "magic" is that CMP #$01 is basically equivalent to C &lt;- !Z and CMP #$80 is basically equivalent to C &lt;- N
<br />
<br />You can quite often make your code smaller/faster using those two tricks.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>qbradq</b> [ Mon Jun 27, 2011 1:22 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I haven't looked at the code, but I suspect it is using BCS (Branch if Carry Set). After the CMP (CoMPare) instruction if the value in the A register is greater than or equal to the value in memory (in this case the value 1) the Carry flag will be set.
<br />
<br />So basically this lets you say "if the controller data is greater than zero".
<br />
<br />There's a faster way though. After your lda instruction, use BEQ (Branch if EQual) or BNE (Branch if Not Equal). After a load instruction the Zero flag will be set if the value loaded is zero, clear otherwise.
<br />
<br />Example:
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">ldx #8<br />polling_loop:<br />&nbsp; asl controller_state<br />&nbsp; lda reg_ctrl_port1<br />&nbsp; beq next<br />&nbsp; inc controller_state<br />next:<br />&nbsp; dex<br />&nbsp; bne polling_loop</div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Mon Jun 27, 2011 1:32 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">qbradq wrote:</div><div class="quotecontent">There's a faster way though. After your lda instruction, use BEQ (Branch if EQual) or BNE (Branch if Not Equal). After a load instruction the Zero flag will be set if the value loaded is zero, clear otherwise.</div>
<br />Nope, that doesn't work, you have to use AND because the top bits are not connected when reading $4016, so they usually (if cart doesn't have resistors on the data bus, like PowerPak) return the top bits of the value that was previously on the data bus (most often $4x). See <!-- m --><a class="postlink" href="http://nesdev.com/rom.txt">http://nesdev.com/rom.txt</a><!-- m --> for more details.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>4</strong> of <strong>7</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>