<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Randomizing block permutations for a color matching game.</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="https://forums.nesdev.com/">https://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Randomizing block permutations for a color matching game.</span><br /><span class="gensmall"><a href="https://forums.nesdev.com/viewtopic.php?f=2&amp;t=17520">https://forums.nesdev.com/viewtopic.php?f=2&amp;t=17520</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>slembcke</b> [ Wed Jul 11, 2018 11:58 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Randomizing block permutations for a color matching game.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />So for some reference, I'm working on a falling block, color matching game. There are 4 colors of chests, and keys that unlock them.<br /><img src="http://files.slembcke.net/upshot/upshot_4fWmENCm.png" alt="Image" /><br /><br />What I want to do is make it so that every N drops there will be an exact count of each color of chests and keys. That way you never get too many keys all at once, or a long run where you don't get a color of key that you really need. To get the pacing of the game right based on the key/chest ratio, N ended up being 24 (not a convenient power of two). The column the blocks fall from is also stored in a separate permutation table where &quot;N&quot; is 6. Between the two, it's ~400 bytes of tables. <br /><br />The quick and dirty method I've used so far was to concatenate a few permutation tables together into the ROM. Are there any good dirt simple algorithms for generating permutation tables on the fly that fit the NES well? Should I just consider the permutation tables good enough and small enough as is?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>pubby</b> [ Thu Jul 12, 2018 3:49 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Randomizing block permutations for a color matching game</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Can you store the table in RAM and randomly shuffle it at runtime?<br /><br />BTW I wouldn't fret about table size in a puzzle game!  <img src="./images/smilies/Mfr_icon_homebrew.png" alt=":beer:" title="Beer" />  <img src="./images/smilies/icon_razz.gif" alt=":P" title="Razz" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Thu Jul 12, 2018 7:14 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Randomizing block permutations for a color matching game</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The Bag algorithm used in most <em>Tetris</em> products since 2001 generates all possible outcomes into an array in RAM and then deals the whole set before reshuffling. This can be done with a Fisher-Yates shuffle at the cost of one RNG call and one multiply (to rescale the RNG's output to the number of items remaining to be shuffled) per piece dealt. Modern <em>Tetris</em> games usually use an array of length 7, one for each Tetrimino, but <em>The New Tetris</em> for N64 may have used an array of length 63, with 9 copies of each Tetrimino to serve it's added play mechanic of making gold &quot;monosquares&quot; for bonus points.<br /><br />The least recently used (LRU) algorithm, a variant of which is used in <em>Tetris the Grand Master</em>, loads all outcomes into a circular array in RAM. On each turn, it runs the RNG once, truncates the result to a range of about half of the array size, swaps the current outcome with the outcome <em>r</em> positions later (with wraparound), deals that, and moves to the next position in the array. It somewhat resembles a neutered RC4 algorithm, and the subjective output isn't quite as sensitive to whether the RNG's range is or isn't a power of 2. I've used it for target selection in <em>Thwaite</em>, piece selection in <em>RHDE</em>, and NKI selection in my port of <em>robotfindskitten</em>.<br /><br />Both have the useful property of making an outcome not repeat immediately, instead making it more likely after other outcomes have been dealt.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>slembcke</b> [ Thu Jul 12, 2018 8:33 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Randomizing block permutations for a color matching game</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Oh! I really like that LRU  + ring buffer idea, it nicely solves the issue of the selection array not being a power of two. I think that might be exactly what I was looking for, and even solves a couple of the issues with just concatenating a bunch of permutations together.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Thu Jul 12, 2018 9:29 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Randomizing block permutations for a color matching game</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The name &quot;LRU&quot; comes from a <a href="https://en.wikipedia.org/wiki/Cache_replacement_policies#LRU" class="postlink">cache replacement policy</a>, and &quot;bag&quot; comes from &quot;Random Tetrimino Bag&quot; in <a href="https://web.archive.org/web/20060825034009/http://www.eamobile.com/Web/Catalog/US/en/game/mobile/ProductDetailOverviewView/product-24171" class="postlink">EA's description of a mobile <em>Tetris</em> game</a>, as <a href="https://tetrisconcept.net/threads/the-tetris-guidelines-random-generator-is-apparently-simple.349/page-2" class="postlink">discussed on tetrisconcept.net</a>.<br /><br /><blockquote style="margin-left: 1%; padding-left: 1%; border-left: 3px solid #555577;">
Random Tetrimino Bag: This feature eliminates long runs of bad luck by shuffling the seven Tetriminos.
</blockquote><br /><br />See also <a href="http://harddrop.com/wiki/Random_Generator" class="postlink">&quot;Random Generator&quot;</a> and <a href="http://harddrop.com/wiki/TGM_randomizer" class="postlink">&quot;TGM randomizer&quot;</a> on Hard Drop Wiki.<br /><br />If anyone cares, I've made a reference implementation of the Bag and LRU algorithms in Python. Here's what it prints:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">Memoryless test:<br />&nbsp;4&nbsp; 3 12&nbsp; 3 22&nbsp; 1 17&nbsp; 9 15&nbsp; 3 19 16 21 19 22 21 10 12&nbsp; 6 22 21 15&nbsp; 0 17<br />21 15&nbsp; 6&nbsp; 5&nbsp; 4 20&nbsp; 5&nbsp; 7&nbsp; 8 18&nbsp; 0 20&nbsp; 2 17 21 20&nbsp; 2&nbsp; 4 22&nbsp; 3 23 13&nbsp; 7 16<br />&nbsp;9&nbsp; 6&nbsp; 5&nbsp; 9&nbsp; 1 16 19&nbsp; 3 15&nbsp; 6&nbsp; 5 21 17&nbsp; 9 16 12&nbsp; 0 11&nbsp; 6 22&nbsp; 5 23&nbsp; 4&nbsp; 2<br />22&nbsp; 6 15 20 21 18 17&nbsp; 4 16 20 15 22 23&nbsp; 0 12&nbsp; 2 11 15 13 12 20&nbsp; 2 22&nbsp; 3<br />17 20 17 20 19&nbsp; 6&nbsp; 4 14 16 19 11&nbsp; 7&nbsp; 2 20 16 19 16 20&nbsp; 0&nbsp; 2&nbsp; 2&nbsp; 4 16&nbsp; 1<br />&nbsp;0&nbsp; 6 18 14&nbsp; 1 12 11 16 22&nbsp; 7 22&nbsp; 3&nbsp; 7&nbsp; 3&nbsp; 9 22 20&nbsp; 9 21 22&nbsp; 4 10 16&nbsp; 2<br />23 17 22&nbsp; 8 22 15 18 13 15 15&nbsp; 7 16 20&nbsp; 2 19 14&nbsp; 4 10&nbsp; 9&nbsp; 5&nbsp; 7&nbsp; 2&nbsp; 5 12<br />21 10 11&nbsp; 7 13 22&nbsp; 6 13&nbsp; 0 22 19&nbsp; 5 22 22&nbsp; 5&nbsp; 3 22&nbsp; 6 17&nbsp; 5 17&nbsp; 9 11 11<br />22 16 13 16&nbsp; 6 14&nbsp; 5 21&nbsp; 7 12 15 21 19 21 21 16&nbsp; 8&nbsp; 1&nbsp; 4&nbsp; 3 16 12 16&nbsp; 4<br />&nbsp;9 15 12 18&nbsp; 4 20 22 17 17 13&nbsp; 0&nbsp; 0 15&nbsp; 3 22 12 15&nbsp; 2 21&nbsp; 5&nbsp; 8 18&nbsp; 0 23<br />LRU test:<br />&nbsp;4&nbsp; 2&nbsp; 8&nbsp; 5&nbsp; 7&nbsp; 3&nbsp; 9&nbsp; 0 10&nbsp; 6 14 16 13 17 12&nbsp; 1 18 21 19 11&nbsp; 5&nbsp; 4 22&nbsp; 2<br />&nbsp;8 20&nbsp; 7 15&nbsp; 6 10&nbsp; 9 17&nbsp; 3 23 12 18 11&nbsp; 1 14&nbsp; 5 13&nbsp; 4&nbsp; 8 21&nbsp; 7 15 10&nbsp; 6<br />19&nbsp; 2&nbsp; 3 12 23 16 20 22 14&nbsp; 0 11&nbsp; 1 13&nbsp; 8 17 15 18 19&nbsp; 2 21&nbsp; 7&nbsp; 3&nbsp; 4&nbsp; 5<br />&nbsp;9 14 20 12&nbsp; 1&nbsp; 6 16 22 13 10 19&nbsp; 2&nbsp; 0&nbsp; 8 11&nbsp; 7&nbsp; 4 23&nbsp; 9&nbsp; 5 15 18 21&nbsp; 1<br />22 14 10 17 20&nbsp; 6 16 13&nbsp; 0&nbsp; 8 23 19&nbsp; 9&nbsp; 2 15 11&nbsp; 7 18&nbsp; 1 10&nbsp; 4 14 21 16<br />17 13&nbsp; 8&nbsp; 5&nbsp; 6 22 19&nbsp; 2 20&nbsp; 0&nbsp; 3&nbsp; 9 10 18 23 11&nbsp; 4&nbsp; 1 13 17 14&nbsp; 7 21 15<br />12 19&nbsp; 8&nbsp; 5 20 22&nbsp; 2&nbsp; 0 18 10 11 16 13 23 17 21&nbsp; 4&nbsp; 6&nbsp; 3 19&nbsp; 8&nbsp; 7 12&nbsp; 2<br />&nbsp;9&nbsp; 0 22&nbsp; 1 20 11 13 17 10&nbsp; 4&nbsp; 6 23 14&nbsp; 3&nbsp; 7&nbsp; 5 19 16&nbsp; 0&nbsp; 9&nbsp; 8&nbsp; 1 18 12<br />20 11 21 17 15 23&nbsp; 3&nbsp; 7 10 13&nbsp; 4&nbsp; 5 16&nbsp; 2 19&nbsp; 8 12&nbsp; 0&nbsp; 1 22 18&nbsp; 9 14 11<br />&nbsp;3&nbsp; 6 10 15&nbsp; 4 21 17 20 16 12 19&nbsp; 2 23 13&nbsp; 9 14&nbsp; 8 18 22&nbsp; 3&nbsp; 6&nbsp; 7 11 15<br />Bag test:<br />12&nbsp; 2 21&nbsp; 1&nbsp; 8&nbsp; 5 20 23 13&nbsp; 6 11 19&nbsp; 9 10 15 22 14 17&nbsp; 7&nbsp; 3&nbsp; 4 16 18&nbsp; 0<br />&nbsp;6 23 19 11 22 16 13 15 18&nbsp; 0 21 12&nbsp; 8&nbsp; 9&nbsp; 4 10&nbsp; 5&nbsp; 7&nbsp; 2&nbsp; 1&nbsp; 3 17 20 14<br />&nbsp;5 19&nbsp; 0&nbsp; 9 10 17&nbsp; 1&nbsp; 3 13 11 18 20 22&nbsp; 6 15&nbsp; 8&nbsp; 2 12&nbsp; 4&nbsp; 7 23 21 14 16<br />11 16 12 19 22 23&nbsp; 1 13 10 21&nbsp; 2&nbsp; 7&nbsp; 8 18 14&nbsp; 0&nbsp; 9 20&nbsp; 3 15&nbsp; 4&nbsp; 5&nbsp; 6 17<br />&nbsp;7 14&nbsp; 0 18 11 16&nbsp; 2&nbsp; 1 10 15 22 20 19&nbsp; 3 13 23&nbsp; 8&nbsp; 4&nbsp; 9&nbsp; 5 12 17 21&nbsp; 6<br />&nbsp;6 20&nbsp; 1 12&nbsp; 9 18 21 15 11&nbsp; 2 13&nbsp; 5 16&nbsp; 4&nbsp; 0 14 17&nbsp; 7 10&nbsp; 3 22&nbsp; 8 19 23<br />19 21&nbsp; 3 17 22 12&nbsp; 0&nbsp; 6&nbsp; 1 11 15 18&nbsp; 8 14&nbsp; 9 20&nbsp; 7&nbsp; 2&nbsp; 4 13 23 10 16&nbsp; 5<br />15&nbsp; 8 21&nbsp; 4 16 10&nbsp; 3&nbsp; 2 13 18 20&nbsp; 0&nbsp; 9&nbsp; 1 17 19 22 14 23&nbsp; 5&nbsp; 6&nbsp; 7 12 11<br />&nbsp;1&nbsp; 8&nbsp; 9 12 15 21 13 20 17 14&nbsp; 6 10&nbsp; 0 11 23&nbsp; 5 16&nbsp; 4&nbsp; 7&nbsp; 2 22 19&nbsp; 3 18<br />&nbsp;6&nbsp; 1 15 12 22&nbsp; 8 21&nbsp; 3 23 10&nbsp; 2 13&nbsp; 0&nbsp; 9 19 11&nbsp; 5 16 18 20&nbsp; 4 17 14&nbsp; 7<br /></div><br />Notice that in &quot;Bag test&quot;, each outcome appears once in each line of 24.

		
			<br clear="all" /><br />

			<table class="tablebg" width="100%" cellspacing="1">
			<tr>
				<td><b class="genmed">Attachments: </b></td>
			</tr>
			
				<tr>
					<td>
			<span class="genmed">
				<img src="./styles/subsilver2/imageset/icon_topic_attach.gif" width="14" height="18" alt="" title="" /> 
				<a href="./download/file.php?id=13034">bag_lru.zip</a> [1.37 KiB]
			</span><br />
			<span class="gensmall">Downloaded 16 times</span>
		

		<br />
	</td>
				</tr>
			
			</table>
		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>slembcke</b> [ Thu Jul 12, 2018 11:24 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Randomizing block permutations for a color matching game</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The bag algorithm seems to be more or less exactly what I've done now. I wrote a script that used Fisher-Yates and concatenated a few permutations. The most noticeable thing is that certain drops are notable (like there is a double red chest drop), and are always followed by the same drop since there are only a handful of permutations. Obviously that wouldn't be a problem using a RNG at runtime. Still... I really like that LRU version, and it doesn't need any non-POT modulos.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Rahsennor</b> [ Sat Jul 14, 2018 1:34 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Randomizing block permutations for a color matching game</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />RNGs can be reduced to non-power-of-two ranges using rerolls: modulo by the next largest power of two, then if the value is out of range, reject it and reroll. The masking ensures a second roll happens less than 50% of the time (and a third less than 25% of the time, etc) so the performance hit is normally neglible. I haven't tried it on the NES, but it may well be faster than a modulo.<br /><br />This is the <em>only</em> unbiased way to reduce the range of a random number generator, if you care about perfect fairness. A modulo or multiplication doesn't distribute the inputs to the outputs evenly - some outputs will always be slightly more likely than others, unless the input range is an integer multiple of the output range.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>slembcke</b> [ Mon Jul 16, 2018 5:15 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Randomizing block permutations for a color matching game</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />So far I've been terribly happy with that modified LRU algorithm. The &quot;key&quot; blocks in this game should be fairly spread out, and the way it works feels really good.<br /><br />Rerolling: That's also really interesting... I was pondering how to do that fairly. Kind of obvious in retrospect, basically the same as generating uniform noise within a unit sphere. I'm currently using the 8 bit LFSR algorithm from the wiki, and didn't bother to read up on a statistical analysis of it. Maybe that isn't good enough to bother? Meh. PRNGs are such a black hole. If it feels good move on I guess. <img src="./images/smilies/icon_wink.gif" alt=";)" title="Wink" />

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>