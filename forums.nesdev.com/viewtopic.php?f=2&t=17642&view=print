<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Approach to manage multiple exit points in a map</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Approach to manage multiple exit points in a map</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=17642">http://forums.nesdev.com/viewtopic.php?f=2&amp;t=17642</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Banshaku</b> [ Wed Aug 08, 2018 8:07 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Approach to manage multiple exit points in a map</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />When you have a game where the maps goes only from left to right and the exit is always at the end then it is quite easy to manage the exit point (end of the map) or the bottomless bit (other holes in the map) but what if your map would allow to exit at multiple locations, either by falling through a hole in the middle of the current map and ending up in another one, having some possible ladder that either goes up or down which causes multiple branching point and bottomless pits?<br /><br />For now I'm not sure yet where and how to manage it so before starting to implement, I thought it would be a good idea to listen to other people opinion before making some mess.<br /><br />For now, one possible way could be when processing the current frame:<br /><br />- while processing user input, if actor goes out of bound (up/down of screen or begin/end of current map), raise a flag<br />- later during the frame processing, if flag out of bound, check location<br />  ? this is where I'm not sure &quot;what&quot; location means:<br />    - current screen in the map (1 screen is 256 pixel), check if exited up/down/left/right and react on that <br />    - x, y position again possible hitboxes (seems intensive)<br />    - have a list of exit point and check somehow against them (not sure what and how yet, seems similar to hitbox)<br /><br />Maybe there is something even easier, it just that I don't see it yet. I write these days the logic in C so it's a lot easier to visualize so idea in either C or asm and why it is better that way will be really appreciated.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Wed Aug 08, 2018 8:58 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Approach to manage multiple exit points in a map</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />In <em>The Curse of Possum Hollow</em>, each map has a list of exit points. Each exit point has a source (in 16x16 pixel units), a destination map ID, and a destination position. When one is on screen, the engine checks to see if the player is inside it.<br /><br />In addition, in both <em>Curse</em> and its predecessor <em>Haunted: Halloween '85</em>, each map has a side, top, or bottom exit and an exit size. Touching a full-height wall at the right side activates the side exit. Approaching the top or bottom of the screen activates a top or bottom exit, so long as the player is close enough to the end of the map. (If not, it's processed as an ordinary ceiling or pit.)<br /><br />Here's the exit logic that both <em>Haunted</em> games use, roughly translated into C:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">// These are set to 0 at the start of every map<br />unsigned char boss_running = 0;<br />unsigned char want_exit = 0;<br /><br />// This is in the main loop<br />void check_exit() {<br />&nbsp; switch (level.exit_type) {<br />&nbsp; &nbsp; case EXIT_RIGHT:<br />&nbsp; &nbsp; &nbsp; if (actor_x&#91;0&#93; &gt;= map_width - 8) {<br />&nbsp; &nbsp; &nbsp; &nbsp; want_exit = true;<br />&nbsp; &nbsp; &nbsp; }<br />&nbsp; &nbsp; &nbsp; break;<br />&nbsp; &nbsp; case EXIT_TOP:<br />&nbsp; &nbsp; &nbsp; if (actor_x&#91;0&#93; &gt;= map_width - level.exit_argument<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &amp;&amp; actor_y&#91;0&#93; &lt; 16) {<br />&nbsp; &nbsp; &nbsp; &nbsp; want_exit = true;<br />&nbsp; &nbsp; &nbsp; }<br />&nbsp; &nbsp; &nbsp; break;<br />&nbsp; &nbsp; case EXIT_BOTTOM:<br />&nbsp; &nbsp; &nbsp; if (actor_x&#91;0&#93; &gt;= map_width - level.exit_argument<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &amp;&amp; actor_y&#91;0&#93; &gt;= level.pit_height - 16) {<br />&nbsp; &nbsp; &nbsp; &nbsp; want_exit = true;<br />&nbsp; &nbsp; &nbsp; }<br />&nbsp; &nbsp; &nbsp; break;<br />&nbsp; &nbsp; case EXIT_BOSS:<br />&nbsp; &nbsp; &nbsp; if (actor_x&#91;0&#93; &gt;= map_width - 160<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &amp;&amp; !boss_running) {<br />&nbsp; &nbsp; &nbsp; &nbsp; boss_running = level.exit_argument;<br />&nbsp; &nbsp; &nbsp; &nbsp; boss_setup_procs&#91;boss_running&#93;();<br />&nbsp; &nbsp; &nbsp; }<br />&nbsp; &nbsp; &nbsp; break;<br />&nbsp; }<br />&nbsp; // Omitted: Scan the level's exit point list<br />}<br /><br />// The main loop also calls this.<br />// During a boss, its run procedure will set want_exit<br />// once the boss is defeated.<br />if (boss_running) {<br />&nbsp; boss_run_procs&#91;boss_running&#93;();<br />}<br /></div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Banshaku</b> [ Wed Aug 08, 2018 9:28 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Approach to manage multiple exit points in a map</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />That gives me some ideas, thank you for the pseudo-code.<br /><br />This mean in your case that if you map has multiple pits, any pits becomes &quot;the bottom exit&quot; case. What if you have one case where you have a ladder that goes at the bottom after the pits. Since your example show the bottom exit tested first, would the exit list still be tested later even thought the flag was set? Or because the flag was set, it would check if the exit exist in the list to know which one it is? (and unknown one would means a bottomless pit, I guess?)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Wed Aug 08, 2018 9:50 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Approach to manage multiple exit points in a map</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Banshaku wrote:</div><div class="quotecontent">This mean in your case that if you map has multiple pits, any pits becomes &quot;the bottom exit&quot; case. What if you have one case where you have a ladder that goes at the bottom after the pits.</div><br />In top and bottom exits, <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">level.exit_argument</tt> is a width value that distinguishes the ladder from the pits. If the ladder is 64 pixels from the right side of the map, and the pits are 128 pixels from the right side of the map, set it to 96 so that the <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">actor_x[0] &gt;= map_width - level.exit_argument</tt> test distinguishes the two.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Wed Aug 08, 2018 10:15 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Approach to manage multiple exit points in a map</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Whenever I need metatiles to have special behaviors that need extra parameters, I flag them as having the specific behavior (in this case there would be an &quot;exit&quot; flag somewhere in each metatile's definition), and whenever there's a collision with them I look them up in a list of special behavior blocks sorted by coordinate, where I can find the remaining parameters to execute whatever is that the block does (in this case, the target location). If the list is long, I use binary search instead of comparing element by element.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Banshaku</b> [ Wed Aug 08, 2018 6:13 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Approach to manage multiple exit points in a map</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />@tepples<br /><br />The part that confuse me is when you say &quot;from the right side of the map&quot;, like either the map represent 1 screen (8 bit value) and there is an exit in that current location or there is only 1 exit from the top from this 16 bit value.  Then later other exit point are confirmed from a list.  You example gives me a lot of ideas to start make my own, I just want to make sure I understand your example properly.<br /><br />@Tokumaru<br /><br />I was thinking about that too, making a metatile with a special attribute for the exit point. My current issue with that is that is even though I would like to implement it, my current test code from 10 years ago was using some kind of ideas of the top 4 bits was for the color for the metatile and the bottom 4 bits are used for some flag. The issue with that is that it reduce the amount of possible flags to 16 values only, which could be enough. If not, I would need to separate the extra attribute per metatile in its own byte but that would increase the size and require to edit it either manually or updating the code of the map editor I didn't touch in 10 years. The other thing is that it would increase the count of metatile for special case like these per screen. Maybe this is not an issue, need to test it first. I will keep that idea in mind, thanks <img src="./images/smilies/icon_wink.gif" alt=";)" title="Wink" /><br /><br />Another thing I see in Tepple example is &quot;exiting&quot; the screen doesn't mean to be out of bound ( y &lt; 0 or &gt; 240) from an hardware point of view but more from a specified logical boundary.  For action game similar to mega man, ninja gaiden etc maybe this would be fine too, which is what I hope to be able to make with such an engine.  I don't know why I was so much set on an hardware boundary. I will see how much impact it as with a different offset.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Wed Aug 08, 2018 7:37 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Approach to manage multiple exit points in a map</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Banshaku wrote:</div><div class="quotecontent">The part that confuse me is when you say &quot;from the right side of the map&quot;, like either the map represent 1 screen (8 bit value) and there is an exit in that current location or there is only 1 exit from the top from this 16 bit value.  Then later other exit point are confirmed from a list.  You example gives me a lot of ideas to start make my own, I just want to make sure I understand your example properly.</div><br />There are two different exit systems. One is based on reaching the end of the map, which can be up to 8192 by 240 pixels in size. A map can have only one exit using that method. All secondary exits use the 16x16-pixel exit points.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Rahsennor</b> [ Wed Aug 08, 2018 8:42 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Approach to manage multiple exit points in a map</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I like give each block type an effect field. Could be &quot;do nothing&quot;, &quot;pick up coin&quot;, &quot;finish level&quot;, &quot;go up one room&quot;, &quot;go down one room&quot;... it's just a jump table, stored in parallel to attributes like solid/water/air/etc, and triggered whenever the player (or even a monster if I want that) touches a block of the coresponding type.<br /><br />They're arbitrary code, so they can read data from elsewhere, like &quot;number of room above&quot;, &quot;last saved overworld map location&quot;, &quot;is player holding key&quot;, &quot;is player on ladder&quot; and so on as needed. They can even be completely generic, jumping through a second per-level table or toggling multipurpose flags that can be used by other 'scripts'. Standing on a block with the &quot;toggle flag 1&quot; effect might open a door, trigger a trap, spawn a boss or even all three, depending on what reads that flag in the current level.<br /><br />That's on PC though, I guess the overhead might be a problem on the NES. I'd probably still use it anyway, just for the flexibility.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Wed Aug 08, 2018 9:05 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Approach to manage multiple exit points in a map</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />If you want to make different bottomless pits lead to different places, you can simply have a list specifying the X coordinates where the destination changes, and what the destinations are (could even be death, despite the fact that making mortal dangers indistinguishable from passageways isn't a great game design choice). Then, when the player goes out of bounds, scan the list and stop when you find an X coordinate greater than the player's, and the destination before that is the one you should use.<br /><br />If you want exits that are not out of the level's bounds, you can simply create an &quot;exit&quot; object, which can have the dimensions you need. If your object definitions are anything like mine, you'll have a parameter byte that each object type uses for a different purpose. For the &quot;exit&quot; object, this parameter could be the destination, if it fits in 8-bits, or the index of a more complex entry in a table of exits.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Banshaku</b> [ Wed Aug 08, 2018 11:58 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Approach to manage multiple exit points in a map</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />My current test maps maybe don't have anything complicated yet so I think I can get away with simple testing of location for the first phase until I define my real game.  I just did some quick hack and was able to go from maps to maps based on everyone comments. Now I need to write the real thing. For the first testing, an out of bound check based on direction (up/down/left/right) and x location was just enough to do the job.<br /><br />I think it is very uncommon for game like mega man to have bottomless pit and exit point pit in the same map so I guess that case was maybe overthinking and bad design, like you mentioned.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Sumez</b> [ Thu Aug 09, 2018 3:14 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Approach to manage multiple exit points in a map</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />It's my impression that classic 8 bit games with this mechanic usually do it in one of two ways, depending on which makes sense for their game design:<br /><br />1. Store your world/level data in a way that the game engine is able to automatically calculate which &quot;room&quot;, etc. to load up depending on where you leave the previous one. Ie. if you fall through the floor of room A with an X coordinate of 729, you'll automatically spawn in the top of room B with the same X coordinate. This allows for really dynamic map design that makes more sense for the player, and it saves a lot of work defining exit and entry points.<br />Obviously there's a lot of overhead to this, and it requires you to design your game in a very specific way. It's definitely overkill if your game isn't a large sprawling metroidvania from the get-go. To get around the limitations, it might even be a good idea to combine with method #2<br /><br />2. Simply define the exit point by coordinate limits. Eg. coordinate 0+: Room X, coordinate 600+: Room Y, etc. Though they probably exist, and it's definitely common in modern games, I don't recall seing any game of the NES era treating exits outside the bounderies of the level as &quot;objects&quot; in the level. (but if you have stuff like doors in the background they of course are)<br />Super Mario Bros. has a really primitive implitation of this mechanic, which is the reason for famous glitches like the minus world, or the green pipe to the 4-2 warp zone that speedrunners use. The exit location simply changes when the scoll coordinate progresses to a specific coordinate.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Oziphantom</b> [ Thu Aug 09, 2018 3:33 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Approach to manage multiple exit points in a map</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />There is basically one method. <br /><br />Volumes. You put down a &quot;volume&quot; and detect that the player entered it then warp as needed. <br /><br />If you make separate AABB collision volumes and use them. <br />If you make Special collision data flags<br />If you make custom meta tiles that do it<br /><br />Its all the same thing, just implementation details. <br /><br />If you are limited to flags at 16. Do you have more than 16 per screen or &quot;area&quot;. You can make them index into a &quot;warp coords for this screen/map/node/portal/area&quot; <br /><br />If you don't use all your &quot;metatiles/blocks&quot; then you can say have F0 F1 F2 FX where X is the warp index etc

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Banshaku</b> [ Thu Aug 09, 2018 4:36 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Approach to manage multiple exit points in a map</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I think the trick with the metatile is an interesting one.  I will keep that in mind. thanks!

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Thu Aug 09, 2018 8:38 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Approach to manage multiple exit points in a map</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />If I wanted something quick, I'd use the object system for it (assuming you have one in place). Simply make an invisible object that checks for collisions against the player.<br /><br />Depending on your game you might not want to waste an object slot for this though.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Banshaku</b> [ Thu Aug 09, 2018 9:20 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Approach to manage multiple exit points in a map</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />For now the only entity that is managed is the main actor so no system is in place yet.  Now that I'm getting close to a current milestone (transition between maps and basic but not perfect movement of main actor) I need to start to implement such system so I will keep that idea in mind too. Thanks!

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>