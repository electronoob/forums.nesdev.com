<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Difference between ld and objcopy (GCC)</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Difference between ld and objcopy (GCC)</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=5&amp;t=10176">http://forums.nesdev.com/viewtopic.php?f=5&amp;t=10176</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Sun Jun 16, 2013 1:17 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Difference between ld and objcopy (GCC)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />This is something that have always puzzled me. I understand what is an assembler, compiler, and executable file, and I also have a good concept of what is an executable added with debug info.<br /><br />So far my understanding is the following. A &quot;modern&quot; assembler does not generate executable code straight, as it was the case for very simple/naive assemblers (where .org statements were your only control of where code is going to be located, and where there was never a debugger).<br /><br />More modern assemblers instead produces an &quot;object file&quot;, which is a mix of executable code but with a header, lacking references (it shows all 0x00 in hexadecimal), and debug labels at the end, so that other programs can link with this one, or even call this file directly while executing (which is the case of .dll files on windows).<br /><br />Now that was for the part I understood. From now on there is things I'm not too sure about :<br /><br />The role of the program called &quot;ld&quot; is to deal with those object files. It is possible to combine multiple object files into one, and do this again, again and again it one wants. A simple ld call on a single object file would simply produces the exact same file at output. On every (explicit or implicit) call of ld, a linkscript have to be provided, or else ld don't know where to put which section in memory when resolving the labels.<br /><br />If a linkscript is not provided, some &quot;default linkscript&quot; whch is either hard coded into ld or located somewhere I have no idea where, will be used. In the case of computer program development, one does not have to worry about linkscripts at all, as everyting will do fine with the default one. On the other side, when doing embedded development, it is extremely unlikely that the default linkscript describes your target sytem correctly. In this case it is necessary to write a good link-script, or to use some kind of development kit which will hide it from you (it is sad but apparently this solution is the most common one, at least 90% of programmers would have no idea a link script even exists, myself I didn't know they existed until last month).<br /><br />Apparently, under certain condition, ld produces a &quot;final&quot; executable, which is stripped of the debug labels and header. Then the output can't be linked any more. I'm not too sure when this happens or how this is done. For this reason, at least one call to ld has to be done when compiling a program. If a call to gcc is done without &quot;-S&quot; or &quot;-c&quot; a ghost call to ld will be done without the user even knowing it. The only valid reason I see as why they did this is to simplify the compilation of very simple single-file programs.<br /><br />On the other hand, objcopy is almost the same as ld. The only difference is that it can only take a single object file as input, while ld can take many.<br /><br />Therefore I don't see the use of objcopy at all.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sun Jun 16, 2013 1:27 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Difference between ld and objcopy (GCC)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />On some platforms, ld combines multiple object files into a single file in the same underlying format as object files, so that (for instance) the resulting file can include debugging symbols. An emulator with debug support can load these object files directly, or one can use objcopy to translate them into a raw binary for burning onto a cartridge or use in a more basic emulator. This was true of devkitARM, the major Game Boy Advance homebrew toolchain, back when I was into gbadev: the included link scripts for arm-eabi-ld to target GBA ROM and GBA multiboot produced .elf files, and running them through arm-eabi-objcopy would produce a proper executable.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Sun Jun 16, 2013 1:36 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Difference between ld and objcopy (GCC)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />OK so in fact .elf is simply a .o that has been created by merging some .o, and that was &quot;artificially&quot; named otherwise, right ? And how comes I do not need objcopy when developing for my PC, but I need it when developing for the GBA, for instance ?<br /><br />Is this because a &quot;.exe&quot; (or the linux equivalent of it) is not a raw binary file like used on embedded systems, but rather simply an object file that my operating systems &quot;objcopies&quot; into memory at runtime ?<br /><br />EDIT : Also this would make linking a useless step for single file programs, right ? Because the assembler generates an object file that can already be executed, since all labels are resolved.<br /><br />For bigger project linking is typically done a single time but it could be done 45 times in series if one wanted to do it, right ?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sun Jun 16, 2013 1:59 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Difference between ld and objcopy (GCC)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">Is this because a &quot;.exe&quot; (or the linux equivalent of it) is not a raw binary file like used on embedded systems, but rather simply an object file that my operating systems &quot;objcopies&quot; into memory at runtime ?</div><br />Yes. Linux executables are ELF, and Windows executables are PE, a variant of the COFF format. Wine began as just an experimental PE loader, and it became able to run Windows applications once someone got the bright idea to reimplement Win32 APIs.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">EDIT : Also this would make linking a useless step for single file programs, right ? Because the assembler generates an object file that can already be executed, since all labels are resolved.</div><br />Real world programs on platforms larger than the NES aren't &quot;single file programs&quot;, as they use system libraries such as libc. When you link such a program, ld looks through libc for functions that your program calls but does not define.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">For bigger project linking is typically done a single time but it could be done 45 times in series if one wanted to do it, right ?</div><br />Provided you're making 45 different executables. Linking is what allows subroutines in one file to see subroutines in others.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dwedit</b> [ Sun Jun 16, 2013 3:50 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Difference between ld and objcopy (GCC)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />GBA emulators will load ELF files and internally convert them to BIN as it loads them to make things nicer for developers.  But you can't flash that onto a cartridge.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Tue Jun 18, 2013 2:43 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Difference between ld and objcopy (GCC)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I'd like to do a hack of a GBA game. It is possible to do a reverse objcopy of the original ROM so that it becomes an object file, and link it (patch it) with the object file of my romhack, which will be carefully mapped so that the addresses overwritten are the ones I'd like to ? That would be amazing

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dwedit</b> [ Tue Jun 18, 2013 11:33 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Difference between ld and objcopy (GCC)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I think for that purpose, it's better to use macros and incbins to include parts of the original binary.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Tue Jun 18, 2013 12:03 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Difference between ld and objcopy (GCC)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Hey, it's a good idea you have there ! I would never have thought of that. So basically I'd compile my &quot;new&quot; version which simply &quot;includes&quot; the old version. I'd have to see how this works.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dwedit</b> [ Tue Jun 18, 2013 12:26 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Difference between ld and objcopy (GCC)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Example of a simple GBA hack attached.<br />Provide your own copy of &quot;Advance Wars.gba&quot;.<br /><br />warning: this is probably broken for handling absolute addresses, will fix later...

		
			<br clear="all" /><br />

			<table class="tablebg" width="100%" cellspacing="1">
			<tr>
				<td><b class="genmed">Attachments: </b></td>
			</tr>
			
				<tr>
					<td>
			<span class="genmed">
				<img src="./styles/subsilver2/imageset/icon_topic_attach.gif" width="14" height="18" alt="" title="" /> 
				<a href="./download/file.php?id=640">hackgba.zip</a> [591 Bytes]
			</span><br />
			<span class="gensmall">Downloaded 34 times</span>
		

		<br />
	</td>
				</tr>
			
			</table>
		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Tue Jun 18, 2013 1:11 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Difference between ld and objcopy (GCC)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I'm not sure I understand what you are doing here.<br />Why use a macro ? And what does that \address command do ? Does it acually work ?<br /><br />And besides is is correct to use baseaddress = 0x8000000 like you did ? Shouldn't it be something like .org = 0x8000000 or . = 0x8000000 ?<br /><br />And what should I write in my linkscript ?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dwedit</b> [ Tue Jun 18, 2013 1:31 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Difference between ld and objcopy (GCC)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Here's my second try:  Adding new code works, it gets the correct addresses after being generated, but you can't add literal pools. (boo!)  Whenever I try to add a literal pool, it is no longer able to use the &quot;patchat&quot; macro without throwing an error.<br /><br />What am I doing here?<br />Using a macro so I can just say &quot;patchat 0x08xxxxxx&quot; and it will automatically grab bytes from the current address to the target address, then the current address becomes what I just put in.<br />\address is how you use a variable in a macro.  You begin it with a backslash, and it will use the provided value of address instead of the literal text 'address'.<br /><br />Baseaddress is just a regular symbol, I'm setting it to a number.  I'm using it so I can use real addresses in &quot;patchat&quot; instead of file addresses.  If you prefer using file addresses instead of memory addressees, remove that stuff.<br />Never use .org in GNU assembler, unless you want to see it generate 128MB sized output files.<br /><br />I'm trying to do this without any linkscripts, I think I got it working okay...<br /><br />I also tried to do this with the standard GBA makefiles, but I couldn't figure out how to exclude crt0.

		
			<br clear="all" /><br />

			<table class="tablebg" width="100%" cellspacing="1">
			<tr>
				<td><b class="genmed">Attachments: </b></td>
			</tr>
			
				<tr>
					<td>
			<span class="genmed">
				<img src="./styles/subsilver2/imageset/icon_topic_attach.gif" width="14" height="18" alt="" title="" /> 
				<a href="./download/file.php?id=641">hackgba2.zip</a> [669 Bytes]
			</span><br />
			<span class="gensmall">Downloaded 39 times</span>
		

		<br />
	</td>
				</tr>
			
			</table>
		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Sat Jun 22, 2013 2:52 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Difference between ld and objcopy (GCC)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />GENIUS it works !<br /><br />This will ease the development of the v3.0 of my FF5 Advance Sound Restoration a whole lot. It will also be a breeze to patch the game for the (J) (U) and (E) versions instead of hard-wiring it to the (E) version. @Dwedit : You'll be EVENTUALLY be able to run it on your 32kb flashcard <img src="./images/smilies/icon_wink.gif" alt=":wink:" title="Wink" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Sun Jun 23, 2013 11:43 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Difference between ld and objcopy (GCC)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />OK it doesn't work so well.<br /><br />The final patchat macro doesn't work if there is any other &quot;.incbin&quot; in the patch sequence. I don't know what's happening, but I need some &quot;.incbin&quot;s for my samples.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sun Jun 23, 2013 11:57 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Difference between ld and objcopy (GCC)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Doesn't devkitARM or libgba come with bin2s? (If not, download <a href="http://pineight.com/gba/#gbfs" class="postlink">GBFS</a> and look in the tools folder.) That way, you can narrow the problem down to the implementation of .incbin or to a large data size.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Sun Jun 23, 2013 12:11 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Difference between ld and objcopy (GCC)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Ah ok I figured out the actual problem had nothing to do with .incbin.<br /><br />The actual problem was that I used .align 4 after them, and after that the assembler is not able to keep track of the &quot;.&quot; variable any longer, which generated an error when I used it.<br /><br />I guess I'll have to get rid of those .align statements and pad manually where I have to. Note that this suck because technically it's very possible to keep track of the address after an .align statement.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>