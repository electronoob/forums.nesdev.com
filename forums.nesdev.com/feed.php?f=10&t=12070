<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=10&amp;t=12070" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2014-12-01T14:58:37-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=10&amp;t=12070</id>
<entry>
<author><name><![CDATA[sdm]]></name></author>
<updated>2014-12-01T14:10:13-07:00</updated>
<published>2014-12-01T14:10:13-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12070&amp;p=137174#p137174</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12070&amp;p=137174#p137174"/>
<title type="html"><![CDATA[Re: PPU $2006 i $2007 - direct access to PPU VRAM memory, HO]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12070&amp;p=137174#p137174"><![CDATA[
I load one 256 byte part of NT from WRAM to VRAM:<br /><br /><img src="http://s7.postimg.org/lbwrs78kb/wtowram.png" alt="Image" /><br /><br />As you wrote, there is no more time to load another parts. Even adding 64 byte ATTR TABLE - <br />barely's going on all. On PAL wherein the NMI has more time: (more?)<br /><img src="http://s7.postimg.org/slwkzi87v/wtowram2.png" alt="Image" /><br /><br />And on NTSC (less NMI time?)<br /><img src="http://s27.postimg.org/rc907c8yb/wtowram2ntsc.png" alt="Image" /><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=411">sdm</a> — Mon Dec 01, 2014 2:10 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2014-12-01T14:11:10-07:00</updated>
<published>2014-12-01T14:09:37-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12070&amp;p=137173#p137173</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12070&amp;p=137173#p137173"/>
<title type="html"><![CDATA[Re: PPU $2006 i $2007 - direct access to PPU VRAM memory, HO]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12070&amp;p=137173#p137173"><![CDATA[
<div class="quotetitle">lidnariq wrote:</div><div class="quotecontent"><br />PLA takes the same time as LDA ZP<br /></div><br />If I'm not mistaken (or my reference docs!), PHA takes 3 cycles, but PLA takes 4, so no, it's not as fast as LDA ZP.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Mon Dec 01, 2014 2:09 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2014-12-01T13:45:40-07:00</updated>
<published>2014-12-01T13:45:40-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12070&amp;p=137171#p137171</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12070&amp;p=137171#p137171"/>
<title type="html"><![CDATA[Re: PPU $2006 i $2007 - direct access to PPU VRAM memory, HO]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12070&amp;p=137171#p137171"><![CDATA[
A better idea is to divide it further. The rule of thumb is that it's safe to upload 2 lines of a nametable and still have to not worry about unrolling anything while having time for other updates as well (attribute, palette, sprite DMA).<br /><br />Only use &quot;tricky fast&quot; techniques if you need them in the 1st place. Not that they aren't cool, but why use them if you don't need them ?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Mon Dec 01, 2014 1:45 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[lidnariq]]></name></author>
<updated>2014-12-01T14:16:45-07:00</updated>
<published>2014-12-01T13:35:39-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12070&amp;p=137170#p137170</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12070&amp;p=137170#p137170"/>
<title type="html"><![CDATA[Re: PPU $2006 i $2007 - direct access to PPU VRAM memory, HO]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12070&amp;p=137170#p137170"><![CDATA[
<div class="quotetitle">tokumaru wrote:</div><div class="quotecontent"><br />There are only 2 ways I know of to make this even faster: put some of the buffer in zero page, because it's 1 cycle faster to load data from there. But with only 256 ZP bytes available, this optimization will only take you so far.<br /></div><s>There&#39;s another variant on the &quot;putting the values in ZP&quot;: putting them on the stack. PLA takes the same time as LDA ZP, and the two techniques together allow you to place the 256 bytes contiguously.<br /><br />But it&#39;s still not fast enough: it will take 1792 cycles of your vblank time &#40;i.e. not leaving enough for OAM DMA&#41;, and still will take 1024-1280 bytes of ROM &#40;depending on just how much is in the stack vs ZP&#41;.</s><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3512">lidnariq</a> — Mon Dec 01, 2014 1:35 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2014-12-01T12:09:13-07:00</updated>
<published>2014-12-01T12:09:13-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12070&amp;p=137165#p137165</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12070&amp;p=137165#p137165"/>
<title type="html"><![CDATA[Re: PPU $2006 i $2007 - direct access to PPU VRAM memory, HO]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12070&amp;p=137165#p137165"><![CDATA[
<div class="quotetitle">sdm wrote:</div><div class="quotecontent"><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NMI:<br />   LDA #$20<br />   STA $2006<br />   LDA #$00<br />   STA $2006<br /><br />   LDX #$00<br />LoadNT1LoopX:<br />   LDA $0400,x<br />   INX<br />   STA $2007<br />   CPX #$00<br />   BNE LoadNT1LoopX<br /></div><br /><br />I do not know if it's a good way.<br /></div><br />This is not good. Let's do the math: VBlank is 20 scanlines long, at 113,666 cycles per scanline, that's 2273 cycles you can use for PPU updates. Looking at your loop, I see that you need 15 cycles to copy each byte. Times 256 that's 3840 cycles, way more than what's available.<br /><br />The only way you'll achive the desired transfer rates is with unrolled code. Get rid of the loop and write a big ass routine that copies the bytes one by one:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">lda $0400<br />sta $2007<br />lda $0401<br />sta $2007<br />lda $0402<br />sta $2007<br />(...)<br />lda $04ff<br />sta $2007</div><br />Yes, that will eat a lot of ROM, but speed comes at a price. That's 8 cycles per byte, so 2048 for all 256. Fits inside VBlank, but there's not enough time left for a sprite DMA or other updates you might need.<br /><br />There are only 2 ways I know of to make this even faster: put some of the buffer in zero page, because it's 1 cycle faster to load data from there. But with only 256 ZP bytes available, this optimization will only take you so far. The other way is storing not only the data in RAM, but also the code that writes it to VRAM:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">lda #$07 ;&lt;- only change this immediate value<br />sta $2007<br />lda #$78 ;&lt;- only change this immediate value</div><br />Since immediate loads are only 2 cycles, we're looking at 6 cycles per byte, or 1536 for all 256. Now we finally have some time left for other tasks. This will waste a lot of RAM though, so this solution is only feasible if you're using extra RAM.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Mon Dec 01, 2014 12:09 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[sdm]]></name></author>
<updated>2014-12-01T14:58:37-07:00</updated>
<published>2014-12-01T09:49:57-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12070&amp;p=137161#p137161</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12070&amp;p=137161#p137161"/>
<title type="html"><![CDATA[Re: PPU $2006 i $2007 - direct access to PPU VRAM memory, HO]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12070&amp;p=137161#p137161"><![CDATA[
I did something like this:<br /><br />- I divided NameTable into four 256 byte parts.<br />- I use a 8-bit loading a separate one for each 256 byte NT part.<br />- Now i must preload them separately at beginning of program into RAM addresses 0400-04FF, 0500-05FF, 0600-06FF and 0700-07FF.<br />- Then using $2006 and $2007 registers copy at every NMI frame to VRAM NT0 memory ? Copy will be divided into four NMI, one 256 byte copy per 1 NMI's.<br /><br />Will this work? How to do it?<br /><br /><img src="http://s14.postimg.org/uya6i8829/256bytent.png" alt="Image" /><br /><br />I tried to do something like this. First load NT parts to 0400,500,600,700<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">LoadNT1:<br />   LDX #$00<br />LoadNT1Loop:<br />   LDA NameTable1,x<br />   STA $0400,x<br />   INX<br />   CPX #$00<br />   BNE LoadNT1Loop<br />   RTS<br /></div><br /><br />Then put to NMI ram-&gt;vram copy<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NMI:<br />   LDA #$20<br />   STA $2006<br />   LDA #$00<br />   STA $2006<br /><br />   LDX #$00<br />LoadNT1LoopX:<br />   LDA $0400,x<br />   INX<br />   STA $2007<br />   CPX #$00<br />   BNE LoadNT1LoopX<br /></div><br /><br />I do not know if it's a good way.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=411">sdm</a> — Mon Dec 01, 2014 9:49 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2014-12-01T07:32:23-07:00</updated>
<published>2014-12-01T07:32:23-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12070&amp;p=137158#p137158</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12070&amp;p=137158#p137158"/>
<title type="html"><![CDATA[Re: PPU $2006 i $2007 - direct access to PPU VRAM memory, HO]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12070&amp;p=137158#p137158"><![CDATA[
<div class="quotetitle">sdm wrote:</div><div class="quotecontent"><br />Now, my point is that just as the &quot;shadow OAM&quot; make a copy of VRAM (only part, 256byte) on NMI. For example at $0400-04FF.<br /><br />Is this possible?<br /></div><br />Sure, if you have the RAM, you can shadow anything you want. It's just that there's currently no DMA function that will help you transfer that data to VRAM faster, you still have to copy it byte by byte, and it will not be possible to copy 256 bytes and still do other updates (sprites, palettes, etc.) under normal VBlank time.<br /><br />In your case however, since you're using only 256 bytes of the NT, chances are you have a large span of vertical empty space, meaning you could use forced blanking (i.e. keeping rendering disabled a certain number of scanlines after or before Vblank, effectively extending it) and get some extra time for VRAM updates, in which case yes, it would be possible to update that many bytes every frame.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Mon Dec 01, 2014 7:32 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[sdm]]></name></author>
<updated>2014-12-01T09:33:04-07:00</updated>
<published>2014-12-01T07:18:15-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12070&amp;p=137155#p137155</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12070&amp;p=137155#p137155"/>
<title type="html"><![CDATA[Re: PPU $2006 i $2007 - direct access to PPU VRAM memory, HO]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12070&amp;p=137155#p137155"><![CDATA[
I use only 256 byte NT. (I know that normally NT takes 1024 bytes.)<br /><br />Now, my point is that just as the &quot;shadow OAM&quot; make a copy of VRAM (only part, 256byte) on NMI. For example at $0400-04FF.<br /><br />Is this possible?<br /><br />To then have access to the changes in memory on the fly at 0400-04FF (like sprite OAM copy at 0200-02FF)<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=411">sdm</a> — Mon Dec 01, 2014 7:18 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2014-12-01T06:31:04-07:00</updated>
<published>2014-12-01T06:31:04-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12070&amp;p=137153#p137153</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12070&amp;p=137153#p137153"/>
<title type="html"><![CDATA[Re: PPU $2006 i $2007 - direct access to PPU VRAM memory, HO]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12070&amp;p=137153#p137153"><![CDATA[
<div class="quotetitle">sdm wrote:</div><div class="quotecontent"><br />And if I only use 8-bit loadings, nametable will not have a size greater than 256 bytes.<br /></div><br />What? Each name table (plus its respective attribute table) is always 1024 bytes, no matter what kind of compression or internal representation you use for your screens, in the end it has to be converted into the format the NES expects, which is 960 NT bytes + 64 AT bytes. The only exception is if you use only a portion of the screen, like a wide section at the center, for example, then you can save a few bytes, but still hardly enough to update it all in a single VBlank.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Mon Dec 01, 2014 6:31 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[sdm]]></name></author>
<updated>2014-12-01T06:23:53-07:00</updated>
<published>2014-12-01T06:23:53-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12070&amp;p=137151#p137151</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12070&amp;p=137151#p137151"/>
<title type="html"><![CDATA[Re: PPU $2006 i $2007 - direct access to PPU VRAM memory, HO]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12070&amp;p=137151#p137151"><![CDATA[
And if I only use 8-bit loadings, nametable will not have a size greater than 256 bytes. Then the copy in memory would make sense? Lots of screen will be not used (active screen will be about 256x56, anything else black).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=411">sdm</a> — Mon Dec 01, 2014 6:23 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2014-12-01T05:53:21-07:00</updated>
<published>2014-12-01T05:53:21-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12070&amp;p=137150#p137150</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12070&amp;p=137150#p137150"/>
<title type="html"><![CDATA[Re: PPU $2006 i $2007 - direct access to PPU VRAM memory, HO]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12070&amp;p=137150#p137150"><![CDATA[
<div class="quotetitle">sdm wrote:</div><div class="quotecontent"><br />the NMI is enough time to copy the amount of memory?<br /></div><br />Not even close. With the fastest code possible (a chain of unrolled LDA $XXXX, STA $2007) you only have time to copy around 280 bytes to VRAM during VBlank, and that's without doing anything else.<br /><br />This can be made a little faster if you accept to 5 times more RAM than necessary: if you store the sequence LDA #$XX, STA $2007 (which takes 5 bytes) for each byte, you can copy around 370 bytes per VBlank, but accessing that memory will be a pain in the ass, because each byte of data is 5 spaces apart.<br /><br />A while ago someone mentioned the possibility of repurposing the sprite DMA to also work for pattern and name tables (which I'm not sure can be done by a mapper alone), in which case it would be possible to update 1024 bytes in a single VBlank, although still without much time left for updating everything else.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Mon Dec 01, 2014 5:53 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[sdm]]></name></author>
<updated>2014-12-01T05:18:24-07:00</updated>
<published>2014-12-01T05:18:24-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12070&amp;p=137147#p137147</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12070&amp;p=137147#p137147"/>
<title type="html"><![CDATA[Re: PPU $2006 i $2007 - direct access to PPU VRAM memory, HO]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12070&amp;p=137147#p137147"><![CDATA[
Is it possible to make a copy of WRAM (copy of 1024/960 byte) to VRAM memory? Something like the &quot;shadow OAM&quot; (256 byte page 2 copied to OAM in NMI time), but &quot;SHADOW NT&quot; - 1024 byte (or 960 byte withhout ATTR table) $0400-07FF WRAM to VRAM $2000 ?<br /><br />I know it's a waste of memory, but if it is possible and that the NMI is enough time to copy the amount of memory?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=411">sdm</a> — Mon Dec 01, 2014 5:18 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[MottZilla]]></name></author>
<updated>2014-11-28T12:32:40-07:00</updated>
<published>2014-11-28T12:32:40-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12070&amp;p=137019#p137019</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12070&amp;p=137019#p137019"/>
<title type="html"><![CDATA[Re: PPU $2006 i $2007 - direct access to PPU VRAM memory, HO]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12070&amp;p=137019#p137019"><![CDATA[
Don't forget that some games cycle the palette to achieve animation in backgrounds. Isn't that what happens in Mega Man 2's Metal Man stage? I know there are other examples but I can't think of them now. Ofcourse it's not going to be the desired solution for everything, but it is another option.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=1726">MottZilla</a> — Fri Nov 28, 2014 12:32 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2014-11-28T07:40:00-07:00</updated>
<published>2014-11-28T07:40:00-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12070&amp;p=137006#p137006</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12070&amp;p=137006#p137006"/>
<title type="html"><![CDATA[Re: PPU $2006 i $2007 - direct access to PPU VRAM memory, HO]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12070&amp;p=137006#p137006"><![CDATA[
<div class="quotetitle">lidnariq wrote:</div><div class="quotecontent"><br />1- During vblank or forced blanking, you upload replacement tiles to the pattern table<br /></div><br />This is what you do when you're using CHR-RAM. The amount of tiles you can animate this way is very limited, because there isn't much time per frame you can use for this purpose and still do the regular updates (name tables, sprites, palettes, and so on). You will certainly want to use unrolled (or partially unrolled) code for this, because that's at least 60% faster than a regular byte-by-byte loop.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />2- During vblank or forced blanking, you upload replacement values to the name table<br /></div><br />This is not done very often, first because it can be hard to keep track of the positions of all the tiles that have to be animated (specially if scrolling), and also because the area covered by animated tiles can't be very large or there won't be enough time to update it all.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />3- You use a mapper that provides CHR banking, and at any time you change the bank that is being used to render what's onscreen.<br /></div><br />This is the simplest solution, because bankswitching is instantaneous and you don't have to worry about wasting time with any kind of VRAM updates. The disadvantage is that you need a mapper that's capable of fine CHR bankswitching (at least 2KB chunks, but ideally 1KB), and that you can't have many animations running at different rates, because large blocks of tiles are changed together.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Fri Nov 28, 2014 7:40 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[lidnariq]]></name></author>
<updated>2014-11-27T14:39:15-07:00</updated>
<published>2014-11-27T14:39:15-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12070&amp;p=136977#p136977</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12070&amp;p=136977#p136977"/>
<title type="html"><![CDATA[Re: PPU $2006 i $2007 - direct access to PPU VRAM memory, HO]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12070&amp;p=136977#p136977"><![CDATA[
There are three ways to animation the background (tilemap).<br /><br />You either:<br />1- During vblank or forced blanking, you upload replacement tiles to the pattern table<br />2- During vblank or forced blanking, you upload replacement values to the name table<br />3- You use a mapper that provides CHR banking, and at any time you change the bank that is being used to render what's onscreen.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3512">lidnariq</a> — Thu Nov 27, 2014 2:39 pm</p><hr />
]]></content>
</entry>
</feed>