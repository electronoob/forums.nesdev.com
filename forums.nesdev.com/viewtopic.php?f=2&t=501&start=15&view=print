<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - How many tiles can I draw during vblank?</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">How many tiles can I draw during vblank?</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=501">http://forums.nesdev.com/viewtopic.php?f=2&amp;t=501</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>2</strong> of <strong>2</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Memblers</b> [ Fri Aug 19, 2005 5:58 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Hm, one program I've written (the Garage Cart intro) writes 256 bytes per frame to the pattern table.  I'm sure a lot more could be done.  I couldn't push it further because I ran out of both RAM and ROM, heheh.
<br />
<br />I came up with a scheme to use in my game that I planned, since it has fast scrolling, as well as a huge amount of pattern table updates.  But it costs 5 bytes of RAM for every byte in your buffer and uses self-modifying code.
<br />
<br />I posted about it in this thread:
<br /><a href="http://nesdev.com/bbs/viewtopic.php?t=259" class="postlink">http://nesdev.com/bbs/viewtopic.php?t=259</a>
<br />
<br />And there's some other ideas in there that may be interesting.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Fri Aug 19, 2005 6:56 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Memblers wrote:</div><div class="quotecontent">Hm, one program I've written (the Garage Cart intro) writes 256 bytes per frame to the pattern table.  I'm sure a lot more could be done.  I couldn't push it further because I ran out of both RAM and ROM, heheh.<br /></div>
<br />Then how come Quietust said 2 to 3 rows would be the safe limit? I know you used "tricks" to do it faster, but still... there is a BIG difference between 96 and 256, and you even say a lot more can be done! In both cases you're just writing to vram... why is the difference so big?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Fri Aug 19, 2005 7:10 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />In a demo, intro, or other program with limited interactivity, you have a lot more leeway than you have with a game. In a game, you have a lot of objects' state to keep in the NES's 2 KB of built-in work RAM, you have to make time for the OAM update, and you have to run AI and physics during the 'draw' time. In a demo, you don't.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Fri Aug 19, 2005 8:02 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">In a demo, intro, or other program with limited interactivity, you have a lot more leeway than you have with a game. In a game, you have a lot of objects' state to keep in the NES's 2 KB of built-in work RAM, you have to make time for the OAM update, and you have to run AI and physics during the 'draw' time. In a demo, you don't.</div>
<br />
<br />I'll exclusively update the PPU during vblank. All the physics and object handling is done during rendering, not drawing. I'll use buffers to store everything I have to draw, so that drawing is just a matter of copying bytes. I agree with the RAM usage thing though, but that's the only difference. Besides, in the other mentioned thread, about Battletoads (a full featured game), it did update a lot of stuff and did OAM updates also.
<br />
<br />Well, I'll just be safe and write few rows/columns per frame. The question about pattern table updates was for another project anyway, not for the platformer.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Fri Aug 19, 2005 8:17 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent"><div class="quotetitle">tepples wrote:</div><div class="quotecontent">you have to run AI and physics during the 'draw' time.</div><br />I'll exclusively update the PPU during vblank. All the physics and object handling is done during rendering, not drawing.</div>
<br />Some references call rendering time "draw" or "vdraw" time. Tomayto, tomahto.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Fri Aug 19, 2005 8:45 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">Some references call rendering time "draw" or "vdraw" time. Tomayto, tomahto.</div>
<br />I was thinking more like:
<br />RENDERING - PPU sending stuff to the TV;
<br />DRAWING - PPU not sending stuff to the TV, me sending stuff to the PPU;
<br />
<br />And if I can do everything during RENDERING time, DRAWING is just about copying the stuff I already processed earlier. So I'm not actually processing during drawing time.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Sat Aug 20, 2005 1:54 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">Hey,<br />Let me just ask one more thing in this topic... I'd like to know how many tiles would I be able to copy to the pattern table, in a vram cart... Since you say it is safe to write 2 or 3 columns of tiles in the BG, thats like, 96 bytes. Does that mean I could copy only 6 tiles to the pattern table in 1 vblank?</div><br />Again, there is no bytes limit but time limit. It all depend on how you're updating them in your code.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">That seems too slow... I've watched games like megaman 1 and they seem to do it faster than 6 tiles per frame... although I can't be sure if the game turned the screen off at some point to do a faster transfer.</div><br />It doesn't, only several infamous games such as Battletoads did (actually Battletoads was basically a PAL game ported on the NTSC, and I'm pretty sure the PAL Battletoads does simply write the stuff on the PPU during VBlank... exept that it's much longer in PAL).<br />Megaman 1 does 2 tiles per frame. However, Megaman 6 was able to do 4 tiles per frame.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">It can't be that slow... it doesn't seem practical at all to use vram if it is that slow...</div>
<br />Effectively, it's different from VROM. VRAM is slow, but feathure 100% custommed tiles in the whole pattern table. VROM is fast and can switch banks at a very high rate, but it only switches whole bank of tiles, without allowing you to customize your tileset or to modify tiles for effects like the FF3's water.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Sat Aug 20, 2005 10:20 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">Again, there is no bytes limit but time limit. It all depend on how you're updating them in your code.</div><br />I know that, I know that... let's not be so litteral here, ok? When I ask about "tiles" or "patterns" I mean how many of them people can squeeze in the avaliable time on average!<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">It doesn't, only several infamous games such as Battletoads did (actually Battletoads was basically a PAL game ported on the NTSC, and I'm pretty sure the PAL Battletoads does simply write the stuff on the PPU during VBlank... exept that it's much longer in PAL).<br />Megaman 1 does 2 tiles per frame. However, Megaman 6 was able to do 4 tiles per frame.</div><br />I meant on screen transitions, not during a level. Like when the title screen fades and the enemy selection comes in. Maybe it turns the screen off during this little fraction of time when the first screen has faded out and next hasn't appeared yet, to load a bunch of pattern tiles at once.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Effectively, it's different from VROM. VRAM is slow, but feathure 100% custommed tiles in the whole pattern table. VROM is fast and can switch banks at a very high rate, but it only switches whole bank of tiles, without allowing you to customize your tileset or to modify tiles for effects like the FF3's water.</div>
<br />I know the difference... but you have to agree that the advantages of vram are very few... what's the use of beeing able to draw dynamic effects, like FF's water, if you can only update 4-6 tiles? Not many effects can be done anyway. I think the best way to do BG animations is by using CHR ROM switching... the disadvantage is that you must have ALL BG animations share the same length (or you could duplicate frames, to give the impression of animations with different length).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Sat Aug 20, 2005 11:55 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">I know that, I know that... let's not be so litteral here, ok? When I ask about "tiles" or "patterns" I mean how many of them people can squeeze in the avaliable time on average!</div><br />Yeah, the problem is "on average". You can upload up to 16 tiles with the Membler's method, but it'll waste 16*16*5 = 1280 bytes, more than the half of the NES' CPU RAM. So, by the use of normal buffer, you can go up to 8 tiles, with an unrolled loop such as :<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">A=Number of tiles<br />X;Y = PPU Adress<br />bit $2002<br />stx $2006<br />sty $2006<br />tay<br />ldx #$00<br />_loop<br />.rept 16<br />lda Buffer,X<br />sta $2007<br />.endrept ;Write a whole tile trough an unrolled loop<br />txa<br />clc<br />adc #$10<br />tax<br />dey<br />bne _loop<br />rts</div><br />As you see, the "unrolled" loop wastes pretty much rom, but is way faster than doing it in a rolled loop, where only 6 tiles are allowed. Now you can also do 12 tiles by so :<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">A=Number of tiles<br />X;Y=PPU Adress<br /><br />bit $2002<br />stx $2006<br />sty $2006<br />tsx<br />stx Temp<br />ldx #StackBufferAdress-1<br />txs<br />tay<br />_loop<br />.rept 16<br />pla<br />sta $2007<br />.endrept<br />dey<br />bne _loop<br />ldx Temp<br />txs<br />rts</div><br />This is definitely a good way to updata VRAM, but due to the limited amount of free byte in the stack, it won't work for much others things. 12 tiles are 192 bytes, or 75% of the available stack. An usual programm will not have its stack pointer going under $e0, and by doubling this space for security, $100-$1bf can be used freely for this.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I meant on screen transitions, not during a level. Like when the title screen fades and the enemy selection comes in. Maybe it turns the screen off during this little fraction of time when the first screen has faded out and next hasn't appeared yet, to load a bunch of pattern tiles at once.</div><br />Of course, the screen is off between two screen.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I know the difference... but you have to agree that the advantages of vram are very few... what's the use of beeing able to draw dynamic effects, like FF's water, if you can only update 4-6 tiles? Not many effects can be done anyway.</div>
<br />Effectively, but there is the 100% custom tileset, also. Using 1kb pages of VROM is possibly better than VRAM, but I don't think 4kb pages of VROM is enough to copete against VRAM.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>2</strong> of <strong>2</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>