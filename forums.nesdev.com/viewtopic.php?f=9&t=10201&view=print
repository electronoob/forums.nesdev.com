<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Question about hardware design and memory-mapped regs</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Question about hardware design and memory-mapped regs</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=9&amp;t=10201">http://forums.nesdev.com/viewtopic.php?f=9&amp;t=10201</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>koitsu</b> [ Sun Jun 23, 2013 6:44 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Question about hardware design and memory-mapped regs</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />This is a question for folks familiar with EE enough that they hopefully understand what I'm talking about.  :-)<br /><br />On lots of classic consoles, memory-mapped registers tend to have multiple functions broken down into whatever bits are sent across the (data?) bus at that time.  I'm referring to something like the NES/Famicom's <a href="http://wiki.nesdev.com/w/index.php/PPU_registers#Controller_.28.242000.29_.3E_write" class="postlink">PPUCTRL/$2000 register</a>, where there are literally 7 different features/capabilities split across 8 bits.<br /><br />My question is: why is (or was?) it done this way?  I'll expand on what I'm asking below.<br /><br />It's <a href="http://wiki.nesdev.com/w/index.php/CPU_memory_map" class="postlink">fairly obvious</a> there was quite a lot of addressing space left over (look at $2008 to $3fff), so I've always wondered why there wasn't separate memory-mapped registers given to each feature.  For example, why not 7 different memory-mapped registers, i.e.:<br /><br />$2000 = Base table name address (D1-D0)<br />$2001 = VRAM address increment mode (D0)<br />$2002 = Sprite pattern table address (D0)<br />$2003 = Background pattern table address (D0)<br />$2004 = Sprite size (D0)<br />$2005 = PPU master/slave select (D0)<br />$2006 = Generate NMI at start of VBlank (D7)<br /><br />Is there something about doing it the former way that makes it easier for the designer?  Does it save on parts, &quot;circuit space&quot;, design costs, etc. somehow?<br /><br />This isn't limited to consoles either, lots of super I/O chips (which I write software for, via I2C and SMBus) operate this way too; it's fairly universal.<br /><br />Just curious why it's done the way it is and not the way shown in my above example.  :-)<br /><br />Note: I want to be clear here (this is for you psychopathicteen ;P Hahaha) -- I am <strong>not</strong> complaining; I really couldn't care less which method is used, as I've worked with so many different microcontrollers and chips that it's just second nature to keep track using temporary RAM variables and AND/OR'ing out what you want/don't want.  I'm just wondering about the reasoning/design.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Sun Jun 23, 2013 7:20 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Question about hardware design and memory-mapped regs</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">koitsu wrote:</div><div class="quotecontent">why there wasn't separate memory-mapped registers given to each feature.</div><br />Cost. To know which register is being written to, you have to decode the address being accessed, the more possible addresses you have, the more address lines you have to watch (i.e. needs more logic). Since a lot of options could be set using only a few bits, it was cheaper/simpler to pack them together.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Sun Jun 23, 2013 7:30 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Question about hardware design and memory-mapped regs</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Cost, but specifically pin count. (The cost of the packaging was—and still is—a disproportionately large amount of the cost of the IC relative to the silicon.) <br /><br />This is also why the VRC1/2/3/4 mappers use a four (or five) bit data bus and sometimes split registers across multiple addresses, and why Namco never released a game with a packaged mask ROM that would have required more than 28 pins.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>HardWareMan</b> [ Sun Jun 23, 2013 8:01 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Question about hardware design and memory-mapped regs</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I vote for pin count too.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Sun Jun 23, 2013 9:15 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Question about hardware design and memory-mapped regs</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Yeah, pin count makes all the difference. Look at how the MMC3 works... It could have divided the addressing space into individual registers for everything, but that would have required more address lines to be connected to it. Instead, you specify the internal register you want to write to via the data pins, and then you write the actual data.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Mon Jun 24, 2013 12:46 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Question about hardware design and memory-mapped regs</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />If you look at the <a href="http://wiki.nesdev.com/w/index.php/PPU_pin_out_and_signal_description" class="postlink">PPU pinout</a>, you'd notice that it only has an enable pin (which is decoded at $2000-$3fff with discrete logic on the main board) and 3 address lines : A0, A1, A2.<br />This is used to decode 8 memory mapped I/Os (2^3 = 8).<br />If you wanted more memory mapped I/Os, that would mean more address pins. It's that simple. It's also why we need a pair of $2006 and $2005 writes instead of using separate registers I guess.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Mon Jun 24, 2013 6:09 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Question about hardware design and memory-mapped regs</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Pin count is also why ALE exists. And it would have been possible to save two more pins by mapping OAM to $7F00-$7FFF and PPUCTRL ($2000) and PPUMASK ($2001) starting at $8000. But then Nintendo would have been copying the TMS9918 even more than it did.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>