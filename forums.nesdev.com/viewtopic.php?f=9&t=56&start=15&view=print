<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - The Famicom's and the NES's Audio Path</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">The Famicom's and the NES's Audio Path</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=9&amp;t=56">http://forums.nesdev.com/viewtopic.php?f=9&amp;t=56</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>2</strong> of <strong>2</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>infiniteneslives</b> [ Sat Oct 07, 2017 11:51 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: The Famicom's and the NES's Audio Path</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I would like to directly attach a 0-5V PWM signal from a microcontroller</div><br />Did some testing of my own because I'm looking to do the same thing!<br /><br />My test is pretty simple.  I've attached it in case anyone else want to try.  The rom only runs from $E000-FFFF so it should be fairly mapper independent assuming the last bank is fixed.  Visually it doesn't display anything worthwhile, just some junk from my CICOp register test.<br /><br />Only SQ1 &amp; SQ2 channels are enabled, SQ1 is set to C4 (middle C) and SQ2 is set to E4.  Both have 50% duty and max volume.<br /><br />I did not find any negative voltage.  I found a max output level of 350mV (note 10x probe used in scope shot) this is when both channels are active (summed).  When only one channel was pulsing high, it's output is 200mV.<br /><br />I can run some other simple tests like this if it's of interest, but this pretty much answered my questions.

		
			<br clear="all" /><br />

			<table class="tablebg" width="100%" cellspacing="1">
			<tr>
				<td><b class="genmed">Attachments: </b></td>
			</tr>
			
				<tr>
					<td>
			<span class="gensmall"><b>File comment:</b> 10x probe, 2a03 pin 1 scope shot</span><br />
		
			<a href="./download/file.php?id=10383&amp;mode=view"><img src="./download/file.php?id=10383&amp;t=1" alt="APU vol test CPU_pin1 sq1C4 sq2E4 max vol 10xprobe.JPG" /></a><br />
			<span class="gensmall">APU vol test CPU_pin1 sq1C4 sq2E4 max vol 10xprobe.JPG [ 90.2 KiB | Viewed 961 times ]</span>
		

		<br />
	</td>
				</tr>
			
				<tr>
					<td>
			<span class="gensmall"><b>File comment:</b> test rom</span><br />
		
			<span class="genmed">
				<img src="./styles/subsilver2/imageset/icon_topic_attach.gif" width="14" height="18" alt="" title="" /> 
				<a href="./download/file.php?id=10381">inltest.nes</a> [40.02 KiB]
			</span><br />
			<span class="gensmall">Downloaded 29 times</span>
		

		<br />
	</td>
				</tr>
			
			</table>
		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>uXe</b> [ Sun Oct 08, 2017 12:21 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: The Famicom's and the NES's Audio Path</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">infiniteneslives wrote:</div><div class="quotecontent">Did some testing of my own because I'm looking to do the same thing!</div><br /><br />Great minds <img src="./images/smilies/icon_wink.gif" alt=":wink:" title="Wink" /><br /><br />...and you plan on adding 313K of resistance to compensate? or you have a better solution in mind?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>infiniteneslives</b> [ Sun Oct 08, 2017 1:00 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: The Famicom's and the NES's Audio Path</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">uXe wrote:</div><div class="quotecontent">...and you plan on adding 313K of resistance to compensate? or you have a better solution in mind?</div><br /><br />What's your thinking on 313K?  0-5v signal from mcu, trying to get down to 200mV is a factor of 25.  Thus you need 20k * (25 - 1) = 480K..?<br /><br />Being a PWM DAC, it's fairly easy to reduce the synthesized channel to less than 5v.  In an 8bit DAC a simple implementation would be for a square channel to have 4 bits of volume similar to the APU/VRC6/etc.  So the channels max would be a DAC level of 15 out of 255 equates to 5.9% of 5v = 295mV for that channel without tweaking anything.  A little beyond the target 150-200mV per channel to match the APU.<br /><br />Couple ways to tweak things to match.  An added 20K resistor would work, but I kinda like/have to assume many people simply soldered in a 47k for the audio mod.  That's my preferred condition, and then adjust the PWM levels to match.  So 67k divides that channel by 3.35, so 295mV -&gt; 88mV equavalence if I'm understanding everything.  <br /><br />To get to a volume comparable to the APU, the level needs doubled bringing it to ~175mV.  That can be done in the mcu by shifting the final output volume left by 1 bit.  Sort of cuts an 8bit DAC down to 7bits in terms of number of total full volume channels prior to clipping, but that's manageable.  7bits would provide room for quite a few full volume channels at once.  The lower bit really isn't lost either, channels could simply have 5 bits of volume to equal an APU square if they've got a use for the extra resolution.<br /><br />P.S. I'm guessing I've made an error in my math/knowledge somewhere..

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>uXe</b> [ Sun Oct 08, 2017 3:48 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: The Famicom's and the NES's Audio Path</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">infiniteneslives wrote:</div><div class="quotecontent">What's your thinking on 313K?  0-5v signal from mcu, trying to get down to 200mV is a factor of 25.  Thus you need 20k * (25 - 1) = 480K..?</div><br /><br />Was just going on lidnariq's numbers from earlier in this thread:<br /><br /><!-- l --><a class="postlink-local" href="http://forums.nesdev.com/viewtopic.php?f=9&amp;t=56&amp;start#p205492">viewtopic.php?f=9&amp;t=56&amp;start#p205492</a><!-- l --><br /><br />Both CPU pin 1 and Expansion Port pin 3 feed into separate 20K resistors in the audio mixing / amplification circuit, so to match CPU pin 1's 0.3V as I understand it: 5V / 0.3V = 16.666666667 * 20 = 333.333333333 minus the 20K already in place equals 313K?<br /><br />My problem is that I would not be using a DAC with amplitude settings, and be able to just reduce the signal down that way. I'm looking at a PWM pin on an 8-bit AVR, or likely just software PWM on a digital pin, so it's either on or off, 0 or 5V, full stop.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>FrankenGraphics</b> [ Sun Oct 08, 2017 4:28 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: The Famicom's and the NES's Audio Path</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />It may actually be a benefit if an ext audio synth is a bit quieter than the internal APU. <br /><br />This is because the steps between the 15 audio levels are quite coarse. Less full volume = finer steps, leading to smoother envelopes; something the APU can't* offer but a synth with a similar 4-bit interface can. That would enable using slow-moving envelopes  (in a satisfactory/transparent way) more readily.<br /><br />The max volume of the APU squares aren't very useful, IMO. There's many times i've wished for an &quot;x.5&quot; setting but i've never felt the need for maxing the squares. Rather, i avoid it.<br /><br /><br />*There's a workaround for the apu wich is chorusing two square channels and then you can kind of get doubly fine volume steps at the expense of independent movement/having the sound to be slightly detuned. Sometimes, you can even hide the coarse stepping in a second square voice at another interval than unison, but it is circumstantial (dependent on the harmonics of the tone, i presume).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>infiniteneslives</b> [ Sun Oct 08, 2017 9:05 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: The Famicom's and the NES's Audio Path</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">uXe wrote:</div><div class="quotecontent">Was just going on lidnariq's numbers from earlier in this thread:</div>313K assumes the  APU channels have a max volume of 300mV.  Take it for what it's worth, but based on my testing a single APU square @ max volume is more like 150-200mV.  300-350mV is both squares summed, I'm guessing that is what your and lidnariq's tests were measuring.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">My problem is that I would not be using a DAC with amplitude settings, and be able to just reduce the signal down that way. I'm looking at a PWM pin on an 8-bit AVR, or likely just software PWM on a digital pin, so it's either on or off, 0 or 5V, full stop.</div> Oh my bad, I read too far into your statement, I thought you were implementing a PWM DAC too.  Your single square channel with invariable volume will be pretty limited..  Why not add a cap to your resistor to unlock your 8bit AVR's PWM DAC ability.?  Give yourself ability to adjust the channel's volume, even allows multiple channels of varying shape if you want to get fancy.  Obviously up to you, but just wanted to make sure you were aware of how simple a PWM DAC is to implement on a 8bit mcu.  Open music labs has a pretty good <a href="http://www.openmusiclabs.com/learning/digital/pwm-dac.1.html" class="postlink">article</a> that showed me the light, along with an arduino sketch <a href="http://wiki.openmusiclabs.com/wiki/PWMDAC" class="postlink">tutorial</a>.<br /><br /><div class="quotetitle">FrankenGraphics wrote:</div><div class="quotecontent">The max volume of the APU squares aren't very useful, IMO. There's many times i've wished for an &quot;x.5&quot; setting but i've never felt the need for maxing the squares. Rather, i avoid it.</div> As always, thanks for the insight, these are the types of things I don't have a good sense for.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Sun Oct 08, 2017 10:14 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: The Famicom's and the NES's Audio Path</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">infiniteneslives wrote:</div><div class="quotecontent">313K assumes the  APU channels have a max volume of 300mV.  Take it for what it's worth, but based on my testing a single APU square @ max volume is more like 150-200mV.  300-350mV is both squares summed, I'm guessing that is what your and lidnariq's tests were measuring.<br /></div>Exactly.<br /><br />If the OEM pulse channels are 150mV each into 20kΩ, then that's 7.5µA at max; 5V and 7.5µA is 670kΩ. To match the NES's built-in 20kΩ and the typical 47kΩ added, I'd assume you'd want a ≈600kΩ resistor out of the PWM DAC ... <em>if</em> it's still only one channel being mixed in.<br /><br />Personally, I'd be tempted to mix multiple channels.<br /><br /><div class="quotetitle">uXe wrote:</div><div class="quotecontent">My problem is that I would not be using a DAC with amplitude settings, and be able to just reduce the signal down that way. I'm looking at a PWM pin on an 8-bit AVR, or likely just software PWM on a digital pin, so it's either on or off, 0 or 5V, full stop.<br /></div>It's completely ridiculous, but you could add an external resistor DAC to add volume control without having to manage the IRQs from a PWM DAC.<br /><br />Something like:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp;PWM ---R---+<br />&nbsp;PA0 ---R---+<br />&nbsp;PA1 --2R---+<br />&nbsp;PA2 --4R---+<br />&nbsp;PA3 --8R---+---500k---expansion port<br /></div><br /><br />And you could then toggle bits in DDRA to adjust the volume.<br /><br /><br />I say &quot;ridiculous&quot; because in practice, your microcontroller is probably not too busy to manage updating the PWM value to serve as a DAC.<br /><br /><br /><div class="quotetitle">FrankenGraphics wrote:</div><div class="quotecontent">The max volume of the APU squares aren't very useful, IMO. There's many times i've wished for an &quot;x.5&quot; setting but i've never felt the need for maxing the squares. Rather, i avoid it.<br /></div>In thinking about this, it occurs to me that we could sink current out of the mixing node to add software-controlled master volume control.<br /><br />If we had something like this:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ||<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;+--- expansion port --- 20k --- mixing node<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;||<br />&nbsp;PWM ---R-+-+---|&lt; npn&nbsp; &nbsp; &nbsp; &nbsp; ||<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; | |&nbsp; &nbsp; &nbsp;\&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;||<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; R C&nbsp; &nbsp; &nbsp; |&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ||<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; | |&nbsp; &nbsp; &nbsp; |&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ||<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; +-+------+--gnd&nbsp; &nbsp; &nbsp;||<br /></div>although it might be more useful to pull the mixing node up to 5V (instead of pulling it down to ground as in this schematic) for greater dynamic range.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>FrankenGraphics</b> [ Sun Oct 08, 2017 11:05 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: The Famicom's and the NES's Audio Path</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">lidnariq wrote:</div><div class="quotecontent">master volume control</div> <br /> <img src="./images/smilies/icon_eek.gif" alt=":shock:" title="Shocked" /> Sounds like it could be useful for:<br />-fade in/out<br />-half-mute (for example in a menu).<br />-tri envelope when playing solo<br />-super-exponential decays/swells of squares/noise/samples playing solo or with shared rythm<br />-maybe even improved dynamic range and/or fizz reduction of samples<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">to pull the mixing node up to 5V.</div><br /><br />For one thing, many studio synthesizers use a swing of 5v or even greater for audio prior to the output stage - this to keep the noise floor down relative to the signal on analog audio lines. This becomes increasingly important when mixing a large number of signals; effectively raising the noise floor. <br /><br />Consumer-grade outputs however have a nominal swing of 0.447V peak-to-peak using a single sine, or more importantly 0.316V root mean square (pretty close to the NES?)<br /><br />Studio equipment should have a nominal output of 1.228Vrms.<br /><br />I think Sunsoft 5B audio breaks the consumer-grade nominal levels by quite a bit. It has one benefit, though:<br />using its coarse, loud squares as the reference point, it'll relatively push the full APU dynamic range into useful range and make its steps seem finer by comparison. Use Sunsoft for quick and loud envelopes, and the APU's for &quot;quiet&quot; and more nuanced/slow ones. This has the unfortunate side effect of the hypothetical game/music becoming the loudest in the nes library and will see users reaching for the volume control of their tv/speakers/laptop, but fwiw it almost works like having a finer envelope range.<br /><br />Then the sunsoft synth has that 5-bit internal hardware envelope to mitigate its coarseness, but no game has ever used it...

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>infiniteneslives</b> [ Sun Oct 08, 2017 11:12 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: The Famicom's and the NES's Audio Path</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">lidnariq wrote:</div><div class="quotecontent"> we could sink current out of the mixing node to add software-controlled master volume control.<br /><br />If we had something like this:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ||<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;+--- expansion port --- 20k --- mixing node<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;||<br />&nbsp;PWM ---R-+-+---|&lt; npn&nbsp; &nbsp; &nbsp; &nbsp; ||<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; | |&nbsp; &nbsp; &nbsp;\&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;||<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; R C&nbsp; &nbsp; &nbsp; |&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ||<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; | |&nbsp; &nbsp; &nbsp; |&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ||<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; +-+------+--gnd&nbsp; &nbsp; &nbsp;||<br /></div></div><br /><br />This ability would be significantly more limited if operating with the assumption of a fixed 47k EXP port audio mod right?  Gives more reason to include the pot in my EXP port dongle..<br /><br />I'm a little confused how one would integrate expansion audio channels and master volume at the same time in terms of the PWM DAC's output level calculation.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Sun Oct 08, 2017 12:17 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: The Famicom's and the NES's Audio Path</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Rather than BJT tomfoolery, it's probably better to just pretend we're going to use a digitally controlled potentiometer. Then it's a lot easier to see what's going on:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">pin1 -- 20k --+<br />pin2 -- 12k --+-- 1uf -- rest of audio hardware<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; |<br />&nbsp; &nbsp; +-- 20k --+<br />&nbsp; &nbsp; |<br />&nbsp; &nbsp;pot<br />&nbsp; &nbsp; |<br />&nbsp; &nbsp;gnd<br /></div><br /><br />Quickly playing around with falstad's circuit simulator, assuming pin1 is a 150mV(max) square wave and pin2 is just 100Ω to ground, adjusting the pot between 0 and ∞ yields 41mVpp to 56mVpp ... that's not very good, only a couple dB<br /><br />That 20k resistor is a pain.<br /><br />Fine, so we add a <a href="https://en.wikipedia.org/wiki/Negative_impedance_converter" class="postlink">negative impedance converter</a> to undo the 20k that we can't get rid of. <s>It&#39;ll require that we synthesize a negative voltage, but this already crazy analogland, so whatever.</s><br /><br />And, yup: that lets us get an arbitrary volume attenuation. Synthesizing a different regulated choice of &quot;ground&quot; for the NIC other than 0V should make it possible to not need sophisticated power circuitry to create a negative voltage:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">pin1 -- 20k --+<br />pin2 -- 12k --+-- 1uf -- rest of audio hardware<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; |<br />&nbsp; &nbsp; +-- 20k --+<br />&nbsp; &nbsp; |<br />&nbsp; &nbsp; +-- pot --+<br />&nbsp; &nbsp; |&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|<br />&nbsp; &nbsp; |&nbsp; |\&nbsp; &nbsp; &nbsp;|<br />&nbsp; &nbsp; +--|+ \&nbsp; &nbsp;|<br />&nbsp; &nbsp; &nbsp; &nbsp;|&nbsp; &nbsp; &gt;-+<br />&nbsp; &nbsp; +--|- /&nbsp; &nbsp;|<br />&nbsp; &nbsp; |&nbsp; |/&nbsp; &nbsp; &nbsp;|<br />&nbsp; &nbsp; |&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|<br />&nbsp; &nbsp; +-- 10k --+<br />&nbsp; &nbsp; |<br />&nbsp; &nbsp; +-- 10k -- Vreg<br /></div> A 20k pot here would become a -20k pot. When set to -20k, we've magically made a 0 ohm resistor and attenuation is ≈infinite. When set to 0, it's only 3dB (20·log<sub>10</sub>(56÷41)) quieter than without this add-on hardware.<br /><br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I'm a little confused how one would integrate expansion audio channels and master volume at the same time in terms of the PWM DAC's output level calculation.<br /></div>The math becomes gross but it should still be doable. An electrically super simple and lazy option would be to replace Vreg with the external mixed in audio signal, but the mixing equation becomes a little weird.<br /><br />—<br /><br />If we're going to be <em>even more</em> completely ridiculous, a NIC allows us to multiply the complex reactances of three different passives. By changing some of them to have some imaginary component (e.g. a capacitor or inductor) we can instead have a programmatically controlled high-/low- pass audio filter.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>2</strong> of <strong>2</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>