<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Hex to Decimal suggestion</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Hex to Decimal suggestion</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=10&amp;t=1222">http://forums.nesdev.com/viewtopic.php?f=10&amp;t=1222</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>5</strong> of <strong>7</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sun Sep 10, 2006 7:15 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Celius wrote:</div><div class="quotecontent"><div class="quotetitle">tepples wrote:</div><div class="quotecontent">But if you select your divisors such that the quotient is always 0 or 1, each division reduces to a single subtraction. For example, the divisors might be 40000, 20000, 10000, 8000, 4000, 2000, 1000, etc. Then each comparison result becomes one bit of the BCD output.</div><br />By the way, I sort of got what you were saying, but I'm just curious, why would you divide a 4 hex-digit number by a 5 hex-digit number? Maybe I wasn't getting what you were saying. Like $40000, why would you use that as the divisor in a 16-bit BinToDec routine?</div>
<br />I said 40000 ($9C40), not 262144 ($40000). Did I slip in a $ by mistake? If you prefer reading hex, the sequence is <ol style="list-style-type: decimal"><li>Digit 10^4: $9C40, $4E20, $2710 </li><li>Digit 10^3: $1F40, $FA0, $7D0, $3E8 </li><li>Digit 10^2: $320, $190, $C8, $64 </li><li>Digit 10^1: $50, $28, $14, $0A </li><li>Digit 10^0: Remainder </li></ol>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Celius</b> [ Sun Sep 10, 2006 7:34 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />No, it's just that you jumped from 10000 to 8000, so it seemed to be hex. I don't know why you'd go from 10000 to 8000 unless it was hex.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>mozz</b> [ Mon Sep 11, 2006 7:30 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Here's how my algorithm works.  Suppose it prints 3-digit numbers and I want it to print the number N = 730.
<br />
<br />It would start with a digit D = 0, and assuming that 0 &lt;= N &lt;= 999 (i.e. no more than 3 digits).
<br />
<br />First, it would check if N &gt;= 600.  If so, it would decrease N by 600, and increase D by 6.  Now you have a number 0 &lt;= N &lt;= 399 (in our case, it would be 130).
<br />
<br />Next you check if N &gt;= 300.  If so, decrease N by 300, and increase D by 3.  130 fails this test so we do nothing here.  We now know N &lt;= 299.
<br />
<br />Then you check if N &gt;= 200.  Again, 130 fails this test.  By this point we know  that N &lt;= 199.
<br />
<br />Then you check for N &gt;= 100.  Since its 130, you decrease N by 100 and increase D by 1.  Now you have N &lt;= 99 (in other words, a two digit number) and you know that this first digit was D  (in our case, 7).
<br />
<br />Repeat for the next digit, using 60, 30, 20, 10.
<br />
<br />
<br />Anyway, it actually prints 5-digit numbers but that is the general idea.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Mon Sep 11, 2006 8:51 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I cannot undestand why the comparaison method would be so fast. It sounds rather silly to me.
<br />The only one that sound good is Celius idea by first converting each hex nybble to decimal, and then add all componant in decimal, or simply do the other way arround, that I've always used, that is first separate all componant of the decimal number by substaction.
<br />
<br />In other word you'll want to convert the number 765432 in decimal :
<br />While the number is greather than the HEX equivalent of 100000, increase digit 6.
<br />While the number is greather than the HEX equivalent of 10000, incerease digit 5.
<br />etc, etc, up to digit 1.
<br />This is accurate and you can add the number of digits you want very easily.
<br />Also it takes very little space to implement. Only con, it is kind of slow.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Mon Sep 11, 2006 8:53 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />This is a very good idea. And not terribly large when implemented unrolled, for maximum speed.
<br />
<br />Thanks to that, i finally understand tepples' code too. I really don't know what would be best: having more than 2 subtractions (in the case of a 7) but have a bit that can be used to build the digit (as in tepples' routine) or minimizing the subtractions but have to actually add values to the digit (as in the routine mozz presented). What would be quicker: 2 additions or 4 shifts?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Mon Sep 11, 2006 8:59 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">Only con, it is kind of slow.</div>
<br />I have another con: Execution time varies A LOT! Converting 00000 will be insanelly faster than doing 59999. Can you just imagine a game that shows a lot of numbers, and this game starts pretty fast and smooth. But as the player advances and collects more items, increases the score, etc, etc the game gets slower... OK, this is a bit drastic. I know that even if you have a lot of numbers on screen it's not like you'll compute them all every frame. It's just that I hate huge variations in execution time, so that's a big con for me.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Mon Sep 11, 2006 9:09 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Anyway, even Strategy games and RPG wich shows a lot of numbers will only see a few at the same time, or refresh a few in VBlank. So even in the worst case where you'll have to convert several numbers of '999999' to show them in VBlank, this will probably not take more time than a dozen of scanline, wich sound kinda correct.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Mon Sep 11, 2006 11:50 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Celius wrote:</div><div class="quotecontent">No, it's just that you jumped from 10000 to 8000, so it seemed to be hex. I don't know why you'd go from 10000 to 8000 unless it was hex.</div>
<br />Each number that is trial-subtracted corresponds to one bit of the BCD output, if you haven't figured it out yet.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Mon Sep 11, 2006 12:37 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">It's just that I hate huge variations in execution time, so that's a big con for me.</div>
<br />So test your game with all values at maximum. For games maintaining a constant frame rate, it is often better for the worst-case execution of a routine to be improved, even if it reduces the best-case performance.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Celius</b> [ Mon Sep 11, 2006 6:33 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Mozz, your algorithm works very much like mine did way way early on in the topic. What I did was I checked how many 10000s went in, then 1000s, then 100s, 10s, then 1s. I did it kind of crappily, and your routine is obviously much better. It's the same idea, kind of. My old one did $270F in 1200 cycles. The higher the number, the slower it is. So that means that it would be REALLY slow for $FFFF. Now that I think about it, I think it only did up to 4 digits....
<br />
<br />I get your idea, mozz. I'm almost sure I understand yours, tepples. I just have to do a manual test to see if I have it.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Mon Sep 11, 2006 7:26 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Celius wrote:</div><div class="quotecontent">Mozz, your algorithm works very much like mine did way way early on in the topic. What I did was I checked how many 10000s went in, then 1000s, then 100s, 10s, then 1s.</div>
<br />That's similar to the routine Bregalad uses, not mozz. The ideas presented by mozz and tepples are much faster. To represent 9999 your first routine and Bregalad's routine will perform 9 subtractions per digit. Their routines would perform only 2 subtractions per digit, and that's a very big difference.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Celius</b> [ Mon Sep 11, 2006 8:30 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I know that they do a bigger subtraction so there will only be 1 per digit, but it's like the same idea about increasing the Xs place digit by a certain amount depending on what you subtracted from it. It's kind of a dumb comparison to his routine, but, whatever.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Mon Sep 11, 2006 11:06 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Mozz's algorithm interested me so I put together a working version and tested it thoroughly. The current interface accepts a 16 or 8 bit value and outputs a 2, 3, 4, or 5 byte decimal value. It assembles to 251 bytes and has a BSD-style license which poses almost no restrictions on use. Here is the source and a test program which assemble cleanly with NESASM:
<br />
<br /><a href="http://www.io.com/~greens/temp/xa_to_decimal.asm" class="postlink">xa_to_decimal.asm</a>
<br />
<br /><a href="http://www.io.com/~greens/temp/xa_to_decimal_test.asm" class="postlink">xa_to_decimal_test.asm</a>
<br />
<br /><strong>UPDATE:</strong> Added ability to specify ASCII or other output without any added overhead (adds constant to each output byte, except the ones). Also added entry points to get fewer output digits, i.e. if your number is in the range 0-999, you could ask for only 3 decimal digits and save 100 clocks. This makes it very flexible, and didn't hurt speed at all.
<br />
<br />xa_to_5_digits
<br />XA to 5-byte decimal in ten_thousands, thousands, Y, X, A
<br />Best: 99, Average: 169.5, Worst: 231
<br />
<br />xa_to_4_digits
<br />XA to 4-byte decimal in thousands, Y, X, A
<br />Best: 79, Average: 127.6, Worst: 173
<br />
<br />xa_to_3_digits
<br />XA to 3-byte decimal in Y, X, A
<br />Best: 54, Average: 74.8, Worst: 94
<br />
<br />a_to_3_digits
<br />A to 3-byte decimal in Y, X, A
<br />Best: 43, Average: 51.5, Worst: 60
<br />
<br />a_to_2_digits
<br />A to 2-byte decimal in X, A (Y is unaffected)
<br />Best: 28, Average: 34.4, Worst: 40

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Quietust</b> [ Tue Sep 12, 2006 6:47 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Any chance of a 24-bit version?
<br />You know, because even 16-bit values have their limits...

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Tue Sep 12, 2006 7:01 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Quietust wrote:</div><div class="quotecontent">Any chance of a 24-bit version?</div>
<br />I was wondering that myself. I'm guessing this will significantly slow down the routine. I mean, it's a jump from 5 digits to 8 digits.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>5</strong> of <strong>7</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>