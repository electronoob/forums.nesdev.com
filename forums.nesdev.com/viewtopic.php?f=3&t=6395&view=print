<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - About memory page, Branching and cycle</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">About memory page, Branching and cycle</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=3&amp;t=6395">http://forums.nesdev.com/viewtopic.php?f=3&amp;t=6395</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>meatloaf69</b> [ Mon May 17, 2010 9:46 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>About memory page, Branching and cycle</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I have read documentations regarding the memory map of nes. I know how they are devided (Zero page, stack, ram etc.). What i don't understand is memory paging,  how are memory being paged??
<br />
<br />
<br />When i was implementing 6502 opcode BPL, documents tells me that "branch on result plus". From what i understand, branch if negative flag is not set. Here comes my question in mind "What the hell is branching??? <img src="./images/smilies/icon_lol.gif" alt=":lol:" title="Laughing" /> ". What does branching do???
<br />
<br />my disassembler code:
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&#91;C077&#93; LDX #$02<br />&#91;C079&#93; LDA $2000<br />&#91;C07C&#93; BPL $FB &lt;- this is where i got confused :lol:<br /></div>
<br />
<br />
<br />my last problem is about opcode cycle. the BPL cycle is 2 but the document tells me that "Add 1 if branch on same page. 2 if different."
<br />Which brings me back to the first problem....
<br />
<br />Taken here:
<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">http://6502.wikicomplete.info/bpl</div><br /><br />Hope you guys can help me with this thnx <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /> [/quote]

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>koitsu</b> [ Tue May 18, 2010 1:32 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />A page in 6502 is 256 bytes.  It's pretty easy to understand:
<br />
<br />$0000-00FF = page 0
<br />$0100-01FF = page 1
<br />$0200-02FF = page 1
<br />...
<br />$0F00-0FFF = page 15
<br />$1000-11FF = page 16
<br />...
<br />
<br />You get the idea.
<br />
<br />Regarding branch-related opcodes: the operand is a signed number.  This is why branch opcodes have a limitation in range of -128 to +127 bytes from the PC.  In this case, the branch is signed (MSB / bit 7 of the operand is set), indicating when the condition is met, the PC is to go backwards (e.g. branch backwards).
<br />
<br />$FF - $FB = 4.  Assuming the branch condition is met, the PC will have 4 subtracted from it, and will continue operation there.  It's important to remember that the PC increments at the operand (the "$FB" portion), so when this instruction executes, the PC is actually at $C07D.
<br />
<br />So, the disassembly in question therefore becomes this:
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">$C077: A2 02&nbsp; &nbsp; &nbsp; LDX #$02<br />$C079: AD 00 20&nbsp; &nbsp;LDA $2000<br />$C07C: 10 FB&nbsp; &nbsp; &nbsp; BPL $C079&nbsp; ; BPL $FB, or BPL -4</div><br /><br />$C07D - 4 = $C079.<br /><br />If you truly want to understand how it works: it's two's complement.  I'd rather not explain why; <a href="http://www.alienbill.com/2600/101/docs/onestep.html" class="postlink">here's a better description</a> (see section "Relative Addressing").<br /><br />Now take this example code:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">$C077: A2 02&nbsp; &nbsp; &nbsp; LDX #$02<br />$C079: AD 00 20&nbsp; &nbsp;LDA $2000<br />$C07C: 10 0A&nbsp; &nbsp; &nbsp; BPL $C088&nbsp; ; BPL $0A, or BPL +10</div>
<br />
<br />In this case, the operand is positive (MSB / bit 7 of $0A is not set), which means the branch goes forward.  $C07D + 10 = $C087.  But wait, the branch there says $C088, so how did this happen?  Because the PC is incremented by one after executing the instruction, so $C087 + 1 = $C088.
<br />
<br />Branching itself is just a form of JMP, but is limited to the above range of bytes.  Branching is conditional (you already know this), but it also saves a byte compared to JMP (JMP = 3 bytes, branch = 2 bytes).
<br />
<br />Hope this helps.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Tue May 18, 2010 2:49 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Here's the way I think of it: branch is a two-byte instruction. It executes normally like any other, incrementing the PC twice and taking two cycles. Then, if the branch will be taken, it adds the signed operand to the PC and takes one extra cycle (totaling three cycles now). If this requires alteration of the upper 8 bits of the PC, then it takes a second extra cycle (totaling four cycles). $FF signed is -1, $FE signed is -2, etc. down to $80 signed being -128.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Zepper</b> [ Tue May 18, 2010 9:27 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: About memory page, Branching and cycle</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">meatloaf69 wrote:</div><div class="quotecontent"> how are memory being paged??</div>
<br />
<br />- If you're speaking about memory mappers, well, each PRG data bank is 2000h bytes long. "Paged" is the same of PRG bank "mapped" to:
<br />
<br />CPU 8000-9FFF, A000-BFFF, ...

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>meatloaf69</b> [ Tue May 18, 2010 6:57 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />thnx for the info guys... this really helped me alot. <img src="./images/smilies/icon_cool.gif" alt="8)" title="Cool" />. Now i got a clearer view of things... I can now continue coding  <img src="./images/smilies/icon_twisted.gif" alt=":twisted:" title="Twisted Evil" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>oRBIT2002</b> [ Tue May 18, 2010 11:31 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />How do you guys implement the "add extra cycles if page boundary is crossed" in your emulator in a fast way? Any good ideas?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dwedit</b> [ Tue May 18, 2010 11:48 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Compare the old high byte of PC with the new one.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>oRBIT2002</b> [ Wed May 19, 2010 12:16 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />In my emulator I don't know the NES PC until it's required (due to speed reasons) so I guess I have to be creative to think of something else.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dwedit</b> [ Wed May 19, 2010 12:20 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Align the roms and ram/sram to a 256 byte boundary, examine the pointer.
<br />
<br />And you'll have a hell of a time getting The Magic of Scheherezade to work correctly when the enemies cast spells on you.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>oRBIT2002</b> [ Wed May 19, 2010 12:29 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />That's obviously clever. Thanks for the idea. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />
<br />
<br />How about that ROM you mentioned, does it heavily rely on branch-timing?

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>