<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=9&amp;t=6055" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2010-02-17T15:05:32-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=9&amp;t=6055</id>
<entry>
<author><name><![CDATA[kyuusaku]]></name></author>
<updated>2010-02-17T15:05:32-07:00</updated>
<published>2010-02-17T15:05:32-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6055&amp;p=56728#p56728</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6055&amp;p=56728#p56728"/>
<title type="html"><![CDATA[Minimum volume for an ASIC]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6055&amp;p=56728#p56728"><![CDATA[
The idea was to simply disable mapper writes so the programmer can freely write to PRG ROM. As I understand it, the CopyNES uses an expansion pin for this. Since the 6522's I/O are bidirectional, if during normal play the program pin is set to an input, it wouldn't be necessary to add another chip just to gate mapper writes.<br /><br /><img src="http://img213.imageshack.us/img213/2994/flashidea.png" alt="Image" /><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=20">kyuusaku</a> — Wed Feb 17, 2010 3:05 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Memblers]]></name></author>
<updated>2010-02-17T13:57:46-07:00</updated>
<published>2010-02-17T13:57:46-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6055&amp;p=56725#p56725</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6055&amp;p=56725#p56725"/>
<title type="html"><![CDATA[Minimum volume for an ASIC]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6055&amp;p=56725#p56725"><![CDATA[
<div class="quotetitle">kyuusaku wrote:</div><div class="quotecontent"><br />5V isn't actually THAT big of a deal -- you can use 3.3V CPLD and flash, they're all still TTL compatible, only need a 3.3V regulator to power them. For any rare devices (or almost any current FPGA) that truly aren't 5V tolerant, then you just need a small series resistor to limit current (VCC + ~0.5V will be directed to the VCC rail by way of the static protection diode).<br /></div><br /><br />That hopefully is the case for a lot of stuff, there are some 3V chips that I've wanted to try on NES (I know one of them is unofficially 5V-tolerant, the Propeller MCU, by using current limiting resistors like you said).  But if my understanding is correct about these voltage clamp diodes, they may not be able to handle the current.  Testing a chip family type or revision seems like the only way to know for sure.  It's mostly really the memory chips I'm concerned with.<br /><br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />BTW, I dunno if anyone's already used this but one REALLY cheap way to support flash programming is to connect /ROMSEL (or Phi2 on big mappers) through a 4.7K or so resistor so that the program pin can pull the register clock low (or high depending on the board while keeping the chip enabled) then write strobe the flash. As long as the programming hardware can hi-Z the program pin (CopyNES should) I think it beats using a 139 etc.<br /></div><br /><br />This sounds really interesting, but I don't understand the application yet, could you rephrase or elaborate?<br />Mostly I don't know if /ROMSEL is aka /PRG_CE from the NES, and what the source is of the 'program pin' is.<br />Since flash programming is no different than using SRAM (hardware-wise), I'm guessing this is for something different than I'm thinking of.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=10">Memblers</a> — Wed Feb 17, 2010 1:57 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2010-02-17T01:05:21-07:00</updated>
<published>2010-02-17T01:05:21-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6055&amp;p=56704#p56704</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6055&amp;p=56704#p56704"/>
<title type="html"><![CDATA[Minimum volume for an ASIC]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6055&amp;p=56704#p56704"><![CDATA[
<div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />I believe that PRG bank and one/two-screen mode selection can be moved out of the register to solder-pads. This would also free bits for a larger PRG ROM if desirable.<br /></div><br />And then you get the SX-FLASH board I make (altough only one of them is working, and the battery saves aren't working).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Wed Feb 17, 2010 1:05 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[kyuusaku]]></name></author>
<updated>2010-02-16T18:40:01-07:00</updated>
<published>2010-02-16T18:40:01-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6055&amp;p=56695#p56695</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6055&amp;p=56695#p56695"/>
<title type="html"><![CDATA[Minimum volume for an ASIC]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6055&amp;p=56695#p56695"><![CDATA[
5V isn't actually THAT big of a deal -- you can use 3.3V CPLD and flash, they're all still TTL compatible, only need a 3.3V regulator to power them. For any rare devices (or almost any current FPGA) that truly aren't 5V tolerant, then you just need a small series resistor to limit current (VCC + ~0.5V will be directed to the VCC rail by way of the static protection diode).<br /><br />BTW, I dunno if anyone's already used this but one REALLY cheap way to support flash programming is to connect /ROMSEL (or Phi2 on big mappers) through a 4.7K or so resistor so that the program pin can pull the register clock low (or high depending on the board while keeping the chip enabled) then write strobe the flash. As long as the programming hardware can hi-Z the program pin (CopyNES should) I think it beats using a 139 etc.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=20">kyuusaku</a> — Tue Feb 16, 2010 6:40 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2010-02-16T16:57:19-07:00</updated>
<published>2010-02-16T16:57:19-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6055&amp;p=56691#p56691</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6055&amp;p=56691#p56691"/>
<title type="html"><![CDATA[Minimum volume for an ASIC]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6055&amp;p=56691#p56691"><![CDATA[
<div class="quotetitle">Memblers wrote:</div><div class="quotecontent"><br />I just don't think it's gonna be possible to make super cheap NES carts, a big thing is the 5V logic level.  The price will plateau and could even increase later on.  Unless there's some product line that I'm not familiar with, 5V flash is a dead end.<br /></div><br />Is it possible to do this level shifting inside the ASIC so that it acts as a buffer between the 3.3 V flash and the 5.0 V cart edge?<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />If you really want to make something general purpose, , we should have something like the Aladdin Deck Enhancer.  A pass-through cartridge that would provide bus-level translation as well as a very basic mapper<br /></div><br />That's exactly what NeoFlash has been doing with its GBA-to-N64 adapter and the like, but people in the other thread slammed it.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Tue Feb 16, 2010 4:57 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2010-02-16T15:47:14-07:00</updated>
<published>2010-02-16T15:47:14-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6055&amp;p=56688#p56688</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6055&amp;p=56688#p56688"/>
<title type="html"><![CDATA[Minimum volume for an ASIC]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6055&amp;p=56688#p56688"><![CDATA[
<div class="quotetitle">kyuusaku wrote:</div><div class="quotecontent"><br />This would also free bits for a larger PRG ROM if desirable.<br /></div><br />I consider this important. Limiting this hardware to 256KB isn't a smart move if you want to use it as a long term solution. Even if we don't have homebrews this large yet, if this becomes popular (which is the key for making it feasible) there will eventually be a demand for larger ROMs.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Tue Feb 16, 2010 3:47 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[kyuusaku]]></name></author>
<updated>2010-02-16T15:52:49-07:00</updated>
<published>2010-02-16T15:41:38-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6055&amp;p=56687#p56687</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6055&amp;p=56687#p56687"/>
<title type="html"><![CDATA[Minimum volume for an ASIC]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6055&amp;p=56687#p56687"><![CDATA[
<div class="quotetitle">tepples wrote:</div><div class="quotecontent"><br />I agree that a simple octal-D-style setup like every other ASIC mapper in existence would be preferable for new development, especially if you try to integrate the two 6264 SRAMs on the same die and therefore already have access to the entire address and data bus. But you'd still need at least two registers because MMC1 minus all CHR logic still takes 9 bits: 4 for PRG ROM bank number, 2 for PRG ROM bank mode (32 KiB, 16 KiB, or 16 KiB reverse), 2 for nametable mirroring (H, V, $2000 single, or $2C00 single), and 1 for PRG RAM enable.<br /></div><br />I believe that PRG bank and one/two-screen mode selection can be moved out of the register to solder-pads. This would also free bits for a larger PRG ROM if desirable.<br /><br />Funny enough I've been using a mapper I'll call "APROM"-- 16 x 32K PRG banks with hardwired two-screen mirroring and CHR-RAM. Yeah, no more hardware than CNROM, which I think makes it excellent for homebrew. Sure there's a little overhead for 32K switching, but the only thing I'm really missing is an IRQ counter (which I might add).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=20">kyuusaku</a> — Tue Feb 16, 2010 3:41 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Memblers]]></name></author>
<updated>2010-02-16T15:38:19-07:00</updated>
<published>2010-02-16T15:38:19-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6055&amp;p=56686#p56686</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6055&amp;p=56686#p56686"/>
<title type="html"><![CDATA[Minimum volume for an ASIC]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6055&amp;p=56686#p56686"><![CDATA[
I just don't think it's gonna be possible to make super cheap NES carts, a big thing is the 5V logic level.  The price will plateau and could even increase later on.  Unless there's some product line that I'm not familiar with, 5V flash is a dead end.<br /><br />There are some decent 5V chips though, what I've hoped to do for a while is make a cartridge that could be assembled before I even get it.  You can use a TSOP package and get 1MB or 2MB inexpensively (for now).  Then you just program any MCUs or CPLDs, and put it in the CopyNES to burn the ROM.<br /><br />If you really want to make something general purpose, , we should have something like the Aladdin Deck Enhancer.  A pass-through cartridge that would provide bus-level translation as well as a very basic mapper (that would be designed to be open-ended as possible for the 'deck enhancer' carts).  This would be obnoxiously expensive at first, though.  But it would allow for some fantastic stuff.<br /><br />Actually I've kind of an idea to prototype something like that, but more as a backplane.  It's the same idea, but with bus buffering so multiple cartridges could be used.  Just depends if I'll have the money and time sometime later.<br /><br />I'm just waiting any day now for some uber-wealthy person to show up help me turn Membler Industries into a non-profit organization so I can pay people to R&amp;D this kind of stuff. heheh <img src="http://forums.nesdev.com/images/smilies/icon_razz.gif" alt=":P" title="Razz" /><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=10">Memblers</a> — Tue Feb 16, 2010 3:38 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2010-02-16T14:28:12-07:00</updated>
<published>2010-02-16T14:28:12-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6055&amp;p=56683#p56683</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6055&amp;p=56683#p56683"/>
<title type="html"><![CDATA[Minimum volume for an ASIC]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6055&amp;p=56683#p56683"><![CDATA[
Thousands almost sounds doable. Consider a mass-produced flash cartridge, with the whole thing (including PRG flash memory, RAM+mapper+CIC, PCB, and case) assembled at the factory. I think the cost can be amortized across several games that use it, possibly including remakes of Garage Cart or even the games that bunnyboy sells. Has he or Sivak ever released sales figures?<br /><br />I agree that a simple octal-D-style setup like every other ASIC mapper in existence would be preferable for new development, especially if you try to integrate the two 6264 SRAMs on the same die and therefore already have access to the entire address and data bus. But you'd still need at least two registers because MMC1 minus all CHR logic still takes 9 bits: 4 for PRG ROM bank number, 2 for PRG ROM bank mode (32 KiB, 16 KiB, or 16 KiB reverse), 2 for nametable mirroring (H, V, $2000 single, or $2C00 single), and 1 for PRG RAM enable.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Tue Feb 16, 2010 2:28 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[kyuusaku]]></name></author>
<updated>2010-02-16T13:31:30-07:00</updated>
<published>2010-02-16T13:31:30-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6055&amp;p=56682#p56682</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6055&amp;p=56682#p56682"/>
<title type="html"><![CDATA[Minimum volume for an ASIC]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6055&amp;p=56682#p56682"><![CDATA[
I agree, especially when a SNROM-like single-register mapper could be produced very easily/cheaply with a couple discrete chips.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=20">kyuusaku</a> — Tue Feb 16, 2010 1:31 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2010-02-16T13:20:05-07:00</updated>
<published>2010-02-16T13:20:05-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6055&amp;p=56681#p56681</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6055&amp;p=56681#p56681"/>
<title type="html"><![CDATA[Minimum volume for an ASIC]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6055&amp;p=56681#p56681"><![CDATA[
I wouldn't work with the MMC1. Writing to registers bit by bit is unacceptable IMO.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Tue Feb 16, 2010 1:20 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[kyuusaku]]></name></author>
<updated>2010-02-16T13:21:46-07:00</updated>
<published>2010-02-16T13:17:23-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6055&amp;p=56680#p56680</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6055&amp;p=56680#p56680"/>
<title type="html"><![CDATA[Minimum volume for an ASIC]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6055&amp;p=56680#p56680"><![CDATA[
Until there's a game that will sell in the tens of thousands, I don't think a structured ASIC would be justified. At that point it could save perhaps $10/cart in logic (from $15 for a CPLD, CIClone). Prematurely producing an ASIC cart without that SNROM killerapp wouldn't be wise since 1) authors won't necessarily settle for MMC1 and 2) most importantly, almost any fixed function mapper will always be cheaper to implement in discrete logic and possibly recycled SPLD. Because of that, until you have MMC3 level integration CPLD don't look attractive, much less ASIC.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=20">kyuusaku</a> — Tue Feb 16, 2010 1:17 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2010-02-16T10:03:59-07:00</updated>
<published>2010-02-16T10:03:59-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6055&amp;p=56674#p56674</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6055&amp;p=56674#p56674"/>
<title type="html"><![CDATA[Minimum volume for an ASIC]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6055&amp;p=56674#p56674"><![CDATA[
Discussions with kevtris and other people on <a href="irc://irc.efnet.org/nesdev" class="postlink">#nesdev</a> have shown me that ultra-low volume is the enemy of cost-effective reproductions of homebrew NES games. The only way I can see to up the volume is to make it like some of the counterfeit GBA games, many of which are just programmed onto cards like <a href="http://www.dealextreme.com/details.dx/sku.25752" class="postlink">this $9 cart</a>. So part of the solution would be to produce a general-purpose flash card like the GBA ones. This could be programmed in a CopyNES or in a dedicated device like a Retrode or Flash Linker. Now the NES is different from the GBA in that not all cartridges are created equal (with respect to e.g. mappers), but we can still pick a baseline that's good enough for plenty of homebrew projects: SNROM (MMC1 with CHR RAM and PRG RAM).<br /><br />My question: At how many thousand carts does it become cost-effective to produce an ASIC, compared to a CPLD + CIClone + two 6264 SRAM chips? And if "the community" can get the Pandora PDA mass-produced, can we do the same thing for a 256 KiB NES flash cart?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Tue Feb 16, 2010 10:03 am</p><hr />
]]></content>
</entry>
</feed>