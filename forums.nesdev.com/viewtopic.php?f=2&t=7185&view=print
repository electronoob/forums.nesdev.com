<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - ATALAN - new programming language for 6502</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">ATALAN - new programming language for 6502</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=7185">http://forums.nesdev.com/viewtopic.php?f=2&amp;t=7185</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>3</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rudla.kudla</b> [ Mon Nov 22, 2010 9:47 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>ATALAN - new programming language for 6502</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Hi,
<br />
<br />I'm developing new high level programming language for 6502 processors - ATALAN. You can find out more about it at <a href="http://atalan.kutululu.org/" class="postlink">http://atalan.kutululu.org/</a>.
<br />
<br />The language is still under development but it can already be used to develop games (even by someone else than me <img src="./images/smilies/icon_smile.gif" alt=":-)" title="Smile" /> ) See <a href="http://atalan.kutululu.org/projects.html" class="postlink">http://atalan.kutululu.org/projects.html</a>
<br />I would also claim, that it already produces very good code.
<br />
<br />ATALAN currently supports 8-bit ATARI line of computers and I would like to expand the support to other platforms and to lure some programmers from other platforms to try the language.
<br />
<br />Is there someone willing to try to create (with my extensive help, of course) platform definition files for NES system?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>mic_</b> [ Mon Nov 22, 2010 10:42 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Does it support 65C816 (SNES) or HuC6280 (PC Engine)? Those would probably be more interesting for me than plain 6502 right now. But I might check it out when I finally get around to doing something on the Atari 8-bits (I already own an AtariMax 8Mbit flash cart).
<br />
<br />Personally I'm not such a big fan of using Python-style block-delimiting by indentation  <img src="./images/smilies/icon_razz.gif" alt=":P" title="Razz" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Mon Nov 22, 2010 12:23 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I on the other hand am a fan of Python-style indentation, though some of the syntax (such as for loops) could be made a bit more Python-like to ease the transition.
<br />
<br />Bug report with tetris:
<br /><ul><li>Randomizer "RANDOM and 7" appears biased toward 't', as both fixed tetrominoes 0 and 7 are T. If your RNGs are limited to only binary-power-of-two ranges, there's still a way to make an unbiased randomizer: choose one of the four least recently used of the seven one-sided tetrominoes. </li><li>I didn't see any code to nudge the piece one cell to the right or left if a rotation overlaps. Pretty much every Tetris game since 1999 has <a href="http://harddrop.com/wiki/index.php?title=Wall_kick" class="postlink">wall kick</a>. </li><li>There's only one 'rotation' array from one fixed tetromino to its rotation, not one for each rotation direction. Pretty much every Tetris game since 1989 has bidirectional rotation. </li><li>It has the same name as the products of The Tetris Company. GNOME had to change its Tetris clone (formely "Gnometris") to be called "Quadrapassel". </li></ul>
<br />Another hardware difference:
<br />
<br />"out s@$8000:array(0..39,0..23) of byte"
<br />
<br />That looks like how it's done on a GBA, but text output on the NES is a bit more complicated than that. It's a lot more like a TMS9918 series VDP used in the ColecoVision console and MSX computer. One must first wait for vertical blank, write to one port to seek to an address in video memory, and write one or more bytes to it. And either all the writes need to fit into the first 2270 CPU cycles after the VBI or the screen needs to be turned off. Copying the sprite display list from RAM to video memory ordinarily takes about 520 of these cycles.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rudla.kudla</b> [ Mon Nov 22, 2010 1:29 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />@mic_:
<br />
<br />Currently only 6502 is supported, but processor too is defined in platform file, so it should be possible to define other processors (at least in theory, surely there will be some problems when doing transition from 1 supported processor to 2 <img src="./images/smilies/icon_smile.gif" alt=":-)" title="Smile" /> ).
<br />
<br />Defining another processor would just make it bigger adventure.
<br />
<br />As for indentation, Atalan supports syntax with parentheses, in such case it ignores indent.
<br />
<br />So you can use:
<br />
<br />if x = 1
<br />    "a"
<br />    "b"
<br />
<br />or
<br />
<br />if x = 1 (
<br />"a"
<br />     "b"
<br />)
<br />
<br />or
<br />
<br />if x = 1 "a" "b"
<br />
<br />whichever suits you better.
<br />
<br />@tepples:
<br />
<br />Nice spots for just short overview <img src="./images/smilies/icon_smile.gif" alt=":-)" title="Smile" />
<br />
<br />Tetris is not really meant as a full game, just as an example of using Atalan.
<br />So yes, randomizer is biased and there is no nudge etc. but I believe there is no point in making the example more complicated than necessary.
<br />
<br />As for hardware difference: that's why I am trying to find someone to help me with the NES support.
<br />
<br />I do not thing, we should try to provide library that would allow the Tetris example to be compatible with both Atari and NES. That would severely limit both Atari and NES capabilities available in Atalan, as only common subset of the two systems features would be avalable. That would be in my opinion almost useless.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Mon Nov 22, 2010 1:50 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Just some things that caught my attention when skimming the reference:
<br />
<br />* No 0xFF or FFh hex constants?
<br />* No /* */ and //-style comments?
<br />* No shift operators?!?
<br />* No negation operator?
<br />* "Relational operator may be chained, so it is possible to write for example 10&lt;100 etc."  huh?
<br />* So if I write a = b and c I get bitwise AND, but if I write if b and c I get boolean AND? What if I want bitwise and in an expression used as a condition? Seems very error-prone.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rudla.kudla</b> [ Mon Nov 22, 2010 2:02 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />@mic_:
<br />
<br />I quicly skimmed the documentation on HuC6280 CPU at <a href="http://shu.emuunlim.com/download/pcedocs/pce_cpu.html" class="postlink">http://shu.emuunlim.com/download/pcedocs/pce_cpu.html</a> and I believe support for this processor should be relatively easy to provide.
<br />I'm only not sure about the paged memory. I'm not sure, how should automatic support for this work.
<br />
<br />@blargg:
<br />
<br />- hex constants are $FF
<br />- // comment is done using ;
<br />- shift operators are not yet supported directly, arithmetic shifts can be done using multiplication or division by two
<br />- binary negation can be done using xor, logical negation is supported
<br />- chained relational operators are like 10 &lt; x &lt;= 100  (will repair the documentation - HTML swallowed the &lt;)
<br />- bitwise vs. logical operators - it is possible to combine them, but it proves to be error prone, I'm considering switching to different names for binary operators (bitand, bitor ?)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>psycopathicteen</b> [ Mon Nov 22, 2010 4:18 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Somethings I never understood about high-level languages?
<br />
<br />What is all this "hello world" stuff?, why do you learn it first?, and what does it have to do with the NES?
<br />
<br />How do all these valuables get stored?  Like a + b = c?  Where in the memory is "a" "b" and "c" and how does it avoid writting over them by accident?  If you write something like "#$00 = $0000" is there a chance you might be writing over "a" by accident?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Mon Nov 22, 2010 4:51 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">psycopathicteen wrote:</div><div class="quotecontent">Somethings I never understood about high-level languages?</div><br />Was that a question?<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">What is all this "hello world" stuff?, why do you learn it first?, and what does it have to do with the NES?</div><br />The whole "hello world" deal comes from the notion that the most basic thing you can do in any programming language is display a message, so looking at how that's achieved in a new language might be an interesting first contact with it.<br /><br />On the NES this doesn't make much sense, because it doesn't have a default character set or a built-in function that displays messages, so the fact that you have to include those in the hello world program will make it much more complex than the average hello world program. That's in assembly though, a high-level language might make things easier.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Where in the memory is "a" "b" and "c"</div><br />Those are variables. The compiler probably assigns those names to free memory locations.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">and how does it avoid writting over them by accident?</div><br />Uh... just pay attention to the variable names you use?<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">"#$00 = $0000"</div>
<br />That statement doesn't make any sense in any language.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Memblers</b> [ Mon Nov 22, 2010 5:09 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />It seems the main difference between NES and Atari 8-bit is the memory map.  There's 2kB of RAM, but is often expanded by putting another 8kB at $6000-$7FFF.  $8000 and above is all ROM, of course, and paged in whatever way one could want for larger sizes.  Given a choice, I would say to go with the UNROM mapper, $8000-$BFFF is paged, $C000-$FFFF is fixed to the last 16kB.
<br />
<br />Excluding all the graphics and other I/O differences, if you think it could be usable on the Atari 5200, then should be just as good on NES.  As long as you don't use decimal mode.  It was patented, so it was removed when they copied the 6502.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Mon Nov 22, 2010 5:19 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">rudla.kudla wrote:</div><div class="quotecontent">- shift operators are not yet supported directly, arithmetic shifts can be done using multiplication or division by two</div><br />But does it optimize the multiplies into shifts, or does it call a multiply function? <br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">- bitwise vs. logical operators - it is possible to combine them, but it proves to be error prone, I'm considering switching to different names for binary operators (bitand, bitor ?)</div><br />Python uses '&amp;' and '|' for bitwise operators and 'and' and 'or' for operators that cast both sides to Boolean.<br /><br /><div class="quotetitle">psycopathicteen wrote:</div><div class="quotecontent">What is all this "hello world" stuff?, why do you learn it first?</div><br />Displaying "hello world" is there to confirm that your toolchain, init code, and text drawing code are in order, so that you can print messages to the screen about the state of the rest of your program.<br /><br /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">Was that a question? </div><br />Probably not. Try replacing '?' with ':' in that.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">On the NES [displaying hello world] doesn't make much sense, because it doesn't have a default character set or a built-in function that displays messages</div>
<br />The NES has more of a default character set than some other consoles, if only because the NES supports CHR ROM. You don't have to copy the font into RAM first; you can just wait for warm-up, throw up a palette, clear a nametable, write "hello world" to a port on the PPU, and turn rendering on.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Mon Nov 22, 2010 6:33 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent"><div class="quotetitle">rudla.kudla wrote:</div><div class="quotecontent">- shift operators are not yet supported directly, arithmetic shifts can be done using multiplication or division by two</div><br />But does it optimize the multiplies into shifts, or does it call a multiply function?</div>
<br />Take a look at processor/m6502/m6502.atl in the source code. Apparently this file literally implements the language for the 6502, from high-level operators down to the basic instructions, creating a mapping between them, and optimizations for specific cases. I didn't see any arithmetic right shift, so I'm not sure whether it even supports signed division (and whether it's algebraic or round-to-negative-infinity). I'm actually wondering whether it can even differentiate between signed and unsigned values for operators.
<br />
<br />I believe this one translates a*b into mul r,a,b  (where r is a temporary to place the result into)
<br />
<br />;"*"@10:binary     = #mul r,a,b
<br />
<br />Then mul is implemented for the general case
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">rule mul %A:card, %B:byte, %C:byte = instr<br />&nbsp; &nbsp; &nbsp; &nbsp; let _a, %B<br />&nbsp; &nbsp; &nbsp; &nbsp; let _x, %C<br />&nbsp; &nbsp; &nbsp; &nbsp; call _sys_mul8<br />&nbsp; &nbsp; &nbsp; &nbsp; let %A, _TEMPW2</div><br />Optimizations are made for specific cases, like *2, *3, *4, etc.<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">rule mula %A:byte, 2&nbsp; &nbsp; = instr<br />&nbsp; &nbsp; &nbsp; &nbsp; let _a, %A&nbsp; &nbsp; &nbsp; ; lda %B<br />&nbsp; &nbsp; &nbsp; &nbsp; mul _a, _a, 2&nbsp; &nbsp;; asl<br /><br />rule mula %A:byte, 3&nbsp; &nbsp; = instr<br />&nbsp; &nbsp; &nbsp; &nbsp; let _a, %A&nbsp; &nbsp; &nbsp; ; lda %B<br />&nbsp; &nbsp; &nbsp; &nbsp; mul _a, _a, 2&nbsp; &nbsp;; asl<br />&nbsp; &nbsp; &nbsp; &nbsp; let _c, 0<br />&nbsp; &nbsp; &nbsp; &nbsp; add _a, _a, %A<br /><br />rule mul %A:byte, %B:byte, 4&nbsp; &nbsp; = instr<br />&nbsp; &nbsp; &nbsp; &nbsp; let _a, %B&nbsp; &nbsp; &nbsp; ; lda %B<br />&nbsp; &nbsp; &nbsp; &nbsp; mul _a, _a, 2&nbsp; &nbsp;; asl<br />&nbsp; &nbsp; &nbsp; &nbsp; mul _a, _a, 2&nbsp; &nbsp;; asl<br />&nbsp; &nbsp; &nbsp; &nbsp; let %A, _a&nbsp; &nbsp; &nbsp; ; sta %A</div><br />And finally, some actual instructions, like<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">rule let _a,%A:byte&nbsp; &nbsp; &nbsp;= &quot;&nbsp; &nbsp;lda %A&quot;<br />rule mul _a,_a,2&nbsp; &nbsp; &nbsp; &nbsp; = &quot;&nbsp; &nbsp;asl&quot;<br />rule add _a,_a,%A:byte&nbsp; = &quot;&nbsp; &nbsp;adc %A&quot;</div>
<br />This to me is the most fascinating part of the language. In a very flexible way, it goes from high-level operators down to assembly generation and optimization, all in the same kind of specification syntax.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>mic_</b> [ Mon Nov 22, 2010 11:29 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I quicly skimmed the documentation on HuC6280 CPU at <!-- m --><a class="postlink" href="http://shu.emuunlim.com/download/pcedocs/pce_cpu.html">http://shu.emuunlim.com/download/pcedocs/pce_cpu.html</a><!-- m --> and I believe support for this processor should be relatively easy to provide. <br />I'm only not sure about the paged memory. I'm not sure, how should automatic support for this work.</div>
<br />
<br />I'd think most 6502-based systems have some kind of paging/banking. It's typically up to the programmer to handle the bank switches. What would be needed for the HuC6280 are some kind of intrinsic functions in ATALAN to be able to access the special bank switching functions (TAM/TMA). One would also like to have similar ones for the block-move instructions (TII/TIA/TIN...).
<br />And preferably the code generator/optimizer should be aware of the new instructions available (CLA/STZ/DEA/INA/BBR...) and use them when applicable.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rudla.kudla</b> [ Tue Nov 23, 2010 1:17 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />@blargg:
<br />
<br />You perfectly grasped the idea behind Atalan <img src="./images/smilies/icon_smile.gif" alt=":-)" title="Smile" /> In future, I would like to target even some other processors (like Z80). Also any programmer knowing an assembler should be able to provide it's own translation rules, so you are not stuck, when something is not as optimal as you would like to.
<br />
<br />Signed numbers can be supported - in fact rules match against intervals like 0..255 or -128..127 etc. so it is possible to provide special rules for any numeric interval.
<br />
<br />I have currently some rudimentary support for signed numbers, but multiplication and division are not supported yet. I do not currenlty have the necessary routines for signed multiplication and division.
<br />
<br />However this is again one of the strong points of rule based translation. If your application is computation heavy (some 3d), you may create fast versions of arithmetic routines and let the compiler use them instead of default built-in routines.
<br />
<br />@mic_:
<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I'd think most 6502-based systems have some kind of paging/banking. It's typically up to the programmer to handle the bank switches. What would be needed for the HuC6280 are some kind of intrinsic functions in ATALAN to be able to access the special bank switching functions (TAM/TMA). One would also like to have similar ones for the block-move instructions (TII/TIA/TIN...). <br /></div><br /><br />I was at least thinking about assigning every array to some bank and automatically switching them on when they are accessed.<br /><br />Manual bank switching should be possible just using translation rules and macros.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">And preferably the code generator/optimizer should be aware of the new instructions available (CLA/STZ/DEA/INA/BBR...) and use them when applicable.</div>
<br />
<br />Custom translation rules should be able to handle this easily.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Tue Nov 23, 2010 11:53 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Signed numbers can be supported - in fact rules match against intervals like 0..255 or -128..127 etc. so it is possible to provide special rules for any numeric interval.</div>
<br />Very interesting. It allows more semantic information to go from a high level down to optimization. One thing about optimization, though, can it do it to entire basic blocks, or is it only at the statement level? For example, if I incremented a variable then immediately decremented it, is there any way that could be optimized out entirely?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Tue Nov 23, 2010 12:31 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">blargg wrote:</div><div class="quotecontent">One thing about optimization, though, can it do it to entire basic blocks, or is it only at the statement level? For example, if I incremented a variable then immediately decremented it, is there any way that could be optimized out entirely?</div>
<br />Adding support for <a href="http://en.wikipedia.org/wiki/Peephole_optimization" class="postlink">peephole optimization</a> would depend on keywords in the language to mark a variable as having side effects on read or write. For example, C uses <strong>volatile</strong> for this. Otherwise, it'd optimize out the first of two writes to $2005 or $2006 and the second through eighth reads from $4016.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>3</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>