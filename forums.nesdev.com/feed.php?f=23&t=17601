<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=23&amp;t=17601" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2018-08-16T09:22:52-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=23&amp;t=17601</id>
<entry>
<author><name><![CDATA[psycopathicteen]]></name></author>
<updated>2018-08-16T09:22:52-07:00</updated>
<published>2018-08-16T09:22:52-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=17601&amp;p=223572#p223572</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=17601&amp;p=223572#p223572"/>
<title type="html"><![CDATA[Re: Sprites: SNES vs Genesis]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=17601&amp;p=223572#p223572"><![CDATA[
<!-- m --><a class="postlink" href="https://www.youtube.com/watch?v=jlkzy9cIB5o">https://www.youtube.com/watch?v=jlkzy9cIB5o</a><!-- m --><br /><br />The first skeletons you come accross recycle the same body parts between frames, but changes the location of the body parts relative to eachother.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4383">psycopathicteen</a> — Thu Aug 16, 2018 9:22 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Sumez]]></name></author>
<updated>2018-08-15T00:37:23-07:00</updated>
<published>2018-08-15T00:37:23-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=17601&amp;p=223511#p223511</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=17601&amp;p=223511#p223511"/>
<title type="html"><![CDATA[Re: Sprites: SNES vs Genesis]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=17601&amp;p=223511#p223511"><![CDATA[
SNES Dracula XX is re-using a ton of graphics from the PC Engine Dracula X game (which is an entirely different game aside from that). I'm pretty sure all the multijointed enemies in the game are carried over directly from the earlier game, so it made sense to do it the same way.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=7819">Sumez</a> — Wed Aug 15, 2018 12:37 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[psycopathicteen]]></name></author>
<updated>2018-08-14T12:14:30-07:00</updated>
<published>2018-08-14T12:14:30-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=17601&amp;p=223489#p223489</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=17601&amp;p=223489#p223489"/>
<title type="html"><![CDATA[Re: Sprites: SNES vs Genesis]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=17601&amp;p=223489#p223489"><![CDATA[
<div class="quotetitle">Marscaleb wrote:</div><div class="quotecontent"><br />Ahh, I see my mistake now. <br />Although it can share data with the background, there is still only 16K that can be used as sprites.<br /><br />Wait, does that really come out to only two banks of 256 tiles?  That's only double what the NES can store; that's outrageous.  How did even half the games I've played even function with such a small selection of sprites?<br />Right off the cuff I'm guessing you can change where in the memory those two banks are, so between frames you could swap out for another set of tiles.  That would be great for something like a fighting game, but anything else will leave you pressed to have the tiles you need.<br /></div><br /><br />Donkey Kong Country had 3 types of animated sprites (normal, bananas/HUD, and bosses).  Normal sized sprites can take up to 1kB at maximum, and there can be up to 14 of them onscreen at once.  Bananas and HUD take 2kB all together and they are statically located.  Bosses animate similar to normal sized sprites, but they take up 2 normal sized enemy slots instead of one.  During game logic, it predicts when DMA overflow happens, so instead of DMA causing black bar glitches it delays the animation instead.  If you're playing in slow motion, you can sometimes see Donkey Kong or Diddy Kong float for a frame before their jumping animation begins.<br /><br />Dracula X is pretty interesting.  The main player animates with DMA like Donkey Kong Country does, but the enemies don't use DMA except when changing rooms.  Rooms can't have too many distinct enemy types or else they won't fit in VRAM.  Weapons get DMA'ed during weapon changes.  The interesting thing about this game is that the enemies are actually a combination of traditional frame by frame animation and multijointed sprites.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4383">psycopathicteen</a> — Tue Aug 14, 2018 12:14 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[93143]]></name></author>
<updated>2018-08-08T17:34:35-07:00</updated>
<published>2018-08-08T17:34:35-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=17601&amp;p=223063#p223063</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=17601&amp;p=223063#p223063"/>
<title type="html"><![CDATA[Re: Sprites: SNES vs Genesis]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=17601&amp;p=223063#p223063"><![CDATA[
Yes, you can change where the sprite data banks are in VRAM.  This might be useful for double buffering or very rapid scene changes.<br /><br />In fact you can do it mid-frame to bust the 16 KB limit, but as I said it's hard to use this trick for anything other than a fake BG layer made out of sprites, so it's extremely rare.<br /><br />Perhaps one of the bigger differences is that you can replace several KB of sprite data per frame with DMA.  This isn't NROM, where the whole game uses one sprite table...<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6595">93143</a> — Wed Aug 08, 2018 5:34 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2018-08-08T17:32:01-07:00</updated>
<published>2018-08-08T17:32:01-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=17601&amp;p=223061#p223061</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=17601&amp;p=223061#p223061"/>
<title type="html"><![CDATA[Re: Sprites: SNES vs Genesis]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=17601&amp;p=223061#p223061"><![CDATA[
I think both the Genesis and the SNES make heavy use of DMA to stream new patterns as needed. On the NES you had to do it manually byte by byte, so that's why CHR-RAM animations weren't so common, but when you have DMA functionality at your disposal? Run the games in emulators with VRAM viewers and you'll see how much the tiles change over time.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Wed Aug 08, 2018 5:32 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Marscaleb]]></name></author>
<updated>2018-08-08T17:19:46-07:00</updated>
<published>2018-08-08T17:19:46-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=17601&amp;p=223060#p223060</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=17601&amp;p=223060#p223060"/>
<title type="html"><![CDATA[Re: Sprites: SNES vs Genesis]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=17601&amp;p=223060#p223060"><![CDATA[
Ahh, I see my mistake now. <br />Although it can share data with the background, there is still only 16K that can be used as sprites.<br /><br />Wait, does that really come out to only two banks of 256 tiles?  That's only double what the NES can store; that's outrageous.  How did even half the games I've played even function with such a small selection of sprites?<br />Right off the cuff I'm guessing you can change where in the memory those two banks are, so between frames you could swap out for another set of tiles.  That would be great for something like a fighting game, but anything else will leave you pressed to have the tiles you need.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=7200">Marscaleb</a> — Wed Aug 08, 2018 5:19 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2018-08-08T01:41:07-07:00</updated>
<published>2018-08-08T01:41:07-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=17601&amp;p=222982#p222982</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=17601&amp;p=222982#p222982"/>
<title type="html"><![CDATA[Re: Sprites: SNES vs Genesis]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=17601&amp;p=222982#p222982"><![CDATA[
Sprites can be shared with background but only in some modes where the backgrounds are 4BP, in practice that means background 1 and 2 of mode 1 and mode 2, as well as background 2 of the rarely used mode 3. (Mode 5 also uses a 4BP background but it's hi-res so re-using the same data as sprites won't look the same, harldy useful at all). Also, tile sharing will not work for all combinations of BG's tile size and sprites' size. I'm not knownledgealbe enough about SNES to give all details but you can look it up yourself.<br /><br />The only reason this wasn't used much is that this was hardly ever needed. Sprites are displaying moving objects, background non-moving objects. On the older consoles like the NES sharing sprites and background tiles make sense because there's so few sprites : When an object is moving only rarely, it makes sense to draw it as background, and sprites only when it's actually moving. On the SNES there's enough sprites, so they can just use sprites even for objects which are rarely moving.<br /><br />One example for such is units in Fire Emblem. On the NES version and the <a href="https://gamefaqs.gamespot.com/snes/577343-fire-emblem-monshou-no-nazo" class="postlink">first SNES game</a>, they are drawn with background, except the moving units which are then drawn with sprites. On the last 2 SNES games, as well as the GBA games, the units are just sprites, no matter whether they're moving or not; this probably greatly simplifies programming. I have no idea why they stuck to the BG/sprites changes hassle in the first SNES game, you should analyze it to see whether they re-use sprites as BG or if it's another VRAM page.<br /><br />Another example is the falling blocks in Castlevania games. In Castlevania III, they are displayed as background, and when you step on them for a short time, they start to fall off, blank tiles are written to the background and the falling blocks turn into sprites so they can physically move. In Super Castlevania IV, the exact same falling blocks are simply displayed as sprites all the time, even before they start falling (to be verified, I'm only 95% sure of that ^^).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Wed Aug 08, 2018 1:41 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[93143]]></name></author>
<updated>2018-08-08T01:40:18-07:00</updated>
<published>2018-08-08T01:40:18-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=17601&amp;p=222981#p222981</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=17601&amp;p=222981#p222981"/>
<title type="html"><![CDATA[Re: Sprites: SNES vs Genesis]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=17601&amp;p=222981#p222981"><![CDATA[
There's no function to explicitly &quot;share&quot; data.  It's just that the data happens to be in the same format, and nothing is keeping you from specifying sprite and BG data ranges that overlap.  That's all that means.<br /><br />In the SNES case, the BG data for a 4bpp layer (the same format as the sprites) spans 1024 tiles, or half of VRAM.  Each BG layer has a separate data range in VRAM specified by the programmer, and these data ranges can overlap (so BG layers can also share data with one another).  The sprite data is in two tables, each spanning 256 tiles, and the PPU does not check to make sure you haven't put a sprite table in the middle of a BG data area.  (Why would it?)  So in principle the same tile can be used by both 4bpp BG layers and the sprite layer, all at the same time.<br /><br />The only way to exceed 16 KB of sprite data during one frame (that I know of) is to write to OBSEL during an active line to change where the sprite data is looked for.  That way, once HBlank arrives and the PPU begins to load sprite sliver data for the next line, it looks in the new location.  Unfortunately this is impractical for most situations because it's too hard to figure out where to put stuff to avoid glitching, so in general you're stuck with 16 KB of sprite data, some or all of which may also be background layer data.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6595">93143</a> — Wed Aug 08, 2018 1:40 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Marscaleb]]></name></author>
<updated>2018-08-08T01:05:57-07:00</updated>
<published>2018-08-08T01:05:57-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=17601&amp;p=222978#p222978</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=17601&amp;p=222978#p222978"/>
<title type="html"><![CDATA[Re: Sprites: SNES vs Genesis]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=17601&amp;p=222978#p222978"><![CDATA[
<div class="quotetitle">adam_smasher wrote:</div><div class="quotecontent"><br /><div class="quotetitle">Marscaleb wrote:</div><div class="quotecontent">They both are looking at the same amount of memory for sprites<br /></div><br />...no?<br /><br />The SNES can only address 16 KB of sprite tile data at a time.  Mid-frame OBSEL writes are very difficult to use for anything other than faking a BG layer with sprites, because of how hard it is to make sure the data you want is available when you want it for every generic moving object on screen.  So basically you've got 16 KB to work with.<br /><br />The Mega Drive can put sprite data anywhere in VRAM.  64 KB.  Shared with BG tiles, map data, and the sprite attribute table, of course, but it's still way more flexible if you've got a bunch of huge sprites like in a beat-em-up.</div><br /><br />Eh?  Then what's this:<br /><div class="quotetitle">tepples wrote:</div><div class="quotecontent"><br /><div class="quotetitle">Marscaleb wrote:</div><div class="quotecontent">And how much memory does the system have that can be used for sprites; how many tiles could be used for sprite data?<br /></div><br />Genesis: 64 KiB; always shared with background<br />Super NES: 16 KiB out of 64 KiB; can optionally be changed mid-screen <strong><span style="text-decoration: underline">or shared with background</span></strong></div><br />If that's the case, then what stops a game from sharing data like the Genesis?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=7200">Marscaleb</a> — Wed Aug 08, 2018 1:05 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[93143]]></name></author>
<updated>2018-08-07T14:48:35-07:00</updated>
<published>2018-08-07T14:48:35-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=17601&amp;p=222957#p222957</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=17601&amp;p=222957#p222957"/>
<title type="html"><![CDATA[Re: Sprites: SNES vs Genesis]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=17601&amp;p=222957#p222957"><![CDATA[
<div class="quotetitle">adam_smasher wrote:</div><div class="quotecontent"><br />Conjecture 1: The MD CPU tends to be faster and better for mathy things that allow for smooth and flexible multijointed sprites.<br /></div><br />It's generally accepted that there was indeed something of an advantage there (though not nearly as big as the MHz numbers suggest).  In addition, the 68000 was more familiar to a lot of programmers, and even 65xx programmers often prefer the 68000, describing it as &quot;like being on vacation&quot; and such stuff.<br /><br />The SNES sprite system was also more fiddly to work with, which made it take more CPU power to do the same thing, particularly if you weren't smart about it.  Hence the <a href="http://forums.nesdev.com/viewtopic.php?t=4381#p37050" class="postlink">OBC-1 chip</a> used in Metal Combat, and the &quot;soft OBC-1&quot; sprite routine devised by modern homebrewers.<br /><br />Your other conjectures make sense to me too.  As an analogy, I've seen people claim that the Mega Drive was better at line scrolling than the SNES, even though its capabilities were just a subset of what the SNES can do with HDMA.  I imagine this sort of thing may be because SNES developers tended to focus more on stuff the SNES could do but the Mega Drive couldn't, rather than just stubbornly going head to head with a better CPU.  Conversely, perhaps Mega Drive programmers were attempting to make the most of their system's more limited feature set, so they'd end up doing things like that because they couldn't do stuff like Mode 7 and colour math.<br /><br /><div class="quotetitle">Marscaleb wrote:</div><div class="quotecontent"><br />They both are looking at the same amount of memory for sprites<br /></div><br />...no?<br /><br />The SNES can only address 16 KB of sprite tile data at a time.  Mid-frame OBSEL writes are very difficult to use for anything other than faking a BG layer with sprites, because of how hard it is to make sure the data you want is available when you want it for every generic moving object on screen.  So basically you've got 16 KB to work with.<br /><br />The Mega Drive can put sprite data anywhere in VRAM.  64 KB.  Shared with BG tiles, map data, and the sprite attribute table, of course, but it's still way more flexible if you've got a bunch of huge sprites like in a beat-em-up.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6595">93143</a> — Tue Aug 07, 2018 2:48 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[adam_smasher]]></name></author>
<updated>2018-08-07T13:52:08-07:00</updated>
<published>2018-08-07T13:52:08-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=17601&amp;p=222956#p222956</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=17601&amp;p=222956#p222956"/>
<title type="html"><![CDATA[Re: Sprites: SNES vs Genesis]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=17601&amp;p=222956#p222956"><![CDATA[
Conjecture 1: The MD CPU tends to be faster and better for mathy things that allow for smooth and flexible multijointed sprites.<br /><br />Conjecture 2: The SNES' additional background layers and Mode 7 were often used for large bosses and the like; developers thought this approach looked better than multijointed sprites so went with this on the SNES instead<br /><br />Conjecture 3: The SNES has more flexibility palette-wise; Genesis developers used uniform sprites with a single palette because more elaborate designs would've pushed the small number of colours available too much<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4826">adam_smasher</a> — Tue Aug 07, 2018 1:52 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Marscaleb]]></name></author>
<updated>2018-08-07T13:35:42-07:00</updated>
<published>2018-08-07T13:35:42-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=17601&amp;p=222955#p222955</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=17601&amp;p=222955#p222955"/>
<title type="html"><![CDATA[Re: Sprites: SNES vs Genesis]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=17601&amp;p=222955#p222955"><![CDATA[
So from looking at the stats, the SNES seems to beat the Genesis in terms of sprites.<br />But there's one thing I'm still left to wonder.<br /><br />Why then, was it so much more common to see things built out several smaller sprites on the Genesis than the SNES?<br />Was this just a style thing?  Or was there some other hardware factor that I'm missing?<br /><br />Of course, lots of games on both systems had things built out of &quot;many sprites,&quot; but on the SNES they tried to make things look like single larger sprites.  Mega Man X, for example, has separate sprites for all his upgradable components, and many of the larger enemies are building out of &quot;parts&quot; that can move independently.  But each of those sprites looks different from each other; each one is a unique &quot;part.&quot;<br />But on the Genesis, so many games had characters (especially bosses) built out of repeated sprites, in a style like Vectorman.  Bosses in Monster World 4, Gunstar Heroes, Castlevania Bloodlines, all the Sonic games.  And yet I'm struggling to think of more than one example on the SNES.<br /><br />The SNES seems more capable of handling many sprites on the screen.  They both are looking at the same amount of memory for sprites, so there isn't a need to repeat objects to conserve memory.  And honestly the Genesis's ability to use more sizes in sprites seems like the kind of thing that would benefit having enemies that look like single large sprites.<br /><br />So where is this coming from?  Is there a hardware reason or was it just a style that the Sega people leaned to more than the Nintendo people?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=7200">Marscaleb</a> — Tue Aug 07, 2018 1:35 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2018-07-31T03:19:58-07:00</updated>
<published>2018-07-31T03:19:58-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=17601&amp;p=222406#p222406</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=17601&amp;p=222406#p222406"/>
<title type="html"><![CDATA[Re: Sprites: SNES vs Genesis]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=17601&amp;p=222406#p222406"><![CDATA[
<div class="codetitle"><b>Code:</b></div><div class="codecontent">Main problem with SNES is the X coordinate being split up, that's an aspect you have to actively fight.</div><br />I could name quite a few games that do a NES-style left clip of the leftmost 8 pixels (often also rightmost, for symetry). I suspect one of the reasons they did that, when using 8x8 sprites, they don't have to worry about the MSB of X position and can just use 0-255, not touching the separate small OAM.<br /><br />Final Fantasy IV only clips one pixel on each side (go figure) but still have sprites misteriously &quot;disapear&quot; when their position is supposed to be in the [-8...-1] range, this is quite ugly but apparently they didn't care.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Tue Jul 31, 2018 3:19 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Gilbert]]></name></author>
<updated>2018-07-30T23:24:36-07:00</updated>
<published>2018-07-30T23:24:36-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=17601&amp;p=222397#p222397</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=17601&amp;p=222397#p222397"/>
<title type="html"><![CDATA[Re: Sprites: SNES vs Genesis]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=17601&amp;p=222397#p222397"><![CDATA[
Honestly, being able to display so many simultaneous colours at once, the PCE missed an opportunity by not using a larger master palette, such as a 4096 one, which was used by a number of arcade boards.<br /><br />As <a href="https://en.wikipedia.org/wiki/Tieguanyin" class="postlink">Tetgannon</a>(the video colour encoder) is a separate chip from <a href="https://en.wikipedia.org/wiki/7_Up" class="postlink">7UP</a>(the video display chip), the system could theoretically be upgraded to using another master palette.<br /><br />In designing the SGX, if they didn't just double the number of video chips (and double the VRAM to a full 128kb that the original system really deserved to have, and, more system RAM), it would curb stomp the MD and SFC if they upgraded the master palette(without the transparency effects, at least; I'm not a fan of the other fancy features such as Mode 7 and screen pixellation) and could make arcade conversions look even better. This may even add up more to the cost though, and I think one main reason they abandoned the SGX was its high cost.<br /><br />Still, I'm more biased towards the PCE as I am an owner and not very much a fan of the other two consoles.<br /><br /><strong>Ninja'ed:</strong><br />Actually Dai Makaimura was developed by <a href="http://www.highriskrevolution.com/gamelife/index.php?e=305" class="postlink">Hudson</a> itself (more accurately mostly handled by Alfa System programmers), but for some reasons published by NEC Avenue.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4653">Gilbert</a> — Mon Jul 30, 2018 11:24 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[ccovell]]></name></author>
<updated>2018-07-30T23:20:23-07:00</updated>
<published>2018-07-30T23:20:23-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=17601&amp;p=222396#p222396</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=17601&amp;p=222396#p222396"/>
<title type="html"><![CDATA[Re: Sprites: SNES vs Genesis]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=17601&amp;p=222396#p222396"><![CDATA[
<div class="quotetitle">tokumaru wrote:</div><div class="quotecontent"><br />And yet somehow, even with 2 video chips stacked together, they still couldn't afford one measly skin tone for Arthur's face in what is probably the <a href="https://youtu.be/DwBKqABy7jg" class="postlink">best home port of Ghouls 'n Ghosts</a>. Go figure.<br /></div><br />You can blame the developer NEC Avenue for that.  They tended to bring over the graphics as-is on many arcade-to-PCE ports, and obviously run simple math on the palette downconversion -- as opposed to tweaking by eye.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=355">ccovell</a> — Mon Jul 30, 2018 11:20 pm</p><hr />
]]></content>
</entry>
</feed>