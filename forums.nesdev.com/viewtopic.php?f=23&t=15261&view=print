<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - DRAM refresh cycles on Genesis and NES</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">DRAM refresh cycles on Genesis and NES</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=23&amp;t=15261">http://forums.nesdev.com/viewtopic.php?f=23&amp;t=15261</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>psycopathicteen</b> [ Sun Dec 18, 2016 12:00 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>DRAM refresh cycles on Genesis and NES</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I know that on the SNES, DRAM refresh halts the CPU for 40 master cycles every line.  Do the Genesis and NES CPUs have to be halted during DRAM refresh, or do they use some other kind of DRAM that doesn't need halting the CPU.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Sun Dec 18, 2016 12:01 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: DRAM refresh cycles on Genesis and NES</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />NES CPU doesn't use DRAM.<br /><br />The sprite memory in the PPU is DRAM, but its refresh is the same as evaluation.<br /><br />The FDS uses DRAM, but it seems to be using some kind of hidden refresh.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tomaitheous</b> [ Sun Dec 18, 2016 12:14 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: DRAM refresh cycles on Genesis and NES</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The Genesis system ram uses special DRAM that interfaces like SRAM (I forget the name of it; PSRAM? I dunno). There is some cycle delay for the internal refresh, but I don't remember the details. I just remember the effect being being almost non-existent. <br /><br /> I thought I remember the SMS using DRAM, but that could be just be me remembering that the z80 has a built-in dram controller - and associating it as such.<br /><br /> PCE is SRAM (main memory, video memory). Even though the PCE 65x variant processor runs at 7.16mhz - it can run roms and ram just fine at 120ns. The PCE's Arcade Card uses DRAM for the extended 2048kbytes of ram, but the refresh is hidden (because there's no way to stall/delay the CPU from the cart port; that can only be done via the back plane interface. /RDY isn't available on the front port for whatever reason).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Sun Dec 18, 2016 12:23 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: DRAM refresh cycles on Genesis and NES</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />SMS seems to use three ÂµPD4168C ICs, which the datasheet describes as &quot;XRAM&quot; ... which appears to be PSRAM, or maybe prior art for 1T-SRAM

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>TmEE</b> [ Mon Dec 19, 2016 3:08 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: DRAM refresh cycles on Genesis and NES</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />SMS and MD both use PSRAM chips for main memory. SMS has no performance impact as it is built into CPU and the refresh strobe of the memory is pulsed every M1 cycle of the CPU.<br />How it works on MD : <!-- m --><a class="postlink" href="http://gendev.spritesmind.net/forum/viewtopic.php?p=28829#p28829">http://gendev.spritesmind.net/forum/vie ... 829#p28829</a><!-- m -->

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>whicker</b> [ Wed Dec 28, 2016 8:05 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: DRAM refresh cycles on Genesis and NES</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Just to add/summarize:<br /><br />The Genesis/Megadrive has a 68000 CPU.<br />It's fairly rare on other CPUs, but the 68K series has an input pin called DTACK (active low).<br />DTACK = data acknowledge.<br /><br />If memory or a peripheral isn't ready for a read or write, it simply doesn't assert DTACK and the CPU will just wait.<br /><br />This was really great for things like slow memory or 1 Mhz max accesses to PIO chips and such, because you have the flexibility to just delay however many clocks variably and then say the data is ready, instead of assuming the data is going to be there after a certain number of clocks.<br /><br />Now this also brings complications, because when accessing an undefined memory range that won't assert DTACK, you need a watchdog timer to eventually trigger the BERR (Bus Error) pin to cause an interrupt.<br /><br />I miss the 68K. It made so much sense. (Except for bombing out on unaligned address accesses).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Wed Dec 28, 2016 9:01 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: DRAM refresh cycles on Genesis and NES</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">whicker wrote:</div><div class="quotecontent">It's fairly rare on other CPUs, but the 68K series has an input pin called DTACK (active low).<br />DTACK = data acknowledge.<br /><br />If memory or a peripheral isn't ready for a read or write, it simply doesn't assert DTACK and the CPU will just wait.</div><br />The 6502 has that as well for reads, where pulling RDY (ready) low during a read halts the CPU until it returns high. This is what the DMA controllers on the 2A03 (NES CPU) and 5A22 (S-CPU) do to stop execution.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I miss the 68K. It made so much sense. (Except for bombing out on unaligned address accesses).</div><br />One could write an exception handler that emulates unaligned access, just as one writes a handler for the &quot;Fxxx instruction&quot; that emulates some model of FPU. But then an unaligned access more likely indicates a corrupt pointer, much as a bus error does.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>l_oliveira</b> [ Sat Feb 11, 2017 10:34 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: DRAM refresh cycles on Genesis and NES</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">whicker wrote:</div><div class="quotecontent">I miss the 68K. It made so much sense. (Except for bombing out on unaligned address accesses).</div><br /><br />Even that makes sense(hardware wise). MC68000 has no A0 address line. Instead it use a pair of strobes (UDS, LDS) to access 8 bit stuff. Specific instructions for 8bit accesses cause those to operate.  8bit operations can access odd addresses without problems.<br /><br />When using normal word access it can't access odd addresses due to the bus construction (no A0) and will throw an address error exception. <br /><br />Apparently, later they found a way of allowing odd address accesses and the full 32bit processors in the family can actually do it... <br /><br />I don't know how that works.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>AWJ</b> [ Sat Feb 11, 2017 10:58 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: DRAM refresh cycles on Genesis and NES</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">l_oliveira wrote:</div><div class="quotecontent"><div class="quotetitle">whicker wrote:</div><div class="quotecontent">I miss the 68K. It made so much sense. (Except for bombing out on unaligned address accesses).</div><br /><br />Even that makes sense(hardware wise). MC68000 has no A0 address line. Instead it use a pair of strobes (UDS, LDS) to access 8 bit stuff. Specific instructions for 8bit accesses cause those to operate.  8bit operations can access odd addresses without problems.<br /><br />When using normal word access it can't access odd addresses due to the bus construction (no A0) and will throw an address error exception. <br /><br />Apparently, later they found a way of allowing odd address accesses and the full 32bit processors in the family can actually do it... <br /><br />I don't know how that works.</div><br /><br />The later 68K processors split word-straddling bus accesses into two operations, just like x86 chips do.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>HardWareMan</b> [ Thu Feb 16, 2017 5:46 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: DRAM refresh cycles on Genesis and NES</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />And true: 32 bit access must be word aligned as 16 bit access, because M68000 has only 16 bit data bus and split 32 bit access into 2 of 16 bit access. For M68000 only 8 bit access can be not aligned by word.<br /><img src="http://savepic.ru/12973077.png" alt="Image" />

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>