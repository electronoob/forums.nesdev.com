<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=6&amp;t=11393" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2014-07-25T21:34:53-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=6&amp;t=11393</id>
<entry>
<author><name><![CDATA[OneCrudeDude]]></name></author>
<updated>2014-07-25T21:34:53-07:00</updated>
<published>2014-07-25T21:34:53-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11393&amp;p=131548#p131548</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11393&amp;p=131548#p131548"/>
<title type="html"><![CDATA[Re: Using steady DPCM samples as a 'lead']]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11393&amp;p=131548#p131548"><![CDATA[
Impressive, but I think Strobe's song is ultimately very messy; it doesn't have much musical quality to it, and then tries to become unmelodious EDM music.  That said, I reckon that a DPCM heavy song would play either during the credits (when there's nothing to really push around), or for the soundtrack to be made for a game rather devoid of any action, such as a puzzle game.<br /><br />At last I truly see, the NES' artifacting is too severe to be used for anything more than short drum beats.  However, I love how low-fi and detuned Sunsoft's (and other companies) basslines sound, so I'm conflicted.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6132">OneCrudeDude</a> — Fri Jul 25, 2014 9:34 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[RushJet1]]></name></author>
<updated>2014-07-23T18:57:20-07:00</updated>
<published>2014-07-23T18:57:20-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11393&amp;p=131465#p131465</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11393&amp;p=131465#p131465"/>
<title type="html"><![CDATA[Re: Using steady DPCM samples as a 'lead']]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11393&amp;p=131465#p131465"><![CDATA[
Another good one that is significantly smaller <!-- m --><a class="postlink" href="https://www.youtube.com/watch?v=ZQtGUe55MsA">https://www.youtube.com/watch?v=ZQtGUe55MsA</a><!-- m --><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=34">RushJet1</a> — Wed Jul 23, 2014 6:57 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2014-07-23T05:49:22-07:00</updated>
<published>2014-07-23T05:49:22-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11393&amp;p=131448#p131448</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11393&amp;p=131448#p131448"/>
<title type="html"><![CDATA[Re: Using steady DPCM samples as a 'lead']]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11393&amp;p=131448#p131448"><![CDATA[
I wonder how something that could be used in a game. The comments on that NSF say it's too big for the PowerPak, whose NSF player is limited to about 200-some KiB, which is just less than one-fourth of NSF's theoretical limit of 1 MiB. So in a practical case, big DPCM samples like that might have to be streamed into RAM during playback from some sort of separate memory on the cart. I wonder how well this would work with the oft-repeated FDS-style idea to store bulk data in SPI flash and stream it into RAM at $C000-$DFFF, as <a href="http://forums.nesdev.com/viewtopic.php?f=9&amp;t=10202#p113908" class="postlink">most recently reiterated by infiniteneslives</a>. It would depend on how the SPI flash is implemented. The player has to provide a byte to the DMC every 432 cycles (or 400 on PAL NES) while moving sprites around. An SPI host that relies on the CPU to move a bit at a time, like the existing interface at $4016/$4017, would be unlikely to sustain the required 33 kbps data rate while giving much margin for game logic. It'd probably take a CPLD that uses M2 to clock the flash eight times in a row and then provides all 8 bits on the data bus. This would let the program get in after vblank, grab 69 or so bytes and stash them in RAM, and get out.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Wed Jul 23, 2014 5:49 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[RushJet1]]></name></author>
<updated>2014-07-22T22:50:51-07:00</updated>
<published>2014-07-22T22:50:51-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11393&amp;p=131447#p131447</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11393&amp;p=131447#p131447"/>
<title type="html"><![CDATA[Re: Using steady DPCM samples as a 'lead']]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11393&amp;p=131447#p131447"><![CDATA[
Another bump! Surprised nobody mentioned Strobe: <!-- m --><a class="postlink" href="http://battleofthebits.org/arena/Entry/Ziberia/3564/">http://battleofthebits.org/arena/Entry/Ziberia/3564/</a><!-- m --><br /><br />If you want crazy DPCM usage he's your man!<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=34">RushJet1</a> — Tue Jul 22, 2014 10:50 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[OneCrudeDude]]></name></author>
<updated>2014-07-16T23:58:52-07:00</updated>
<published>2014-07-16T23:58:52-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11393&amp;p=131237#p131237</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11393&amp;p=131237#p131237"/>
<title type="html"><![CDATA[Re: Using steady DPCM samples as a 'lead']]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11393&amp;p=131237#p131237"><![CDATA[
That's interesting.  Most development stuff is born out of curiosity, in this case if it's entirely possible for an unofficial Pokemon game on the NES being able to give and receive Pokemon to the GameBoy games.  What the games really do is simply delete the Pokemon from one end and copy it to the next end, so it probably would be possible to do.  If I was technically competent, I'd do so much.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6132">OneCrudeDude</a> — Wed Jul 16, 2014 11:58 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2014-07-16T18:34:09-07:00</updated>
<published>2014-07-16T18:34:09-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11393&amp;p=131229#p131229</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11393&amp;p=131229#p131229"/>
<title type="html"><![CDATA[Re: Using steady DPCM samples as a 'lead']]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11393&amp;p=131229#p131229"><![CDATA[
The wire protocol for NES and Super NES controllers is very similar to the Game Link protocol, except the NES is always the &quot;master&quot; in SPI terms. So yes, NES to Game Boy is probably possible. If I had a flash card for an 8-bit Game Boy, I'd probably already have made a music demo that uses the Game Boy as four extra sound channels.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Wed Jul 16, 2014 6:34 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[OneCrudeDude]]></name></author>
<updated>2014-07-16T18:17:29-07:00</updated>
<published>2014-07-16T18:17:29-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11393&amp;p=131228#p131228</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11393&amp;p=131228#p131228"/>
<title type="html"><![CDATA[Re: Using steady DPCM samples as a 'lead']]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11393&amp;p=131228#p131228"><![CDATA[
Apologies for a bump of an old thread, but I had a question.  I was recently playing the second generation of Pokemon games (Gold/Silver/Crystal), and I was wondering if it would be possible to recreate on the NES.  More specifically, what if Pokemon was an NES game, but the programmers still wanted to trade and battle their Pokemon?  Would it be possible to create a link system between cartridges?  What about someone making an NES version of Pokemon, would it be possible to 'trade' Pokemon with the Game Boy games?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6132">OneCrudeDude</a> — Wed Jul 16, 2014 6:17 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Memblers]]></name></author>
<updated>2014-07-12T09:20:53-07:00</updated>
<published>2014-07-12T09:20:53-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11393&amp;p=131036#p131036</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11393&amp;p=131036#p131036"/>
<title type="html"><![CDATA[Re: Using steady DPCM samples as a 'lead']]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11393&amp;p=131036#p131036"><![CDATA[
Controller port could be fairly decent (and relatively easy to build), with an MCU handling bit-banged (or possibly hardware-based) synchronous communication between a couple systems.  Using D3 or D4 as a 'ready' signal would reduce the need for polling, NES could check once per frame and read it out of the MCU's buffer if the data is ready.  I've been working on something similar, but more intended for NES to PC communication.<br /><br />MCUs with ethernet capability are really cheap too, if one really wanted an NES LAN.  <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" />  Would be cool, but it seems like the opportunities to use it would be few and far between.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=10">Memblers</a> — Sat Jul 12, 2014 9:20 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[lidnariq]]></name></author>
<updated>2014-07-12T00:50:58-07:00</updated>
<published>2014-07-12T00:50:58-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11393&amp;p=131029#p131029</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11393&amp;p=131029#p131029"/>
<title type="html"><![CDATA[Re: Using steady DPCM samples as a 'lead']]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11393&amp;p=131029#p131029"><![CDATA[
If I were to deign something arbitrarily, I'd probably make something like what the Vs. DualSystem does—basically the highest possible bandwidth for a plain 6502 design without a general purpose data transfer unit (which the NES doesn't have).<br /><br />The Vs. DualSystem provides 2 KiB of memory that the two CPUs can swap back and forth, with a simple REQ/ACK locking behavior (much like on an old parallel port printer). Anything else would be rather CPU intensive, either involving lots of polling or flurries of interrupts.<br /><br />In any case, the expansion port of the NES doesn't really provide particularly useful signals; anything that used it would have to also provide a cartridge... and at that point, you may as well put the hardware on a cartridge.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3512">lidnariq</a> — Sat Jul 12, 2014 12:50 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[OneCrudeDude]]></name></author>
<updated>2014-07-11T21:19:09-07:00</updated>
<published>2014-07-11T21:19:09-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11393&amp;p=131024#p131024</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11393&amp;p=131024#p131024"/>
<title type="html"><![CDATA[Re: Using steady DPCM samples as a 'lead']]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11393&amp;p=131024#p131024"><![CDATA[
Hypothetically speaking, how could one make an &quot;NES LAN kit&quot;, if at all possible?  Perhaps by linking the consoles together by the cartridge slot, or the expansion port, or both?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6132">OneCrudeDude</a> — Fri Jul 11, 2014 9:19 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[lidnariq]]></name></author>
<updated>2014-07-09T22:30:43-07:00</updated>
<published>2014-07-09T22:30:43-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11393&amp;p=130940#p130940</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11393&amp;p=130940#p130940"/>
<title type="html"><![CDATA[Re: Using steady DPCM samples as a 'lead']]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11393&amp;p=130940#p130940"><![CDATA[
The controller port is 3 general-purpose inputs, 1 general-purpose output, 2 pins to power things, and 1 pin that indicates when the NES is reading from the controller port.<br />It'd be pretty easy to make a &quot;null modem&quot; cable that would connect two NESes together to communicate, although it would be hard to communicate in a manner that was both high bandwidth and allowed anything else to go on at the same time.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3512">lidnariq</a> — Wed Jul 09, 2014 10:30 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[OneCrudeDude]]></name></author>
<updated>2014-07-09T19:45:40-07:00</updated>
<published>2014-07-09T19:45:40-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11393&amp;p=130929#p130929</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11393&amp;p=130929#p130929"/>
<title type="html"><![CDATA[Re: Using steady DPCM samples as a 'lead']]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11393&amp;p=130929#p130929"><![CDATA[
This particular thread is off topic to begin with, I feel bad for making it in the first place.  But I have some curiosities about the console, so yeah.<br /><br />I don't know how the controller ports could link two consoles and their information together.  Maybe they meant the expansion port?  And I wouldn't put it past Codemasters, it seemed like English programmers were insanely intuitive.  It also helps that Codemasters' games were among the best unlicensed games, good enough to be classified alongside licensed titles.  But being English games, they also suffer from various design errors resulting in odd difficulty.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6132">OneCrudeDude</a> — Wed Jul 09, 2014 7:45 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Memblers]]></name></author>
<updated>2014-07-09T14:48:31-07:00</updated>
<published>2014-07-09T14:48:31-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11393&amp;p=130913#p130913</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11393&amp;p=130913#p130913"/>
<title type="html"><![CDATA[Re: Using steady DPCM samples as a 'lead']]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11393&amp;p=130913#p130913"><![CDATA[
<div class="quotetitle">OneCrudeDude wrote:</div><div class="quotecontent"><br />The Vs Dualsystem is what I what I actually had in mind when I mentioned the dual NES audio.  However, that machine seemed to essentially be two NES hooked up via LAN, with each console displaying something different but playing the same game.  Did that only work for simple games (such as Wrecking Crew), or would it be possible to have, say, a version of Contra where each player isn't restricted by the screen?  Or would transmitting the information between both CPUs (IE, a bullet that flied past P2's screen being transferred over to P1's screen) be a lot more complex?<br /></div><br /><br />That's certainly possible if the game is designed for it, a game like Contra probably would need non-trivial modifications to allow stuff like the other player to shoot from off-screen, and new enemy spawning situations.  Those are potentially gameplay-breaking modifications, but theoretically, if there's not too much data to transfer I'm sure it could handle something like that just fine.  It would prevent the annoying deaths on the waterfall level, which would be nice.<br /><br />BTW, on a somewhat related note (and veering off-topic), it's just a rumor, but supposedly when Codemasters was developing Micro Machines, they had a multiplayer setup with 2 systems liked by the controller port.  If true, that would have been pretty cool.  I can't remember where I heard that.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=10">Memblers</a> — Wed Jul 09, 2014 2:48 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[lidnariq]]></name></author>
<updated>2014-07-09T01:01:58-07:00</updated>
<published>2014-07-09T01:01:58-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11393&amp;p=130875#p130875</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11393&amp;p=130875#p130875"/>
<title type="html"><![CDATA[Re: Using steady DPCM samples as a 'lead']]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11393&amp;p=130875#p130875"><![CDATA[
<div class="quotetitle">tepples wrote:</div><div class="quotecontent"><br />I'm not sure to what extent the two machines are synchronized in terms of relative vblank timing.<br /></div>Both PPUs and both CPUs are fed off the same master clock, and both PPUs and both CPUs have all their RESET pins tied together. And there's no short fields on the Vs. System PPUs (always exactly 89342 pixels) ... so as far as I can tell, they should stay perfectly synchronized.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3512">lidnariq</a> — Wed Jul 09, 2014 1:01 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2014-07-09T00:06:43-07:00</updated>
<published>2014-07-09T00:06:43-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11393&amp;p=130872#p130872</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11393&amp;p=130872#p130872"/>
<title type="html"><![CDATA[Re: Using steady DPCM samples as a 'lead']]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11393&amp;p=130872#p130872"><![CDATA[
There is a block of shared memory at $7000 or thereabouts that only one machine can access at once. The first CPU, as I understand it, controls which machine sees it at any given time. A game could send any sort of state updates through that memory, but I'm not sure to what extent the two machines are synchronized in terms of relative vblank timing.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Wed Jul 09, 2014 12:06 am</p><hr />
]]></content>
</entry>
</feed>