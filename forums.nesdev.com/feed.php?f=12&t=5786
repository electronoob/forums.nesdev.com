<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=12&amp;t=5786" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2011-01-14T14:03:19-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=12&amp;t=5786</id>
<entry>
<author><name><![CDATA[magno]]></name></author>
<updated>2011-01-14T14:03:19-07:00</updated>
<published>2011-01-14T14:03:19-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5786&amp;p=72736#p72736</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5786&amp;p=72736#p72736"/>
<title type="html"><![CDATA[BSNES debugger]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5786&amp;p=72736#p72736"><![CDATA[
So that means there is no debugging in the windows binaries anymore, doesn't it?<br /><br />If so, could I compile the source code with <em>-debugger</em> option in Visual C or GCC for Windows?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=875">magno</a> — Fri Jan 14, 2011 2:03 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2011-01-14T12:54:25-07:00</updated>
<published>2011-01-14T12:54:25-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5786&amp;p=72733#p72733</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5786&amp;p=72733#p72733"/>
<title type="html"><![CDATA[BSNES debugger]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5786&amp;p=72733#p72733"><![CDATA[
Unless "works on Windows" means "feel free to install Ubuntu in VirtualBox on Windows".<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Fri Jan 14, 2011 12:54 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[magno]]></name></author>
<updated>2011-01-14T02:43:29-07:00</updated>
<published>2011-01-14T02:43:29-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5786&amp;p=72727#p72727</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5786&amp;p=72727#p72727"/>
<title type="html"><![CDATA[BSNES debugger]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5786&amp;p=72727#p72727"><![CDATA[
<div class="quotetitle">byuu wrote:</div><div class="quotecontent"><br />It needs GTK+ for the hex editor widget, but it is otherwise there and working.<br /></div><br /><br />Those are great news for me! <img src="http://forums.nesdev.com/images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /> I thought debugging wasn't anymore on windows version as you said in your webpage:<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Lastly, the debugger is still <strong>Linux-only</strong>[...]<br /></div><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=875">magno</a> — Fri Jan 14, 2011 2:43 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[byuu]]></name></author>
<updated>2011-01-13T16:01:01-07:00</updated>
<published>2011-01-13T16:01:01-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5786&amp;p=72710#p72710</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5786&amp;p=72710#p72710"/>
<title type="html"><![CDATA[BSNES debugger]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5786&amp;p=72710#p72710"><![CDATA[
It needs GTK+ for the hex editor widget, but it is otherwise there and working.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=375">byuu</a> — Thu Jan 13, 2011 4:01 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[magno]]></name></author>
<updated>2011-01-11T01:14:08-07:00</updated>
<published>2011-01-11T01:14:08-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5786&amp;p=72585#p72585</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5786&amp;p=72585#p72585"/>
<title type="html"><![CDATA[BSNES debugger]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5786&amp;p=72585#p72585"><![CDATA[
Is bsnes debugger version still on progress? Or was it dropped?<br /><br />I can't see the binaries anymore on byuu website...<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=875">magno</a> — Tue Jan 11, 2011 1:14 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[mic_]]></name></author>
<updated>2011-01-03T08:25:56-07:00</updated>
<published>2011-01-03T08:25:56-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5786&amp;p=72252#p72252</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5786&amp;p=72252#p72252"/>
<title type="html"><![CDATA[BSNES debugger]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5786&amp;p=72252#p72252"><![CDATA[
I've got another idea for an improvement to the debugger: it'd be nice if bsnes could read the SYM files generated by wlalink, so that I could set breakpoints on symbols and get label names when I step/trace my code. You can generate a SYM file by adding a capital S to your link switches (IIRC).. they're just text files with address/name pairs in plain text.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=1181">mic_</a> — Mon Jan 03, 2011 8:25 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[mic_]]></name></author>
<updated>2010-05-17T06:39:58-07:00</updated>
<published>2010-05-17T06:39:58-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5786&amp;p=61532#p61532</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5786&amp;p=61532#p61532"/>
<title type="html"><![CDATA[BSNES debugger]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5786&amp;p=61532#p61532"><![CDATA[
Adding -DDEBUGGER to the flags in the makefile did the trick.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=1181">mic_</a> — Mon May 17, 2010 6:39 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[MatthewCallis]]></name></author>
<updated>2010-05-17T05:44:34-07:00</updated>
<published>2010-05-17T05:44:34-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5786&amp;p=61525#p61525</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5786&amp;p=61525#p61525"/>
<title type="html"><![CDATA[BSNES debugger]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5786&amp;p=61525#p61525"><![CDATA[
<div class="quotetitle">mic_ wrote:</div><div class="quotecontent"><br />I compiled the BSNES sources on Ubuntu today, but I can't find the debugger anywhere. Is there a flag I need to set when building BSNES in order to get the debugger included?<br /></div><br />Yeah, it's in one of the main header files, can't remember the name.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3407">MatthewCallis</a> — Mon May 17, 2010 5:44 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[mic_]]></name></author>
<updated>2010-05-17T04:42:05-07:00</updated>
<published>2010-05-17T04:42:05-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5786&amp;p=61522#p61522</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5786&amp;p=61522#p61522"/>
<title type="html"><![CDATA[BSNES debugger]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5786&amp;p=61522#p61522"><![CDATA[
I compiled the BSNES sources on Ubuntu today, but I can't find the debugger anywhere. Is there a flag I need to set when building BSNES in order to get the debugger included?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=1181">mic_</a> — Mon May 17, 2010 4:42 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[byuu]]></name></author>
<updated>2009-12-06T13:58:03-07:00</updated>
<published>2009-12-06T13:58:03-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5786&amp;p=53633#p53633</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5786&amp;p=53633#p53633"/>
<title type="html"><![CDATA[BSNES debugger]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5786&amp;p=53633#p53633"><![CDATA[
Yes, usage.bin can be directly used to:<br /><br />- assist a full-fledged disassembler (though it can't help with non-executed areas; that would have to fall back on heuristics)<br />- identify code vs execution areas<br />- find unused portions of WRAM and SRAM for use with hacks<br />etc.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=375">byuu</a> — Sun Dec 06, 2009 1:58 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[MottZilla]]></name></author>
<updated>2009-12-06T13:25:59-07:00</updated>
<published>2009-12-06T13:25:59-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5786&amp;p=53631#p53631</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5786&amp;p=53631#p53631"/>
<title type="html"><![CDATA[BSNES debugger]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5786&amp;p=53631#p53631"><![CDATA[
Would this allow what I was asking you about before with FCEUX type table generation of ROM access execute vs data for help in disasm? Just curious if that may be down the road, I know you're busy with 21fx right now.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=1726">MottZilla</a> — Sun Dec 06, 2009 1:25 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[byuu]]></name></author>
<updated>2009-12-06T05:53:38-07:00</updated>
<published>2009-12-06T05:53:38-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5786&amp;p=53607#p53607</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5786&amp;p=53607#p53607"/>
<title type="html"><![CDATA[BSNES debugger]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5786&amp;p=53607#p53607"><![CDATA[
Added read/write/execute/M/X tracking to the latest WIP, which allows disassembly in both directions, with the caveat that code has to be executed at least one time. Screenshot:<br /><!-- m --><a class="postlink" href="http://byuu.org/images/bsnes_20091206.png">http://byuu.org/images/bsnes_20091206.png</a><!-- m --><br /><br />I'm going to add this same support for the S-SMP, SuperFX and SA-1 eventually. I don't really intend to add a scrollbar as that's obviously not going to work well since we always have to start from the current offset. I may add a manual offset seek function though. For now it updates when you step the CPU.<br /><br />I'll link to a WIP that has it in the 21fx thread.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=375">byuu</a> — Sun Dec 06, 2009 5:53 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2009-12-04T12:38:43-07:00</updated>
<published>2009-12-04T12:38:43-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5786&amp;p=53489#p53489</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5786&amp;p=53489#p53489"/>
<title type="html"><![CDATA[BSNES debugger]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5786&amp;p=53489#p53489"><![CDATA[
<div class="quotetitle">koitsu wrote:</div><div class="quotecontent"><br />You'll have to show me proof that tracking M/X of P is simply not sufficient enough.<br /></div><br />Load I/O register, pha, plp, as in byuu's example. That makes MX sufficiently unpredictable. But I agree that most non-pathological code shouldn't need it; tracking rep and sep should cover the common case of reading ahead to code that hasn't executed yet. It's again the tradeoff between compatibility (handling the common cases well) and accuracy (handling unknown cases well).<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />There's no easy way to describe what I'm trying to say with text, I suppose.  Basically the section of code which was disassembled (visually on the screen) was based on what M/X of P was at the time.<br /></div><br />And by "glitch", I was just referring to the kind of full-screen change one sees in GSBug when MX changes. Even a disassembler that tracks rep and sep might "glitch" after executing a plp. But how did GSBug know where to <em>start</em> disassembling to provide a list of instructions before PC?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Fri Dec 04, 2009 12:38 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[byuu]]></name></author>
<updated>2009-12-04T00:07:32-07:00</updated>
<published>2009-12-04T00:07:32-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5786&amp;p=53466#p53466</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5786&amp;p=53466#p53466"/>
<title type="html"><![CDATA[BSNES debugger]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5786&amp;p=53466#p53466"><![CDATA[
<div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />You'll have to show me proof that tracking M/X of P is simply not sufficient enough. I'm having a very hard time believing otherwise.<br /></div><br /><br />If you're meaning TRaCER style prediction based purely on disassembly, I'm definitely not going to go there. It is much too error prone, and I say that as a ROM hacker who used to use TRaCER (and Louis Bontes' ISDA) quite a it back in the day.<br /><br />But you're right that if we track MX during execution, we can do a great job of forward disassembly. Add in "is this offset a known opcode" tracking and we can include backward disassembly.<br /><br />I'm probably just going to merge two of my goals in one with this. I'll keep track of read/write/execute/coprocessor execute/M/X in a 16MB table to represent the full 24-bit address bus.<br /><br />This will be a useful tool for analysis of existing game code, eg to find unused sections of RAM for your inserted routines. It can also be used directly by intelligent disassemblers to aid those who make things like those SMB1 complete disassembly listings.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=375">byuu</a> — Fri Dec 04, 2009 12:07 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[koitsu]]></name></author>
<updated>2009-12-03T23:20:43-07:00</updated>
<published>2009-12-03T23:20:43-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5786&amp;p=53465#p53465</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5786&amp;p=53465#p53465"/>
<title type="html"><![CDATA[BSNES debugger]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5786&amp;p=53465#p53465"><![CDATA[
<div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />This lack of a correct answer is byuu's entire point: the length of an instruction depends on the MX bits (WDC used "ENVMXDIZC" to label the nine bits of P), which in turn can depend on things that are harder to determine in advance than on an NES. The compromise solution would have only parts of the debugger, not the emulation core, glitch in such a case.<br /></div><br /><br />You'll have to show me proof that tracking M/X of P is simply not sufficient enough.  I'm having a very hard time believing otherwise.<br /><br />With regards to the last sentence: you'll have to explain what you mean by "glitch".  There's really nothing glitchy about it -- you'd have to modify the output (disassembly) every time M/X of P is changed, which is why I recommended only disassembling certain areas around PC.<br /><br />This is exactly how GSBug back in the Apple IIGS days did it, and it worked wonderfully.  None of us had any complaints.  There were always conditions where you'd scroll around to examine areas of RAM which hadn't executed yet and get inaccurate results -- but that's just the nature of the beast.  Anyone working on this processor should know that ahead of time, else send their complaints to /dev/null.<br /><br />There's no easy way to describe what I'm trying to say with text, I suppose.  Basically the section of code which was disassembled (visually on the screen) was based on what M/X of P was at the time.  If the executing code changed either bit, the disassembly shown on-screen would change.<br /><br />I'd have to set up my IIGS and get GSBug on there to show you exactly what I'm talking about.  Once you show GSBug someone who's familiar with 65816 (but hasn't ever used said debugger), they go totally berserk with joy.  It's a wonderful tool.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />That's why I recommended limiting the scope of disassembly-around-PC to the common cases of WRAM and ROM, which more easily admit a side path to fetching without side effects.<br /></div><br /><br />Yep, I'd agree with this as well.  Chances are majority of debugging will be done with regards to code executing in those areas.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3">koitsu</a> — Thu Dec 03, 2009 11:20 pm</p><hr />
]]></content>
</entry>
</feed>