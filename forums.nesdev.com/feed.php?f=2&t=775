<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=2&amp;t=775" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2006-02-22T08:54:30-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=2&amp;t=775</id>
<entry>
<author><name><![CDATA[Lloyd Gordon]]></name></author>
<updated>2006-02-22T08:54:30-07:00</updated>
<published>2006-02-22T08:54:30-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=775&amp;p=10005#p10005</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=775&amp;p=10005#p10005"/>
<title type="html"><![CDATA[Dot crawl test NESROM]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=775&amp;p=10005#p10005"><![CDATA[
After much fiddling around I finished a nesrom that tests palette combinations and speeds so you can see on your TV how they look. It allows you to pick any two palette choices $00-$3F. These two colours are combined in two sets of four checkerboards coarse to fine which move back and forth either vertically or horizontally. The speed is variable in increments of 1/256 pixels per frame from $00-$FF. You can multiply the speed by 0 (stop) to 5 to see faster movement.<br />I was surprised to see some of the effects:<br />-the finest checkerboard pattern always had weird diagonal lines<br />-colours really bleed over to the next colour on the same scan line<br />-it's futile to try really fine pixel by pixel transitions as they just smear<br />-the movement artifact wasn't too bad and the actual speed didn't matter much, although you could adjust the "beat" to minimize it<br />If you want to try it, look for Test.nes at:<br /><!-- m --><a class="postlink" href="http://www3.sympatico.ca/lloyd.gordon3/my_nes_stuff.htm">http://www3.sympatico.ca/lloyd.gordon3/my_nes_stuff.htm</a><!-- m --><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=236">Lloyd Gordon</a> — Wed Feb 22, 2006 8:54 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2006-01-05T12:18:30-07:00</updated>
<published>2006-01-05T12:18:30-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=775&amp;p=7976#p7976</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=775&amp;p=7976#p7976"/>
<title type="html"><![CDATA[Weird visual effects]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=775&amp;p=7976#p7976"><![CDATA[
Write an NES program that lets you change the speed and color of the sprite using the controller. Then you will quickly learn what combinations work.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Thu Jan 05, 2006 12:18 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Lloyd Gordon]]></name></author>
<updated>2006-01-05T11:08:27-07:00</updated>
<published>2006-01-05T11:08:27-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=775&amp;p=7973#p7973</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=775&amp;p=7973#p7973"/>
<title type="html"><![CDATA[Weird visual effects]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=775&amp;p=7973#p7973"><![CDATA[
I tried varying the speed of my sprites and the weird patterns still persist. It certainly seems like dot crawl. I changed the speed from 1 pixel per 2 frames to 4 pixels per 10 frames (I only moved the sprite 1 pixel when the frame counter was 0, 3, 5 or 8 modulo 10) and it still had horrible weird flickering, like before. I noticed that it was mainly when a sprite had certain combinations of colours and when the sprite was moving right or down (the direction of the scan?). I avoided colours that had the same upper nibble and different lower nibbles in the same sprite and it actually made it worse. Should I have used colours that have the same upper nibble instead? (I may have misunderstood an earlier post.) It looks to me like certain colours within the sprite somehow interact with other colours within the same sprite when it is moving in a certain direction. I have no idea why my code is so bad in this respect.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=236">Lloyd Gordon</a> — Thu Jan 05, 2006 11:08 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2005-12-01T18:03:05-07:00</updated>
<published>2005-12-01T18:03:05-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=775&amp;p=7132#p7132</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=775&amp;p=7132#p7132"/>
<title type="html"><![CDATA[Weird visual effects]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=775&amp;p=7132#p7132"><![CDATA[
<div class="quotetitle">Lloyd Gordon wrote:</div><div class="quotecontent"><br />I was thinking about fractional movements and I realized my code is already moving the sprites at 1 pixel distance per 2 frames or an average of 0.5 pixels per frame. This is already fractional movement. I must be missing something. Are there certain fractions that should be avoided such as 0.5, 1.5, 2.5 etc? Are other fractions, such as 1/3, 2/3, 4/3, or 1/5, 2/5, 3/5, 4/5, 6/5 etc. better?<br /></div><br />The point is to have fixed-point displacement and velocity on all objects so that they will spend a lot of their time at speeds that have no obvious fractional relationship to the color burst.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Is it the NES PPU that creates the problems or is it the NTSC TV receiver?<br /></div><br />It's the NES PPU's attempt at outputting a signal that an NTSC TV understands. In theory it would have been better to output the chroma and luma on separate pins so that they could be filtered to the precise NTSC specification, but Nintendo took shortcuts to save costs back in 1984 when the proper analog filters to perform NTSC color encoding were much more expensive than they are now.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Thu Dec 01, 2005 6:03 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Lloyd Gordon]]></name></author>
<updated>2005-12-01T12:03:55-07:00</updated>
<published>2005-12-01T12:03:55-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=775&amp;p=7123#p7123</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=775&amp;p=7123#p7123"/>
<title type="html"><![CDATA[Weird visual effects]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=775&amp;p=7123#p7123"><![CDATA[
I was thinking about fractional movements and I realized my code is already moving the sprites at 1 pixel distance per 2 frames or an average of 0.5 pixels per frame. This is already fractional movement. I must be missing something. Are there certain fractions that should be avoided such as 0.5, 1.5, 2.5 etc? Are other fractions, such as 1/3, 2/3, 4/3, or 1/5, 2/5, 3/5, 4/5, 6/5 etc. better? Is it the NES PPU that creates the problems or is it the NTSC TV receiver? Does anyone know of any games that have any similar effects? Thanks.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=236">Lloyd Gordon</a> — Thu Dec 01, 2005 12:03 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2005-11-30T22:25:22-07:00</updated>
<published>2005-11-30T22:25:22-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=775&amp;p=7113#p7113</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=775&amp;p=7113#p7113"/>
<title type="html"><![CDATA[Weird visual effects]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=775&amp;p=7113#p7113"><![CDATA[
<div class="quotetitle">Lloyd Gordon wrote:</div><div class="quotecontent"><br />How come I've never seen this on commercial games?<br /></div><br />Because you were probably a lot younger when you played them.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Wed Nov 30, 2005 10:25 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Lloyd Gordon]]></name></author>
<updated>2005-11-30T20:35:32-07:00</updated>
<published>2005-11-30T20:35:32-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=775&amp;p=7111#p7111</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=775&amp;p=7111#p7111"/>
<title type="html"><![CDATA[Weird visual effects]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=775&amp;p=7111#p7111"><![CDATA[
I think I actually (maybe) understand what you mean. I'm going to try and modify my code to use the fractional velocity. Thanks again. How come I've never seen this on commercial games? Although I think I can recall a slight but similar effect on some games. Did the commercial programmers know about these effects and avoid them? I guess I unknowingly coded my enemy sprites to maximize the distortion.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=236">Lloyd Gordon</a> — Wed Nov 30, 2005 8:35 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2005-11-29T22:55:22-07:00</updated>
<published>2005-11-29T22:55:22-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=775&amp;p=7088#p7088</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=775&amp;p=7088#p7088"/>
<title type="html"><![CDATA[Weird visual effects]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=775&amp;p=7088#p7088"><![CDATA[
There is essentially a grid-like pattern overlayed over areas that have lots of different colored pixels. This pattern is constantly moving smoothly so that it's not that visible since you see the average of the pattern. But when you move an object in sync with it, you are able to "capture" the pattern and avoid having it average out. If you are able to move the object at a slightly different rate, you'll get some of the averaging effect (since the pattern will still be moving in relation to the object). You can see the pattern if you carefully scan your eyes smoothly across a normal television picture (but not a modern computer monitor).<br /><br />If you keep some fractional precision to your sprite positions, you can easily move them at non-integral velocities, i.e. 1.3 pixels per frame rather than just 1 or 2 or 3 pixels per frame. The NES has no knowledge of fractional pixels, so you keep this internally and use the whole part when setting the actual sprite position. Since the pattern moves at an integral velocity (1 pixel per frame), you can use this to avoid falling exactly in sync.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Tue Nov 29, 2005 10:55 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Lloyd Gordon]]></name></author>
<updated>2005-11-29T21:50:35-07:00</updated>
<published>2005-11-29T21:50:35-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=775&amp;p=7083#p7083</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=775&amp;p=7083#p7083"/>
<title type="html"><![CDATA[Weird visual effects]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=775&amp;p=7083#p7083"><![CDATA[
Hi Memblers and Blargg,<br />    I sort of see (or maybe I don't) what you mean but I had no idea you had to be so careful about sprite movement and position. I thought that sprite position was changed by writing to the X and Y coordinates. Near the beginning of the NMI I write to sprite RAM with the DMA. After that I run the code that alters the various sprite positions. As I said the "player" sprite moves according to the joystick at up to one pixel in the X and Y axes per NMI. I made the "enemy" sprites move 1 pixel in the X/Y axes every second NMI so the player would be able to get away or attack them easier. Then on the next NMI the updated X,Y sprite coordinates are written again with by sprite DMA. This is all new to me and I guess I will have to rewrite all my sprite movement code. I knew I was doing it in a simplistic way but I didn't realize how strange it would look. If you have any more pointers, please let me know.<br />Thanks<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=236">Lloyd Gordon</a> — Tue Nov 29, 2005 9:50 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2005-11-29T15:30:30-07:00</updated>
<published>2005-11-29T15:30:30-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=775&amp;p=7077#p7077</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=775&amp;p=7077#p7077"/>
<title type="html"><![CDATA[Weird visual effects]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=775&amp;p=7077#p7077"><![CDATA[
You might try this, which causes a different dot crawl pattern than the usual (I think this one repeats every 3/60 second, rather than 2/60 second). It keeps PPU rendering disabled until after the even/odd frame length difference would take effect. I was able to use a delay from 2368 to 2440 (70 clock variance). Larger delays missed important events on scanline 21. Presumably you'd have code in place of the delay which did something useful during that time, but didn't vary by more than 70 clocks.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">nmi:  lda   #$00  ; disable bg+obj<br />      sta   $2001<br />      <br />      ldy   #215  ; 2368 delay<br />      ldx   #1<br />delay:<br />      dex<br />      bne   delay<br />      ldx   #1<br />      dey<br />      bne   delay<br />      <br />      lda   #$18  ; enable bg+obj<br />      sta   $2001   ; write at NMI+2379<br />      <br />wait: jmp   wait<br /></div><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Tue Nov 29, 2005 3:30 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Memblers]]></name></author>
<updated>2005-11-29T13:12:58-07:00</updated>
<published>2005-11-29T13:12:58-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=775&amp;p=7074#p7074</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=775&amp;p=7074#p7074"/>
<title type="html"><![CDATA[Weird visual effects]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=775&amp;p=7074#p7074"><![CDATA[
I've never seen anything like that either, so I'm at a loss to explain what the deal is.  I notice it a little bit in games usually (especially with scrolling backgrounds and stuff), but not as much with sprites or to the degree in the video you posted.<br /><br />How are you doing the movement now, just by pixels per frame?  If you use fixed-point stuff you could have a lot more variations in speed (and if it helps with the shimmering effect, bonus).  You'd do that by making the sprite position and velocity 16-bit numbers.  Then for displaying the actual sprite position, just use the upper 8-bits.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=10">Memblers</a> — Tue Nov 29, 2005 1:12 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Lloyd Gordon]]></name></author>
<updated>2005-11-29T11:52:44-07:00</updated>
<published>2005-11-29T11:52:44-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=775&amp;p=7073#p7073</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=775&amp;p=7073#p7073"/>
<title type="html"><![CDATA[Weird visual effects]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=775&amp;p=7073#p7073"><![CDATA[
Thanks very much, Tepples. The people on this messageboard are certainly full of expert information. How does "saturated colours" correspond to the NES palette colour choices? Would having a coloured background or a tiled background make the NTSC effects less annoying? How can I adjust my sprite movement to minimize NTSC effects? Even with lots of searching around I've never seen anything like the information about the subtle video (NTSC) colour and video effects that people here know about. Are there any good references that would help me with these effects? Thanks again.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=236">Lloyd Gordon</a> — Tue Nov 29, 2005 11:52 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2005-11-28T22:23:43-07:00</updated>
<published>2005-11-28T22:23:43-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=775&amp;p=7062#p7062</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=775&amp;p=7062#p7062"/>
<title type="html"><![CDATA[That's not a bug; it's dot crawl]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=775&amp;p=7062#p7062"><![CDATA[
<div class="quotetitle">Lloyd Gordon wrote:</div><div class="quotecontent"><br />It's still not ideal but it does show a weird rippling effect on the moving sprites almost if there were something else "behind" them.<br /></div><br />There is something else "behind" the sprites; it's the NTSC color subcarrier. If the edges of your sprites are saturated colors, then they may have shimmering artifacts when they move at certain speeds. It's just the nature of cheap NTSC encoders used during the NES era (and to a lesser extent during the Super NES era, which can be demonstrated in <em>Mario Paint</em>). Even the PlayStation isn't immune; try firing up a PS1 game and looking closely at the left side of the big "P" on the black screen to see <a href="http://en.wikipedia.org/wiki/Dot_crawl" class="postlink">dot crawl</a>.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />It looks more like a moire effect on the actual TV when it's played on the NES console.<br /></div><br />It depends on how cheap your TV's comb filter is.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />I move the sprites 1 pixel per frame for the player sprites and 1 pixel per 2 frames for the enemy sprites.<br /></div><br />Perhaps your sprites are moving at speeds that beat with the NTSC color subcarrier. You don't notice this as much in <em>Super Mario Bros.</em> because at least some objects have a proper fixed-point displacement and velocity, which causes the sprite positions not to line up on any particular pattern of color subcarrier positions.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Mon Nov 28, 2005 10:23 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Lloyd Gordon]]></name></author>
<updated>2005-11-28T17:51:18-07:00</updated>
<published>2005-11-28T17:51:18-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=775&amp;p=7058#p7058</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=775&amp;p=7058#p7058"/>
<title type="html"><![CDATA[Weird visual effects]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=775&amp;p=7058#p7058"><![CDATA[
I finally got a video clip on my website. My camcorder and digital camera couldn't really show any details and my video capture card isn't working so I finally recorded through the AV output of the NES directly into my camcorder and then recorded it on the computer using firewire. It's still not ideal but it does show a weird rippling effect on the moving sprites almost if there were something else "behind" them. It looks more like a moire effect on the actual TV when it's played on the NES console. If anybody has any ideas, please let me know. I move the sprites 1 pixel per frame for the player sprites and 1 pixel per 2 frames for the enemy sprites. I reverse the sprite DMA order on every second frame to lessen the "8 sprites per scanline blanking effect". I have no idea why it makes the weird rippling or moire effect for the moving sprites. Thanks for any help.<br /><br /><!-- m --><a class="postlink" href="http://www3.sympatico.ca/lloyd.gordon3/">http://www3.sympatico.ca/lloyd.gordon3/</a><!-- m --><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=236">Lloyd Gordon</a> — Mon Nov 28, 2005 5:51 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Lloyd Gordon]]></name></author>
<updated>2005-11-20T22:15:25-07:00</updated>
<published>2005-11-20T22:15:25-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=775&amp;p=6849#p6849</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=775&amp;p=6849#p6849"/>
<title type="html"><![CDATA[Weird visual effects]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=775&amp;p=6849#p6849"><![CDATA[
Thanks for your thoughts. I tried SMB and didn't really notice any weird effects but I probably didn't know what I was looking for. Certainly I've never seen anything like the weird Moire like pattern before. I'm going to try and get a video posted soon. Or if anybody is ambitious they could put my game into a devcart and play it. (Just kidding).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=236">Lloyd Gordon</a> — Sun Nov 20, 2005 10:15 pm</p><hr />
]]></content>
</entry>
</feed>