<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=2&amp;t=5860" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2016-05-09T12:39:35-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=2&amp;t=5860</id>
<entry>
<author><name><![CDATA[pubby]]></name></author>
<updated>2016-05-09T12:39:35-07:00</updated>
<published>2016-05-09T12:39:35-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5860&amp;p=170619#p170619</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5860&amp;p=170619#p170619"/>
<title type="html"><![CDATA[Re: Tile encoder/decoder]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5860&amp;p=170619#p170619"><![CDATA[
For curiosity's sake, I compressed some chr files using <a href="http://www.cl.cam.ac.uk/~mgk25/jbigkit/" class="postlink">jbigkit</a> to see how it stacks up to Tokumaru compression.<br /><br />Here are the compression ratios I got (uncompressed size / compressed size):<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">Tokumaru: 1.83<br />jbig85:   1.84<br />jbig:     2.04</div><br />And here are the files I tested: battlekid.chr geminim.chr gemventure.ch dpadhero.chr cmc80s.chr<br /><br />Tokumaru compression is as good as jbig85, but slightly worse than fully-featured jbig. I don't think jbig is  worth implementing on the NES though. It's much too complicated and requires too much RAM.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=7486">pubby</a> — Mon May 09, 2016 12:39 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bisqwit]]></name></author>
<updated>2016-05-03T06:01:18-07:00</updated>
<published>2016-05-03T06:01:18-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5860&amp;p=170082#p170082</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5860&amp;p=170082#p170082"/>
<title type="html"><![CDATA[Re: Tile encoder/decoder]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5860&amp;p=170082#p170082"><![CDATA[
Update: I added a CA65-compatible decompressor module and a test ROM.<br /><br />Differences to Tokumaru's decompressor: At feature parity,<br />Code size is <s>$EE bytes &#40;2 bytes smaller&#41;</s> $D9 bytes (23 bytes smaller)<br />RAM usage is 19 bytes (13 bytes smaller)<br />Speed differences not measured.<br /><br />I also added support for compressing and decompressing from/to stdin/stdout.<br />Download: <!-- m --><a class="postlink" href="http://bisqwit.iki.fi/source/tokumaru.html">http://bisqwit.iki.fi/source/tokumaru.html</a><!-- m --><br /><br />If the compression format was changed a little, the decompressor could be made even smaller without sacrificing compression ratio.<br />Namely, inverting the meaning of the first color bit in the tile data, so that there will be fewer special cases in the decompression code.<br /><br />EDIT: Yeah, I just went ahead and implemented that extension as an optional format (-e option). <s>The decompressor is now $E7 bytes for extended format, $EC bytes for non-extended format.<br />EDIT 2: $DE and $E3 bytes now respectively.</s><br /><br /><img src="http://bisqwit.iki.fi/src/tokumaru-demo.gif" alt="Image" /><br /><br />EDIT: Decided to make various settings user-adjustable.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">;  USER-ADJUSTABLE SETTINGS<br /><br />EXTENDED_FORMAT=1<br />; ^ Set to 1 if you compressed with -e.<br />;   Makes decompressor 5 bytes shorter with very minor speed impact.<br />;   If you compressed with -e3, set to 3. If with -e2, set to 2.<br />;   +2 makes decompresser 1 byte smaller, but consumes 2 more bytes of RAM.<br /><br />FASTER=0<br />; ^ Set to 1 if you want faster code.<br />;   It will cause ReadBit to be inlined, and some other assorted changes.<br />;   Makes decompressor 37 bytes longer, but about 10 cycles faster per bit.<br /><br />RAMBUFFER=1<br />; ^ Set to 1 if you can spare 7 more bytes of zero-page RAM.<br />;   Makes decompressor 6-7 bytes shorter, and 8-10 cycles faster per tile.<br />;   If FASTER=1, makes 5-6 bytes shorter, and 28-30 cycles faster per tile.<br /><br />RAMTEMP=1<br />; ^ Set to 1 if you can spare 3 more bytes of zero-page RAM.<br />;   Makes decompressor 1-2 bytes longer, but 1.5 cycles faster per bit.<br /><br />; SUMMARY -- SIZE PROFILE FOR DECOMPRESSOR:<br />;<br />;  EXTENDED_FORMAT FASTER RAMBUFFER RAMTEMP   CODE SIZE   RAM USE   STACK USE  RUNTIME<br />;                1      0         1       0   $0D4 (212)  19 bytes   5 bytes   1161959 cycles<br />;                1      0         1       1   $0D5 (213)  22 bytes   2 bytes   1144551 cycles<br />;                0      0         1       0   $0D9 (217)  19 bytes   5 bytes   1159744 cycles<br />;                1      0         0       0   $0DA (218)  12 bytes  12 bytes   1162215 cycles<br />;                0      0         1       1   $0DA (218)  22 bytes   2 bytes   1142336 cycles<br />;                1      0         0       1   $0DC (220)  15 bytes   9 bytes   1145319 cycles<br />;                0      0         0       0   $0DF (223)  12 bytes  12 bytes   1161792 cycles<br />;                0      0         0       1   $0E1 (225)  15 bytes   9 bytes   1144896 cycles<br />;                1      1         1       0   $0F9 (249)  19 bytes   5 bytes   981134 cycles<br />;                1      1         1       1   $0FA (250)  22 bytes   2 bytes   963726 cycles<br />;                1      1         0       0   $0FE (254)  12 bytes  12 bytes   968820 cycles<br />;                1      1         0       1   $100 (256)  15 bytes   9 bytes   965518 cycles<br />;                0      1         1       0   $102 (258)  19 bytes   5 bytes   970325 cycles<br />;                0      1         1       1   $103 (259)  22 bytes   2 bytes   952917 cycles<br />;                0      1         0       0   $107 (263)  12 bytes  12 bytes   962021 cycles<br />;                0      1         0       1   $109 (265)  15 bytes   9 bytes   954709 cycles<br />;<br />; END OF USER-ADJUSTABLE SETTINGS</div><br />The &quot;runtime&quot; column lists the number of cycles it took to decompress the first 4096 bytes ($1000) of the CHR-RAM data for the demo included with the program. Stack is the number of bytes it reserved from stack in addition to the function call frame; RAM and code size are automatically gathered from the linker statistics.<br /><br />EDIT: Version 1.3.0 released. Updated the stats again. The decompressor got smaller, again.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5043">Bisqwit</a> — Tue May 03, 2016 6:01 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2016-05-01T20:22:35-07:00</updated>
<published>2016-05-01T20:22:35-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5860&amp;p=169969#p169969</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5860&amp;p=169969#p169969"/>
<title type="html"><![CDATA[Re: Tile encoder/decoder]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5860&amp;p=169969#p169969"><![CDATA[
<div class="quotetitle">Drag wrote:</div><div class="quotecontent"><br />Tokumaru's method (a greedy algorithm) is what I would've come up with.<br /></div><br />A strictly greedy algorithm would select the best length for the current block regardless of what comes next. It's been a long time, but if I'm not mistaken, I kept increasing the length of the current block until the compression ratio started to drop, and then I tested how well the next block compressed for all possible lengths of the first block, from the calculated maximum down to 1, and picked the best cimbination. Or something like that! <img src="http://forums.nesdev.com/images/smilies/icon_mrgreen.gif" alt=":mrgreen:" title="Mr. Green" /><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Sun May 01, 2016 8:22 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bisqwit]]></name></author>
<updated>2016-05-01T20:06:16-07:00</updated>
<published>2016-05-01T20:06:16-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5860&amp;p=169965#p169965</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5860&amp;p=169965#p169965"/>
<title type="html"><![CDATA[Re: Tile encoder/decoder]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5860&amp;p=169965#p169965"><![CDATA[
<div class="quotetitle">Drag wrote:</div><div class="quotecontent"><br />It's funny to see that challenge cropping up again in <em>this</em> encoder. <img src="http://forums.nesdev.com/images/smilies/icon_razz.gif" alt=":P" title="Razz" /><br /></div><br />It occurs pretty often in the theme of compression. Pretty much every compressor that has two or more ways of encoding same things runs into this topic. It is also the first time that I use Dijkstra's algorithm in this context.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5043">Bisqwit</a> — Sun May 01, 2016 8:06 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Drag]]></name></author>
<updated>2016-05-01T19:56:54-07:00</updated>
<published>2016-05-01T19:56:54-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5860&amp;p=169963#p169963</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5860&amp;p=169963#p169963"/>
<title type="html"><![CDATA[Re: Tile encoder/decoder]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5860&amp;p=169963#p169963"><![CDATA[
Ah, interesting. So both methods explore all possible permutations, just with different scopes? The use of Dijkstra's algorithm is pretty clever, I overlook that a lot. Tokumaru's method (a greedy algorithm) is what I would've come up with.<br /><br />This question is because several years ago, Disch was working on a compressor for a scheme like the one in Kirby's Adventure, where there's several different compression algorithms all working together, but a challenge was figuring out how to determine which permutation of compressed chunks yielded the best ratio. It's funny to see that challenge cropping up again in <em>this</em> encoder. <img src="http://forums.nesdev.com/images/smilies/icon_razz.gif" alt=":P" title="Razz" /><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=21">Drag</a> — Sun May 01, 2016 7:56 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bisqwit]]></name></author>
<updated>2016-05-01T14:30:11-07:00</updated>
<published>2016-05-01T14:30:11-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5860&amp;p=169918#p169918</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5860&amp;p=169918#p169918"/>
<title type="html"><![CDATA[Re: Tile encoder/decoder]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5860&amp;p=169918#p169918"><![CDATA[
<div class="quotetitle">Drag wrote:</div><div class="quotecontent"><br />How do you arrive at an algorithm that achieves the optimal split point or just optimal ways to apply compression in general? Is it a greedy algorithm? Are multiple arbitrary permutations performed and then compared?<br /></div><br />The way I do it here is that I make a directed acyclic graph of all possible encode-lengths at all possible offsets, and then use Dijkstra's algorithm with a priority queue to find the shortest path through that graph. The path length is the number of bits generated for that particular arc.<br />This works very well since the splits are independent: When a block is split, no data from the previous block is carried over to the next block. It is also efficient because of the high granularity of block splits (every 16 bytes), and high likelihood of short splits being most efficient.<br />The compression level is just a cap on the encode-lengths to test. Without a cap, the performance would be O(n^2). With a cap, it becomes O(n*cap). In practice even short caps work really well.<br /><br />By contrast, this approach would not work well with e.g. <a href="https://en.wikipedia.org/wiki/DEFLATE" class="postlink">deflate</a>, because the number of plausible block lengths is several orders of magnitudes higher.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5043">Bisqwit</a> — Sun May 01, 2016 2:30 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2016-05-01T12:38:48-07:00</updated>
<published>2016-05-01T12:38:48-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5860&amp;p=169896#p169896</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5860&amp;p=169896#p169896"/>
<title type="html"><![CDATA[Re: Tile encoder/decoder]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5860&amp;p=169896#p169896"><![CDATA[
<div class="quotetitle">Bisqwit wrote:</div><div class="quotecontent"><br />Yes, zlib license. Unless there is some other point in your quote? I so dislike contextless quotations.<br /></div><br />Just summarizing for the benefit of readers before they click through. I've seen a lot of projects on GitHub, for example, that make it hard to find the license info, with no top-level <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">LICENSE</tt> or <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">COPYING</tt> file and no license notice at the bottom of <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">README</tt>.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Sun May 01, 2016 12:38 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2016-05-01T12:13:39-07:00</updated>
<published>2016-05-01T12:13:39-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5860&amp;p=169891#p169891</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5860&amp;p=169891#p169891"/>
<title type="html"><![CDATA[Re: Tile encoder/decoder]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5860&amp;p=169891#p169891"><![CDATA[
IIRC, testing all possible length combinations of 2 consecutive blocks worked really well for me.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Sun May 01, 2016 12:13 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Drag]]></name></author>
<updated>2016-05-01T11:48:41-07:00</updated>
<published>2016-05-01T11:48:41-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5860&amp;p=169889#p169889</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5860&amp;p=169889#p169889"/>
<title type="html"><![CDATA[Re: Tile encoder/decoder]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5860&amp;p=169889#p169889"><![CDATA[
How do you arrive at an algorithm that achieves the optimal split point or just optimal ways to apply compression in general? Is it a greedy algorithm? Are multiple arbitrary permutations performed and then compared?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=21">Drag</a> — Sun May 01, 2016 11:48 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bisqwit]]></name></author>
<updated>2016-05-01T09:42:49-07:00</updated>
<published>2016-05-01T09:42:49-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5860&amp;p=169874#p169874</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5860&amp;p=169874#p169874"/>
<title type="html"><![CDATA[Re: Tile encoder/decoder]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5860&amp;p=169874#p169874"><![CDATA[
The source link has been fixed. I forgot to actually click submit to my edit to the post. Sorry about that.<br />Threads give a significant speedup when running at the highest optimization levels. The process is highly parallelizable. Threads can be explicitly disabled with a commandline option.<br /><br />As for messages, I have typically a guideline where errors go into stderr and everything else goes into stdout. The exception is if the actual compressed output goes into stdout; then everything else goes into stderr. This version does not support compressing to stdout currently.<br /><br />Yes, zlib license. Unless there is some other point in your quote? I so dislike contextless quotations. Implications. If you are trying to accuse that I am misrepresenting the author of the original software, my program is written entirely from scratch based on the algorithm documentation I collected yesterday, and even then I am providing a credited link to the code that I read. It is neither a modification nor a port of other software. This is the original software, even though what it seeks to accomplish is the same as Tokumaru's program.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5043">Bisqwit</a> — Sun May 01, 2016 9:42 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2016-05-01T09:33:52-07:00</updated>
<published>2016-05-01T09:33:52-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5860&amp;p=169871#p169871</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5860&amp;p=169871#p169871"/>
<title type="html"><![CDATA[Re: Tile encoder/decoder]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5860&amp;p=169871#p169871"><![CDATA[
The C++ source link is 404 Not Found, and it is not listed on <a href="http://bisqwit.iki.fi/src/" class="postlink">the page one level up</a>. But through &quot;access the <a href="http://bisqwit.iki.fi/src/index.html" class="postlink">directory list</a> directly&quot; I found it: <a href="http://bisqwit.iki.fi/src/tokumaru." class="postlink">tokumaru.</a> with no extension.<br /><br /><blockquote style="margin-left: 1%; padding-left: 1%; border-left: 3px solid #555577;">The origin of this software must not be misrepresented</blockquote><br />zlib license<br /><br />What sort of speedup does use of threads typically give? Because in a large build, it might be wiser to default to one thread and use job-level parallelism, where <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">make -j3</tt> calls multiple <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">tokumaru</tt> instances at once (along with multiple converters for other things).<br /><br />And things like &quot;%u tiles (%u bytes) decompressed into %u bytes\n&quot; typically go to <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">std::stderr</tt>, not <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">std:stdout</tt>, so that they don't mix with the output even if quiet is disabled.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Sun May 01, 2016 9:33 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bisqwit]]></name></author>
<updated>2016-05-01T16:24:37-07:00</updated>
<published>2016-05-01T08:50:21-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5860&amp;p=169865#p169865</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5860&amp;p=169865#p169865"/>
<title type="html"><![CDATA[Re: Tile encoder/decoder]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5860&amp;p=169865#p169865"><![CDATA[
I rewrote a compressor / decompressor for this scheme from scratch.<br />Incidentally, it also compresses marginally better than Tokumaru's tool (due to better algorithm in finding block splitting points). The compression format is the same though.<br /><br /><s>It can be downloaded &#40;C++ source&#41; at: <!-- m --><a class="postlink" href="http://iki.fi/bisqwit/src/tokumaru-source.zip">http://iki.fi/bisqwit/src/tokumaru-source.zip</a><!-- m --><br />Precompiled version for x86_64 Windows: <!-- m --><a class="postlink" href="http://iki.fi/bisqwit/src/tokumaru-w64.exe">http://iki.fi/bisqwit/src/tokumaru-w64.exe</a><!-- m --><br />Precompiled version for i386 Windows: <!-- m --><a class="postlink" href="http://iki.fi/bisqwit/src/tokumaru-w32.exe">http://iki.fi/bisqwit/src/tokumaru-w32.exe</a><!-- m --></s><br /><br />It can be downloaded at: <!-- m --><a class="postlink" href="http://bisqwit.iki.fi/source/tokumaru.html">http://bisqwit.iki.fi/source/tokumaru.html</a><!-- m --><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5043">Bisqwit</a> — Sun May 01, 2016 8:50 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Ti_]]></name></author>
<updated>2014-09-05T07:12:13-07:00</updated>
<published>2014-09-05T07:12:13-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5860&amp;p=133542#p133542</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5860&amp;p=133542#p133542"/>
<title type="html"><![CDATA[Re: Tile encoder/decoder]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5860&amp;p=133542#p133542"><![CDATA[
<div class="quotetitle">tepples wrote:</div><div class="quotecontent"><br />And the same thing in tab-separated values for people who happen not to have Microsoft Office installed:<br /></div><br />I've used spread32 , it's 1Mb size.  <img src="http://forums.nesdev.com/images/smilies/Mfr_icon_homebrew.png" alt=":beer:" title="Beer" /><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6103">Ti_</a> — Fri Sep 05, 2014 7:12 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2014-09-05T07:06:22-07:00</updated>
<published>2014-09-05T07:06:22-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5860&amp;p=133541#p133541</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5860&amp;p=133541#p133541"/>
<title type="html"><![CDATA[Re: Tile encoder/decoder]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5860&amp;p=133541#p133541"><![CDATA[
And the same thing in tab-separated values for people who happen not to have Microsoft Office installed:<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Fri Sep 05, 2014 7:06 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Ti_]]></name></author>
<updated>2014-09-05T06:28:09-07:00</updated>
<published>2014-09-05T06:28:09-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5860&amp;p=133538#p133538</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5860&amp;p=133538#p133538"/>
<title type="html"><![CDATA[Re: Tile encoder/decoder]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5860&amp;p=133538#p133538"><![CDATA[
My test of tokumaru compression on tiles archives from battletoads:<br />table for unpacked, original packed, and tokumaru packed.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6103">Ti_</a> — Fri Sep 05, 2014 6:28 am</p><hr />
]]></content>
</entry>
</feed>