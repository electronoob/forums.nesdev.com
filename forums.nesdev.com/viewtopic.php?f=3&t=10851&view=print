<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - CPU Emulator Design</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">CPU Emulator Design</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=3&amp;t=10851">http://forums.nesdev.com/viewtopic.php?f=3&amp;t=10851</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>codeblox</b> [ Sat Jan 04, 2014 4:50 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>CPU Emulator Design</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Which design do you guys find to be better of the following two when fetching the instruction:<br /><br />1) A jump table with all of the opcodes (function pointers in the right places in the table) that are referenced.<br /><br />2) A large switch loop with a case for each opcode.<br /><br />At present, I have mine doing things with a jump table but am curious of which way is better. I have an individual function for each opcode. Way I see it is I only had to write the code just once.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>koitsu</b> [ Sat Jan 04, 2014 5:54 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: CPU Emulator Design</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Most compilers will turn a &quot;gigantic big-ass switch/case statement&quot; into a jump table (while, if I remember correctly, a small number of switch/case statements results in a series of mov/cmp statements).  It's your responsibility to determine which happens by looking at the generated assembly code from the compiler, and/or by doing profiling.<br /><br />If you don't know whether or not to trust the compiler, then your own jump/function table is perfectly fine.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Sat Jan 04, 2014 6:18 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: CPU Emulator Design</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Which design do you guys find to be better of the following two when fetching the instruction:</div><br />Whichever meets your design goals. A good starting place is whichever is most clear/maintainable. Surely one is easier to write than the other. Use that.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Zepper</b> [ Sat Jan 04, 2014 6:49 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: CPU Emulator Design</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I use two jump tables. The first one decodes the addressing mode and the argument (immediate byte, indirect etc), the next one do the opcode operations. With this system, most of opcodes can be condensed in just one.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>miker00lz</b> [ Sun Jan 05, 2014 4:17 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: CPU Emulator Design</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Zepper wrote:</div><div class="quotecontent">I use two jump tables. The first one decodes the addressing mode and the argument (immediate byte, indirect etc), the next one do the opcode operations. With this system, most of opcodes can be condensed in just one.</div><br /><br />This is how I do it too. It makes for extremely clean code that's easy to manage and others to understand.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>WedNESday</b> [ Sun Jan 05, 2014 4:43 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: CPU Emulator Design</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">miker00lz wrote:</div><div class="quotecontent"><div class="quotetitle">Zepper wrote:</div><div class="quotecontent">I use two jump tables. The first one decodes the addressing mode and the argument (immediate byte, indirect etc), the next one do the opcode operations. With this system, most of opcodes can be condensed in just one.</div><br /><br />This is how I do it too. It makes for extremely clean code that's easy to manage and others to understand.</div><br /><br />I thought I was the only one!!! Its so easy to manage and the readability is out of this world.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>