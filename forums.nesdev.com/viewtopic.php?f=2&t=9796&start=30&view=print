<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Randomness before the first button press</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Randomness before the first button press</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=9796">http://forums.nesdev.com/viewtopic.php?f=2&amp;t=9796</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>3</strong> of <strong>4</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>zzo38</b> [ Thu Feb 14, 2013 6:15 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Randomness before the first button press</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Many emulators will not randomize the RAM, and the microphone is not always available, but I might call a random number generator several times per frame until a button pushed, but also using the initial contents of RAM and microphone, to do random numbers generation; it works very well even in emulator but should work on real hardware too, a bit better, and perhaps even a bit more better on the RF Famicom. (This is what I have used, with ARCFOUR as the random number generator.)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>nitro2k01</b> [ Sat Mar 09, 2013 12:28 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Randomness before the first button press</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">zzo38 wrote:</div><div class="quotecontent">Many emulators will not randomize the RAM,</div>In 2013? You might be right, but I thought (and hoped) that modern emulators had gotten past such trivial, and easily fixable things. I wouldn't use an emulator that doesn't randomize RAM, because it's very likely to emulate most other things inaccurately too.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Sat Mar 09, 2013 12:53 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Randomness before the first button press</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">nitro2k01 wrote:</div><div class="quotecontent"><div class="quotetitle">zzo38 wrote:</div><div class="quotecontent">Many emulators will not randomize the RAM,</div>In 2013? You might be right, but I thought (and hoped) that modern emulators had gotten past such trivial, and easily fixable things. I wouldn't use an emulator that doesn't randomize RAM, because it's very likely to emulate most other things inaccurately too.</div><br />Randomizing and initializing are two different things though. Even the real system isn't random. When it comes to emulators, I know FCEUX initializes RAM to a pattern of $00 and $FF, Nestopia initializes to some other pattern (including at least $FF, possibly based on <a href="http://wiki.nesdev.com/w/index.php/CPU_ALL#Power_up_state" class="postlink">these results</a>) and Nintendulator initializes to 0.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sat Mar 09, 2013 4:54 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Randomness before the first button press</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />A lot of emulator authors are trying to serve the TAS crowd, who want a defined state of the machine at power-on so that the movie will sync.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Sat Mar 09, 2013 8:58 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Randomness before the first button press</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">nitro2k01 wrote:</div><div class="quotecontent"><div class="quotetitle">zzo38 wrote:</div><div class="quotecontent">Many emulators will not randomize the RAM,</div>In 2013? You might be right, but I thought (and hoped) that modern emulators had gotten past such trivial, and easily fixable things. I wouldn't use an emulator that doesn't randomize RAM, because it's very likely to emulate most other things inaccurately too.</div><br />Care to share an algorithm that accurately emulates the power-up state of the RAM in a NES of your choosing? I've got to be able to write my own tests that your algorithm is able to fool into thinking it's on a NES.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Sat Mar 09, 2013 3:38 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Randomness before the first button press</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">nitro2k01 wrote:</div><div class="quotecontent">I wouldn't use an emulator that doesn't randomize RAM, because it's very likely to emulate most other things inaccurately too.</div><br /><br />There's no advantage to randomizing RAM for the vast majority of users (i.e. anybody who isn't using it to develop NES software).<br /><br />For developers, it's <em>extremely</em> trivial to initialize the NES RAM on startup. In the rare case where this is not appropriate for your software, randomizing the RAM on startup is still not a very effective tool for finding problems. A much better thing to do is to use a R/W access log to check what you have and have not initialized, and check for reads that occur before any writes to a location. So... in my opinion even for the developer the use of a randomized RAM feature is kind of pitiful.<br /><br />Really all it does is randomize the behaviour of uninitialized variable bugs. I don't think that's particularly helpful, especially if you have a bug that's caused by a very specific byte value in RAM. Good luck reproducing that one.<br /><br />How could this possibly be a make-or-break feature for your choice of emulator?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>zzo38</b> [ Sat Mar 09, 2013 7:29 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Randomness before the first button press</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">A lot of emulator authors are trying to serve the TAS crowd, who want a defined state of the machine at power-on so that the movie will sync.</div>Perhaps the playback file should have optional RAM initialization block? I don't know if that can sometimes be considered as cheating?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sat Mar 09, 2013 7:50 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Randomness before the first button press</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Call a &quot;RAM initialization block&quot; what it is: a save state. Yes, that is considered cheating in a TAS, as it isn't something the player has control over from the exterior of the machine.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Sat Mar 09, 2013 8:39 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Randomness before the first button press</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />A RAM initialization block (and starting the NES up with known timing synchronizations where they can vary) is a necessary evil for almost all TAS plays to work, otherwise games can respond unpredictably to the same sequence of presses. One can look at this in a charitable way: that TAS was possible when the NES powered up that particular way. Perhaps to be more realistic they would choose a starting state that a NES was actually observed to start up into, rather than RAM cleared to zero or whatever they use.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>zzo38</b> [ Sun Mar 10, 2013 3:00 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Randomness before the first button press</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">Call a &quot;RAM initialization block&quot; what it is: a save state.</div>An entire save state, though, also contains the CPU flags and registers (such as the program counter), while TAS always will start from reset, instead. So it is like a partial save state, I guess.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Sik</b> [ Sun Mar 10, 2013 5:32 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Randomness before the first button press</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />But not all games initialize variables on reset (i.e. only power on), and many of those do the check by looking at some value in RAM, you could easily force a predefined status with those variables to give you an unfair advantage (e.g. to enable cheats and such).<br /><br />The whole point of a TAS is that it can be recreated on stock real hardware.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Sun Mar 10, 2013 9:10 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Randomness before the first button press</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />TAS is about something that could be done in real-time if one were superhuman. We could put the game in, power up a NES, then play it in an unbelievable way, all through the controller.<br /><br />Since we aren't superhuman, we use tools to give us those powers as far as the NES and game are concerned. Our tools essentially allow time travel. We can stop time and think about the next buttons to press/release. We can also let time go forward, see what would happen, then go back and use that information in choosing what to press. We can also of course go back and redo something that we realize was an error.<br /><br />So, to make a TAS, we put the game in, power up the NES, freeze time, make a note of the entire state of the NES, then construct our controller states while we run the NES forward and backward. When we're finally done, we rewind time back to the initial power-up state and play our TAS movie in real-time while everyone enjoys it. If someone wants to see it again, they can go back in time to this NES in its same initial state and replay the TAS.<br /><br />Since this requires an actual time machine, we can approximate stopping time by stopping the NES clock or something similar, and approximate going back in time by restoring the same initial state to the NES before replaying the TAS. Rather than leave the NES on while we make the TAS, we might turn it off and then restore the state when we want to play it back for the first time. These, like the TAS tools, we are overcoming our own limitations when restoring the initial state before playback, not altering the essential TAS process.<br /><br />Thus, I don't see the initial NES state issue as being a violation of TAS at all. It's still turning on a NES and feeding it just a series of button presses, created with the assistance of tools, that result in an unbelievable play.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Sik</b> [ Sun Mar 10, 2013 7:32 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Randomness before the first button press</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I meant that it should be <em>theoretically</em> possible to do it on stock real hardware as-is =P Of course in practice you'll need some sort of superhuman for that, though I believe somebody was making a TAS player with an Arduino that'd just press buttons on the controller.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>zzo38</b> [ Fri Mar 15, 2013 12:12 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Randomness before the first button press</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Sik wrote:</div><div class="quotecontent">I meant that it should be <em>theoretically</em> possible to do it on stock real hardware as-is =P Of course in practice you'll need some sort of superhuman for that, though I believe somebody was making a TAS player with an Arduino that'd just press buttons on the controller.</div>Since it matter the initial RAM, then to do that, would require first you put one cartridge which initialize the RAM, and then jumps to RAM and then you remove the ROM cartridge and insert a different one, and then push RESET. Doing this requires that the RAM contains a machine code for a loop to please wait forever, so it cannot be all zero.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Fri Mar 15, 2013 12:25 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Randomness before the first button press</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />What about holding Reset while swapping cartridges? Reset is level sensitive; otherwise, battery-backed  MMC1 games couldn't have used it for RAM protection during power off.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>3</strong> of <strong>4</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>