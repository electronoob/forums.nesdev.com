<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=3&amp;t=1892" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2006-10-26T18:43:24-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=3&amp;t=1892</id>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2006-10-26T18:43:24-07:00</updated>
<published>2006-10-26T18:43:24-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1892&amp;p=18852#p18852</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1892&amp;p=18852#p18852"/>
<title type="html"><![CDATA[Some help with VBL..]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1892&amp;p=18852#p18852"><![CDATA[
Yes, reads from half-computed addresses still happen.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Thu Oct 26, 2006 6:43 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[raidtab]]></name></author>
<updated>2006-10-26T16:44:11-07:00</updated>
<published>2006-10-26T16:44:11-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1892&amp;p=18849#p18849</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1892&amp;p=18849#p18849"/>
<title type="html"><![CDATA[Some help with VBL..]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1892&amp;p=18849#p18849"><![CDATA[
I've got the same problem as the OP, and i've been trying to implement the "mini-cycles" idea into my processor code. I've had a look at the 6502_cpu.txt document but i'm a little confused with parts of it.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Zero page indexed addressing<br /><br />     Read instructions (LDA, LDX, LDY, EOR, AND, ORA, ADC, SBC, CMP, BIT,<br />                        LAX, NOP)<br /><br />        #   address  R/W description<br />       --- --------- --- ------------------------------------------<br />        1     PC      R  fetch opcode, increment PC<br />        2     PC      R  fetch address, increment PC<br />        3   address   R  read from address, add index register to it<br />        4  address+I* R  read from effective address<br /><br />       Notes: I denotes either index register (X or Y).<br /><br />              * The high byte of the effective address is always zero,<br />                i.e. page boundary crossings are not handled.<br /></div><br /><br />Am i right in understanding that the CPU makes 2 reads in the one instruction, one to the address argument and another to the address argument + register? e.g.<br /><br />LDA $01, X    (where X = 10)<br /><br />will make a read to 01 (and presumably throw away the result), and then on the next cycle will read from 11?<br /><br />Also:<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Write instructions (STA, SHA)<br /><br />        #    address   R/W description<br />       --- ----------- --- ------------------------------------------<br />        1      PC       R  fetch opcode, increment PC<br />        2      PC       R  fetch pointer address, increment PC<br />        3    pointer    R  fetch effective address low<br />        4   pointer+1   R  fetch effective address high,<br />                           add Y to low byte of effective address<br />        5   address+Y*  R  read from effective address,<br />                           fix high byte of effective address<br />        6   address+Y   W  write to effective address<br /><br />       Notes: The effective address is always fetched from zero page,<br />              i.e. the zero page boundary crossing is not handled.<br /><br />              * The high byte of the effective address may be invalid<br />                at this time, i.e. it may be smaller by $100.<br /></div><br /><br />So if the high byte of the effective address is invalid on cycle 5, should the read still happen regardless?<br /><br />Thanks<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=1264">raidtab</a> — Thu Oct 26, 2006 4:44 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Muchaserres]]></name></author>
<updated>2006-09-25T07:04:35-07:00</updated>
<published>2006-09-25T07:04:35-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1892&amp;p=17976#p17976</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1892&amp;p=17976#p17976"/>
<title type="html"><![CDATA[Some help with VBL..]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1892&amp;p=17976#p17976"><![CDATA[
That's what I was looking for.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=41">Muchaserres</a> — Mon Sep 25, 2006 7:04 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2006-09-25T05:06:00-07:00</updated>
<published>2006-09-25T05:06:00-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1892&amp;p=17972#p17972</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1892&amp;p=17972#p17972"/>
<title type="html"><![CDATA[Some help with VBL..]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1892&amp;p=17972#p17972"><![CDATA[
I don't follow your question. What do you mean by disabling the NMI? $2002 bit 7 is the only control you have. The CPU registers an NMI request when the /NMI line transitions from high to low (edge sensitive). Once this occurs, the NMI will occur. If you write $00 then $80 to $2000 during blanking, you'll get another NMI since this will cause the /NMI line to go high then low again.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Mon Sep 25, 2006 5:06 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Muchaserres]]></name></author>
<updated>2006-09-24T14:39:19-07:00</updated>
<published>2006-09-24T14:39:19-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1892&amp;p=17964#p17964</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1892&amp;p=17964#p17964"/>
<title type="html"><![CDATA[Some help with VBL..]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1892&amp;p=17964#p17964"><![CDATA[
Today I felt inspired, so I finally came to a clean implementation for those tests. Now my emu's passing all PPU/CPU tests! There's only one issue I still need to investigate: the reason why I need a 25 instead of 30.<br /><br />Just one question, to close the topic: when enabling NMI's (through a write to 0x2000) inside VBL, is it necessary for the NMI flag to be disabled? I mean, what would happen if NMI's were enabled (although the flag already being set) during VBL?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=41">Muchaserres</a> — Sun Sep 24, 2006 2:39 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Muchaserres]]></name></author>
<updated>2006-09-23T06:39:05-07:00</updated>
<published>2006-09-23T06:39:05-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1892&amp;p=17936#p17936</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1892&amp;p=17936#p17936"/>
<title type="html"><![CDATA[Some help with VBL..]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1892&amp;p=17936#p17936"><![CDATA[
Meh.. I cannot come with a clean implementation for tests #6 and #7. I'm putting my emu apart. I'm completely tired, as it's been about two weeks of absolutely 0 progress.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=41">Muchaserres</a> — Sat Sep 23, 2006 6:39 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Muchaserres]]></name></author>
<updated>2006-09-22T06:34:39-07:00</updated>
<published>2006-09-22T06:34:39-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1892&amp;p=17892#p17892</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1892&amp;p=17892#p17892"/>
<title type="html"><![CDATA[Some help with VBL..]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1892&amp;p=17892#p17892"><![CDATA[
Uhm.. I've been thinking about that, but everything seems to be OK. Here's the exact code I use in my CPU core,<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">while&#40; Nes-&gt;CPUCycles &lt; Nes-&gt;FRMCycles &#41;<br />&#123;<br />   if&#40; Nes-&gt;CPUCycles &gt;= &#40; Nes-&gt;NextNMI + 30 &#41; &#41; // 2 * 15 CPU master cycles, 6 * 5 PPU master cycles<br />   &#123;<br />      Nes-&gt;NextNMI = 0x7FFFFFFF;<br />      if&#40; Nes-&gt;Ppu-&gt;Regs&#91; 0 &#93; &amp; 0x80 &#41; &#123; _NMI&#40;&#41;; &#125;<br />      if&#40; Nes-&gt;CPUCycles &gt;= Nes-&gt;FRMCycles &#41; break;<br />   &#125;<br />   opcode = READMEM&#40; PC++, 0 &#41;;<br />   switch&#40; opcode &#41;<br />   &#123;<br />      case 0x00: &#123; BRK&#40;&#41;; break; &#125;<br />      // &#40;...&#41;<br />   &#125;<br />   ADD_CYCLES&#40; cycleTable&#91; opcode &#93; &#41;;<br />&#125;</div><br /><br />while the time for the NMI is set like this,<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NextNMI = &#40; 1 * 341 * 5 &#41;; // Rest scanline first, then 20 VBL scanlines</div><br /><br />As I said in my previous post, using a 25 instead of the actual 30 makes everything work fine. The same happens setting "NextNMI" to 340 PPU cycles instead of the actual 341. When is the exact time at which /NMI is triggered? I mean, I actually do that at the end of PPU cycle 341 in the rest scanline. I've debugged the process step by step and everything looks right to me. If there's no obvious error in the code above, my next try will be an even deeper CPU cycle-per-cycle revision, but I doubt I'll find anything as my emu actually passes your last CPU timing test.<br /><br />On your debug offer, thank you very much! Just let me try a few more things first. <img src="http://forums.nesdev.com/images/smilies/icon_wink.gif" alt=";)" title="Wink" /><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=41">Muchaserres</a> — Fri Sep 22, 2006 6:34 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2006-09-21T01:07:20-07:00</updated>
<published>2006-09-21T01:07:20-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1892&amp;p=17834#p17834</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1892&amp;p=17834#p17834"/>
<title type="html"><![CDATA[Some help with VBL..]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1892&amp;p=17834#p17834"><![CDATA[
Sounds like it may be an off-by-one error, perhaps due to a &lt;/&gt; needing to be a &lt;=/&gt;=, or vice-versa. If everything passes when you add 5 PPU cycles, then your emulator may be working accurately and your other code simply giving this delay a different meaning (i.e. the number 5 has the meaning of "6 PPU clocks between NMI assertion and NMI occurring"). I kind of like tracking down things like this, so you could send me the source and I could take a look.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Thu Sep 21, 2006 1:07 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Muchaserres]]></name></author>
<updated>2006-09-20T16:04:33-07:00</updated>
<published>2006-09-20T16:04:33-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1892&amp;p=17821#p17821</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1892&amp;p=17821#p17821"/>
<title type="html"><![CDATA[Some help with VBL..]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1892&amp;p=17821#p17821"><![CDATA[
OK, let's see. In terms of PPU cycles, the earliest a NMI can occur is the time a NMI is asserted plus 6 PPU cycles (2 CPU cycles). What I'm saying is that the only way my emu passes the test is by adding 5 PPU cycles (1.67 CPU cycles).<br /><br />I'm doing what you say, using a catch up model, on my CPU core run() function, just before the execution of every opcode.<br /><br />By comparing both NMI logs I can see that the first difference occurs the second frame, and then every 11 frames or so. What bugs me the most is that I pass every other PPU test, and all versions of your CPU timing test, so I don't really know how to tackle the problem.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=41">Muchaserres</a> — Wed Sep 20, 2006 4:04 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2006-09-17T18:35:39-07:00</updated>
<published>2006-09-17T18:35:39-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1892&amp;p=17653#p17653</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1892&amp;p=17653#p17653"/>
<title type="html"><![CDATA[Some help with VBL..]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1892&amp;p=17653#p17653"><![CDATA[
At beginning of execution of an instruction in emulator:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">if &#40; cpu_time &gt;= nmi_asserted_time + 2 &#41;<br />    clear nmi<br />    begin interrupt vectoring<br />else<br />    execute current instruction</div><br />Or, in the catch up model,<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">earliest_interrupt_time = nmi_asserted_time + 2</div><br /><br />I'm not following your descriptions in your posts because I don't know what you're talking about. I don't know how your emulator works or where exactly the code examples you're posting are being executed.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Sun Sep 17, 2006 6:35 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Muchaserres]]></name></author>
<updated>2006-09-17T15:14:32-07:00</updated>
<published>2006-09-17T15:14:32-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1892&amp;p=17631#p17631</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1892&amp;p=17631#p17631"/>
<title type="html"><![CDATA[Some help with VBL..]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1892&amp;p=17631#p17631"><![CDATA[
After reading "Which clock is IRQ/NMI checked on?" at "NES Hardware / CopyNES", I think I finally understand how this stuff works. Look..<br /><br /><div class="quotetitle">blargg wrote:</div><div class="quotecontent"><br />Apparently /NMI and /IRQ are checked approximately two cycles before the next opcode fetch, and if they are set, that next opcode fetch will be the first cycle of an interrupt vectoring sequence.<br /></div><br /><br />OK, so if NMITime holds the time at which /NMI is set and CPUCycles the number of cycles the CPU has executed so far, then we do something like this,<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">if&#40; CPUCycles &gt;= NMITitme &#41;<br />   if&#40; &#40; CPUCycles - NMITitme &#41; &lt; TwoCPUCycles &#41; SlowNMI&#40;&#41;; else FastNMI&#40;&#41;;</div><br /><br />But then this comes,<br /><br /><div class="quotetitle">blargg wrote:</div><div class="quotecontent"><br />Since the memory read latches data near the end of a cycle, my conclusion is that /NMI and /IRQ are checked near the middle of second from the last cycle of an instruction. For LDA absolute, this means the third cycle (1: opcode fetch, 2: low byte of address, 3: high byte of address, 4: read, 5: set flags). For NOP, this means the first cycle (1: opcode fetch, 2: dummy fetch, 3: nothing).<br /></div><br /><br />So LDA absolute takes 4 "visible" cycles, while NOP takes 2 of those. This time we do something like this,<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">if&#40; CPUCycles &gt;= NMITitme &#41;<br />   if&#40; &#40; CPUCycles - NMITitme &#41; &lt; OneCPUCycles &#41; SlowNMI&#40;&#41;; else FastNMI&#40;&#41;;</div><br /><br />Now, here it comes the reason why I think my code passes the test. Taking NOP as an example, the check happens in the middle of the first cycle (opcode fetch). In my emu, 1 CPU cycle equals 15 master cycles, while 1 PPU cycle equals 5 of them. In the code above, I use 20 master cycles as the limit, so 20/15=1.33 ~ 1.17 CPU cycles. As it is "impossible" to get the exact time I must use "&lt;=" instead of "&lt;". And that's it!<br /><br />Is this reasoning correct?<br /><br />Thx.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=41">Muchaserres</a> — Sun Sep 17, 2006 3:14 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Muchaserres]]></name></author>
<updated>2006-09-16T14:52:52-07:00</updated>
<published>2006-09-16T14:52:52-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1892&amp;p=17567#p17567</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1892&amp;p=17567#p17567"/>
<title type="html"><![CDATA[Some help with VBL..]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1892&amp;p=17567#p17567"><![CDATA[
Uhm.. it works fine if I set the margin to 20 (so, 4 PPU cycles). It would somehow make sense it the latency were 1 CPU cycle (setting the margin to 15). The remaining PPU cycle could be some bug in my even/odd frame scheme. Anyone familiar with this issue?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=41">Muchaserres</a> — Sat Sep 16, 2006 2:52 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Muchaserres]]></name></author>
<updated>2006-09-13T15:13:29-07:00</updated>
<published>2006-09-13T15:13:29-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1892&amp;p=17370#p17370</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1892&amp;p=17370#p17370"/>
<title type="html"><![CDATA[Some help with VBL..]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1892&amp;p=17370#p17370"><![CDATA[
<div class="quotetitle">blargg wrote:</div><div class="quotecontent"><br />So if VBL is set on the next to last clock of an instruction<br /></div><br /><br />I don't get this at all.. I imagine you mean VBL being set on the last CPU clock of an instruction or earlier makes the NMI to occur at the end of that instruction, while VBL being set later makes it to occur at the end of the next instruction.<br /><br />Just in case, could you describe "7.nmi_timing"'s operation, please? Thx.<br /><br />&lt;EDIT&gt;<br /><br />I'm confused. So..<br /><br />1.- If VBL occurs before the last two CPU cycles of an instruction NMI occurs immediately after that instruction. If VBL occurs later, there's a one cycle delay. This option gives me "NMI occurred 1 PPU clock too late" (error #7). Here's how I implement that..<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">if&#40; Nes-&gt;CPUCycles &gt;= Nes-&gt;NMITime &#41;<br />&#123;<br />   if&#40; Nes-&gt;Ppu-&gt;Regs&#91; 0 &#93; &amp; 0x80 &#41;<br />   &#123;<br />      NMI&#40; 2 &#41;; // NMI now!<br />      if&#40; &#40; Nes-&gt;CPUCycles - Nes-&gt;NMITime &#41; &lt;= 30 &#41; NMI&#40; 1 &#41;; // Wait for 1 instruction &#40;30 comes from 2 cycles * 15 base&#41;.<br />   &#125;<br />   Nes-&gt;NMITime = 0x7FFFFFFF;<br />&#125;</div><br /><br />2.- If we reduce the margin to one CPU cycle, I get "NMI occurred 1 PPU clock too early" (error #4). We would only change the 30 by a 15 (1 CPU cycle).<br /><br />3.- But, according to what dvdmth said in another post, "fast NMI" occurs always except when VBL occurs during the last cycle of an instruction. So the condition would look like this, giving me "NMI occurred 3 or more PPU clocks too early" (error #2),<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">if&#40; &#40; Nes-&gt;CPUCycles - Nes-&gt;NMITime &#41; == 15 &#41; NMI&#40; 1 &#41;;</div><br /><br />Sorry if I'm being a pain, but I'd like to get this clear.<br /><br />&lt;/EDIT&gt;<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=41">Muchaserres</a> — Wed Sep 13, 2006 3:13 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2006-09-12T19:34:25-07:00</updated>
<published>2006-09-12T19:34:25-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1892&amp;p=17299#p17299</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1892&amp;p=17299#p17299"/>
<title type="html"><![CDATA[Some help with VBL..]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1892&amp;p=17299#p17299"><![CDATA[
<div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />In "6.nmi_disable" I get error #3. The problem here is that I really dunno what this rom is testing at all.<br /></div><br />My fault. It's testing what happens when NMI is disabled (via $2000) within a few PPU clocks of when it would normally occur. In light of recent testing, the error descriptions are off by one PPU clock, but the tests are still valid (since they pass on a NES). At some point I'll be improving the documentation of this kind of behavior.<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />In "7.nmi_timing" I get error #7 ("NMI occurred 1 PPU clock too late"), but well.. I suppose I'd better work on test rom #6 before dealing with this one.<br /></div><br />In this case, failing 6.nmi_disable isn't a problem.<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Anyway, does anybody know the exact time delay (in cycles) between NMI triggering and NMI execution? I mean, how do you determine the exact time for "nextNMI"?<br /></div><br />Based on recent testing, the earliest the NMI can occur is two CPU clocks after the VBL flag is set. So if VBL is set on the next to last clock of an instruction, the NMI will occur after the instruction finishes. If it's set earlier than that clock, the NMI will still occur after that instruction finishes. If it's set later than that clock, it will occur after the next instruction finishes.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Tue Sep 12, 2006 7:34 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Muchaserres]]></name></author>
<updated>2006-09-12T06:34:41-07:00</updated>
<published>2006-09-12T06:34:41-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1892&amp;p=17274#p17274</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1892&amp;p=17274#p17274"/>
<title type="html"><![CDATA[Some help with VBL..]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1892&amp;p=17274#p17274"><![CDATA[
OK! So, I finally got it working properly. Now my emu passes all errors from test roms #1 to #5, with no hacks, nor any other strange mechanisms. At last, I get precise timing stamps on my logs. <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" /> First of all, I'd like to thank you all for being so patient with my posts. Thanks dudes!<br /><br />Now, for the remaining tests. In "6.nmi_disable" I get error #3. The problem here is that I really dunno what this rom is testing at all. I mean, I'm doing exactly what the wiki says about "VBL Flag Timing". What does "NMI should occur when disabled 3 PPU clocks after VBL" exactly mean? Is the wiki right on this?<br /><br />In "7.nmi_timing" I get error #7 ("NMI occurred 1 PPU clock too late"), but well.. I suppose I'd better work on test rom #6 before dealing with this one. Anyway, does anybody know the exact time delay (in cycles) between NMI triggering and NMI execution? I mean, how do you determine the exact time for "nextNMI"?<br /><br />And last, does anybody know the exact behaviour of "s0.nes" on the real thing? Maybe a photo or something.. I'm just curious.<br /><br />Thanks!<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=41">Muchaserres</a> — Tue Sep 12, 2006 6:34 am</p><hr />
]]></content>
</entry>
</feed>