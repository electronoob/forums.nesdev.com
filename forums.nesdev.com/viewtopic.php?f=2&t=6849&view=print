<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Moving platforms / movable objects</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Moving platforms / movable objects</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=6849">http://forums.nesdev.com/viewtopic.php?f=2&amp;t=6849</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>miau</b> [ Mon Aug 16, 2010 5:54 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Moving platforms / movable objects</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />A few days ago I decided to add support for moving platforms to my platformer engine.
<br />However, my brain is having a hard time coming up with an implementation that's fast and doesn't cause all kinds of havoc.
<br />
<br />By moving platform I mean any object that is "solid" and movable within the game world, e.g. blocks that can be kicked or thrown etc, enemies that can be used as platforms like in SMB2 or Gimmick.
<br />
<br />
<br /><strong><span style="text-decoration: underline">I - Collision detection between platforms and sprites</span></strong>
<br />I'm not entirely sure how to handle this efficiently, yet. Code for checking whether two sprites' collision boxes overlap is already available and it's quite fast. Moving platforms would basically be sprites that require more advanced collision checks than that.
<br />
<br />
<br /><strong><span style="text-decoration: underline">II - What happens if a sprite is standing on a moving platform?</span></strong>
<br />There are two ways I can think of to handle this.
<br />
<br />First of all, the following is done once per frame.
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">update_position:<br />sprite_x = sprite_x + sprite_xspeed <br />bgcollision_check_horz&#40;&#41; //checking for background collision, ejecting the sprite if it's in a solid tile<br />sprite_y = sprite_y + sprite_yspeed<br />bgcollision_check_vert&#40;&#41; //same, but for vertical movement</div><br /><br /><strong>Method A</strong><ul>Change update_position to:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">sprite_x = sprite_x + sprite_xspeed<br />sprite_x = sprite_x + platform_xspeed<br />bgcollision_check_horz&#40;&#41;<br />sprite_y = sprite_y + sprite_yspeed<br />sprite_y = sprite_y + platform_yspeed<br />bgcollision_check_vert&#40;&#41;</div><br />Unfortunately, now sprite_xspeed and sprite_yspeed don't reflect the sprite's absolute movement speed anymore. E.g. background collision will be broken since it uses sprite_yspeed to decide whether the sprite should be ejected upward or downward.<br />	<br />To solve this issue we separate the different kinds of movement speed and add them together before running the original, unaltered update_position.<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">sprite_xspeed = platform_xspeed + sprite_xspeed_rest<br />sprite_yspeed = platform_yspeed + sprite_yspeed_rest</div><br />That's 2 or 4 additional bytes of RAM per sprite depending on if you use 8-bit (like Super Mario Bros. 3/Super Mario World) or 16-bit speed values (like my engine currently does).</ul><br /><strong>Method B</strong><ul>Changes of platform speed affect sprite speed directly.<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">speed_add&#40;xchange,ychange&#41; //platform speed should only be changed using this function<br />&#123;<br />&nbsp; &nbsp;platform_xspeed = platform_xspeed + xchange<br />&nbsp; &nbsp;platform_yspeed = platform_yspeed + ychange<br />&nbsp; &nbsp;if&#40;sprite_standing_on_platform&#41; &#123;<br />&nbsp; &nbsp;&nbsp; &nbsp;sprite_xspeed = sprite_xspeed + xchange<br />&nbsp; &nbsp;&nbsp; &nbsp;sprite_yspeed = sprite_yspeed + ychange<br />&nbsp; &nbsp;&#125;<br />&#125;<br /><br />speed_add&#40;3,0&#41; //increase platform's x speed by 3</div><br />This method is slow because of all the checks needed, setting platform speed to an absolute value would require even more awkward calculations while sprite speed cannot be set to an absolute value at all without breaking everything(?). Yup, now that I've written all of this down I realize it's not a good method at all. It just feels a bit closer to the real world where the car, elevator or whatever moves YOU (in b4 "tepples: But in Soviet Russia..."). <img src="./images/smilies/icon_razz.gif" alt=":P" title="Razz" /><br /></ul><br /><strong><span style="text-decoration: underline">III - What happens if a sprite is pushed into a solid tile by a platform?</span></strong><br />Haven't given much thought to this, yet, but here's how I'd attempt it:<br /><ul>- the background collision code ejects the sprite and sets flags on where the collision occured (up, down, left or right side of the sprite)<br />- if one of these flags is set, either...<br />	<ul>- the platform won't try to push/eject the sprite into that direction anymore (platform can move through sprite, boring)<br />	or...<br />	- platform should stop movement in that direction and "rest" on the sprite (multiple objects could be stacked if done properly, interesting!)</ul></ul>
<br />
<br />
<br />So... am I on the right track? Are there any other pitfalls that I am not aware of?
<br />How do you handle this kind of stuff / how do commercial games do it?
<br />Any kind of input is appreciated.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Mon Aug 16, 2010 6:22 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I haven't implemented this yet, but what I plan to do in order to move the player along with the platform he's standing on is this:
<br />
<br />A variable indicates if the player is standing on another object (it will be set when the player and the object collide and the player is on top) and which object it is (an index that points to one of the active objects). Using that I can read from the object's memory how much it moved last time (in absolute pixels - objects that can be stood on have to calculate this and put the result in a specific location) and change the absolute position of the player by the same amount.
<br />
<br />That sounds simple enough, and shouldn't screw up the physics because accelerations and speeds are not modified at all.
<br />
<br />I'll get back to you on collisions, 'cause I have to go out now.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>miau</b> [ Mon Aug 16, 2010 11:52 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Sounds good, but there's one case in which it will screw up my movement speed-dependant BG collision.
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">---+<br />&nbsp;W |<br />&nbsp;A |<br />&nbsp;L |&nbsp; +-----+<br />&nbsp;L |&nbsp; | PLA |<br />---+&nbsp; | YER |-&gt; slowly moving right<br />&nbsp; &nbsp; &nbsp; +-----+<br />&nbsp; &nbsp; +----------+<br />&lt;---| PLATFORM | moving left at a higher speed<br />&nbsp; &nbsp; +----------+</div><br />If the player gets pushed into the left wall while he's moving right bad things will happen.<br />That's not much of a problem, though. I can just merge platform and player speed like in Method A, but instead of wasting RAM I'd use temporary variables and feed them to the BG collision code. Cool! <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /><br /><br />Ok, what should happen if the player jumps off a moving platform?<br />I take it that if you wanted to keep the momentum you'd do the following once upon leaving the platform:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">sprite_xspeed = sprite_xspeed + platform_xspeed<br />sprite_yspeed = sprite_yspeed + platform_yspeed</div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Tue Aug 17, 2010 12:00 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">miau wrote:</div><div class="quotecontent">Sounds good, but there's one case in which it will screw up my movement speed-dependant BG collision.<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">---+<br />&nbsp;W |<br />&nbsp;A |<br />&nbsp;L |&nbsp; +-----+<br />&nbsp;L |&nbsp; | PLA |<br />---+&nbsp; | YER |-&gt; slowly moving right<br />&nbsp; &nbsp; &nbsp; +-----+<br />&nbsp; &nbsp; +----------+<br />&lt;---| PLATFORM | moving left at a higher speed<br />&nbsp; &nbsp; +----------+</div><br />If the player gets pushed into the left wall while he's moving right bad things will happen.</div>
<br />From the point of view of the player character, standing on a moving platform going left relative to objects in the background is the same as standing on a stationary platform and having background objects move to the right. So ideally, you should have sprite cels drawn for "bad things" that happen to the player character, such as getting bonked upside the head and falling flat on his face.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>miau</b> [ Wed Aug 18, 2010 9:13 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">So ideally, you should have sprite cels drawn for "bad things" that happen to the player character, such as getting bonked upside the head and falling flat on his face.</div>
<br />The term "sprite cels" is confusing me, do you mean I should divide the sprite into smaller regions and check where the collision occured?
<br />
<br />
<br />Anyway, thanks for your advice. I'll be trying to come up with actual code this weekend and will let you know how it went.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Wed Aug 18, 2010 10:27 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />A "cel" is the term that I have used for the set of tiles that make up a particular frame of a critter's animation, derived from <a href="http://en.wikipedia.org/wiki/Cel" class="postlink">the animation term</a>. For example, each cel of Mario's animation in Super Mario Bros. 3 is made up of eight tiles. The "sprites" are the hardware constructs used to display tile data. It takes four sprites to display the eight tiles of each cel of Mario's body.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bananmos</b> [ Mon Aug 23, 2010 10:01 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">A "cel" is the term that I have used for the set of tiles that make up a particular frame of a critter's animation, derived from <a href="http://en.wikipedia.org/wiki/Cel" class="postlink">the animation term</a>. For example, each cel of Mario's animation in Super Mario Bros. 3 is made up of eight tiles. The "sprites" are the hardware constructs used to display tile data. It takes four sprites to display the eight tiles of each cel of Mario's body.</div>
<br />
<br />Neat naming actually... I've been using different awkward terms such as "spriteImage", "spriteFrame" etc for this. Guess I'll follow you on this as soon as I find some time to clean up the variable names in my code :)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>UncleSporky</b> [ Mon Aug 23, 2010 11:10 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I tend to call it a metasprite, alongside the idea of a metatile - one object made up of many.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>miau</b> [ Wed Aug 25, 2010 9:30 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Alright, I whipped up some C code to test my ideas.
<br />
<br />This doesn't have all of the features I talked about, yet, but it's simple and the collision detection should be pretty fast when converted to 6502 ASM. Currently, the platforms behave like Item-1, 2 and 3 in Mega Man 2. You can stand on them, but also move through them from below.
<br />
<br /><a href="http://morphcat.de/crap/collision_src.zip" class="postlink">Here's the source</a> (uses Allegro) and <a href="http://morphcat.de/crap/collision_win32.zip" class="postlink">here's a Windows binary</a>. Maybe it will be of use to someone someday.
<br />
<br />For now that's all I need, so I'll leave it at that and get back to it when solid objects become a necessity.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Banshaku</b> [ Thu Aug 26, 2010 11:02 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I just want to say thank you for offering the C source. That gave ideas on how to eject objects for my current project.
<br />
<br />My previous attempts was, well, I prefer not saying more! ;;^_^

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>miau</b> [ Fri Aug 27, 2010 7:00 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Glad you found it to be useful, Banshaku. It seems to translate well to 6502 ASM, but I don't claim it's the best way to do it. Anyone is welcome to modify/improve/extend the code or provide other ideas.
<br />
<br />
<br /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">I'll get back to you on collisions, 'cause I have to go out now.</div>
<br />Tokumaru, I'd still be interested in hearing your take on collisions. I haven't yet figured out a decent way to handle them, so it would surely come in handy for me or others who discover this thread. If it's not too much of a hassle for you, that is. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Banshaku</b> [ Fri Aug 27, 2010 7:15 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">miau wrote:</div><div class="quotecontent">Glad you found it to be useful, Banshaku. It seems to translate well to 6502 ASM, but I don't claim it's the best way to do it. Anyone is welcome to modify/improve/extend the code or provide other ideas.</div>
<br />
<br />I didn't do exactly the same but just by seeing the C code, it helped me to think differently. Especially with the re-factored code with a better camera approach proposed by Tokumaru. Maybe my code is still not great but the code is getting better.
<br />
<br />When you first write a game engine and have no background on game engine theory, the solution you may find are not always optimum since you're re-inventing the wheel without understanding the complete domain at hand. This is my issue at the moment and that bring quite some funky code ;;^_^ But some of that craziness do pay in the end since I learned to try ideas and code them in a language that is maybe not as easy as C to express yourself when you use it on a very irregular basis.
<br />
<br />After thinking about Concrete man stage, I remembered that some moving platform exist near the end of it (...). So I will have to figure out a solution too about that issue. But they are quite simple in that stage thought. They either go up or down depending on the arrow on the platform.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Fri Aug 27, 2010 1:15 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">miau wrote:</div><div class="quotecontent">Tokumaru, I'd still be interested in hearing your take on collisions. I haven't yet figured out a decent way to handle them</div>
<br />Really? Everything seems to work so well in your demo... What exactly are you not happy with?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>miau</b> [ Sat Aug 28, 2010 3:34 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Well, I'm not even sure if my current method is any good, it basically goes like this:
<br />The platform and player keep their Y-position of the previous frame in memory. If their collision boxes overlap, it is checked whether the player was above the platform in the previous frame. If so, he's ejected upward and the "standing on ground" flag is set.
<br />
<br />It is a very dumbed down version of what I originally had in mind since it only handles landing on top of a platform.
<br />
<br />Before that I've been trying to come up with code that checks for collisions on all sides (like SMB seems to do for its platforms) which always resulted in a buggy mess.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>