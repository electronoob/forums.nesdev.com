<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=3&amp;t=39" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2004-11-20T11:05:47-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=3&amp;t=39</id>
<entry>
<author><name><![CDATA[Hyde]]></name></author>
<updated>2004-11-20T11:05:47-07:00</updated>
<published>2004-11-20T11:05:47-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=39&amp;p=216#p216</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=39&amp;p=216#p216"/>
<title type="html"><![CDATA[pipeline clarification]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=39&amp;p=216#p216"><![CDATA[
<div class="quotetitle">Nessie wrote:</div><div class="quotecontent"><br />If the PPU is a whole frame behind when it's catching up, you can render a whole frame at once a lot faster than rendering 240 scanlines. If it's more than 8 scanlines behind you can render those 8 scanlines very fast if they use the same tiles. Well, you get the idea...<br /></div><br /><br />Hmm... I should try that sometime.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=22">Hyde</a> — Sat Nov 20, 2004 11:05 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Zepper]]></name></author>
<updated>2004-11-20T07:07:29-07:00</updated>
<published>2004-11-20T07:07:29-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=39&amp;p=215#p215</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=39&amp;p=215#p215"/>
<title type="html"><![CDATA[pipeline clarification]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=39&amp;p=215#p215"><![CDATA[
<div class="quotetitle">Disch wrote:</div><div class="quotecontent"><br />(...)In a cycle-based renderer, you can only catch up the PPU when needed (which will only occur in games which do mid-scanline or mid-frame writes).<br /></div><br /><br />...o_0;;<br />Unless I'm misunderstanding the things, but... doesn't the PPU render a single pixel at every clock? Currently, I parse the PPU values (of scrolling) and put the proper pixel. I believe the hardware does this way... No major problems with games.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=39">Zepper</a> — Sat Nov 20, 2004 7:07 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Nessie]]></name></author>
<updated>2004-11-20T00:01:41-07:00</updated>
<published>2004-11-20T00:01:41-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=39&amp;p=213#p213</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=39&amp;p=213#p213"/>
<title type="html"><![CDATA[pipeline clarification]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=39&amp;p=213#p213"><![CDATA[
The catch-up approach <strong>can</strong> be optimized beyond any scanline engine, I just haven't bothered doing it with mine.<br /><br />If the PPU is a whole frame behind when it's catching up, you can render a whole frame at once a lot faster than rendering 240 scanlines. If it's more than 8 scanlines behind you can render those 8 scanlines very fast if they use the same tiles. Well, you get the idea...<br /><br />This turns out to be pretty complex, since you'll need to pre-calculate when IRQs or sprite #0 hits will take place. We don't wanna run the catch-up sequence on every CPU instruction or every $2002 read.<br />So, I just gave it up and left my emu running one cc at a time... <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" /> It's not fast, but wtf...<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=12">Nessie</a> — Sat Nov 20, 2004 12:01 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Hyde]]></name></author>
<updated>2004-11-19T22:58:36-07:00</updated>
<published>2004-11-19T22:58:36-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=39&amp;p=212#p212</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=39&amp;p=212#p212"/>
<title type="html"><![CDATA[pipeline clarification]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=39&amp;p=212#p212"><![CDATA[
Regarding Tepples' question, the emulator does not automatically switch from one core to another. It does, however, give the user the choice of switching cores in the middle of a game or prior to the beginning of one. This way, things are less CPU intensive. Now, as for Disch's comments, I still don't see how keeping track of various timestamps is any faster than rendering things scanline by scanline. Either way, you still must render things. The .exe's size is close to the 800 KB mark, mostly due to the fact that I am now using wxWidgets for GUI purposes.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=22">Hyde</a> — Fri Nov 19, 2004 10:58 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Disch]]></name></author>
<updated>2004-11-19T21:42:10-07:00</updated>
<published>2004-11-19T21:42:10-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=39&amp;p=211#p211</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=39&amp;p=211#p211"/>
<title type="html"><![CDATA[pipeline clarification]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=39&amp;p=211#p211"><![CDATA[
I don't see why that would be advantagous.  A scanline rendering enging is not only less accurate but potentially slower than a properly written cycle/pixel based renderer.  In a cycle-based renderer, you can only catch up the PPU when needed (which will only occur in games which do mid-scanline or mid-frame writes).  Whereas scanline-based renderers constantly catch up the PPU every HBlank, even if it isn't needed.<br /><br />Such an auto-detect mechanism seems like it wouldn't serve a purpose other than bloat your exe and slow the thing down.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=33">Disch</a> — Fri Nov 19, 2004 9:42 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2004-11-19T15:59:12-07:00</updated>
<published>2004-11-19T15:59:12-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=39&amp;p=209#p209</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=39&amp;p=209#p209"/>
<title type="html"><![CDATA[Re: :)]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=39&amp;p=209#p209"><![CDATA[
<div class="quotetitle">Hyde wrote:</div><div class="quotecontent"><br />If you are going for speed then I would not recommend emulating [the fetch pipeline] (very few games depend on its effect).<br /></div><br />Can your scanline engine detect when a game would need the effect and automatically switch to the cycle engine if necessary? (Caution: Detecting which games need a particular hack turned off by CRCing the ROM may be patented, and in any case, it's dangerous for testing homebrews.) Or can it run the scanline engine for those scanlines that don't contain any PPU writes?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Fri Nov 19, 2004 3:59 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Hyde]]></name></author>
<updated>2004-11-19T15:10:23-07:00</updated>
<published>2004-11-19T15:10:23-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=39&amp;p=208#p208</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=39&amp;p=208#p208"/>
<title type="html"><![CDATA[Re: :)]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=39&amp;p=208#p208"><![CDATA[
<div class="quotetitle">laughy wrote:</div><div class="quotecontent"><br />Do you think emulating the pipeline is worth it..? IIII don't!!!! hehe.<br /></div><br /><br />Depends what you are going for. My emulator has two different cores, one is scanline-based and the other cycle-based. The first does not take care of the pipeline, but the second does. If you are going for speed then I would not recommend emulating it (very few games depend on its effect).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=22">Hyde</a> — Fri Nov 19, 2004 3:10 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Disch]]></name></author>
<updated>2004-11-19T14:11:08-07:00</updated>
<published>2004-11-19T14:11:08-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=39&amp;p=207#p207</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=39&amp;p=207#p207"/>
<title type="html"><![CDATA[Re: :)]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=39&amp;p=207#p207"><![CDATA[
<div class="quotetitle">laughy wrote:</div><div class="quotecontent"><br />Do you think emulating the pipeline is worth it..? IIII don't!!!! hehe.<br /></div><br /><br />Well... I find it to be easier to impliment it than it would be not to.  I mean... you're going to have to do some sort of "saving" tiles regardless (since your PPU emulation can be interrupted mid-tile if you're doing pixel-based rendering).  So you might as well "save" them at the proper PPU cycle and then render them later instead of having to deal with knowing which part of the tile is already drawn and possibly having to re-load the same tile multiple times and yadda yadda.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=33">Disch</a> — Fri Nov 19, 2004 2:11 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Zepper]]></name></author>
<updated>2004-11-19T13:44:56-07:00</updated>
<published>2004-11-19T13:44:56-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=39&amp;p=206#p206</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=39&amp;p=206#p206"/>
<title type="html"><![CDATA[Re: :)]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=39&amp;p=206#p206"><![CDATA[
<div class="quotetitle">laughy wrote:</div><div class="quotecontent"><br />Do you think emulating the pipeline is worth it..? IIII don't!!!! hehe.<br /></div><br /><br />I have the same opinion... I might consider it as a 'grain of salt' <img src="http://forums.nesdev.com/images/smilies/icon_wink.gif" alt=";)" title="Wink" /><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=39">Zepper</a> — Fri Nov 19, 2004 1:44 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[laughy]]></name></author>
<updated>2004-11-19T12:18:43-07:00</updated>
<published>2004-11-19T12:18:43-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=39&amp;p=205#p205</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=39&amp;p=205#p205"/>
<title type="html"><![CDATA[:)]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=39&amp;p=205#p205"><![CDATA[
<div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />What you're encountering is a "data hazard", and computer architecture classes teach two ways of avoiding them: interlocks to catch up with the "architectural" state of the machine, or data forwarding. For something like VRAM sync, I'd suggest using an interlock: run the PPU before a $2007 read if the last $2007 access was a write<br /></div><br /><br />The ideas may be similar but the environment and problem is quite different from a cpu piepline! We have a lot more options open to us. I'm going to try the frame queue idea and see how it works out - if I find it too slow to keep in sync, I'll see how the catching up idea works. Thanks for your ideas guys!<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />There is a pipeline. Graphics are loaded ~16 pixels/cycles before they're displayed. But sprite 0 hit takes effect on display, not on load<br /></div><br /><br />Do you think emulating the pipeline is worth it..? IIII don't!!!! hehe.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=50">laughy</a> — Fri Nov 19, 2004 12:18 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Disch]]></name></author>
<updated>2004-11-18T21:11:23-07:00</updated>
<published>2004-11-18T21:11:23-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=39&amp;p=202#p202</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=39&amp;p=202#p202"/>
<title type="html"><![CDATA[Re: pipeline clarification]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=39&amp;p=202#p202"><![CDATA[
<div class="quotetitle">Fx3 wrote:</div><div class="quotecontent"><br />Heh, that was very funny! :) One more hit on BT's docs. This mean there's no real pipeline: at pixel X, collision at pixel X. ;)<br /></div><br /><br />There <em>is</em> a pipeline.  Graphics are loaded ~16 pixels/cycles before they're displayed.  But sprite 0 hit takes effect on display, not on load.<br /><br />It's just the pipeline seems to be confused/misunderstood.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=33">Disch</a> — Thu Nov 18, 2004 9:11 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Zepper]]></name></author>
<updated>2004-11-18T19:45:50-07:00</updated>
<published>2004-11-18T19:45:50-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=39&amp;p=200#p200</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=39&amp;p=200#p200"/>
<title type="html"><![CDATA[Re: pipeline clarification]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=39&amp;p=200#p200"><![CDATA[
<div class="quotetitle">Hyde wrote:</div><div class="quotecontent"><br />(...)I lost a lot of time trying to figure this thing out by myself, but finally got it. Forget the formula given by Brad Taylor on one of his docs<br /></div><br /><br />Heh, that was very funny! <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" /> One more hit on BT's docs. This mean there's no real pipeline: at pixel X, collision at pixel X. <img src="http://forums.nesdev.com/images/smilies/icon_wink.gif" alt=";)" title="Wink" /><br /><br /><div class="quotetitle">Hyde wrote:</div><div class="quotecontent"><br />So, if you had some stupid solid background picture with a solid retarded sprite #0 pixel directly over said background at x = 240, bit 6 of $2002 ought to be set at CPUCC = 240 / 3.<br /></div><br /><br />And is this bit really clear at VBlank end? [line 261]<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=39">Zepper</a> — Thu Nov 18, 2004 7:45 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2004-11-18T15:34:00-07:00</updated>
<published>2004-11-18T15:34:00-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=39&amp;p=196#p196</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=39&amp;p=196#p196"/>
<title type="html"><![CDATA[pipeline clarification]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=39&amp;p=196#p196"><![CDATA[
What you're encountering is a "data hazard", and computer architecture classes teach two ways of avoiding them: interlocks to catch up with the "architectural" state of the machine, or data forwarding. For something like VRAM sync, I'd suggest using an interlock: run the PPU before a $2007 read if the last $2007 access was a write.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Thu Nov 18, 2004 3:34 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[laughy]]></name></author>
<updated>2004-11-18T10:06:19-07:00</updated>
<published>2004-11-18T10:06:19-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=39&amp;p=191#p191</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=39&amp;p=191#p191"/>
<title type="html"><![CDATA[:)]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=39&amp;p=191#p191"><![CDATA[
Wow I posted this at like 12:30AM, came back at 9AM to fix it cause I realized I was a fool for putting LIFO, and already two replies! hehe. yay for edit.<br /><br />baisoku what you said is something I think everyone considers before the queue thing, and the whole point is speed, not simplicity. The overhead of starting the ppu process is much to great to do it on every read or write, especially when there are very few registers involved to keep track of.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=50">laughy</a> — Thu Nov 18, 2004 10:06 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Disch]]></name></author>
<updated>2004-11-18T07:21:30-07:00</updated>
<published>2004-11-18T07:21:30-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=39&amp;p=190#p190</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=39&amp;p=190#p190"/>
<title type="html"><![CDATA[Re: :)]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=39&amp;p=190#p190"><![CDATA[
<div class="quotetitle">baisoku wrote:</div><div class="quotecontent"><br />yet i haven't seen it mentioned at all on these boards:<br /></div><br /><br />I went into detail on how my emu did things (similar to this method) on the old boards.<br /><br />Relevant linkage:<br /><!-- m --><a class="postlink" href="http://nesdev.com/cgi-bin/wwwthreads/showpost.pl?Board=newbie&amp;Number=1445&amp;page=0&amp;view=collapsed&amp;mode=threaded&amp;sb=5#Post1445">http://nesdev.com/cgi-bin/wwwt ... 5#Post1445</a><!-- m --><br /><br />But I see what he's going for.  This queue system could be faster if done properly.  And yeah I'd think it'd have to be FIFO too.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=33">Disch</a> — Thu Nov 18, 2004 7:21 am</p><hr />
]]></content>
</entry>
</feed>