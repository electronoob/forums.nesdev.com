<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - SNES dev newbie questions</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">SNES dev newbie questions</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=12&amp;t=8051">http://forums.nesdev.com/viewtopic.php?f=12&amp;t=8051</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>4</strong> of <strong>5</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sun Mar 09, 2014 5:42 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: SNES dev newbie questions</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />If you can think of a good place to split it, send me a PM.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>juef</b> [ Sun Mar 09, 2014 5:54 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: SNES dev newbie questions</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Well, most of the questions I have been asking were about SNES initalisation, so perhaps the topic should simply be renamed. I can't say I understand all of this, but I haven't studied how DMA works at all yet. Thanks everyone for contributing to the discussion, I am learning a lot.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>doppelganger</b> [ Sun Mar 09, 2014 7:10 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: SNES dev newbie questions</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">koitsu wrote:</div><div class="quotecontent">I've read this paragraph 4 times now, and it's bloody confusing.  I can't reliably say I understand what it means, specifically the phrases &quot;attempting a DMA from WRAM to this register&quot; and &quot;attempting a DMA from this register to WRAM&quot;.  The only conclusion I've been able to reach is that the author of those lines is trying to say &quot;Don't use general DMA to read from banks $7e/7f + write to $2180, and don't use general DMA to read from $2180 + write to banks $7e/7f&quot;, and if that's the case, then I can see some legitimacy in that.<br /><br />But neither case is what my code was doing.  <a href="http://forums.nesdev.com/viewtopic.php?p=126561#p126561" class="postlink">The code</a> uses general DMA to read from $000000 (fixed address) and writes to $2180.  I'm aware of the RAM mirroring (banks $00-3f, ranges $0000-1fff, from banks $7e/7f).  If what you're saying is that the above code won't work, then that brings into question <a href="http://forums.nesdev.com/viewtopic.php?p=126569#p126569" class="postlink">byuu's statement that general DMA can be used to clear WRAM</a>.<br /><br />It's really good that we're discussing all this and probably confusing the hell out of the OP.  *rolls eyes*</div><br /><br />The paragraph is saying &quot;don't attempt to do general DMA from WRAM to WRAM.&quot;  That includes the mirrored sections in banks $00-$3f and the WRAM banks $7e and $7f.  In order to use general DMA to clear WRAM, you would have to store a zero value in the ROM itself somewhere (or possibly external RAM) and have the general DMA use that as the A-bus fixed source.<br /><br />I'm with whoever wants to split this discussion into another thread, by the way.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>byuu</b> [ Sun Mar 09, 2014 7:55 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: SNES dev newbie questions</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />doppleganger is correct.<br /><br />The original quote is just a more verbose way of saying WRAM A &lt;&gt; WRAM B does not work, regardless of DMA transfer direction. Think about it from a hardware perspective: how can the same chip with one address+data bus be read from and written to at the same time at different locations?<br /><br />So use an A-bus address ($43x2-4) that is not WRAM (nor a mirror of it.) ROM is the surefire method, but you could also do SRAM if you have some.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sun Mar 09, 2014 8:18 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: SNES dev newbie questions</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Do otherwise unused DMA registers work as a readable A-bus address for this?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>koitsu</b> [ Sun Mar 09, 2014 9:30 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: SNES dev newbie questions</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Okay, then that also means the ClearVRAM routine written by Neviksti is wrong as well.  *shakes head* So much broken code...<br /><br />I'm going to generally bow out of assisting at this point.  The reason has to do with the fact that all of this quickly becomes assembler-focused (meaning the code written has more and more of a dependency and requirement relating to the assembler being used and its related syntax requirements), and since I don't know WLA and find its documentation a bit of a mess, I choose to opt out.  :D<br /><br />The information being provided here is great/fantastic, however.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>byuu</b> [ Sun Mar 09, 2014 10:08 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: SNES dev newbie questions</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />&gt; Do otherwise unused DMA registers work as a readable A-bus address for this?<br /><br />No, $21xx, $40xx, $41xx, $42xx, $43xx don't work. You either get open bus or 0x00 (depending on register and model) when you specify them as the A-bus address.<br /><br />I don't even want to imagine how much &quot;fun&quot; you could have DMA'ing data directly to $420b (DMA enable)<br /><br />&gt; Okay, then that also means the ClearVRAM routine written by Neviksti is wrong as well.<br /><br />ClearVRAM should work fine. It's transferring from WRAM to VRAM.<br /><br />The problem is only with going from WRAM to WRAM.<br /><br />&gt; and since I don't know WLA and find its documentation a bit of a mess, I choose to opt out. :D<br /><br />Unfortunately we can't all agree to use the same assembler. Even when we make our own, we often want to improve it and remove past mistakes. All I can recommend for writing truly portable code is to stick to straight opcodes and labels:<br /><br />&quot;lda #$00&quot;, &quot;lda #$ffff&quot; (no .b, .w), &quot;label:&quot; (no -/+, no .label, etc.)<br /><br />Skip the macros, the directives, the defines, etc.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>juef</b> [ Thu Mar 13, 2014 6:29 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: SNES dev newbie questions</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Thanks to everyone, I'm finally feeling like I'm getting things done! <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" />  If anyone's curious, here's what I have so far:<ul><li><a href="https://dl.dropboxusercontent.com/u/19680817/snes/dev/2014-03-13%20-%20msu1_detect.7z" class="postlink">MSU1 detection</a>: screen turns green if MSU1 hardware is available, red otherwise. Includes the manifest and XML files to use with your favorite emulator or hardware MSU1 implementation.</li><li><a href="https://dl.dropboxusercontent.com/u/19680817/snes/dev/2014-03-13%20-%20seizure_trigger.7z" class="postlink">Seizure trigger</a>: WARNING, color changes every frame, epileptics beware!</li></ul><br />The color one, I made mostly to play around with instructions, WRAM, and other things I'm not experienced with. Basically, every color has its intensity increased by 1, 2 and 3 respectively (looping around), one color per frame. I would very much appreciate if someone could give my code a quick check to see if there are obvious no-no's or code that could be simplified (I know not everything's optimal, I could save a few jumps here and there, but I included them just for clarity):<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">lda #$80&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;; Bit 7 of $4200 must be set to enable NMI...<br />sta $4200<br />sep #%00110000&nbsp; &nbsp;&nbsp; &nbsp;; Set the A, X/Y registers to 8-bit.<br /><br />lda #%00001111&nbsp; &nbsp;&nbsp; &nbsp;; Full brightness<br />sta $2100<br />wai<br /><br />; Define color addresses so I don't mess up<br />.define GREEN&nbsp; &nbsp; &nbsp; &nbsp;$0000<br />.define RED&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;$0001<br />.define BLUE&nbsp; &nbsp; &nbsp; &nbsp; $0002<br />.define NEXTCOLOR&nbsp; &nbsp;$0003&nbsp; &nbsp;; 0 = GREEN, 1 = RED, 2 = BLUE<br /><br />; Set all colors to half intensity at first (because why not)<br />lda #%00010000<br />sta RED<br />sta BLUE<br />sta GREEN<br />&nbsp; &nbsp;<br />Forever:<br /><br />&nbsp; &nbsp;stz $2121&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;; We'll want BG0 only<br /><br />&nbsp; &nbsp;IncNextColor:&nbsp; &nbsp;&nbsp; &nbsp;; One color is updated per frame, find out which out for this iteration<br />&nbsp; &nbsp;&nbsp; &nbsp;inc NEXTCOLOR<br />&nbsp; &nbsp;&nbsp; &nbsp;lda NEXTCOLOR<br />&nbsp; &nbsp;&nbsp; &nbsp;and #%00000011&nbsp; &nbsp;; This is a weird way I thought about to keep looping between 0 through 2<br />&nbsp; &nbsp;&nbsp; &nbsp;sta NEXTCOLOR<br />&nbsp; &nbsp;&nbsp; &nbsp;cmp #%00000011<br />&nbsp; &nbsp;&nbsp; &nbsp;beq IncNextColor<br />&nbsp; &nbsp;cmp #$00<br />&nbsp; &nbsp;beq Update_Green<br />&nbsp; &nbsp;cmp #$01<br />&nbsp; &nbsp;beq Update_Red<br />&nbsp; &nbsp;cmp #$02<br />&nbsp; &nbsp;beq Update_Blue<br /><br />&nbsp; &nbsp;; The following blocks increment the colors by 1, 2 and 3 respectively<br />&nbsp; &nbsp;Update_Green:&nbsp; &nbsp;&nbsp; &nbsp;; low: #%11100000, high: #%00000011<br />&nbsp; &nbsp;lda GREEN<br />&nbsp; &nbsp;adc #%00000001<br />&nbsp; &nbsp;and #%00011111&nbsp; &nbsp;&nbsp; &nbsp;; so that it's never above 31<br />&nbsp; &nbsp;sta GREEN<br />&nbsp; &nbsp;jmp Update_Color<br />&nbsp; &nbsp;<br />&nbsp; &nbsp;Update_Red:&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;; low: #%00011111, high: #%00000000<br />&nbsp; &nbsp;lda RED<br />&nbsp; &nbsp;adc #%00000010<br />&nbsp; &nbsp;and #%00011111<br />&nbsp; &nbsp;sta RED<br />&nbsp; &nbsp;jmp Update_Color<br />&nbsp; &nbsp;<br />&nbsp; &nbsp;Update_Blue:&nbsp; &nbsp;&nbsp; &nbsp;; low: #%00000000, high: #%01111100<br />&nbsp; &nbsp;lda BLUE<br />&nbsp; &nbsp;adc #%00000011<br />&nbsp; &nbsp;and #%00011111<br />&nbsp; &nbsp;sta BLUE<br />&nbsp; &nbsp;jmp Update_Color<br />&nbsp; &nbsp;<br />&nbsp; &nbsp;Update_Color:&nbsp; &nbsp;&nbsp; &nbsp;; let's &quot;build&quot; the full color bytes<br />&nbsp; &nbsp;&nbsp; &nbsp;lda GREEN<br />&nbsp; &nbsp;&nbsp; &nbsp;asl a<br />&nbsp; &nbsp;&nbsp; &nbsp;asl a<br />&nbsp; &nbsp;&nbsp; &nbsp;asl a<br />&nbsp; &nbsp;&nbsp; &nbsp;asl a<br />&nbsp; &nbsp;&nbsp; &nbsp;asl a<br />&nbsp; &nbsp;&nbsp; &nbsp;adc RED<br />&nbsp; &nbsp;&nbsp; &nbsp;sta $2122&nbsp; &nbsp;&nbsp; &nbsp;; low byte (#%GGGRRRRR)<br />&nbsp; &nbsp;&nbsp; &nbsp;lda GREEN<br />&nbsp; &nbsp;&nbsp; &nbsp;lsr a<br />&nbsp; &nbsp;&nbsp; &nbsp;lsr a<br />&nbsp; &nbsp;&nbsp; &nbsp;lsr a<br />&nbsp; &nbsp;&nbsp; &nbsp;ror a<br />&nbsp; &nbsp;&nbsp; &nbsp;ror a<br />&nbsp; &nbsp;&nbsp; &nbsp;adc BLUE<br />&nbsp; &nbsp;&nbsp; &nbsp;rol a<br />&nbsp; &nbsp;&nbsp; &nbsp;rol a<br />&nbsp; &nbsp;&nbsp; &nbsp;sta $2122&nbsp; &nbsp;&nbsp; &nbsp;; high byte (#%0BBBBBGG)<br />&nbsp; &nbsp;&nbsp; &nbsp;wai<br /><br />jmp Forever</div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>koitsu</b> [ Thu Mar 13, 2014 8:20 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: SNES dev newbie questions</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I think you're missing <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">clc</tt> before your <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">adc</tt> statements.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>juef</b> [ Thu Mar 13, 2014 8:23 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: SNES dev newbie questions</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Indeed! Thank you.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>juef</b> [ Wed Mar 19, 2014 4:27 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: SNES dev newbie questions</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Quoted from <a href="http://forums.nesdev.com/viewtopic.php?p=124549#p124549" class="postlink">this topic</a>:<br /><div class="quotetitle">byuu wrote:</div><div class="quotecontent">It takes about 20 minutes to patch a game to use CD-audio: trace out writes to $214x, walk up the stack until you find it loading a track# and calling the &quot;play track&quot; function (every game I've looked at had one), and modify that routine to test if MSU1 is present. If so, play with MSU1. If not, call original function so the game still works just with the regular audio.</div><br />I successfully managed to get SMW playing PCM audio tracks with MSU1, but that was with the help from <a href="http://www.smwcentral.net/?p=map&amp;type=rom" class="postlink">this document</a>. I did try to trace writes to $214x beforehand, but there sure were a lot of those. Typically, how does one find out where the &quot;play track&quot; function is located? Or more generally, how does one discriminate &quot;interesting&quot; writes to $214x versus the others which do something else?<br /><br />Other unrelated question: for another project, I used functions from <a href="http://wiki.superfamicom.org/snes/show/How+to+Write+to+DSP+Registers+Without+any+SPC-700+Code" class="postlink">this document</a> by blargg to make sure the SNES DSP isn't muted. Since this is the only single thing I am interested in doing with the DSP right now, I was wondering if I overlooked a faster way to do this? It's not too bad, but it seems to me it's still a lot just to make sure a bit isn't set.<br /><br />Thank you for reading!

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>juef</b> [ Sun Mar 23, 2014 1:13 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: SNES dev newbie questions</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Quick question about rotating bits in accumulator: in the following, I was expecting the 8-bit accumulator to become <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">$80</tt> after the final <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">ROR</tt>, but it seems like the set bit just disappeared. This is the bottom code of <a href="http://forums.nesdev.com/viewtopic.php?p=126773#p126773" class="postlink">this post</a>.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">$00/81EF AD 00 00&nbsp; &nbsp; LDA $0000&nbsp; &#91;$00:0000&#93;&nbsp; &nbsp;A:0000 X:0000 Y:0000 P:envMXdiZc<br />$00/81F2 4A&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; LSR A&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;A:0010 X:0000 Y:0000 P:envMXdizc<br />$00/81F3 4A&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; LSR A&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;A:0008 X:0000 Y:0000 P:envMXdizc<br />$00/81F4 4A&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; LSR A&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;A:0004 X:0000 Y:0000 P:envMXdizc<br />$00/81F5 6A&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ROR A&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;A:0002 X:0000 Y:0000 P:envMXdizc<br />$00/81F6 6A&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ROR A&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;A:0001 X:0000 Y:0000 P:envMXdizc<br />$00/81F7 2A&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; .....&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;A:0000 X:0000 Y:0000 P:envMXdiZC</div><br />I understand that the carry flag becomes set, but I truly hoped for the bit to go around. What am I missing?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Jarhmander</b> [ Sun Mar 23, 2014 2:00 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: SNES dev newbie questions</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The result is correct. Think of the rotate instructions as &quot;rotate operand and carry&quot;: if A is 8-bit, ROL/ROR rotate through 9 bits, A and carry. That means it requires 9 successive ROLs/RORs to get in A the original value, not 8. That's because the vacant bit gets the carry THEN the carry get the shifted-out bit. Example:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp;lda #2&nbsp; ; assume A is 8 bits.<br />&nbsp; &nbsp;clc&nbsp; &nbsp; &nbsp;; A = $02, C = 0<br />&nbsp; &nbsp;ror a&nbsp; &nbsp;; A = $01, C = 0<br />&nbsp; &nbsp;ror a&nbsp; &nbsp;; A = $00, C = 1<br />&nbsp; &nbsp;ror a&nbsp; &nbsp;; A = $80, C = 0</div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>juef</b> [ Sun Mar 23, 2014 2:48 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: SNES dev newbie questions</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />This makes perfect sense, thank you. The assembly tutorial I read didn't mention this, but then again it wasn't for 65816...

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>koitsu</b> [ Sun Mar 23, 2014 3:59 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: SNES dev newbie questions</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">juef wrote:</div><div class="quotecontent">This makes perfect sense, thank you. The assembly tutorial I read didn't mention this, but then again it wasn't for 65816...</div><br />In this case what's being described applies to 6502 and 65c02 as well.  There is nothing different about ROR/ROL on the 65816 compared to the 6502/65c02.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>4</strong> of <strong>5</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>