<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=10&amp;t=1511" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2006-07-12T20:13:04-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=10&amp;t=1511</id>
<entry>
<author><name><![CDATA[nineTENdo]]></name></author>
<updated>2006-07-12T20:13:04-07:00</updated>
<published>2006-07-12T20:13:04-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1511&amp;p=15353#p15353</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1511&amp;p=15353#p15353"/>
<title type="html"><![CDATA[NMI vs. Vblank???]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1511&amp;p=15353#p15353"><![CDATA[
EUURRREEKKAAAAAA!!!!!! <br /><br />Thanks Yall:)<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=352">nineTENdo</a> — Wed Jul 12, 2006 8:13 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Quietust]]></name></author>
<updated>2006-07-12T20:08:34-07:00</updated>
<published>2006-07-12T20:08:34-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1511&amp;p=15351#p15351</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1511&amp;p=15351#p15351"/>
<title type="html"><![CDATA[NMI vs. Vblank???]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1511&amp;p=15351#p15351"><![CDATA[
<div class="codetitle"><b>Code:</b></div><div class="codecontent">   lda #%1001000 <br />   sta $2000       <br />   lda #%00011110<br />   sta $2001 </div><br /><br />You're missing one bit somewhere in your write to $2000...<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=7">Quietust</a> — Wed Jul 12, 2006 8:08 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[nineTENdo]]></name></author>
<updated>2006-07-12T20:05:58-07:00</updated>
<published>2006-07-12T20:05:58-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1511&amp;p=15350#p15350</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1511&amp;p=15350#p15350"/>
<title type="html"><![CDATA[NMI vs. Vblank???]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1511&amp;p=15350#p15350"><![CDATA[
<div class="quotetitle">Quietust wrote:</div><div class="quotecontent"><br />Really, you should be able to figure this out by now.<br /></div><br /><br />its not clicking.  But heres what i have.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">Start:  <br />   sei<br />   cld<br />   jsr WVB<br />   jsr LDPAL<br />   JSR LDNT<br />   <br />NOTHING<br />   JMP NOTHING<br />WVB   <br />wait1: <br />     lda $2002 <br />     bpl wait1 <br />wait2: <br />     lda $2002 <br />     bpl wait2 <br />   RTS<br /><br /><br />LDPAL         <br />   ldx #$00   <br /><br />   lda #$3F    <br />   sta $2006   <br />   lda #$00    <br />   sta $2006<br /><br />loadpal:                <br />   lda tilepal, x <br />   sta $2007       <br />   inx             <br />   cpx #32         <br />   bne loadpal  <br />   rts   <br />LDNT<br />      lda #$20<br />     sta $2006<br />      sta $2006<br />      ldx #$00<br /><br /><br />loadNames1:<br />      lda ourMap, X<br />      sta $2007<br />      inx<br />      bne loadNames1<br /><br />loadNames2:<br />      lda ourMap+$100, X<br />      sta $2007<br />      inx<br />      bne loadNames2<br /><br />loadNames3:<br />      lda ourMap+$200, X<br />      sta $2007<br />      inx<br />      bne loadNames3<br /><br />loadNames4:<br />      lda ourMap+$300, X<br />      sta $2007<br />      inx<br />      cpx #$80<br />      bne loadNames4<br /><br />   lda #%1001000  <br />   sta $2000       <br />   lda #%00011110 <br />   sta $2001 <br /><br />   lda #$02<br />   sta $0701<br />   rts<br /><br /><br /><br />waitblank   <br />   lda gotnmi <br />      BEQ waitblank <br />      lda #0 <br />      sta gotnmi<br />KEYDN<br />   <br />   clc<br />   LDA X_POS<br />   ADC #$10<br />   sta X_POS<br />   lda #$7<br />   sta $4014<br />   <br />   rts<br />   <br /><br />nmi<br />   pha<br />   txa<br />   pha<br />   tya<br />   pha<br />   <br />   lda #$01<br />   sta gotnmi<br />   lda #$00<br />   Sta $2005<br />   Sta $2005<br />   jsr waitblank<br /><br />   <br />   pla<br />   tay<br />   pla<br />   tax<br />   pla<br />   <br />                rti</div><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=352">nineTENdo</a> — Wed Jul 12, 2006 8:05 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Disch]]></name></author>
<updated>2006-07-12T19:47:15-07:00</updated>
<published>2006-07-12T19:47:15-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1511&amp;p=15349#p15349</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1511&amp;p=15349#p15349"/>
<title type="html"><![CDATA[NMI vs. Vblank???]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1511&amp;p=15349#p15349"><![CDATA[
You misunderstood what I said before about $2002<br /><br />NMIs will work reliably if you're NOT reading $2002.  This means you SHOULDN'T be reading $2002 (since you want to be using NMIs)<br /><br />But as Q is saying, you'll still want to use $2002 for waiting for the first two frames (when you wait for the PPU to warm up)<br /><br />For that... you'll want to do something like this once at startup (at the start of your reset routine):<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">: lda $2002<br />  bpl :-<br />: lda $2002<br />  bpl :-<br /></div><br /><br />Or if you're not using as nice of an assembler:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">wait1:<br />  lda $2002<br />  bpl wait1<br />wait2:<br />  lda $2002<br />  bpl wait2<br /></div><br /><br /><br />But in your game logic, when you're waiting for VBlank, you should <span style="text-decoration: underline">not</span> be reading $2002.  To wait for the next VBlank, make sure NMIs are enabled, and then just wait for your NMI to trip.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=33">Disch</a> — Wed Jul 12, 2006 7:47 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Quietust]]></name></author>
<updated>2006-07-12T19:43:48-07:00</updated>
<published>2006-07-12T19:43:48-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1511&amp;p=15348#p15348</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1511&amp;p=15348#p15348"/>
<title type="html"><![CDATA[NMI vs. Vblank???]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1511&amp;p=15348#p15348"><![CDATA[
<div class="quotetitle">nineTENdo wrote:</div><div class="quotecontent"><br />What would be the proper $2002 read a reset.  Would this code be inclided at reset.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">waitblank   lda gotnmi <br />   BEQ waitblank <br />   lda #0 <br />   sta gotnmi</div><br /></div><br /><br />No - that doesn't use $2002.<br /><br />Really, you should be able to figure this out by now.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=7">Quietust</a> — Wed Jul 12, 2006 7:43 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[nineTENdo]]></name></author>
<updated>2006-07-12T19:33:54-07:00</updated>
<published>2006-07-12T19:33:54-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1511&amp;p=15347#p15347</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1511&amp;p=15347#p15347"/>
<title type="html"><![CDATA[NMI vs. Vblank???]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1511&amp;p=15347#p15347"><![CDATA[
What would be the proper $2002 read a reset.  Would this code be inclided at reset.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">waitblank   lda gotnmi <br />   BEQ waitblank <br />   lda #0 <br />   sta gotnmi</div><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=352">nineTENdo</a> — Wed Jul 12, 2006 7:33 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Quietust]]></name></author>
<updated>2006-07-12T19:28:25-07:00</updated>
<published>2006-07-12T19:28:25-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1511&amp;p=15346#p15346</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1511&amp;p=15346#p15346"/>
<title type="html"><![CDATA[NMI vs. Vblank???]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1511&amp;p=15346#p15346"><![CDATA[
<div class="quotetitle">nineTENdo wrote:</div><div class="quotecontent"><br />What i dont understand is how $2002 gets worked into the code.<br /></div><br /><br />That's just it - you <strong>shouldn't</strong> be using $2002 (except for in your RESET code in order to wait 2 frames, since that's required).<br /><br /><div class="quotetitle">nineTENdo wrote:</div><div class="quotecontent"><br />I would think that it has to equal something or get stored.<br /></div><br /><br />It isn't a byte of memory - it's a memory-mapped <strong>I/O register</strong>. Its value changes on its own, and reading it performs other actions.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=7">Quietust</a> — Wed Jul 12, 2006 7:28 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[nineTENdo]]></name></author>
<updated>2006-07-12T19:19:54-07:00</updated>
<published>2006-07-12T19:19:54-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1511&amp;p=15345#p15345</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1511&amp;p=15345#p15345"/>
<title type="html"><![CDATA[NMI vs. Vblank???]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1511&amp;p=15345#p15345"><![CDATA[
<div class="quotetitle">Quietust wrote:</div><div class="quotecontent"><br />To do it properly, you should use this instead:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">waitblank   lda gotnmi<br />   BEQ waitblank<br />   lda #0<br />   sta gotnmi</div><br /><br />and, right after the<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">   Lda #$00<br />   STA $2005<br />   STA $2005</div><br />in your NMI routine, insert<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">   LDA #$01<br />   STA gotnmi</div><br /></div><br /><br />What i dont understand is how $2002 gets worked into the code.  I would think that it has to equal something or get stored. <br /><br />But other than that i understand whats going.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=352">nineTENdo</a> — Wed Jul 12, 2006 7:19 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Quietust]]></name></author>
<updated>2006-07-12T18:57:54-07:00</updated>
<published>2006-07-12T18:57:54-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1511&amp;p=15344#p15344</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1511&amp;p=15344#p15344"/>
<title type="html"><![CDATA[NMI vs. Vblank???]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1511&amp;p=15344#p15344"><![CDATA[
<div class="codetitle"><b>Code:</b></div><div class="codecontent">waitblank   lda $2002<br />   BPL waitblank</div><br /><br />You shouldn't be waiting on $2002 outside of your initialization code - it's not reliable, and on an NES it will result in missed frames.<br /><br />To do it properly, you should use this instead:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">waitblank   lda gotnmi<br />   BEQ waitblank<br />   lda #0<br />   sta gotnmi</div><br /><br />and, right after the<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">   Lda #$00<br />   STA $2005<br />   STA $2005</div><br />in your NMI routine, insert<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">   LDA #$01<br />   STA gotnmi</div><br /><br />Oh, and declare "gotnmi" along with the rest of your variables.<br />This is what we talked about earlier about not polling $2002 to wait for VBLANK, but instead using a variable that you set whenever you get an NMI.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=7">Quietust</a> — Wed Jul 12, 2006 6:57 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[nineTENdo]]></name></author>
<updated>2006-07-12T18:33:00-07:00</updated>
<published>2006-07-12T18:33:00-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1511&amp;p=15343#p15343</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1511&amp;p=15343#p15343"/>
<title type="html"><![CDATA[NMI vs. Vblank???]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1511&amp;p=15343#p15343"><![CDATA[
<div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />NMIs will <em>always</em> trip on <em>every</em> VBlank as long as both of the following are true:<br /><br />- they're enabled ($2000.7 is set)<br />- you're not reading $2002 around the time VBlank starts<br /></div><br /><br />Well i have 7.2000 set at the PPU initialization instead of it being cleared.  And my is at X_POS = 0703 and is refreshed with a LDA #$7 and $4014 store.  And i think i might not be reading $2002 around the time VBlank starts.  I dont how i would do that.  It looks like i might be doing it but then again i not sure.  im kinda confused on the whole reading from $2002. Does the 7. $2000 have to set or cleared when reading.  Heres what i have can you tell how to point to it or can i just include it in the NMI.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">infinite: <br />waitblank   lda $2002                   &lt; this keeps my sprite moving <br />   BPL waitblank                 and nice looking when i press A.<br />   <br />   lda #$01   <br />    sta $4016<br />    lda #$00<br />    sta $4016 <br />   <br />   lda $4016<br />   and #1<br />   bne KEYDN<br />   lda $4016<br />   lda $4016  <br />   lda $4016  <br />   lda $4016<br />   lda $4016 <br />   lda $4016  <br />   lda $4016<br />   JMP infinite<br /><br />KEYDN<br />   <br />   clc<br />   LDA Y_POS<br />   ADC #$75<br />   <br />   sta Y_POS<br />   CLC<br />   lda X_POS<br />   <br />   ADC #$40<br />   sta X_POS   <br />   lda #$7<br />   sta $4014<br />   BNE infinite<br />   jmp infinite<br />nmi<br />   pha<br />   txa<br />   pha<br />   tya<br />   pha<br />   <br />  lda X_POS <br />   adc #$10 <br />   sta X_POS <br />   Lda #$7 <br />   sta $4014 <br />   Lda #$00 <br />   STA $2005 <br />   STA $2005 <br />                pla<br />   tay<br />   pla<br />   tax<br />   pla<br />   <br />   rti</div><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=352">nineTENdo</a> — Wed Jul 12, 2006 6:33 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Disch]]></name></author>
<updated>2006-07-12T16:07:48-07:00</updated>
<published>2006-07-12T16:07:48-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1511&amp;p=15340#p15340</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1511&amp;p=15340#p15340"/>
<title type="html"><![CDATA[NMI vs. Vblank???]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1511&amp;p=15340#p15340"><![CDATA[
Not sure I fully understand your question, but maybe I can help fill in the blanks.<br /><br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />how do i impliment a code to keep vblanking<br /></div><br /><br />VBlank isn't a thing you can control.  VBlank happens roughly 60 times per second at steady intervals regardless of what your code is doing (one VBlank every ~29830 CPU cycles, which is very roughly every ~7458 instructions, assuming an average of 4 cycles per instruction).  VBlank will always happen whether you're ready for it or not... or whether you want it to or not.<br /><br />An NMI (if enabled) is tripped at the very start of VBlank to notify your program that VBlank is happening.  NMIs will <em>always</em> trip on <em>every</em> VBlank as long as both of the following are true:<br /><br />- they're enabled ($2000.7 is set)<br />- you're not reading $2002 around the time VBlank starts<br /><br />I doubt very much you're doing the latter.  So if NMIs are not occuring for you, it must be because you have them disabled.  Make sure that when you write to $2000, the high bit (bit 7:  $80) is set.<br /><br /><br /><br />Another potential reason for your problem is that your 'X_POS' variable is defined wrong.  Where in memory is 'X_POS'?  Like... what do you define it as?  (you probably have a line somewhere that's "X_POS = something")<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=33">Disch</a> — Wed Jul 12, 2006 4:07 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[nineTENdo]]></name></author>
<updated>2006-07-10T16:36:14-07:00</updated>
<published>2006-07-10T16:36:14-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1511&amp;p=15316#p15316</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1511&amp;p=15316#p15316"/>
<title type="html"><![CDATA[NMI vs. Vblank???]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1511&amp;p=15316#p15316"><![CDATA[
Ok my stupid brain finally understands how NMI works. WRITE SCREEN, VBLANK (NMI EXECUTION ON 7.2000 set), REPEAT.  My Question is how do how do i impliment a code to keep vblanking.  ive set my 7.2000 written simple ADC #$10  to move a sprite on #$4014. And still nothing.  im thinking becasue the damn thing isnt vblanking.  ive seen some code were vblank just loops in main loop. What should i do.  So far ive got my backround to flicker and change color.  well heres my code. <br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">nmi<br />   pha<br />   txa<br />   pha<br />   tya<br />   pha<br />      <br />   lda X_POS<br />   adc #$10<br />   sta X_POS<br />   Lda #$7<br />   sta $4014<br />   Lda #$00<br />   STA $2005<br />   STA $2005<br /><br />   <br />   pla<br />   tay<br />   pla<br />   tax<br />   pla<br />   <br />   rti</div><br /><br />Thanks in advance,<br />EL<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=352">nineTENdo</a> — Mon Jul 10, 2006 4:36 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[mozz]]></name></author>
<updated>2006-06-28T15:05:15-07:00</updated>
<published>2006-06-28T15:05:15-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1511&amp;p=14736#p14736</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1511&amp;p=14736#p14736"/>
<title type="html"><![CDATA[NMI vs. Vblank???]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1511&amp;p=14736#p14736"><![CDATA[
The point of using the stack is that you don't have to know the exact address where your values are being stored -- it might even be different for different executions of the same code, under different circumstances.  The <strong>stack pointer</strong> register (S) keeps track of the current "top" of the stack as you push or pop values.<br /><br />The important thing about using the stack is that if you push 3 values---A then B and then C---and then try to pop 3 values, you know you will get the values C, B and A back in that order.  It doesn't matter exactly where they were stored (unless you try to store too many and run out of space!)<br /><br />Of course the stack abstraction is just that, a useful abstraction.  You can still access the stack memory addresses with normal instructions if you know the address.  But most of the time you won't want to know it.<br /><br />So a subroutine call (JSR) works by pushing two bytes (the return address) and then changing the PC to the new address.  When you return with an RTS or whatever, it will pop two bytes and set the PC back to that address, "return"ing you to the next instruction right after the JSR.<br /><br />An "interrupt" is a hardware event that causes the CPU to automatically push its old PC (and perhaps other info, such as flags?  it varies for different processor types, but the basic idea is the same) and then jump to a new address for handling the interrupt.  When you return from the interrupt (with e.g. an RTI instruction) it will pop those same bytes that were pushed when the interrupt occurred, and your program can resume doing whatever it was doing before it was "interrupted".  It won't even know the difference (unless you do something in your interrupt handler which affects the state of the main program).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=330">mozz</a> — Wed Jun 28, 2006 3:05 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2006-06-26T20:44:15-07:00</updated>
<published>2006-06-26T20:44:15-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1511&amp;p=14637#p14637</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1511&amp;p=14637#p14637"/>
<title type="html"><![CDATA[NMI vs. Vblank???]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1511&amp;p=14637#p14637"><![CDATA[
<div class="quotetitle">nineTENdo wrote:</div><div class="quotecontent"><br />So [the 6502 stack] starts $FF and goes to $00?<br /></div><br />Yes, it starts at $FF and grows toward $00. It goes through $FE, $FD, $FC, $FB, $FA, etc., with each push. A 'PHA' or 'PHP' is one push, a 'JSR' two pushes, and a 'BRK' or interrupt three pushes. Many games never push the stack pointer deeper than $C0, meaning they can use the rest of the memory normally used by the stack for other purposes. (The stack lives in addresses $0100 through $01FF of CPU memory.)<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />By the way thanks for the quick and lengthy reply.  I appreciate it very much:)<br /></div><br />At least it's easier than having only the donknotts clone to talk to.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Mon Jun 26, 2006 8:44 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Disch]]></name></author>
<updated>2006-06-26T16:12:29-07:00</updated>
<published>2006-06-26T16:12:29-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1511&amp;p=14625#p14625</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1511&amp;p=14625#p14625"/>
<title type="html"><![CDATA[NMI vs. Vblank???]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1511&amp;p=14625#p14625"><![CDATA[
<div class="quotetitle">nineTENdo wrote:</div><div class="quotecontent"><br />So is starts $FF and goes to $00?<br /></div><br /><br />Yes.  Not FF-&gt;00, but rather FF-&gt;FE-&gt;FD-&gt;...-&gt;01-&gt;00<br /><br />If the Stack Pointer (hereon: "SP") is $FF, pushing a value to the stack will change SP to $FE.  Pushing another value decreases SP again and makes it $FD.  Pulling would increase it.<br /><br />The stack lies in RAM on the $01xx page.  The top of the stack is determined by SP -- if SP is $E4, then the top of the stack is $01E4 (here, when I say "top", I mean the space which is to receive the next pushed value).  When SP is $FF it typically means the stack is empty -- hence why many games reset SP to that on startup.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />By the way thanks for the quick and lengthy reply.  I appreciate it very much:)<br /></div><br /><br />No prob ^^<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=33">Disch</a> — Mon Jun 26, 2006 4:12 pm</p><hr />
]]></content>
</entry>
</feed>