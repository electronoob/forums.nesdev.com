<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - 6502 Interupts</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">6502 Interupts</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=3&amp;t=4403">http://forums.nesdev.com/viewtopic.php?f=3&amp;t=4403</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>FlySwat</b> [ Mon Sep 22, 2008 7:48 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>6502 Interupts</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Can someone advice me if I am handling interupts correctly here?
<br />
<br />I have an Interupt Handler class in my CPU that monitors a flag for NMI and a flag for IRQ once per CPU cycle, if either flag is set, it executes the interupt and then clears the flag:
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp; public class InteruptHandler<br />&nbsp; &nbsp; &#123;<br />&nbsp; &nbsp; &nbsp; &nbsp; public bool IRQInterrupt = false;<br />&nbsp; &nbsp; &nbsp; &nbsp; public bool NMIInterrupt = false;&nbsp; &nbsp; &nbsp; &nbsp;<br /><br />&nbsp; &nbsp; &nbsp; &nbsp; public void DoInterupts&#40;&#41;<br />&nbsp; &nbsp; &nbsp; &nbsp; &#123;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if &#40;NMIInterrupt&#41;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#123;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; triggerNMI&#40;&#41;;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; NMIInterrupt = false;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#125;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; else if &#40;IRQInterrupt&#41;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#123;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; TriggerIRQ&#40;&#41;;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; IRQInterrupt = false;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#125;<br />&nbsp; &nbsp; &nbsp; &nbsp; &#125;<br /><br />&nbsp; &nbsp; &nbsp; &nbsp; public void TriggerIRQ&#40;&#41;<br />&nbsp; &nbsp; &nbsp; &nbsp; &#123;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // If I is set, the software wants to mask IRQ interupts.<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if &#40;!CPU.Registers.P.I&#41;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#123;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // Push return address onto stack.<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; CPU.Stack.Push&#40;&#40;byte&#41;&#40;&#40;CPU.PC &gt;&gt; 8&#41; &amp; 0xff&#41;&#41;;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; CPU.Stack.Push&#40;&#40;byte&#41;&#40;CPU.PC &amp; 0xff&#41;&#41;;<br /><br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // Push the status register onto the stack&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; CPU.Stack.Push&#40;CPU.Registers.P.Value&#41;;<br /><br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // Set Interrupt flag<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; CPU.Registers.P.I = true;<br /><br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // JMP to interrupt code<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; CPU.PC = &#40;CPU.Memory&#91;0xFFFe&#93; | &#40;CPU.Memory&#91;0xFFFF&#93; &lt;&lt; 8&#41;&#41;;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#125;<br />&nbsp; &nbsp; &nbsp; &nbsp; &#125;<br /><br />&nbsp; &nbsp; &nbsp; &nbsp; public void triggerNMI&#40;&#41;<br />&nbsp; &nbsp; &nbsp; &nbsp; &#123;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // Push return address onto stack.<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; CPU.Stack.Push&#40;&#40;byte&#41;&#40;&#40;CPU.PC &gt;&gt; 8&#41; &amp; 0xff&#41;&#41;;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; CPU.Stack.Push&#40;&#40;byte&#41;&#40;CPU.PC &amp; 0xff&#41;&#41;;<br /><br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // Push the status register onto the stack&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; CPU.Stack.Push&#40;CPU.Registers.P.Value&#41;;<br /><br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // JMP to interrupt code<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; CPU.PC = &#40;CPU.Memory&#91;0xFFFA&#93; | &#40;CPU.Memory&#91;0xFFFB&#93; &lt;&lt; 8&#41;&#41;;<br />&nbsp; &nbsp; &nbsp; &nbsp; &#125;<br />&nbsp; &nbsp; &#125;</div>
<br />
<br />DoInterupts() is called at the end of each CPU cycle.
<br />
<br />Is this the correct way to implement NMI and IRQ?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>jargon</b> [ Sat Sep 27, 2008 12:21 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: 6502 Interupts</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">FlySwat wrote:</div><div class="quotecontent">Can someone advice me if I am handling interupts correctly here?<br /><br />I have an Interupt Handler class in my CPU that monitors a flag for NMI and a flag for IRQ once per CPU cycle, if either flag is set, it executes the interupt and then clears the flag:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp; public class InteruptHandler<br />&nbsp; &nbsp; &#123;<br />&nbsp; &nbsp; &nbsp; &nbsp; public bool IRQInterrupt = false;<br />&nbsp; &nbsp; &nbsp; &nbsp; public bool NMIInterrupt = false;&nbsp; &nbsp; &nbsp; &nbsp;<br /><br />&nbsp; &nbsp; &nbsp; &nbsp; public void DoInterupts&#40;&#41;<br />&nbsp; &nbsp; &nbsp; &nbsp; &#123;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if &#40;NMIInterrupt&#41;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#123;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; triggerNMI&#40;&#41;;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; NMIInterrupt = false;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#125;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; else if &#40;IRQInterrupt&#41;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#123;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; TriggerIRQ&#40;&#41;;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; IRQInterrupt = false;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#125;<br />&nbsp; &nbsp; &nbsp; &nbsp; &#125;<br /><br />&nbsp; &nbsp; &nbsp; &nbsp; public void TriggerIRQ&#40;&#41;<br />&nbsp; &nbsp; &nbsp; &nbsp; &#123;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // If I is set, the software wants to mask IRQ interupts.<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if &#40;!CPU.Registers.P.I&#41;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#123;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // Push return address onto stack.<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; CPU.Stack.Push&#40;&#40;byte&#41;&#40;&#40;CPU.PC &gt;&gt; 8&#41; &amp; 0xff&#41;&#41;;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; CPU.Stack.Push&#40;&#40;byte&#41;&#40;CPU.PC &amp; 0xff&#41;&#41;;<br /><br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // Push the status register onto the stack&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; CPU.Stack.Push&#40;CPU.Registers.P.Value&#41;;<br /><br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // Set Interrupt flag<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; CPU.Registers.P.I = true;<br /><br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // JMP to interrupt code<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; CPU.PC = &#40;CPU.Memory&#91;0xFFFe&#93; | &#40;CPU.Memory&#91;0xFFFF&#93; &lt;&lt; 8&#41;&#41;;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#125;<br />&nbsp; &nbsp; &nbsp; &nbsp; &#125;<br /><br />&nbsp; &nbsp; &nbsp; &nbsp; public void triggerNMI&#40;&#41;<br />&nbsp; &nbsp; &nbsp; &nbsp; &#123;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // Push return address onto stack.<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; CPU.Stack.Push&#40;&#40;byte&#41;&#40;&#40;CPU.PC &gt;&gt; 8&#41; &amp; 0xff&#41;&#41;;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; CPU.Stack.Push&#40;&#40;byte&#41;&#40;CPU.PC &amp; 0xff&#41;&#41;;<br /><br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // Push the status register onto the stack&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; CPU.Stack.Push&#40;CPU.Registers.P.Value&#41;;<br /><br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // JMP to interrupt code<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; CPU.PC = &#40;CPU.Memory&#91;0xFFFA&#93; | &#40;CPU.Memory&#91;0xFFFB&#93; &lt;&lt; 8&#41;&#41;;<br />&nbsp; &nbsp; &nbsp; &nbsp; &#125;<br />&nbsp; &nbsp; &#125;</div><br /><br />DoInterupts() is called at the end of each CPU cycle.<br /><br />Is this the correct way to implement NMI and IRQ?</div><br /><br />i think you only do this when the "I" register flag is unset.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">-primary registers-<br />=register name ; desc=<br />A ; Accumulator<br />X ; Variable X<br />Y ; Variable Y<br /><br />-flag registers-<br />=bit ; flag name ; desc=<br />7 ; N ; negative result<br />6 ; V ; result overflowed<br />5 ; - ; &#40;unused&#41;<br />4 ; B ; BRK instruction used<br />3 ; D ; decimal mode<br />2 ; I ; interrupt disabled<br />1 ; Z ; result zero<br />0 ; C ; carry occured<br /></div>
<br />
<br />you seem to not be emulating the actual 8bit mask of the flags,
<br />otherwise looks okay to me, but then again i am a newb to _nes_ emu.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Disch</b> [ Sat Sep 27, 2008 8:56 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: 6502 Interupts</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Looks good to me except you should set the I flag on NMIs as well as IRQs.
<br />
<br />Also... if you're doing this between <em>cycles</em> like you claim that might be a problem.  IRQs/NMIs can only occur between CPU instructions.  If you attempt an interrupt in the middle of an instruction you could end up borking something.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>jargon</b> [ Sat Sep 27, 2008 6:38 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: 6502 Interupts</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Disch wrote:</div><div class="quotecontent">Looks good to me except you should set the I flag on NMIs as well as IRQs.<br /><br />Also... if you're doing this between <em>cycles</em> like you claim that might be a problem.  IRQs/NMIs can only occur between CPU instructions.  If you attempt an interrupt in the middle of an instruction you could end up borking something.</div>
<br />
<br />that is why i suggest emulating the actual flags mask.
<br />
<br />that way you refer to the mask between instructions, but edit the vars between cycles, and only refer to the mask to place into vars temporarily when emulating between instructions.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Disch</b> [ Sun Sep 28, 2008 10:53 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: 6502 Interupts</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Not sure I follow what you mean.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>MottZilla</b> [ Sun Sep 28, 2008 7:11 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />You should listen to Disch. What he said is correct. The CPU doesn't check for interrupts until it's done executing the current opcode. You cannot interrupt an opcode.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>