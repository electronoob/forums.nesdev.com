<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=3&amp;t=10866" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2014-01-14T08:29:15-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=3&amp;t=10866</id>
<entry>
<author><name><![CDATA[Zepper]]></name></author>
<updated>2014-01-14T08:29:15-07:00</updated>
<published>2014-01-14T08:29:15-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10866&amp;p=123828#p123828</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10866&amp;p=123828#p123828"/>
<title type="html"><![CDATA[Re: sound resample methods?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10866&amp;p=123828#p123828"><![CDATA[
Well, I took the *205/128 method to amplify the output by 1.6 at anyway. ^_^;;<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">*wavebuf = ((output_masterL / num_updates)*205/128) ^ 0x8000;</div><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=39">Zepper</a> — Tue Jan 14, 2014 8:29 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[thefox]]></name></author>
<updated>2014-01-08T18:27:01-07:00</updated>
<published>2014-01-08T18:27:01-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10866&amp;p=123522#p123522</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10866&amp;p=123522#p123522"/>
<title type="html"><![CDATA[Re: sound resample methods?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10866&amp;p=123522#p123522"><![CDATA[
<div class="quotetitle">blargg wrote:</div><div class="quotecontent"><br />On the topic of compiler optimization, since <a href="https://en.wikipedia.org/wiki/Modulo_operation" class="postlink">unfortunately</a> <a href="http://stackoverflow.com/questions/18917717/advantages-of-using-truncation-towards-minus-infinity-vs-towards-zero" class="postlink">C generally</a> (and I believe always in C99) uses round-towards-zero for divide, rather than round-towards-negative-infinity (<a href="https://biblio.ugent.be/input/download?func=downloadFile&amp;fileOId=452146" class="postlink">Euclidian division</a>), a compiler can't simply optimize just a signed divide-by-2^n to a right shift; when the operand is negative, it must adjust the result as well.<br /></div><br />Ah, I totally forgot about this, even though I have been bitten by it before.<br /><br />For curiosity's sake, here's what clang++ produces on x86 for &quot;a &gt;&gt; 7&quot; and for &quot;a / 128&quot; (a is an int):<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">// The case a &gt;&gt; 7, where ecx = a:<br />sar ecx, 7<br /><br />// The case a / 128, where eax = ecx = a:<br />sar ecx, 31<br />shr ecx, 25<br />add ecx, eax<br />sar ecx, 7<br /></div><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=80">thefox</a> — Wed Jan 08, 2014 6:27 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Zepper]]></name></author>
<updated>2014-01-08T16:47:47-07:00</updated>
<published>2014-01-08T16:47:47-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10866&amp;p=123519#p123519</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10866&amp;p=123519#p123519"/>
<title type="html"><![CDATA[Re: sound resample methods?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10866&amp;p=123519#p123519"><![CDATA[
Yup, got it.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=39">Zepper</a> — Wed Jan 08, 2014 4:47 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2014-01-08T15:53:52-07:00</updated>
<published>2014-01-08T15:53:52-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10866&amp;p=123513#p123513</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10866&amp;p=123513#p123513"/>
<title type="html"><![CDATA[Re: sound resample methods?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10866&amp;p=123513#p123513"><![CDATA[
<div class="quotetitle">Zepper wrote:</div><div class="quotecontent"><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">output = (value * 192) &gt;&gt; 7;<br />output_dac = (duty_sign)? -output: output;</div><br /></div><br /><div class="quotetitle">blargg wrote:</div><div class="quotecontent"><br />The NES DACs are not signed, BTW. They actually do <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">output_dac = duty_sign ? 0 : output</tt>. And it does make an audible difference; notes have less punch with signed.<br /></div><br /><div class="quotetitle">Zepper wrote:</div><div class="quotecontent"><br />From the wiki:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">0 1 1 0 0 0 0 0 (25%)</div><br /><br />I though it would generate a wave like _--_ _ _ _ _<br />Isn't that, but -_ _----- ???<br /></div><br /><div class="quotetitle">blargg wrote:</div><div class="quotecontent"><br />Where _ = -1, - = 0, and ` = 1, it would generate <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">-``-----</tt> rather than <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">_--_____</tt> or <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">_``_____</tt>.<br /></div><br /><div class="quotetitle">Zepper wrote:</div><div class="quotecontent"><br />Ah, ok. Well, I meant 0 as &quot;_&quot; and 1 as &quot;-&quot;. <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /></div><br />OK. This is about whether the DAC outputs say -4 +4 +4 -4 -4 -4 -4 -4 or 0 +4 +4 0 0 0 0 0 for the wave (the latter is what it does).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Wed Jan 08, 2014 3:53 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Zepper]]></name></author>
<updated>2014-01-08T15:41:09-07:00</updated>
<published>2014-01-08T15:41:09-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10866&amp;p=123512#p123512</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10866&amp;p=123512#p123512"/>
<title type="html"><![CDATA[Re: sound resample methods?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10866&amp;p=123512#p123512"><![CDATA[
Ah, ok. Well, I meant 0 as &quot;_&quot; and 1 as &quot;-&quot;. <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" /><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=39">Zepper</a> — Wed Jan 08, 2014 3:41 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2014-01-08T15:55:26-07:00</updated>
<published>2014-01-08T14:32:33-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10866&amp;p=123509#p123509</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10866&amp;p=123509#p123509"/>
<title type="html"><![CDATA[Re: sound resample methods?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10866&amp;p=123509#p123509"><![CDATA[
Where _ = -1, - = 0, and ` = 1, it would generate <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">-``-----</tt> rather than <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">_--_____</tt> or <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">_``_____</tt>.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Wed Jan 08, 2014 2:32 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Zepper]]></name></author>
<updated>2014-01-08T12:58:03-07:00</updated>
<published>2014-01-08T12:58:03-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10866&amp;p=123506#p123506</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10866&amp;p=123506#p123506"/>
<title type="html"><![CDATA[Re: sound resample methods?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10866&amp;p=123506#p123506"><![CDATA[
<div class="quotetitle">blargg wrote:</div><div class="quotecontent"><br />The NES DACs are not signed, BTW. They actually do <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">output_dac = duty_sign ? 0 : output</tt>. And it does make an audible difference; notes have less punch with signed.<br /></div><br /><br />From the wiki:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">0 1 1 0 0 0 0 0 (25%)</div><br /><br />I though it would generate a wave like _--_ _ _ _ _<br />Isn't that, but -_ _----- ???<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=39">Zepper</a> — Wed Jan 08, 2014 12:58 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2014-01-08T12:27:03-07:00</updated>
<published>2014-01-08T12:27:03-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10866&amp;p=123505#p123505</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10866&amp;p=123505#p123505"/>
<title type="html"><![CDATA[Re: sound resample methods?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10866&amp;p=123505#p123505"><![CDATA[
Since the OP was stuck on not even using multiplies, just shifts, I assumed that there were non-technical reasons for avoiding more flexible approaches, and stuck to one that was only slightly more &quot;daring&quot;.<br /><br />On the topic of compiler optimization, since <a href="https://en.wikipedia.org/wiki/Modulo_operation" class="postlink">unfortunately</a> <a href="http://stackoverflow.com/questions/18917717/advantages-of-using-truncation-towards-minus-infinity-vs-towards-zero" class="postlink">C generally</a> (and I believe always in C99) uses round-towards-zero for divide, rather than round-towards-negative-infinity (<a href="https://biblio.ugent.be/input/download?func=downloadFile&amp;fileOId=452146" class="postlink">Euclidian division</a>), a compiler can't simply optimize just a signed divide-by-2^n to a right shift; when the operand is negative, it must adjust the result as well.<br /><br /><div class="quotetitle">tepples wrote:</div><div class="quotecontent"><br />It's fine to rely on implementation-defined behavior so long as you use a compile-time assertion.<br /></div><br />And so long as most implementations have this behavior, otherwise you make your code break on things that don't, leaving the user to find an alternate implementation and be sure they catch every dependence on it.<br /><br /><div class="quotetitle">Zepper wrote:</div><div class="quotecontent"><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">output = (value * 192) &gt;&gt; 7;<br />output_dac = (duty_sign)? -output: output;</div><br /></div><br />That would work, and you could also do the upscaling from the NES 4-bit DAC to your 16-bit sample range. You wouldn't even need a right shift anymore, just a multiplier, e.g. <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">multiplier=gain*0.1*32767/15</tt> and then <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">output = dac * multiplier</tt>.<br /><br />The NES DACs are not signed, BTW. They actually do <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">output_dac = duty_sign ? 0 : output</tt>. And it does make an audible difference; notes have less punch with signed.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Wed Jan 08, 2014 12:27 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[James]]></name></author>
<updated>2014-01-08T11:32:35-07:00</updated>
<published>2014-01-08T11:32:35-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10866&amp;p=123503#p123503</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10866&amp;p=123503#p123503"/>
<title type="html"><![CDATA[Re: sound resample methods?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10866&amp;p=123503#p123503"><![CDATA[
<div class="quotetitle">Jarhmander wrote:</div><div class="quotecontent"><br />I don't know if there is significant speed gains on PCs...<br /></div><br />I just put together a quick test to compare an int multiplication and shift vs. a conversion to a double, multiplication, and conversion back to an int.  Test box is a Core i7-3770.  Code was compiled without optimizations.<br /><br />The int version is 2.1x faster than the x87 version but only 1.1x faster than the SSE2 version.  YMMV.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=88">James</a> — Wed Jan 08, 2014 11:32 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[thefox]]></name></author>
<updated>2014-01-08T11:02:20-07:00</updated>
<published>2014-01-08T11:02:20-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10866&amp;p=123502#p123502</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10866&amp;p=123502#p123502"/>
<title type="html"><![CDATA[Re: sound resample methods?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10866&amp;p=123502#p123502"><![CDATA[
<div class="quotetitle">Jarhmander wrote:</div><div class="quotecontent"><br />if you want to be 100% portable then don't use this code.<br /></div><br />Or replace the shift with an actual divide by 128. The compiler will optimize it when it can.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=80">thefox</a> — Wed Jan 08, 2014 11:02 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2014-01-08T10:50:22-07:00</updated>
<published>2014-01-08T10:50:22-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10866&amp;p=123501#p123501</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10866&amp;p=123501#p123501"/>
<title type="html"><![CDATA[Re: sound resample methods?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10866&amp;p=123501#p123501"><![CDATA[
<div class="quotetitle">Jarhmander wrote:</div><div class="quotecontent"><br />Watch out when using this code, because it relies on implementation-defined behavior (the signed right shift when using negative integers).<br /></div><br />It's fine to rely on implementation-defined behavior so long as you use a <a href="http://forums.nesdev.com/viewtopic.php?p=58209#p58209" class="postlink">compile-time assertion</a>. Undefined behavior is much trickier to test for, especially in compilers that optimize out your tests using the &quot;as if&quot; rule.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Basically, what blargg suggests you is using fixed-point arithmetic. I don't know if there is significant speed gains on PCs...<br /></div><br />Even if speed gains of fixed-point arithmetic are minimal, stability gains can be significant in some cases, as rounding introduces the same amount of noise throughout the output range.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Wed Jan 08, 2014 10:50 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Zepper]]></name></author>
<updated>2014-01-08T12:23:36-07:00</updated>
<published>2014-01-08T09:51:03-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10866&amp;p=123500#p123500</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10866&amp;p=123500#p123500"/>
<title type="html"><![CDATA[Re: sound resample methods?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10866&amp;p=123500#p123500"><![CDATA[
It would be possible for each sound channel, instead of applying it in the final mixed sample.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">output = (value * 192) &gt;&gt; 7;<br />output_dac = (duty_sign)? output: -output;</div><br /><strong>value</strong> is the <em>unsigned sample</em> generated in a channel. <strong><em>Usually</em></strong>, it would be:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">output_dac = (duty_sign)? : output: 0;</div><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=39">Zepper</a> — Wed Jan 08, 2014 9:51 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Jarhmander]]></name></author>
<updated>2014-01-08T09:28:58-07:00</updated>
<published>2014-01-08T09:28:58-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10866&amp;p=123499#p123499</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10866&amp;p=123499#p123499"/>
<title type="html"><![CDATA[Re: sound resample methods?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10866&amp;p=123499#p123499"><![CDATA[
<div class="quotetitle">blargg wrote:</div><div class="quotecontent"><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent"> // s = 16-bit sample, vol = 128 for 1.0, 192 for 1.5, etc.<br />int gain_clamp( int s, int vol )<br />{<br />    s = (s * vol) &gt;&gt; 7;<br />    if ( s &lt; -32768 )<br />        s = -32768;<br />    if ( s &gt; 32767 )<br />        s = 32767;<br />    return s;<br />}<br /></div><br /></div><br />Watch out when using this code, because it relies on implementation-defined behavior (the signed right shift when using negative integers). Almost all of the compilers I've used propagated the sign bit but if you want to be 100% portable then don't use this code.<br /><br />Basically, what blargg suggests you is using fixed-point arithmetic. I don't know if there is significant speed gains on PCs...<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=336">Jarhmander</a> — Wed Jan 08, 2014 9:28 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2014-01-07T22:16:42-07:00</updated>
<published>2014-01-07T22:16:42-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10866&amp;p=123485#p123485</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10866&amp;p=123485#p123485"/>
<title type="html"><![CDATA[Re: sound resample methods?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10866&amp;p=123485#p123485"><![CDATA[
So you have some kind of high-pass filter. That's good. Any reason you're using bit shifting for volume adjustments? Just multiply by say 192 then right shift by 7 and you have a 1.5 adjustment. Or *205&gt;&gt;7 for 1.6 adjustment. You have to do some kind of clamping, because that sounds much better than overflow which wraps around.<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent"> // s = 16-bit sample, vol = 128 for 1.0, 192 for 1.5, etc.<br />int gain_clamp( int s, int vol )<br />{<br />    s = (s * vol) &gt;&gt; 7;<br />    if ( s &lt; -32768 )<br />        s = -32768;<br />    if ( s &gt; 32767 )<br />        s = 32767;<br />    return s;<br />}<br /></div><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Tue Jan 07, 2014 10:16 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Zepper]]></name></author>
<updated>2014-01-07T19:34:18-07:00</updated>
<published>2014-01-07T19:34:18-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10866&amp;p=123479#p123479</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10866&amp;p=123479#p123479"/>
<title type="html"><![CDATA[Re: sound resample methods?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10866&amp;p=123479#p123479"><![CDATA[
Ninja Gaiden 3 - The Ancient Ship of Doom [Ninja Ryukenden 3 - Yomi no Hakobune] (1991)(Tecmo).rar<img src="http://imageshack.com/a/img834/9609/yuyw.png" alt="Image" /><br /><br />Default output setting, without the <em><strong>volume -= volume &gt;&gt; 1</strong></em> thing.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=39">Zepper</a> — Tue Jan 07, 2014 7:34 pm</p><hr />
]]></content>
</entry>
</feed>