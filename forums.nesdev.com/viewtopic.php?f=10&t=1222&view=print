<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Hex to Decimal suggestion</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Hex to Decimal suggestion</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=10&amp;t=1222">http://forums.nesdev.com/viewtopic.php?f=10&amp;t=1222</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>7</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Celius</b> [ Mon Mar 13, 2006 7:55 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Hex to Decimal suggestion</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I am making an RPG, and the max HP and the current HP are two different 16-bit variables. I want to display this value on the screen, but in decimal. So I want to read these bytes:
<br />
<br />$20 and $00
<br />
<br />and I want this:
<br />
<br />8192
<br />
<br />to show up on screen. I know of a way I could do this, but it'd take like 3 seconds, and that's SLOW. What do you guys suggest I do for this?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Mon Mar 13, 2006 8:05 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><a href="http://nesdevwiki.ath.cx/index.php/NESdevWiki" class="postlink">new wiki</a> &gt; <a href="http://nesdevwiki.ath.cx/index.php/Programming_Libraries" class="postlink">programming libraries</a> &gt; <a href="http://nesdevwiki.ath.cx/index.php/16-bit_BCD" class="postlink">16-bit binary to decimal</a> &gt; approx. 700 cycles to convert a 16-bit positive integer to an array of 5 decimal digits

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Celius</b> [ Mon Mar 13, 2006 8:27 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Thank you, I'm sorry, but 1/4 of this is C, and I don't know C. What's the main idea? Like what does the routine mainly do? Does it divide the hex digits by something, and output a decimal number? This is a little confusing. I'm sorry, once again, I don't know C, so a lot of that is just nonsense to me. I know a little C, but not much. I know like how to make a currency conversion DOS program, but that's it.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Mon Mar 13, 2006 9:28 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The content of the code block on <a href="http://nesdevwiki.ath.cx/index.php/16-bit_BCD" class="postlink">the page</a> is the entire content of a "bcd.s" file for use with CA65. I see no C, just pure 6502 assembly language. Perhaps you're getting hung up on the first four lines of the subroutine, which contain expressions that set the initial values. These expressions use <a href="http://www.cc65.org/doc/ca65-4.html" class="postlink">CA65 expression syntax</a>, which (granted) may remind a fellow of expressions in the C language.
<br />
<br />I've added an explanation of the algorithm to the code block.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Celius</b> [ Mon Mar 13, 2006 11:11 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I'm sorry, I'm really physicly ill right now, so I have no idea what's going on during your routine. I don't mean to be difficult, but that is made with an assembler that I am really not familiar with. I use WLA-DX, and it is nice raw 6502. This section:
<br />
<br />
<br />bcdConvert:
<br />  lda #$80 &gt;&gt; ((BCD_BITS - 1) &amp; 3)
<br />  sta curDigit
<br />  ldx #(BCD_BITS - 1) &gt;&gt; 2
<br />  ldy #BCD_BITS - 5
<br />
<br />You were right, I have NO idea what's happening here. Would you translate that to raw 6502 for me? I seriously have NO clue what that does. I looked at the syntaxt page, and I still don't know. Sorry, don't mean to be bothersome. I'm just ill with the flu or something, and I am so tired, I can't comprehend anything. Sorry again...
<br />
<br />EDIT: Also:
<br />
<br />ceil(log10(2) * x)
<br />
<br />what is that?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Tue Mar 14, 2006 3:50 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I'm sorry, I'm really physicly ill right now, so I have no idea what's going on during your routine. [...] Sorry, don't mean to be bothersome. I'm just ill with the flu or something, and I am so tired, I can't comprehend anything. Sorry again...</div>
<br />
<br />Here's an idea: turn off the computer and get some rest.
<br />
<br />&gt;&gt; is a right shift. $10 &gt;&gt; 1 = $80.
<br />&amp; is bitwise AND. $11 &amp; $10 = $10.
<br />log10() is the base-10 logarithm function.
<br />ceil rounds up to the next whole value.
<br />
<br />Use google for further information about logarithms.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Tue Mar 14, 2006 5:52 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Celius wrote:</div><div class="quotecontent">I'm sorry, I'm really physicly ill right now, so I have no idea what's going on during your routine. I don't mean to be difficult, but that is made with an assembler that I am really not familiar with. I use WLA-DX, and it is nice raw 6502.</div><br />I believe that WLA-DX supports a similar expression syntax. Look in the <a href="http://users.tkk.fi/~vhelin/wla.txt" class="postlink">WLA-DX manual</a> for a section "11... Arithmetics".<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"> This section:<br /><br /><br />bcdConvert:<br />  lda #$80 &gt;&gt; ((BCD_BITS - 1) &amp; 3)<br />  sta curDigit<br />  ldx #(BCD_BITS - 1) &gt;&gt; 2<br />  ldy #BCD_BITS - 5<br /><br />You were right, I have NO idea what's happening here. Would you translate that to raw 6502 for me?</div><br />If you have BCD_BITS set to 19 (the default), it evaluates to the following:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; lda #$20<br />&nbsp; sta curDigit<br />&nbsp; ldx #4<br />&nbsp; ldy #14<br /></div><br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Also:<br /><br />ceil(log10(2) * x)<br /><br />what is that?</div>
<br />log10() is used to mean a base-10 logarithm. For instance, log10(2) = 0.30103.
<br />
<br />ceil() means round up to to the nearest integer (e.g. ceil(1.1), ceil(1.5), ceil(1.9) and ceil(2.0) all evaluate to 2).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Tue Mar 14, 2006 10:44 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I always used the conversion routine I reverse-engineered from Final Fantasy. It works fine, and support up to 6 digits (24 bits).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Tue Mar 14, 2006 11:39 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">I always used the conversion routine I reverse-engineered from Final Fantasy.</div>
<br />But did you rewrite it from scratch, or did you flat out copy it? You claim it supports up to 999,999, but in how many cycles?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Tue Mar 14, 2006 11:56 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />It does quick repeat substraction using one different table per byte weight and per digit.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Tue Mar 14, 2006 12:59 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />tepples' routine seems pretty good. 700 hundred cycles is pretty fast for a 16-bit conversion.
<br />
<br />I wasn't able to get it to run OK though, back when he first posted it, 'cause of those expressions. At first I tried to evaluate them myself but got wrong results, and since then I haven't tried again. But now that he posted what they avaluate to as default I'll give another try soon.
<br />
<br />I'm still trying to understand the logic too, but it does seem promissing.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Tue Mar 14, 2006 1:04 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The logic is the same as a plain old long division routine, except instead of subtracting powers of 2, it subtracts what the powers of 2 end up as after conversion from BCD to binary.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Celius</b> [ Tue Mar 14, 2006 9:28 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I've come up with my own new routine now, and it takes less time than 1 Vblank. I had a variable decremented to be #$FF at the end of the routine, and in my NMI, I checked to see if the variable was decremented, and if it wasn't, increment VblankCounter. The VblankCounter remained to be 0, so it took less than 1 vblank to do that. I will comment the code and put it up later, like tommorow. What I do is I check how many Thousands there are, then Hundreds, then Tens, then Ones. It actually works nicely. There might be a bug or two in it that I need to fix, but I don't think so. It should be pretty fast. Also, I only have to check to $270F, because that's 9999, and that's the max HP for my RPG. The monsters have more of course, but their HP won't be shown on screen. It might be, but I'll think of that later. I'll post the code tommorow.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Tue Mar 14, 2006 10:01 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />If you don't want to cycle-count the whole thing (as I did), one thing you can do to profile a subroutine is wait for sprite 0, turn on grayscale mode, call the subroutine, and turn off grayscale mode. Then run the modified program and see how tall the white bar is. Every 9 scanlines on NTSC are worth 1023.0 cycles.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Wed Mar 15, 2006 3:30 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Celius wrote:</div><div class="quotecontent">I've come up with my own new routine now, and it takes less time than 1 Vblank. I had a variable decremented to be #$FF at the end of the routine, and in my NMI, I checked to see if the variable was decremented, and if it wasn't, increment VblankCounter. The VblankCounter remained to be 0, so it took less than 1 vblank to do that.</div>
<br />That is a <strong>horrible</strong> way to time the routine. Because of precision, I mean. "Less than 1 VBlank" is terribly vague, and not necessarily fast. I usually count the cycles on my routines, but that can get pretty boring for longer stuff with more conditional branches. tepples' idea is very good. It's easy to translate scanlines to CPU cycles, and you can easily see the variations in execution time as the grayscale bar varies it's height. I'll try that sometime.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>7</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>