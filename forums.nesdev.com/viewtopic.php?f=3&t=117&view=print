<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - PPU emulation</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">PPU emulation</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=3&amp;t=117">http://forums.nesdev.com/viewtopic.php?f=3&amp;t=117</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Mesofex</b> [ Thu Dec 23, 2004 3:31 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>PPU emulation</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Hello everyone, I have written the 6502 core already for my emulator (in java), I just need to know how one should go about writing the code to handle the ppu? I have read many documents and bits of source code on the subject but am still lost as how to go about it. Thanks in advance

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Hyde</b> [ Thu Dec 23, 2004 5:24 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Here are some threads you may want to read:
<br />
<br /><a href="http://nesdev.com/cgi-bin/wwwthreads/showpost.pl?Board=NESemdev&amp;Number=1931&amp;page=0&amp;view=collapsed&amp;sb=5" class="postlink">http://nesdev.com/cgi-bin/wwwthreads/showpost.pl?Board=NESemdev&amp;Number=1931&amp;page=0&amp;view=collapsed&amp;sb=5</a>
<br />
<br /><a href="http://nesdev.com/cgi-bin/wwwthreads/showpost.pl?Board=NESemdev&amp;Number=1905&amp;page=1&amp;view=collapsed&amp;sb=5" class="postlink">http://nesdev.com/cgi-bin/wwwthreads/showpost.pl?Board=NESemdev&amp;Number=1905&amp;page=1&amp;view=collapsed&amp;sb=5</a>
<br />
<br /><a href="http://nesdev.com/cgi-bin/wwwthreads/showpost.pl?Board=newbie&amp;Number=1392&amp;page=0&amp;view=collapsed&amp;mode=threaded&amp;sb=5#Post1392" class="postlink">http://nesdev.com/cgi-bin/wwwthreads/showpost.pl?Board=newbie&amp;Number=1392&amp;page=0&amp;view=collapsed&amp;mode=threaded&amp;sb=5#Post1392</a>
<br />
<br />You may also want to read Brad Taylor's document on PPU addressing logic.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Mesofex</b> [ Thu Dec 23, 2004 7:55 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />thanks a lot, ill get right on reading it and hopefully ill see graphics tonight or early tomorrow

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Mesofex</b> [ Thu Dec 23, 2004 9:31 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Thanks for the info, but I also need to know where to look in the ppu memory to find the graphics and how to draw them really because i cant figure out the docs that are out there.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Hyde</b> [ Fri Dec 24, 2004 11:03 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />VRAM Area $0000-$1fff is where you'd find the pattern tables, which contain graphical information about tiles referenced by the nametables, i.e. the stuff that actually gets drawn to the screen. 
<br />
<br />VRAM Area $2000-$3000 is where you will find the nametables. Note that there are actually only two physical tables, whereas the others are just mirrors. 
<br />
<br />VRAM Area $3f00-$3f20 is where the palette data can be found. 
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp; &nbsp; +---------+-------+-------+--------------------+<br />&nbsp; &nbsp; &nbsp; | Address | Size&nbsp; | Flags | Description&nbsp; &nbsp; &nbsp; &nbsp; |<br />&nbsp; &nbsp; &nbsp; +---------+-------+-------+--------------------+<br />&nbsp; &nbsp; &nbsp; | $0000&nbsp; &nbsp;| $1000 | C&nbsp; &nbsp; &nbsp;| Pattern Table #0&nbsp; &nbsp;|<br />&nbsp; &nbsp; &nbsp; | $1000&nbsp; &nbsp;| $1000 | C&nbsp; &nbsp; &nbsp;| Pattern Table #1&nbsp; &nbsp;|<br />&nbsp; &nbsp; &nbsp; | $2000&nbsp; &nbsp;| $3C0&nbsp; |&nbsp; &nbsp; &nbsp; &nbsp;| Name Table #0&nbsp; &nbsp; &nbsp; |<br />&nbsp; &nbsp; &nbsp; | $23C0&nbsp; &nbsp;| $40&nbsp; &nbsp;|&nbsp; N&nbsp; &nbsp; | Attribute Table #0 |<br />&nbsp; &nbsp; &nbsp; | $2400&nbsp; &nbsp;| $3C0&nbsp; |&nbsp; N&nbsp; &nbsp; | Name Table #1&nbsp; &nbsp; &nbsp; |<br />&nbsp; &nbsp; &nbsp; | $27C0&nbsp; &nbsp;| $40&nbsp; &nbsp;|&nbsp; N&nbsp; &nbsp; | Attribute Table #1 |<br />&nbsp; &nbsp; &nbsp; | $2800&nbsp; &nbsp;| $3C0&nbsp; |&nbsp; N&nbsp; &nbsp; | Name Table #2&nbsp; &nbsp; &nbsp; |<br />&nbsp; &nbsp; &nbsp; | $2BC0&nbsp; &nbsp;| $40&nbsp; &nbsp;|&nbsp; N&nbsp; &nbsp; | Attribute Table #2 |<br />&nbsp; &nbsp; &nbsp; | $2C00&nbsp; &nbsp;| $3C0&nbsp; |&nbsp; N&nbsp; &nbsp; | Name Table #3&nbsp; &nbsp; &nbsp; |<br />&nbsp; &nbsp; &nbsp; | $2FC0&nbsp; &nbsp;| $40&nbsp; &nbsp;|&nbsp; N&nbsp; &nbsp; | Attribute Table #3 |<br />&nbsp; &nbsp; &nbsp; | $3000&nbsp; &nbsp;| $F00&nbsp; |&nbsp; &nbsp;R&nbsp; &nbsp;|&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; |<br />&nbsp; &nbsp; &nbsp; | $3F00&nbsp; &nbsp;| $10&nbsp; &nbsp;|&nbsp; &nbsp; &nbsp; &nbsp;| Image Palette #1&nbsp; &nbsp;|<br />&nbsp; &nbsp; &nbsp; | $3F10&nbsp; &nbsp;| $10&nbsp; &nbsp;|&nbsp; &nbsp; &nbsp; &nbsp;| Sprite Palette #1&nbsp; |<br />&nbsp; &nbsp; &nbsp; | $3F20&nbsp; &nbsp;| $E0&nbsp; &nbsp;|&nbsp; &nbsp; P&nbsp; |&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; |<br />&nbsp; &nbsp; &nbsp; | $4000&nbsp; &nbsp;| $C000 |&nbsp; &nbsp; &nbsp;F |&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; |<br />&nbsp; &nbsp; &nbsp; +---------+-------+-------+--------------------+<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; C = Possibly CHR-ROM<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; N = Mirrored &#40;see Subsection G&#41;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; P = Mirrored &#40;see Subsection H&#41;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; R = Mirror of $2000-2EFF &#40;VRAM&#41;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; F = Mirror of $0000-3FFF &#40;VRAM&#41;<br /></div><br /><br />(Note: Extracted directly from NESTech.)<br /><br />How do you access all these VRAM areas? Well, first you set $2006 to the VRAM address you want to write to (i.e. $2000 if you wanna start writing data to the first nametable), then you write the data to $2007. <br /><br />One thing that may be confusing you is that VRAM is not part of the main memory area. Here is a map of the main memory:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp; +---------+-------+-------+-----------------------+<br />&nbsp; &nbsp; | Address | Size&nbsp; | Flags | Description&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|<br />&nbsp; &nbsp; +---------+-------+-------+-----------------------+<br />&nbsp; &nbsp; | $0000&nbsp; &nbsp;| $800&nbsp; |&nbsp; &nbsp; &nbsp; &nbsp;| RAM&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|<br />&nbsp; &nbsp; | $0800&nbsp; &nbsp;| $800&nbsp; | M&nbsp; &nbsp; &nbsp;| RAM&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|<br />&nbsp; &nbsp; | $1000&nbsp; &nbsp;| $800&nbsp; | M&nbsp; &nbsp; &nbsp;| RAM&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|<br />&nbsp; &nbsp; | $1800&nbsp; &nbsp;| $800&nbsp; | M&nbsp; &nbsp; &nbsp;| RAM&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|<br />&nbsp; &nbsp; | $2000&nbsp; &nbsp;| 8&nbsp; &nbsp; &nbsp;|&nbsp; &nbsp; &nbsp; &nbsp;| Registers&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|<br />&nbsp; &nbsp; | $2008&nbsp; &nbsp;| $1FF8 |&nbsp; R&nbsp; &nbsp; | Registers&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|<br />&nbsp; &nbsp; | $4000&nbsp; &nbsp;| $20&nbsp; &nbsp;|&nbsp; &nbsp; &nbsp; &nbsp;| Registers&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|<br />&nbsp; &nbsp; | $4020&nbsp; &nbsp;| $1FDF |&nbsp; &nbsp; &nbsp; &nbsp;| Expansion ROM&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|<br />&nbsp; &nbsp; | $6000&nbsp; &nbsp;| $2000 |&nbsp; &nbsp; &nbsp; &nbsp;| SRAM&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; |<br />&nbsp; &nbsp; | $8000&nbsp; &nbsp;| $4000 |&nbsp; &nbsp; &nbsp; &nbsp;| PRG-ROM&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|<br />&nbsp; &nbsp; | $C000&nbsp; &nbsp;| $4000 |&nbsp; &nbsp; &nbsp; &nbsp;| PRG-ROM&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|<br />&nbsp; &nbsp; +---------+-------+-------+-----------------------+<br /></div>
<br />
<br />I think NESTech covers this process pretty well, but I doubt you still have not read it. Let me know if you have more questions (you probably will).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Mesofex</b> [ Fri Dec 24, 2004 1:31 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />thanks a lot, it is starting to make sense now, ill see if I can make my emu draw graphics now, other than strange grey boxes.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Mesofex</b> [ Fri Dec 24, 2004 2:28 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Taken from nestech.txt (cant remember author) based on Fayzullin's nes.txt
<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><span style="color: green"><br /> C. Name Tables<br />  --------------<br />    The NES displays graphics using a matrix of "tiles"; this grid is called<br />    a Name Table. Tiles themselves are 8x8 pixels. The entire Name Table<br />    itself is 32x30 tiles (256x240 pixels). Keep in mind that the displayed<br />    resolution differs between NTSC and PAL units.<br /><br />    The Name Tables holds the tile number of the data kept in the Pattern<br />    Table (continue on).<br /><br /><br />  D. Pattern Tables<br />  -----------------<br />    The Pattern Table contains the actual 8x8 tiles which the Name Table<br />    refers to. It also holds the lower two (2) bits of the 4-bit colour<br />    matrix needed to access all 16 colours of the NES palette. Example:<br /><br />       VRAM    Contents of                     Colour <br />       Addr   Pattern Table                    Result<br />      ------ ---------------                  --------<br />      $0000: %00010000 = $10 --+              ...1.... Periods are used to<br />        ..       %00000000 = $00   |              ..2.2... represent colour 0.<br />        ..       %01000100 = $44   |              .3...3.. Numbers represent<br />        ..       %00000000 = $00   +-- Bit 0      2.....2. the actual palette<br />        ..       %11111110 = $FE   |              1111111. colour #.<br />        ..       %00000000 = $00   |              2.....2.<br />        ..       %10000010 = $82   |              3.....3.<br />      $0007: %00000000 = $00 --+              ........<br /><br />      $0008: %00000000 = $00 --+<br />        ..       %00101000 = $28   |<br />        ..       %01000100 = $44   |<br />        ..       %10000010 = $82   +-- Bit 1<br />        ..       %00000000 = $00   |<br />        ..       %10000010 = $82   |<br />        ..       %10000010 = $82   |<br />      $000F: %00000000 = $00 --+<br /><br />    The result of the above Pattern Table is the character 'A', as shown<br />    in the "Colour Result" section in the upper right.<br /></span></div><br /><br />I cannot understand the above, it does not really add up and Why would the 8x8 tile be split into two pieces?<br /><br />[/quote]<br /><span style="color: green"><br />  E. Attribute Tables<br />  -------------------<br />    Each byte in an Attribute Table represents a 4x4 group of tiles on the<br />    screen. There's multiple ways to describe what the function of one (1)<br />    byte in the Attribute Table is:<br /><br />      * Holds the upper two (2) bits of a 32x32 pixel grid, per 16x16 pixels.<br />      * Holds the upper two (2) bits of sixteen (16) 8x8 tiles.<br />      * Holds the upper two (2) bits of four (4) 4x4 tile grids.<br /><br />    It's quite confusing; two graphical diagrams may help:<br /><br />      +------------+------------+<br />      |  Square 0 |  Square 1 |  #0-F represents an 8x8 tile<br />      |   #0  #1   |   #4  #5    |<br />      |   #2  #3   |   #6  #7    |  Square [x] represents four (4) 8x8 tiles<br />      +------------+------------+   (i.e. a 16x16 pixel grid)<br />      |  Square 2  |  Square 3 |<br />      |   #8  #9    |   #C  #D  |<br />      |   #A  #B   |   #E  #F    |<br />      +------------+------------+<br /><br />    The actual format of the attribute byte is the following (and corris-<br />    ponds to the above example):<br /><br />       Attribute Byte<br />         (Square #)<br />      ----------------<br />          33221100<br />          ||||||+--- Upper two (2) colour bits for Square 0 (Tiles #0,1,2,3)<br />          ||||+----- Upper two (2) colour bits for Square 1 (Tiles #4,5,6,7)<br />          ||+------- Upper two (2) colour bits for Square 2 (Tiles #8,9,A,B)<br />          +--------- Upper two (2) colour bits for Square 3 (Tiles #C,D,E,F)<br /><br /></span><br />[/quote]
<br />
<br />The above sort of makes sense, but I still dont quite get it and dont know how to use this in my Emu.
<br />
<br />I was just wondering if you could help explain some of this, thanks in advance and thanks for being patient with me

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Zepper</b> [ Fri Dec 24, 2004 6:22 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />You're joking... I can't believe the "tell-me-how-'n-next" thing! &gt;_&lt;;;.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Mesofex</b> [ Fri Dec 24, 2004 8:12 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Sorry, dont mean to sound like "just gimme the code!" but I really dont understand how the heck it works

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Mesofex</b> [ Fri Dec 24, 2004 9:03 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Alright, i looked at a demo nes game and hededited the .chr file for the graphics, i found 8 bytes that draw a sprite of a ball, it is in binary format and thats easy enough to find and display, but what i have wanted to know (sorry, havnt been so clear up to now) is how the ppu decides what color to use for each pixel

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Fri Dec 24, 2004 10:16 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />A tile is divided into two 8-byte bitplanes, each of which is divided into eight 1-byte rows. Each row has 8 pixels; the most significant bit of each row is drawn on the left (except in horizontally flipped sprites). Thus, each pixel corresponds to a bit in the first plane and a bit in the second plane, and the color index value for each pixel is computed as follows:
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">Second&nbsp; First&nbsp; Pixel color<br />&nbsp;plane&nbsp; plane&nbsp; &#40;low 2 bits&#41;<br />&nbsp; bit&nbsp; &nbsp; bit<br />---------------------------<br />&nbsp; &nbsp;0&nbsp; &nbsp; &nbsp; 0&nbsp; &nbsp; Transparent<br />&nbsp; &nbsp;0&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;1<br />&nbsp; &nbsp;1&nbsp; &nbsp; &nbsp; 0&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;2<br />&nbsp; &nbsp;1&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;3</div>
<br />A slightly easier to read example of a tile shaped like the fraction 1/2 is in the "Pattern tables" section of <a href="http://nesdev.com/wiki/?page=NES+PPU" class="postlink">this NES Wiki page about the PPU</a>.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Mesofex</b> [ Sat Dec 25, 2004 3:10 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Ahh, thank you soo much, that has been bothering me, now Its all coming together. Thanks again, and btw merry christmas to everyone

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>