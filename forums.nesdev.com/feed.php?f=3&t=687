<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=3&amp;t=687" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2005-10-25T22:48:41-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=3&amp;t=687</id>
<entry>
<author><name><![CDATA[Anes]]></name></author>
<updated>2005-10-25T22:48:41-07:00</updated>
<published>2005-10-25T22:48:41-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=687&amp;p=5921#p5921</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=687&amp;p=5921#p5921"/>
<title type="html"><![CDATA[sprite 0 (attn: disch)]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=687&amp;p=5921#p5921"><![CDATA[
<div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />was it working with your old method?<br /></div><br /><br />yeah, it was working at a 90%, i use the code you gave me in a post that is: <br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">void ClockIRQCounter&#40;void&#41;<br />&#123;<br /><br />if &#40;g_MMC3.cIRQ == 0&#41; <br />   g_MMC3.cIRQ = g_MMC3.cReloadValue; //reload IRQ counter with reload value <br />else <br />&#123; <br />   g_MMC3.cIRQ--; // decrement IRQ counter <br /><br />   if &#40;&#40;g_MMC3.cIRQ == 0&#41; &amp;&amp; &#40;g_MMC3.IRQFlag&#41;&#41;//IRQ counter just became 0 and if MMC3 IRQs are enabled, raise 'IRQ pending' flag <br />      //g_lpCpuContext-&gt;IRQ_pending = TRUE;<br />      a6502IRQSignal&#40;&#41;;<br />&#125; <br /><br />&#125;<br /></div><br /><br />strange that its not working ah?<br />The thing i have a question when IRQ counter just become "0", what is better to directly execute the IRQ or to set a flag and then when cpu emu back to the main execute engine check the IRQ flag and raise it?<br />Well i hope this can help you to help me.<br />Thanks!<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=72">Anes</a> — Tue Oct 25, 2005 10:48 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Disch]]></name></author>
<updated>2005-10-25T22:33:16-07:00</updated>
<published>2005-10-25T22:33:16-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=687&amp;p=5920#p5920</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=687&amp;p=5920#p5920"/>
<title type="html"><![CDATA[sprite 0 (attn: disch)]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=687&amp;p=5920#p5920"><![CDATA[
<div class="quotetitle">Anes wrote:</div><div class="quotecontent"><br />and dont know what to do with my ppu_timestamp var (i normaly substract it from my cpu_timestamp var), i dont know if its well said in english i mean: ppu_timestamp -= cpu_timestamp.<br /></div><br /><br />subtract a frame's worth of cycles from all timestamps.<br /><br />I have something like the following:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">s32 framecycles = 262 * 341 * PPU_CYCBASE;  // master cycles in a frame<br /><br />RunCPU&#40;framecycles&#41;;<br />RunPPU&#40;framecycles&#41;;<br />RunAPU&#40;framecycles&#41;;<br /><br />cpu_timestamp -= framecycles;<br />ppu_timestamp -= framecycles;<br />apu_timestamp -= framecycles;<br /></div><br /><br />do not reset any timestamps to zero, since then you lose "spillover" cycles.  Cycles that went into the next frame should take away from the next frame's time.<br /><br /><br />As for your MMC3 problems, I can't really help ya.  Double check your MMC3 IRQ emulation (was it working with your old method?)<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=33">Disch</a> — Tue Oct 25, 2005 10:33 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Anes]]></name></author>
<updated>2005-10-25T21:22:32-07:00</updated>
<published>2005-10-25T21:22:32-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=687&amp;p=5918#p5918</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=687&amp;p=5918#p5918"/>
<title type="html"><![CDATA[sprite 0 (attn: disch)]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=687&amp;p=5918#p5918"><![CDATA[
i could get working sprite hit (althougth blargg's test still throw me errors).<br />but now im having problems in mmc3 games.<br />What im doing is the following:<br /><br />- on cycle 259 (0 - 340) i clock the irq counter if the conditions for clocking it are true.<br />- i runppu() when a chr swap is done.<br /><br />maybe im setting/clearing at a bad moment 2002.7 flag.<br />i do the following:<br /><br />- i set 2002.7 (and generate a NMI if enabled) at the end of the frame.<br />- im clearing it at cycle 0 of scanline = - 1 just after vblank pass.<br /><br />it seems that this of setting 2002.7 is not bad when i runcpu() after (((262 * 341) / 3) * 15) master cycles (a frame). <br />When runcpu() returns from the frame i catch up again the ppu (runppu(cpu_timestamp)) and dont know what to do with my ppu_timestamp var (i normaly substract it from my cpu_timestamp var), i dont know if its well said in english i mean: ppu_timestamp -= cpu_timestamp.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=72">Anes</a> — Tue Oct 25, 2005 9:22 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Disch]]></name></author>
<updated>2005-10-25T10:06:33-07:00</updated>
<published>2005-10-25T10:06:33-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=687&amp;p=5882#p5882</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=687&amp;p=5882#p5882"/>
<title type="html"><![CDATA[sprite 0 (attn: disch)]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=687&amp;p=5882#p5882"><![CDATA[
Well I can't really be specific since I don't know what your emu is doing.<br /><br />But the basic idea I've got working is:<br /><br />- Catch up the PPU on $2002 reads<br />- Set the Sprite 0 flag in your PPU emulator as you render pixels<br /><br />If sprite 0 flag isn't raising, then it could be you're not catching up as far as you need to be (or even at all?)<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=33">Disch</a> — Tue Oct 25, 2005 10:06 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Anes]]></name></author>
<updated>2005-10-25T06:59:51-07:00</updated>
<published>2005-10-25T06:59:51-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=687&amp;p=5874#p5874</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=687&amp;p=5874#p5874"/>
<title type="html"><![CDATA[sprite 0 (attn: disch)]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=687&amp;p=5874#p5874"><![CDATA[
mmm... im still having problems, i ran blargg's s0 hit test and it throw me "not working at all".<br /><br />any help?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=72">Anes</a> — Tue Oct 25, 2005 6:59 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Disch]]></name></author>
<updated>2005-10-24T15:41:32-07:00</updated>
<published>2005-10-24T15:41:32-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=687&amp;p=5842#p5842</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=687&amp;p=5842#p5842"/>
<title type="html"><![CDATA[sprite 0 (attn: disch)]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=687&amp;p=5842#p5842"><![CDATA[
Your post suddenly made it seem much simpler tepples!<br /><br />You only need to track the first scanline where 9+ sprites are found.  You can sort through sprites when the PPU is flipped on ($2001) and when sprite data is changed ($4014, $2004).  You don't even have to catch up the PPU... you can just keep a timestamp when the 8-sprite flag will raise.<br /><br />I just might have to impliment this now.  No more procrastinating ;D<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=33">Disch</a> — Mon Oct 24, 2005 3:41 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2005-10-24T15:15:56-07:00</updated>
<published>2005-10-24T15:15:56-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=687&amp;p=5837#p5837</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=687&amp;p=5837#p5837"/>
<title type="html"><![CDATA[sprite 0 (attn: disch)]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=687&amp;p=5837#p5837"><![CDATA[
<div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Then of course there's stuff for the 8-sprite flag... which I think is why I keep putting off this method of prediction. It's such a pain to track every scanline where the 8-sprite flag could raise and do checks like the above.<br /></div><br /><br />Heh, same issue I've had, though my approach is just to not implement it. If a game is polling it, you need to run the PPU every time since that 8th sprite might have just rendered. I don't think you can tally up the "sprites per scanline" at the beginning of the frame since sprite RAM can be modified mid-frame (correct?). Hmmm well I suppose you <em>could</em> do this ahead of time and only run the PPU on scanlines which have more than 8 sprites, and recalculate this if sprite RAM is modified mid-frame. Quite complex.<br /><br />So far I've only found Bee 52 to need the flag, so I hard-coded its time to scanline 21+164.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Mon Oct 24, 2005 3:15 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2005-10-24T15:10:43-07:00</updated>
<published>2005-10-24T15:10:43-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=687&amp;p=5836#p5836</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=687&amp;p=5836#p5836"/>
<title type="html"><![CDATA[sprite 0 (attn: disch)]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=687&amp;p=5836#p5836"><![CDATA[
<div class="quotetitle">Disch wrote:</div><div class="quotecontent"><br />Then of course there's stuff for the 8-sprite flag... which I think is why I keep putting off this method of prediction.  It's such a pain to track every scanline where the 8-sprite flag could raise and do checks like the above.<br /></div><br />You could calculate the next scanline to contain at least 8 sprites whenever $2001 is written to with the sprites turned on, and then you could mark those scanlines for catch-up on $2002 reads.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Mon Oct 24, 2005 3:10 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Disch]]></name></author>
<updated>2005-10-24T14:51:16-07:00</updated>
<published>2005-10-24T14:51:16-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=687&amp;p=5834#p5834</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=687&amp;p=5834#p5834"/>
<title type="html"><![CDATA[sprite 0 (attn: disch)]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=687&amp;p=5834#p5834"><![CDATA[
Yeah I've been meaning to organize a method for doing that and impliment it... but I keep putting it off.<br /><br />You'd only need to catch up when any one of the following is true:<br /><br />1)  PPU is before start of vblank + CPU is past start of vblank<br />2)  PPU is before end of vblank + CPU is past end of vblank<br />3)  Sprite 0 flag is clear + CPU is on on/after a spr0 scanline + PPU is on/before a spr0 scanline + BG and spr rendering are both enabled<br /><br /><br />Then of course there's stuff for the 8-sprite flag... which I think is why I keep putting off this method of prediction.  It's such a pain to track every scanline where the 8-sprite flag could raise and do checks like the above.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=33">Disch</a> — Mon Oct 24, 2005 2:51 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2005-10-24T14:46:01-07:00</updated>
<published>2005-10-24T14:46:01-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=687&amp;p=5831#p5831</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=687&amp;p=5831#p5831"/>
<title type="html"><![CDATA[sprite 0 (attn: disch)]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=687&amp;p=5831#p5831"><![CDATA[
Typo. Fixed. Thanks.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Mon Oct 24, 2005 2:46 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[WedNESday]]></name></author>
<updated>2005-10-24T14:43:22-07:00</updated>
<published>2005-10-24T14:43:22-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=687&amp;p=5829#p5829</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=687&amp;p=5829#p5829"/>
<title type="html"><![CDATA[sprite 0 (attn: disch)]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=687&amp;p=5829#p5829"><![CDATA[
<div class="quotetitle">tepples wrote:</div><div class="quotecontent"><br />You only need to catch up the PPU on $2002 writes during those scanlines where $2002 is likely to change, such as those that contain sprite 0 and thosethat contain &gt;= 8 sprites.<br /></div><br /><br />$2002 writes? Isn't $2002 read only?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=191">WedNESday</a> — Mon Oct 24, 2005 2:43 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2005-10-24T14:46:16-07:00</updated>
<published>2005-10-24T14:35:51-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=687&amp;p=5826#p5826</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=687&amp;p=5826#p5826"/>
<title type="html"><![CDATA[sprite 0 (attn: disch)]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=687&amp;p=5826#p5826"><![CDATA[
<div class="quotetitle">Disch wrote:</div><div class="quotecontent"><br />My emu checks for sprite 0 hit during pixel rendering (in the multiplexer), and then changes my 2002 status variable.  Then I catch up the CPU on every $2002 read.  (yeah it's not super efficient since wait-for-sprite-0-hit loops will have the PPU catching up every other instruction, but it works and is simple)<br /></div><br />You only need to catch up the PPU on $2002 reads during those scanlines where $2002 is likely to change, such as those that contain sprite 0 and thosethat contain &gt;= 8 sprites.<br /><br />EDIT: corrected<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Mon Oct 24, 2005 2:35 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Disch]]></name></author>
<updated>2005-10-24T09:23:11-07:00</updated>
<published>2005-10-24T09:23:11-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=687&amp;p=5814#p5814</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=687&amp;p=5814#p5814"/>
<title type="html"><![CDATA[sprite 0 (attn: disch)]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=687&amp;p=5814#p5814"><![CDATA[
"Catch up the CPU"?  Are you doing it backwards?  The idea is you run the CPU <strong>first</strong> then catch up the other areas (PPU/APU) as needed.  You shouldn't run the PPU ahead of the CPU, because the CPU can change PPU operation at any time... whereas all the influence the PPU/APU has on the CPU can be predicted, so you can safely run the CPU far ahead first.<br /><br />My emu checks for sprite 0 hit during pixel rendering (in the multiplexer), and then changes my 2002 status variable.  Then I catch up the CPU on every $2002 read.  (yeah it's not super efficient since wait-for-sprite-0-hit loops will have the PPU catching up every other instruction, but it works and is simple)<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=33">Disch</a> — Mon Oct 24, 2005 9:23 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Anes]]></name></author>
<updated>2005-10-24T06:12:05-07:00</updated>
<published>2005-10-24T06:12:05-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=687&amp;p=5805#p5805</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=687&amp;p=5805#p5805"/>
<title type="html"><![CDATA[sprite 0 (attn: disch)]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=687&amp;p=5805#p5805"><![CDATA[
Disch i finally could get working what you told me about "catch up the cpu", but im having problems with sprite 0 hit. Do i count the cycles to hit or do i "hit" in my multiplexer emu and then return from the ppu?<br /><br />Thanks in advance.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=72">Anes</a> — Mon Oct 24, 2005 6:12 am</p><hr />
]]></content>
</entry>
</feed>