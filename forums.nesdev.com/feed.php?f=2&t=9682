<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=2&amp;t=9682" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2013-01-14T04:42:29-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=2&amp;t=9682</id>
<entry>
<author><name><![CDATA[rainwarrior]]></name></author>
<updated>2013-01-14T04:42:29-07:00</updated>
<published>2013-01-14T04:42:29-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9682&amp;p=106155#p106155</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9682&amp;p=106155#p106155"/>
<title type="html"><![CDATA[Re: Skinny scrolling questions 2013]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9682&amp;p=106155#p106155"><![CDATA[
Oh right, I dunno what I was thinking. I guess it's been a long while since I uploaded OAM data any other way besides DMA.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5165">rainwarrior</a> — Mon Jan 14, 2013 4:42 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Dwedit]]></name></author>
<updated>2013-01-13T17:36:17-07:00</updated>
<published>2013-01-13T17:36:17-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9682&amp;p=106131#p106131</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9682&amp;p=106131#p106131"/>
<title type="html"><![CDATA[Re: Skinny scrolling questions 2013]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9682&amp;p=106131#p106131"><![CDATA[
OAM DMA doesn't use the VRAM address, it's a bunch of repeated writes to 2004.  It increments the OAM address 256 times.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=53">Dwedit</a> — Sun Jan 13, 2013 5:36 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[rainwarrior]]></name></author>
<updated>2013-01-13T16:05:42-07:00</updated>
<published>2013-01-13T16:05:42-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9682&amp;p=106125#p106125</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9682&amp;p=106125#p106125"/>
<title type="html"><![CDATA[Re: Skinny scrolling questions 2013]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9682&amp;p=106125#p106125"><![CDATA[
Another question: does the OAM DMA affect v at all, or does it have its own way of addressing the PPU bus?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5165">rainwarrior</a> — Sun Jan 13, 2013 4:05 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2013-01-09T15:42:30-07:00</updated>
<published>2013-01-09T15:42:30-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9682&amp;p=105849#p105849</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9682&amp;p=105849#p105849"/>
<title type="html"><![CDATA[Re: Skinny scrolling questions 2013]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9682&amp;p=105849#p105849"><![CDATA[
<div class="quotetitle">lidnariq wrote:</div><div class="quotecontent"><br />Does anything affect t other than the writes the CPU makes?<br /></div><br />AFAIK, the PPU only copies bits from t to v, it never does anything to t unless the CPU writes to $2005/$2006.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Unchanged from what? The initial scroll at the top of the screen? 0?<br /></div><br />The previous scroll value (which would be the initial scroll at the top of the screen if you didn't do anything mid-frame), most likely. I'll see if I can try this the next time I play with my PowerPak.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Wed Jan 09, 2013 3:42 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2013-01-09T14:40:54-07:00</updated>
<published>2013-01-09T14:40:54-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9682&amp;p=105846#p105846</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9682&amp;p=105846#p105846"/>
<title type="html"><![CDATA[Re: Skinny scrolling questions 2013]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9682&amp;p=105846#p105846"><![CDATA[
Yes.<br />Every $2006.2 write will reload all counters immediately.<br />$2005.1 writes reload the fine HScroll.<br />Otherwise only the coarse H scroll is reloaded at the begininging of all scanline.<br />All counters are reloaded at the end of VBlank.<br /><br />The later 3only if you are not in forced blank mode ($2001 is not set to 0).<br /><br />That's basically the only thing you have to remember really. Everything else can be easily deducted from these. I never understood the &quot;skinny scrolling&quot; doccument, but never had problem to change the scrolling midframe.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Wed Jan 09, 2013 2:40 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[lidnariq]]></name></author>
<updated>2013-01-09T14:29:49-07:00</updated>
<published>2013-01-09T14:29:49-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9682&amp;p=105845#p105845</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9682&amp;p=105845#p105845"/>
<title type="html"><![CDATA[Re: Skinny scrolling questions 2013]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9682&amp;p=105845#p105845"><![CDATA[
I have a related question (and no devcart to test on hardware, and no computer fast enough to make Visual2c02 not painful)-<br /><br />Does anything affect t other than the writes the CPU makes? Specifically, one could write to $2005 then $2006, which would load new values into x and the lower 8 bits of t, with the top 7 bits of t unchanged. Unchanged from what? The initial scroll at the top of the screen? 0?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3512">lidnariq</a> — Wed Jan 09, 2013 2:29 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[rainwarrior]]></name></author>
<updated>2013-01-08T18:13:46-07:00</updated>
<published>2013-01-08T18:13:46-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9682&amp;p=105798#p105798</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9682&amp;p=105798#p105798"/>
<title type="html"><![CDATA[Re: Skinny scrolling questions 2013]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9682&amp;p=105798#p105798"><![CDATA[
Okay, all this information has been added to the article. I have one final question.<br /><br />I added a section on the relationship between the v register and tile/attribute fetches. In particular I am confused about the attribute fetch, because it seems to me it should just be a simple bit-packing, but nintendulator's source has this 256 byte AttribLoc table to help look up the address, which makes me wonder if it's more complicated than that. There are no comments about AttribLoc in the source.<br /><br />So, is the following explanation correct?<br /><br /><a href="http://wiki.nesdev.com/w/index.php/The_skinny_on_NES_scrolling#Tile_and_attribute_fetching" class="postlink">http://wiki.nesdev.com/w/index.php/The_skinny_on_NES_scrolling#Tile_and_attribute_fetching</a><br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />The high bits of v are used for fine Y during rendering, and addressing nametable data only requires 12 bits, with the high 2 CHR addres lines fixed to the 0x2000 region. The address to be fetched during rendering can be deduced from v in the following way:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent"> tile address      = 0x2000 | (v &amp; 0x0FFF)<br /> attribute address = 0x23C0 | (v &amp; 0x0C00) | ((v &gt;&gt; 4) &amp; 0x38) | ((v &gt;&gt; 2) &amp; 0x07)</div><br />The low 12 bits of the attribute address are composed in the following way:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent"> NN 1111 YYY XXX<br /> || |||| ||| +++-- high 3 bits of coarse X (x/4)<br /> || |||| +++------ high 3 bits of coarse Y (y/4)<br /> || ++++---------- attribute offset (960 bytes)<br /> ++--------------- nametable select</div><br /></div><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5165">rainwarrior</a> — Tue Jan 08, 2013 6:13 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bananmos]]></name></author>
<updated>2013-01-08T16:02:39-07:00</updated>
<published>2013-01-08T16:02:39-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9682&amp;p=105789#p105789</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9682&amp;p=105789#p105789"/>
<title type="html"><![CDATA[Re: Skinny scrolling questions 2013]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9682&amp;p=105789#p105789"><![CDATA[
If you have an NTSC NES and a Powerpak, I would suggest playing around with the unfinished tech demo I linked to in <a href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=9571" class="postlink">this</a> post to get some more understanding of how the updates work , as I think it illustrates some of the known (and unknown) effects quite well. Though some of the peculiarities I think we will not get an answer to until the reverse engineering of the 2C02 based on the die is fully completed...<br /><br />(the code splits the screen twice during the scanline rendering rather than in hblank, in order to create a freely scrolling window in the middle of the screen. It starts up in a stable position, but is very sensitive to glitches when you start moving the window around. Think those can be fixed with even more tricky code though)<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=106">Bananmos</a> — Tue Jan 08, 2013 4:02 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2013-01-08T10:30:33-07:00</updated>
<published>2013-01-08T10:30:33-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9682&amp;p=105769#p105769</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9682&amp;p=105769#p105769"/>
<title type="html"><![CDATA[Re: Skinny scrolling questions 2013]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9682&amp;p=105769#p105769"><![CDATA[
Technically, doesn't the change to fine Y at X=251 affect which of the eight rows in the (unseen) 34th tile is fetched at X=253 and 255?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Tue Jan 08, 2013 10:30 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Dwedit]]></name></author>
<updated>2013-01-08T09:29:39-07:00</updated>
<published>2013-01-08T09:29:39-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9682&amp;p=105767#p105767</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9682&amp;p=105767#p105767"/>
<title type="html"><![CDATA[Re: Skinny scrolling questions 2013]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9682&amp;p=105767#p105767"><![CDATA[
Happening at dot 251 isn't really that odd, because of when the fetches happen to fill the 16-pixel wide shift register.  The fetches are basically done 16 dots earlier than you think they are.<br />These are the fetches the PPU does:<br />0,1: fetch tile<br />2,3: fetch attribute byte<br />4,5: fetch pattern byte 1<br />6,7: fetch pattern byte 2<br />Then when they're done, you have 8 pixels ready for the shift register.<br />So 16 pixels are buffered in the shift register before anything gets drawn.<br />Fine scroll just picks an offset into the shift register to draw pixels from.<br /><br />The fetches for pixel #0 start at dot 320, then pixel #8 starts at dot 328, then pixel #16 starts at dot 0, pixel #24 starts at dot 8, etc.  By the time you reach dot 251, you're doing the attribute fetch for the final tile on the right side of the screen.  After that's been fetched, the 'scroll address' isn't used for anything else on that scanline, so it's safe to increment.  Then you later reach dot 320, and you start fetching stuff for the next scanline.<br /><br />critical timings: Y scroll increments at dot 251, X scroll relatches at dot 257.<br /><br />If you want to do scroll raster effects, you do the 2006/2005/2005/2006 write thing.<br />The first 2006/2005 writes can happen any time after dot 257 of the previous scanline, because they won't have any visible effect on the currently rendering scanline.<br />The second 2005 write must finish at dot 256 or later to avoid a fine scroll artifact<br />The second 2006 write must finish before dot 320 to make the next fetches work correctly.<br />So you actually got quite a spread of time to do the scroll writes.<br />The NES's PPU doing a Y scroll increment at dot 251 will not affect your four write sequence at all, since it's applying it to the 'vram address', and that gets overwritten by your second write to 2006.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=53">Dwedit</a> — Tue Jan 08, 2013 9:29 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2013-01-08T07:27:42-07:00</updated>
<published>2013-01-08T07:27:42-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9682&amp;p=105762#p105762</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9682&amp;p=105762#p105762"/>
<title type="html"><![CDATA[Re: Skinny scrolling questions 2013]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9682&amp;p=105762#p105762"><![CDATA[
Just in case the code I linked to is not clear, here's a somewhat commented version:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">VRAM address: 0yyyNNYY YYYXXXXX<br />yyy: fine Y scroll;<br />NN: name table index;<br />YYYYY: coarse Y scroll;<br />XXXXX: coarse X scroll;<br />xxx: fine X scroll (not part of the address);<br /><br />;****************<br /><br />   ;start setting the scroll before HBlank (48 cycles)<br />   lda ScrollX+1<br />   lsr<br />   lda ScrollY+1<br />   rol<br />   asl<br />   asl<br />   sta $2006 ;bits that matter: ****NN**<br />   lda ScrollY+0<br />   sta $2005 ;bits that matter: YY***yyy<br />   asl<br />   asl<br />   and #%11100000<br />   ldx ScrollX+0<br />   sta ScrollX+0<br />   txa<br />   lsr<br />   lsr<br />   lsr<br />   ora ScrollX+0<br /><br />   ;finish setting the scroll during HBlank (11 cycles)<br />   stx $2005 ;bits that matter: *****xxx<br />   sta $2006 ;bits that matter: YYYXXXXX<br />   stx ScrollX+0<br />   <br />;****************<br />   <br />NOTE: ScrollX+0 is temporarilly used to create the second $2006 byte, but restored at the end.</div><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Tue Jan 08, 2013 7:27 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[rainwarrior]]></name></author>
<updated>2013-01-08T07:08:00-07:00</updated>
<published>2013-01-08T07:08:00-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9682&amp;p=105761#p105761</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9682&amp;p=105761#p105761"/>
<title type="html"><![CDATA[Re: Skinny scrolling questions 2013]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9682&amp;p=105761#p105761"><![CDATA[
<div class="quotetitle">tokumaru wrote:</div><div class="quotecontent"><br /><div class="quotetitle">rainwarrior wrote:</div><div class="quotecontent">Making scroll writes during hblank. Some threads have suggested this, but is it possible, and how? When I've tried to do scrolling in the past, I could never seem to get timings that accurate, so it was always necessary to pull it back from the right edge and accept some amount of glitching on the end of the line.<br /></div><br />I can assure you that clean splits are possible, I have done it with <a href="http://forums.nesdev.com/viewtopic.php?p=64111#p64111" class="postlink">this code</a>. Everything before the last 2 PPU writes do not affect rendering, and can be performed anywhere in the scanline. Only the last 2 PPU writes are timing-sensitive, and that's just 8 cycles out of the 28 of HBlank, so they're not that hard to fit at all (even when you account for the latency or IRQs and sprite hits).</div><br /><br />Yeah, I realized after thinking about it that when I was having problems with this was when I was trying to do X-only scroll with just $2005 writes, which I realize now can't be hidden in hblank because the reload of v happens too early. I have added an explanation of this to the article.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5165">rainwarrior</a> — Tue Jan 08, 2013 7:08 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2013-01-08T06:58:47-07:00</updated>
<published>2013-01-08T06:58:47-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9682&amp;p=105760#p105760</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9682&amp;p=105760#p105760"/>
<title type="html"><![CDATA[Re: Skinny scrolling questions 2013]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9682&amp;p=105760#p105760"><![CDATA[
<div class="quotetitle">rainwarrior wrote:</div><div class="quotecontent"><br />I looked at the nintendulator source, and it seemed to be doing it on pixel 250, but that can't be right, can it? Wouldn't that Y-shift the right edge of the screen? Or is the last tile always already fetched by then?<br /></div><br />Sounds right to me, the last tile's patterns have probably already been loaded by then.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />A corollary of that is that, if I am thinking about this correctly, you should set the Y scroll value to be Y-1 when you make your writes, since it's about to be incremented. Is this correct?<br /></div><br />I don't think so, since ideally the final $2006 write will happen during HBlank, after the PPU has incremented/reloaded the VRAM address.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />The fine x gets reloaded at the start/end of the line from a temporary register not listed in the document, doesn't it?<br /></div><br />I don't think the fine X scroll needs to be reloaded, since it's not modified by the PPU during rendering.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />If it didn't, it would be critical where exactly in the previous scanline you made the first $2005 write, which is not the case, as far as I have seen when trying it on the NES. Am I wrong about this?<br /></div><br />AFAIK, changes to the fine X scroll take effect immediately. Remember that $2005/$2006 share the 1st/2nd write latch, so the &quot;first&quot; $2005 write will actually look like the second one to the PPU if it comes after the first write to $2006.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Making scroll writes during hblank. Some threads have suggested this, but is it possible, and how? When I've tried to do scrolling in the past, I could never seem to get timings that accurate, so it was always necessary to pull it back from the right edge and accept some amount of glitching on the end of the line.<br /></div><br />I can assure you that clean splits are possible, I have done it with <a href="http://forums.nesdev.com/viewtopic.php?p=64111#p64111" class="postlink">this code</a>. Everything before the last 2 PPU writes do not affect rendering, and can be performed anywhere in the scanline. Only the last 2 PPU writes are timing-sensitive, and that's just 8 cycles out of the 28 of HBlank, so they're not that hard to fit at all (even when you account for the latency or IRQs and sprite hits).<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Glitches like this seem to be very normal for games with split scrolling... can it actually be avoided?<br /></div><br />For some reason lots of commercial games have glitched screen splits, but they can definitely be avoided. It seems that most developers back then didn't fully understand the $2005/$2006 behavior, and that building games just for adjusting this kind of timing issue wasn't a priority.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Tue Jan 08, 2013 6:58 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2013-01-08T06:52:38-07:00</updated>
<published>2013-01-08T06:52:38-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9682&amp;p=105759#p105759</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9682&amp;p=105759#p105759"/>
<title type="html"><![CDATA[Re: Skinny scrolling questions 2013]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9682&amp;p=105759#p105759"><![CDATA[
Fine X doesn't get &quot;reloaded&quot; periodically the way v gets reloaded from t. It's the select on a set of four 8 to 1 muxes coming out of the background tile reader.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Tue Jan 08, 2013 6:52 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[rainwarrior]]></name></author>
<updated>2013-01-08T06:35:56-07:00</updated>
<published>2013-01-08T06:35:56-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9682&amp;p=105758#p105758</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9682&amp;p=105758#p105758"/>
<title type="html"><![CDATA[Re: Skinny scrolling questions 2013]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9682&amp;p=105758#p105758"><![CDATA[
Well, the 5 coarse X bits are buffered in t, that part is fine.<br /><br />I guess the way to think about it is that the 3 bits of fine X do not change unless you write them. Maybe they get added to the lowest 3 bits of the line's pixel counter to determine when to advance the tile? My confusion was that I was thinking of fine X itself as the counter, since that's what the fine Y bits in v appear to be doing (at least, in nintendulator). If that was the case, it would need a reload every line, because if you were altering the counter directly via $2005 it would get out of phase. But even if fine X is the counter, there still needs to be an unchanging 3 bits to reload it from, so we could just call that fine X instead, so I guess it doesn't matter, either way there is something that correctly corresponds to the concept of the 3-bit fine X register.<br /><br />So you're right, it doesn't make a difference, I guess.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5165">rainwarrior</a> — Tue Jan 08, 2013 6:35 am</p><hr />
]]></content>
</entry>
</feed>