<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - N64 programming (libdragon)</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">N64 programming (libdragon)</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=23&amp;t=15988">http://forums.nesdev.com/viewtopic.php?f=23&amp;t=15988</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>2</strong> of <strong>5</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>calima</b> [ Sun May 28, 2017 1:00 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: N64 programming (libdragon)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />N64 interest is picking up <img src="./images/smilies/icon_wink.gif" alt=";)" title="Wink" /> Sadly it will be a while still before I have enough time.<br /><br />Things I was going to bench:<br />- various compression algos<br />- opus at normal bitrates (64kbps mono and 96kbps stereo), how much of a frame does it take<br />- openal-soft to see how 3d audio sounds on it, and how much does the mixing take (it's not usable in embedded commercial projects, though that may change)<br /><br />Maybe you want to try some of these? Opus is the current leading codec, better quality than Vorbis.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>calima</b> [ Sun May 28, 2017 1:26 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: N64 programming (libdragon)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Oh, I was also going to try a few video codecs at several bitrates and resolutions, to have a baseline for what could be done with FMVs given modern tech. Mpeg1, mpeg2 and the simple xvid profiles, at 640x480 and 320x240, a few bitrates. Mpeg1 is patent-free, last I checked so was mpeg2, mpeg4 would take some years but if the simple profiles are workable, you could just create a custom codec based on the ideas.<br /><br />Things like the older, indexed-color RAD codec would certainly work. I have read the RE2 article, where they achieved 15fps at reduced resolution and 16-bit colors IIRC, but they were under severe space constraints, and only used the GPU for colorspace conversion. Theora would be too heavy, based on quick tests on x86.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Sun May 28, 2017 12:03 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: N64 programming (libdragon)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Once I started looking into what's involved in N64 dev I became tempted to port Rockbox...<br /><br />Rockbox was ported to at least one MIPS-based portable music player, and they have some audio codec benchmarking data:<br /><!-- m --><a class="postlink" href="https://www.rockbox.org/wiki/CodecPerformanceComparison#MIPS">https://www.rockbox.org/wiki/CodecPerfo ... rison#MIPS</a><!-- m -->

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>BMBx64</b> [ Sun May 28, 2017 2:50 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: N64 programming (libdragon)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">calima wrote:</div><div class="quotecontent">N64 interest is picking up <img src="./images/smilies/icon_wink.gif" alt=";)" title="Wink" /> Sadly it will be a while still before I have enough time.<br /><br />Things I was going to bench:<br />- various compression algos<br />- opus at normal bitrates (64kbps mono and 96kbps stereo), how much of a frame does it take<br />- openal-soft to see how 3d audio sounds on it, and how much does the mixing take (it's not usable in embedded commercial projects, though that may change)<br /><br />Maybe you want to try some of these? Opus is the current leading codec, better quality than Vorbis.</div><br /><br />More people interested on N64 scene could be great  <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /> , main problem with the audio is the lack of threads on libdragon and the lack of RSP support (for fast mixing audio instead of the CPU), i guess these things could be implemented with time.<br /><br />I made an example of the flipping feature, replicating a bit the effect of Iridion 3D (GBA) which indeed uses a small portion of the screen, then the tiles are mirrored.<br /><img src="https://i.imgur.com/yp0zBRb.png" alt="Image" /><br /><br />The GBA uses a small area then scrolls, so i had to set 256x240 with black borders.<br /><img src="https://i.imgur.com/kUmXjpb.png" alt="Image" /><br /><br />The sprites are sets of 172x8 loaded only once on TMEM to be mirrored, it seems it takes a bit to load, they are 480 files and about 1,30MB for the full animation (16bit textures yet), i may find a method to speed up this.<br /><br />The example looks like this<br /><img src="https://i.imgur.com/895bgkF.gif" alt="Image" /><br /><br />DOWNLOAD<br /><a href="https://mega.nz/#!NowTCZiR!zjdeRzSzBwgweoAUCFt4y_wRz-L9mxwA_fheN_Z8p1Q" class="postlink">https://mega.nz/#!NowTCZiR!zjdeRzSzBwgweoAUCFt4y_wRz-L9mxwA_fheN_Z8p1Q</a><br /><br />I did a second build of SOTN OST, in case the problem is solved (here both versions works fine)<br /><a href="https://mega.nz/#!k9hGEDqS!CR53Lh-wb07-2wiS-OLQgR1s_XtrRQzIAnxmr7k5kgE" class="postlink">https://mega.nz/#!k9hGEDqS!CR53Lh-wb07-2wiS-OLQgR1s_XtrRQzIAnxmr7k5kgE</a>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>ccovell</b> [ Sun May 28, 2017 5:54 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: N64 programming (libdragon)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Very lovely, the work that you're doing.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>nicklausw</b> [ Sun May 28, 2017 7:05 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: N64 programming (libdragon)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />That looks absolutely amazing.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Drew Sebastino</b> [ Sun May 28, 2017 7:39 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: N64 programming (libdragon)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />It's nice to see 2D stuff on the N64 for once. How feasible would a fully functional 16x16 tile tilemap would be, with different graphics and flipping options per tile? I'd have thought you could do 16 layers or something like that if you wanted to until you posted the large explosion demo.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Sun May 28, 2017 8:50 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: N64 programming (libdragon)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">BMBx64 wrote:</div><div class="quotecontent">they are 480 files and about 1,30MB for the full animation (16bit textures yet), i may find a method to speed up this.<br /></div>The default timing on the parallel interface &quot;only&quot; affords â‰ˆ6MB per second. You can change it to be more aggressive, up to whatever limits your dev hardware supports.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>BMBx64</b> [ Wed May 31, 2017 8:21 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: N64 programming (libdragon)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Thanks  <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /> <br /><br />Im progressing very slowly, but i have added another feature.<br /><br /><strong>CONTROL POINTS</strong><br />This function brings a virtual center to X/Y coordinates plus support for multiple join sprites, mirrored sprites are aligned, the scaled textures will attempt to align equally but right now there is a small problem with precision.<br /><br />Textures on libdragon are 0,0 aligned, left pic, on the center the animation using custom coords for X/Y axis, the right pic shows the number of rectangles, sometimes they can fit TMEM (32x64) or split in parts.<br /><img src="http://i.imgur.com/Hsez7Uy.gif" alt="Image" /><br /><br />So i did 2 functions, with or without scale, since the last one does more stuff and its slower, these are internal so the real x/y coords from the user won't be affected.<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">void rdp_cp_sprite( int x, int y, int flags, int cp_x, int cp_y, int line );<br />void rdp_cp_sprite_scaled( int x, int y, double x_scale, double y_scale, int flags, int cp_x, int cp_y, int line );<br /></div><br /><br />When line is set to 1 the sprite follows the last one without the need to figure the coords.<br /><br />Program example:<br /><img src="http://i.imgur.com/88bLlV5.gif" alt="Image" /><br /><br />CONTROLS<br />A - Mirror horizontally<br />B - Mirror vertically<br />Z - Delays animation 1 second<br />L - Stops animation for a while<br />C up/dowm - Scale Y<br />Dpad - Joysticks - Moves the reference pointer<br /><br />DOWNLOAD<br /><a href="https://mega.nz/#!s0ATnZga!IdDcgNhDe8j1V2gM02LwLf3GJOo2xauhOFXlAFuXN_A" class="postlink">https://mega.nz/#!s0ATnZga!IdDcgNhDe8j1V2gM02LwLf3GJOo2xauhOFXlAFuXN_A</a><br />---<br /><br />Other things i would love to add, at least i want the RDP to draw them:<br />- Alpha blending for textures<br />- Alpha blending for colors (for fade on/fade off screen or other effects)<br />- Rotating Sprites<br />- Fix RDP Sprite Scale X<br />- Raster effects X/Y (Mega Drive style)<br />- Additive Blending (do the color mixing with the CPU then draw with RDP if this isnt supported), i already did a pc test, but i have to port the code.<br /><img src="http://i.imgur.com/tpwsUU9.gif" alt="Image" /><br /><br />---<br /><br /><div class="quotetitle">Espozo wrote:</div><div class="quotecontent">It's nice to see 2D stuff on the N64 for once. How feasible would a fully functional 16x16 tile tilemap would be, with different graphics and flipping options per tile? I'd have thought you could do 16 layers or something like that if you wanted to until you posted the large explosion demo.</div><br /><br />The problem is that the results has been inconsistent, i could have a test running at 60fps while showing 1004 sprites of 16x32, then just change a variable to &quot;static&quot; and now the results are 928 sprites instead of 1004 even if that variable have no use Â¿?, i have to look at the compiler options and do more research, or if anyone have clues about this i can look into it.<br /><br />I think 4bit textures could be faster than 16bit ones, on my tests N64 likes to fill TMEM with more data and do less calls, i think is good idea use 16x16 on the main layer and 32x32 or even 64x32 on background ones.<br /><br />Nintendo for example used 64x64 on the backgrounds (Yoshis Story):<br /><img src="http://i.imgur.com/u3Et8PH.png" alt="Image" /><br /><br /><div class="quotetitle">lidnariq wrote:</div><div class="quotecontent">The default timing on the parallel interface &quot;only&quot; affords â‰ˆ6MB per second. You can change it to be more aggressive, up to whatever limits your dev hardware supports.</div><br /><br />Do you know the memory address to change that or a bit more of info?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Wed May 31, 2017 8:56 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: N64 programming (libdragon)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">BMBx64 wrote:</div><div class="quotecontent">The problem is that the results has been inconsistent, i could have a test running at 60fps while showing 1004 sprites of 16x32, then just change a variable to &quot;static&quot; and now the results are 928 sprites instead of 1004 even if that variable have no use Â¿?, i have to look at the compiler options and do more research, or if anyone have clues about this i can look into it.<br /></div>The CPU speed on the N64 is going to be <em>heavily</em> influenced by whether things fit into its L1 cache or not. (and the L1 cache is only 24 KiB). You'll probably get better results from compiling with GCC's -Os than any other kind of optimizations.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Do you know the memory address to change [parallel interface timing] that or a bit more of info?<br /></div>Public documentation? There's not much useful. There are four registers for each of two different memory regions on the cart. Libdragon barely mentions this at all; only in passing in the linker script.<br /><br />This page: <!-- m --><a class="postlink" href="http://n64.icequake.net/mirror/www.crazynation.org/N64/">http://n64.icequake.net/mirror/www.crazynation.org/N64/</a><!-- m --> has a bit of low level information about, particularly:<br /><blockquote style="margin-left: 1%; padding-left: 1%; border-left: 3px solid #555577;">
The first word read is in the cart header address 0 [0x80371240] which sets the bus speed for subsequent cart access.<br />If you set it to 0x8037FF40 then the access timings for loading the boot code at 0x40 in the header would look like the first access at 0, where the read low signal was 4.0us. Can be useful for debugging since all bus activity is slowed down but still functional.
</blockquote> The IPL inside the PIF instructs the CPU to copy those four bytes to the registers at ... uh, ultimately, 0x04600014, 0x04600018, 0x0460001C, and 0x04600020. I guess libdragon's default MMU setup offsets the addresses to  0xA4600014 &amp;c.<br /><br />These registers that configure the speed of the PI <em>should</em> be part of libdragon's PI_regs_s structure (the one that initiates DMA) but, for whatever reason, are omitted. Possibly because it is easy to choose timings that are too aggressive? Supposedly no games ever change the defaults.<br /><br />All I know is that the ones that are actually counts are measured in terms of FSB clocks (i.e. 1/62.5MHz = 16ns), so that 0x12 = (18+1)Â·16=304 ns that /RD or /WR stays low.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>mic_</b> [ Thu Jun 08, 2017 5:34 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: N64 programming (libdragon)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Cool. You should think about doing a pull request to get your routines merged into libdragon (if you haven't already done so).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>BMBx64</b> [ Thu Jun 08, 2017 4:26 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: N64 programming (libdragon)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />lidnariq thanks for the info.<br /><br /><div class="quotetitle">mic_ wrote:</div><div class="quotecontent">Cool. You should think about doing a pull request to get your routines merged into libdragon (if you haven't already done so).</div><br /><br />I could try, but most of his files are 5 years old on github though.<br /><br />Also i found a more updated libdragon by Chilly Willy as well, it seems he added mouse support for the Doom port, he did also an example of ADPCM using the RSP.<br /><br />If anyone is interested his libdragon can be found here (12-11-2014):<br /><a href="http://krikzz.com/forum/index.php?topic=1886.msg24116#msg24116" class="postlink">http://krikzz.com/forum/index.php?topic=1886.msg24116#msg24116</a>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Fri Jun 09, 2017 12:32 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: N64 programming (libdragon)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I've looked into this a little more. An augmented PI_regs_s structure, adding the registers that you &quot;shouldn't&quot;(??) touch:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">typedef struct PI_regs_s {<br />&nbsp; &nbsp; /** @brief Uncached address in RAM where data should be found */<br />&nbsp; &nbsp; volatile void * ram_address;<br />&nbsp; &nbsp; /** @brief Address of data on peripheral */<br />&nbsp; &nbsp; uint32_t pi_address;<br />&nbsp; &nbsp; /** @brief How much data to read from RAM into the peripheral */<br />&nbsp; &nbsp; uint32_t read_length;<br />&nbsp; &nbsp; /** @brief How much data to write to RAM from the peripheral */<br />&nbsp; &nbsp; uint32_t write_length;<br />&nbsp; &nbsp; /** @brief Status of the PI, including DMA busy */<br />&nbsp; &nbsp; uint32_t status;<br /><br />&nbsp; &nbsp; /* (Number of FSB cycles)-1 after ALE_L falls before /RD or /WR<br />&nbsp; &nbsp; &nbsp; &nbsp;falls. Default value loaded from the ROM header: 0x40 -&gt; 1040ns */<br />&nbsp; &nbsp; uint32_t rom_time_after_address_latch;<br /><br />&nbsp; &nbsp; /* (Number of FSB cycles)-1 after /RD or /WR falls before it rises<br />&nbsp; &nbsp; &nbsp; &nbsp;again. Default value loaded from the ROM header: 0x12 -&gt; 304ns */<br />&nbsp; &nbsp; uint32_t rom_time_during_read_or_write;<br /><br />&nbsp; &nbsp; /* When the address autoincrement behavior would cause a carry-out into<br />&nbsp; &nbsp; &nbsp; &nbsp;this (address line)+1, PI must manually load address (e.g. 0=two<br />&nbsp; &nbsp; &nbsp; &nbsp;reads; 15=65536 reads). Default value from the ROM header: 7 -&gt;<br />&nbsp; &nbsp; &nbsp; &nbsp;perfectly-aligned DMA transfers will permit 256 reads at a time<br />&nbsp; &nbsp; &nbsp; &nbsp;before the hardware must load a new address. */<br />&nbsp; &nbsp; uint32_t rom_autoincrement_address_bits;<br /><br />&nbsp; &nbsp; /* no idea what this does. Random guess: amount of time /RD or /WR is<br />&nbsp; &nbsp; &nbsp; &nbsp;high between reads? Default value from ROM header: 3 ( -&gt; 64ns??) */<br />&nbsp; &nbsp; uint32_t rom_dunno;<br /><br />&nbsp; &nbsp; /* same as above four, but for the address region on the cart where<br />&nbsp; &nbsp; &nbsp; &nbsp;parallel-accessed save memory is kept */<br />&nbsp; &nbsp; uint32_t ram_time_after_address_latch;<br />&nbsp; &nbsp; uint32_t ram_time_during_read_or_write;<br />&nbsp; &nbsp; uint32_t ram_autoincrement_address_bits;<br />&nbsp; &nbsp; uint32_t ram_dunno;<br />} PI_regs_t;<br /></div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>mic_</b> [ Fri Jun 09, 2017 12:53 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: N64 programming (libdragon)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I could try, but most of his files are 5 years old on github though.</div><br />I think Shaun will respond if you do a pull request on github. I made one 9 months ago and IIRC he got back to me within a couple of days.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>mikejmoffitt</b> [ Fri Jun 09, 2017 1:52 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: N64 programming (libdragon)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">mic_ wrote:</div><div class="quotecontent"><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I could try, but most of his files are 5 years old on github though.</div><br />I think Shaun will respond if you do a pull request on github. I made one 9 months ago and IIRC he got back to me within a couple of days.</div><br />I'm going to his house tomorrow, so I can whine at him to check the repository.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>2</strong> of <strong>5</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>