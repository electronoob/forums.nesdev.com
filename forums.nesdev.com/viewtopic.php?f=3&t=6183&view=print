<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Does 6502 instruction fetching count as a memory read?</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Does 6502 instruction fetching count as a memory read?</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=3&amp;t=6183">http://forums.nesdev.com/viewtopic.php?f=3&amp;t=6183</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Petruza</b> [ Tue Mar 16, 2010 7:15 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Does 6502 instruction fetching count as a memory read?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I'm using the same function memory_read() to resolve addressing modes, but also to fetch the opcode at PC, and depending on the instruction length, fetching 1 or 2 more bytes starting at PC+1.
<br />The question that arises is if this reads into memory count as regular memory reads, in the sense that, for example, suppose that for some reason the PC is pointing to one byte before a memory-mapped register, then fetching the opcode will be fine, but fetching its operand, if any, will have a side effect of reading the register.
<br />Or it may even happen, I don't know if any game  uses this technique, but suppose that the PC at some point has the address of a memory-mapped register, would the opcode fetch read the register?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Disch</b> [ Tue Mar 16, 2010 7:20 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Yes.  They're all the same.
<br />
<br />Any fetch will count as a 'read' for registers.
<br />
<br />Even DMA from things like the DMC or $4014.
<br />
<br />
<br />EDIT:
<br />
<br />also note that some addressing modes have "dummy" reads/writes that can affect some registers.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Petruza</b> [ Tue Mar 16, 2010 7:34 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Disch wrote:</div><div class="quotecontent">also note that some addressing modes have "dummy" reads/writes that can affect some registers.</div>
<br />Oh please give some example

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dwedit</b> [ Tue Mar 16, 2010 7:37 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />LDA $1234,X will fetch both $1234 and $1234+X I think.  Not 100% sure on this, but I think that's one of them that does a dummy read.
<br />The read-write-modify instructions (INC, ASL, etc) do dummy writes, and the MMC1 chip only sees the dummy write, and not the final write.  Bill &amp; Ted's excellent adventure and a few other games rely on this.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Disch</b> [ Tue Mar 16, 2010 7:46 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Bill &amp; Ted's Excellent Video Game Adventure does this:
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">INC $FFFF ; where $FFFF = $FF<br /></div><br /><br />You might think it would read $FF, then write $00<br /><br />But it actually has a dummy write, so it will read $FF, write $FF, then write $00   (this impacts an MMC1 register)<br /><br />Ironsword does this:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">STA $4000,X&nbsp; ; where X = $15<br /></div>
<br />which <em>READS</em> $4015 (acknowledging the frame IRQ) before writing to $4015.  Failure to do the dummy read may be why this game was so often broken in emulators.
<br />
<br />
<br />Read this doc for outlines on what reads/writes are performed when and where (there's charts at the bottom)
<br />
<br /><!-- m --><a class="postlink" href="http://nesdev.com/6502_cpu.txt">http://nesdev.com/6502_cpu.txt</a><!-- m -->  (edit2:  specifically, read the "6510 Instruction Timing" section.  Ctrl+F the file to get to it)
<br />
<br />
<br />EDIT:  doh, I'm too slow.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Wed Mar 17, 2010 3:33 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Dwedit wrote:</div><div class="quotecontent">LDA $1234,X will fetch both $1234 and $1234+X I think.</div>
<br />It actually fetches three bytes of the instruction, then $1200 + &lt;($34+X) (with the bytes added without carry), then $1234+X if it differs.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Petruza</b> [ Wed Mar 17, 2010 5:42 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent"><div class="quotetitle">Dwedit wrote:</div><div class="quotecontent">LDA $1234,X will fetch both $1234 and $1234+X I think.</div><br />It actually fetches three bytes of the instruction, then $1200 + &lt;($34+X) (with the bytes added without carry), then $1234+X if it differs.</div>
<br />Tepples, what was the &lt;() notation? I think I knew it but I forgot. Is it a bitshift?
<br />
<br />Disch: thanks for the link!

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Wed Mar 17, 2010 5:47 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Petruza wrote:</div><div class="quotecontent"><div class="quotetitle">tepples wrote:</div><div class="quotecontent"><div class="quotetitle">Dwedit wrote:</div><div class="quotecontent">LDA $1234,X will fetch both $1234 and $1234+X I think.</div><br />It actually fetches three bytes of the instruction, then $1200 + &lt;($34+X) (with the bytes added without carry), then $1234+X if it differs.</div><br />Tepples, what was the &lt;() notation? I think I knew it but I forgot. Is it a bitshift?</div>
<br />Low byte. E.g. &lt;$6789 is $89 whereas &gt;$6789 is $67.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Petruza</b> [ Wed Mar 17, 2010 5:48 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent"><div class="quotetitle">Dwedit wrote:</div><div class="quotecontent">LDA $1234,X will fetch both $1234 and $1234+X I think.</div><br />It actually fetches three bytes of the instruction, then $1200 + &lt;($34+X) (with the bytes added without carry), then $1234+X if it differs.</div>
<br />
<br />Oh, so this is what happens always on absolute indexed addressing? the indexing occurs first on the low byte only?
<br />
<br />Damn, my cpu interpreter will take longer than I thought.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Wed Mar 17, 2010 6:06 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Petruza wrote:</div><div class="quotecontent"><div class="quotetitle">tepples wrote:</div><div class="quotecontent"><div class="quotetitle">Dwedit wrote:</div><div class="quotecontent">LDA $1234,X will fetch both $1234 and $1234+X I think.</div><br />It actually fetches three bytes of the instruction, then $1200 + &lt;($34+X) (with the bytes added without carry), then $1234+X if it differs.</div><br /><br />Oh, so this is what happens always on absolute indexed addressing? the indexing occurs first on the low byte only?</div>
<br />Yes. The 6502 has one 8-bit ALU and one 16-bit upcounter (for PC). To calculate a,x or a,y absolute indexed addressing in an instruction other than sta, stx, or sty, it uses the 8-bit ALU to first calculate the low byte while it fetches the high byte. If there's a carry out, it goes "oops", applies the carry using the ALU, and repeats the read at the correct address. Store instructions always have this "oops" cycle: the CPU first reads from the partially added address and then writes to the correct address. The same thing happens on (d),y indirect addressing.
<br />
<br />As for (d,x) indirect addressing, I don't know how many cycles that takes. As a programmer, I've never had a chance to use it in a loop. The only time I've ever used a table of addresses on zero page was in a music engine, where x had the possibility of being 0, 4, 8, or 12.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dwedit</b> [ Wed Mar 17, 2010 9:13 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Atari 2600 games love zeropage indexed addressing mode.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Wed Mar 17, 2010 9:33 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />All ($xx,X) instructions takes 6 cycles according to this. : <a href="http://www.6502.org/tutorials/6502opcodes.html" class="postlink">http://www.6502.org/tutorials/6502opcodes.html</a>
<br />However this page contains at least 1 error : and $xx is 3 cycles and not 2.
<br />
<br />For the 6 cycles it should be like that :
<br />1) Read opcode
<br />2) Read argument
<br />3) Read $xx+X
<br />4) Read $xx+X+1
<br />5) Read [$xx+X]
<br />
<br />So there is one more dummy read in the process too.
<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">As for (d,x) indirect addressing, I don't know how many cycles that takes. As a programmer, I've never had a chance to use it in a loop. The only time I've ever used a table of addresses on zero page was in a music engine, where x had the possibility of being 0, 4, 8, or 12.</div>
<br />It's fun, because I also only used the lda ($xx,X) instruction only one time for my music engine. Sounds like it's a common way to do it.
<br />
<br />Also maybe I used this instruction with X = 00 in all cases, if Y was busy with something else, I'm not sure exactly, but it doesn't really count.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Disch</b> [ Wed Mar 17, 2010 10:36 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Close @ the reads.  It is 6 cycles like you said, but you only listed 5 of them.
<br />
<br />The doc I linked to before lays it out:  <!-- m --><a class="postlink" href="http://nesdev.com/6502_cpu.txt">http://nesdev.com/6502_cpu.txt</a><!-- m -->
<br />
<br />
<br />1)  Read PC (opcode)
<br />2)  Read PC+1 (argument)
<br />3)  Read $xx (dummy read, gives time to add X to $xx)
<br />4)  Read $xx+X (low byte)
<br />5)  Read $xx+X+1 (high byte)
<br />6)  Read ($xx+X) (final data)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Wed Mar 17, 2010 11:35 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />There are some <a href="http://nesdev.com/bbs/viewtopic.php?p=31629" class="postlink">dummy read test ROMs</a> available.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>