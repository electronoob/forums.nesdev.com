<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Rather silly RTI question</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Rather silly RTI question</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=10&amp;t=4961">http://forums.nesdev.com/viewtopic.php?f=10&amp;t=4961</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Celius</b> [ Mon Mar 16, 2009 2:27 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Rather silly RTI question</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />So I understand when the NMI is executed, the processor status is pushed on the stack and RTI pulls that off along with the PC. I was wondering if you could do something like this:
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp;php<br />&nbsp; &nbsp;jsr Routine<br />&nbsp; &nbsp;....<br /><br /><br />Routine:<br />&nbsp; &nbsp;blah code<br />&nbsp; &nbsp;rti<br /></div>
<br />
<br />To save cycles by combining RTS and PLP. Would that be possible? Or is there something RTI does that goes beyond just RTS + PLP? Also, does it pull P then PC, or PC then P?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Mon Mar 16, 2009 3:44 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />That won't work, because RTI returns to the address from the stack, while RTS adds one to the address. For other aspects of RTI, consult a <a href="http://www.google.com/search?q=6502+rti" class="postlink">6502 instruction reference</a>.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Celius</b> [ Mon Mar 16, 2009 7:55 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Okay, that makes sense.
<br />
<br />Though it is technically possible, believe it or not. It might be pretty impractical, but you could make the high byte of the address (I'm assuming that's what would be read upon performing RTI) into a valid opcode followed by a .db statement for the argument. Though it would have to be the right opcode. This is doable since the load opcodes are beyond $80, which would be the high byte of any ROM address. So:
<br />
<br />PHP
<br />JSR $A932
<br />.db $20
<br />STA $37
<br />
<br />$A932:
<br /> ...
<br /> RTI
<br />
<br />would probably work. JSR would push the PC of the high byte of JSR $A932 onto the stack. RTI would return to that byte, and read the opcode $A9 followed by $20 (LDA #$20) then STA $37. If I ever need to save a whopping 4 cycles, I guess I could do that, haha.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Tue Mar 17, 2009 1:06 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />No, as Blargg points, RTS adds one to the adress, that means the adress saved is one less than the actual return adress. You could do something like that :
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">PHP<br />JSR $EA32&nbsp; &nbsp;;When returning a NOP is executed<br />STA $37<br /><br />$EA32:<br />....<br />PHP<br />...<br />RTI </div>
<br />But that would be insane and not very usefull in my opinion.
<br />Alternatively you could use RTI as an indirect jump using the stack, but RTS does it as well if you correct the adress in your jump table.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Celius</b> [ Tue Mar 17, 2009 1:28 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I don't see how the example I provided wouldn't work, still. Take a look at this piece of code:
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">PHP<br />JSR $A932<br />.db $20<br />STA $37<br /><br />$A932:<br />...<br />RTI<br /></div><br /><br />That first section compiles to:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">.db $08, $20, $32, $A9, $20, $85, $37<br /></div><br /><br />Say that would be at $C300, so each byte would be at:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">$C300: $08<br />$C301: $20 $32 $A9<br />$C304: $20<br />$C305: $85 $37<br /></div><br /><br />When JSR $A932 is executed at $C301, it pushes $C303 onto the stack. RTI would return to $C303, where the code would then translate to:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">$C303: $A9 $20<br />$C305: $85 $37<br /></div><br /><br />Or in other words<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">LDA #$20<br />STA $37<br /></div>
<br />
<br />Am I right?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Tue Mar 17, 2009 1:31 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Oh yeah it looks like it will work I am sorry. For some reason I tought you got it backwards, that the .db $20 was supposed to be dummy and never executed, and that sta $37 was supposed to be exectued straight away. Sorry, you were right all the way along and I am the one mistaking (altough my exemple is still "correct").

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Tue Mar 17, 2009 3:31 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />So we find that this technique is good to use when writing obfuscated code. Perhaps if it were combined with having the code after the JSR look normal, so someone reading it wouldn't see that there's really a different instruction executed after. Perhaps even make it look like the programmer was just clueless as to the difference between RTI and RTS, further hiding the intentional nature.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Celius</b> [ Tue Mar 17, 2009 3:44 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">Oh yeah it looks like it will work I am sorry. For some reason I tought you got it backwards, that the .db $20 was supposed to be dummy and never executed, and that sta $37 was supposed to be exectued straight away. Sorry, you were right all the way along and I am the one mistaking (altough my exemple is still "correct").</div>
<br />
<br />We both had the same idea pretty much, so I assumed there was just a misunderstanding of some sort <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /> .
<br />
<br />Yeah, so if you want to make code that's obscure or you want to confuse someone who's reading it, then this is a good technique. But it also saves cycles/space if applied correctly. The circumstances under which this technique could be useful aren't so uncommon. If you want to go to a routine that destroys the processor status and loads A/X/Y upon returning, that saves 1 byte and 4 cycles. Hmm, maybe not worth it, but interesting nonetheless.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Jarhmander</b> [ Tue Mar 17, 2009 10:41 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />that reminds me something...
<br />because BRK is treated as a 2 byte instruction, it pushes PC+2 and when RTIing the byte next to BRK is ignored. That extra byte can be used as a  parameter in the IRQ/BRK handler. <a href="http://en.wikipedia.org/wiki/BRK" class="postlink">http://en.wikipedia.org/wiki/BRK</a>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>koitsu</b> [ Wed Mar 18, 2009 9:45 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Yup, which is useful for debugging -- except that not every environment (emulator) has support for trapping on BRK, and nothing guarantees they support 2-byte BRK.
<br />
<br />Hell, lots of disassemblers still disassemble BRK as a 1-opcode instruction, which really pisses me off.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Celius</b> [ Wed Mar 18, 2009 1:28 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />What's even the point of the argument in BRK?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dwedit</b> [ Wed Mar 18, 2009 1:50 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Because you can read it after it has entered the IRQ code.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Wed Mar 18, 2009 2:22 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Is it just an artifact of the hardware design? The idea being that no matter how much it increments the PC, a BRK handler can compensate for this. A few extra instructions are cheaper than extra hardware, and I don't think BRK was meant for performance, just a simple debugging facility.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Wed Mar 18, 2009 4:30 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">blargg wrote:</div><div class="quotecontent">I don't think BRK was meant for performance</div>
<br />In fact, I know it wasn't. See, for example, <a href="http://nesdev.com/bbs/viewtopic.php?t=816" class="postlink">this topic</a> where I disprove any performance claims of using BRK as a syscall mechanism.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>frantik</b> [ Thu Mar 19, 2009 3:09 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />so it seems like RTI would be useful for making jump tables....?

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>