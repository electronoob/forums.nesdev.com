<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Object collision</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Object collision</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=352">http://forums.nesdev.com/viewtopic.php?f=2&amp;t=352</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>4</strong> of <strong>8</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Thu Sep 08, 2005 9:15 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Design the data as you like, I recoomend not using any compression the first time, then, you can found some compression algorithms on the net or make your own, depending of how the data is organized.
<br />The usual way is to beak a map into blocks, and each blocks will have it's own index to tile data, attributes, collision and stuff. You can do as much "block data levels" as you like. You can also do blocks that will point to other smaller blocks (I do this in my game).
<br />To set it on the screen, turn it off then write all NamTables, and palettes to eventually turn it on later.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>-tokumaru-</b> [ Thu Sep 08, 2005 11:33 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">To set it on the screen, turn it off then write all NamTables, and palettes to eventually turn it on later.</div>
<br />
<br />Just a little question here: do you *NEED* to turn the screen off to write to the PPU during vblank? Or is it just a safety thing? I'd bet it is just to be safe...

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>-tokumaru-</b> [ Thu Sep 08, 2005 11:48 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Bregalad is right Celius. You shouldn't be worried about RLE or any compression just yet. And since you're working on a pacman kind of game, the maps are not very large and don't occupy much space, so you don't need compression anyway.
<br />
<br />I think you should draw your maps directly in ROM, using .db statements. Arrange your map in a 2-D array (32x30, for example). So after your player just moved, and you want to check for a collision against a specific block (at position XPos, YPos), just use this formula to read the block from ROM:
<br />
<br />(base map address) + (YPos * 32) + XPos
<br />
<br />This will give you the right address of the block you want to ckeck. Once you loaded it, you can tell if it is solid or empty, and decide if the player can go through or not.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Celius</b> [ Thu Sep 08, 2005 3:51 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Okay, but is there a way to say that if your player's x and y pos reach this tile number (I'm referring to in the pattern table, not name table), collide? I'm kind of getting an idea how to do this, but not really. Please explain if there's any way to do that.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Thu Sep 08, 2005 4:14 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Celius wrote:</div><div class="quotecontent">Okay, but is there a way to say that if your player's x and y pos reach this tile number (I'm referring to in the pattern table, not name table), collide? I'm kind of getting an idea how to do this, but not really. Please explain if there's any way to do that.</div>
<br />
<br />Well, you might just make up a "code" like this: tiles from 0 to 127 are "empty" and tiles from 128 to 255 are "solid". If your game does not use many graphics, this works well.
<br />
<br />Just load the tile number from your map, as I said before. If it is in the range 128-&gt;255 (bit 7 set) you don't let the player go by. There is your collision.
<br />
<br />Just be carefull about one thing: your player coordinates have pixel-accuracy, so you must get rid of that when checking the background, wich has only tile-accuracy. So, you must divide the player coordinates by 8 (shift right 3 times) to get the tile coordinates. Also, you must account for your player's size when checking for collisions to the right and bottom. But of course, this can vary depending on the way you handle your player's coordinates (I'm assuming the player coords refer to the top left corner of it).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Celius</b> [ Thu Sep 08, 2005 6:39 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Well, I'm just trying to figure out a way to make a semi-small routine that will automaticly check for collision. Is there any way that you can have the routine automaticly check every byte to see if bit 7 is set, for every map? not like, oh yeah, just check each individual tile on the Name Table for collision, I don't want to do that. I wish you could just say this:
<br />
<br />collide:
<br />          load 1 byte, starting with the first one
<br />          if bit 7 is set
<br />          collide
<br />          load 1 byte, starting with the first one 
<br />          if bit 7 is not set
<br />          don't collide
<br />          go to next byte
<br />          loop this routine for a long long long time.
<br />
<br />Do you know what I mean? instead of repetative asm that is tedious and ends up causing problems, just have one nice little routine. Is this possible?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Thu Sep 08, 2005 7:41 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Celius wrote:</div><div class="quotecontent">Well, I'm just trying to figure out a way to make a semi-small routine that will automaticly check for collision. Is there any way that you can have the routine automaticly check every byte to see if bit 7 is set, for every map?</div>
<br />
<br />Why would you want to check the whole map? You only need to check the tiles close to the player, since those are the only tiles the player can collide with. If the player is at the bottom of the screen, for example, there is no way he can collide with a block at the top of the screen!
<br />
<br />Look at the pseudo-code example I posted a while ago. You move the player, still not knowing if this movement is allowed or not. Then you check if the player "entered" a wall. Now, if your player was moving right, you only need to check the tiles to his right! If you are moving to one direction, there is no way you'll collide in the other! See the beauty of it?!
<br />
<br />In the example I posted, I only checked for the tiles where the player was. That's what you have to do. Only check the surroundings of the player. If you moved right, check the tiles to the right. If they are empty (no bit 7), let it be. Otherwise, move the player back. This will cause the effect of collision.
<br />
<br />Look, I can't give you'exact information since I don't know the size of your player or the size of your tiles, etc. But tipically you'll only need to check a few tiles in the direction you are moving. Depending on the size of the player, something around 3 checks is enough. If you check the whole map, It will be terribly slow, and there is absolutelly no reason for this.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Celius</b> [ Thu Sep 08, 2005 8:58 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Oh, so something like this?:
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">rightkey:<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; jsr check_collision<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; lda rtcol<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cmp #1<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; beq collide<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; dec sprx<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; rts<br /><br />collide:<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; rts<br /><br />check_collision:<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; load tile &#40;x+1&#41;, the tile next to the one you're over<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; see if bit 7 is on<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; bne no_col<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; lda #1<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; sta rtcol<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; rts<br />&nbsp;<br />no_col:<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;rts<br /></div>
<br />Okay, I think that would be okay, I'd just need a different way to say load tile (x+1), and see if bit seven is on. By the way, this is a very newbie question, but how do you see if certain bits are on? not just comparing like this:
<br />
<br />cmp #$80
<br />
<br />I mean like
<br />
<br />cmp #%10000000
<br />
<br />but without the next 7 bits after number 7. I know that's probably confusing, but you know what I mean. I just want to see if bit seven is on. Not if the first four bits are exactly as I write them, JUST bit 7. Any way to do that? and how would I do the tile (x+1) thing? Sorry...

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Thu Sep 08, 2005 9:17 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I'll check the rest of your post in a while I'm a bit busy right now!
<br />
<br />But the bit thing, I suggested bit 7 because it is the easiest to check for. Just use BMI or BPL, wich will branch on bit 7 set/clear.
<br />
<br />But for the other bits, there are many ways to test them. You could for instance AND the number with your mask, and if the result is not zero, the bit is set. I believe BIT does the same thing, but doesn't destroy the accumulator.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Celius</b> [ Sat Sep 10, 2005 10:36 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Okay, so how exactly would you say I see if bit 7 is on? only bit 7? I don't care about the other bits, I only care about bit 7. Is there any way I could say something like this?:
<br />
<br />cmp #%1      ;don't care if any other bits are on, just bit 7
<br />
<br />If I tried that, It would just say like:
<br />
<br />cmp #$01
<br />
<br />I can't really explain why, but I know why, It's just hard to explain. So yeah, what ways could that be said? It would really help... <img src="./images/smilies/icon_sad.gif" alt=":(" title="Sad" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Sat Sep 10, 2005 10:56 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />You mean that the whole 8-bit argument is a waste to check only one bit, right ? If so, yeah, some processors have the ability to check a bit like this. The SPC-700 and CMOS 6502 can, I think. But the NMOS 6502 isn't able to do this. Instead, just load the tile value in the accumulator, and check for the minus flag. If a value above $80-$ff, it will be set (bmi will branch) else, it will be clear (bpl will branch).
<br />It's just like the vait for VBlank at reset is typically done :
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">lda $2002<br />bpl -<br />lda $2002<br />bpl -&nbsp; &nbsp; &nbsp; ;Check twice for bit 7 of $2002</div><br /><br />In that case the code would look like :<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">lda #&lt;MapAdress<br />sta PointerL<br />lda #&gt;MapAdress<br />sta PointerH<br />lda PlayerHPos<br />lsr A<br />lsr A<br />lsr A<br />sta Temp&nbsp; &nbsp; &nbsp; &nbsp;;Get HPos/8 in temp<br />lda PlayerVPos<br />and #$f8&nbsp; &nbsp; &nbsp; &nbsp;;The value is already multiplied by 8<br />asl A&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ;By 16 now<br />rol Temp2&nbsp; &nbsp; &nbsp;;Save MSB<br />asl A&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;;Final result multiplied by 32<br />rol Temp2<br />adc Temp<br />adc PointerL<br />sta PointerL<br />lda Temp2&nbsp; &nbsp; ;Final addition to get the pointer ready<br />adc PointerH<br />sta PointerH<br />ldy #$00<br />lda &#91;Pointer&#93;,Y<br />bpl _noCollision<br />inc ColisionFlag<br />_noCollision:<br />rts<br /></div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sat Sep 10, 2005 10:57 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />"Bit 7" usually means the most significant bit, the one with place value $80 = 128. The bit with place value $01 = 1 is called "bit 0".
<br />
<br />If you want to test whether bit 0 is on, use 'and #$01', or 'lda #$01 bit <em>address</em>'.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Sat Sep 10, 2005 11:26 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />You don't need any CMP or anything. If you read ANY 6502 document, you'll see that the load instructions (LDA, LDX, LDY) affect the N (negative flag). The negative bit is bit 7 (if this is set, the number can be interpreted as negative if you want). When you load a value, whatever is in bit 7 is copied to the N flag. then you just use BMI or BPL wich branch depending on the contents of the N flag. Like this:
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp;LDA SOMEWHERE&nbsp; &nbsp;;Loading the map tile.<br />&nbsp; &nbsp;BPL BIT7CLEAR&nbsp; &nbsp;;Skip collision if bit 7 clear.<br /><br />&nbsp; &nbsp;;If you're still here, there is a collision.<br />&nbsp; &nbsp;;So you should move the player back.<br /><br />BIT7CLEAR:<br />&nbsp; &nbsp;;If you get here there is no collision.<br />&nbsp; &nbsp;JMP MAINLOOP&nbsp; &nbsp;;Just loop back.<br /></div><br />Of course the LDA part won't be direct like this. When reading your map, you'll most likely use (Indirect),Y addressing. So, if your map is 32x30, like I said before, you can do it like this:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp;;Load player Y coordinate.<br />&nbsp; &nbsp;LDA PlayY<br /><br />&nbsp; &nbsp;;Divide by 8.<br />&nbsp; &nbsp;LSR<br />&nbsp; &nbsp;LSR<br />&nbsp; &nbsp;LSR<br /><br />&nbsp; &nbsp;;Now, I have to explain what I'll do here.<br />&nbsp; &nbsp;;We must multiply the value in the accumulator<br />&nbsp; &nbsp;;in order to get the offset of the row the player<br />&nbsp; &nbsp;;is at. And we have to add that value to the base<br />&nbsp; &nbsp;;address of the map &#40;address of the start of the map&#41;.<br />&nbsp; &nbsp;;But in this case, it is more efficient to add before<br />&nbsp; &nbsp;;multiplying, so I divide the base address of the map<br />&nbsp; &nbsp;;&#40;in the example, $C000&#41; by 32 &#40;wich results in $600&#41;,<br />&nbsp; &nbsp;;so it will restore it's value when I multiply<br />&nbsp; &nbsp;;everything by 32.<br />&nbsp; &nbsp;;In this case we don't even need to add, since the<br />&nbsp; &nbsp;;lower byte of the address is 0.<br />&nbsp; &nbsp;STA MAP_ADD+0<br />&nbsp; &nbsp;LDA #$06<br />&nbsp; &nbsp;STA MAP_ADD+1<br /><br />&nbsp; &nbsp;;Now, multiply by 32.<br />&nbsp; &nbsp;ASL MAP_ADD+0&nbsp; &nbsp;;x 2<br />&nbsp; &nbsp;ROL MAP_ADD+1<br />&nbsp; &nbsp;ASL MAP_ADD+0&nbsp; &nbsp;;x 4<br />&nbsp; &nbsp;ROL MAP_ADD+1<br />&nbsp; &nbsp;ASL MAP_ADD+0&nbsp; &nbsp;;x 8<br />&nbsp; &nbsp;ROL MAP_ADD+1<br />&nbsp; &nbsp;ASL MAP_ADD+0&nbsp; &nbsp;;x 16<br />&nbsp; &nbsp;ROL MAP_ADD+1<br />&nbsp; &nbsp;ASL MAP_ADD+0&nbsp; &nbsp;;x 32<br />&nbsp; &nbsp;ROL MAP_ADD+1<br /><br />&nbsp; &nbsp;;Now, load PlayX.<br />&nbsp; &nbsp;LDA PlayX<br /><br />&nbsp; &nbsp;;Divide by 8.<br />&nbsp; &nbsp;LSR<br />&nbsp; &nbsp;LSR<br />&nbsp; &nbsp;LSR<br /><br />&nbsp; &nbsp;;Put it into Y.<br />&nbsp; &nbsp;TAY<br /><br />&nbsp; &nbsp;;Finally, load the byte from the map.<br />&nbsp; &nbsp;LDA &#40;MAP_ADD&#41;, Y<br /></div><br /><br />Wow, that took a while. I hope you understand. This is the simplest way I can think of reading a byte from a map.<br /><br />Your map must be define like this:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp;.org $C000<br />&nbsp; &nbsp;.db $00, $00, $00, $00, $86, $86, ... &#40;complete the 32 bytes of the row&#41;<br />&nbsp; &nbsp;.db $A0, $00, $00, $00, $86, $86, ... &#40;complete the 32 bytes of the row&#41;<br />&nbsp; &nbsp;.db $A0, $00, $00, $00, $86, $86, ... &#40;complete the 32 bytes of the row&#41;<br />&nbsp; &nbsp;.db $B0, $00, $00, $00, $86, $86, ... &#40;complete the 32 bytes of the row&#41;<br />&nbsp; &nbsp;.db $B0, $00, $00, $00, $86, $86, ... &#40;complete the 32 bytes of the row&#41;<br />&nbsp; &nbsp;.<br />&nbsp; &nbsp;.<br />&nbsp; &nbsp;.<br />&nbsp; &nbsp;&#40;keep until you complete the 30 rows&#41;<br /></div>
<br />
<br />Now, Celius, I'm almost giving it all ready to to you, all you have to do from here is to account for the direction the player is moving. I mean, check the tiles to the right if the player is moving right, the one at the top if he is moving up. You just have to manipulate the making of the address I discussed above accordingly. Add 1 or 2 (of course it depends on your player's size) to the coordinates we are checking.
<br />
<br />Good luck!

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Celius</b> [ Sat Sep 10, 2005 11:33 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Oh my... I have no idea why I didn't think of that. I must find out why I didn't think of that, because my wonderful Science teacher gave learning advice: When you wonder why you didn't think of something, figure out why, and you'll never have that problem again. Okay, anyways, I think this is what you mean by checking bit 7:
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">lda tilenumber<br />cmp #$80<br />bpl collide<br />rts<br /></div>
<br />
<br />Maybe not exactly like that, but is that the general idea of what you were saying? Okay, well I could encorperate that in my code somehow. Thank you for telling me that.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Sat Sep 10, 2005 11:41 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Celius wrote:</div><div class="quotecontent"><div class="codetitle"><b>Code:</b></div><div class="codecontent">lda tilenumber<br />cmp #$80<br />bpl collide<br />rts<br /></div><br /></div><br />No, no! you don't need the "CMP #$80" part! Just load the number! The LDA command affects the negative flag directly! don't compare anything, just load the byte!<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">lda tilenumber<br />bpl dontcollide ;You don't want to collide on bit 7 clear, remember?<br />;now collide<br /></div>
<br />This will do the trick.
<br />
<br />Celius, do you understand how the instructions on the 6502 affect the flags? You don't always have to do a "CMP" to make a decision. The other instructions affect the flags too. The 6502 knows a number is negative (bit 7 set) just by loading the value. No comparision is needed.
<br />
<br />Why don't you play with a 6502 simulator, to test this little things? Just test and you'll see what I'm telling you is the truth. Just load, don't compare. In this case, of course.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>4</strong> of <strong>8</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>