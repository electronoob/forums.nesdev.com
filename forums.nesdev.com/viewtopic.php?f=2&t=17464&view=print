<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - CC65, C const data ends up in data, not rodata</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">CC65, C const data ends up in data, not rodata</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=17464">http://forums.nesdev.com/viewtopic.php?f=2&amp;t=17464</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Banshaku</b> [ Fri Jun 22, 2018 8:18 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>CC65, C const data ends up in data, not rodata</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I have been playing with C code in cc65 these days and I have a small issue that right now doesn't hinder my testing but would like to know what I'm doing wrong.  I didn't write C code for ages so it may be something that I don't know anymore about.<br /><br />I will explain with some example so it will be easier to understand.  First, what works. <br /><br />For example, the smallest element, a list of sprite that forms a meta-sprite, ends up in rodata:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">const unsigned char standing1&#91;&#93; = {<br />&nbsp; &nbsp;0x00, 0x00, 0x0B, 0x40,&nbsp; &nbsp;// Head top 1&nbsp; <br />...<br />128};</div><br />My list of meta-sprite that makes an animation list ends up in rodata:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">const unsigned char* const standingAnim&#91;2&#93; = {<br />&nbsp; &nbsp;standing1,<br />&nbsp; &nbsp;standing2<br />};<br /></div><br />But my list of animation ends up in data:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">const unsigned char* const *heroAnimList&#91;5&#93; = { standingAnim, ...,&nbsp; runningAnim };<br /></div><br />The goal is to able to retrieve the proper animation list based on the current state of the actor:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">// List of animation<br />typedef enum { <br />&nbsp; &nbsp;STANDING = 0,<br />&nbsp; &nbsp;WALKING,<br />&nbsp; &nbsp;WALKING_GUN,<br />&nbsp; &nbsp;JUMPING,<br />&nbsp; &nbsp;JUMPING_GUN<br />} animState_t;<br /><br />....<br />hero.anim.frameList = heroAnimList&#91;STANDING&#93;;<br /></div><br />My guess is on how I define my list with const but I didn't work in C for ages that I cannot see what is the subtle error I have. At the least for now the logic work, it just it takes ram for nothing.<br /><br />I'm sure right now my code is quite complex too but for now I do not mind much.  If some code does cause issues I will change the structure after examinating the resulting .s files.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Fri Jun 22, 2018 8:24 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: CC65, C const data ends up in data, not rodata</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Banshaku wrote:</div><div class="quotecontent">But my list of animation ends up in data:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">const unsigned char* const *heroAnimList&#91;5&#93; = { standingAnim, ...,&nbsp; runningAnim };<br /></div></div><br />If the individual cels, sequences, and list of sequences are all <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">const</tt>, you need three <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">const</tt> in the declaration of the list of sequences. Does the following also end up in `DATA`?<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">const unsigned char* const *const heroAnimList&#91;5&#93; = { standingAnim, ...,&nbsp; runningAnim };</div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Fri Jun 22, 2018 8:29 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: CC65, C const data ends up in data, not rodata</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent"><div class="quotetitle">Banshaku wrote:</div><div class="quotecontent">But my list of animation ends up in data:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">const unsigned char* const *heroAnimList&#91;5&#93; = { standingAnim, ...,&nbsp; runningAnim };<br /></div></div><br />If the individual cels, sequences, and list of sequences are all <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">const</tt>, you need three <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">const</tt> in the declaration of the list of sequences. Does the following also end up in `DATA`?<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">const unsigned char* const *const heroAnimList&#91;5&#93; = { standingAnim, ...,&nbsp; runningAnim };</div></div><br />I find it easiest to read these from right to left:<br /><br />The 1st one: heroAnimList is a pointer to a const pointer to unsigned char that is const<br />The 2nd one: heroAnimList is a const pointer to a const pointer to unsigned char that is const<br /><br />So in this case the 2nd one should get placed in RODATA.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Banshaku</b> [ Fri Jun 22, 2018 8:34 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: CC65, C const data ends up in data, not rodata</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">If the individual cels, sequences, and list of sequences are all <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">const</tt>, you need three <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">const</tt> in the declaration of the list of sequences. Does the following also end up in `DATA`?<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">const unsigned char* const *const heroAnimList&#91;5&#93; = { standingAnim, ...,&nbsp; runningAnim };</div></div><br /><br />Just tested it and it is now in rodata. I had a feeling that it was something simple but I never used that many const before and looked like it was too many of them. I was wrong.<br /><br />Thank you Tepples! <br /><br />Seems like the Zxibit meme where we heard that you like const, so we put const in your const so you can const  <img src="./images/smilies/icon_lol.gif" alt=":lol:" title="Laughing" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Banshaku</b> [ Fri Jun 22, 2018 8:40 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: CC65, C const data ends up in data, not rodata</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">thefox wrote:</div><div class="quotecontent">I find it easiest to read these from right to left:<br /><br />The 1st one: heroAnimList is a pointer to a const pointer to unsigned char that is const<br />The 2nd one: heroAnimList is a const pointer to a const pointer to unsigned char that is const<br /><br />So in this case the 2nd one should get placed in RODATA.</div><br /><br />Read that way it makes it quite easy to understand. I didn't use much C in more than 10 years so I'm either rusty or didn't understand much at the time about const (I was more active around 93 during college but I don't remember much about talking about const with Turbo C at the time).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Fri Jun 22, 2018 10:14 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: CC65, C const data ends up in data, not rodata</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />You might find the &quot;cdecl&quot; program useful.<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">cdecl&gt; explain const unsigned char* const *const heroAnimList&#91;5&#93;<br />declare heroAnimList as array 5 of const pointer to const pointer to const unsigned char</div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Banshaku</b> [ Fri Jun 22, 2018 7:20 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: CC65, C const data ends up in data, not rodata</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />@lidnariq<br /><br />What a coincidence, I did found that software yesterday when I was trying to find information about arrays of arrays of pointers.  I don't know how to use it yet and at first tried to test with &quot;declare&quot;, which is like writing English. I will try it with &quot;explain&quot; next time. Thank you for the tip!

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>DRW</b> [ Sat Jun 23, 2018 4:06 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: CC65, C const data ends up in data, not rodata</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Banshaku wrote:</div><div class="quotecontent">I had a feeling that it was something simple but I never used that many const before and looked like it was too many of them.</div><br />Well, it's only logical:<br />A constant array needs one const.<br />An array of an array needs two consts.<br />And an array of an array of an array needs three consts.<br /><br />One const for each * or [].

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Banshaku</b> [ Sat Jun 23, 2018 9:41 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: CC65, C const data ends up in data, not rodata</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Yes, put that way it is logical. I guess I didn't visualize it as 3 arrays at first. I'm so used to language with their own memory management at work that pointers are not something common for me to use. I think I will need to review a little bit on the subject and try to work on that when I'm not exhausted (easier to find bugs this way ^^;;).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Sat Jun 23, 2018 10:50 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: CC65, C const data ends up in data, not rodata</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">DRW wrote:</div><div class="quotecontent">One const for each * or [].</div><br />[] is a bit different than * in this respect.<br /><br /><br />A * takes whatever type was on the left, and replaces it with a pointer to that type. That pointer itself is a 2 byte (or 4/8 byte) variable that stores an address, and that stored address can be modified if it's not const. The syntax allows you to put const immediately after the * to specify that it should not be modified.<br /><br /><br />A [] builds an array of whatever type was on the left. There's no place in the syntax to specify const like there is with *, because there is no pointer here. The array type is like all other variables; it can't be moved in the same way that &quot;int a&quot; can't be moved.<br /><br />The difference might make some sense with an appeal to the 6502: we can always use <em>absolute</em> addressing to access variables or arrays (with indexing), but pointers always require <em>indirect</em> addressing.<br /><br />You'll find if you try to assign a [] to another [] it will tell you that it's an invalid <strong>lvalue</strong> which is what the language spec calls variables, sort of. Array types are a non-modifiable lvalue, so you can't assign directly to them, except as part of the initial definition. (It was historically decided in C that arrays should not be assigned to, because that would really mean to copy the whole array, which is usually inefficient. So, they made arrays a special case, and the spec has to mention that over and over. When structs were added later they decided it was okay to assign to structs, though.. the language might seem inconsistent in this way. The implicit conversion of arrays to pointers makes this slightly more confusing too.)<br /><br /><br />There's an exception here, though. If the [] type is a parameter to a function, it implicitly behaves like a non-const pointer instead (modifiable lvalue). The language is actually missing a way to specify this as const<sup>†</sup>. This conversion to a pointer type is forced by the location of the passed array being unknown at compile time. If you need const here, though, you can simply use a const * type instead, as arrays can always implicitly convert to pointers anyway. (So: a parameter [] is really a pointer with a syntax that unfortunately overrides the true array.)<br /><br />(The importance of const on a parameter is minor, though. The consequences of reassigning it are local to that function; it won't make a difference in DATA vs RODATA etc. like it would with a variable's definition.)<br /><br /><br />Edit: I found this, which might explain it better: <a href="http://c-faq.com/aryptr/index.html" class="postlink">http://c-faq.com/aryptr/index.html</a><br /><br /><br /><sub>† I think C99 might have added the option to put const inside the []? Not sure.</sub>

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>