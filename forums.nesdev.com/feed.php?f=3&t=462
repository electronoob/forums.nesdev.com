<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=3&amp;t=462" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2005-08-12T00:55:43-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=3&amp;t=462</id>
<entry>
<author><name><![CDATA[Anonymous]]></name></author>
<updated>2005-08-12T00:55:43-07:00</updated>
<published>2005-08-12T00:55:43-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=462&amp;p=3685#p3685</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=462&amp;p=3685#p3685"/>
<title type="html"><![CDATA[how to use memory efficiently and faster]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=462&amp;p=3685#p3685"><![CDATA[
Ack, that should be &gt;&gt; 12, not &gt;&gt; 8. x_x<p>Statistics: Posted by Guest — Fri Aug 12, 2005 12:55 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Anonymous]]></name></author>
<updated>2005-08-12T00:54:30-07:00</updated>
<published>2005-08-12T00:54:30-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=462&amp;p=3684#p3684</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=462&amp;p=3684#p3684"/>
<title type="html"><![CDATA[how to use memory efficiently and faster]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=462&amp;p=3684#p3684"><![CDATA[
You can take out the "REGPARM" bits if you like.  It usually is a bit faster than passing variables on the stack, but some C compilers will occassionally produce bad code when optimizations are enabled.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">#ifdef MSVC<br />#define REGPARM __fastcall<br />#else<br />#define REGPARM<br />#endif<br /><br />typedef void &#40;REGPARM *WriteProc&#41;&#40;uint32 A, uint8 V&#41;;<br />typedef uint8 &#40;REGPARM *ReadProc&#41;&#40;uint32 A&#41;;<br /><br />WriteProc WriteMemory&#91;0x10&#93;;<br />ReadProc ReadMemory&#91;0x10&#93;;<br /><br />uint8 REGPARM ReadRAM&#40;uint32 A&#41;<br />&#123;<br /> return&#40;RAM&#91;A &amp; 0x7FF&#93;&#41;;<br />&#125;<br /><br />void REGPARM WriteRAM&#40;uint32 A, uint8 V&#41;<br />&#123;<br /> RAM&#91;A &amp; 0x7FF&#93; = V;<br />&#125;<br /><br />void SomeFunction&#40;void&#41;<br />&#123;<br /> ReadMemory&#91;0&#93; = ReadMemory&#91;1&#93; = ReadRAM;<br /> WriteMemory&#91;0&#93; = WriteMemory&#91;1&#93; = WriteRAM;<br /><br /> WriteMemory&#91;0x123 &gt;&gt; 8&#93;&#40;0x123, 0x45&#41;;<br /> printf&#40;&quot;%02x\n&quot;, ReadMemory&#91;0x123 &gt;&gt; 8&#93;&#40;0x123&#41;&#41;;<br />&#125;<br /></div><p>Statistics: Posted by Guest — Fri Aug 12, 2005 12:54 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[teaguecl]]></name></author>
<updated>2005-08-11T20:41:40-07:00</updated>
<published>2005-08-11T20:41:40-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=462&amp;p=3681#p3681</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=462&amp;p=3681#p3681"/>
<title type="html"><![CDATA[how to use memory efficiently and faster]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=462&amp;p=3681#p3681"><![CDATA[
<div class="quotetitle">Anes wrote:</div><div class="quotecontent"><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">// make the pointers <br />ReadProc   ReadMemory[0x10];<br /></div><br /><br />how do i define a function pointer type?<br />i Mean how do i obtain "ReadProc"?</div><br /><br />there is good info at <a href="http://function-pointer.org/" class="postlink">http://function-pointer.org/</a><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=29">teaguecl</a> — Thu Aug 11, 2005 8:41 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Anes]]></name></author>
<updated>2005-08-11T19:46:53-07:00</updated>
<published>2005-08-11T19:46:53-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=462&amp;p=3680#p3680</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=462&amp;p=3680#p3680"/>
<title type="html"><![CDATA[how to use memory efficiently and faster]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=462&amp;p=3680#p3680"><![CDATA[
<div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />// make the pointers <br />ReadProc   ReadMemory[0x10];<br /></div><br /><br />how do i define a function pointer type?<br />i Mean how do i obtain "ReadProc"?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=72">Anes</a> — Thu Aug 11, 2005 7:46 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Anes]]></name></author>
<updated>2005-08-11T19:46:43-07:00</updated>
<published>2005-08-11T19:46:43-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=462&amp;p=3679#p3679</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=462&amp;p=3679#p3679"/>
<title type="html"><![CDATA[how to use memory efficiently and faster]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=462&amp;p=3679#p3679"><![CDATA[
<div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />// make the pointers <br />ReadProc   ReadMemory[0x10];<br /></div><br /><br />how do i define a function pointer type?<br />i Mean how do i obtain "ReadProc"?<br /><br /><br />[/code]<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=72">Anes</a> — Thu Aug 11, 2005 7:46 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Anes]]></name></author>
<updated>2005-08-10T22:47:03-07:00</updated>
<published>2005-08-10T22:47:03-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=462&amp;p=3637#p3637</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=462&amp;p=3637#p3637"/>
<title type="html"><![CDATA[how to use memory efficiently and faster]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=462&amp;p=3637#p3637"><![CDATA[
thxs disch, i have just saved the post for future implementation (dont you get scared if i ask a doubt to you again about this topic) <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" /><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=72">Anes</a> — Wed Aug 10, 2005 10:47 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Disch]]></name></author>
<updated>2005-08-05T20:36:21-07:00</updated>
<published>2005-08-05T20:36:21-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=462&amp;p=3492#p3492</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=462&amp;p=3492#p3492"/>
<title type="html"><![CDATA[how to use memory efficiently and faster]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=462&amp;p=3492#p3492"><![CDATA[
My advice:<br /><br />Every Read/Write should be done through a function (with the acception of zero page reads/writes, which can always be done with RAM directly, as Zero page will always be RAM).<br /><br />Set up several Read and Write functions which cover different areas of addressing space.  For example:<br /><br />Read_RAM (for $0000-1FFF)<br />Read_2xxx (for $2000-3FFF)<br />Read_4xxx (for $4000-4FFF)<br />Read_OpenBus (for $5000-5FFF)<br />Read_SRAM (for $6000-7FFF on supported games)<br />Read_PRG (for $8000-FFFF)<br /><br />Keep 16 function pointers for reading, and 16 function pointers for writing, each which covers a 4k page of addressing space.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">// make the pointers<br />ReadProc   ReadMemory&#91;0x10&#93;;<br /><br />// set up the pointers<br />ReadMemory&#91;0x0&#93; = Read_RAM;<br />ReadMemory&#91;0x1&#93; = Read_RAM;<br />ReadMemory&#91;0x2&#93; = Read_2xxx;<br />...<br />ReadMemory&#91;0xF&#93; = Read_PRG;<br /></div><br /><br /><br />When the game performs a Read/Write, simply call the function which represents that area of addressing space.  You can do this easily by pulling the high digit of the address and using it as an index (simple right shift by 12)<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">#define CPU_READ&#40;adr&#41;   ReadMemory&#91;&#40;adr&#41; &gt;&gt; 12&#93;&#40;adr&#41;<br /></div><br /><br />This provides many benefits:<br /><br />1)  You can avoid doing several if-else chains for every read<br />2)  When games adjust addressing space (by disabling WRAM, or putting RAM @ $8000 and up, or other weird things), this can easily be accomidated by changing the function pointer.<br />3)  Mappers can easily catch their register writes by having their own write function and changing function pointers so that it gets called whenever the game writes there.<br /><br /><br /><br />PRG/CHR swapping can be done easily by keeping one large buffer which holds ALL the game's PRG/CHR data.. and by keeping several pointers to represent PRG/CHR banks.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">u8 nPRGBuffer&#91; size_of_games_prg &#93;; /* this should be allocated dynamically on ROM load with malloc&#40;&#41; or new&#91;&#93; or whatever */<br /><br />u8* pPRG&#91;8&#93;;  // 8 pointers, each represents 4k of PRG space<br /></div><br /><br />With that above code -- each of the 8 pPRG pointers represents a 4k page of PRG.  pPRG[0] would be cpu$8000, pPRG[1] would be cpu$9000, etc.  To work this into the above mentioned Read_PRG function:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">u8 Read_PRG&#40;u16 adr&#41;<br />&#123;<br />  return pPRG&#91;&#40;adr &gt;&gt; 12&#41; - 8&#93;&#91;adr &amp; 0x0FFF&#93;;<br />&#125;<br /></div><br /><br />That will return the appropriate byte from the appropriate bank which was swapped in.<br /><br />With this method, bankswapping can be done VERY easily by just changing a few pointers:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">void Swap8kPRG&#40;int where, int page&#41;<br />&#123;<br />  page *= 0x2000;<br />  pPRG&#91;where&#93; = &amp;nPRGBuffer&#91; page &#93;;<br />  pPRG&#91;where + 1&#93; = &amp;nPRGBuffer&#91; page + 0x1000 &#93;;<br />&#125;<br /></div><br /><br />This allows you to swap PRG without having to copy large chunks of memory.  4k banks are the max size you should go with, as the smallest swap size is 4k (NSFs -- I don't know of any actual ROMs which swap any less than 8k).<br /><br />CHR can be done the same way -- only you should go with 1k or smaller banks (many games have 1k banks -- I think that's the smallest any game swaps -- although I heard rumors that the mapper being used for Grandtheftendo will have 512 byte swapping, so you may want to prepare for it).<br /><br /><br />This exact same logic can be applied to Nametable mirroring.  Simply use 4 pointers for each nametable, and when the game changes mirroring modes, simply change your pointers to accomidate the new mode.<br /><br />That's what I'd recommend.  I'd be happy to answer Qs or clarify if needed.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=33">Disch</a> — Fri Aug 05, 2005 8:36 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Anonymous]]></name></author>
<updated>2005-08-05T19:42:22-07:00</updated>
<published>2005-08-05T19:42:22-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=462&amp;p=3491#p3491</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=462&amp;p=3491#p3491"/>
<title type="html"><![CDATA[how to use memory efficiently and faster]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=462&amp;p=3491#p3491"><![CDATA[
If your OS supports mmap() functionality, and the memory page size is small enough, you can malloc() 64KiB of memory, and mmap() the appropriate emulated PRG ROM pages and RAM in.<p>Statistics: Posted by Guest — Fri Aug 05, 2005 7:42 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2005-08-02T18:17:26-07:00</updated>
<published>2005-08-02T18:17:26-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=462&amp;p=3404#p3404</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=462&amp;p=3404#p3404"/>
<title type="html"><![CDATA[how to use memory efficiently and faster]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=462&amp;p=3404#p3404"><![CDATA[
It involves pointers.<br /><br />For each 4 KB of address space, store the start address of the ROM bank mapped into that address space.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Tue Aug 02, 2005 6:17 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Anes]]></name></author>
<updated>2005-08-02T14:13:09-07:00</updated>
<published>2005-08-02T14:13:09-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=462&amp;p=3402#p3402</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=462&amp;p=3402#p3402"/>
<title type="html"><![CDATA[how to use memory efficiently and faster]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=462&amp;p=3402#p3402"><![CDATA[
i was wondering how to manage memory in the way so when games that have mappers i dont have to copy directly to the cpu mem, let say an example in MMC3: if we do a STA $8000, we are changing the control register, but the value its not written to the real $8000 mem, i mean if this value changes it compromises code execution.<br />In other words: how to threat memory so i dont have to swap in and out an entire block from mapper memory to the one the cpu uses.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=72">Anes</a> — Tue Aug 02, 2005 2:13 pm</p><hr />
]]></content>
</entry>
</feed>