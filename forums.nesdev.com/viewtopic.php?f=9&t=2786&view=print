<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Universal NES flash cartridge considerations</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Universal NES flash cartridge considerations</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=9&amp;t=2786">http://forums.nesdev.com/viewtopic.php?f=9&amp;t=2786</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>5</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Thu Dec 07, 2006 10:57 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Universal NES flash cartridge considerations</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Okay, some people seems to have tried developing an universal NES rewritable cartridge and everyone seems to have ended more or less on a failure. I still think it's a very cool idea and would be *very* pratical for overall developpement, so I'm just brainstorming what a such cart would need :
<br />- Mediup-range inexpensive FPGA, if possible entierly in 5V, but else it would have to have 5V tolerent inputs. The FPGA should dissipate negligible power, because of course put heatsinks in a NES cart is impossible
<br />- 3.3 Volt regulator (optionnal), could be made with a set of resistors and an op-amp
<br />- 3.3 Volt to 5 Volts level transactors (optionnal).
<br />- Min. 512kb PRG Flash ROM to be put on the CPU bus
<br />- Min. 32kb of battery-backed PRG RAM to be put on the CPU bus. Will emulate WRAM, Saved-WRAM and FDS RAM.
<br />- Min. 512kb of battery backed CHR SRAM. Will simulate all sizes of CHRROM and CHRRAM, on a single chip. (optionally two chips, but don't think it'd be needed to have flashrom)
<br />- Battery backup magagement system (either integrated or discrete)
<br />- Lockout chip defeater MCU (optionnal)
<br />- 8-bit DAC to use external audio (less bits could be used by setting a R2R ladder manually on the cart without any intergreated device).
<br />- USB management device for rewriting
<br />- USB port
<br />- Software to communicate with the cart
<br />
<br />Just want to know what would be seriously lacking with a such configuration (assuming the FPGA has full control on the CHR bus, PRG bus and all chips input pins).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>MottZilla</b> [ Thu Dec 07, 2006 1:20 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />It certainly sounds nice. But the whole versatility/emulating all the mappers you can is clearly what casual rom players want. For development/homemade games, wouldn't it be easier if someone designed a programmable (Flash) cartridge that had a mapper with enough features for whatever your project may need? Wouldn't it be possible to make your own chip that emulates the MMC3, or another nice mapper, and use it in a flashable cartridge? Perhaps just make your own mapper all together.
<br />
<br />I'm sure it'd be nice to have one very flexible cartridge that could run every game no matter if it needs WRAM, CHRRAM, CHRROM, MMC3, MMC5, etc. But that seems like a pretty tall order. But perhaps if someone didn't shoot for Mars, but only for the Moon, we might all actually be able to buy a NES Flash Cartridge. 
<br />
<br />I think one mapper would work, although it would be nice to have either 2 versions (one CHRRAM, one CHRROM) or one that could toggle between the two.
<br />
<br />Just an idea. Afterall, people can hack up NES cartridges pretty easily, but making one that can emulate all the different configurations is alot harder than just making a cartridge that doe a single configuration. It would be really nice to be able to just buy an already assembled and ready to go NES Flash Cartridge, even if it was only say MMC3 with CHRROM, or MMC3 with CHRRAM. I imagine that would be a popular choice because of all the commercial games that used it. However like I said maybe you'd want to create your own memory mapper (which would be obviously for development/homebrew) and you could have whatever features you want. Like being able to swap small bits of CHRROM or whatever floats your boat. 
<br />
<br />Really I think part of the reason we've yet to see a commercially available NES Flash Cart is because they are aiming too high and it takes alot longer to do than something not quite so ambitious.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>kyuusaku</b> [ Thu Dec 07, 2006 4:39 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I think you have too much hardware going on there even if everything is SMD. How will your FPGA be configured? Will it be initialized through a SEEPROM?
<br />
<br />I still feel that FPGA + FlashROM is a foolish design. The only way FPGA would be justified IMO is if there is RAM instead of Flash and a massive Flash storage device (CF)
<br />
<br />Also having 512KiB of SRAM is VERY expensive. FPGA are VERY expensive. Level translators are semi-expensive and take up a lot of boardspace.
<br />
<br />I would prefer a simpler design which is even more practical:
<br />
<br />-Base unit which can dump games and flash the flashcart made from one CPLD.
<br />
<br />Flash cart:
<br />
<br />-512KiB PRG and CHR Flash (can be written 10,000+ times)
<br />-32KiB WRAM battery backed
<br />-32KiB CHR-RAM
<br />-CPLD A 84-100 pin - 140 macrocell (can be written 10,000+ times)
<br />-CPLD B 44 pin - 32 macrocell or so
<br />
<br />This design would allow people to legally backup their games and would be 100% nonvolatile. 
<br />
<br />Busconflict and SRAM decoding can be done by the smaller CPLD, this CPLD would not have to be reconfigured. It would also act as a bidirectional tristate buffer and Flash security. The smaller CPLD will also have 32K/8K PRG bankswitching just to Flash the ROMs when the big CPLD isn't configured.
<br />
<br />When asserting a specific address (such as $4FFF) on the base unit, the data bus would then propagate to the JTAG connector to configure the large CPLD. The Flash and WRAM can be written directly by the base unit without having to go through the CPLD like Funkyflash. This method would be extremely fast unlike Funkyflash.
<br />
<br />My design has only 6 active parts for the cart, one active part for the base unit.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Fri Dec 08, 2006 9:44 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />To keep things smaller, a single 1MB SRAM chip could handle all PRGRAM and WRAM on it. I just think it would be a bit simpler and less expensive to put one 512kb flashrom and one 32kb SRAM for separate between rewritable and non-rewritable stuff. I don't think wich one is the best. I just considered to have one single SRAM for both CHRROM and CHRRAM (only the inside of the FPGA would do the difference between them).
<br />Note that making a such cart would be very expensive, but you could play *all* NES games on it (under the condition a plugin has been writen for a specific board), wich would make it a rentable buy after a while.
<br />
<br />Your notes are interesting. Maybe a much smaller cart with only one signle mapper would also be pretty practical. A smaller logic like CPLD or even PAL would fit the mapper logic. This would delete the FPGA, level transactors, voltage regulator and DAC (since no common mapper have sound). I think it would be nicer to have a small working flash cart than a big projects that won't ever work and be commercialised. The idea to have two programmable logic componant, one for mapper logic and the other to handle reprogramming seems interesting, but I didn't fully undestand it. Maybe it's just simpler to have non-reprogrammable logic inside a chip and only the FlashRom could be rewritten (for PRGROM and maybe CHRROM).
<br />
<br />I think one of the most open board to simulate would be SXROM : It would be backwards compatible with SUROM, SOROM, SNROM, SAROM and SGROM, and could be easily ported from UNROM, UOROM, ANROM, AMROM, AOROM, NROM, and maybe even CNROM if the game doesn't change the CHR banks too fast.
<br />Even if more games actually uses TLROM and TSROM, I think that would just be backwards compatible with NROM and CNROM without too heavy ROM hacking. Maybe just both carts could come up alternatively.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>kyuusaku</b> [ Fri Dec 08, 2006 2:16 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The reason I have two CPLD is so that you can reprogram the big CPLD just like you reprogram the FlashROM. For example, if you want to play a MMC1 game, you can flash the specific MMC1 board to the big CPLD and flash the ROMs. If you switch to another game with the same board, you won't have to reprogram the CPLD only the flashrom.
<br />
<br />I don't like the idea of having one FPGA with hundreds of mappers inside, the benefit of having programmable logic is so that you can change it! This way people can develop their own mappers and upload them as simply as the ROM data.
<br />
<br />Really the only reason to have FPGA is to synthesize MMC5 and/or to have a static design containing many mappers. For an 8-bit console, this is bloat. I would prefer to not support MMC5 and have a flashcart which people aren't intimidated to develop for...
<br />
<br />Also I don't know of any available 1M x 8 SRAM. Just 4M SRAM which generally cost $10-20! 4M of Flash on the other hand is ~$5 and 62256 chips are about $5. Mid-range CPLD also cost ~$10-20 in small quantities, FPGA will cost $30-80. USB requires a connector, controller, oscillator, passive components and a microcontroller or CPLD/FPGA (will only work with your design if it's static, otherwise you still need more PLD) but can power the device. All this could cost $30.
<br />
<br />Parallel port path requires a DB25 connector and power connector, LM7805, passive components totalling &lt;$5.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Fri Dec 08, 2006 2:23 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">It would be backwards compatible with SUROM, SOROM, SNROM, SAROM and SGROM, and could be easily ported from UNROM, UOROM, ANROM, AMROM, AOROM, NROM, and maybe even CNROM if the game doesn't change the CHR banks too fast.<br />Even if more games actually uses TLROM and TSROM, I think that would just be backwards compatible with NROM and CNROM without too heavy ROM hacking.</div><br />Bankswitching takes much longer on S*ROM boards than on CNROM, U*ROM, and A*ROM boards. Wouldn't some games that use cycle timed bankswitching fail when trainered to S*ROM?<br /><br /><div class="quotetitle">kyuusaku wrote:</div><div class="quotecontent">Really the only reason to have FPGA is to synthesize MMC5 and/or to have a static design containing many mappers which IMO is bloat.</div><br />What about the ability to survive more than 10,000 power-ons?<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Also I don't know of any available 1M x 8 SRAM.</div><br />Have you tried searching for PSRAM?<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Parallel port path requires a DB25 connector and power connector, LM7805, passive components totalling &lt;$5.</div>
<br />Plus an adapter to use parallel port devices on your computer's USB port, right? How much does that cost?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>kyuusaku</b> [ Fri Dec 08, 2006 4:12 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">What about the ability to survive more than 10,000 power-ons?</div><br />A CPLD should survive as many power ons as any Flash or EEPROM device. If you mean programming cycles, then those that program the CPLD 10x a day for 3 years should expect to replace the CPLD. If this CPLD is a legacy CPLD, it would be possible for it to be socketed and perhaps still fit in a case. To enjoy another 3 years of the same usage, the user would only need to purchase another ~$10 CPLD.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Have you tried searching for PSRAM?</div><br />Yes, PSRAM is generally available only in huge quantities, it only comes in very unfriendly packages and I've never seen one with 8-bit word modes. <br /><br />I would sooner use archaic yet sourceable DRAM like I have in my other NES projects. DRAM drops the price of memory a lot, but then it's an extremely volatile design. DRAM would also eat more I/O, macrocells and require an oscillator to move a statemachine.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Plus an adapter to use parallel port devices on your computer's USB port, right? How much does that cost?</div>
<br />Nope. It would in theory be fairly straightforward to use a FTDI controller and very small CPLD to implement a SPP port however. I figure this device isn't in it for the money or fame (ROM sceners who need convenience and simplicity over anything else), and the crowd likely to use this device already has a parallel port (CopyNES) or would be willing to install a PCI one.
<br />
<br /> Parallel&lt;-&gt;USB adapters found on eBay apparently only emulate the Centronics handshake making it only suitable for printing.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sat Dec 09, 2006 3:05 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">kyuusaku wrote:</div><div class="quotecontent">I figure this device isn't in it for the money or fame (ROM sceners who need convenience and simplicity over anything else), and the crowd likely to use this device already has a parallel port (CopyNES) or would be willing to install a PCI one.</div>
<br />I see a <a href="http://froogle.google.com/froogle?q=pci+express+parallel&amp;btnG=Search" class="postlink">PCI Express parallel port for 50 USD</a>. The solution has to be affordable in order to attract sceners who would otherwise stick to emulation or jump ship to the GBA/DS scene.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>kyuusaku</b> [ Sat Dec 09, 2006 9:33 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />eBay has a number of 32-bit PCI cards, which should be available all desktop motherboards still, for under $20 after shipping:
<br />
<br /><a href="http://search.ebay.com/search/search.dll?submitsearch=Search&amp;satitle=PCI+parallel" class="postlink">http://search.ebay.com/search/search.dll?submitsearch=Search&amp;satitle=PCI+parallel</a>
<br />
<br />If PCI-E is necessary, there is also this for $35 including shipping:
<br />
<br /><a href="http://cgi.ebay.com/ws/eBayISAPI.dll?ViewItem&amp;item=8817126652" class="postlink">http://cgi.ebay.com/ws/eBayISAPI.dll?ViewItem&amp;item=8817126652</a>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>bunnyboy</b> [ Sat Dec 09, 2006 12:44 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Nothing wrong with shooting for Mars, I did and got almost everyting done in ~6 months.  There have been enough of these threads I may as well announce what I did starting in Jan 2006....
<br />
<br />NES POWERPAK:
<br />
<br />First I choose to use compact flash instead of USB.  Must have every rom ever made stored on the cart!  SD cards are serial instead of parallel so when the nes is controlling them they are too slow.  To handle the compact flash card I set it up as memory mapped registers then wrote FAT16/32 handling for the nes.  To load games on the cf card you just put the cf card in your comp and copy them over.  I think I can handle any size card, at least have tested up to 1GB.  The ines headers are used to figure out mapper/mem size, I havent done ines v2 yet but everything is designed to be upgradeable so it should be no problem.
<br />
<br />Boot rom on the cart configures the fpga then goes into a menu where you browse files on the cf card and set options like game genie and battery ram loading/saving.  All folder parsing works so you can organize games however you want.
<br />
<br />For the fpga I used a Xilinx Spartan 2.  It is sram based (no programming cycle limit) and has 5V tolerant input.  I just do simple tristate/pullup to get 5V output, no expensive level translators needed!  The fpga holds one mapper at a time, not every mapper at once.  It is reprogrammed by the nes using files off the cf card so everything is upgradeable.
<br />
<br />Cart has 512KB prg sram, 512KB chr sram, 32KB wram sram, and uses 2KB ram inside the fpga for extra nametables.  There is no battery because the wram can be saved back to the cf card when you exit the game.  Takes ~1 sec to boot, 2-15 secs to load a game which means reconfiguring the fpga and copying game from cf card to sram.    Game size is the time factor.  1MB games are the 15 sec ones, there are only a couple of those.  Everything is controlled by the nes, there is no other processor on the board.
<br />
<br />Here is a pict of the first board, completed April 2006:
<br />
<br /><img src="http://www.nespowerpak.com/powerpakv1.jpg" alt="Image" />
<br />
<br />The pict is mirrored, the cf card mounts flush opposite of the cart thumb notch.  I have an ejector button to get it out, more picts on that later.
<br />
<br />I have ~60 mappers done, game genie, wram saving, everything USA except MMC5.  Finally play NWC1990 on a real nes without spending $2-8K!  Most games run with absolutely no problems.  A few games have some irq problems thats should be fixable.  4 screen games like gauntlet run fine.  Loading battery ram files created by emulators also works.
<br />
<br /> The problem with that board is the fpga isnt big enough for MMC5, or the MMC3 + game genie + other stuff.  So in July 2006 I upgraded the fpga and decided to make the boot rom upgradeable through the CopyNES flash system.  Here it is apparently mirrored pict, from Oct 2006:
<br />
<br /><img src="http://www.nespowerpak.com/powerpakv2.jpg" alt="Image" />
<br />
<br />A bit more crowded!  Also added spot for lockout chip.  Getting that board produced took much longer than expected (slow China) so by the time I got it I was swamped with other stuff (blatent advertisement for <a href="http://www.retrousb.com" class="postlink">www.retrousb.com</a>).  I hope to start working again in Jan 2007 and it should only take about a month to get it done, mainly adding bank switching to boot rom to handle the bigger fpga and hopefully adding mmc5.  At one time I was thinking about doing Game Action Replay functionality but how that works isnt really known.  FDS will unfortunately not work unless someone significantly rewrites the bios.  I think I routed some unused i/o to the expansion pins on the cart so audio is a possibility.
<br />
<br />Eventually I will be selling this as a completed board or as a full cart.  It will not be a kit because everything is surface mount and the fpga and cf slot are not hand solderable.  Yes it will be "expensive" because it was a lot of work, no it wont be more than $150.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>dXtr</b> [ Sat Dec 09, 2006 1:33 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />wow, awesome work!!  <img src="./images/smilies/icon_eek.gif" alt=":shock:" title="Shocked" /> 
<br />I be sure to order one when they're done <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />
<br />
<br />btw. about the CIC part.. will this also be solderd on in the complete board? if so, will you be selling PAL boards too?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Memblers</b> [ Sat Dec 09, 2006 1:39 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Hell yeah man, looks awesome.  <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>bunnyboy</b> [ Sat Dec 09, 2006 1:43 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Complete carts will have the cic chip installed from the donor cart, so I could do something like you send in a pal cart and I will take the cic off that.  Just the board will have the cic empty.  Of course that all might change once the cic is cracked and put onto a pic chip.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Lloyd Gordon</b> [ Sat Dec 09, 2006 1:47 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Amazing.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Sat Dec 09, 2006 2:17 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Sounds amazing. I haven't gotten everything, but it seems like your cart has about anything a programmable cart must have. That's exciting.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>5</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>