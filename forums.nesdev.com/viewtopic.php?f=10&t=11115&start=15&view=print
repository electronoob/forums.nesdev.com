<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - write to vram - in c problems</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">write to vram - in c problems</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=10&amp;t=11115">http://forums.nesdev.com/viewtopic.php?f=10&amp;t=11115</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>2</strong> of <strong>2</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Mon Mar 24, 2014 9:40 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: write to vram - in c problems</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />[ot]<br />The difference between enabling during prerender and enabling after start of picture is that as long as rendering is reenabled before x=304 of the pre-render line, no special &quot;skinny&quot; address write sequences are needed to set the scroll position.<br />[/ot]<br /><br />Anyway, unless you're updating a LOT of video memory at once (CHR RAM animation, rapid scrolling, sub-screen scrolling, or FMV playback), you shouldn't need to worry about micro-optimizing video memory updates yet. <a href="https://en.wikipedia.org/wiki/You_aren%27t_gonna_need_it" class="postlink">You probably aren't gonna need it</a> right now, and when you do, let us know.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Movax12</b> [ Mon Mar 24, 2014 11:22 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: write to vram - in c problems</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I need all I can get, to a point. The game I was working on could run even better with more write time. Feel free to split to a new thread.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Tue Mar 25, 2014 6:36 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: write to vram - in c problems</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />A clean split isn't possible because of too many posts dealing with both topics. I've summarized the discussion so far to <a href="http://forums.nesdev.com/viewtopic.php?p=127154#p127154" class="postlink">this post</a>.<br /><br />Now back to your regularly scheduled &quot;write to vram - in c problems&quot;.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>DrDementia</b> [ Thu Apr 03, 2014 6:40 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: write to vram - in c problems</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />don't worry about it guys, it wasn't really that OT. I was turning the ppu off/on because that's the only way shiru's vram_write works. <br /><br />another odd thing I noticed vram_put is displaying similar odd behavior (making the screen scroll to where I write to) when I compile some of my old code with the new version of neslib. the code worked fine in the old version. might be my version of cc65. <br />Wish shiru would mention what version he used, or link it or something.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Thu Apr 03, 2014 8:44 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: write to vram - in c problems</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">DrDementia wrote:</div><div class="quotecontent">(making the screen scroll to where I write to)</div><br />This is a symptom of not resetting the scroll after writing/reading to/from PPU memory. See, the internal address register programs use to access PPU memory is the same one the PPU uses when reading its own memory for rendering images, so rendering will start from wherever that register points to when rendering starts. After you're done updating VRAM, you should always set the scroll to the place where you want rendering to start from.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Thu Apr 03, 2014 9:20 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: write to vram - in c problems</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The problem, I think, is with the implementation of ppu_on_all().<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">_ppu_on_all:<br />&nbsp; &nbsp;lda &lt;PPU_MASK_VAR<br />&nbsp; &nbsp;ora #%00011000<br />ppu_onoff:<br />&nbsp; &nbsp;sta &lt;PPU_MASK_VAR<br />&nbsp; &nbsp;sta PPU_MASK<br />&nbsp; &nbsp;jsr _ppu_waitnmi<br />&nbsp; &nbsp;lda #$00<br />&nbsp; &nbsp;sta PPU_ADDR<br />&nbsp; &nbsp;sta PPU_ADDR<br />&nbsp; &nbsp;lda &lt;PPU_CTRL_VAR<br />&nbsp; &nbsp;sta PPU_CTRL<br />&nbsp; &nbsp;rts</div><br />Please correct me if I'm wrong in this analysis, but this turns on rendering immediately, which means it might happen in the middle of a frame somewhere, giving you half a blank screen and half of an incorrectly scrolled screen for the first frame it is turned on. Next it waits for an NMI to complete and immediately sets the VRAM address to 0, which will force the scroll to 0,0 for the second frame (unless the NMI routine is finished before the end of vblank -- this might depend whether or not music is playing). It will only start applying your scroll correctly on the third frame, as far as I can tell.<br /><br />The purpose of ppu_off() and ppu_on_all() is generally to leave rendering disabled for an extended period of time (i.e. multiple frames) while you make some changes to the nametable (direct vram writes). If you're only turning off rendering occasionally, the two frames of incorrect apperance might not be a big deal, and for a game where the scrolling is supposed to be at 0,0 anyway, you're only talking about one frame of incorrect appearance.<br /><br />You may want to remove these 3 lines from _ppu_on_all:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp;lda #$00<br />&nbsp; &nbsp;sta PPU_ADDR<br />&nbsp; &nbsp;sta PPU_ADDR</div><br />These lines serve no purpose, as the correct scroll will already get applied during the line: jsr _ppu_waitnmi<br /><br />This should cut the incorrect visual down to a single half-rendered frame.<br /><br /><br />In the examples he provided, this half-rendered frame seems to be hidden by an all-black palette. The new palette doesn't get applied until the _ppu_waitnmi subroutine, so the bad frame is not seen. The second problem frame is also not an issue since all the examples start at 0,0 scroll anyway. This might explain why _ppu_on_all does not appear very robust; in the way shiru was using it, there really is no problem to be seen. You could hide the problem yourself by clearing the palette, and rendering one frame before calling ppu_off():<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">pal_clear()<br />ppu_waitnmi()<br />ppu_off()<br />// ... do your vram writes here<br />// ... setup your new palette<br />ppu_on_all()</div><br />This adds an extra frame of latency to your turning off the PPU (probably negligible), but should hide the half-rendered frame.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>DrDementia</b> [ Fri Apr 04, 2014 6:54 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: write to vram - in c problems</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent"><div class="quotetitle">DrDementia wrote:</div><div class="quotecontent">(making the screen scroll to where I write to)</div><br />This is a symptom of not resetting the scroll after writing/reading to/from PPU memory. See, the internal address register programs use to access PPU memory is the same one the PPU uses when reading its own memory for rendering images, so rendering will start from wherever that register points to when rendering starts. After you're done updating VRAM, you should always set the scroll to the place where you want rendering to start from.</div><br /><br />so say I write to 0x2180 after that I should set the scroll back to 0x2000 where my nametable starts and was loaded to. like this?<br />vram_adr(0x2000);<br /><br /><br />where's that register located in memory, maybe I can use a debugger and watch that spot, that may help me understand what's going on.<br /><br />@RW I 'm going to test some stuff out and reply to your post.<br />thanks guys for trying to help me figure out this out. it's annoying me a bit I can't get this to work correctly.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Fri Apr 04, 2014 7:45 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: write to vram - in c problems</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">DrDementia wrote:</div><div class="quotecontent">so say I write to 0x2180 after that I should set the scroll back to 0x2000 where my nametable starts and was loaded to. like this?<br />vram_adr(0x2000);</div><br />I can't say anything specific to programming in C, because I only program in assembly, but the correct way to (re)set the scroll is not to manipulate the address register directly, but using the registers that are actually meant to control scrolling: $2000 (name table selection) and $2005 (pixel scroll within the selected name table). The library you're using should provide a way to set the scroll through $2000 and $2005, you should look for that.<br /><br />The address register should only be manipulated for scrolling purposes when changing the scroll OUTSIDE of VBlank, like is done for status bars and parallax effects, which I'm pretty sure is not your case.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">where's that register located in memory, maybe I can use a debugger and watch that spot, that may help me understand what's going on.</div><br />This register is internal to the PPU and you can't watch it by looking at memory addresses. The emulator has to show you its value. I think FCEUX's debugger shows you the current VRAM address, others might too.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>DrDementia</b> [ Fri Apr 04, 2014 9:15 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: write to vram - in c problems</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">the correct way to (re)set the scroll is not to manipulate the address register directly, but using the registers that are actually meant to control scrolling: $2000 (name table selection) and $2005 (pixel scroll within the selected name table). <br /></div><br /><br />so looking at this <a href="http://wiki.nesdev.com/w/index.php/PPU_registers" class="postlink">page</a><br />trying to get a better understanding of how this works.<br /><br />And shiru's &quot;vram_adr&quot; does this <br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">_vram_adr:<br />&nbsp; &nbsp;stx PPU_ADDR<br />&nbsp; &nbsp;sta PPU_ADDR<br />&nbsp; &nbsp;rts</div><br /><br />and he has PPU_ADDR defined as $2006. which matches the wiki, but what's in x,a? the example on the wiki of writing to $2006 makes a little more sense<br /> <br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp;lda #$21<br />&nbsp; sta PPUADDR<br />&nbsp; lda #$08<br />&nbsp; sta PPUADDR</div><br /> <br />here  $21,$08 are getting loaded into a and then stored to PPUADDR (upper byte first)<br /><br /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">This register is internal to the PPU and you can't watch it by looking at memory addresses. The emulator has to show you its value. I think FCEUX's debugger shows you the current VRAM address, others might too.</div><br /><br />FCEUXD shows a,x,y but I didn't see the current vram address anywhere. might be there somewhere though

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Fri Apr 04, 2014 10:03 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: write to vram - in c problems</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />FCEUXD is really old, I suggest getting the latest FCEUX. I don't know what the debugger looks like in FCEUXD, but here's where to find the VRAM address in FCEUX 2.2.2

		
			<br clear="all" /><br />

			<table class="tablebg" width="100%" cellspacing="1">
			<tr>
				<td><b class="genmed">Attachments: </b></td>
			</tr>
			
				<tr>
					<td>
			<a href="./download/file.php?id=1405&amp;mode=view"><img src="./download/file.php?id=1405&amp;t=1" alt="FCEUX_debug_vram_address.png" /></a><br />
			<span class="gensmall">FCEUX_debug_vram_address.png [ 63.77 KiB | Viewed 205 times ]</span>
		

		<br />
	</td>
				</tr>
			
			</table>
		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Fri Apr 04, 2014 10:12 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: write to vram - in c problems</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />In FCEUX 2.2.0, I've run into problems where PPU:, Scanline:, and Pixel: don't update properly when I step through a program. Is this fixed in the latest version?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Fri Apr 04, 2014 12:43 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: write to vram - in c problems</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />They're all working fine for me in 2.2.2 so possibly it's been fixed?

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>2</strong> of <strong>2</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>