<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - What's the best (fastest) multiplication/division code?</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">What's the best (fastest) multiplication/division code?</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=16616">http://forums.nesdev.com/viewtopic.php?f=2&amp;t=16616</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>darkhog</b> [ Tue Oct 24, 2017 6:35 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>What's the best (fastest) multiplication/division code?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I need to multiply/divide numbers by arbitrary values so bitwise ops aren't useful here as they only allow for multiplication/division by very specific values.<br /><br />I know I'll have to do it in software, but I don't feel like reinventing the wheel. Anyone has good, fast code that would allow me to do both? Preferably something I can just jsr into.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Tue Oct 24, 2017 6:47 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: What's the best (fastest) multiplication/division code?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Bregalad shared a nice multiply here:<br /><a href="http://wiki.nesdev.com/w/index.php/8-bit_Multiply" class="postlink">Wiki: 8-bit Multiply</a><br /><br />CC65 has some multiply/divide routines: (see umul/udiv/imul/idiv)<br /><a href="https://github.com/cc65/cc65/tree/master/libsrc/runtime" class="postlink">CC65 GitHub runtime module</a><br /><br />Keldon recently shared a multiply using a lookup table:<br /><a href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=16571" class="postlink">Forum: Relatively fast multi, ...</a><br /><br />In general, you can make it faster with lookup tables, but they take up space.<br /><br /><br />There's unfortunately a lot of different needs for multiplication (e.g. 8 bit x 8 bit = 16 bit? 16 x 16 = 32? signed/unsigned? remainder or fixed point?) so it might be tricky to find a &quot;generic&quot; one that does exactly what you want efficiently.<br /><br />If you want to try writing your own, the simple method isn't really that tricky. If you know how to do long multiplication / long division by hand, it's basically just this technique in binary (i.e. for multiply it's a left shift x2 for each row instead of x10, but you still just add up the rows in the end).<br /><br /><br />Finally, there's an even simpler version where you can implement multiply as just a repeated add, or divide as counting a repeated subtract. This is slow and inefficient in the general case, but if your numbers are small or you're in a situation where the result is cumulatively maintained, they can be pretty effective anyway.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>dougeff</b> [ Tue Oct 24, 2017 6:54 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: What's the best (fastest) multiplication/division code?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><!-- m --><a class="postlink" href="http://6502org.wikidot.com/software-math-intmul">http://6502org.wikidot.com/software-math-intmul</a><!-- m --><br /><br /><!-- m --><a class="postlink" href="http://6502org.wikidot.com/software-math-intdiv">http://6502org.wikidot.com/software-math-intdiv</a><!-- m --><br /><br />If you absolutely know you need multiplication of a factor of 2, bit shift is much faster.<br /><br />I've used a table of answers before, for example, if I always need to multiply by 10. <br />LDX value<br />LDA table, x

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Tue Oct 24, 2017 7:12 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: What's the best (fastest) multiplication/division code?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I've been using versions of <a href="http://codebase64.org/doku.php?id=base:seriously_fast_multiplication" class="postlink">this</a> for multiplication, and have avoided division like the plague, but <a href="http://codebase64.org/doku.php?id=base:6502_6510_maths" class="postlink">the page</a> where that comes from has a few suggestions for division as well. If I need to divide by a constant, I multiply by the reciprocal of that constant instead, which's faster.<br /><br />May I ask why do you need multiplication and division in a 6502 program? Most games can get away without them, even when more complex physics is involved. Sometimes you can make do with approximations, so you can use smaller look-up tables and faster code. The only reason I'm using multiplication is because I'm working on a raycaster, which involves trigonometry, but even then I try to use look-up tables as much as possible to avoid/simplify the real-time math.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>darkhog</b> [ Tue Oct 24, 2017 7:17 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: What's the best (fastest) multiplication/division code?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Because I want my game to have score multipliers/score dividers.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>GradualGames</b> [ Tue Oct 24, 2017 7:25 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: What's the best (fastest) multiplication/division code?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Hmm, if you're just updating a score, you could spread repeated addition or subtraction over multiple frames perhaps, if you don't want to go the lookup table route. That's assuming you have some kind of action game. If it's a puzzle game or rpg where speed is not at a premium I'd probably just use repeated addition/subtraction (all at once rather than spread out)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Tue Oct 24, 2017 7:30 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: What's the best (fastest) multiplication/division code?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />So I guess that speed isn't such a big concern then, since you'll most likely not be doing several of these operations every frame. In this case, I recommend straightforward shift-and-add and shift-and-subtract routines, which are more than efficient enough to be used every once in a while, instead of large look-up tables and obscure logic.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Tue Oct 24, 2017 3:12 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: What's the best (fastest) multiplication/division code?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I already linked <a href="http://wiki.nesdev.com/w/index.php/8-bit_Multiply" class="postlink">Wiki: 8-bit Multiply</a> but tepples just added an even nicer variation to it.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>pubby</b> [ Tue Oct 24, 2017 3:35 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: What's the best (fastest) multiplication/division code?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">rainwarrior wrote:</div><div class="quotecontent">I already linked <a href="http://wiki.nesdev.com/w/index.php/8-bit_Multiply" class="postlink">Wiki: 8-bit Multiply</a> but tepples just added an even nicer variation to it.</div><br />If you add DEY to the start of the subroutine you can drop the CLC inside the loop. Saves  &lt;=14 cycles.<br /><br />I think.<br /><br />Also, unrolling that loop saves like ~40 cycles at the cost of ~50 bytes. Well worth it, IMO. 50 bytes is nothing.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Tue Oct 24, 2017 4:02 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: What's the best (fastest) multiplication/division code?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">pubby wrote:</div><div class="quotecontent">If you add DEY to the start of the subroutine you can drop the CLC inside the loop. Saves  &lt;=14 cycles.</div><br />I think that's valid, yeah.<br /><br />It would probably need a check for 0 before the DEY, which I guess would add 6 more cycles, so the difference is from -4 to 10 cycles? Though you also get a very quick Y=0 case in the bargain.<br /><br /><em>Edit: or wait, never mind, 255 + carry is going to be 0 anyway. <img src="./images/smilies/icon_razz.gif" alt=":P" title="Razz" /> I guess you don't actually need to check at all. So, 0 to 14 cycles, yeah.</em><br /><br /><br />I guess cc65's <strong>umul8x8r16</strong> is actually the same as tepples' algorithm, just with slightly less parsimonious return value storage:<br /><a href="https://github.com/cc65/cc65/blob/master/libsrc/runtime/umul8x8r16.s" class="postlink">https://github.com/cc65/cc65/blob/master/libsrc/runtime/umul8x8r16.s</a>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Kasumi</b> [ Tue Oct 24, 2017 4:31 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: What's the best (fastest) multiplication/division code?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Haven't checked if it's better than the ones on the wiki, but here's another player from atariage: <!-- m --><a class="postlink" href="http://atariage.com/forums/topic/71120-6502-killer-hacks/?p=896028">http://atariage.com/forums/topic/71120- ... /?p=896028</a><!-- m --><br /><br />Not a new method, just different code.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Tue Oct 24, 2017 6:47 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: What's the best (fastest) multiplication/division code?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Kasumi wrote:</div><div class="quotecontent">Haven't checked if it's better than the ones on the wiki, but here's another player from atariage: <!-- m --><a class="postlink" href="http://atariage.com/forums/topic/71120-6502-killer-hacks/?p=896028">http://atariage.com/forums/topic/71120- ... /?p=896028</a><!-- m --><br /><br />Not a new method, just different code.</div><br />It's equivalent to tepples' method with the (non-unrolling) optimization pubby suggested. Also it doesn't bother to initialize A and treats it as an extra &quot;add&quot; input.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>pubby</b> [ Wed Oct 25, 2017 4:15 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: What's the best (fastest) multiplication/division code?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">rainwarrior wrote:</div><div class="quotecontent"><em>Edit: or wait, never mind, 255 + carry is going to be 0 anyway. <img src="./images/smilies/icon_razz.gif" alt=":P" title="Razz" /> I guess you don't actually need to check at all. So, 0 to 14 cycles, yeah.</em></div><br />prodlo will remain zero, but register A will end up non-zero. So checking for Y=0 is still necessary.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>FrankenGraphics</b> [ Wed Oct 25, 2017 5:08 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: What's the best (fastest) multiplication/division code?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />As long as something's to be multiplied/divided by a power of 2, doing this is the simplest way:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">mult32:<br />asl<br />mult16:<br />asl<br />mult8:<br />asl<br />mult4:<br />asl<br />asl <br />rts<br /><br /><br />div32:<br />lsr<br />div16:<br />lsr<br />div8:<br />lsr<br />div4:<br />lsr<br />lsr <br />rts</div><br /><br />Then <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">jsr label</tt><br /><br />You can avoid the addtional 12 cycles that jsr and rts cost together by hardcoding it into your specific <br />function. If you can figure out a siginificant var or const to be a value so that the operation requires even fewer lsr/asl:s to get the desired value; even better. <br /><br />Several integer and floating point math examples can be found at <!-- m --><a class="postlink" href="http://6502.org/source/">http://6502.org/source/</a><!-- m --> - i haven't looked them up but came across it when i was looking for a reference on how many cycles the above would take.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>White Flame</b> [ Wed Oct 25, 2017 10:32 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: What's the best (fastest) multiplication/division code?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I made an interesting 8*8=8bit shift-add multiply routine in <a href="http://codebase64.org/doku.php?id=base:8bit_multiplication_8bit_product" class="postlink">15 bytes</a> (over in Commodore 64 land).  It shrinks down to 11 bytes if you initialize .A yourself, for the added portion of a multiply-accumulate.<br /><br />The &quot;interesting&quot; part is that It exits early whenever the right-shifting multiplier reaches zero, which is fundamentally faster than performing all the iterations for the bit width if one of your values is small.  I also extended it to <a href="http://codebase64.org/doku.php?id=base:8bit_multiplication_16bit_product" class="postlink">8*8=16bit</a> which can also function as 16*8=16bit, still performing the early exit.  There's plenty of other multiplication &amp; division algorithms under the math section in there as well, though I think all the other primary mult techniques have been covered here so far.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>