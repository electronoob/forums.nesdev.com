<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Hello World</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Hello World</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=10&amp;t=7307">http://forums.nesdev.com/viewtopic.php?f=10&amp;t=7307</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>15</strong> of <strong>18</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Wed Nov 30, 2011 5:05 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">FinalZero wrote:</div><div class="quotecontent"><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">2) Do not depend on the flags at the time of reset. You'll usually end up clearing X, S, and half of P in the first six instructions anyway. All you can be sure of is that PC points where $FFFC-$FFFD says.</div><br />What do you mean "where $FFFC-$FFFD says."? How do I set where?</div><br />That's one of the "vectors". How you set up the vectors depends on your assembler. I remember how only for ca65, not asm6 or nesasm.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Why are you setting the interrupt flag in your code?</div><br />To prevent IRQs from happening during the init code. True, the CPU already sets the interrupt priority bit to 1 (NMIs only) when coming out of reset, but having an explicit SEI makes the game more compatible with badly coded multicart menus that start the game with a JMP ($FFFC) but put the interrupt priority at 0 (CLI).<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Okay, so that's the overlay thing again. I don't understand which segments overlay what. Is it by bank/memory-area? Basically, I still don't understand how my linker file is supposed to be set up.</div>
<br />Which assembler are you using again? If ca65, I have a <a href="http://nesdev.com/bbs/viewtopic.php?t=7991" class="postlink">project template</a> that sets most of this up for you.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>FinalZero</b> [ Wed Nov 30, 2011 6:56 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Which assembler are you using again? If ca65, I have a project template that sets most of this up for you.</div><br />ca65, yes. Also, I'm trying to use MMC1.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">To prevent IRQs from happening during the init code. True, the CPU already sets the interrupt priority bit to 1 (NMIs only) when coming out of reset, but having an explicit SEI makes the game more compatible with badly coded multicart menus that start the game with a JMP ($FFFC) but put the interrupt priority at 0 (CLI). </div>
<br />But why would one expect an interrupt? Anyways, do you clear the flag at the end of the init code then?
<br />
<br />* * *
<br />
<br />Here's my linker code at the moment.
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">MEMORY &#123;<br />&nbsp; &nbsp;# Header<br />&nbsp; &nbsp;HEADER:&nbsp; &nbsp;start = $0000, size = $0010;<br />&nbsp; &nbsp;<br />&nbsp; &nbsp;# Ram<br />#&nbsp; &nbsp;ZEROPAGE: start = $0000, size = $0100;<br />#&nbsp; &nbsp;STACK:&nbsp; &nbsp; start = $0100, size = $0100;<br />&nbsp; &nbsp;RAM:&nbsp; &nbsp; &nbsp; start = $0200, size = $0600, fill = yes;<br />&nbsp; &nbsp;<br />&nbsp; &nbsp;# Rom<br />&nbsp; &nbsp;LOWER_PROG_ROM: start = $8000, size = $2000, fill = yes;<br />&nbsp; &nbsp;LOWER_CHAR_ROM: start = $A000, size = $1000, fill = yes;<br />&nbsp; &nbsp;UPPER_CHAR_ROM: start = $B000, size = $1000, fill = yes;<br />&nbsp; &nbsp;UPPER_PROG_ROM: start = $C000, size = $4000, fill = yes;<br />&#125;<br />#-------------------------------------------------------------------------------<br /><br />SEGMENTS &#123;<br />&nbsp; &nbsp;# Header<br />&nbsp; &nbsp;HEADER:&nbsp; &nbsp;load = HEADER,&nbsp; &nbsp;type = ro;<br />&nbsp; &nbsp;<br />&nbsp; &nbsp;# Ram<br />#&nbsp; &nbsp;ZEROPAGE: load = ZEROPAGE, type = zp;<br />#&nbsp; &nbsp;STACK:&nbsp; &nbsp; load = STACK,&nbsp; &nbsp; type = rw;<br />&nbsp; &nbsp;RAM:&nbsp; &nbsp; &nbsp; load = RAM,&nbsp; &nbsp; &nbsp; type = rw;<br />&nbsp; &nbsp;<br />&nbsp; &nbsp;# Rom<br />&nbsp; &nbsp;CODE:&nbsp; &nbsp; &nbsp; load = LOWER_PROG_ROM, type = ro;<br />&nbsp; &nbsp;FONT:&nbsp; &nbsp; &nbsp; load = LOWER_CHAR_ROM, type = ro;<br />&nbsp; &nbsp;TILES:&nbsp; &nbsp; &nbsp;load = UPPER_CHAR_ROM, type = ro;<br />&nbsp; &nbsp;<br />&nbsp; &nbsp;MORE_CODE: load = UPPER_PROG_ROM, type = ro;<br />&nbsp; &nbsp;VECTORS:&nbsp; &nbsp;load = UPPER_PROG_ROM, type = ro, start = $FFFA;<br />&#125;<br />#-------------------------------------------------------------------------------<br /></div><br />Do I need to include the zeropage and stack segments even if nothing gets initialized there? Also, when I open it in FCEUX, I don't see any code at $8000 in the debugger, even though there should be.<br /><br />And my header:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">.byte $4E, $45, $53, $1A ; &quot;NES&quot;, eof<br />.byte 1 ; Number of 16 kB prog ROM Segments<br />.byte 1 ; Number of 8 kB char ROM Segments<br />.byte %00010001 ; Byte 6 &#40;Mirroring &#40;0xx0: Horizontal, 0xx1: Vertical&#41;, Ignored if the mapper controls mirroring.&#41;<br />.byte %00000000 ; Byte 7<br />.byte 0 ; Number of 8 kB prog RAM Segments<br />.byte 0 ; Byte 9 &#40;0: NTSC, 1: PAL&#41;<br />.byte 0 ; Byte 10 &#40;Sporadically Supported&#41;<br />.byte 0, 0, 0, 0, 0 ; Filler<br />;-------------------------------------------------------------------------------<br /></div>
<br />Does MMC1 even use 8kb PROG RAM?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Thu Dec 01, 2011 8:18 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">FinalZero wrote:</div><div class="quotecontent">ca65, yes. Also, I'm trying to use MMC1. </div><br />If you have only 16 or 32 KiB of PRG ROM and only 8 KiB of CHR, why are you using MMC1 and not just NROM? Is it just for the switchable nametable mirroring?<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">But why would one expect an interrupt?</div><br />Sources of IRQs on the NES other than mappers include the APU frame IRQ and the DMC completion IRQ. A few games on simple mappers without their own scanline or CPU cycle counter circuits (ab)use the DMC completion IRQ as a crude scanline counter.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Anyways, do you clear the flag at the end of the init code then? </div><br />A lot of games appear to just leave the ignore IRQs flag turned on (SEI) because they never use any IRQs.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">   HEADER:   start = $0000, size = $0010; </div><br />For this, you may want to specify "fill=yes, fillval=$00", which means you won't need the "; Filler" line at the end of the header.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp;LOWER_PROG_ROM: start = $8000, size = $2000, fill = yes;<br />&nbsp; &nbsp;LOWER_CHAR_ROM: start = $A000, size = $1000, fill = yes;<br />&nbsp; &nbsp;UPPER_CHAR_ROM: start = $B000, size = $1000, fill = yes;<br />&nbsp; &nbsp;UPPER_PROG_ROM: start = $C000, size = $4000, fill = yes;</div><br />[...]<br />I don't see any code at $8000 in the debugger</div><br />That's because with one 16 KiB bank, you need the following in order: UPPER_PROG_ROM, then LOWER_CHAR_ROM, then UPPER_CHAR_ROM. The only time CHR ROM ever comes before PRG ROM is in certain CHR RAM setups, and there is no LOWER_PROG_ROM in a 16 KiB PRG ROM. And your PRG ROM is in fact 16 KiB, as seen next:<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><div class="codetitle"><b>Code:</b></div><div class="codecontent">.byte 1 ; Number of 16 kB prog ROM Segments<br />.byte 1 ; Number of 8 kB char ROM Segments<br /></div></div>
<br />Some MMC1 boards have PRG RAM; others don't. In fact, the possibility of PRG RAM doesn't depend much on the mapper; even one board in the NROM class (mapper 0) has PRG RAM.
<br />
<br />If you don't want to spend a lot of time fixing your linker script, I recommend just using the NROM project template that I linked, which has a known working linker script.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>FinalZero</b> [ Thu Dec 01, 2011 1:27 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">If you don't want to spend a lot of time fixing your linker script, I recommend just using the NROM project template that I linked, which has a known working linker script.</div><br />I want to know why though. I don't want to just be cargo-cult programming.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">And your PRG ROM is in fact 16 KiB, as seen next:</div><br />Can't I just switch it to 2 then? (That doesn't seem to do anything. The debugger still shows nothing.)<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Some MMC1 boards have PRG RAM; others don't. In fact, the possibility of PRG RAM doesn't depend much on the mapper; even one board in the NROM class (mapper 0) has PRG RAM. </div>
<br />What is PRG RAM used for anyways? It's not any faster than PRG ROM, is it?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Thu Dec 01, 2011 2:30 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">FinalZero wrote:</div><div class="quotecontent">What is PRG RAM used for anyways?</div><br />It's used for whatever programmers dissatisfied with the stock 2KB of RAM want. Many games put things like decompressed level maps there. It's just RAM, usually 8KB of it, to complement the 2KB that are built in the console.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">It's not any faster than PRG ROM, is it?</div>
<br />No.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>3gengames</b> [ Thu Dec 01, 2011 2:32 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />PRG-RAM is the extra RAM at $6000-$7FFF. It's in the cart, sometimes battery backed up. SMB3 has it to decompress level to. Metroid also has it. So does Kid Icarus, although none of them back it up, it's just 8KB more RAM for stuff. Other games like zelda also use it for probably more space, but also saving information on the cart to continue later, which is very important in RPGs and why most have PRG-RAM with a battery like Zelda 1+2, Crystalis, Startropics, etc. MMC5 has even bankswitchable PRG-RAM, so you can have 16KB, maybe more, although nobody has ever used that much in the day so more isn't supported by any mappers but that one.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>FinalZero</b> [ Thu Dec 01, 2011 9:48 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">If you have only 16 or 32 KiB of PRG ROM and only 8 KiB of CHR, why are you using MMC1 and not just NROM? Is it just for the switchable nametable mirroring?</div><br />I want to practice/try mirroring, yes.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">It's used for whatever programmers dissatisfied with the stock 2KB of RAM want. Many games put things like decompressed level maps there. It's just RAM, usually 8KB of it, to complement the 2KB that are built in the console. </div><br />Okay.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Other games like zelda also use it for probably more space, but also saving information on the cart to continue later, which is very important in RPGs and why most have PRG-RAM with a battery like Zelda 1+2, Crystalis, Startropics, etc. MMC5 has even bankswitchable PRG-RAM, so you can have 16KB, maybe more, although nobody has ever used that much in the day so more isn't supported by any mappers but that one.</div>
<br />It's only that ram that's battery-backed-up though, right? What else must one do to use battery-backed-up saves?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>3gengames</b> [ Fri Dec 02, 2011 1:44 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Yeah, the 8KB is the only stuff that's backed up. And to use the back up function what you have to do is program your game/program to boot up and not clear the memory, but format it if need be and put someting in there to know it's been formatted and then use all the other data in the RAM as the state of your game and program your game to load from it.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>FinalZero</b> [ Fri Dec 02, 2011 1:43 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Yeah, the 8KB is the only stuff that's backed up. And to use the back up function what you have to do is program your game/program to boot up and not clear the memory, but format it if need be and put someting in there to know it's been formatted and then use all the other data in the RAM as the state of your game and program your game to load from it.</div>
<br />Okay.
<br />
<br />Also, can someone explain exactly what's wrong with my linker file?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Fri Dec 02, 2011 2:16 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The first thing that's wrong is that the CHR ROM data isn't last in the file, as it MUST be. Can you paste your revised linker script that fixes this problem?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>FinalZero</b> [ Fri Dec 02, 2011 4:56 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">The first thing that's wrong is that the CHR ROM data isn't last in the file, as it MUST be. Can you paste your revised linker script that fixes this problem?</div>
<br />I am confused. Why must it be last? Looking at <!-- m --><a class="postlink" href="http://wiki.nesdev.com/w/index.php/MMC1">http://wiki.nesdev.com/w/index.php/MMC1</a><!-- m --> , it isn't listed last there.
<br />
<br />Edit: Okay, wait. I'm not even sure why I put the char rom at the locations I did. It doesn't match the documentation. Where does the char rom go in MMC1?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Fri Dec 02, 2011 4:59 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The relevant wiki article is <a href="http://wiki.nesdev.com/w/index.php/INES" class="postlink">iNES</a>. In <em>all</em> mappers that use CHR ROM, the CHR data comes last in the file. First the header, then the PRG ROM, then the CHR ROM.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>FinalZero</b> [ Fri Dec 02, 2011 5:08 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Linker File:
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">MEMORY &#123;<br />&nbsp; &nbsp;# Header<br />&nbsp; &nbsp;HEADER: start = $0000, size = $0010, fill = yes, fillval = $00;<br />&nbsp; &nbsp;<br />&nbsp; &nbsp;# General Ram<br />#&nbsp; &nbsp;ZEROPAGE:&nbsp; start = $0000, size = $0100;<br />#&nbsp; &nbsp;STACK:&nbsp; &nbsp; &nbsp;start = $0100, size = $0100;<br />&nbsp; &nbsp;RAM:&nbsp; &nbsp; &nbsp; &nbsp;start = $0200, size = $0600, fill = yes;<br />&nbsp; &nbsp;EXTRA_RAM: start = $6000, size = $2000, fill = yes;<br />&nbsp; &nbsp;<br />&nbsp; &nbsp;# Prog Rom<br />&nbsp; &nbsp;LOWER_PROG_ROM: start = $8000, size = $4000, fill = yes;<br />&nbsp; &nbsp;UPPER_PROG_ROM: start = $C000, size = $4000, fill = yes;<br />&nbsp; &nbsp;<br />&nbsp; &nbsp;# Char Rom<br />&nbsp; &nbsp;LOWER_CHAR_ROM: start = $0000, size = $1000, fill = yes;<br />&nbsp; &nbsp;UPPER_CHAR_ROM: start = $1000, size = $1000, fill = yes;<br />&#125;<br />#-------------------------------------------------------------------------------<br /><br />SEGMENTS &#123;<br />&nbsp; &nbsp;# Header<br />&nbsp; &nbsp;HEADER:&nbsp; &nbsp;load = HEADER,&nbsp; &nbsp;type = ro;<br />&nbsp; &nbsp;<br />&nbsp; &nbsp;# Ram<br />#&nbsp; &nbsp;ZEROPAGE:&nbsp; load = ZEROPAGE,&nbsp; type = zp;<br />#&nbsp; &nbsp;STACK:&nbsp; &nbsp; &nbsp;load = STACK,&nbsp; &nbsp; &nbsp;type = rw;<br />&nbsp; &nbsp;RAM:&nbsp; &nbsp; &nbsp; &nbsp;load = RAM,&nbsp; &nbsp; &nbsp; &nbsp;type = ro;<br />&nbsp; &nbsp;DATA:&nbsp; &nbsp; &nbsp; load = RAM,&nbsp; &nbsp; &nbsp; &nbsp;type = rw;<br />&nbsp; &nbsp;RODATA:&nbsp; &nbsp; load = RAM,&nbsp; &nbsp; &nbsp; &nbsp;type = ro;<br />&nbsp; &nbsp;EXTRA_RAM: load = EXTRA_RAM, type = ro;<br />&nbsp; &nbsp;<br />&nbsp; &nbsp;# Prog Rom<br />&nbsp; &nbsp;CODE:&nbsp; &nbsp; &nbsp; load = LOWER_PROG_ROM, type = ro;<br />&nbsp; &nbsp;MORE_CODE: load = UPPER_PROG_ROM, type = ro;<br />&nbsp; &nbsp;VECTORS:&nbsp; &nbsp;load = UPPER_PROG_ROM, type = ro, start = $FFFA;<br />&nbsp; &nbsp;<br />&nbsp; &nbsp;# Char Rom<br />&nbsp; &nbsp;FONT:&nbsp; &nbsp; &nbsp; load = LOWER_CHAR_ROM, type = ro;<br />&nbsp; &nbsp;TILES:&nbsp; &nbsp; &nbsp;load = UPPER_CHAR_ROM, type = ro;<br />&#125;<br />#-------------------------------------------------------------------------------<br /></div><br /><br />Header File:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">.segment &quot;HEADER&quot;<br />;-------------------------------------------------------------------------------<br /><br />.byte $4E, $45, $53, $1A ; &quot;NES&quot;, eof<br />.byte 2 ; Number of 16 kB prog ROM Segments<br />.byte 1 ; Number of 8 kB char ROM Segments<br />.byte %00010001 ; Byte 6 &#40;Mirroring &#40;0xx0: H, 0xx1: V&#41;&#41;<br />.byte %00000000 ; Byte 7<br />.byte 0 ; Number of 8 kB prog RAM Segments<br />;-------------------------------------------------------------------------------<br /></div>
<br />
<br />It assembled, but doesn't show anything in the debugger.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Fri Dec 02, 2011 7:20 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I see your LOWER_PROG_ROM and UPPER_PROG_ROM sum to 32 KiB. Are you making sure to specify two 16k pages in the iNES header? And are you making sure to replicate the vectors and the beginning of the init code in all 16k banks (the <a href="http://wiki.nesdev.com/w/index.php/Programming_MMC1#PRG_banks" class="postlink"><em>Barbie</em> stub</a>) so that no matter how the MMC1's registers are set at power on, the program still starts? If all this is Greek to you, I would recommend <strong>removing LOWER_PROG_ROM entirely</strong> from your linker script and putting all your code and data in UPPER_PROG_ROM for now.
<br />
<br />In MEMORY, <strong>do not use fill=yes</strong> for any memory area that is RAM. This means remove it from RAM and EXTRA_RAM. If you use fill=yes, the linker will try to (uselessly) put initial values for the memory area into the ROM file. Only memory areas that represent ROM should have fill=yes.
<br />
<br />In SEGMENTS, <strong>use type=bss</strong> instead of type=rw for any RAM segment. For segments of type bss, the linker won't try to (uselessly) put initial values for the segment into the ROM file.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>FinalZero</b> [ Sat Dec 03, 2011 1:17 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I see your LOWER_PROG_ROM and UPPER_PROG_ROM sum to 32 KiB. Are you making sure to specify two 16k pages in the iNES header? </div><br />Yes.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">And are you making sure to replicate the vectors and the beginning of the init code in all 16k banks (the Barbie stub) so that no matter how the MMC1's registers are set at power on, the program still starts?</div><br />I didn't know that I needed to.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">If all this is Greek to you, I would recommend removing LOWER_PROG_ROM entirely from your linker script and putting all your code and data in UPPER_PROG_ROM for now.</div><br />Okay, I'll try that first.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">In MEMORY, do not use fill=yes for any memory area that is RAM. This means remove it from RAM and EXTRA_RAM. If you use fill=yes, the linker will try to (uselessly) put initial values for the memory area into the ROM file. Only memory areas that represent ROM should have fill=yes. </div><br />Okay.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">In SEGMENTS, use type=bss instead of type=rw for any RAM segment. For segments of type bss, the linker won't try to (uselessly) put initial values for the segment into the ROM file.</div>
<br />Why is it useless though? Isn't data stored there? I don't see why it should be any different from the CODE segment.
<br />
<br />And... I see my code at $8000! There's stuff at $C000 too, but it's nothing I wrote, and appears to be random garbage. However, running the debugger, it seems to be alternating between $0002 and $FFFF. I don't know why.
<br />
<br />Edit: I forgot to change the number of PRG banks in the header back to 1. Doing that, it runs code that I wrote. I think I made an error in the code though, because it isn't doing the addition that I wanted it to do.
<br />
<br />Edit Edit: It seems to be interrupting every so often, and then returning to the wrong address. Ideas as to why?

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>15</strong> of <strong>18</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>