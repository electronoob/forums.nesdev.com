<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - NES 2.0 expansion for maskROM data</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">NES 2.0 expansion for maskROM data</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=3&amp;t=16120">http://forums.nesdev.com/viewtopic.php?f=3&amp;t=16120</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>3</strong> of <strong>3</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Myask</b> [ Wed Jun 21, 2017 7:32 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: NES 2.0 expansion for maskROM data</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />A bit for titlefield, a bit for audio-ROM chunk presence (size tbd by mapper) …<br /><br />I'm not sure whether title-final or audio-final would be more backwards-compatible. depends how emulators read it (if any did).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Wed Jun 21, 2017 8:09 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: NES 2.0 expansion for maskROM data</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I admit that I haven't previously heard of any emulators honoring the Title-final field before. I don't remember seeing it on the wiki, either. (I do remember having found a number of ROMs with an appended title, but those ones are also marked as &quot;overdumps&quot; by Cowering, so it's apparently not Well Known)<br /><br />There are plenty of other homebrew things that people could invent that couldn't possibly fit in NES2.0 (For example, someone could put a compactflash card inside a cart, effectively an oversize FDS without expansion sound. We could make a &quot;NES video format&quot; cart, which would stream 8x1 pixel slivers to the PPU. Someone could put something like the 2600's Harmony Cart that would just directly feed data to the CPU and/or PPU as the data is fetched. An arbitrary number of different memory spaces could be added, and trying to graft support for this onto NES2.0 is going to be, at absolute best, super awkward.<br /><br />Which is why I arbitrary said &quot;let's only worry about pre-homebrew options&quot;. It makes the addressing the problem <em>possible at all</em>. We cannot possibly pre-invent everything that people are going to want to do, so what's wrong with admitting that some things are just out of scope? Or at least entertaining that being reactive, rather than proactive, is an acceptable way to manage this?<br /><br />As such, I am most nearly happy with either<br />1- a single bit specifying that there's extra data, length and contents specified by submapper<br />2- a small number of bits (4?) specifying the strict lookup table of (none, 960, 12288, 32768, reserved, &amp;c) for the number of bytes of extra data (nature of contents specified by mapper) such that programs can seek past it.<br />I would be unhappy with grafting a chunked format coda onto NES2.0, by whatever name. <br /><br />I don't know how many emulators (other than NO$NES?) support the PC-10's INST-ROM anyway.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>B00daW</b> [ Wed Jun 21, 2017 9:00 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: NES 2.0 expansion for maskROM data</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I think I've found a pseudo-metadataless format of Byte 14 that is conservative enough to suit the needs of now and the future.<br /><br />Byte 14 of NES2<br />------------------<br />bits 0-3:  Which extended ROM types are being used?  (Should there be more than 4 including SND, PC-10, Vs. System, and NOAC clones?) <br />bits 4-7:  (Reserved)<br /><br />If bits 0-3 of Byte 14 are set, then after the CHR ROM data, the emulator or flash cart expects a byte before the data used for ROM size in 512B banks; with ~127K max.<br /><br />The M50805 960B maskROM can just be loaded into the FPGA of the flash cart or emulator as 1K, and the emulation itself should only access 960B.  Should any extra ROM here be larger than ~127K?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Wed Jun 21, 2017 9:26 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: NES 2.0 expansion for maskROM data</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />As far as I know the relevant capacities are:<br />960 bytes - M50805<br />8192 bytes - PC-10 homebrew INST-ROM with dummied encryption<br />8192+(9?? padded into 16/32??) bytes - PC-10 OEM software with functioning RP5H01<br />12244 bytes - µPD7755<br />32768 bytes - µPD7756 and/or the programmable µPD77P56<br /><br />I don't know what extra ROM you're referring to in the Vs. System? The Namco copy protection ICs seem to be logic functions, not ROMs.<br /><br />I also haven't heard/paid any attention to &quot;NOAC ROMs&quot; ? Examples?<br /><br />I don't think it's too unlikely that we could possibly find a larger ADPCM IC used at some point in the future:<br />65536 bytes - µPD7757<br />131072 bytes - µPD7758<br /><br />I'm uncomfortable with &quot;The size, in a byte, specified as a number of 512B blocks&quot;. It doesn't provide any advantages over just specifying a raw 17+ bit number. If we're going to add a length+contents field (which, yes, chunked format that I'm unhappy with, but whatever), there's no reason to not just say &quot;It's an 32-bit little-endian number specifying the number of bytes&quot; instead (since it's no longer trying to fit it in the 16-byte NES header).<br /><br />—<br /><br />Oh, tangenting all the way back to your comment about City Fighter... it really looks like it's just a 4-bit DAC in the cartridge? The rest of the emulator code doesn't support any kind of hardware decompression or hardware controlled FIFO, and yet the in-game audio still plays with just that simple logic to remap writes to $980C to pre-multiply by 8 and then copy the write to $4011.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>ap9</b> [ Thu Jun 22, 2017 2:15 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: NES 2.0 expansion for maskROM data</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">lidnariq wrote:</div><div class="quotecontent">Oh, tangenting all the way back to your comment about City Fighter... it really looks like it's just a 4-bit DAC in the cartridge? The rest of the emulator code doesn't support any kind of hardware decompression or hardware controlled FIFO, and yet the in-game audio still plays with just that simple logic to remap writes to $980C to pre-multiply by 8 and then copy the write to $4011.</div><br /><br />Here's a 2015 video capture of the City Fighter IV (plus Street Fighter II, SMB3 pirate…) on hardware:<br /><br /><!-- m --><a class="postlink" href="https://www.youtube.com/watch?v=1vo_-hAkKjE">https://www.youtube.com/watch?v=1vo_-hAkKjE</a><!-- m --><br /><br />Sounds like PCM (not ADPCM) with some filtering. The pitch is also higher than emulated (FCEUX). I'd say it uses expansion sound (not 4011) given the greatly varying amplitudes with different Famicoms/clones.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Thu Jun 22, 2017 7:20 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: NES 2.0 expansion for maskROM data</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Volume differences would apply just as much to the MMC5's DAC at $5011. Do they behave otherwise similarly, other than that <em>City Fighter</em> audio has a different scale amount?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>B00daW</b> [ Thu Jun 22, 2017 5:01 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: NES 2.0 expansion for maskROM data</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />lidnariq:  Regarding NOAC clone consoles, just in case if something pops up in the future, I was simply referring to them being potentially the only other consideration where a different ROM type may need to be attached; as long as it was compatible with CPU and PPU.<br /><br />If we're going to use a 32-bit chunk of data before the ROMs to specify byte(s) size, I don't see why that should be an issue; and it sounds like a great solution.  We would just have to prioritize load order within the &quot;extra ROM&quot; portion of the header.  For instance, INST, PC-PROM, AUD, Title; even if all bits are set for some reason.  It would expect them in the respective order.<br /><br />This seems to be fleshing out nicely. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Thu Jun 22, 2017 6:53 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: NES 2.0 expansion for maskROM data</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Please don't do that.<br /><br />It combines all the disadvantages of a chunked format with all the disadvantages of a monolithic non-chunked format.<br /><br />Furthermore, there's <em>already</em> a convention for the extra PC-10 data <em>without</em> a Length indicator.<br /><br />And, finally, you've precluded the possibility of combining both PC-10 and audio data, which is the very reason I pointed out as being a complication in the first place. Yes, I don't think it exists, but there is an audio in pin on the PC-10 cart connector, so we don't know whether it does exist.<br /><br />To repeat what I said <a href="https://forums.nesdev.com/viewtopic.php?p=198692#p198692" class="postlink">earlier</a><br /><blockquote style="margin-left: 1%; padding-left: 1%; border-left: 3px solid #555577;">
As such, I am most nearly happy with either<br />1- a single bit specifying that there&#39;s extra data, length and contents specified by submapper<br />2- a small number of bits &#40;4?&#41; specifying the strict lookup table of &#40;none, 960, 12288, 32768, reserved, &amp;c&#41; for the number of bytes of extra data &#40;nature of contents specified by mapper&#41; such that programs can seek past it.
</blockquote>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Myask</b> [ Thu Jun 22, 2017 11:14 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: NES 2.0 expansion for maskROM data</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Why would a NOAC clone have new data that needs to be in the file for the cartridge?<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Furthermore, there's already a convention for the extra PC-10 data without a Length indicator.<br /><br />And, finally, you've precluded the possibility of combining both PC-10 and audio data,</div>/agree

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>B00daW</b> [ Thu Jun 22, 2017 11:20 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: NES 2.0 expansion for maskROM data</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Oh... I don't think I precluded anything.  If the bits say that the ROMs are present, then they're just in the ROM format in the order the NES 2.0 expects them to be.<br /><br />Regarding a NOAC clone, I'm not really sure yet... but stranger things have happened. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />  The point is to future-proof the best we can.  Hell, there may even have to be an NES 3.0 in 10 years. ;P<br /><br />Once we get the M50805 data, some of us on #nesdev can work on making an NES 2.0 formatted version of Family Trainer 3: Aerobics Studio and likely host it on archive.org.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Thu Jun 22, 2017 11:54 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: NES 2.0 expansion for maskROM data</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Oh, I see, you meant a bitmask.<br /><br />There's already a pre-NES2.0 bit indicating whether a given dump is for the Playchoice 10 ... but it's more-or-less meaningless unless the instructions ROM (and decryption key) is attached. Nocash has pointed out that it's extremely difficult for the Z80 in the Playchoice-10 to communicate with the game, and vice versa, so the games have to be able to run without it ... hence why there are dumps omitting that data.<br /><br />But I don't see why we should proactively allocate a bit until we've found an instance that needs it though. I'm not saying that there <em>couldn't</em> be another address space somewhere in the Vs. System or a NoaC that would need it, but ... I'd really really like to wait until we have an instance that actually documents the need for it. There isn't enough space to allocate bits for anything that seems possible, or even likely.<br /><br />I do, however, agree that we <em>oughtn't</em> have to use the file size to determine whether a given chunk of data is present. Perhaps there's merit in including a bit that indicates whether a PC-10 image includes=needs the decryption ROM.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>B00daW</b> [ Mon Jun 26, 2017 6:15 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: NES 2.0 expansion for maskROM data</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Oh... Another thing.  Seems that we'll need to have a dump of the Decoder ROM with the M50805 too.  So that's 312B Decoder ROM + 960B Parameter ROM = 1272B total for M50805 audio ROM.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>B00daW</b> [ Wed Sep 06, 2017 2:23 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: NES 2.0 expansion for maskROM data</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />So with that Moero!! Pro Yakyuu bootleg dump we have something to move forward with the extra ROM with NES 2.0.  Best approach is to likely put it on a submapper of the original.  The mapper can designate what the ROM types are.<br /><br />So for Byte 14 of NES 2.0 we can probably just use the first two bits for the amount of extra ROMs; equaling 3 max.  (Would there be a need for having more than 3 extra ROM types?  Maybe we can leave the bit 3 of Byte 14 reserved for now.)<br /><br />Before the extra ROM data we could use 3 bytes little-endian to determine ROM sizes.<br /><br />Thoughts?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Wed Sep 06, 2017 2:41 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: NES 2.0 expansion for maskROM data</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />If we're trying to put things into the 16-byte NES header ... I really dislike putting a separate length field afterwards.<br /><br />If we're <em>not</em> trying to put things into the 16-byte NES header ... there's absolutely no reason to be parsimonious and specify a 3-byte type.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>B00daW</b> [ Wed Sep 06, 2017 2:43 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: NES 2.0 expansion for maskROM data</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Alright... Well, I'll move forward with the byte 14 bits 0 and 1 specifying extra ROM amount and then mapper/submapper will determine ROM sizes.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>3</strong> of <strong>3</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>