<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=2&amp;t=4742" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2009-01-13T23:39:10-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=2&amp;t=4742</id>
<entry>
<author><name><![CDATA[doynax]]></name></author>
<updated>2009-01-13T23:39:10-07:00</updated>
<published>2009-01-13T23:39:10-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4742&amp;p=41911#p41911</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4742&amp;p=41911#p41911"/>
<title type="html"><![CDATA[Chu Chu Rocket]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4742&amp;p=41911#p41911"><![CDATA[
<div class="quotetitle">Dwedit wrote:</div><div class="quotecontent"><br />You end up with 244 CHR tiles for the top two tiles.  For the bottom two, you end up with less.<br /></div>Heh, it took some head-scratching to figure out why it's asymmetrical but you're really only drawing horizontal and vertical walls on one side of the tile, and adjusting the adjacent tiles instead when dealing with the other sides. Why didn't I think of that?<br /><br />I just checked out the game again and it seems the little fuckers can actually run straight through each other from any direction. That combined with having to deal with columns of mice moving back-to-back makes me wonder how you managed to get away with "merely" (2x)244 tiles.<br />Though I suppose it wouldn't look too weird if you only showed one mouse when multiple mice overlap, especially if it's done on the 8x8 level. And the nice part is that there's no need to reserve tiles for stopped mice or handle collisions as part of the movement logic.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=56">doynax</a> — Tue Jan 13, 2009 11:39 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Dwedit]]></name></author>
<updated>2009-01-13T22:51:10-07:00</updated>
<published>2009-01-13T22:51:10-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4742&amp;p=41906#p41906</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4742&amp;p=41906#p41906"/>
<title type="html"><![CDATA[Chu Chu Rocket]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4742&amp;p=41906#p41906"><![CDATA[
It comes to over 256 tiles, but when you factor in some impossible cases, like how exiting a square to the right will have no effect on the top-left tile during the second 8 frames, you get 64 possibilities per 8x8 tile, and that's without walls.  The first 8 and second 8 frames are two separate cases which need to be handled differently.<br />So with 64 tiles for the top-left tile, and 64 tiles for the top-right tile, you have 128 remaining.  There are five wall states for the top-left tile, and two wall states for the top-right tile.  When you factor in walls, you can mask away some more possibilities.<br />You end up with 244 CHR tiles for the top two tiles.  For the bottom two, you end up with less.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=53">Dwedit</a> — Tue Jan 13, 2009 10:51 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[doynax]]></name></author>
<updated>2009-01-13T21:58:57-07:00</updated>
<published>2009-01-13T21:58:57-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4742&amp;p=41903#p41903</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4742&amp;p=41903#p41903"/>
<title type="html"><![CDATA[Chu Chu Rocket]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4742&amp;p=41903#p41903"><![CDATA[
<div class="quotetitle">Dwedit wrote:</div><div class="quotecontent"><br />By "Per Scanline", I mean that if you're using 16x16 metatiles, you can alternatively bankswitch the CHR every 8 scanlines to get 512 effective tiles instead of 256.<br /></div>I see. I sort of did that for a C64 game project once and it worked pretty well there, though as we well know the NES timers are notoriously fickle. MMC3 IRQs I presume?<br /><br />Intuitively it seemed you wouldn't need anywhere near that many tiles but you're right, it all adds up... exponentially.<br />Lets see what we get by treating the individual 8x8 tiles separately (not that you are of course, vertically anyway, but humor me anyway) shall we?<br />Something like the empty tile plus the eight cardinal and intermediate directions, times the four mice headings and a mouse standing still or no mouse at all, times the four mouse tiles. In other words 9 * (5 * 4 + 1) = 189 tiles. Yikes!<br />Too bad the NES hardware doesn't support horizontal or vertical tile flipping like a certain competitor's 8-bit system does :(<br /><br />edit: Bah! I forgot to account for mice moving back-to-back, and not being able to enter and leave from all directions. I don't have the patience to work it all out but I presume it comes out somewhere above 256 tiles?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=56">doynax</a> — Tue Jan 13, 2009 9:58 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Dwedit]]></name></author>
<updated>2009-01-13T21:27:00-07:00</updated>
<published>2009-01-13T21:27:00-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4742&amp;p=41897#p41897</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4742&amp;p=41897#p41897"/>
<title type="html"><![CDATA[Chu Chu Rocket]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4742&amp;p=41897#p41897"><![CDATA[
By "Per Scanline", I mean that if you're using 16x16 metatiles, you can alternatively bankswitch the CHR every 8 scanlines to get 512 effective tiles instead of 256.<br /><br />As far as progress at the game goes, I've only made a tool which generates a CHR file, and have drawn graphics for the mice.  That's it.<br /><br />A tile in the CHR file is a function of:<br />* Frame number (0-7) or (8-15)<br />* Whether it's the first 8 frames or not<br />* Whether a mouse is entering or leaving on 4 directions<br />* Whether there is a LEFT+UP wall, UP wall, LEFT wall, or no wall for the tile<br />And I've worked out that every possible state will fit within 512 8x8 tiles per frame, and 16 frames of animation.<br />It might be hard to make background rockets work though.<br /><br />Also, the background area of a tile would be nontransparent, to allow the checkered grid, and also have a black color available for pits.<br /><br />I plan on making cats, arrows, and other game objects sprites.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=53">Dwedit</a> — Tue Jan 13, 2009 9:27 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[doynax]]></name></author>
<updated>2009-01-13T21:06:41-07:00</updated>
<published>2009-01-13T21:06:41-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4742&amp;p=41895#p41895</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4742&amp;p=41895#p41895"/>
<title type="html"><![CDATA[Re: Chu Chu Rocket]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4742&amp;p=41895#p41895"><![CDATA[
<div class="quotetitle">Dwedit wrote:</div><div class="quotecontent"><br />So yeah, I might be making a NES version of Chu Chu Rocket at some time.  I've calculated that you can get all possibilities of mice entering and leaving squares, as well as different wall positions, within 256 tiles per scanline.<br /></div>So you're char-plotting the mice then? I suppose that's the only viable option given that that the original game often shows whole columns of 16x16 mice parading across the screen.<br />I'm not entirely sure what you mean by 256 tiles per "scanline" but personally I'd just pre-render all the combinations of mice entering and leaving the various tiles from various directions into CHR-ROM. And since all of the mice move in step with each other you'd easily be able to animate the entire movement across the a tile without actually touching memory simply by switching ROM pages (e.g each page would correspond to one phase of the animation.) Plus with a bit of double buffering there would be plenty of time to replace the old tilemap within the blanking periods.<br />But perhaps that was what you meant?<br /><br /><div class="quotetitle">Dwedit wrote:</div><div class="quotecontent"><br />The big question is how to iterate over a map and calculate new values for mice on the map, can it be done within 16 frames?<br /></div>I honestly don't see how it's much of a problem. 16 frames is a great deal of CPU cycles, and it's not as if the movement patterns are very complicated. Plus you only have to deal with nice integral coordinates on a grid with less than 256 squares. Hell, you could handle the mice as cellular automata rather than game objects in the usual sense if you wanted to.<br /><br />Why not simply pre-calculate the next step at each square and for each direction into a table in RAM? That, plus some collision detection so you don't run into another mouse, ought to account for most things in the game as far as I can recall. Granted, I never actually got all that far so perhaps there's worse things to deal with later on in the game.<br /><br />Good luck with the project at any rate, it's certainly a nice little puzzle game well-deserving of a NES port!<br /><br />edit: Lets make a rough estimate of the worst-case scenario. Say there a hundred mice on the screen, we've got half of the total CPU time to dedicate to movement logic, and we're in "turbo" mode so we want to perform each move in only four frames instead of sixteen. This still leaves 600 cycles per mouse.<br />I don't care what method you adopt, you'd have to be trying not to fit the movement routine within that limit!<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=56">doynax</a> — Tue Jan 13, 2009 9:06 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Dwedit]]></name></author>
<updated>2009-01-13T20:34:25-07:00</updated>
<published>2009-01-13T20:34:25-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4742&amp;p=41894#p41894</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4742&amp;p=41894#p41894"/>
<title type="html"><![CDATA[Chu Chu Rocket]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4742&amp;p=41894#p41894"><![CDATA[
So yeah, I might be making a NES version of Chu Chu Rocket at some time.  I've calculated that you can get all possibilities of mice entering and leaving squares, as well as different wall positions, within 256 tiles per scanline.<br />The big question is how to iterate over a map and calculate new values for mice on the map, can it be done within 16 frames?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=53">Dwedit</a> — Tue Jan 13, 2009 8:34 pm</p><hr />
]]></content>
</entry>
</feed>