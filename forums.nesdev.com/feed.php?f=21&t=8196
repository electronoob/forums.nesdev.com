<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=21&amp;t=8196" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2012-01-26T13:00:17-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=21&amp;t=8196</id>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2012-01-26T13:00:17-07:00</updated>
<published>2012-01-26T13:00:17-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8196&amp;p=89290#p89290</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8196&amp;p=89290#p89290"/>
<title type="html"><![CDATA[Designing a level editor]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8196&amp;p=89290#p89290"><![CDATA[
ARM7TDMI has a fast hardware multiply, and lots of GBA games use it for division by a constant.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Thu Jan 26, 2012 1:00 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2012-01-26T12:25:35-07:00</updated>
<published>2012-01-26T12:25:35-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8196&amp;p=89288#p89288</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8196&amp;p=89288#p89288"/>
<title type="html"><![CDATA[Designing a level editor]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8196&amp;p=89288#p89288"><![CDATA[
I had never thought about this, but you are absolutely right! The number of blocks that fit in a screen horizontally is the same. The GBA games are nothing like the Genesis games though, so I'm not sure why they'd go through the trouble of using an odd metatile size like that... An obvious disadvantage is that when converting world coordinates into metatile coordinates the program has to perform actual divisions, instead of simply shifting/ignoring bits. On the NES this would be suicide.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Thu Jan 26, 2012 12:25 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2012-01-26T10:13:04-07:00</updated>
<published>2012-01-26T10:13:04-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8196&amp;p=89287#p89287</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8196&amp;p=89287#p89287"/>
<title type="html"><![CDATA[Designing a level editor]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8196&amp;p=89287#p89287"><![CDATA[
<div class="quotetitle">tokumaru wrote:</div><div class="quotecontent"><br />The Sonic Advance games use 96x96-pixel metatiles I think.<br /></div><br />Which would sort of fit a game that may have been originally planned for a system with a 320x224 pixel display (Genesis) and then scaled down to 240x160 (GBA).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Thu Jan 26, 2012 10:13 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2012-01-26T09:56:09-07:00</updated>
<published>2012-01-26T09:56:09-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8196&amp;p=89286#p89286</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8196&amp;p=89286#p89286"/>
<title type="html"><![CDATA[Designing a level editor]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8196&amp;p=89286#p89286"><![CDATA[
The Sonic Advance games use 96x96-pixel metatiles I think.<br /><br />If a game uses metatiles there will always be cases where objects don't align properly to the grid. You you really don't want to deal with that, maybe you'd be better using the object approach rather than the grid approach.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Thu Jan 26, 2012 9:56 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2012-01-26T08:48:13-07:00</updated>
<published>2012-01-26T08:48:13-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8196&amp;p=89285#p89285</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8196&amp;p=89285#p89285"/>
<title type="html"><![CDATA[Designing a level editor]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8196&amp;p=89285#p89285"><![CDATA[
I can't think of any NES examples at the moment, but Kirby Super Star for Super NES uses 24x24 pixel metatiles. So does Panel Action Bingo for Game Boy. And I seem to remember at least one game using metatiles that were 48 pixels tall so that five of them would be as tall as a screen.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Thu Jan 26, 2012 8:48 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[cpow]]></name></author>
<updated>2012-01-26T08:13:01-07:00</updated>
<published>2012-01-26T08:13:01-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8196&amp;p=89283#p89283</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8196&amp;p=89283#p89283"/>
<title type="html"><![CDATA[Designing a level editor]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8196&amp;p=89283#p89283"><![CDATA[
<div class="quotetitle">tepples wrote:</div><div class="quotecontent"><br />Some of the Sonic games use 256x256 pixel tiles, which are recursively broken up into smaller tiles. Sonic 2 uses 128x128. Tokumaru's Sonic tribute uses a quadtree: 256x256 made of four 128x128, each made of four 64x64, etc.<br /></div><br /><br />Does it make sense to support non-power-of-two sizes like 48, 80, 96?  From a "I'm an artist I just want to do drawings" perspective I think so...I was thinking, for example, of being able to draw things like level entrances [think Zelda underworld doors--48x32 [but I haven't a clue how they're stored in the Zelda map info]].  <br /><br />But from a map perspective, the map-to-nametable conversion would probably be complicated by having such strange sized metatiles.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3705">cpow</a> — Thu Jan 26, 2012 8:13 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2012-01-25T21:48:37-07:00</updated>
<published>2012-01-25T21:48:37-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8196&amp;p=89280#p89280</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8196&amp;p=89280#p89280"/>
<title type="html"><![CDATA[Designing a level editor]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8196&amp;p=89280#p89280"><![CDATA[
Some of the Sonic games use 256x256 pixel tiles, which are recursively broken up into smaller tiles. Sonic 2 uses 128x128. Tokumaru's Sonic tribute uses a quadtree: 256x256 made of four 128x128, each made of four 64x64, etc.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Wed Jan 25, 2012 9:48 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[cpow]]></name></author>
<updated>2012-01-25T20:38:56-07:00</updated>
<published>2012-01-25T20:38:56-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8196&amp;p=89278#p89278</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8196&amp;p=89278#p89278"/>
<title type="html"><![CDATA[Designing a level editor]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8196&amp;p=89278#p89278"><![CDATA[
Hey thefox...I forgot all about this thread -- thankfully it got bumped!  Where are you with this?  Did you decide to do C++/Qt?  You know why I'm asking.  <img src="http://forums.nesdev.com/images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" />  EDIT: Doh.  Read the thread backwards...what is Tiled written in?<br /><br />Currently the Tile Editor in NESICIDE is all I've got, but Map Editor is on the horizon...<br /><br /><div class="quotetitle">thefox wrote:</div><div class="quotecontent"><br />* 16x16 tileset for the background tiles.<br /></div><br /><br />My Tile Editor supports {8,16,32,48,64,80,96,128} x {8,16,32,48,64,80,96,128} tiles.  Each tile bigger than 16x16 carries its color attributes with it.  I don't know why I stopped at 128...is there a need to go bigger?<br /><br /><div class="quotetitle">thefox wrote:</div><div class="quotecontent"><br />* Attributes such as solidity as properties of the background tiles (they can be strings, so the same symbolic constants could be used as in the 6502 code).<br />* Every 64x64 tile has a property "type" that specifies the type represented by the tile (like ENEMY1).<br />* Object instances can have additional properties, like the destination map for doors, or an item ID for items contained in a box.<br /></div><br /><br />I currently support string, integer, and user-defined enumeration types for Tile properties.  Each can have a global default and each Tile can have its own unique value for any property.  Adding properties adds them for all tiles, etc.  Enumeration definitions are emitted to a user-specifiable file for inclusion in the rest of the source.<br /><br />I'm not sure how to best emit the individual Tile property values for use within the source code yet, though.  I suppose scopes could be used to reduce pollution.<br /><br />If you're still thinking about this or even working on it I'd like to hear!<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3705">cpow</a> — Wed Jan 25, 2012 8:38 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[charizpowell]]></name></author>
<updated>2012-01-25T19:26:00-07:00</updated>
<published>2012-01-25T19:26:00-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8196&amp;p=89276#p89276</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8196&amp;p=89276#p89276"/>
<title type="html"><![CDATA[Designing a level editor]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8196&amp;p=89276#p89276"><![CDATA[
Nice!!!!<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5171">charizpowell</a> — Wed Jan 25, 2012 7:26 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[thefox]]></name></author>
<updated>2011-10-07T14:43:36-07:00</updated>
<published>2011-10-07T14:43:36-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8196&amp;p=84849#p84849</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8196&amp;p=84849#p84849"/>
<title type="html"><![CDATA[Designing a level editor]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8196&amp;p=84849#p84849"><![CDATA[
I've decided to use Tiled. I may make a customized fork out of it, but we'll see. Just to wrap this up, here's what I plan to do:<br /><br />* Have two layers: background and objects.<br />* 16x16 tileset for the background tiles.<br />* Attributes such as solidity as properties of the background tiles (they can be strings, so the same symbolic constants could be used as in the 6502 code).<br />* 64x64 tileset (or something) for the objects. Every object is represented by a 64x64 tile, and they are added to the object layers as Tile Objects. The tile image is used just to represent the object graphically in the map, it doesn't have to be the same as in the game, or can display a string/etc for special objects. (There's only one problem: tile object coordinates are relative to the bottom left corner of the object, and it's not possible to move the hotspot, so the coordinates need to be adjusted at export time.)<br />* Every 64x64 tile has a property "type" that specifies the type represented by the tile (like ENEMY1).<br />* Object instances can have additional properties, like the destination map for doors, or an item ID for items contained in a box.<br />* Shell commands to convert the level and run it in an emulator.<br />* Starting point/scroll stoppers/etc special objects are defined with normal objects.<br />* Tool to convert the .tmx (the map) and .tsx (the tileset) XML files to data for NES.<br /><br />I really like the elegance of Tiled compared to other generic map editors.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=80">thefox</a> — Fri Oct 07, 2011 2:43 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[thefox]]></name></author>
<updated>2011-10-06T20:11:07-07:00</updated>
<published>2011-10-06T20:11:07-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8196&amp;p=84832#p84832</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8196&amp;p=84832#p84832"/>
<title type="html"><![CDATA[Designing a level editor]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8196&amp;p=84832#p84832"><![CDATA[
I may actually be able to use a generic tile editor like <a href="http://www.mapeditor.org/" class="postlink">Tiled</a> for my purposes, just have to write some tools to convert the data. Tiled in particular seems pretty good. It even has a simple object support, but unfortunately all the object and tile properties have to be specified manually, so it probably gets pretty chaotic after a while. It's very flexible, though.<br /><br />All the other ones I tried didn't seem very good or flexible enough.<br /><br /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent"><br />You might use these extra parameters to differentiate similar objects for example. Say that all item boxes in a game behave exactly the same, and the only difference between them is the item they contain, so you use a single object and specify the item it contains as a parameter.<br /></div><br />Yeah, you're right.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=80">thefox</a> — Thu Oct 06, 2011 8:11 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2011-10-06T19:53:53-07:00</updated>
<published>2011-10-06T19:53:53-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8196&amp;p=84830#p84830</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8196&amp;p=84830#p84830"/>
<title type="html"><![CDATA[Designing a level editor]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8196&amp;p=84830#p84830"><![CDATA[
<div class="quotetitle">thefox wrote:</div><div class="quotecontent"><br />I can't think of any examples where each object instance would need additional data, though there probably are some.<br /></div><br />Sure there are. You might use these extra parameters to differentiate similar objects for example. Say that all item boxes in a game behave exactly the same, and the only difference between them is the item they contain, so you use a single object and specify the item it contains as a parameter. Other uses for these parameters might be flipping objects vertically or horizontally, changing their color, the number of hits it takes to kill them, a pointer to a RAM location where they can save their status (i.e. you might want to keep some of the object's state even after it's deactivated and reactivated)... Just about any parameter you might want to give to their constructors.<br /><br />In my game I have only one parameter byte, so there are cases where the object code itself contains some parameters (i.e. two different object codes point to the same constructor method, which has to look into the code to retrieve some info about the object). Another solution when the parameters don't fit in a byte is to use that byte as an index into a table that contains the actual parameters for the objects of the current level.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Thu Oct 06, 2011 7:53 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[thefox]]></name></author>
<updated>2011-10-06T17:26:36-07:00</updated>
<published>2011-10-06T17:26:36-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8196&amp;p=84826#p84826</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8196&amp;p=84826#p84826"/>
<title type="html"><![CDATA[Designing a level editor]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8196&amp;p=84826#p84826"><![CDATA[
<div class="quotetitle">snarfblam wrote:</div><div class="quotecontent"><br />http://www.youtube.com/watch?v=MbxS60M7tvM<br />(Or <a href="http://snarfblam.com/words/?p=236#more-23" class="postlink">give it a whirl</a>)<br /></div><br />I tried it, it's really nice! Nice source of inspiration.<br /><br /><div class="quotetitle">Kasumi wrote:</div><div class="quotecontent"><br />How about placing them, and a list of bytes associated with them? (In addition to the image)<br /><br />Say each object universally needs two bytes. You double click an object, and put in two values. Done. Then if you later decide you needed three bytes for every object, your editor doesn't even need to change. Just change the global number of bytes each object needs from two to three and put in the extra value for each object. Your export plugins can deal with the output.<br /></div><br />Are you talking about values that are specified for each object instance? I can't think of any examples where each object instance would need additional data, though there probably are some.<br /><br />Specifically I'm trying to think what data belongs to the level editor, and what would be better in a separate tool (an object editor). Maybe the level editor should read the object definitions from a separate file (generated by the object editor), even.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=80">thefox</a> — Thu Oct 06, 2011 5:26 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Kasumi]]></name></author>
<updated>2011-10-06T17:03:35-07:00</updated>
<published>2011-10-06T17:03:35-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8196&amp;p=84820#p84820</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8196&amp;p=84820#p84820"/>
<title type="html"><![CDATA[Designing a level editor]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8196&amp;p=84820#p84820"><![CDATA[
<div class="quotetitle">thefox wrote:</div><div class="quotecontent"><br />Thanks for the input.<br /><br />I'm wondering if the object support should have anything more than being able to place them on the map. Maybe an object editor that lets one assign an image to the object.<br /></div><br /><br />How about placing them, and a list of bytes associated with them? (In addition to the image)<br /><br />Say each object universally needs two bytes. You double click an object, and put in two values. Done. Then if you later decide you needed three bytes for every object, your editor doesn't even need to change. Just change the global number of bytes each object needs from two to three and put in the extra value for each object. Your export plugins can deal with the output.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3504">Kasumi</a> — Thu Oct 06, 2011 5:03 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[thefox]]></name></author>
<updated>2011-10-06T16:55:30-07:00</updated>
<published>2011-10-06T16:55:30-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8196&amp;p=84819#p84819</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8196&amp;p=84819#p84819"/>
<title type="html"><![CDATA[Designing a level editor]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8196&amp;p=84819#p84819"><![CDATA[
Thanks for the input.<br /><br /><div class="quotetitle">Kasumi wrote:</div><div class="quotecontent"><br />I hope I explained that well... It also keeps track of how many times all the tiles are used, so if you see one that's low you can change it to a different one to save space.<br /></div><br />I think I got it.<br /><br />Right after posting I thought this was getting too complex already, so I think I'm dropping "metatiles in metatiles" support from the editor itself because I don't need it for my current project. If I need that at some point, I'm just going to write an export plugin that optimizes the data in that way.<br /><br />So, what I basically need in the GUI is 1) list of metatiles 2) list of objects 3) the map view itself 4) a metatile attribute editor.<br /><br />I'm wondering if the object support should have anything more than being able to place them on the map. Maybe an object editor that lets one assign an image to the object.<br /><br /><div class="quotetitle">snarfblam wrote:</div><div class="quotecontent"><br />When you talk about objects, is this object-based level design (as in SMB3) or sprites (power-ups, enemies, etc.)?<br /></div><br />Enemies etc.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Also, just curious, what language will the editor be written in?<br /></div><br />C# probably. I might go with C++ to learn Qt though.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=80">thefox</a> — Thu Oct 06, 2011 4:55 pm</p><hr />
]]></content>
</entry>
</feed>