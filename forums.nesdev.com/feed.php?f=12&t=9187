<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=12&amp;t=9187" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2014-07-06T18:44:10-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=12&amp;t=9187</id>
<entry>
<author><name><![CDATA[93143]]></name></author>
<updated>2014-07-06T18:44:10-07:00</updated>
<published>2014-07-06T18:44:10-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9187&amp;p=130743#p130743</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9187&amp;p=130743#p130743"/>
<title type="html"><![CDATA[Re: High color bitmap on the SNES]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9187&amp;p=130743#p130743"><![CDATA[
No, COLDATA is separate from CGRAM.  It's the subscreen background colour.  Writing an arbitrary colour to it takes six pixels (assuming standard DMA at 8 cycles per byte), and intermediate values would be displayed - assuming writing to it during display takes immediate effect.  Grayscale or monochrome could be done with two-pixel granularity...<br /><br />Isn't the CPU (and by extension DMA) halted for 40 cycles in the middle of every scanline?  That wouldn't look very nice...<br /><br />...<br /><br />I do kinda like the mosaic idea combined with colour math, if you really want full-screen direct colour and don't mind horizontally doubled pixels.  It seems like it should work, though the underlying palette would only be 12-bit...<br /><br />Unfortunately it <em>still</em> wouldn't be the functional equivalent of the MD version, since a single frame would exceed the available DMA bandwidth, whereas the MD version by definition does not.  And since a full screen of this would take up more than half the VRAM, paging would be impossible without tearing...<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6595">93143</a> — Sun Jul 06, 2014 6:44 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Sik]]></name></author>
<updated>2014-07-06T18:39:09-07:00</updated>
<published>2014-07-06T18:39:09-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9187&amp;p=130742#p130742</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9187&amp;p=130742#p130742"/>
<title type="html"><![CDATA[Re: High color bitmap on the SNES]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9187&amp;p=130742#p130742"><![CDATA[
I don't have the SNES documents with me right now, I just assumed you meant DMAing to the CG memory register (which is literally &quot;copy this word to CG RAM&quot;). I'm not aware of any other method to write to it =S<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4526">Sik</a> — Sun Jul 06, 2014 6:39 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2014-07-06T17:19:12-07:00</updated>
<published>2014-07-06T17:19:12-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9187&amp;p=130741#p130741</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9187&amp;p=130741#p130741"/>
<title type="html"><![CDATA[Re: High color bitmap on the SNES]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9187&amp;p=130741#p130741"><![CDATA[
<div class="quotetitle">Sik wrote:</div><div class="quotecontent"><br />also that's not what HAM does (HAM basically just takes the previous pixel and replaces one of the RGB components to get the new pixel), but eh, you get the idea.<br /></div><br />According to wiki.superfamicom.org, COLDATA writes transfer 3 bits of &quot;which components to overwrite&quot; and 5 bytes of value. That looked very HAMmy to me.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Sun Jul 06, 2014 5:19 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Sik]]></name></author>
<updated>2014-07-06T17:03:12-07:00</updated>
<published>2014-07-06T17:03:12-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9187&amp;p=130740#p130740</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9187&amp;p=130740#p130740"/>
<title type="html"><![CDATA[Re: High color bitmap on the SNES]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9187&amp;p=130740#p130740"><![CDATA[
<div class="quotetitle">tepples wrote:</div><div class="quotecontent"><br />Could you do HAM (hold and modify) by DMAing to COLDATA ($2132)?<br /></div><br />That's what the SNES counterpart of the original method would be, pretty much.<br /><br />There's only one thing I'm not sure about which is why I started this thread in the first place. Writes are byte-wide, not word-wide (unlike in the Mega Drive). This means that transferring a color takes up two writes. So here's the question: does the first byte get latched until the second is written, or do bytes get written immediately? Because if the latter, the method won't work (every other column would have an invalid color).<br /><br />EDIT: also that's not what HAM does (HAM basically just takes the previous pixel and replaces one of the RGB components to get the new pixel), but eh, you get the idea.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4526">Sik</a> — Sun Jul 06, 2014 5:03 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[93143]]></name></author>
<updated>2014-07-06T16:48:04-07:00</updated>
<published>2014-07-06T16:48:04-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9187&amp;p=130739#p130739</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9187&amp;p=130739#p130739"/>
<title type="html"><![CDATA[Re: High color bitmap on the SNES]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9187&amp;p=130739#p130739"><![CDATA[
<div class="quotetitle">Stef wrote:</div><div class="quotecontent"><br />Nice done, the image looks really nice !<br /></div><br />Thanks!<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Actually you used the &quot;classical&quot; scanline palette reprogramming but maybe at the maximum capabilities for the SNES.<br /></div><br />I kinda suspected something like this had been attempted before, and last night I stumbled across a discussion of the Overdrive demo in which it became evident that it was doing something similar...<br /><br />But my demo wasn't at max capability.  This afternoon I changed the preprocessing algorithm, from only checking the earliest scanline with a stale colour to using a two-constant quality weighting system on <em>all</em> scanlines with stale colours.  (This boosted the execution time from 3-4 seconds to 30-40 seconds...)  The result is attached - the first version had 337 colours; this one has 417.  And it's still only using about 34% of the available HDMA bandwidth.  I guess it's just a stubborn picture; the success of the HDMA scheduling seems to depend to a significant degree on the parameters used in the image quantizer...<br /><br /><div class="quotetitle">tepples wrote:</div><div class="quotecontent"><br />So it's more like the 3200-color mode of DreamGrafix for Apple IIGS.<br /></div><br />I... guess so, yeah.  I'd never seen that before.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Mode 3 gives you a 256-color BG1 and a 16-color BG2, and 256-color layers can be set to &quot;direct color&quot; (a constant BBGGGRRR palette). This &quot;direct color&quot; alone nearly equals anything that can be done with the Genesis. But then you can do color addition between a direct color layer and a 16-color layer with a BBGR palette. Or did we already rule that out pages ago?<br /></div><br />No, it was mentioned (by you, as a matter of fact), and AFAICT it should work.  The problem is that it overloads the VRAM, so you have to letterbox it a bit.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6595">93143</a> — Sun Jul 06, 2014 4:48 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2014-07-06T14:15:36-07:00</updated>
<published>2014-07-06T14:15:36-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9187&amp;p=130734#p130734</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9187&amp;p=130734#p130734"/>
<title type="html"><![CDATA[Re: High color bitmap on the SNES]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9187&amp;p=130734#p130734"><![CDATA[
Could you do HAM (hold and modify) by DMAing to COLDATA ($2132)?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Sun Jul 06, 2014 2:15 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Sik]]></name></author>
<updated>2014-07-06T13:53:05-07:00</updated>
<published>2014-07-06T13:53:05-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9187&amp;p=130733#p130733</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9187&amp;p=130733#p130733"/>
<title type="html"><![CDATA[Re: High color bitmap on the SNES]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9187&amp;p=130733#p130733"><![CDATA[
<div class="quotetitle">93143 wrote:</div><div class="quotecontent"><br />According to byuu (circa bsnes v0.22) CGRAM internal addresses are scrambled during active display, like the OAM, and according to nocash force blank is always black.<br /></div><br />For the original method active scan doesn't matter since it uses forced blank. So can somebody confirm if the SNES displays black instead of the background color while blanking?<br /><br /><div class="quotetitle">93143 wrote:</div><div class="quotecontent"><br />Also I don't think the SNES displays glitch pixels like the MD when you change the palette (but I don't have a source for that and you can probably disregard it).<br /></div><br />The original method didn't use the glitch pixels so don't bother with that... they were hidden by making them the same color as the background. The idea is that you change the background color constantly to trick the video hardware into rendering a bitmap.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4526">Sik</a> — Sun Jul 06, 2014 1:53 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2014-07-06T08:01:20-07:00</updated>
<published>2014-07-06T08:01:20-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9187&amp;p=130716#p130716</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9187&amp;p=130716#p130716"/>
<title type="html"><![CDATA[Re: High color bitmap on the SNES]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9187&amp;p=130716#p130716"><![CDATA[
<div class="quotetitle">93143 wrote:</div><div class="quotecontent"><br /><div class="quotetitle">Sik wrote:</div><div class="quotecontent">OK, so it's definitely not working even remotely similar to the Mega Drive demo.<br /></div><br />Nope.  Sorry if I got your hopes up.  It's not actually direct colour; it's just a dynamic palette, changing entries during HBlank as the opportunity arises.</div><br />So it's more like the 3200-color mode of DreamGrafix for Apple IIGS.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />According to byuu (circa bsnes v0.22) CGRAM internal addresses are scrambled during active display, like the OAM, and according to nocash force blank is always black.  Also I don't think the SNES displays glitch pixels like the MD when you change the palette (but I don't have a source for that and you can probably disregard it).  So I'm not sure how one would go about accessing the full 15-bit palette directly.<br /></div><br />Now I'm thinking of how to get 12-bit color. Mode 3 gives you a 256-color BG1 and a 16-color BG2, and 256-color layers can be set to &quot;direct color&quot; (a constant BBGGGRRR palette). This &quot;direct color&quot; alone nearly equals anything that can be done with the Genesis. But then you can do color addition between a direct color layer and a 16-color layer with a BBGR palette. Or did we already rule that out pages ago?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Sun Jul 06, 2014 8:01 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Stef]]></name></author>
<updated>2014-07-06T06:44:38-07:00</updated>
<published>2014-07-06T06:44:38-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9187&amp;p=130713#p130713</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9187&amp;p=130713#p130713"/>
<title type="html"><![CDATA[Re: High color bitmap on the SNES]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9187&amp;p=130713#p130713"><![CDATA[
<div class="quotetitle">93143 wrote:</div><div class="quotecontent"><br />I'm a bit late to the party here, I guess...<br /><br />This is a demo of a palette expansion technique using HDMA.  The actual SNES coding is not especially interesting; it's basically the same thing everyone does for background gradients, but with all channels engaged and using much funkier-looking tables, with a palette refresh in the NMI routine.<br /><br />(Let me guess - someone's already done this, and I just haven't stumbled across it yet?)<br /><br />It isn't really like the Mega Drive version from the OP, as it requires a lot of offline processing to generate the HDMA tables, whereas the FantomBitmap technique can apparently be used to render games live if you have a coprocessor that isn't halted by the DMA - say, the one in the Sega CD.  But this looks much better and can at least be used for title screens...<br /><br />Also, my HDMA scheduler tool could probably be improved; for the moment I've satisfied myself with beating the colour count in the MD demo.  Even as it stands, I've gotten colour counts in excess of 500 with other (copyrighted) images, but since this was the one used in this thread...<br /><br />I absolutely cannot find the original MD demo image.  I can only assume this wasn't it...<br /></div><br /><br />Nice done, the image looks really nice ! I don't know how much colors are actually display but in conjunction with the RGB555 master palette the result is definitely very good and far better than what the MD RGB333 BITMAP mode can do !<br />Actually you used the &quot;classical&quot; scanline palette reprogramming but maybe at the maximum capabilities for the SNES.<br />The same method is used in the &quot;Overdrive&quot; MD demo to display a 512 colors image: they abuse of palette reprogramming during HBlank. The advantage on SNES is that you can use HDMA for that and so have CPU free (it just need to prepare the HDMA tables).<br />In &quot;Overdrive&quot; the HBlank area is extended so we can send more colors during blank period than usual... but because of that, we cannot use the H-Int anymore and the CPU is almost 100% busy in handling that (only VBlank period to do something else).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6058">Stef</a> — Sun Jul 06, 2014 6:44 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[93143]]></name></author>
<updated>2014-07-06T00:04:00-07:00</updated>
<published>2014-07-06T00:04:00-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9187&amp;p=130708#p130708</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9187&amp;p=130708#p130708"/>
<title type="html"><![CDATA[Re: High color bitmap on the SNES]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9187&amp;p=130708#p130708"><![CDATA[
<div class="quotetitle">Sik wrote:</div><div class="quotecontent"><br />OK, so it's definitely not working even remotely similar to the Mega Drive demo.<br /></div><br />Nope.  Sorry if I got your hopes up.  It's not actually direct colour; it's just a dynamic palette, changing entries during HBlank as the opportunity arises.  It doesn't do anything fancy with the hardware.<br /><br />But at least it doesn't halt the CPU, and the pixels are normal-sized...<br /><br />According to byuu (circa bsnes v0.22) CGRAM internal addresses are scrambled during active display, like the OAM, and according to nocash force blank is always black.  Also I don't think the SNES displays glitch pixels like the MD when you change the palette (but I don't have a source for that and you can probably disregard it).  So I'm not sure how one would go about accessing the full 15-bit palette directly.<br /><br />...on the other hand, Joshua Cain's 32,768 colour demo from 2002 really does display 32,768 colours - it just looks more like that &quot;Font colour&quot; box to the right of this post editor I'm using than any sort of actual picture.  And it doesn't come close to filling the screen.  And it works fine in ZSNES.  I suspect it's just a combination of fairly conventional methods.<br /><br />Either way, precisely-timed hardware exploitation isn't really my speed right yet - this is literally my first ROM.  It's just a bloody hack of the slideshow demo from Neviksti's SNES Starter Kit, and the HDMA code started out as a copy/paste from the tutorial on smwcentral...<br /><br /><div class="quotetitle">Sik wrote:</div><div class="quotecontent"><br /><div class="quotetitle">93143 wrote:</div><div class="quotecontent">If you get the chance, could you post it?  I'd be interested to see what this method could do with it...<br /></div><br />Yeah, but it'll take a while...</div><br />Cool, thanks. I'm in no hurry...<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6595">93143</a> — Sun Jul 06, 2014 12:04 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Sik]]></name></author>
<updated>2014-07-05T22:13:12-07:00</updated>
<published>2014-07-05T22:13:12-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9187&amp;p=130705#p130705</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9187&amp;p=130705#p130705"/>
<title type="html"><![CDATA[Re: High color bitmap on the SNES]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9187&amp;p=130705#p130705"><![CDATA[
<div class="quotetitle">93143 wrote:</div><div class="quotecontent"><br />Uh...  it requires a LOT of offline processing to generate the HDMA tables.<br /><br />Seriously, just processing a pre-quantized image (and simply flagging unhandled pixels instead of trying to re-quantize to fit them in) takes at least a few seconds on a 3 GHz Pentium 4.  Admittedly, it's written in Matlab and wasn't coded for speed, but still...<br /></div><br />OK, so it's definitely not working even remotely similar to the Mega Drive demo. If it was you could get away with just two well-timed DMA operations (would be one if it wasn't because of the 64KB limit). In that case you'd literally have a linear high color bitmap (with some gap between lines).<br /><br /><div class="quotetitle">93143 wrote:</div><div class="quotecontent"><br />If you get the chance, could you post it?  I'd be interested to see what this method could do with it...<br /></div><br />Yeah, but it'll take a while...<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4526">Sik</a> — Sat Jul 05, 2014 10:13 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[93143]]></name></author>
<updated>2014-07-05T22:15:45-07:00</updated>
<published>2014-07-05T22:08:41-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9187&amp;p=130704#p130704</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9187&amp;p=130704#p130704"/>
<title type="html"><![CDATA[Re: High color bitmap on the SNES]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9187&amp;p=130704#p130704"><![CDATA[
<div class="quotetitle">Sik wrote:</div><div class="quotecontent"><br /><div class="quotetitle">93143 wrote:</div><div class="quotecontent">It isn't really like the Mega Drive version from the OP, as it requires a lot of offline processing to generate the HDMA tables<br /></div>I imagine that one of the co-processors used on the SNES may be able to work with this.</div><br />Uh...  it requires a LOT of offline processing to generate the HDMA tables.<br /><br />Seriously, just processing a pre-quantized image (and simply flagging unhandled pixels instead of trying to re-quantize to fit them in) takes at least a few seconds on a 3 GHz Pentium 4.  Admittedly, it's written in Matlab and wasn't coded for speed, but still...<br /><br />Maybe I'm just being uncreative.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />I do have the image (since I was the one that took it) but it's on my other hard disk so I can't access it at the moment =/<br /></div><br />If you get the chance, could you post it?  I'd be interested to see what this method could do with it...<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6595">93143</a> — Sat Jul 05, 2014 10:08 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Sik]]></name></author>
<updated>2014-07-05T01:50:21-07:00</updated>
<published>2014-07-05T01:50:21-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9187&amp;p=130662#p130662</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9187&amp;p=130662#p130662"/>
<title type="html"><![CDATA[Re: High color bitmap on the SNES]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9187&amp;p=130662#p130662"><![CDATA[
<div class="quotetitle">93143 wrote:</div><div class="quotecontent"><br />(Let me guess - someone's already done this, and I just haven't stumbled across it yet?)<br /></div><br />Not that I'm aware of.<br /><br /><div class="quotetitle">93143 wrote:</div><div class="quotecontent"><br />It isn't really like the Mega Drive version from the OP, as it requires a lot of offline processing to generate the HDMA tables, whereas the FantomBitmap technique can apparently be used to render games live if you have a coprocessor that isn't halted by the DMA - say, the one in the Sega CD.  But this looks much better and can at least be used for title screens...<br /></div><br />I imagine that one of the co-processors used on the SNES may be able to work with this.<br /><br />Even then, there's also the option of not making it fullscreen. Overdrive was originally going to include a screen that was half FantomBitmap and half normal (with a scrolling parallax), using that second half to do processing. In practice though I doubt there's enough CPU time left to do anything useful (remember, rendering on such a large bitmap takes up a lot of time).<br /><br /><div class="quotetitle">93143 wrote:</div><div class="quotecontent"><br />I absolutely cannot find the original MD demo image.  I can only assume this wasn't it...<br /></div><br />If I could remember what the search query was I'd just look up it again... I do have the image (since I was the one that took it) but it's on my other hard disk so I can't access it at the moment =/<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4526">Sik</a> — Sat Jul 05, 2014 1:50 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[93143]]></name></author>
<updated>2014-07-05T00:26:08-07:00</updated>
<published>2014-07-05T00:26:08-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9187&amp;p=130659#p130659</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9187&amp;p=130659#p130659"/>
<title type="html"><![CDATA[Re: High color bitmap on the SNES]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9187&amp;p=130659#p130659"><![CDATA[
I'm a bit late to the party here, I guess...<br /><br />This is a demo of a palette expansion technique using HDMA.  The actual SNES coding is not especially interesting; it's basically the same thing everyone does for background gradients, but with all channels engaged and using much funkier-looking tables, with a palette refresh in the NMI routine.<br /><br />(Let me guess - someone's already done this, and I just haven't stumbled across it yet?)<br /><br />It isn't really like the Mega Drive version from the OP, as it requires a lot of offline processing to generate the HDMA tables, whereas the FantomBitmap technique can apparently be used to render games live if you have a coprocessor that isn't halted by the DMA - say, the one in the Sega CD.  But this looks much better and can at least be used for title screens...<br /><br />Also, my HDMA scheduler tool could probably be improved; for the moment I've satisfied myself with beating the colour count in the MD demo.  Even as it stands, I've gotten colour counts in excess of 500 with other (copyrighted) images, but since this was the one used in this thread...<br /><br />I absolutely cannot find the original MD demo image.  I can only assume this wasn't it...<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6595">93143</a> — Sat Jul 05, 2014 12:26 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Sik]]></name></author>
<updated>2012-08-06T06:12:40-07:00</updated>
<published>2012-08-06T06:12:40-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9187&amp;p=97699#p97699</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9187&amp;p=97699#p97699"/>
<title type="html"><![CDATA[Re: High color bitmap on the SNES]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9187&amp;p=97699#p97699"><![CDATA[
I have no idea how the SNES PPU works internally at all, but if it's anything like the Mega Drive, it doesn't cache the tilemaps at all but reads them on-the-fly as it rasters. No idea if the mosaic data is cached, though (which could be a possibility, especially since it can work with non-power-of-two values). It's also possible it may work, but only on a 16 pixel granularity (considering that mosaic seems to work on that step amount).<br /><br />Is there any research on how the SNES PPU renders each scanline? Maybe Byuu has more info?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4526">Sik</a> — Mon Aug 06, 2012 6:12 am</p><hr />
]]></content>
</entry>
</feed>