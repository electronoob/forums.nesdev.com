<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=3&amp;t=9009" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2012-06-20T10:42:56-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=3&amp;t=9009</id>
<entry>
<author><name><![CDATA[cpow]]></name></author>
<updated>2012-06-20T10:42:56-07:00</updated>
<published>2012-06-20T10:42:56-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9009&amp;p=95728#p95728</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9009&amp;p=95728#p95728"/>
<title type="html"><![CDATA[DMC DMA during sprite DMA on Visual2A03]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9009&amp;p=95728#p95728"><![CDATA[
<div class="quotetitle">tepples wrote:</div><div class="quotecontent"><br />Interesting. Can you get two DMC DMAs to happen during one sprite DMA using playback speed $F? I'd love to be able to close this out by leaving it at "Each DMC DMA extends sprite DMA by two cycles", but I need this one final validation before I can commit to that wording.<br /></div><br /><br />Closed.  Explanation is three posts above.   <img src="http://forums.nesdev.com/images/smilies/icon_cool.gif" alt="8)" title="Cool" /><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3705">cpow</a> — Wed Jun 20, 2012 10:42 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[cpow]]></name></author>
<updated>2012-06-20T07:52:10-07:00</updated>
<published>2012-06-20T07:52:10-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9009&amp;p=95712#p95712</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9009&amp;p=95712#p95712"/>
<title type="html"><![CDATA[DMC DMA during sprite DMA on Visual2A03]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9009&amp;p=95712#p95712"><![CDATA[
<div class="quotetitle">Zepper wrote:</div><div class="quotecontent"><br />Doesn't it break blargg's dmc dma test roms, regarding the extra cycle?<br /></div><br />The test ROMs I think you're referring to use DMC period $0 which would not generate more than one potential DMC DMA fetch during a sprite DMA.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3705">cpow</a> — Wed Jun 20, 2012 7:52 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Zepper]]></name></author>
<updated>2012-06-20T07:44:37-07:00</updated>
<published>2012-06-20T07:44:37-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9009&amp;p=95709#p95709</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9009&amp;p=95709#p95709"/>
<title type="html"><![CDATA[DMC DMA during sprite DMA on Visual2A03]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9009&amp;p=95709#p95709"><![CDATA[
Doesn't it break blargg's dmc dma test roms, regarding the extra cycle?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=39">Zepper</a> — Wed Jun 20, 2012 7:44 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[cpow]]></name></author>
<updated>2012-06-20T07:19:58-07:00</updated>
<published>2012-06-20T07:19:58-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9009&amp;p=95706#p95706</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9009&amp;p=95706#p95706"/>
<title type="html"><![CDATA[DMC DMA during sprite DMA on Visual2A03]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9009&amp;p=95706#p95706"><![CDATA[
The following Visual2A03 <a href="http://www.qmtpro.com/~nes/chipimages/visual2a03/expert.html?a=fffe&amp;d=40&amp;a=fffc&amp;d=0&amp;a=200&amp;d=a0a1a2a3a4a5a6a7a8a9aaabacadaeafa0a1a2a3a4a5a6a7a8a9aaabacadaeaf&amp;a=2c0&amp;d=a0a1a2a3a4a5a6a7a8a9aaabacadaeafa0a1a2a3a4a5a6a7a8a9aaabacadaeaf&amp;a=c000&amp;d=e0e1e2e3&amp;a=0&amp;d=58a9c08d1740a9018d1340a98f8d1040a9108d1540a9028d1440eaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaeaea8d144010fe&amp;logmore=c_rdy" class="postlink">program</a> was used to capture sprite DMA being interrupted by two consecutive DMC DMA fetches at DMC period $F.  Here's the relevant portions of the logged output:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">cycle   ab   db   rw   Fetch   pc   a   x   y   s   p   c_rdy<br />820   0200   a0   1   LDY #   009e   02   c0   00   bd   nv-Bdizc<br />820   0200   a0   1   LDY #   009e   02   c0   00   bd   nv-Bdizc<br />821   2004   a0   0   LDY #   009e   02   c0   00   bd   nv-Bdizc<br />821   2004   a0   0   LDY #   009e   02   c0   00   bd   nv-Bdizc<br />822   c001   e1   1   SBC &#40;zp,X&#41;   009e   02   c0   00   bd   nv-Bdizc<br />822   c001   e1   1   SBC &#40;zp,X&#41;   009e   02   c0   00   bd   nv-Bdizc<br />823   009d   10   1   BPL    009e   02   c0   00   bd   nv-Bdizc<br />823   009d   10   1   BPL    009e   02   c0   00   bd   nv-Bdizc<br />824   0201   a1   1   LDA &#40;zp,X&#41;   009e   02   c0   00   bd   nv-Bdizc<br />824   0201   a1   1   LDA &#40;zp,X&#41;   009e   02   c0   00   bd   nv-Bdizc<br />825   2004   a1   0   LDA &#40;zp,X&#41;   009e   02   c0   00   bd   nv-Bdizc<br />825   2004   a1   0   LDA &#40;zp,X&#41;   009e   02   c0   00   bd   nv-Bdizc<br /></div><br />The sprite DMA starts at cycle 820.  The first DMC DMA is at cycles 822-823.  The sprite RAM being fetched and the DMC RAM being fetched have been filled with different breadcrumbs so we can see that the fetches occur correctly.  [Sprite DMA gets $a0 then $a1 while DMC DMA gets $e1 in between].<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">cycle   ab   db   rw   Fetch   pc   a   x   y   s   p   c_rdy<br />1252   02d7   a7   1   unknown   009e   02   c0   00   bd   nv-Bdizc<br />1252   02d7   a7   1   unknown   009e   02   c0   00   bd   nv-Bdizc<br />1253   2004   a7   0   unknown   009e   02   c0   00   bd   nv-Bdizc<br />1253   2004   a7   0   unknown   009e   02   c0   00   bd   nv-Bdizc<br />1254   c002   e2   1   unknown   009e   02   c0   00   bd   nv-Bdizc<br />1254   c002   e2   1   unknown   009e   02   c0   00   bd   nv-Bdizc<br />1255   009d   10   1   BPL    009e   02   c0   00   bd   nv-Bdizc<br />1255   009d   10   1   BPL    009e   02   c0   00   bd   nv-Bdizc<br />1256   02d8   a8   1   TAY   009e   02   c0   00   bd   nv-Bdizc<br />1256   02d8   a8   1   TAY   009e   02   c0   00   bd   nv-Bdizc<br />1257   2004   a8   0   TAY   009e   02   c0   00   bd   nv-Bdizc<br />1257   2004   a8   0   TAY   009e   02   c0   00   bd   nv-Bdizc<br /></div><br />The sprite DMA is still going on, and there's a second DMC DMA interruption of it at cycles 1254-1255.  Here again the breadcrumbs show the memory properly being fetched for each operation.  [Sprite DMA gets $a7 then $a8 while DMC DMA gets $e2 in between].<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">cycle   ab   db   rw   Fetch   pc   a   x   y   s   p   c_rdy<br />1334   02ff   af   1   unknown   009e   02   c0   00   bd   nv-Bdizc<br />1334   02ff   af   1   unknown   009e   02   c0   00   bd   nv-Bdizc<br />1335   2004   af   0   unknown   009e   02   c0   00   bd   nv-Bdizc<br />1335   2004   af   0   unknown   009e   02   c0   00   bd   nv-Bdizc<br />1336   009d   10   1   BPL    009e   02   c0   00   bd   nv-Bdizc<br />1336   009d   10   1   BPL    009e   02   c0   00   bd   nv-Bdizc<br />1337   009e   fe   1      009e   02   c0   00   bd   nv-Bdizc<br />1337   009e   fe   1      009e   02   c0   00   bd   nv-Bdizc<br />1338   009f   00   1      009f   02   c0   00   bd   nv-Bdizc<br />1338   009f   00   1      009f   02   c0   00   bd   nv-Bdizc<br /></div><br />The sprite DMA completes and the CPU resumes at cycle 1336, so the sprite DMA has taken 516 cycles total, with two DMC DMA interruptions.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3705">cpow</a> — Wed Jun 20, 2012 7:19 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[cpow]]></name></author>
<updated>2012-06-20T06:12:07-07:00</updated>
<published>2012-06-20T06:12:07-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9009&amp;p=95703#p95703</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9009&amp;p=95703#p95703"/>
<title type="html"><![CDATA[DMC DMA during sprite DMA on Visual2A03]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9009&amp;p=95703#p95703"><![CDATA[
<div class="quotetitle">Dwedit wrote:</div><div class="quotecontent"><br />No clobbering anywhere, sprite DMA just gets interrupted to do the DMC DMA.<br /></div><br />Exactly.  That's why I got excited. <img src="http://forums.nesdev.com/images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" />  I'd only ever seen it assumed that one or the other gets clobbered.  Not true!<br /><div class="quotetitle">Dwedit wrote:</div><div class="quotecontent"><br />But let's see here...<br />and one dummy read at address 1D (program counter) for some reason.<br /></div><br />Probably because, like I said in the other thread, the sprite DMA read/write/read/write beat is maintained since it is still going on, but the DMC DMA only needs to read, so when it's done with its read in the cycle where the sprite DMA would have done a read, there's nothing for either of the two 'controllers' to do in the next bus cycle, so the bus is yielded back to the CPU which puts out its last address as a read.  Most likely due to <a href="http://www.qmtpro.com/~nes/chipimages/visual2a03/expert.html?nosim=t&amp;panx=263.3&amp;pany=411.1&amp;zoom=12.8" class="postlink">these transistors (centered in the image)</a> which control which of the internal AB's go to the AB pins on the 2A03.  [If you click on some of the lines around there you'll find ab_use_spr_w, ab_use_spr_r, ab_use_pcm, ab_use_cpu].<br /><div class="quotetitle">Dwedit wrote:</div><div class="quotecontent"><br />So Visual2A03 says it gets interrupted in the middle of the sprite DMA transfer.  Nothing gets corrupted.  All reads and writes happen properly.  Just one extra read at the program counter.<br /></div> <br />Correct.<br /><div class="quotetitle">tepples wrote:</div><div class="quotecontent"><br />Interesting. Can you get two DMC DMAs to happen during one sprite DMA using playback speed $F? I'd love to be able to close this out by leaving it at "Each DMC DMA extends sprite DMA by two cycles", but I need this one final validation before I can commit to that wording.<br /></div><br />I'll work on that.  Should be fairly easy.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3705">cpow</a> — Wed Jun 20, 2012 6:12 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2012-06-20T04:25:34-07:00</updated>
<published>2012-06-20T04:25:34-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9009&amp;p=95698#p95698</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9009&amp;p=95698#p95698"/>
<title type="html"><![CDATA[DMC DMA during sprite DMA on Visual2A03]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9009&amp;p=95698#p95698"><![CDATA[
Interesting. Can you get two DMC DMAs to happen during one sprite DMA using playback speed $F? I'd love to be able to close this out by leaving it at "Each DMC DMA extends sprite DMA by two cycles", but I need this one final validation before I can commit to that wording.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Wed Jun 20, 2012 4:25 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Dwedit]]></name></author>
<updated>2012-06-19T21:33:31-07:00</updated>
<published>2012-06-19T21:33:31-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9009&amp;p=95687#p95687</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9009&amp;p=95687#p95687"/>
<title type="html"><![CDATA[DMC DMA during sprite DMA on Visual2A03]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9009&amp;p=95687#p95687"><![CDATA[
No clobbering anywhere, sprite DMA just gets interrupted to do the DMC DMA.<br /><br />But let's see here...<br />Sprite DMA begins reading bytes at cycle 564 and finishes before cycle 1078.<br />514 cycles total.  So that's 256 reads due to sprite DMA, 256 writes due to sprite DMA, one read due to DMC, and one dummy read at address 1D (program counter) for some reason.<br />So Visual2A03 says it gets interrupted in the middle of the sprite DMA transfer.  Nothing gets corrupted.  All reads and writes happen properly.  Just one extra read at the program counter.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=53">Dwedit</a> — Tue Jun 19, 2012 9:33 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[jwdonal]]></name></author>
<updated>2012-06-19T21:17:12-07:00</updated>
<published>2012-06-19T21:17:12-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9009&amp;p=95686#p95686</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9009&amp;p=95686#p95686"/>
<title type="html"><![CDATA[DMC DMA during sprite DMA on Visual2A03]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9009&amp;p=95686#p95686"><![CDATA[
<div class="quotetitle">cpow wrote:</div><div class="quotecontent"><br />This log shows that the DMC DMA happens *right in the middle of* the sprite DMA without one impacting the other in any way [sprite data and DMC data are not 'clobbered'].<br /></div><br />I must be misunderstanding what you're saying.  The CPU cannot possibly read two different addresses at the same time.  The CPU only has one address bus.  So obviously one of them has to get clobbered. I agree that neither of the operations is "stalled" if that's what you meant (which was discovered in <a href="http://nesdev.com/bbs/viewtopic.php?t=6100" class="postlink">this</a> thread), but only _one_ of the addresses (either sprite address or DMC address) can be driven on the CPU's address bus. You can't have both. <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" /> So either the DMC read gets sprite data or the sprite read gets DMC data. Those are your only choices.<br /><br />Can you clarify what you meant?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3962">jwdonal</a> — Tue Jun 19, 2012 9:17 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Dwedit]]></name></author>
<updated>2012-06-19T11:55:11-07:00</updated>
<published>2012-06-19T11:55:11-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9009&amp;p=95651#p95651</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9009&amp;p=95651#p95651"/>
<title type="html"><![CDATA[DMC DMA during sprite DMA on Visual2A03]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9009&amp;p=95651#p95651"><![CDATA[
I heard from that other thread that DMC DMA takes 4 cycles normally, 3 if it happens on a CPU write cycle, and 2 if it happens during sprite DMA.  Seems consistent with Blargg's tests.  Then a couple of other rare cases where it happens on the last or second-last cycle of Sprite DMA.<br /><br />But games generally don't care if you don't emulate DMC cycle theft.  Even games that are picky about the DMC channel working correctly (Fire Hawk, Mig 29 Soviet Fighter) run with no glitches if the DMC channel isn't stealing any cycles.<br /><br />Konami games on the other hand need DMC cycle theft to be accurate.   Konami games use a random number generator that repeatedly runs until Vlbank happens.  So any cycle that's wrong will give a different RNG result.<br /><br />Now we just need to find the initial state of the DMC counters.  I suspect it is random.  I base that on the demo of Blades of Steel.  It plays differently every time you power on the NES.  Since DMC cycle theft works differently depending on whether or not it hits a CPU write cycle, that can throw off the RNG easily.  An inconsistent PPU starting state will also throw off the demo, so it's hard to tell why the game is so unpredictable.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=53">Dwedit</a> — Tue Jun 19, 2012 11:55 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[cpow]]></name></author>
<updated>2012-06-19T11:41:18-07:00</updated>
<published>2012-06-19T11:41:18-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9009&amp;p=95650#p95650</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9009&amp;p=95650#p95650"/>
<title type="html"><![CDATA[DMC DMA during sprite DMA on Visual2A03]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9009&amp;p=95650#p95650"><![CDATA[
<div class="quotetitle">Dwedit wrote:</div><div class="quotecontent"><br />You need to annotate the long tables of numbers, say what's significant and why.<br /></div><br />My annotation was above the long table.   <img src="http://forums.nesdev.com/images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /> <br /><br /><div class="quotetitle">cpow wrote:</div><div class="quotecontent"><br />The interesting cycle is cycle 822. This log shows that the DMC DMA happens *right in the middle of* the sprite DMA without one impacting the other in any way [sprite data and DMC data are not 'clobbered']. Cycle 823 is the CPU driving the address bus for one cycle, presumably because the sprite DMA logic needs two cycles per transfer, and since it was held off, it has nothing to put on the bus until cycle 824.<br /><br />Another interesting thing...I'd read that the DMC DMA always takes 4 cycles. But starting at cycle 38 c_rdy (the internal RDY to the 6502) is pulled low and the CPU is held off for what appears to be 3 cycles with the DMC fetch from $C000 being the last of the three. [Not 4?]<br /></div><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3705">cpow</a> — Tue Jun 19, 2012 11:41 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Dwedit]]></name></author>
<updated>2012-06-19T11:37:55-07:00</updated>
<published>2012-06-19T11:37:55-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9009&amp;p=95649#p95649</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9009&amp;p=95649#p95649"/>
<title type="html"><![CDATA[DMC DMA during sprite DMA on Visual2A03]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9009&amp;p=95649#p95649"><![CDATA[
You need to annotate the long tables of numbers, say what's significant and why.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=53">Dwedit</a> — Tue Jun 19, 2012 11:37 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[cpow]]></name></author>
<updated>2012-06-19T10:51:49-07:00</updated>
<published>2012-06-19T10:51:49-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9009&amp;p=95643#p95643</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9009&amp;p=95643#p95643"/>
<title type="html"><![CDATA[Re: DMC DMA during sprite DMA on Visual2A03]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9009&amp;p=95643#p95643"><![CDATA[
<div class="quotetitle">cpow wrote:</div><div class="quotecontent"><br />...<br /></div><br />Forever Alone?   <img src="http://forums.nesdev.com/images/smilies/icon_sad.gif" alt=":(" title="Sad" /><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3705">cpow</a> — Tue Jun 19, 2012 10:51 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[cpow]]></name></author>
<updated>2012-06-13T09:57:05-07:00</updated>
<published>2012-06-13T09:57:05-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9009&amp;p=95464#p95464</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9009&amp;p=95464#p95464"/>
<title type="html"><![CDATA[DMC DMA during sprite DMA on Visual2A03]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9009&amp;p=95464#p95464"><![CDATA[
Using the Visual2A03 and about three hours on my computer to process &gt;1000 CPU cycles, I was able to create a program that started a DMC sample which required fetching a new byte coincident with an in-progress sprite DMA.<br /><br />The Visual2A03 <a href="http://www.qmtpro.com/~nes/chipimages/visual2a03/expert.html?a=fffe&amp;d=40&amp;a=fffc&amp;d=0&amp;a=0&amp;d=58a9c08d1740a9018d1340a98f8d1040a9108d1540a9018d14408d144010fe&amp;logmore=c_rdy" class="postlink">'program'</a><br /><br />Equivalent code:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">.org 0<br />CLI<br />LDA #$C0<br />STA $4017<br />LDA #$01<br />STA $4013<br />LDA #$8F<br />STA $4010<br />LDA #$10<br />STA $4015<br />LDA #$01<br />STA $4014<br />STA $4014<br />forever: BPL forever<br /></div><br />As I was going through this I first thought I'd only need to wait for one sprite DMA completion since the DMC is set for a period of 54 cycles per bit or 432 cycles between DMAs.  That turned out not to be the case because I forgot that I would have to wait both the currently-in-progress 'silence' byte and my newly DMA'd first byte to pass through the DMC output stage before the DMC would fetch another byte using DMA.  I decided to just do two back-to-back sprite DMAs, rather than play with other code to delay a single sprite DMA.<br /><br />Here is the log output from the Visual2A03 'program'...cut down significantly.  The interesting cycle is cycle 822.  This log shows that the DMC DMA happens *right in the middle of* the sprite DMA without one impacting the other in any way [sprite data and DMC data are not 'clobbered'].  Cycle 823 is the CPU driving the address bus for one cycle, presumably because the sprite DMA logic needs two cycles per transfer, and since it was held off, it has nothing to put on the bus until cycle 824. <br /><br />Another interesting thing...I'd read that the DMC DMA always takes 4 cycles.  But starting at cycle 38 c_rdy (the internal RDY to the 6502) is pulled low and the CPU is held off for what appears to be 3 cycles with the DMC fetch from $C000 being the last of the three.  [Not 4?]<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">cycle   ab   db   rw   Fetch   pc   a   x   y   s   p   c_rdy<br />31   0012   8d   1   STA Abs   0012   10   c0   00   bd   nv-Bdizc   1<br />31   0012   8d   1   STA Abs   0012   10   c0   00   bd   nv-Bdizc   1<br />32   0013   15   1      0013   10   c0   00   bd   nv-Bdizc   1<br />32   0013   15   1      0013   10   c0   00   bd   nv-Bdizc   1<br />33   0014   40   1      0014   10   c0   00   bd   nv-Bdizc   1<br />33   0014   40   1      0014   10   c0   00   bd   nv-Bdizc   1<br />34   4015   40   0      0015   10   c0   00   bd   nv-Bdizc   1<br />34   4015   10   0      0015   10   c0   00   bd   nv-Bdizc   1<br />35   0015   a9   1   LDA #   0015   10   c0   00   bd   nv-Bdizc   1<br />35   0015   a9   1   LDA #   0015   10   c0   00   bd   nv-Bdizc   1<br />36   0016   01   1      0016   10   c0   00   bd   nv-Bdizc   1<br />36   0016   01   1      0016   10   c0   00   bd   nv-Bdizc   1<br />37   0017   8d   1   STA Abs   0017   01   c0   00   bd   nv-Bdizc   1<br />37   0017   8d   1   STA Abs   0017   01   c0   00   bd   nv-Bdizc   1<br />38   0018   14   1      0018   01   c0   00   bd   nv-Bdizc   1<br />38   0018   14   1      0018   01   c0   00   bd   nv-Bdizc   0<br />39   0018   14   1      0019   01   c0   00   bd   nv-Bdizc   0<br />39   0018   14   1      0019   01   c0   00   bd   nv-Bdizc   0<br />40   c000   00   1      0019   01   c0   00   bd   nv-Bdizc   0<br />40   c000   00   1      0019   01   c0   00   bd   nv-Bdizc   0<br />41   0018   14   1      0019   01   c0   00   bd   nv-Bdizc   1<br />41   0018   14   1      0019   01   c0   00   bd   nv-Bdizc   1<br />42   0019   40   1      0019   01   c0   00   bd   nv-Bdizc   1<br />42   0019   40   1      0019   01   c0   00   bd   nv-Bdizc   1<br />43   4014   40   0      001a   01   c0   00   bd   nv-Bdizc   1<br />43   4014   01   0      001a   01   c0   00   bd   nv-Bdizc   0<br />44   001a   8d   1   STA Abs   001a   01   c0   00   bd   nv-Bdizc   0<br />44   001a   8d   1   STA Abs   001a   01   c0   00   bd   nv-Bdizc   0<br />45   001a   8d   1   STA Abs   001b   01   c0   00   bd   nv-Bdizc   0<br />45   001a   8d   1   STA Abs   001b   01   c0   00   bd   nv-Bdizc   0<br />46   0100   00   1   BRK   001b   01   c0   00   bd   nv-Bdizc   0<br />46   0100   00   1   BRK   001b   01   c0   00   bd   nv-Bdizc   0<br />47   2004   00   0   BRK   001b   01   c0   00   bd   nv-Bdizc   0<br />47   2004   00   0   BRK   001b   01   c0   00   bd   nv-Bdizc   0<br />48   0101   00   1   BRK   001b   01   c0   00   bd   nv-Bdizc   0<br />48   0101   00   1   BRK   001b   01   c0   00   bd   nv-Bdizc   0<br />49   2004   00   0   BRK   001b   01   c0   00   bd   nv-Bdizc   0<br />49   2004   00   0   BRK   001b   01   c0   00   bd   nv-Bdizc   0<br />50   0102   00   1   BRK   001b   01   c0   00   bd   nv-Bdizc   0<br />50   0102   00   1   BRK   001b   01   c0   00   bd   nv-Bdizc   0<br />51   2004   00   0   BRK   001b   01   c0   00   bd   nv-Bdizc   0<br />51   2004   00   0   BRK   001b   01   c0   00   bd   nv-Bdizc   0<br />...<br />554   01fe   00   1   BRK   001b   01   c0   00   bd   nv-Bdizc   0<br />554   01fe   00   1   BRK   001b   01   c0   00   bd   nv-Bdizc   0<br />555   2004   00   0   BRK   001b   01   c0   00   bd   nv-Bdizc   0<br />555   2004   00   0   BRK   001b   01   c0   00   bd   nv-Bdizc   0<br />556   01ff   00   1   BRK   001b   01   c0   00   bd   nv-Bdizc   0<br />556   01ff   00   1   BRK   001b   01   c0   00   bd   nv-Bdizc   0<br />557   2004   00   0   BRK   001b   01   c0   00   bd   nv-Bdizc   0<br />557   2004   00   0   BRK   001b   01   c0   00   bd   nv-Bdizc   0<br />558   001a   8d   1   STA Abs   001b   01   c0   00   bd   nv-Bdizc   1<br />558   001a   8d   1   STA Abs   001b   01   c0   00   bd   nv-Bdizc   1<br />559   001b   14   1      001b   01   c0   00   bd   nv-Bdizc   1<br />559   001b   14   1      001b   01   c0   00   bd   nv-Bdizc   1<br />560   001c   40   1      001c   01   c0   00   bd   nv-Bdizc   1<br />560   001c   40   1      001c   01   c0   00   bd   nv-Bdizc   1<br />561   4014   40   0      001d   01   c0   00   bd   nv-Bdizc   1<br />561   4014   01   0      001d   01   c0   00   bd   nv-Bdizc   0<br />562   001d   10   1   BPL    001d   01   c0   00   bd   nv-Bdizc   0<br />562   001d   10   1   BPL    001d   01   c0   00   bd   nv-Bdizc   0<br />563   001d   10   1   BPL    001e   01   c0   00   bd   nv-Bdizc   0<br />563   001d   10   1   BPL    001e   01   c0   00   bd   nv-Bdizc   0<br />564   0100   00   1   BRK   001e   01   c0   00   bd   nv-Bdizc   0<br />564   0100   00   1   BRK   001e   01   c0   00   bd   nv-Bdizc   0<br />565   2004   00   0   BRK   001e   01   c0   00   bd   nv-Bdizc   0<br />565   2004   00   0   BRK   001e   01   c0   00   bd   nv-Bdizc   0<br />566   0101   00   1   BRK   001e   01   c0   00   bd   nv-Bdizc   0<br />566   0101   00   1   BRK   001e   01   c0   00   bd   nv-Bdizc   0<br />567   2004   00   0   BRK   001e   01   c0   00   bd   nv-Bdizc   0<br />567   2004   00   0   BRK   001e   01   c0   00   bd   nv-Bdizc   0<br />...<br />818   017f   00   1   BRK   001e   01   c0   00   bd   nv-Bdizc   0<br />818   017f   00   1   BRK   001e   01   c0   00   bd   nv-Bdizc   0<br />819   2004   00   0   BRK   001e   01   c0   00   bd   nv-Bdizc   0<br />819   2004   00   0   BRK   001e   01   c0   00   bd   nv-Bdizc   0<br />820   0180   00   1   BRK   001e   01   c0   00   bd   nv-Bdizc   0<br />820   0180   00   1   BRK   001e   01   c0   00   bd   nv-Bdizc   0<br />821   2004   00   0   BRK   001e   01   c0   00   bd   nv-Bdizc   0<br />821   2004   00   0   BRK   001e   01   c0   00   bd   nv-Bdizc   0<br />822   c001   00   1   BRK   001e   01   c0   00   bd   nv-Bdizc   0<br />822   c001   00   1   BRK   001e   01   c0   00   bd   nv-Bdizc   0<br />823   001d   10   1   BPL    001e   01   c0   00   bd   nv-Bdizc   0<br />823   001d   10   1   BPL    001e   01   c0   00   bd   nv-Bdizc   0<br />824   0181   00   1   BRK   001e   01   c0   00   bd   nv-Bdizc   0<br />824   0181   00   1   BRK   001e   01   c0   00   bd   nv-Bdizc   0<br />825   2004   00   0   BRK   001e   01   c0   00   bd   nv-Bdizc   0<br />825   2004   00   0   BRK   001e   01   c0   00   bd   nv-Bdizc   0<br />826   0182   00   1   BRK   001e   01   c0   00   bd   nv-Bdizc   0<br />826   0182   00   1   BRK   001e   01   c0   00   bd   nv-Bdizc   0<br />827   2004   00   0   BRK   001e   01   c0   00   bd   nv-Bdizc   0<br />827   2004   00   0   BRK   001e   01   c0   00   bd   nv-Bdizc   0<br />...<br />1074   01fe   00   1   BRK   001e   01   c0   00   bd   nv-Bdizc   0<br />1074   01fe   00   1   BRK   001e   01   c0   00   bd   nv-Bdizc   0<br />1075   2004   00   0   BRK   001e   01   c0   00   bd   nv-Bdizc   0<br />1075   2004   00   0   BRK   001e   01   c0   00   bd   nv-Bdizc   0<br />1076   01ff   00   1   BRK   001e   01   c0   00   bd   nv-Bdizc   0<br />1076   01ff   00   1   BRK   001e   01   c0   00   bd   nv-Bdizc   0<br />1077   2004   00   0   BRK   001e   01   c0   00   bd   nv-Bdizc   0<br />1077   2004   00   0   BRK   001e   01   c0   00   bd   nv-Bdizc   0<br />1078   001d   10   1   BPL    001e   01   c0   00   bd   nv-Bdizc   1<br />1078   001d   10   1   BPL    001e   01   c0   00   bd   nv-Bdizc   1<br />1079   001e   fe   1      001e   01   c0   00   bd   nv-Bdizc   1<br />1079   001e   fe   1      001e   01   c0   00   bd   nv-Bdizc   1<br />1080   001f   00   1      001f   01   c0   00   bd   nv-Bdizc   1<br />1080   001f   00   1      001f   01   c0   00   bd   nv-Bdizc   1<br />1081   001d   10   1   BPL    001d   01   c0   00   bd   nv-Bdizc   1<br />1081   001d   10   1   BPL    001d   01   c0   00   bd   nv-Bdizc   1<br />1082   001e   fe   1      001e   01   c0   00   bd   nv-Bdizc   1<br />1082   001e   fe   1      001e   01   c0   00   bd   nv-Bdizc   1<br />1083   001f   00   1      001f   01   c0   00   bd   nv-Bdizc   1<br />1083   001f   00   1      001f   01   c0   00   bd   nv-Bdizc   1<br /></div><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3705">cpow</a> — Wed Jun 13, 2012 9:57 am</p><hr />
]]></content>
</entry>
</feed>