<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - quick questions about making an emulator</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">quick questions about making an emulator</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=10&amp;t=5630">http://forums.nesdev.com/viewtopic.php?f=10&amp;t=5630</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>3</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>yaazz</b> [ Mon Oct 12, 2009 8:06 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>quick questions about making an emulator</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Hi there, I have decided to make my own emulator and have been reading the documentation on this site. It all seems pretty straightforward but I just have a few questions (that is, if anyone is actually here to answer them!) 
<br />
<br />1. After bytes 0-9, the ines header, PRG-ROM starts right away from 10 and continues for at least 16kb. True or False 
<br />Also, I should be copying this data to $8000 in my emulator correct?
<br />
<br />2.Is the code executed straight off the ROM ($8000 +)or does the NES have something built into the bios that loads the PRG-ROM code into ram somewhere for faster execution 
<br />
<br />3. Emulating the instructions sounds like a piece of cake. The tricky part seems to be getting the timing right. My solution as of right now, is to allow a maximum of 1.79 million cycles for every second of execution on the host processor. This way seems like it would allow us to use the emulator on any processor regardless of how fast it is. Is there a better way to do this though?
<br />
<br />thanks in advance!

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Mon Oct 12, 2009 8:26 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: quick questions about making an emulator</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">yaazz wrote:</div><div class="quotecontent">After bytes 0-9, the ines header, PRG-ROM starts right away from 10 and continues for at least 16kb. True or False </div><br />False. The header is bytes 0-15, and there may be a trainer (preloaded PRG RAM data) in a few ROMs. But in most ROMs, the PRG ROM starts at offset 16.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Also, I should be copying this data to $8000 in my emulator correct?</div><br />True for NROM, CNROM, and CPROM boards, which can't bankswitch PRG ROM. Otherwise, it depends on the mapper.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">2.Is the code executed straight off the ROM ($8000 +)</div><br />Yes, unless the program copies code to RAM to run it.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">or does the NES have something built into the bios that loads the PRG-ROM code into ram somewhere for faster execution</div><br />Only on a PowerPak.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">3. Emulating the instructions sounds like a piece of cake. The tricky part seems to be getting the timing right. My solution as of right now, is to allow a maximum of 1.79 million cycles for every second of execution on the host processor. This way seems like it would allow us to use the emulator on any processor regardless of how fast it is. Is there a better way to do this though?</div>
<br />Emulate it frame by frame. Each frame on an NTSC NES has 262 scanlines, and each scanline can be thought of as alternating between 114, 114, and 113 CPU cycles. Then just make sure to limit the emulator to 60.1 frames per second.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>yaazz</b> [ Mon Oct 12, 2009 8:41 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />excellent just what i needed to know. 
<br />
<br />Also, I assume the registers should have a specific location in the memory mapping. The docs don't seem to tell the answer to this though, just that they should start at $2000.  What are the specific addresses of the Accumulator, X, Y, etc.  Or are the main registers not mapped in regular IO

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Mon Oct 12, 2009 11:46 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The CPU registers PC, A, X, Y, and PSR are not mapped in the 6502 CPU memory address space.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>cpow</b> [ Mon Oct 12, 2009 4:29 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: quick questions about making an emulator</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent"> The header is bytes 0-15, and there may be a trainer (preloaded PRG RAM data) in a few ROMs</div>
<br />Can you point me to one?  I've been looking for a ROM with a trainer...at least one with a trainer that does something.
<br />
<br />Also is there docs somewhere on what address range the trainer is supposed to be loaded into?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dwedit</b> [ Mon Oct 12, 2009 4:30 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />On a NES, accessing RAM is the same speed as accessing ROM.
<br />
<br />Instructions which operate on the Zero Page complete in fewer cycles however.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Memblers</b> [ Mon Oct 12, 2009 4:41 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />About those "trainers", AFAIK they might as well be considered depreciated.  I think they had something to do with an old copier device, for mapper hacking perhaps?  Basically they aren't used for anything interesting, and never will be (not on a normal NES anyways - no way to load it).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Mon Oct 12, 2009 4:50 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: quick questions about making an emulator</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">NESICIDE wrote:</div><div class="quotecontent"><div class="quotetitle">tepples wrote:</div><div class="quotecontent"> The header is bytes 0-15, and there may be a trainer (preloaded PRG RAM data) in a few ROMs</div><br />Can you point me to one?  I've been looking for a ROM with a trainer...at least one with a trainer that does something.</div><br />I've never seen them, but as I understand it, most iNES ROMs with a trainer are mapper hacks for early NES copiers made by <a href="http://www.front.com.tw/efront/" class="postlink">Front</a>.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Also is there docs somewhere on what address range the trainer is supposed to be loaded into?</div>
<br />The <a href="http://wiki.nesdev.com/w/index.php/INES#Flags_6" class="postlink">iNES format overview on the wiki</a> says $7000-$71FF.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Mon Oct 12, 2009 5:33 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">yaazz wrote:</div><div class="quotecontent">What are the specific addresses of the Accumulator, X, Y, etc.</div>
<br />You got really confused there. A, X, Y, etc. are CPU registers, they aren't accessed through addresses, the CPU instructions manipulate them. The registers mapped to $2000 onwards exist so that the CPU can communicate with other the parts of the NES, the PPU (video) and the APU (audio). Writing to these registers affect the way video and audio behave. The readable ones will return information about those systems.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>GradualGames</b> [ Tue Oct 13, 2009 11:26 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: quick questions about making an emulator</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">Emulate it frame by frame. Each frame on an NTSC NES has 262 scanlines, and each scanline can be thought of as alternating between 114, 114, and 113 CPU cycles. Then just make sure to limit the emulator to 60.1 frames per second.</div>
<br />
<br />Although I don't have any immediate plans on writing an emulator, I've been thinking about this point recently. It seems like you'd have to place further restrictions than frame by frame timing to have a really accurate emulator. It makes me wonder if JNes does frame by frame, and Nestopia and Nintendulator instruction-by-instruction as well as frame by frame timing. I remember seeing Dikki Painguin run successfully (for me) only on JNes, but not on Nestopia, Nintendulator, or real hardware.  I've also seen a lot of my earliest demos work on JNEs but not on any of the others. The only thing I could think is that it is more forgiving on how much code executes during a vblank or during a frame.  But the end result is, an innacurate emulator can run real games because they (the games..) already have mechanisms in place to enforce proper timing regardless of when a vblank or a main loop frame finishes execution.
<br />
<br />Is that correct or do I have something off there?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Tue Oct 13, 2009 12:48 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: quick questions about making an emulator</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Zero wrote:</div><div class="quotecontent">It makes me wonder if JNes does frame by frame, and Nestopia and Nintendulator instruction-by-instruction as well as frame by frame timing. [...] But the end result is, an innacurate emulator can run real games because they (the games..) already have mechanisms in place to enforce proper timing regardless of when a vblank or a main loop frame finishes execution.</div>
<br />Correct.
<br />
<br />An emulator can generate a frame at a time and still be correct, as long as the output is <em>as if</em> all operations were run in order at the exact time. This <a href="http://uw713doc.sco.com/en/SDK_cprog/_The_As_If_Rule.html" class="postlink">as-if rule</a> allows an emulator to reorder operations as long as it doesn't change the output, such as running the CPU ahead of the PPU for a moment and having the PPU catch up when it matters. Nintendulator is slow because it doesn't do as much reordering as some other emulators; the author values clarity over speed.
<br />
<br />I ought to write an article about catch-up for the wiki. (<strong>EDIT:</strong> I wrote <a href="http://wiki.nesdev.com/w/index.php/Catch-up" class="postlink">this</a>.)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>yaazz</b> [ Wed Oct 14, 2009 6:16 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />So far I have a working fetch-decode cycle, and execution for some of the instructions implemented. 
<br />I can actually write some programs in machine code, place them in ram, and watch them execute! If the instructions are implemented (i.e not placeholders) it will have the correct output come out as well! Its really exciting!!   
<br />
<br />however, I could use a few clarifications! 
<br />First off, adding an extra cycle when a Branch crosses a page boundary. Does this just mean that only if I am somewhere between $8000 to C000-1 (or the other way around) and branch across this gap, that I add one extra cycle? or is a page boundary something else. 
<br /> 
<br />I have been using <!-- m --><a class="postlink" href="http://www.obelisk.demon.co.uk/6502/reference.html">http://www.obelisk.demon.co.uk/6502/reference.html</a><!-- m --> as an instruction reference, and need some clarification about setting Processor_Status_Register flags.  
<br />The guide only says "SET IF CONDITION" but if I do not have this condition do I clear these flags?? This obviously makes a big difference and would like to have some clarification before I implement it wrong! 
<br />
<br />Thanks for the help so far this is turning out to be a fun project for me!

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Wed Oct 14, 2009 7:31 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">yaazz wrote:</div><div class="quotecontent">First off, adding an extra cycle when a Branch crosses a page boundary. Does this just mean that only if I am somewhere between $8000 to C000-1 (or the other way around) and branch across this gap, that I add one extra cycle? or is a page boundary something else. </div>
<br />"Page" in 6502 refers to bits A15-A8 (the most significant byte) of an address. For example, $C3E5 and $C423 are in different pages, but $6904 and $69F8 are in the same page.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Wed Oct 14, 2009 8:15 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent"><div class="quotetitle">yaazz wrote:</div><div class="quotecontent">First off, adding an extra cycle when a Branch crosses a page boundary. Does this just mean that only if I am somewhere between $8000 to C000-1 (or the other way around) and branch across this gap, that I add one extra cycle? or is a page boundary something else. </div><br />"Page" in 6502 refers to bits A15-A8 (the most significant byte) of an address. For example, $C3E5 and $C423 are in different pages, but $6904 and $69F8 are in the same page.</div>
<br />If you didn't get what tepples said (I probably wouldn't if I was getting starting with this stuff), he meant that each page is 256 bytes long. If the high byte of two addresses are different, they are in different pages, if they are the same, they are in the same page.
<br />
<br />And this is true for the whole addressing space, from $0000 to $FFFF. This means that there are 256 pages of 256 pages. This also means that all page-crossing penalties apply to RAM as well, not only ROM.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>yaazz</b> [ Thu Oct 15, 2009 4:47 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent"><div class="quotetitle">yaazz wrote:</div><div class="quotecontent">First off, adding an extra cycle when a Branch crosses a page boundary. Does this just mean that only if I am somewhere between $8000 to C000-1 (or the other way around) and branch across this gap, that I add one extra cycle? or is a page boundary something else. </div><br />"Page" in 6502 refers to bits A15-A8 (the most significant byte) of an address. For example, $C3E5 and $C423 are in different pages, but $6904 and $69F8 are in the same page.</div>
<br />
<br />I figured this out shortly after this post. I knew my original thought couldn't be right because the CPU is not specific to the NES <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />  
<br />
<br />what about the flags though? How do I know when to clear them

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>3</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>