<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - scripting engine</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">scripting engine</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=3846">http://forums.nesdev.com/viewtopic.php?f=2&amp;t=3846</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>never-obsolete</b> [ Fri Jan 18, 2008 1:23 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>scripting engine</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />i've been writing a scripting engine to describe the player AI in the gridiron football game i've been working on. the premise behind it is that for each play i have 11 pointers to what is internally referred to as "behaviors." so to line up in the I-formation:
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">;&nbsp; &nbsp;&nbsp; &nbsp; W<br />;<br />;&nbsp; &nbsp;&nbsp; &nbsp; T<br />;&nbsp; &nbsp;&nbsp; &nbsp; G<br />;&nbsp; &nbsp; HFQC<br />;&nbsp; &nbsp;&nbsp; &nbsp; G<br />;&nbsp; &nbsp;&nbsp; &nbsp; T<br />;&nbsp; &nbsp;&nbsp; &nbsp; E<br />;<br />;&nbsp; &nbsp;&nbsp; &nbsp;W<br />off_form_I:<br />&nbsp; &nbsp;.dw _off_QB_PosUnderCenter, _off_RB_PosAsHB, _off_RB_PosAsFB<br />&nbsp; &nbsp;.dw _off_WR_PosSplitEndTop, _off_WR_PosFlankerBot, _off_TE_PosAsTEBot<br />&nbsp; &nbsp;.dw _off_ol_PosAsLT, _off_ol_PosAsLG, _off_ol_PosAsC, _off_ol_PosAsRG, _off_ol_PosAsRT<br /></div><br /><br />copy the above pointers into the "script pointer" field for each of the player structs. now behaviors are further broken down into "commands."<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">_off_QB_PosUnderCenter:&nbsp; &nbsp;.db SET_POS_FROM_BALL, $10, $00<br />&nbsp; &nbsp;.db QB_STANCE<br />_off_QB_PosShotgun:&nbsp; &nbsp;.db SET_POS_FROM_BALL, $40, $00<br />&nbsp; &nbsp;.db QB_STANCE<br /></div><br /><br />so those two commands position the the player 16 and 64 pixels (respectively) away from the ball (x-coor) followed by setting their stance. 8 pixels = 1 yard. after the positioning scripts are ran for the formation, the scripts pointers for that particular play are written.<br /><br /><br />commands are grouped based on what they do. ex $Cx commands handle placement/movement:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">...<br />SET_POS_FROM_BALL&nbsp; &nbsp;&nbsp; &nbsp;equ $C0&nbsp; &nbsp;; SET_POS_FROM_BALL &#40;signed byte x, signed byte y&#41;<br />SET_POS_FROM_SCREEN&nbsp; &nbsp;equ $C1&nbsp; &nbsp;; SET_POS_FROM_SCREEN &#40;signed byte x, byte y&#41;<br />MOVE_ABS&nbsp; &nbsp;equ $C2&nbsp; &nbsp;; MOVE_ABS &#40;byte x, byte y&#41;<br />MOVE_ABS_FAR&nbsp; &nbsp;equ $C3&nbsp; &nbsp;; MOVE_ABS_FAR &#40;word x, byte y&#41;<br />MOVE_REL&nbsp; &nbsp;equ $C4&nbsp; &nbsp;; MOVE_REL &#40;signed byte x, singed byte y&#41;<br />MOVE_REL_FAR&nbsp; &nbsp;equ $C5&nbsp; &nbsp;; MOVE_REL_FAR &#40;signed word x, singed byte y&#41;<br />...<br /></div><br /><br />every $2x is a random jump from the current behavior to another behavior. this allows for a degree of randomness in defensive coverage, offensive blocking, turnovers, etc. $Fx commands simulate control statements like loops or if-then/if-then-else.<br /><br />the problem i have is speed. so far i have a big switch that first decides the type of command with a series of cmp VAL and bcs THERE. THERE is an entry in a jump table. from there it further compares to find the exact command (like say SET_POS_FROM_BALL and SET_POS_FROM_SCREEN). these two commands share most of the same code except FROM_BALL first converts the x-coor argument into the equivilent FROM_SCREEN x-coor argument. MOVE_ABS and MOVE_REL are similar in that they fill the high byte with the high byte of the camera position and jump to their _FAR equivilents.<br /><br />this seems to be the most straight forward way to do it, but as more and more gamplay features are added, as well as a second team, i know that a series of compares is not gonna cut it. i'm reluctant to use a pointer table for all 255 possible commands because some commands are exactly the same (like $2x) except for the argument. i also have about 64 commands that are really only 4 commands just with the target player changed. ex:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">HANDOFF_QB&nbsp; &nbsp;equ $50<br />HANDOFF_HB&nbsp; &nbsp;equ $51<br />HANDOFF_FB&nbsp; &nbsp;equ $52<br />HANDOFF_WR1&nbsp; &nbsp;equ $53<br />...<br /></div>
<br />
<br />on top of the AI processing for 22 players, there is the conversion from absolute positions into screen positions. though much simpler then tokumaru's <a href="http://nesdev.com/bbs/viewtopic.php?t=3772&amp;start=0" class="postlink">situation</a> since i only scroll left and right. it just seems like all the compares/branches will really take a toll on speed once i start adding other things that need to be handled.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>jargon</b> [ Tue Apr 15, 2008 3:43 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />pro tip: we live less than 15 miles away from each other.
<br />
<br />let's meet up and you can show me what you have so far and i will help you out.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>never-obsolete</b> [ Tue Apr 15, 2008 10:58 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />i'm guessing mesa or avondale/litchfield? maybe even...shudder...anthem.
<br />
<br />thanks for the offer but i think i'll be alright.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>doynax</b> [ Tue Apr 15, 2008 1:16 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: scripting engine</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">never-obsolete wrote:</div><div class="quotecontent">this seems to be the most straight forward way to do it, but as more and more gamplay features are added, as well as a second team, i know that a series of compares is not gonna cut it. i'm reluctant to use a pointer table for all 255 possible commands because some commands are exactly the same (like $2x) except for the argument.</div>The trick is to rearrange the commands in such a way that the least or most significant bits can uniquely identify the command function, i.e. mask or shift off a part of the byte before indexing the jump table. This way you'll lose at most 50% on duplicate entries which is just as large as the best-case DEX/BEQ series, i.e. the worst case of 129 commands needs 256x2 = 512 bytes for a jump table and (129-1)x4=512 bytes for a DEX/BEQ sequence.<br />Of course unless you have really few commands you'd want to use a set of CMP #/BCC instructions to do a binary search, plus I'd wager a few of the branches will be out of range and so forth so the real overhead per branch is probably more like six bytes. So really, go for the jump table.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">on top of the AI processing for 22 players, there is the conversion from absolute positions into screen positions. though much simpler then tokumaru's <a href="http://nesdev.com/bbs/viewtopic.php?t=3772&amp;start=0" class="postlink">situation</a> since i only scroll left and right. it just seems like all the compares/branches will really take a toll on speed once i start adding other things that need to be handled.</div>Are you sure it's a good idea to lay out the action horizontally rather than vertically? I'm should the last guy on earth to talk about football but won't you be more likely to run out of sprites on a scanline this way?
<br />
<br />edit: Oh and if you want to come over and discuss the problem I happen live less than 5000 miles away..

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Tue Apr 15, 2008 6:32 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />There are two perspectives: the horizontal field, as seen in Tecmo Bowl, and the vertical field, as seen in Touchdown Fever. If you take the Touchdown Fever approach, you can make the guys 8 pixels wide like in Smash TV, and then you usually have about 7 of them on one line, so there isn't too much of a problem.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>jargon</b> [ Wed Apr 16, 2008 1:43 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">never-obsolete wrote:</div><div class="quotecontent">i'm guessing mesa or avondale/litchfield? maybe even...shudder...anthem.<br /><br />thanks for the offer but i think i'll be alright.</div>
<br />
<br />hint: use interrupts that trigger the timeout delay of other interrupts
<br />
<br />in this manner you don't have to do every player synchronously per cycle
<br />
<br />if you use asynchronous code in this manner, you can easily OOP the fuck out of it, yes using NESASM or what-not.
<br />
<br />load balancing is also key. so have the interrupts refer to a scheduler table for each task.
<br />
<br />by this time you will be able to do advanced effects such as interrupt triggered sprite table rotation in order to add exponential projection.
<br />
<br />exponential projection is like Grand Theft Auto 2.
<br />
<br />no matter how close to the screen the object gets or nor matter how far away it just scales up or down, you can use different memory blocks of pre-rendered sprites that are triggered based off current scanline, having set the current scan-line using the exponential projection matrix.
<br />
<br />Exponential mathematics on the NES/FC is explained in the "Square Root" thread on this board.
<br />
<br />you simply need to tweak the square root code to handle a different constant power of exponential growth other than a decay of power 2.
<br />
<br />create a look-up table of all the conversions using scalar*growth^z.
<br />
<br />you simply need to have the scalar be the current size of the object and multiply it by the look-up for the growth constant raised by the z axis position.
<br />
<br />in this manner you can even do diagonal view football field effects like a twacked Yoshi's Island / Equinox / Solstice over world view.
<br />
<br />plus you have room for all your audio effects, soundtrack, crowd noise, even PCM announcers.
<br />
<br />don't forget to use a timed interrupt scheduler to pack the finalized triangulated waveform output.
<br />
<br />refer here for more info:
<br /><a href="http://nesdev.com/bbs/viewtopic.php?p=32746#32746" class="postlink">http://nesdev.com/bbs/viewtopic.php?p=32746#32746</a>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Wed Apr 16, 2008 3:58 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: scripting engine</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">never-obsolete wrote:</div><div class="quotecontent">this seems to be the most straight forward way to do it, but as more and more gamplay features are added, as well as a second team, i know that a series of compares is not gonna cut it. i'm reluctant to use a pointer table for all 255 possible commands because some commands are exactly the same (like $2x) except for the argument. i also have about 64 commands that are really only 4 commands just with the target player changed.</div>
<br />Well, you just can't beat the speed of a jump table I think... If only a small number of commands have duplicated behavior, their entries can just point to the same place, and you can just send the number of the command along, so that it can be used to clear any ambiguity. The number of the command will probably be inside an index register anyway bacause you have used it to fetch the address from the table, so you can just choose to use it or not.
<br />
<br />If there is a lot of repeated stuff, maybe you could divide your commands in 2 parts. The lower part could be used to fetch an address from the jump table (which wouldn't be as large), and the rest could be decoded as necessary. The bits could have specific meanings or you could use CMP commands, but in either case the arguments would be in the upper bits of the command.
<br />
<br />A command can even have more than one byte if you wanted to. I suppose you have a pointer you use to read the comands, so nothing stops you from using it inside the code that handles commands in order to fetch extra command bytes. You may have thought of this already though! =)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>never-obsolete</b> [ Wed Apr 16, 2008 11:28 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Are you sure it's a good idea to lay out the action horizontally rather than vertically? I'm should the last guy on earth to talk about football but won't you be more likely to run out of sprites on a scanline this way? </div><br /><br />i had thought about that, but to be honest, the flickering in Tecmo Super Bowl never really bothered me. and after all, the goal of this was to fix some of the short comings of TSB:<br /><br />-32 teams<br />-wider range of stat tracking<br />-weather<br />-individual stadiums, well at least endzone/midfield logos<br />-better support for different formations and plays<br />-trading<br />-substitutions for positions other then QBs, RBs, WRs, TEs and returners<br />-4 players<br /><br />the large amount of sram that would be needed for this project kinda killed it. it was somewhere in the neighborhood of $5000 bytes (uncompressed) just for season stats alone. i've been told to go play a newer TSB, but after the NES version, they all kinda lost that arcade feel.<br /><br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Well, you just can't beat the speed of a jump table I think... If only a small number of commands have duplicated behavior, their entries can just point to the same place, and you can just send the number of the command along, so that it can be used to clear any ambiguity. The number of the command will probably be inside an index register anyway bacause you have used it to fetch the address from the table, so you can just choose to use it or not. <br /><br />If there is a lot of repeated stuff, maybe you could divide your commands in 2 parts. The lower part could be used to fetch an address from the jump table (which wouldn't be as large), and the rest could be decoded as necessary. The bits could have specific meanings or you could use CMP commands, but in either case the arguments would be in the upper bits of the command. <br /></div><br /><br />that is what i ended up doing; the upper nibble was an index into the jump table and then the lower nibble to get to the exact command.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">A command can even have more than one byte if you wanted to. I suppose you have a pointer you use to read the comands, so nothing stops you from using it inside the code that handles commands in order to fetch extra command bytes. You may have thought of this already though! =)<br /></div>
<br />
<br />sorta...except my commands are all single byte with multiple arguments following:
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">$90 = Pass &#40;&#41;, LOOP<br />$91 = Pass &#40;$CP&#41;, JUMP_TO_PASS<br />$92 = Pass &#40;$CP, $CP&#41;, JUMP_TO_PASS<br />$93 = Pass &#40;$CP, $CP, $CP&#41;, JUMP_TO_PASS<br /></div>
<br />
<br />where C=chance of passing to player and P=player index. command $90 would be for a human controlled QB and the rest are for CPU, just with the number of elligible receivers changed. adding commands of multiple bytes would be easy to include since each player has their own command pointer which is manipulated to read the arguments anways. doesn't the z80 do something like this for its "extended" commands?
<br />
<br />if someone ever develops a homebrewer's mapper that includes support for more then 8K of battery backed prg-ram, i'd probably pick this up again. then again there's always the SNES.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>jargon</b> [ Thu Apr 17, 2008 12:23 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />What bothers me about Temco Super Bowl, is I've never owned nor played a copy of a NES/FC football game, only for Atari and ColecoVision.
<br />
<br />btw,
<br />
<br /><img src="http://mediaplague.com//gallery/jargon/keal/towlie-shirt.png" alt="Image" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>CKY-2K/Clay Man</b> [ Fri Apr 18, 2008 9:11 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />LOL

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>