<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Hello World</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Hello World</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=10&amp;t=7307">http://forums.nesdev.com/viewtopic.php?f=10&amp;t=7307</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>18</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>FinalZero</b> [ Thu Dec 23, 2010 3:19 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Hello World</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I'm new to programming on the 6502. I've only been able to do simple things like move a character (as a sprite (I think))) around the screen with the d-pad made in nbasic (which compiles to nesasm assembly). Reading threads, it looks like nesasm is one of the stranger assemblers out there, so I'd like to try a more conventional one, like ca65. The problem is, I have no idea how to use it. The reason I started with nbasic and nesasm is that it was the only thing I could find simple, commented example programs for. And so, I humbly ask, how does one create a simple program that prints out "Hello World!"?
<br />
<br />Also, being somewhat relevant, I have plenty of experience programming in higher level languages like C++ and Java, but have only recently learned some x86 assembly, and now, 6502 assembly.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>3gengames</b> [ Thu Dec 23, 2010 4:02 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />You should learn most of the 6502 assembly, as that is the syntax all the assemblers use standardly, the only real features others add are tags and stuff. Look up in the assemblers files for the README or something along those lines to find what it offers and how to access those features like tags and such.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dwedit</b> [ Thu Dec 23, 2010 5:52 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><a href="http://www.dwedit.org/files/hello.asm" class="postlink">Here's my copy</a> of "Hello world"
<br />
<br />It demonstrates how to wait for the NES to warm up, clear the RAM, clear the nametables, load in a font, set the palette, wait for vblank, and turn the screen back on.
<br />But it's not very well commented.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>koitsu</b> [ Thu Dec 23, 2010 9:18 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Dwedit wrote:</div><div class="quotecontent"><a href="http://www.dwedit.org/files/hello.asm" class="postlink">Here's my copy</a> of "Hello world"<br /><br />It demonstrates how to wait for the NES to warm up ...</div>
<br />
<br />Can you explain what this means and refers to, both on the hardware as well as in the assembly code?  I'd like to know what "warm up" period is required, how long it is, and why it's needed, for the NES to become "usable".  I'm not talking about register or RAM initialisation -- I'm talking about what it means to "wait for the NES to warm up".
<br />
<br />Thanks!
<br />
<br />EDIT: Is <a href="http://wiki.nesdev.com/w/index.php/PPU_power_up_state" class="postlink">this</a> what "warm up" means?  If so, okay got it.  If not, an explanation would be cool.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>3gengames</b> [ Thu Dec 23, 2010 11:14 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I think by warm up, he means the 2 frames needed to go by before the APU is ready to output sound.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Fri Dec 24, 2010 12:03 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">koitsu wrote:</div><div class="quotecontent">I'd like to know what "warm up" period is required, how long it is, and why it's needed, for the NES to become "usable".</div><br />It seems that some parts of the NES do not behave consistently if used as soon as the system is powered up. A lot of PPU writes are ignored, for example (this has been verified by blargg, I think).<br /><br />Because of that, it's good practice to wait at least 2 whole frames before interacting with the PPU or APU. The waiting can be done by pooling the VBlank flag, which appears to behave consistently during the warm up period.<br /><br /><div class="quotetitle">FinalZero wrote:</div><div class="quotecontent">Reading threads, it looks like nesasm is one of the stranger assemblers out there</div>
<br />Yes, NESASM doesn't have the reputation of being the most reliable assembler out there, but, unfortunately, NBASIC isn't that hot either. I seem to remember people here saying that programs made with it had compatibility issues with actual consoles, meaning its internal functions weren't properly coded. I think everyone will agree that a NES program that doesn't run properly on the NES is a huge FAIL.
<br />
<br />The best way to make NES programs is obviously straight 6502 assembly, so if you think you can handle it that's definitely the best thing you can do. I'm not aware of any magical programming language that makes it easy to code NES programs that isn't either severely limited or just plain buggy.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Fri Dec 24, 2010 5:47 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">It seems that some parts of the NES do not behave consistently if used as soon as the system is powered up. A lot of PPU writes are ignored, for example (this has been verified by blargg, I think).<br /><br />Because of that, it's good practice to wait at least 2 whole frames before interacting with the PPU or APU. The waiting can be done by pooling the VBlank flag, which appears to behave consistently during the warm up period.</div><br />Two frames for the APU? The only mention of an APU delay is a 2048 cycle delay in <a href="http://nesdev.com/2A03%20technical%20reference.txt" class="postlink">Brad Taylor's APU doc</a>, which I conjectured to be waiting for the period dividers to finish their first cycle. My programs have always set up the APU while waiting for the PPU, especially because two IRQ sources are from the APU.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I'm not aware of any magical programming language that makes it easy to code NES programs that isn't either severely limited or just plain buggy.</div>
<br />But sometimes severely limited is exactly what's needed. Consider WarioWare DIY: out of all the power of the DS, it limits the developer to 15 sprites of variable size, no sprite flipping, no background scrolling unless faked with sprites, no palette swapping or other sharing of animation between sprites, no state other than which of four animations it's in and one general-purpose flag, input as limited as the Zapper (tapping objects on the screen or tapping the background), and making a game longer than eight seconds requires save hacking.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Fri Dec 24, 2010 9:39 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">My programs have always set up the APU while waiting for the PPU, especially because two IRQ sources are from the APU.</div>
<br />I see little advantage in doing anything during this waiting period (before you mention clearing RAM, I'll remind you that I'm against this), so aside from disabling IRQs I don't really do anything.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>FinalZero</b> [ Sun Dec 26, 2010 9:18 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Thank you for all the replies.
<br />
<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">You should learn most of the 6502 assembly, as that is the syntax all the assemblers use standardly, the only real features others add are tags and stuff. Look up in the assemblers files for the README or something along those lines to find what it offers and how to access those features like tags and such.</div><br />Will do.<br /><br /><div class="quotetitle">Dwedit wrote:</div><div class="quotecontent"><a href="http://www.dwedit.org/files/hello.asm" class="postlink">Here's my copy</a> of "Hello world"<br /><br />It demonstrates how to wait for the NES to warm up, clear the RAM, clear the nametables, load in a font, set the palette, wait for vblank, and turn the screen back on.<br />But it's not very well commented.</div>
<br />Trying to assemble it with ca65 produces a bunch of ".db is not a recognized control command" errors.
<br />
<br />I see you made the font by just inserting it into the file with a bunch of .db's. Is there a way to include it from a separate file though?
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">load_font:<br />&nbsp; &nbsp;lda #font&amp;255<br />&nbsp; &nbsp;sta addy<br />&nbsp; &nbsp;lda #font/256<br />&nbsp; &nbsp;sta addy+1<br />&nbsp; &nbsp;ldx #3<br />&nbsp; &nbsp;ldy #0</div><br />What do the first two lda's do? I don't understand the #font&amp; and #font/ parts. Does a preceding # mean? Can that character be left out?<br /><br />How would one print something out if their font table didn't match the ASCII ordering?<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">main_loop:<br />&nbsp; &nbsp;jsr waitframe<br />&nbsp; &nbsp;<br />&nbsp; &nbsp;lda #0<br />&nbsp; &nbsp;sta $2005<br />&nbsp; &nbsp;sta $2005<br />&nbsp; &nbsp;lda #$18<br />&nbsp; &nbsp;sta $2001<br />&nbsp; &nbsp;<br />&nbsp; &nbsp;lda #$80<br />&nbsp; &nbsp;sta $2000<br /><br />&nbsp; &nbsp;jmp main_loop</div>
<br />Why is "sta $2005" repeated twice? Isn't that redundant?
<br />
<br />This seems to be good documentation: <!-- m --><a class="postlink" href="http://www.obelisk.demon.co.uk/6502/instructions.html">http://www.obelisk.demon.co.uk/6502/instructions.html</a><!-- m -->
<br />I see there's adc and sbc, but no add and sub. What does one do if they wish to add or subtract without the carry? Just clear the carry flag first? Also, it's strange that there's asl and lsr, but no asr and lsl.
<br />
<br />Iirc, the NES's processor did away with Binary Coded Decimal capabilities, so what happened the to associated register flag? Does one get errors if it's ever set?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sun Dec 26, 2010 11:02 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">FinalZero wrote:</div><div class="quotecontent"><div class="quotetitle">Dwedit wrote:</div><div class="quotecontent"><a href="http://www.dwedit.org/files/hello.asm" class="postlink">Here's my copy</a> of "Hello world"<br /><br />It demonstrates how to wait for the NES to warm up, clear the RAM, clear the nametables, load in a font, set the palette, wait for vblank, and turn the screen back on.<br />But it's not very well commented.</div><br />Trying to assemble it with ca65 produces a bunch of ".db is not a recognized control command" errors.</div><br />ca65 uses .byt instead.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I see you made the font by just inserting it into the file with a bunch of .db's. Is there a way to include it from a separate file though?</div><br />.include "somesourcefile.s"<br />.incbin "somebinaryfile.chr"<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><div class="codetitle"><b>Code:</b></div><div class="codecontent">load_font:<br />&nbsp; &nbsp;lda #font&amp;255<br />&nbsp; &nbsp;sta addy<br />&nbsp; &nbsp;lda #font/256<br />&nbsp; &nbsp;sta addy+1<br />&nbsp; &nbsp;ldx #3<br />&nbsp; &nbsp;ldy #0</div><br />What do the first two lda's do? I don't understand the #font&amp; and #font/ parts. Does a preceding # mean? Can that character be left out?<br /></div><br /># means the following value is a number to put directly into A, not an address from which to load the value into A. Look at the "immediate" addressing mode.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">How would one print something out if their font table didn't match the ASCII ordering?</div><br />There are two ways. Super Mario Bros. does it by specifying the character encoding within the assembler. (In ca65 use <a href="http://www.cc65.org/doc/ca65-11.html#ss11.12" class="postlink">.charmap</a> commands.) Mega Man 5 does it by translating ASCII characters through a lookup table to get glyph tile indices.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Why is "sta $2005" repeated twice? Isn't that redundant?</div><br />PPUSCROLL ($2005) is a port on the PPU. Alternating writes set horizontal and <span class="posthilit">vertical</span> background scroll coordinates. You need two writes so that the first one sets the horizontal and the second one sets the <span class="posthilit">vertical</span>.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">This seems to be good documentation: <!-- m --><a class="postlink" href="http://www.obelisk.demon.co.uk/6502/instructions.html">http://www.obelisk.demon.co.uk/6502/instructions.html</a><!-- m --><br />I see there's adc and sbc, but no add and sub. What does one do if they wish to add or subtract without the carry? Just clear the carry flag first?</div><br />Yes. A lot of programmers define ADD and SUB macros that clear carry before adding or set carry before subtracting.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Also, it's strange that there's asl and lsr, but no asr and lsl.</div><br />LSL is redundant, as both arithmetic and logical shift put a 0 in the one's place. There is ASR, just not as one instruction: do a CMP #$80 followed by ROR.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Iirc, the NES's processor did away with Binary Coded Decimal capabilities, so what happened the to associated register flag? Does one get errors if it's ever set?</div>
<br />The decimal flag exists, but the adder just ignores it. CLD and SED are as good as NOP.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>FinalZero</b> [ Mon Dec 27, 2010 12:36 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">ca65 uses .byt instead.</div><br />or .byte, apparently. So, I changed those and another to .word, and... it assembled! But it doesn't run on FCEU. =/<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">.include "somesourcefile.s" <br />.incbin "somebinaryfile.chr"</div><br />Simple enough.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"># means the following value is a number to put directly into A, not an address from which to load the value into A. Look at the "immediate" addressing mode. </div><br />Ah, I see.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">There are two ways. Super Mario Bros. does it by specifying the character encoding within the assembler. (In ca65 use .charmap commands.) Mega Man 5 does it by translating ASCII characters through a lookup table to get glyph tile indices.</div><br />That .charmap command looks very attractive. Does the second method described translate everything at assembly time, or at run time? Also, do the .charmap commands take effect globally?, or only after? Looking at the Hello World example given:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">.byte &quot;NES&quot;,$1A,$01,$00,$20,$00</div><br />The .charmap command would change the "NES" away from what was intended, no?<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">PPUSCROLL ($2005) is a port on the PPU. Alternating writes set horizontal and <span class="posthilit">vertical</span> background scroll coordinates. You need two writes so that the first one sets the horizontal and the second one sets the <span class="posthilit">vertical</span>.</div><br />Is there documentation that describes all those special things at addresses like that? Looking at that example file given, I see...<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">OAM&nbsp; &nbsp; &nbsp; &nbsp;= $0200<br /><br />PPUCTRL&nbsp; &nbsp;= $2000<br />PPUMASK&nbsp; &nbsp;= $2001<br />PPUSTATUS = $2002<br />PPUSTAT = $2002<br />SPRADDR&nbsp; &nbsp;= $2003&nbsp; ; always write 0 here and use DMA from OAM<br />PPUSCROLL = $2005<br />PPUADDR&nbsp; &nbsp;= $2006<br />PPUDATA&nbsp; &nbsp;= $2007<br /><br />SPRDMA&nbsp; &nbsp; = $4014<br />SNDCHN&nbsp; &nbsp; = $4015<br />JOY1&nbsp; &nbsp; &nbsp; = $4016<br />JOY2&nbsp; &nbsp; &nbsp; = $4017</div><br /><br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Yes. A lot of programmers define ADD and SUB macros that clear carry before adding or set carry before subtracting.</div><br />Alright.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">LSL is redundant, as both arithmetic and logical shift put a 0 in the one's place.</div><br />A strange property; x86 does the same. Perhaps they did it because putting a 1 in the one's place would be rather useless, despite making the set of commands regular.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">There is ASR, just not as one instruction: do a CMP #$80 followed by ROR.</div><br />Ok.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">The decimal flag exists, but the adder just ignores it. CLD and SED are as good as NOP.</div>
<br />Ok.
<br />
<br />-----
<br />
<br />By the way, is there a way of doing multiline comments like /* */ in C? Or must one prefix every <span class="posthilit">line</span> with a semicolon?
<br />
<br />Also, while we're on the topic of character maps, how would something like Dual Tile Encoding be implemented? Also, are there any Japanese games that implement dakuten and handakuten for their characters by having a dakuten/handakuten tile and simply overlapping it with another, as opposed to creating a whole new set of tiles with the dakuten/handakuten added?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>koitsu</b> [ Mon Dec 27, 2010 2:03 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">FinalZero wrote:</div><div class="quotecontent"><div class="codetitle"><b>Code:</b></div><div class="codecontent">load_font:<br />&nbsp; &nbsp;lda #font&amp;255<br />&nbsp; &nbsp;sta addy<br />&nbsp; &nbsp;lda #font/256<br />&nbsp; &nbsp;sta addy+1<br />&nbsp; &nbsp;ldx #3<br />&nbsp; &nbsp;ldy #0</div><br />What do the first two lda's do? I don't understand the #font&amp; and #font/ parts. Does a preceding # mean? Can that character be left out?<br /></div><br />As tepples described, the "#" character means immediate addressing -- think "literal value".  More on that in a sec.<br /><br />The &amp;255 and /256 syntax appears to be a bunch of nonsense for getting the low and high bytes of the 16-bit address of a label (in this case, the low and high bytes, respectively, of font).  I call it nonsense because <a href="http://nesdev.com/bbs/viewtopic.php?t=6731" class="postlink">there's some history</a> indicating only devel builds of ca65 support the .LOBYTE and "&lt;" directives, as well as .HIBYTE and "&gt;" directives.  God I hate that assembler.  I seriously don't understand why people bother with it.<br /><br />Here's a more much more common syntax you'll see, and makes a lot more sense IMHO:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp;lda #&lt;font<br />&nbsp; &nbsp;sta addy<br />&nbsp; &nbsp;lda #&gt;font<br />&nbsp; &nbsp;sta addy+1<br /></div><br />In English: if font is located at location $894F, then the first LDA will load the value $4F into the accumulator, while the second LDA would load $89.  If you removed use of immediate addressing, you'd have:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp;lda &lt;font<br />&nbsp; &nbsp;sta addy<br />&nbsp; &nbsp;lda &gt;font<br />&nbsp; &nbsp;sta addy+1<br /></div><br />In English: if font is located at $894F, then the first LDA will load the value stored in memory at location $4F into the accumulator, while the second LDA would do the same but for from location $89.<br /><br /><div class="quotetitle">FinalZero wrote:</div><div class="quotecontent">By the way, is there a way of doing multiline comments like /* */ in C? Or must one prefix every <span class="posthilit">line</span> with a semicolon?</div><br />There's no "universal standard" for this.  It's important to understand that assembler syntaxes vary greatly depending on the assembler, and it's your responsibility to learn/read up on what your assembler-of-choice supports.  You should never assume that an assembler has something even remotely "C-like" in it.<br /><br />Generally speaking, most assemblers assume that anything past (and including) a semicolon are comments.  Example:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp; &nbsp;some_code&nbsp; &nbsp; &nbsp; &nbsp;; in-<span class="posthilit">line</span> comment<br />&nbsp; &nbsp; &nbsp;some_code&nbsp; &nbsp; &nbsp; &nbsp;; hello world<br />&nbsp; &nbsp; &nbsp;some_code&nbsp; &nbsp; &nbsp; &nbsp;; i like rice<br /><br />;<br />; Below code rides snakes around Arabia, or Persia,<br />; or China, or tepple's living room.<br />;<br />&nbsp; &nbsp; &nbsp;some_code<br />&nbsp; &nbsp; &nbsp;some_code<br />&nbsp; &nbsp; &nbsp;...<br /></div><br />Some assemblers support things like the .COMMENT and .ENDCOMMENT pseudo-directives, which would act more like a /* */ block-style comment in C.  E.g.:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">.COMMENT<br />Below code rides snakes around Arabia, or Persia,<br />or China, or tepple's living room.<br />.ENDCOMMENT<br /><br />&nbsp; &nbsp; &nbsp;some_code<br />&nbsp; &nbsp; &nbsp;some_code<br />&nbsp; &nbsp; &nbsp;...<br /></div>
<br />But again, there's no "standard" -- you need to read the documentation associated with your assembler to find out.  If there is no documentation, don't bother using that assembler.
<br />
<br />Hope this helps.  Cheers!

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>FinalZero</b> [ Mon Dec 27, 2010 2:36 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">God I hate that assembler. I seriously don't understand why people bother with it.</div><br />What assembler do you use?<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">There's no "universal standard" for this. It's important to understand that assembler syntaxes vary greatly depending on the assembler, and it's your responsibility to learn/read up on what your assembler-of-choice supports. You should never assume that an assembler has something even remotely "C-like" in it.</div>
<br />Digging through ca65's documentation there's a ".feature c_comments" option, thus allowing multiline comments.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>koitsu</b> [ Mon Dec 27, 2010 2:41 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">FinalZero wrote:</div><div class="quotecontent"><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">God I hate that assembler. I seriously don't understand why people bother with it.</div><br />What assembler do you use?</div>
<br />There's <a href="http://nesdev.com/bbs/viewtopic.php?t=7274" class="postlink">already a relevant thread</a> pertaining to assembler debates and choices.  I personally tend to stick to asm6 and x816, as their syntax and overall style mimic what I'm used to (ORCA/M and Merlin 16+).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>FinalZero</b> [ Mon Dec 27, 2010 3:24 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">koitsu wrote:</div><div class="quotecontent"><div class="quotetitle">FinalZero wrote:</div><div class="quotecontent"><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">God I hate that assembler. I seriously don't understand why people bother with it.</div><br />What assembler do you use?</div><br />There's <a href="http://nesdev.com/bbs/viewtopic.php?t=7274" class="postlink">already a relevant thread</a> pertaining to assembler debates and choices.  I personally tend to stick to asm6 and x816, as their syntax and overall style mimic what I'm used to (ORCA/M and Merlin 16+).</div><br />Ah, ok. I suppose the reason I'm trying out ca65 at the moment is because it has current development, which is likely to fix any bugs found (hopefully), and has lots of documentation.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Here's a more much more common syntax you'll see, and makes a lot more sense IMHO: [...]</div>
<br />I understand. Thank you.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>18</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>