<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - NMI and Main Loop</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">NMI and Main Loop</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=10&amp;t=3971">http://forums.nesdev.com/viewtopic.php?f=10&amp;t=3971</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Celius</b> [ Sun Mar 16, 2008 10:10 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>NMI and Main Loop</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />So I've heard many things about how the NMI should do visual and audio updates, and the main loop should do all game related calculations. The NMI should remain enabled. I wish I could agree with this statement, but I can't, because I just don't know how you can call the NMI to update that stuff when you can't guarantee that you won't be updating garbage because the main loop isn't done calculating stuff.
<br />
<br />For example, my RPG project calls for a possibly very long map decompressing routine that may take longer than a frame (At the very worst). I do this in my endless loop and shut NMIs off, because if I were to have NMIs enabled, and not be done decompressing the map, it would be putting garbage on the screen. What is a standard setup for making this all work, and could someone explain how they can guarantee garbage won't be on screen?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sun Mar 16, 2008 10:25 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: NMI and Main Loop</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Celius wrote:</div><div class="quotecontent">So I've heard many things about how the NMI should do visual and audio updates, and the main loop should do all game related calculations. The NMI should remain enabled. I wish I could agree with this statement, but I can't, because I just don't know how you can call the NMI to update that stuff when you can't guarantee that you won't be updating garbage because the main loop isn't done calculating stuff.</div>
<br />It's called <a href="http://en.wikipedia.org/wiki/Lock_%28computer_science%29" class="postlink">locking</a>. When the main thread is ready to make the transfer buffers inconsistent, it sets a flag stating so. Once the transfer buffers are consistent again, the main thread turns off that flag. The NMI thread checks the flag and delays updates if it is on.
<br />
<br />Ordinarily, on an NES game using a split main/NMI structure, the NMI thread is not interruptible. It runs with IRQs blocked (flags.I = 1), and it finishes within 2300 (NTSC) or 7500 (PAL) cycles of hard real time so another NMI won't happen. But if you do make the NMI interruptible, such as in an NMI-only engine, you'll have to use <a href="http://en.wikipedia.org/wiki/Fetch-and-add" class="postlink">INC and DEC</a> to implement locking.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Sun Mar 16, 2008 10:35 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Well, I currently do the opposite (sorta), whenever I want strings of data to be transftering to $2007, I set a flag. Once the main thread sets the flag, it's assumed that the data is ready to be transfered. The main thread can do all sorts of calculations using the same buffer until 2 conditions :
<br />- Make sure previous data has been effecively transfered to the NMI update routine (so that you don't skip graphics updates)
<br />- The flag is clear, so that the NMI routine will never try to read this data.
<br />
<br />The easiest way to handle it is to have the NMI routine immediately clear the flag when it's set, so that you always know :
<br />- If the flag is set, data is ready to be transfered
<br />- If the flag is clear, either no string is pending, or the main thread is currently working on it.
<br />
<br />So my NMI routine just checks a set of flags and update data to PPU if those are set (with some kind of priority order), and clear them. If all flags are clear, the NMI does nothing, exept write to $2005 and $2000 and do sound. This allow the main thread to do PPU writes as long as all flags are clear (and the rendering is disabled), but still NMI on (so with music), as $2006 remains untouched.
<br />Of course you're free to do any NMI routine that does anything in any order and do like you want. There is many differenty ways to code the same thing. However, once you've chose one, it's big trouble to change.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Celius</b> [ Sun Mar 16, 2008 12:34 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I guess you can use flags to indicate when updating should occur. Actually, my NMI system would allow for me to forget about flags, and just stick updating routines in the indirect jump list (My NMI routine is just a list of 16 indirect jumps). But if you're not ready to update sprites, I think it'd be really bad to update the scroll and the background, because you'd end up with jumping sprites when scrolling. So basically I think you have to be ready to update the whole screen if you want to update it at all. But I suppose music can be updated every frame.
<br />
<br />If that's the case, where you really only want to update the whole screen at once, then your screen has to be ready to update in less than a frame if you want the framerate to be over 30FPS. I just don't get how you can update some things and not others without causing visual problems. And also, isn't what you update really dependent on game logic? So to me, I'm still seeing it as you need to complete a "game frame" before you can update. By game frame, I mean a complete cycle of the game loop. It still seems like everything needs to be updated if anything is updated.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Sun Mar 16, 2008 1:09 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I just don't get how you can update some things and not others without causing visual problems.</div>
<br />I update scroll registers every frame, so that the screen doesn't risk to shake or anything like this. This doesn't cause any visual problems. I update sprites only when they are ready. Anyway, in 99% of the case your game loop should complete within a frame, else your game will be buggy anyway. It's just good to design it so that it still look alright when it slows down.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Sun Mar 16, 2008 1:53 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">I update scroll registers every frame, so that the screen doesn't risk to shake or anything like this. This doesn't cause any visual problems.</div>
<br />I've seen this cause weird effects in games before. Can't name any though. But you know how it looks, when a block that should be part of the scenery shakes a bit compared to the ones that are actually drawn with background tiles.
<br />
<br />It's probably not an issue with Bregalad's game because he has a very efficient engine for a somewhat simple game (for example, there is no scroll and enemy code running at the same time), and all updates are probably done within the time of a frame.
<br />
<br />In my game, I only update the PPU if all the data is ready, or it'd look weird. I still have NMIs enabled at all times, because I need to set up the IRQ responsible for the top border that masks the top 16 scanlines. When the IRQ fires, I also handle the music, because the music shouldn't slow down in case the game does.
<br />
<br />In fact, the music is a very good reason to have NMIs always enabled... If a frame is not enough for all your calculations, you may not do anything with the graphics during VBlank, but at least call your music routine so that it doesn't slow down too.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Celius</b> [ Sun Mar 16, 2008 1:54 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">I update scroll registers every frame, so that the screen doesn't risk to shake or anything like this. This doesn't cause any visual problems. I update sprites only when they are ready. Anyway, in 99% of the case your game loop should complete within a frame, else your game will be buggy anyway. It's just good to design it so that it still look alright when it slows down.</div>
<br />
<br />Well if you update the scroll registers, you have to update the sprites too. So if you're not ready to update sprites, and you update the scroll registers, that could lead to some shaky sprites. But I'm assuming you somehow don't allow the screen to scroll if your sprites aren't completely updated?
<br />
<br />I'm trying to look at some code from other sources to get it into my mind how partial updates are okay. It's obvious that somehow, it's okay, and pulled off correctly.
<br />
<br />It's true that a game should take about a hardware frame to execute a software frame. I have to think more about this, for some reason I find it confusing.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Sun Mar 16, 2008 2:06 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Well, updating the scroll registers don't mention what value you put in them. Whenever the sprites will scroll at the same time as the main screen depends only on when you write the new scroll value to your buffer, and not if your NMI routine always writes to $2005 or not (mine does, there's no flag to prevent it). Effectively my game doesn't run scroll and enemies at the same time (it's one or the other), but if I were to introduce scroll in my main loop then I guess the best would be to place it right after sprite updates so that if the object handling and sprite updating part takes too long (which is definitely the only 2 parts that actually take very long), then the scrolling will be updated right after them so that, in practice, the NMI is unlikely to happen right between the new sprites are ready and before the new scroll values are ready.
<br />
<br />Anyway do like you want, and modify your NMI engine in function of your game's needs.... I made a pretty general purpose NMI handler myself, but nobody have to. For exapmple Final Fantasy does everything in its main code and the NMI does nothing but return. If the main loop were to ever slowdown, everything, including music and sprites would. However, this never happens because a RPG is usually made of short frames. This worked in 3D-World Runner and Rad Racer because they wrote them in a way so that they would never slow down (in fact pretty much everything should be timed in those game because of raster effects). However, if Square were to code a more advanced platformer like Kirby, they'd most likely have to change their tactics.
<br />
<br />SMB, Zelda and Metroid are games where the music can lag when the game does, and it really sounds bad (especially in SMB where the status bar also shakes).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Celius</b> [ Sun Mar 16, 2008 2:23 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">In my game, I only update the PPU if all the data is ready, or it'd look weird. </div>
<br />
<br />This is exactly what I'm talking about. But I suppose it wouldn't matter as much if the sprite's graphics/positions in relation to the map weren't completely ready. The sprite drawing routine needs to happen as often as the scroll is set, since the sprite drawing routine is responsible for placing sprites in relation to the scroll. And updates should be ready to happen as often as the scroll is set, because if the scroll is changed, exposing a new row/column of tiles, the background will have to be updated. And in order to update, you must have all of your PPU data ready, because if you don't, you may be updating half of a row/column and missing attributes and stuff like that. It all has to be ready, pretty much.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Mon Mar 17, 2008 10:33 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I'd personally recommand to code your stuff as naturally as possible (and as optimised as possible) while avoiding all overhead. Since the game will look wrong when slowing down, does it really matter if it looks a little more wrong or a little less wrong ? The answer is obviously no, as your game shouldn't slow down anyway, and it shouldn't crash or flicker if it does, but nobody would exept it to look "all right" since it's lagging anyway.
<br />
<br />For short, just code stuff naturally, and if bugs are seen, then fix them. As long as no bugs are seen you're fine, and you don't need overhead (exept for optimising which is another problem).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Celius</b> [ Mon Mar 17, 2008 11:56 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />All I'm wanting to do is make sure that JUST IN CASE there needs to be any slow down, the game will be able to slow down just a little bit without causing a catastrophe. And I am also wanting the game to mostly run at 60FPS. I'm trying to avoid running at a constant 30FPS, or running at 60FPS and updating garbage on the screen when it takes a little longer than a frame.
<br />
<br />I have to try and avoid one of these problems, otherwise I'm going to end up with either really annoying slow framerates, or disaster. Neither one is good. 
<br />
<br />I suppose I can just update the PPU data right away after the NMI, and then the rest of the frame would just be object calculations. And thankfully, my sprites' graphics are represented with one byte, so if an NMI were to occur in the middle of me assigning a new graphic to a metasprite, it would show up as one graphic, or another. If it were represented with two bytes, then I'd have some trouble. Because I could update one byte, and the other would remain un-updated while the NMI is called. This could result in really really bad things. I'd have to guarantee pretty much that the PPU data, excluding sprites, would be updated in less than a frame. This is very possible for my platformer.
<br />
<br />I suppose I see how it can work a little bit. I just don't see how you could update some PPU stuff, and not other PPU stuff. Like if you scroll over, you HAVE to be ready to update the background including the attribute table. And if you're touching sprite coords in relation to the map, you have to set a flag that states you can't scroll over. It gets back to two byte writes. If you update one byte, and not the other while being interrupted by the NMI, your sprite will end up in a place that you're just not wanting it to end up. Although, it would only be for a frame, and people might not even notice it.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Tue Mar 18, 2008 9:37 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Then it's quite simple to do what you describe. You routine that waits until a NMI has passed most certailnly relies on a flag to do so. So in the NMI engine, if you see this flag is in the position where the main programm was waiting, you do all PPU and sprites upadtes before returning, else you only do music and then retrun. I don't handle it that way myself because it disalows any hope to get an update if the main programm does something else than an "official" wait, but if you want to do it that way it's fine. If I remember correctly Mega Man worked a similar manner.
<br />
<br />If I'm not mistaking you're living in the USA, so that's a free country (at least from what I've heard, and they're even proud of it to a point where they make statues about it), so it should be allright for you do do it the way you want without having anyone torture you or anything.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Wed Mar 19, 2008 5:18 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">If I'm not mistaking you're living in the USA, so that's a free country (at least from what I've heard, and they're even proud of it to a point where they make statues about it), so it should be allright for you do do it the way you want without having anyone torture you or anything.</div>
<br />Except perhaps copyright owners, who can threaten you with the DMCA or something. But does that apply here?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Celius</b> [ Wed Mar 19, 2008 3:04 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I think I'll be fine if I do it this way. I am well aware that I can do it any way I want, but that's not the point. I just wanted to know what most games do for this, and how they do it. If I have anymore questions about this, I'll be sure to come back.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Wed Mar 19, 2008 7:57 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I think it's fine for anyone to ask for opinions on how to do a certain thing. Bregalad was a bit too harsh when he said "do it however you want", I must agree. But now I feel that we have discussed the pros and cons of a few different methods, and Celius seems to have made a decision, so everything is fine.
<br />
<br />This is a perfectly good subject to discuss, because setting up the way game logic and screen updates are performed is not as straightforward as it may seem at first, and it's easy to make a decision that will give you headaches later on. I have changed the way my main loop is organized a few times already, and even a change of mapper hardware has made an impact on that.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>