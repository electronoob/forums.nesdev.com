<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - DISASM6 v1.4 - Nes oriented disassembler producing asm6 code</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">DISASM6 v1.4 - Nes oriented disassembler producing asm6 code</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=7466">http://forums.nesdev.com/viewtopic.php?f=2&amp;t=7466</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>2</strong> of <strong>7</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>koitsu</b> [ Wed Feb 09, 2011 9:02 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />What you folks are now talking about is already accomplished using IDA Pro.  It does have 6502 support, and can deal with the situations as described in the latter part of the thread.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>frantik</b> [ Thu Feb 10, 2011 12:38 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">NESICIDE wrote:</div><div class="quotecontent">Yes...but....what about bankswitching?  </div>
<br />
<br />well right now mappers are supported at all anyways

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Thu Feb 10, 2011 6:29 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>How high can Fortran RICH?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">clueless wrote:</div><div class="quotecontent">And the FORTRAN thing.. I'm sorry if I touched a nerve.  I was just teasing (just a little).</div><br />With the Fortran comment, I was almost expecting someone to pull out <a href="http://www.youtube.com/watch?v=eIBEO3TrACk" class="postlink">PUSH START TO RICH</a>. Is Dian Shi Mali part of the corpus?<br /><br /><div class="quotetitle">cartlemmy wrote:</div><div class="quotecontent">I'm sometimes astounded by the negativity that is thrown about on these forums. </div><br />Don't be astounded; it's expected. <a href="http://encyclopediadramatica.com/Internet_Fuckwad_Theory" class="postlink">Normal person + pseudonymity + audience = dick</a> (NSFW language).<br /><br /><div class="quotetitle">koitsu wrote:</div><div class="quotecontent">IDA Pro</div>
<br />Who's buying? Linus Torvalds originally wrote Linux in part so that he wouldn't have to pay for Unix.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dwedit</b> [ Thu Feb 10, 2011 7:04 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />You know, I've had that Mario Lottery rom forever, and never had the "PUSH START TO RICH" event happen.  I'm surprised that it spontaneously became a meme, just like Cheetahmen.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>frantik</b> [ Thu Feb 10, 2011 10:51 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I got it to create all labels, but now i've run into a new problem..  it seems ASM6 forces ZP mode for things such as  <strong>AND $0023,x </strong>.. in the original code it's 3D 23 00 but after using ASM6 it generates 35 23, basically the same thing as AND $23,x
<br />
<br />is there a way to avoid using ZP mode in ASM6?
<br />
<br />edit: heh <a href="http://forums.lostlevels.org/viewtopic.php?p=29100&amp;sid=d7311613038eb98188a8160ec6729220#29100" class="postlink">looks like i'm not the 1st person to experience this</a>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>koitsu</b> [ Fri Feb 11, 2011 12:57 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">frantik wrote:</div><div class="quotecontent">is there a way to avoid using ZP mode in ASM6?</div>
<br />
<br />This looks like a bug in asm6.  Some people might argue it's a "funny way of doing auto-optimisation", but I disagree.
<br />
<br />The parser appears to turn 16-bit absolute addresses with a high byte of zero ($00) into ZP.  The assembler does use the correct opcode for the ZP mode, but that isn't what the user wants.
<br />
<br />I also confirmed that tricks like "LDA $00ff+0" and "LDA 0+$00ff" do not work around the bug.  Parens don't help either.
<br />
<br />Loopy et al, can you comment on this?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>frantik</b> [ Fri Feb 11, 2011 2:10 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />i looked at the asm6 code but it wasn't immediately apparent where it selects between ZP vs Absolute
<br />
<br />for now i treated it similarly to invalid opcodes and just spit out .hex 3D 23 00.. most of the time it's actually data that is causing it anyways

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>koitsu</b> [ Fri Feb 11, 2011 4:27 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />It (asm6) seems to do this with any absolute addressing mode (including indexed ones) where a 16-bit value is provided and the high byte is $00.  So you'll need to use .DB workarounds for all the opcodes that have that addressing mode.  I haven't checked things like JMP ($00FF) yet, but you can do so by writing the code and using "asm6 -l blah.asm", then looking at "blah.lst" to see what gets generated.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>frantik</b> [ Fri Feb 11, 2011 5:20 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />JMP ($00XX) does not seem to affected
<br />
<br />finishing up some changes.. it's now a FOUR pass disassembler but it produces code which can be immediately re-assembled into an identical copy of the original, so i got that going for me

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Fri Feb 11, 2011 5:33 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Here's how I understand it working in assemblers such as ASM6 and ca65: The values $23, $0023, and 35 all get turned into the same data type (integer). If the assembler can determine that the integer is smaller than $100 at compile time, it emits a zero page instruction; otherwise, it emits an absolute instruction. Why would you want to force absolute indexed over zero page indexed addressing, except A. to join the end of zero page with the beginning of the stack, or B. to program the Super NES (with its movable zero page) instead of the NES?
<br />
<br />(Rereading) You mean C. to make NESASM-assembled code round-trippable, as NESASM treats all addresses as absolute unless forced with a zero page operator.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dwedit</b> [ Fri Feb 11, 2011 5:58 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Maybe just create macros for the 16-bit instructions, and emit instances of them instead of the real instructions when you encounter a 16-bit instruction with an 8-bit value.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>frantik</b> [ Fri Feb 11, 2011 6:00 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">(Rereading) You mean C. to make NESASM-assembled code round-trippable, as NESASM treats all addresses as absolute unless forced with a zero page operator.</div>
<br />
<br />it's to make all code "round-trippable".. i just used .hex instead, though it would be nice if ASM6 allowed a way to force it to use the specific opcode that is implied by the code.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Gilbert</b> [ Fri Feb 11, 2011 6:03 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />This is a bit ironic, as some Japanese recently released a <a href="http://www.2a03.jp/~minachun/nesasm/nesasm_x86.html" class="postlink">hacked version</a> of NESASM, that you can force it to have the same behaviour as ASM6 when the -autozp option is used.
<br />
<br />I now think about it though, apart from the other problematic quirks of NESASM, due to its origin as PCEAS, the "non-auto zero page" aspect of it was actually <em>mandatory</em>, since ZP for the PCE is located at $2000, so if you somehow want to code for both systems, especially when you want to reuse portions of codes in projects for both platforms, it will always be a good practice to manually specify when ZP addressing has to be used.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Fri Feb 11, 2011 7:44 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />And ZP for the 8080 derivative in the Game Boy is at $FF00. Both of these cases resemble the Super NES case.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>frantik</b> [ Fri Feb 11, 2011 9:42 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />i updated the disassembler to version 1.1.. updated the first post but here is the link:
<br />
<br /><a href="http://swiftlytilting.com/downloads/dasm6-1.1.zip" class="postlink">Download Dasm6 v1.1</a>
<br />
<br />it's now a <strong>multi</strong>-pass disassembler, usually taking between 4-5 passes for the labels to "stabilize", with an add'l pass needed to generate the output.  you can specify how many passes you want with <strong>-p or -passes</strong>, or just let it run its course.
<br />
<br />i've not tested it with a ton of roms but so far every mapper 0 rom has assembled into a 1:1 copy of the original.  For 16k games that have 2 copies in in the .nes file, it will tweak the iNes header from 2 prg banks to 1 unless you disable 16k checking 
<br />
<br />If you use the new <strong>-c or -chr</strong> option it will export the CHR data and include it from the assembly file so you can instantly check if the disassembly is valid.  The -r or -registers option aliases the common nes registers with their text names instead of their memory addresses. 
<br />
<br />next i want to add support for custom external memory location/label names (should be easy) and also support the data/code mapping from fceudx.. the code mapping also tells you which bank the code was loaded in so that might be essential for automatic disassembly of more complex roms.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>2</strong> of <strong>7</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>