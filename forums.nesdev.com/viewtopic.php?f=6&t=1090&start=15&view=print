<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - NSF Support for PCM Samples</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">NSF Support for PCM Samples</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=6&amp;t=1090">http://forums.nesdev.com/viewtopic.php?f=6&amp;t=1090</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>2</strong> of <strong>4</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Fri Feb 24, 2006 8:49 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Fine by me. It'll take a while before my implementation gets out anyway. I'll try writing something up tomorrow if I have time.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Memblers</b> [ Sat Feb 25, 2006 12:24 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />As long as it works alright on a real system, it should be fine.  Sounds ok to me so far, except there's no way to escape from the idle routine.  I almost would've recommended a CPU-cycle based interrupt to call it, but I suppose that's getting kinda far from how the actual games work even if it is escapeable.  No big deal, the system can just get reset.
<br />
<br />What would it do on tracks that don't use the idle routine (like Skate or Die 2 except the title), just return from idle maybe?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Quietust</b> [ Sat Feb 25, 2006 1:40 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Memblers wrote:</div><div class="quotecontent">What would it do on tracks that don't use the idle routine (like Skate or Die 2 except the title)?</div>
<br />
<br />Good point - it would probably be best to just have it loop forever.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bananmos</b> [ Sat Feb 25, 2006 1:54 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I'd just like to say that I do care, and I'm glad people are finally finding ways of implementing what I wanted in the NSF spec from the very beginning. It just seemed that the people involved got the issue sorted out by themselves.
<br />
<br />But like Memblers, I would like an interrupt-based method as well... the lack of an interrupt doesn't seem to hurt the audio quality in Battletoads nor Skate or Die 2, but one only uses drums and the other has a 4-bit (=heavily quantized) sample, so none are a good test for how noticable glitches you get from interrupting the sample playback with the sound code. Then again, I haven't done any actual tests myself.
<br />
<br />I think the best way to provide an interrupt-based method like this would simply be to use the playback rate in the NSF header. The ripper could then set it to say 22kHz, play a sample on each to the playback routine call and at the same time increment a counter and invoke it's music engine routine if 1/50 (or 1/60) seconds have passed since the last call to it. An actual NSF playback cart would then need to include a pretty sophisticated hardware timer, but maybe that's not a big issue since you'd have to add extra circuitry for the 4kB bankswitcing in any case.
<br />
<br />Though an obvious problem with this approach is that it would still be theoretically possible to make programs that can't be converted to NSF format, by invoking the sample playback with an IRQ and the playback with the NMI. If the IRQ sample playback routine really uses up all cycles to the limit, it might not be possible to add the extra code that unifies the 1/50 and the xx kHz routines.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Sat Feb 25, 2006 7:34 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />In Bananmos' scheme, the play routine is re-entrant. If that's the case, then it also supports idle-style $4011 samples; the NSF play routine would route the first call to its private idle routine that never returns, and the rest would clock the player normally. This is a nice scheme in that it's just a clarification of the current format without addition of anything.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>NewRisingSun</b> [ Sat Feb 25, 2006 8:14 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The whole point is to allow for raw PCM playback without having to go to great lengths to adapt the existing game code for NSF playback (like it had to be done with the Skate or Die 2 NSF); the idle routine concept serves that purpose nicely. 
<br />A 22 kHz interrupt would require a lot of effort to adapt existing game code, since no real NES hardware uses that, and you gain absolutely nothing by that.
<br />
<br />I also don't see why there's no way to escape from the idle routine. The idle routine is not continously called, but just ONCE after "init", and if the particular song uses PCM, it never returns, if it doesn't use PCM, it just returns via RTS and is never called again for the remaining duration of the song. 
<br />If you think that this violates the meaning of the word "idle", well, I'm not married to that word, just to the concept. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Zepper</b> [ Sat Feb 25, 2006 8:35 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />It's been a long time since my last NSF emu experience... but, what do you mean by "idle"? An infinity loop, like JMP $pc_addr (same of waiting for an NMI)?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Sat Feb 25, 2006 2:09 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Three routines in one of proposed NSF additions:
<br />
<br />Init - sets up for playback, returns once done. Until it returns no other routines are invoked.
<br />
<br />Idle - called just after init returns. Can run endlessly and never return, or return normally.
<br />
<br />Play - called periodically once init returns. Can interrupt idle routine.
<br />
<br />
<br />The other proposal from Bananamos doesn't require the addition of a new routine:
<br />
<br />Init - same as above
<br />
<br />Play - called periodically once init returns. Called even if previous call to play hasn't returned yet. Could play high-speed samples by setting playback rate in header to an extremely high value (as compared to normal).
<br />
<br />This allows the play routine to keep a global flag "first call made" and invoke its own version of the idle routine, without the player having to know about it:
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">play:<br />lda first_call<br />beq idle_loop<br />... normal play code<br /><br />idle_loop:<br />lda #1<br />sta first_call ; cause normal play code to execute on future calls<br />loop:<br />... play pcm when play routine sets flag<br />jmp loop ; keep looping here and let play routine invocations interrupt<br /></div>
<br />
<br />I like this proposal better because it doesn't add anything new. It is trivial to code the above first call/later call branch, and gives all the functionality of the proposed idle routine.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bananmos</b> [ Sun Feb 26, 2006 4:25 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I like your final(?) decision on this matter, since IMO we shouldn't put any unnecessary restrictions on what kind of music code can be converted into NSF format. 
<br />
<br />Speaking of which, do you know a way to fit your neat "sawtooth emulation on DPCM" music code in the NSF specification? If not, shouldn't we also try to resolve this issue as well?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Sun Feb 26, 2006 9:08 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I like your final(?)</div><br /><br />Haha. What can I say, yours was mostly superior, so my opinion changed. :)<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">since IMO we shouldn't put any unnecessary restrictions on what kind of music code can be converted into NSF format.</div><br /><br />Well if you really want no restrictions then make a NES ROM for use in an emulator. I'm with NewRisingSun on the basic purpose of NSF: capture music from games with minimal changes to the driver code. I want nothing to do with people who make NSF music with every custom chip enabled simultaneously or use things like MIDINES with a custom processor running 10x the speed of the NES, a parasite using the NES only for its sound chip. If you want sampled instruments, the NES is not the thing for it. Sorry, rant over.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Speaking of which, do you know a way to fit your neat "sawtooth emulation on DPCM" music code in the NSF specification?</div>
<br />
<br />According to Disch, an NSF player should support IRQ, which means it should work, but he also says that several NSF files enable IRQ but leave trash in the IRQ vector. I'm still undecided as to whether I think my DMC-based saw wave would really be practical in a game for background music, and thus legitimate for use in an NSF. If you're only using it in an NSF, you might as well just write code that spends all the CPU time outputting complex waveforms via $4011.
<br />
<br />It would be nice for the IRQ to work in an NSF. The resolution would be to fix current NSF rips which carelessly enable IRQ.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bananmos</b> [ Sun Feb 26, 2006 9:43 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I'm with you as far as the expansion chip junkies on 2a03.org are concerned. Anything you don't plan on building in hardware is utterly pointless to use NES emulation for. And nothing is more appaling than the "use every known Famicom expansion chip simultaneously"-competitions.
<br />
<br />As for the rest of your rant, I can only agree to disagree. Even is a certain sound-generating method is unlikely to be discovered/invented, it's not wise to put restrictions that disallow this. 
<br />
<br />Keep in mind that the reason you had to put this effort of making raw PCM work in the first place is that Kevin Horton had the exact same attitude about the NSF format when he created it - that since raw PCM was so uncommon, the samples could be converted to DPCM for the few games that used it, in order to keep the format as simple as possible. And thus, the Skate or Die 2 title song could not be NSF:ed, until we started discussing a (controversial) solution that fits the format. 
<br />
<br />It's fortunate that it could be solved, but it had been way better if the specifications had taken raw PCM in mind from the very beginning, so we wouldn't have rips and players that conflict with this. I'd like to see some detailed NSF guidelines for rippers and player authors, and I sure hope suggestions that open up for possibilities won't be answered with a "no games ever did that" remark.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sun Feb 26, 2006 10:08 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />In order to understand the true meaning, it is useful to explore the extremes:
<br />
<br /><div class="quotetitle">Bananmos wrote:</div><div class="quotecontent">I'm with you as far as the expansion chip junkies on 2a03.org are concerned. Anything you don't plan on building in hardware is utterly pointless to use NES emulation for.</div>
<br />Now watch someone answer your criticism by wiring up a cart with a UART on $5000-$5007 and a line-in jack. This could be connected to the 60-pin sound input or (in the case of 72-pin systems) to an ADC on the board that outputs DMC. And here's how the 2A03 junkies might use it: Clock the UART at 31.25 kHz and plug in a high-end MIDI synthesizer, and you have a mapper built in very expensive hardware. Clock the UART slower and plug in an old CD player's wired remote control, and you have another mapper built in hardware with music capability comparable to the PC Engine (TurboGrafx) CD system. Both techniques <em>have</em> been used in actual consumer video games, though not actual NES games.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Sun Feb 26, 2006 10:36 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Heh tepples, here's a much simpler way to have the NES control a keyboard: drop it on the keys. OK OK serious. At some point one has departed from the "NES experience" when adding hardware to essentially replace its core functions. I'd say what makes the NES the NES is not so much its CPU, but the PPU and APU, particularly their limitations and quirks. Add replacement graphics hardware or sound chips and you've replaced its essence. But not to get side-tracked on my opinions...
<br />
<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">'d like to see some detailed NSF guidelines for rippers and player authors, and I sure hope suggestions that open up for possibilities won't be answered with a "no games ever did that" remark.</div>
<br />
<br />That is merely a general direction I have in mind for NSF, rather than a hard technical rule. I don't mean to be dismissive about technical proposals, just of working on extensive support in a direction that has little to do with the NES experience. Your idea is simply taking the playback tempo to the extreme and clarifies that the play routine is re-entrant, which is about as minimal an update as possible. If an NSF player works when you set the playback tempo to 1.32 million beats per minute, great, you can do 22 kHz samples. I almost want to code this up and see how it works.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bananmos</b> [ Sun Feb 26, 2006 12:32 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I really don't know why I'm being criticized for wanting to use extra sound hardware, since I never ever mentioned anything in that direction. However, contrary to what you're saying, I DO feel that sampled instruments fit the NES experience. Truthfully, Skate or Die 2 never was part of my NES experience back in the days. But nowadays it is, since it's a really cool example of playing a kick-ass sampled instrument (the 4-bit quantization even fits the electric guitar sound nicely) on the NES sound hardware, and my NES experience is not static but ever evolving. ;)
<br />
<br />When the NSF format was being developed, I argued that the ability to play sampled instruments thru raw PCM should be included, but it was not considered to fit the NES experience. I was asked to show a NES program that did something like this, and I knew none. I only knew it was possible to do. Later I discovered Skate Or Die 2, but then it was already too late. And even then, I wouldn't have liked a solution which only mimicked the code in the original game, since a less quantized sample could sound distorted when not played thru an interrupt. It's funny how I never considered the idea of changing the playback rate and having a re-entrant routine. I just kind of viewed the playback rate as fixed.
<br />
<br />Going further on this matter, the NSF format is indeed a very good environment for playing samples, due to it's 4kB bank-switching, Just have 1 page fixed to a volume-multiplied-by-samplevalue-table, and a few other pages set by the music engine to the particular samples to be played on each software channel. Then, for each channel, just do something like this for each channel in the irq routine: (self-modifying code implied)
<br />
<br />lda #sampleLo
<br />adc #sample_incr_lo
<br />sta sampleLo
<br />lda #sampleHi
<br />adc #sample_incr_hi
<br />sta sampleHi
<br />tax
<br />ldy SamplePtr,X
<br />lda volume_by_sample,Y
<br />adc #OldSamples
<br />sta OldSamples_next_channel
<br />
<br />...
<br />
<br />sta $4011
<br />
<br />...and you should have a workable 2-3 channels sampled instruments player. This puts certain restrictions on the maximum sampling frequency and playback speed, but I figure it should be decent. If not, sacrifice one channel and add some more elaborate code in the loop. The reason I haven't tried something like this yet is lack of time/laziness on my part. :)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sun Feb 26, 2006 3:09 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bananmos wrote:</div><div class="quotecontent">When the NSF format was being developed, I argued that the ability to play sampled instruments thru raw PCM should be included, but it was not considered to fit the NES experience. I was asked to show a NES program that did something like this, and I knew none. I only knew it was possible to do. Later I discovered Skate Or Die 2, but then it was already too late.</div>
<br />Had I been in the scene at the time, I would have mentioned <em>Big Bird's Hide and Speak</em>. 
<br />-- How many words can you make before the sun goes down? Ready... go!
<br />-- N, S, F, I don't think that's a word. Go again!
<br />
<br />And even a kick*** $4011 based music player that doesn't work during the game could still be useful during cutscenes. <em>SoD 2</em> is the minimal example of this, but imagine if the <em>Ninja Gaiden</em> or <em>Vice: Project Doom</em> cut scenes had some approximation of Amiga style music.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>2</strong> of <strong>4</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>