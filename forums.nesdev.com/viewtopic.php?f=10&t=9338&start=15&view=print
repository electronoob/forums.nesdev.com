<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Sprite Movement Delay and Critique Requested</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Sprite Movement Delay and Critique Requested</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=10&amp;t=9338">http://forums.nesdev.com/viewtopic.php?f=10&amp;t=9338</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>2</strong> of <strong>3</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>3gengames</b> [ Mon Sep 24, 2012 10:52 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Sprite Movement Delay and Critique Requested</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Usually people clear them right off the bat. I also do that. I don't think you can really call 2 NMI's unless your program sloppily clears NMI enable regs on the PPU then enables it inside NMI.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Mon Sep 24, 2012 11:01 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Sprite Movement Delay and Critique Requested</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">rainwarrior wrote:</div><div class="quotecontent">I thought it was impossible for a second NMI to fire before your RTI from your NMI routine...? (As well as impossible for IRQs to fire during NMI.)</div><br />It is possible for a second NMI to fire, because the interrupt inhibit flag set on entry (the same one affected by SEI/CLI) only affects normal (non-NMI) interrupts. Of course the NMI can be explicitly disabled or a flag can be checked to see if the NMI interrupted another one, so what method to use comes down to preference.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Mon Sep 24, 2012 11:24 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Sprite Movement Delay and Critique Requested</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Ah, okay, I understand now how the NMI can be retriggered after reading its wiki page a few times (I didn't realize it was edge triggered, or that it asserts for the whole vblank unless disabled or cleared). I've never tried the everything-in-the-NMI approach, myself.<br /><br />So, if I understand this correctly, if you put your whole game in NMI you should:<br />1. Clear the NMI flag in $2000 on entry.<br />2. Read $2002 at least once, to avoid retriggering NMI if you enable NMI via $2000 before vblank is over.<br />3. Re-enable NMI flag in $2000 directly before RTI.<br /><br /><br />I see that Super Mario Bros. does this, though it's also careful to maintain a RAM copy of the flags stored at $2000 so that it doesn't accidentally change any of the rendering state flags.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Hallie</b> [ Wed Sep 26, 2012 9:10 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Sprite Movement Delay and Critique Requested</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Hi,<br /><br />I've been playing around the with the PPU registers and updating the nametables a bit inside the NMI to get a better understanding of them all. I came across something that I can't quite understand and I didn't think it required a whole new thread on it so I thought I'd ask here. Simply, I was just trying to update 1 tile on the second name table. I was wondering why if I omit writing to the PPUCTRL that I want the first nametable to display, the program will display the second nametable. If anyone could help me understand the logic behind this behavior, it would be greatly appreciated. I included the code I have in my NMI below. <br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NMI:<br /><br />&nbsp; &nbsp;&nbsp; <br />&nbsp; BIT vBlankFlag ;check if vblank is finished<br />&nbsp; BPL @NotReady<br />&nbsp; <br />&nbsp; PHA;<br />&nbsp; TXA;<br />&nbsp; PHA; backup registers<br />&nbsp; TYA;<br />&nbsp; PHA;<br />&nbsp; <br /><br />&nbsp; LDA GraphicsUpdate<br />&nbsp; BEQ @NoGraphicUpdate<br />&nbsp; <br />&nbsp; LDA #$00 ; disable rendering<br />&nbsp; STA $2001<br />&nbsp; <br />&nbsp; ;Enable DMA<br />&nbsp; LDA #$00<br />&nbsp; STA $2003&nbsp; &nbsp; &nbsp; &nbsp;; set the low byte (00) of the RAM address<br />&nbsp; LDA #$02<br />&nbsp; STA $4014&nbsp; &nbsp; &nbsp; &nbsp;; set the high byte (02) of the RAM address, start the transfer<br />&nbsp; <br /><br />&nbsp; LDA #$24;&nbsp; *<br />&nbsp; STA $2006; | <br />&nbsp; LDA #$56;&nbsp; | EXPERIMENTING WITH UPDATING NAMETABLES<br />&nbsp; STA $2006; |<br />&nbsp; LDA #$56;&nbsp; |<br />&nbsp; STA $2007; *<br /><br />&nbsp; LDA #%00011110&nbsp; &nbsp;; enable sprites, enable background, no clipping on left side<br />&nbsp; STA $2001<br />&nbsp; LDA #$00&nbsp; &nbsp; &nbsp; ;;tell the ppu there is no background scrolling<br />&nbsp; STA $2005<br />&nbsp; STA $2005<br />&nbsp; <br />&nbsp; LDA #%10010000&nbsp; &nbsp;; enable NMI, sprites from Pattern Table 0, background from Pattern Table 0<br />&nbsp; STA $2000<br />&nbsp; <br />&nbsp; LDA #$00&nbsp; &nbsp; &nbsp; ;;tell the ppu there is no background scrolling<br />&nbsp; STA $2005<br />&nbsp; STA $2005<br />&nbsp;<br />&nbsp;@NoGraphicUpdate:<br /><br />&nbsp;INC vBlankFlag ;set the flag to &quot;false&quot;, vblank is done<br />&nbsp;<br /><br />&nbsp; <br />&nbsp;@NotReady:<br />&nbsp;<br />&nbsp; PLA;<br />&nbsp; TAY;<br />&nbsp; PLA; restore registers<br />&nbsp; TAX;<br />&nbsp; PLA;<br /><br />&nbsp; <br />RTI; return from interrupt<br /></div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>3gengames</b> [ Wed Sep 26, 2012 9:33 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Sprite Movement Delay and Critique Requested</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />That is because one of the bits you write to $2006 affects PPUCTRL. It's hard to explain (search on the wikipedia for loopys doc) but basically, there's a temprary register, where some data of the PPUCtrl,X,Y, etc registers go. When you write $2006, it uses that as it's temporary RAM before it assignes the PPU data pointer, so basically PPUCtrl, Mask, X+Y Scroll all get trashed. That's why you need to write all those at the end of VBlank. Hope you understand this. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /><br />ETA: And in the NMI, DO NOT loop check the vblank flag. While that should always be set if you get there from an NMI, if you just jump to your NMI again to wait, it will NOT run correctly and will &quot;drop&quot; frames because of a glitch in the PPU. Turn on NMI via PPUCtrl and use the NMI off that, not the $2002 read loop. Remember to read $2002 at the beginning of VBlank (BIT $2002, LDA $2002 are common) and then remember to keep track of $2006 high/low write counters in your code. That's it though. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Movax12</b> [ Wed Sep 26, 2012 10:35 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Sprite Movement Delay and Critique Requested</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />^I'm pretty sure the loopy scrolling stuff has to do with writing to $2006 while rendering, not in vblank. It shouldn't trash stuff during vblank as far as I know.<br /><br />You should have to write to $2000 at least somewhere in your code to set the nametable you are using. (Try writing to $2000 once outside of NMI.)<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; <br />&nbsp; BIT vBlankFlag ;check if vblank is finished<br />&nbsp; BPL @NotReady<br />&nbsp;<br />&nbsp; PHA;<br />&nbsp; TXA;<br />&nbsp; PHA; backup registers<br />&nbsp; TYA;<br />&nbsp; PHA;<br /><br />&nbsp;; ...code...<br /><br />@NotReady:<br />&nbsp;<br />&nbsp; PLA;<br />&nbsp; TAY;<br />&nbsp; PLA; restore registers<br />&nbsp; TAX;<br />&nbsp; PLA;<br /><br />&nbsp;<br />RTI; <br /></div><br /><br />It does look like you are using vblank to test ... if the system is executing NMI code, it means you are in fact in vblank and you should be testing a flag (<a href="http://en.wikipedia.org/wiki/Semaphore_%28programming%29" class="postlink">semephore</a>) that was set from your main logic that indicates everything is complete.<br /><br />Your code will probably always be ready for NMI, but if it's not your program is going to crash due to the fact that you always restore regsiters from the stack, but don't save them when the initial test branches. If you push something onto the stack you have to pull it in a logical manner.<br /><br />BTW you don't need to disable rendering if you are going to finish writing to the PPU before it starts to render the next frame, not a big deal though.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Wed Sep 26, 2012 10:43 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Sprite Movement Delay and Critique Requested</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Internally, the PPU has only one address register which it uses to access PPU memory, and this includes all the reading it has to do in order to draw the screen. When you use $2006 to write to the name tables, you are modifying this address, so unless you reset it to point to where you want rendering to start from (commonly referred to as &quot;setting the scroll&quot;, which is done through $2000 and $2005, but in special cases also through $2006), it will start rendering from the last name table you accessed during VBlank.<br /><br />3gengames, it appears he just named the variable &quot;vBlankFlag&quot;, he's not actually reading $2002. That flag most likely indicates whether the game logic has finished by the time the NMI hits, so he can skip the video updates in case the game logic is not done yet.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>3gengames</b> [ Wed Sep 26, 2012 10:46 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Sprite Movement Delay and Critique Requested</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Movax12 wrote:</div><div class="quotecontent">^I'm pretty sure the loopy scrolling stuff has to do with writing to $2006 while rendering, not in vblank. It shouldn't trash stuff during vblank as far as I know.</div><br /><br /><br />I know for a fact what I said is 100% true, it trashes everything in VBlank too as that is exactly how it is made to work. Doesn't matter where the writes occur, LoopyT is used to temporarily store the value before the bits are transferred to LoopyV. LoopyV is used for rendering, though. It also only updates certain bits inside the video register at the end of each scanline, unless you use the 06,05,05,06 write combo to assign the bits you need to and then force it to update all the bits to consequently change the scanline/screen position to anywhere you need it when you need to.<br /><br /><!-- m --><a class="postlink" href="http://wiki.nesdev.com/w/index.php/Skinny">http://wiki.nesdev.com/w/index.php/Skinny</a><!-- m --><br /><br />ETA: Okay, I dunno what else he is doing, but I just saw those right off the bat when I skimmed it, I honestly rarely read and fully understand others code because it's too hard if I did not write it.  <img src="./images/smilies/icon_mrgreen.gif" alt=":mrgreen:" title="Mr. Green" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Movax12</b> [ Wed Sep 26, 2012 10:51 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Sprite Movement Delay and Critique Requested</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I understand you should reset the scroll at the end of NMI, but is it really necessary to re-write the PPU control/mask? I've been coding with nintendulator and it does not emulate any issue with not re-writing the PPU registers.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>3gengames</b> [ Wed Sep 26, 2012 10:53 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Sprite Movement Delay and Critique Requested</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Movax12 wrote:</div><div class="quotecontent">I understand you should reset the scroll at the end of NMI, but is it really necessary to re-write the PPU control/mask? I've been coding with nintendulator and it does not emulate any issue with not re-writing the PPU registers.</div><br /><br />Yeah, it is necessary if you write to $2006 during vblank ever for sceen updates. You're just getting lucky because the value you write to the nametable has the correct bits for the nametable you're on I am guessing.<br /><br />Update nametable address always just so happens to set the right nametable display bits.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp;%0000.VH00 0000.0000 ;LoopyT scrolling register. V=Add 240 to Y scroll, H=Add 256 to X scroll.<br />#%0010.0000 0000.0000 ;$2000 nametable write to update nametable minimum. V=0,H=0<br />#%0010.0011 1111.1111 ;$2000 nametable write to update nametable maximum. V=0,H=0<br />#%0010.0100 0000.0000 ;$2400 nametable write to update nametable minimum. V=0,H=1<br />#%0010.0111 1111.1111 ;$2400 nametable write to update nametable maximum. V=0,H=1<br />#%0010.1000 0000.0000 ;$2800 nametable write to update nametable minimum. V=1,H=0<br />#%0010.1011 1111.1111 ;$2800 nametable write to update nametable maximum. V=1,H=0<br />#%0010.1100 0000.0000 ;$2B00 nametable write to update nametable minimum. V=1,H=1<br />#%0010.1111 1111.1111 ;$2B00 nametable write to update nametable maximum. V=1,H=1<br /></div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Movax12</b> [ Wed Sep 26, 2012 10:58 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Sprite Movement Delay and Critique Requested</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Seems I can learn something from OP's NMI routine then.. going to do some testing/coding..

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Thu Sep 27, 2012 5:42 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Sprite Movement Delay and Critique Requested</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Movax12 wrote:</div><div class="quotecontent">I understand you should reset the scroll at the end of NMI, but is it really necessary to re-write the PPU control/mask? I've been coding with nintendulator and it does not emulate any issue with not re-writing the PPU registers.</div><br />To fully set the scroll you do have to write to $2000 in addition to $2005. You can think of the name table selection bits as the 9th bit of the horizontal and vertical scroll values. If you don't select a name table through $2000 every VBlank, the name table that will be rendered will be the last one you wrote to. Even if the last PPU access you made were to pattern tables or palettes, they would affect the scroll too.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Thu Sep 27, 2012 8:33 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Sprite Movement Delay and Critique Requested</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent"><div class="quotetitle">Movax12 wrote:</div><div class="quotecontent">I understand you should reset the scroll at the end of NMI, but is it really necessary to re-write the PPU control/mask? I've been coding with nintendulator and it does not emulate any issue with not re-writing the PPU registers.</div><br />To fully set the scroll you do have to write to $2000 in addition to $2005. You can think of the name table selection bits as the 9th bit of the horizontal and vertical scroll values.</div><br />Just remember that since the vertical resolution is only 240 pixels, you need to adjust for that if you want to convert a vertical scroll value (0..479) to an Y scroll value and vertical nametable selection bit (can't use nt_sel_bit = y_scroll&gt;&gt;8 like in the horizontal case). So, in a nutshell, saying it's the 9th bit of scroll isn't technically correct for the vertical scroll, although I remember saying the same in the past, too.<br /><br />BTW, just a curiosity, this has to be one of the most common questions/problems that newcomers have about NES. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Thu Sep 27, 2012 10:42 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Sprite Movement Delay and Critique Requested</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">thefox wrote:</div><div class="quotecontent">Just remember that since the vertical resolution is only 240 pixels, you need to adjust for that if you want to convert a vertical scroll value (0..479) to an Y scroll value and vertical nametable selection bit (can't use nt_sel_bit = y_scroll&gt;&gt;8 like in the horizontal case).</div><br />True, the vertical scroll is somewhat more complex. My preferred way to deal with it is to keep 2 separate vertical offsets in RAM and update them in parallel: one is just a regular 16-bit unsigned number, and the other is treated specially to skip that range that isn't used on the NES, either on increments and decrements.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">BTW, just a curiosity, this has to be one of the most common questions/problems that newcomers have about NES. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /></div><br />To be fair, it's a hard concept to grasp. The fact that loopy's doc is called &quot;The Skinny on NES Scrolling&quot; doesn't help, because people think they have to understand it in order to make their programs scroll, while in fact it talks about a more complex subject, which you don't need to know about in order to implement simple scrolling. In fact, I believe that most of the developers back in the day didn't know the details of the $2005/$2006 trickery.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Hallie</b> [ Thu Sep 27, 2012 10:17 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Sprite Movement Delay and Critique Requested</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Thank you for the replies. Everyone's different ideas and suggestions have given me some homework for the weekend to test out. However, I think I understand the PPU a *tad* bit more. Next, I wanted to update a complete nametable next to observe the behavior. I added a simple JSR in the NMI to a UpdateRoom routine that updates the second nametable. The nametable updates fine according the the nametable viewer in FCEUX, but the scroll lines shoot to the top right hand corner which leaves the most of the first nametable not visible. Would someone be so kind to explain why this occurs and what I am doing wrong so I can avoid this in the future? My goal in the next few months is to gain a solid understanding of NES development so I can actually start making a serious attempt at a game without running into too many roadblocks. I've included my NMI and UpdateRoom routines below and attached the complete code below.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NMI:<br /><br />&nbsp; PHA;<br />&nbsp; TXA;<br />&nbsp; PHA; backup registers<br />&nbsp; TYA;<br />&nbsp; PHA; <br />&nbsp; <br />&nbsp; <br />&nbsp; BIT vBlankFlag ;check if vblank is finished<br />&nbsp; BPL @NotReady ;N flag is set, still negative<br /><br />&nbsp; LDA GraphicsUpdate<br />&nbsp; BEQ @NoGraphicUpdate<br />&nbsp; <br />&nbsp; LDA #$00 ; disable rendering<br />&nbsp; STA $2001<br />&nbsp;<br />&nbsp; ;Enable DMA<br />&nbsp; LDA #$00<br />&nbsp; STA $2003&nbsp; &nbsp; &nbsp; &nbsp;; set the low byte (00) of the RAM address<br />&nbsp; LDA #$02<br />&nbsp; STA $4014&nbsp; &nbsp; &nbsp; &nbsp;; set the high byte (02) of the RAM address, start the transfer<br />&nbsp; <br />&nbsp; ;LDA #$24;&nbsp; *<br />&nbsp; ;STA $2006; | <br />&nbsp; ;LDA #$56;&nbsp; | EXPERIMENTING WITH UPDATING NAMETABLES<br />&nbsp; ;STA $2006; |<br />&nbsp; ;LDA #$56;&nbsp; |<br />&nbsp; ;STA $2007; *<br /><br />&nbsp; JSR UpdateRoom ;updates second nametable with background3<br /><br />&nbsp; LDA #%10010000&nbsp; &nbsp;; enable NMI, sprites from Pattern Table 0, background from Pattern Table 0<br />&nbsp; STA $2000<br />&nbsp; <br />&nbsp; LDA #%00011110&nbsp; &nbsp;; enable sprites, enable background, no clipping on left side<br />&nbsp; STA $2001<br />&nbsp; <br />&nbsp; LDA #$00&nbsp; &nbsp; &nbsp; ;;tell the ppu there is no background scrolling<br />&nbsp; STA $2005<br />&nbsp; STA $2005<br /><br />&nbsp;@NoGraphicUpdate:<br /><br />&nbsp;INC vBlankFlag ;set the flag to &quot;false&quot;, vblank is done<br />&nbsp;<br /><br />&nbsp; <br />&nbsp;@NotReady:<br />&nbsp;<br />&nbsp; PLA;<br />&nbsp; TAY;<br />&nbsp; PLA; restore registers<br />&nbsp; TAX;<br />&nbsp; PLA;<br /><br />&nbsp; <br />RTI; return from interrupt<br /></div><br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">UpdateRoom:<br />@LoadBackground:<br />&nbsp; ;LDA $2002&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; read PPU status to reset the high/low latch<br />&nbsp; LDA #$24<br />&nbsp; STA $2006&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; write the high byte of $2000 address<br />&nbsp; LDA #$00<br />&nbsp; STA $2006&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; write the low byte of $2000 address<br /><br />&nbsp; LDA #&lt;background3<br />&nbsp; STA BackgroundPointer+4&nbsp; &nbsp; &nbsp;; put the low byte of the address of background into pointer<br />&nbsp; LDA #&gt;background3<br />&nbsp; STA BackgroundPointer+5&nbsp; &nbsp; ; put the high byte of the address into pointer<br />&nbsp; <br />&nbsp; LDX #$00&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ; start at pointer + 0<br />&nbsp; LDY #$00<br />@OutsideLoop:<br />&nbsp; <br />@InsideLoop:<br />&nbsp; LDA (BackgroundPointer+4), y&nbsp; ; copy one background byte from address in pointer plus Y<br />&nbsp; STA $2007&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; this runs 256 * 4 times<br />&nbsp; <br />&nbsp; INY&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; inside loop counter<br />&nbsp; CPY #$00<br />&nbsp; BNE @InsideLoop&nbsp; &nbsp; &nbsp; ; run the inside loop 256 times before continuing down<br />&nbsp; <br />&nbsp; INC BackgroundPointer+5&nbsp; &nbsp; &nbsp; &nbsp;; low byte went 0 to 256, so high byte needs to be changed now<br />&nbsp; <br />&nbsp; INX<br />&nbsp; CPX #$04<br />&nbsp; BNE @OutsideLoop&nbsp; &nbsp; &nbsp;; run the outside loop 256 times before continuing down<br /><br />RTS<br /></div>

		
			<br clear="all" /><br />

			<table class="tablebg" width="100%" cellspacing="1">
			<tr>
				<td><b class="genmed">Attachments: </b></td>
			</tr>
			
				<tr>
					<td>
			<span class="genmed">
				<img src="./styles/subsilver2/imageset/icon_topic_attach.gif" width="14" height="18" alt="" title="" /> 
				<a href="./download/file.php?id=68">project092712.zip</a> [43.36 KiB]
			</span><br />
			<span class="gensmall">Downloaded 37 times</span>
		

		<br />
	</td>
				</tr>
			
			</table>
		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>2</strong> of <strong>3</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>