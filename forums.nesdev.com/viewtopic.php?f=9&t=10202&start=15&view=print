<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Mapper Features for High Level Languages</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Mapper Features for High Level Languages</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=9&amp;t=10202">http://forums.nesdev.com/viewtopic.php?f=9&amp;t=10202</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>2</strong> of <strong>2</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Drag</b> [ Wed Jun 26, 2013 12:00 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Mapper Features for High Level Languages</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">MMC3 is easy to make thread-safe: during the main thread, leave the switchable bank at set at 7 (PRG ROM bank at CPU $A000-$BFFF). Switch bank 6 (PRG ROM bank at $C000-$DFFF) only in the DPCM playback routine, and switch banks 0-5 (CHR ROM) only in the NMI and scanline IRQ handlers.</div><br />So in other words, the main thread assumes the function select register is a constant, and all of the &quot;threaded&quot; routines will automatically reset it to that constant when finished? That makes sense, that's probably how most games use the mapper anyway; I'm not sure why I thought it was going to be a big hairy deal. <img src="./images/smilies/icon_razz.gif" alt=":P" title="Razz" /><br /><br />I still think you guys should try your hand at assembly. From the looks of it, you're already moving closer and closer to a low-level language anyway. As long as you comment your assembly really thoroughly, it's pretty workable (if you look at any of my source code, I write comments like I'm re-teaching myself how my code works and what I was thinking). The bonus is that you get to use whatever mapper you want. <img src="./images/smilies/icon_razz.gif" alt=":P" title="Razz" /> I'm not sure why 6502 assembly puts everyone off. :\

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Wed Jun 26, 2013 12:19 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Mapper Features for High Level Languages</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Drag wrote:</div><div class="quotecontent">I'm not sure why 6502 assembly puts everyone off. :\</div> I hate doing math in asm. And find conditional branches too error-prone. Otherwise, yeah, asm isn't bad.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Shiru</b> [ Wed Jun 26, 2013 1:12 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Mapper Features for High Level Languages</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Programming in assembly takes few times more time to write and debug the code, that's all. C helps a lot to speed up the development, even if most of the code will be manually rewritten into assembly code afterwards.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Wed Jun 26, 2013 3:54 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Mapper Features for High Level Languages</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I wonder what it'd take to write a game in <a href="http://www.fceux.com/web/help/fceux.html?LuaScripting.html" class="postlink">FCEUX Lua</a> and port it to assembly piece by piece, much as one does with a C game.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Thu Jun 27, 2013 7:15 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Mapper Features for High Level Languages</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">I wonder what it'd take to write a game in <a href="http://www.fceux.com/web/help/fceux.html?LuaScripting.html" class="postlink">FCEUX Lua</a> and port it to assembly piece by piece, much as one does with a C game.</div><br />You can also use <a href="https://gitorious.org/nintendulatordx/nintendulatordx/blobs/master/doc/README-NintendulatorDX-no-linebreaks.txt" class="postlink">NintendulatorDX Lua</a>, where it's actually possible to embed Lua code snippets into the assembly code with ndxLuaExecStr and ndxLuaExecFile macros. From there on out one could fairly easily start translating each snippet to assembly little by little.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>infiniteneslives</b> [ Thu Jun 27, 2013 11:24 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Mapper Features for High Level Languages</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The lines between this discussion and <a href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=10205&amp;start=15#p114038" class="postlink">that</a>one are starting to bleed a little, but based on what Shiru and Rainwarrior are saying a large part of the problem can be resolved by banking game data alone.<br /><br />Seems within reason that the C generated code of a reasonably complex (a step up from over 90% of current homebrews) could fit well within 32KB of fixed PRG-ROM.  If one were willing to depart from a discrete mapper, it would seem that taking the approach of the fme-7 with it's possible banking of PRG-ROM into $6000-7FFF would be the way to go.  So if you can limit your C code to within 32KB which isn't that tight of a limit, then you can get off the ground and start running with current CC65 compilation.  It could be taken even further and expanded to fixed ROM from $6000-$FFFF with banked data  available at $5000-5FFF.  That'd give you 40KB of fixed space dedicated to HLL generated code, which is actually a pretty big space to get a lot done.  I wouldn't be surprised if it could even fit something on the same level as SMB3 taking into account you'll be able to re-write the assembly where it gets bloated significantly.<br /><br />The best part about more fixed ROM and fewer PRG banks is the reduction in logic required.  Sounds pretty reasonable to fit in that scanline counter within 36mcells, and probably even 2KB CHR-RAM banks if the serial SPI wasn't desired.  That comes pretty close to the same level as the MMC3 with a $1 CPLD, but even better since it's more suited for HLL with an arguably better CHR setup than any game released on the NES/FC.  <br /><br />All that power with such simplicity is pretty enticing.  Suddenly not being able to bank HLL generated code doesn't sound like much of a restriction anymore.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>2</strong> of <strong>2</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>