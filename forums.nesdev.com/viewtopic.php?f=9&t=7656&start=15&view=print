<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - NESDEV1 Community Development Board, Initial Planning</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">NESDEV1 Community Development Board, Initial Planning</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=9&amp;t=7656">http://forums.nesdev.com/viewtopic.php?f=9&amp;t=7656</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>2</strong> of <strong>14</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>qbradq</b> [ Fri Apr 15, 2011 2:17 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Several comments:
<br />
<br />1. Most 3.3v CPLD's have I/O pins that are compatible with 5V CMOS logic. Only a 3.3v power supply is required.
<br />2. I don't care if this will not work on an MMC5 donor board. The whole point is to not have to do that <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /> I only care that it will work properly in existing emulators as that is the primary development and demo platform.
<br />3. The Namco mapper makes no advanced provisions for WRAM that I can see. At the very least a write protect feature is needed, although that would not be important on an emulator. It is an option though.
<br />
<br />Thank you for your input Bregalad! I've been waiting for you to chime in on this thread <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Memblers</b> [ Fri Apr 15, 2011 2:36 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Making a new mapper based on an ASIC mapper is a bad idea, IMHO (especially for sharing an iNES mapper #).  It puts a lot of limits on what we can do.  If anyone whines that they can't test their ROM in an emulator, they aren't really the target audience of a devcart.  The whole point of getting the devcart is so you can test on the real system.  I know for me personally, when I bought my EPROM emulator, my percentage of testing under software emulators decreased to virtually never.
<br />
<br />I'm sure people who are used to using the PowerPak haven't had the chance to experience the convenience, because it would be utterly stupid to swap a memory chip 100 times in one sitting and have to navigate the menu every time.
<br />
<br />What if it turns out the MMC5 works different than we think.. so emulators get updated later, suddenly all these programs will be behaving differently depending on what chip they used..  Then we're up shit creek.  Same thing with MMC3.
<br />
<br />I think a full-assed new mapper would be extremely less troublesome than making a half-assed clone mapper.
<br />
<br />BTW, the FPGA used in the PowerPak I believe costs $10 or so.  For my (later planned) FPGA board I was going to use a bigger model in the same family (I think was $17 or so?).  Looking at 5V FPGAs and/or CPLDs is the wrong way to go, what you want is a 3V part that can work safely with 5V stuff.
<br />
<br />I have a whole lot more to say on this stuff, gotta get ready to make dinner though, I'll share more of my thoughts/opinions later.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Fri Apr 15, 2011 2:54 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">qbradq wrote:</div><div class="quotecontent">Is the NMI vector read if NMI is disabled? I'd rather have something that does not restrict the user's program architecture, flawed though it may be <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /></div><br />Do you mean spin on $2002? That's for nesticle programs. Apart from about two Japan-only games, if I remember correctly, all games use NMI to detect vertical blanking, even if it's a Squaresoft-style "just notify the main loop that NMI has occurred" routine.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">If we figure out a good way of detecting the idle PPU</div><br />NMI is a rawther reliable way.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">that and not enabling rendering mid-frame will be the only restrictions on using the IRQ.</div><br />Even Battletoads, which runs on a cheap old discrete mapper, turns on rendering mid-frame so that it has more bandwidth to push sprite cels into CHR RAM. This is especially important if the CHR RAM isn't banked.<br /><br /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">Not that it is a major problem though, it's true, since you usually need to do NTSC and PAL variations because of the sound. </div><br />Not necessarily. My current project detects NTSC NES (29780), PAL NES (33247), or Dendy (35464) at program startup. Its sound engine speeds up the music (assuming 3000 frames per minute rather than 3606) on PAL NES and Dendy, and transposes all pitches up by a semitone on PAL NES only. This has been a priority ever since I realized how CIClone works.<br /><br /><div class="quotetitle">qbradq wrote:</div><div class="quotecontent">Most 3.3v CPLD's have I/O pins that are compatible with 5V CMOS logic. Only a 3.3v power supply is required. </div><br />That includes outputting PRG bank numbers to the PRG ROM and PRG RAM and nametable bank numbers to the CIRAM, and eventually the occasional status flags to the CPU data bus if we have enough space left, correct?<br /><br /><div class="quotetitle">Memblers wrote:</div><div class="quotecontent">If anyone whines that they can't test their ROM in an emulator, they aren't really the target audience of a devcart. The whole point of getting the devcart is so you can test on the real system.</div>
<br />But not everybody is next to a real system all the time. I do a lot of coding on the bus, for example, and carrying an NES, TV, and EPROM emulator around with me wouldn't do. Nor can an EPROM emulator single-step, can it?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>qbradq</b> [ Fri Apr 15, 2011 3:07 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Memblers wrote:</div><div class="quotecontent">Making a new mapper based on an ASIC mapper is a bad idea, IMHO (especially for sharing an iNES mapper #).  It puts a lot of limits on what we can do. [...] I think a full-assed new mapper would be extremely less troublesome than making a half-assed clone mapper.</div><br /><br />I agree 100% with those statements, however...<br /><br /><div class="quotetitle">Memblers wrote:</div><div class="quotecontent">If anyone whines that they can't test their ROM in an emulator, they aren't really the target audience of a devcart.  The whole point of getting the devcart is so you can test on the real system.</div><br /><br />This is not my target audience. I believe it is important for the continued growth of our platform to give new developers a low-impedance path through the product life cycle. Step 1 is developing test code in an emulator. Step 5 or 6 is actually testing on hardware <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /> I can see that seasoned veterans of NES development will jump to where they are comfortable, however this will not be true for new developers.<br /><br />I think there is also a deeper distinction we can make here. The target developer is one who wishes to publish their software on a physical cart. Does that developer care if his product works on every emulator? Probably not. They probably only care that it works in the debugging emulator of their preference.<br /><br />This is very good discussion! I look forward to your further thoughts.<br /><br /><div class="quotetitle">tepples wrote:</div><div class="quotecontent"><div class="quotetitle">qbradq wrote:</div><div class="quotecontent">Most 3.3v CPLD's have I/O pins that are compatible with 5V CMOS logic. Only a 3.3v power supply is required.</div><br /><br />That includes outputting PRG bank numbers to the PRG ROM and PRG RAM and nametable bank numbers to the CIRAM, and eventually the occasional status flags to the CPU data bus if we have enough space left, correct? </div>
<br />
<br />According to the data sheets, yes. Note that I have zero real-world experience with this <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>3gengames</b> [ Fri Apr 15, 2011 4:23 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />No offence, but for being the mapper for all homebrews and the biggest and baddest, I think we'd need more than 512K CHR-ROM and 8KB CHR-RAM. I mean, this is an MMC1 retropak board with a scanline counter right now. That's not worth pursuing. Maybe this mapper won't be doable in a affordable price range. That's always possible.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>MottZilla</b> [ Fri Apr 15, 2011 5:33 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The FME-7 is a very capable mapper with MMC3 level capability which could be cloned and is already supported in tons of emulators. It features a CPU cycle IRQ counter so the pattern table and MMC3 scanline counter are not an issue. It supports PRG-RAM as well. 
<br />
<br />If you want something powerful that is already supported I think you can't do any better than FME-7. I would imagine many emulators don't complain if you want to use CHR-RAM with it though I'm not sure. The only thing FME7 doesn't have that I can think of is all the crazy MMC5 features like its extended 12K CHR thing that lets you have 8K for sprites. 
<br />
<br />So my vote and suggestion would be to clone the FME-7 (iNES mapper 69) and just have your board support battery backing of the PRG-RAM as well as support for CHR-RAM. The board I've read should even in theory support PRG-RAM banking if you had more than 8K of it. 
<br />
<br />The only drawbacks to FME-7 in my opinion are it uses a Register Select system like MMC3 rather than just an address on the bus like MMC5 and some japanese mappers. And also the CPU IRQ counter is not quite as straight forward as a PPU based scanline counter. But those drawbacks are perfectly acceptable given all the capability gained by it.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Fri Apr 15, 2011 5:49 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I'd be OK with an FME-7 clone. CPU cycle counters have the disadvantage that you need to translate scanlines into CPU cycles if the Y coordinate of the raster effects are dynamic, and that values are different for PAL and NTSC, but both issues can be solved with look-up tables (about 960 bytes).
<br />
<br />The advantage is that you can use them for purposes other than counting scanlines, since they still work when the PPU is off, and there's nothing the PPU can do that will screw up the counting.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>qbradq</b> [ Fri Apr 15, 2011 7:48 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />FME-7 does not support more than 8k WRAM, which is a shame.
<br />
<br />@Memblers: How do you intend to overcome the FPGA configuration time problem? How does the PowerPak manage this? With a $6.00 FPGA we could implement all of MMC5 (minus sound) and have room to spare.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>MottZilla</b> [ Fri Apr 15, 2011 8:09 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />FME7 could support more than 8K of PRG-RAM though. The registers are already there for such. No board produced allowed for more than 8K but that's just a board difference and not a mapper difference. 
<br />
<br />Regardless of which is picked I'm sure people would like to see any sort of more capable mapper made available for new projects. MMC1 has its issues and limits that certainly would impact some projects.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Sat Apr 16, 2011 3:05 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Man I feel like it's arround the 26th time since I'm in Nesdev I see this thread.
<br />
<br />Yeah, the MMC5 is awesome, FME-7 is good too blah blah.... But as long as nobody here release great games with simple mapper, I'm pretty  confident nobody will release great games with complex mappers. Yeah they can allow bigger games, better graphics, etc... But if people here can't even release simpler games, this is NOT going to happen.
<br />
<br />So everyone move your asses and release great games using simple/ discrete mappers (0,2,3,7,66) and when I'll see quite a few of them I'm confident it'll be time to do a clone of whatever existing powerful mapper (MMC5, FME-7, N106 or wathever) or even a new one that allows 1GB of ROM, CD quality sound and 3D-graphics. (being hironical here)
<br />
<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">The advantage is that you can use them for purposes other than counting scanlines</div>
<br />Wow did you know I didn't even think about that ? Stable $4011 streaming comes to mind immediately.
<br />
<br />PS : If anyone answers me they want a "complex" mapper saves is your problem, most emulators allows 8k SRAM and saves with every mapper (including 0,2,3,7,66) and it IS possible to do that in hardware by adding a few chips (well a SRAM, 3 AND gates and one battery backup controller), so do not refrain from doing it. Nintendo didn't do that but they had the MMC1/3 for that. That or use ReproPak's MMC1.
<br />
<br />And I'll remember that saves for not only NES, but also SNES and playstation games are 8kb. Proof that 8kb should be enough for almost anyone  <img src="./images/smilies/icon_razz.gif" alt=":P" title="Razz" /> (subtle reference here)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>qbradq</b> [ Sat Apr 16, 2011 7:22 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Bregalad,
<br />
<br />Thank you for your input! Really the ultimate goal of this project is to provide an easy-to-use development board with a clear path to production carts, but that is backward-compatible with existing emulators. The topic of discussion at the moment is the mapper, as this is the first step in describing the behavior of the board.
<br />
<br />The first board design I worked on was UNROM + SRAM, however I noted that this would be more limited than existing MMC1 (no mirror control). I also noted that in my own game design I need some sort of reliable scanline counter IRQ as it makes implementing status bars and four-way scrolling a whole lot easier.
<br />
<br />Next I began working on an MMC3 design as it fits the requirements, however it was noted that MMC3's scanline counter limits sprite pattern allocation. That is when we started looking at MMC5 as its scanline counter is much more stable and does not limit sprite allocation. Plus MMC5 has all kinds of features that MMC3 does not.
<br />
<br />However it is now becoming apparent that an MMC5 board also has its limitations with respect to the requirements. MMC5 is poorly supported in many emulators, and the exact behavior of the mapper differs from emulator to emulator. The advanced pattern mapping is not only difficult to implement but it is also difficult to work with in software. No provisions for CHR-RAM are made (and this is a staple of homebrew development), and my survey of existing emulators shows that many do not allow CHR-RAM of any sort on MMC5, and those that do implement it inconsistently due to the separation between sprite and background patterns.
<br />
<br />So, after investigating MMC5 as a possible mapper for the development cart I can say that it does not meet the requirements. FME-7 is a good suggestion, however I feel that the CPU Cycle-based IRQ counter is problematic (though more flexible).
<br />
<br />I have also researched many esoteric mappers, none of which seem to offer enough advantage over the MMC3 to warrant trying to support an obscure mapper.
<br />
<br />So with all of this taken into account, I am going to redraft the functional requirements and behavioral description to be a 100% replica of MMC3. An emulator survey will be required to determine if we can increase PRG and CHR ROM capacity to their maximum values given the register space available without breaking emulator compatibility.
<br />
<br />None of the MMC3 variants appear to give significant advantage.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Sat Apr 16, 2011 8:08 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">qbradq wrote:</div><div class="quotecontent">So with all of this taken into account, I am going to redraft the functional requirements and behavioral description to be a 100% replica of MMC3.</div><br />...and I completely lost interest in this again.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I feel that the CPU Cycle-based IRQ counter is problematic (though more flexible).</div>
<br />Come on man, If you're gonna make an exact replica of a mapper, do the FME-7, you said it yourself that its scanline counter is more flexible. For status bars, where the vertical position of the split doesn't vary, all you have to do is dynamically decide between 2 constants so that it works well in both PAL and NTSC. You already have to detect the console type if you want to fix the frequency of music notes, it's not like there's any real complication here. As for dynamic splits, a not-so-large look-up table can be used, no big deal. FME-7 also has better CHR bankswitching, without any of that 1KB vs 2KB banks bullshit the MMC3 has. The ROM/RAM mapping in FME-7 is also versatile as fuck.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sat Apr 16, 2011 8:20 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">it IS possible to do that in hardware by adding a few chips (well a SRAM, 3 AND gates and one battery backup controller)</div><br />Yes, I'm aware of the 74HC139 and 74HC20 based decoders, but how much does this "battery backup controller" cost?<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">And I'll remember that saves for not only NES, but also SNES and playstation games are 8kb. Proof that 8kb should be enough for almost anyone  <img src="./images/smilies/icon_razz.gif" alt=":P" title="Razz" /> (subtle reference here)</div>
<br />Mario Paint's save is 32 KiB. As I understand it, so is SimCity's, and SimCity was a launch title. There are games for the Super Famicom with save bigger than even that; to see a list, register at assemblergames.com and download the <a href="http://www.assemblergames.com/forums/showpost.php?p=437940&amp;postcount=57" class="postlink">list</a>.
<br />
<br />I too vote for cloning FME-7.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dwedit</b> [ Sat Apr 16, 2011 8:37 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Possible idea: Separate CHR banks for even/odd rows in the background.  Effectively doubles the number of possible tiles from 256 to 512.  Then combine that with separate CHR banks for sprites, and you have far less limits than a stock NES.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Sat Apr 16, 2011 8:57 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Wow I have to say those are very good idea DWedit. Most games uses mostly 16x16 metatiles anyways, and a 8x16 font could easily make a good use of this idea.
<br />
<br />I think there we need a split between the "compatible with emulators" and "new awesome ideas for a new mapper". What about making two carts, one of each (or one which can go into two modes) ? That way everyone will be happy.
<br />Personally I think the unability to test on an emulator would be handicapping, not only for developing, but would be much more a major problem if you distribute the ROM freely and that people can't play it ! (for developers who wants their work to be freely distributed in a form of an iNES ROM).
<br />Of course you could distribute a modified emulator instead so that people could play it as a PC game but well this is not really cool.
<br />
<br />It's true it's too bad emulators doesn't emulate the MMC5 "accurately", but I think there is a chance you could make a game that takes advantage of many of it's awesome graphics possibilities, yet still works under 90% of emulators which supports the MMC5. (I say that because Nesticle supports the MMC5, and only CV3 isn't too far from working on it....).
<br />
<br />@dbraq : I'm not sure what your game is going to be, but there is probably a way to make it without the MMC5 or maybe even the MMC3. If the only problem is the status bar at the bottom, I think there is quite a few games who managed to have one without any timer in their mapper (Double Dragon, Gradius, Life Force, Guardian Legend, Wizard &amp; Warriors series comes to mind).
<br />
<br />Of course it's easier to have it at top because you can simply wait for the hit after dealing with VBLank updates without wasting too much CPU time. However all the games I mentioned managed to get it at the bottom so it certainly is possible.
<br />Check <a href="http://nesdev.com/bbs/viewtopic.php?t=6521&amp;start=10" class="postlink">tepple's stable DPCM interrupt demo</a> for a reliable proof of it.
<br />
<br />What I mean is that it's probably not worth using a very complex mapper just because you're not willing to sacrifice anything. This you are a game developer back then and that you should get your game working with the smaller costs possible (so with a little ROM, and a simple mapper whenever possible).
<br />A complex mapper will be cool if you really uses all it's feature, for example if you write a game using MMC5 mapper then you'd have to use it's multiplier all the time, use the EX-Graphics mode at least during half of the game, and have a lot of scanline effects, and graphics that require more than 256 tiles. Then yes, it's worth using the MMC5.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>2</strong> of <strong>14</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>