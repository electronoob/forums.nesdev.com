<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=2&amp;t=493" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2005-08-20T12:28:45-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=2&amp;t=493</id>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2005-08-20T12:28:45-07:00</updated>
<published>2005-08-20T12:28:45-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=493&amp;p=3954#p3954</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=493&amp;p=3954#p3954"/>
<title type="html"><![CDATA[Best way to handle sprite/object engine routines ?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=493&amp;p=3954#p3954"><![CDATA[
<div class="quotetitle">tokumaru wrote:</div><div class="quotecontent"><br />Yeah... It's really boring to get stuff going... but once we're in the middle of it, it flows a little better. In my opinion the hard part is to start things, since there is so much you have to do before you actually see any results! Once the results start showing up, it all gets easier...<br /></div><br />Yeah, I begin to see results, but I'm unable to programm those damn enemy animation !<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Sat Aug 20, 2005 12:28 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2005-08-20T10:24:06-07:00</updated>
<published>2005-08-20T10:24:06-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=493&amp;p=3952#p3952</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=493&amp;p=3952#p3952"/>
<title type="html"><![CDATA[Best way to handle sprite/object engine routines ?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=493&amp;p=3952#p3952"><![CDATA[
<div class="quotetitle">Bregalad wrote:</div><div class="quotecontent"><br />I agree with you ! I hope that NESHLA or something is really able to fast up NES developpement, because it's sometimes so boring to have stuff to code for your game.<br /></div><br />Yeah... It's really boring to get stuff going... but once we're in the middle of it, it flows a little better. In my opinion the hard part is to start things, since there is so much you have to do before you actually see any results! Once the results start showing up, it all gets easier...<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Sat Aug 20, 2005 10:24 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2005-08-20T01:36:45-07:00</updated>
<published>2005-08-20T01:36:45-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=493&amp;p=3947#p3947</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=493&amp;p=3947#p3947"/>
<title type="html"><![CDATA[Best way to handle sprite/object engine routines ?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=493&amp;p=3947#p3947"><![CDATA[
<div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />I want to do it someday too, a fighting game. I think it is one of the easiest kinds of game to program. The hard part is drawing all those frames of animation!<br /></div><br />Well, it's a fairly good question. I'm still asking what is the easiest genre to programm. I think making a really bad game is easyer than making a good one regardless of the genre. But keep in mind that fighting games needs fast player contols and all the action, that should not be that easy to to. I've heard once that the easiest game to programm were shooters, but once again, I'm not sure. I think programming a plain shooter with bad control and stuff is slighty easy, but having one with great control/action, and having decent bosses that are netither impossible or cake should also be pretty hard.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />And I also thought about having one player as sprite and the other one as BG. The sad thing is that the black piece of BG in the middle of the screen where the BG player moves may make it harder to set a mood in the stage. Maybe we could have really dark stages, actual BG in the top and in the bottom, as you said, and fake some BG elements with sprites, but small ones, that won't interfere with the player that is a sprite. We have to keep in mind that sprites will be used for other things, like hitting effects and possibly blood.<br /></div><br />Well, I forgot about that. It would be a NES game, and not a PS2 game, so the hitting effects, blood and stuff aren't needed there, just a great gameplay. Another way to hide the BG stuff may be to swap the "background" palette to another color than black, but it wouldn't look as good than a game with dark grapics and no BG where the action is (like FF3, where the monsters are actually BG).<br />The main problem is that there is no hardware flipping for the BG on the NES, so you'll have do draw each sprite in both direction. This could be used to have more details than just flipping the sprites, so the character won't be just symetric, but I think all this BG method definitely would be regard only if all characters really are very deatiled. Else, it's a nonsense, and making smaller characters that will occasionally flicker a bit is just simpler/better.<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Man, I just love to think of ways to do stuff in the NES! I'll probably never finish much, but I love thinking and sketching! =)<br /></div><br />I agree with you ! I hope that NESHLA or something is really able to fast up NES developpement, because it's sometimes so boring to have stuff to code for your game.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Sat Aug 20, 2005 1:36 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2005-08-19T16:09:16-07:00</updated>
<published>2005-08-19T16:09:16-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=493&amp;p=3928#p3928</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=493&amp;p=3928#p3928"/>
<title type="html"><![CDATA[Best way to handle sprite/object engine routines ?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=493&amp;p=3928#p3928"><![CDATA[
<div class="quotetitle">Bregalad wrote:</div><div class="quotecontent"><br />Well, didn't think about that at all yet. This was just a vague project I'd like to do someday. I think the best way is to have not too large sprites (yeah, I don't know why so many people like large sprites, I myself kinda like the small ones).<br /></div><br />I like'em a bit large, not very much. But given the limitations, I don't mind smaller ones at all.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />In a pure fighting game, I think it would be okay if each character is 4 tiles wide (this is pretty much large, but not very large) so the total would be 8 tiles. Or, a fighting game purely focused on the characters that would be very detailed may even write player 1 with the background and player 2 with the sprites, with no background where the fight actually is, but only above and below (dark graphics could "hide" this). This would require extremely fast PPU writes and a lot of IRQ/sprite #0 timing and stuff, trough.<br /></div><br />I want to do it someday too, a fighting game. I think it is one of the easiest kinds of game to program. The hard part is drawing all those frames of animation! And I also thought about having one player as sprite and the other one as BG. The sad thing is that the black piece of BG in the middle of the screen where the BG player moves may make it harder to set a mood in the stage. Maybe we could have really dark stages, actual BG in the top and in the bottom, as you said, and fake some BG elements with sprites, but small ones, that won't interfere with the player that is a sprite. We have to keep in mind that sprites will be used for other things, like hitting effects and possibly blood.<br /><br />Man, I just love to think of ways to do stuff in the NES! I'll probably never finish much, but I love thinking and sketching! =)[/quote]<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Fri Aug 19, 2005 4:09 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2005-08-19T16:04:31-07:00</updated>
<published>2005-08-19T16:04:31-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=493&amp;p=3927#p3927</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=493&amp;p=3927#p3927"/>
<title type="html"><![CDATA[Best way to handle sprite/object engine routines ?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=493&amp;p=3927#p3927"><![CDATA[
<div class="quotetitle">Bregalad wrote:</div><div class="quotecontent"><br />In a pure fighting game, I think it would be okay if each character is 4 tiles wide (this is pretty much large, but not very large) so the total would be 8 tiles.<br /></div><br />True, you can do characters roughly twice as large as those from Super Mario games, but what happens when one character gets knocked to the floor and becomes wider than 8 tiles? And what about the heavy punch and heavy kick, where the limb in question extends rawther far from the character's body? You'd just have to put up with the flicker in those cases.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Fri Aug 19, 2005 4:04 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2005-08-19T14:05:42-07:00</updated>
<published>2005-08-19T14:05:42-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=493&amp;p=3925#p3925</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=493&amp;p=3925#p3925"/>
<title type="html"><![CDATA[Best way to handle sprite/object engine routines ?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=493&amp;p=3925#p3925"><![CDATA[
<div class="quotetitle">tepples wrote:</div><div class="quotecontent"><br />How will you get large enough characters given the 64 sprite pixels per scanline limitation? Or will you resort to horrible flicker like Konami's <em>TMNT: Tournament Fighters</em> and HKO <em>Kart Fighter</em>?<br /></div><br />Well, didn't think about that at all yet. This was just a vague project I'd like to do someday. I think the best way is to have not too large sprites (yeah, I don't know why so many people like large sprites, I myself kinda like the small ones).<br />In a pure fighting game, I think it would be okay if each character is 4 tiles wide (this is pretty much large, but not very large) so the total would be 8 tiles. Or, a fighting game purely focused on the characters that would be very detailed may even write player 1 with the background and player 2 with the sprites, with no background where the fight actually is, but only above and below (dark graphics could "hide" this). This would require extremely fast PPU writes and a lot of IRQ/sprite #0 timing and stuff, trough.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Fri Aug 19, 2005 2:05 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2005-08-19T13:53:19-07:00</updated>
<published>2005-08-19T13:53:19-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=493&amp;p=3924#p3924</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=493&amp;p=3924#p3924"/>
<title type="html"><![CDATA[Best way to handle sprite/object engine routines ?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=493&amp;p=3924#p3924"><![CDATA[
<div class="quotetitle">Bregalad wrote:</div><div class="quotecontent"><br />I'd also like programming one beat 'em up/fighting game for the NES someday<br /></div><br />How will you get large enough characters given the 64 sprite pixels per scanline limitation? Or will you resort to horrible flicker like Konami's <em>TMNT: Tournament Fighters</em> and HKO <em>Kart Fighter</em>?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Fri Aug 19, 2005 1:53 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2005-08-19T13:26:03-07:00</updated>
<published>2005-08-19T13:26:03-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=493&amp;p=3922#p3922</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=493&amp;p=3922#p3922"/>
<title type="html"><![CDATA[Best way to handle sprite/object engine routines ?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=493&amp;p=3922#p3922"><![CDATA[
Well, that's the same for mine. I'm now programming a action-adventure game, I've also a RPG in mind, and I'd also like programming one beat 'em up/fighting game for the NES someday, and also platformers maybe, and why not strategy games, well, but programming can become very cool sometimes and very crap, too, when you're unable to make what you want to do.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Fri Aug 19, 2005 1:26 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Anonymous]]></name></author>
<updated>2005-08-19T11:55:11-07:00</updated>
<published>2005-08-19T11:55:11-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=493&amp;p=3918#p3918</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=493&amp;p=3918#p3918"/>
<title type="html"><![CDATA[Best way to handle sprite/object engine routines ?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=493&amp;p=3918#p3918"><![CDATA[
<div class="quotetitle">Bregalad wrote:</div><div class="quotecontent"><br />Okay, if you say it so, I think it's better. It's a cool think to take advantage of experiance from other people, I usually have to discover all myself.<br /></div><br />Hey, I'm not all that experienced either! =) At least in the NES area... Have you ever seen anything I made for the NES? Of course not, I never finished anything! hehe! I have experience in game programming for DOS and some for windows. I really do want to master the NES!<br />Maybe I'm aiming to high. Not that what I want to do is impossible, but it will take a lot of time, wich I don't have! =)<p>Statistics: Posted by Guest — Fri Aug 19, 2005 11:55 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2005-08-19T11:43:28-07:00</updated>
<published>2005-08-19T11:43:28-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=493&amp;p=3914#p3914</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=493&amp;p=3914#p3914"/>
<title type="html"><![CDATA[Best way to handle sprite/object engine routines ?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=493&amp;p=3914#p3914"><![CDATA[
<div class="quotetitle">-tokumaru- wrote:</div><div class="quotecontent"><br />Well, not really. You could use it if you wanted to do a lightning effect on the background, for example. You would make your BG palette point to another one with a brighter sky a few times to achieve this effect. Many other effects could be done like this. Like in some megaman game, I can't remember wich one, it changes one of the background palettes to make it seem like the objects in the background are moving.<br /></div><br /><br />It should be MetalMan's stage, and Doctor Willy #2 (in MegaMan 2). It's pretty cool, but I'm not going to do this at all. I'll just have one fixed palette per level. For lightening effects, why is $2001.0 for ? It may not be as good, but way simpler.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />I also plan to have triggers during the levels, so I can include palette changing commands in the middle of a lavel (as well as CHR switching commands), so that different parts of it can use diferrent colors and graphics, resulting in more beautiful and colorful levels.<br /></div><br /><br />That's needed only for "advanced" games. I'm going to do a such simple one, to train myself at programming games, but I still want it to be good. I'm just using a CNROM or maybe UNROM mapper, and actually I'm surprised about how much the brightness tones counts a lot more than color in NES graphics. I mean, have a picture of a tree with a red-scale instead of a green-scale, it still looks a tree. If you change the green-scale per random colours, it looks just gabrage. That's it. I could even design the whole game with only two palettes per stages, letting 2 for the status bar. I'm still gonna to use 3 for the BG, I think.<br /><br /><br />Just be sure to not include a combination of objects wich use more than two palettes in the same screen when you're designing your levels... I suggest you make some kind of header for every screen, describing the palettes it uses, so you can set them when drawing the BG.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />I thought about mixing them too, it was my first idea. But now I believe the best way is to have separate drawing and AI routines. After I run the AI for all objects, I'll have one general drawing routine going through all the active (loaded) objects, checking if they are visible and rendering the appropriate frame of every one of them to the temp sprite page.<br /></div><br />Okay, if you say it so, I think it's better. It's a cool think to take advantage of experiance from other people, I usually have to discover all myself.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Fri Aug 19, 2005 11:43 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Anonymous]]></name></author>
<updated>2005-08-18T11:52:58-07:00</updated>
<published>2005-08-18T11:52:58-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=493&amp;p=3892#p3892</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=493&amp;p=3892#p3892"/>
<title type="html"><![CDATA[Best way to handle sprite/object engine routines ?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=493&amp;p=3892#p3892"><![CDATA[
<div class="quotetitle">Bregalad wrote:</div><div class="quotecontent"><br />Yeah, that would be useless for BG, but pretty good for sprites. Myself, I'll probabily have just one hardwired BG palette per stage.<br /></div><br />Well, not really. You could use it if you wanted to do a lightning effect on the background, for example. You would make your BG palette point to another one with a brighter sky a few times to achieve this effect. Many other effects could be done like this. Like in some megaman game, I can't remember wich one, it changes one of the background palettes to make it seem like the objects in the background are moving.<br /><br />I also plan to have triggers during the levels, so I can include palette changing commands in the middle of a lavel (as well as CHR switching commands), so that different parts of it can use diferrent colors and graphics, resulting in more beautiful and colorful levels.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Yeah, nothing beats Megaman. The only differences is that my player doesn't use the explosion palette at all, but some of his weapons may do this. Swapping palettes while changing screens would definitely be godd, but I don't know much how to handle that with the sprite drawing routine.<br /></div><br />Just be sure to not include a combination of objects wich use more than two palettes in the same screen when you're designing your levels... I suggest you make some kind of header for every screen, describing the palettes it uses, so you can set them when drawing the BG.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Well, another way to do this would be to merge the AI and the drawing part together. So each monster wouldn't be draw from a fixed data system, but a routine for each separate monster would be set (exept for alternate swapped monsters, that would have common routine from their neighboors). Well, I'm still a bit confused overall.<br /></div><br />I thought about mixing them too, it was my first idea. But now I believe the best way is to have separate drawing and AI routines. After I run the AI for all objects, I'll have one general drawing routine going through all the active (loaded) objects, checking if they are visible and rendering the appropriate frame of every one of them to the temp sprite page.<p>Statistics: Posted by Guest — Thu Aug 18, 2005 11:52 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2005-08-18T09:49:54-07:00</updated>
<published>2005-08-18T09:49:54-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=493&amp;p=3890#p3890</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=493&amp;p=3890#p3890"/>
<title type="html"><![CDATA[Best way to handle sprite/object engine routines ?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=493&amp;p=3890#p3890"><![CDATA[
<div class="quotetitle">tokumaru wrote:</div><div class="quotecontent"><br />Not quite what I said... I said (man I'm really bad explaining stuff, specially in english!) you should have all the palettes you're going to use define in one big list (four color entries for each palette), so you have them all ordered. And also have in RAM 8 pointers (4 for sprites and 4 for the BG) that point to the palettes currently being used. That's for when my player blinks brighter when he is hit, for example. I have its palette defined (as entry number 2, maybe) and loaded (mainly composed of reds, for example), and them my player gets hit, and it's AI routine changes the respective pointer to, say, 12 (palette composed of brighter values). Then copy the new palette to vram during vblank. And the player's AI keeps changing the palette for as long as it has to.<br /></div><br />Yeah, that would be useless for BG, but pretty good for sprites. Myself, I'll probabily have just one hardwired BG palette per stage.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />I'm also using a similar system... my player uses 2 palettes, and 1 of those is also used for effects. The other 2 ones are used for enemies. And then I design my enemies so that they only use those 2 palettes in that level or section. Since you are working with static screens, you could maybe define what palettes each screen uses, so that you can have only two colors of enemies in 1 screen, but change them from screen to screen if you want.<br /></div><br />Yeah, nothing beats Megaman. The only differences is that my player doesn't use the explosion palette at all, but some of his weapons may do this. Swapping palettes while changing screens would definitely be godd, but I don't know much how to handle that with the sprite drawing routine.<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />What I suggested was this mixed with what Memblers said. This is the AI part, but surely all objects will have an attribute stating the frame of animation they are currently supposed to be in. Based on that, you do what memblers said. I know it can take a lot of ROM space, but can't think of a more clean/professional way of doing this...<br /></div><br />Well, another way to do this would be to merge the AI and the drawing part together. So each monster wouldn't be draw from a fixed data system, but a routine for each separate monster would be set (exept for alternate swapped monsters, that would have common routine from their neighboors). Well, I'm still a bit confused overall.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Thu Aug 18, 2005 9:49 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2005-08-18T09:08:50-07:00</updated>
<published>2005-08-18T09:08:50-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=493&amp;p=3888#p3888</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=493&amp;p=3888#p3888"/>
<title type="html"><![CDATA[Best way to handle sprite/object engine routines ?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=493&amp;p=3888#p3888"><![CDATA[
<div class="quotetitle">Bregalad wrote:</div><div class="quotecontent"><br />Well, well. I didn't get your palette stuff right. You're gonna to have a "palette number" for each ennemy/explosion/item, that will point to actual colors, then they will be written to the PPU "dynamicly", so when another monster with a different pallets comes, the palette will automatically swap right ? And if more than 4 palettes are loaded at the same time, what will happen ? Just Breed does this, and it halso sometimes have the more-than-4-palettes bug sometimes.<br /></div><br /><br />Not quite what I said... I said (man I'm really bad explaining stuff, specially in english!) you should have all the palettes you're going to use define in one big list (four color entries for each palette), so you have them all ordered. And also have in RAM 8 pointers (4 for sprites and 4 for the BG) that point to the palettes currently being used. That's for when my player blinks brighter when he is hit, for example. I have its palette defined (as entry number 2, maybe) and loaded (mainly composed of reds, for example), and them my player gets hit, and it's AI routine changes the respective pointer to, say, 12 (palette composed of brighter values). Then copy the new palette to vram during vblank. And the player's AI keeps changing the palette for as long as it has to.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />I don't know if I'll do this at all. I'll have palette 0 for explosions/fire stuff (a red-organge-white scale), palette 1 for player and palette 2/3 for monsters. Pretty much copied from Megaman, but that's a fine system. I may be able to do this special "system" only for palette 2 and 3, but I'm not agains monster that will also use the explosion or player palette. I'll also probabily make the player swaping its colors when it gets hurts, or is invincible, or something. Then 2 solutions comes in mind. Simply uses another palette for the player sprites, or always have an "hard-wired" palette 1 for player, but change the actual colors in it. I don't know the best one and can't determine it until I've determined how monsters would be handled. I think the palette pointer is good stuff, it doesn't make programming easyer, but is better for designing levels and stuff.<br /></div><br /><br />I'm also using a similar system... my player uses 2 palettes, and 1 of those is also used for effects. The other 2 ones are used for enemies. And then I design my enemies so that they only use those 2 palettes in that level or section. Since you are working with static screens, you could maybe define what palettes each screen uses, so that you can have only two colors of enemies in 1 screen, but change them from screen to screen if you want.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Well, that's sure for AI, but what about for drawing it on the screen ? Do you think it's better to mix such AI and drawing routines or not ? Membler's thing waste pretty much ROM space, but this will do the same, after all.<br /></div><br /><br />What I suggested was this mixed with what Memblers said. This is the AI part, but surely all objects will have an attribute stating the frame of animation they are currently supposed to be in. Based on that, you do what memblers said. I know it can take a lot of ROM space, but can't think of a more clean/professional way of doing this...<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Thu Aug 18, 2005 9:08 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2005-08-18T08:46:26-07:00</updated>
<published>2005-08-18T08:46:26-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=493&amp;p=3885#p3885</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=493&amp;p=3885#p3885"/>
<title type="html"><![CDATA[Best way to handle sprite/object engine routines ?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=493&amp;p=3885#p3885"><![CDATA[
Well, well. I didn't get your palette stuff right. You're gonna to have a "palette number" for each ennemy/explosion/item, that will point to actual colors, then they will be written to the PPU "dynamicly", so when another monster with a different pallets comes, the palette will automatically swap right ? And if more than 4 palettes are loaded at the same time, what will happen ? Just Breed does this, and it halso sometimes have the more-than-4-palettes bug sometimes.<br />I don't know if I'll do this at all. I'll have palette 0 for explosions/fire stuff (a red-organge-white scale), palette 1 for player and palette 2/3 for monsters. Pretty much copied from Megaman, but that's a fine system. I may be able to do this special "system" only for palette 2 and 3, but I'm not agains monster that will also use the explosion or player palette. I'll also probabily make the player swaping its colors when it gets hurts, or is invincible, or something. Then 2 solutions comes in mind. Simply uses another palette for the player sprites, or always have an "hard-wired" palette 1 for player, but change the actual colors in it. I don't know the best one and can't determine it until I've determined how monsters would be handled. I think the palette pointer is good stuff, it doesn't make programming easyer, but is better for designing levels and stuff.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />As for explosion and items, I think you should have a code for EVERY object in your game. Enemies, items, potions, explosions, splashes, etc. Each of them has it's own code. The enemy code does the following: "if the player hits me, I'll clear myself from memory and place an explosion object in my place", and then the explosion object code will go like: "I'll show my first frame" and next "I'll show my second frame" until it shows the last one when it goes like "ok, this was my last frame. I'll just remove myself from memory now". And it goes something like this. That's how I'm doing, at least<br /></div>. <br />Well, that's sure for AI, but what about for drawing it on the screen ? Do you think it's better to mix such AI and drawing routines or not ? Membler's thing waste pretty much ROM space, but this will do the same, after all.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Thu Aug 18, 2005 8:46 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2005-08-17T21:47:05-07:00</updated>
<published>2005-08-17T21:47:05-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=493&amp;p=3873#p3873</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=493&amp;p=3873#p3873"/>
<title type="html"><![CDATA[Best way to handle sprite/object engine routines ?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=493&amp;p=3873#p3873"><![CDATA[
<div class="quotetitle">blargg wrote:</div><div class="quotecontent"><br />Regarding ways to avoid regenerating enemies, you could assign a single bit in memory to each one and set it when the enemy has been defeated. This way you only keep the full enemy data when it's within a screen or so of the player, rather than for all enemies in the area. As an example, if you had at most 256 enemies per area these bits would take only 32 bytes of RAM and each enemy object would have an 8-bit index into these bits.<br /></div><br /><br />That's exactly what I've been saying. Only I'd like to reserve a few more bits to each object, so they could store a bit more info than if they are dead or alive. I proposed 4 bits for 512 objects, wich results in 256 bytes, not much. a value of 0 means they are dead and are not supposed to be loaded.<br />In my case, object number 0 is associated with the first 4 bits in the "state page". Object 1 uses the next 4 bits for it's state, and so on. Each object in the level is associated to 4 bits in RAM.<br /><br />In my initial design I assigned 2 bits for each object, but I ended up deciding on 4, as I may need to define more possible states.<br /><br />1 bit is fine for simple enemies, but I'm handling all kinds of objects like this, not just enemies.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Wed Aug 17, 2005 9:47 pm</p><hr />
]]></content>
</entry>
</feed>