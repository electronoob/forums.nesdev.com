<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Cheapest bidirectional interface?</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Cheapest bidirectional interface?</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=9&amp;t=10685">http://forums.nesdev.com/viewtopic.php?f=9&amp;t=10685</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>socram8888</b> [ Wed Nov 13, 2013 3:21 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Cheapest bidirectional interface?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />As a side project to dumping the weird cart, I have been thinking in creating a simple bidirectional PC-NES interface that would let me peek and poke values from CPU memory space to, for example, see how does the mapper works.<br /><br />I know that there's already something that would let me do this, a CopyNES, but that requires modifying a NES and its case, and it doesn't work as-is of a Famicom or a Famiclone.<br /><br />Therefore a simple bitbanged protocol using the lines available on a NES controller port would be better. One would plug in a cartridge containing a bootloader that would load into RAM, and then you can swap the cartridge with the one you want to dump.<br /><br />I would like also to keep the hardware to a minium, using as few parts as posible. My initial idea was, using a single 7474 and a 7400, build a two bit serial FIFO, whose clock would be NES controller CLK anded with the inversion of the last bit from the FIFO, and whose input data would be OUT0.<br /><br />The NES will wait until the PC sets the second (last) latch from the 7474 to one, and keeps polling the read line until this goes low. The bits in the FIFO would not shift as the last bit is one.<br /><br />When the PC wants to starts a transfer, it would set first latch to the bit it wants to send, and then it clears the second (last) latch. The NES while polling this register, will detect that it now reads as zero, and the next read would be pushed on the bit buffer.<br /><br />To reply, the NES will wait until the FIFO is clear, and will then send a 1, and then the bit it wants to transfer. Therefore, if the FIFO is &quot;10&quot;, the bit is a 0, and if it is &quot;11&quot;, then the bit is a 1. As upper bit is 1, the NES can read the FIFO last bit without rotating the bits on the buffer. The PC will read this, and then it will clear the buffer, and wait for the next bit.<br /><br />I have no CAD software right now, so I can't provide a schematic.<br /><br />Another approach I though about was bitbanging SPI through the controller port, because there are enough signals to communicate with a SPI device, which could be a SRAM the PC could fetch at any time. However, SPI buses aren't multimaster, so we would have to add &quot;busy&quot; control signal, but the NES only has a single input.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Wed Nov 13, 2013 4:24 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Cheapest bidirectional interface?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Here's what I've used with great success: Disable CIC. Connect PC to NES via controller port. Put bootloader on EPROM/whatever cart. Boot with cart. Run &quot;hotswap&quot; program (does continual sprite DMA for several seconds to reduce chance of crash) and remove cart. Insert one to be probed. Send test program via PC. Have each program end by re-running bootloader so you can send a new program.<br /><br />You can just get a cheap PL2303-based USB-5V RS-232 converter off eBay for a few dollars and bit-bang it from the NES. 57600 bps is very reliable, and 115200 works decently. If you want a synchronous interface, a $16 Teensy would do well, with built-in USB, SPI, USART, etc. hardware and good example code.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>socram8888</b> [ Wed Nov 13, 2013 11:45 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Cheapest bidirectional interface?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Bitbanging serial is OK if you know beforehand the CPU speed, but I have PAL (~26.6/16 MHz), Dendy (~26.6/15 MHz) and NTSC (~21/12 MHz) consoles, that's why I were looking for a synchronous interface, though I might end up using this if I have no better option.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Thu Nov 14, 2013 1:16 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Cheapest bidirectional interface?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I've written some serial code for the NES that measures the serial speed then adjusts the bit timing to this. It could handle a wide range of rates without needing to know the NES clock frequency or comm rate. One version handles 9600 to 28800 bps, another version handles about 50000-62000 bps (nominal 57600).<br /><br />Synchronous OTOH is nice because the NES can accept things however slowly it wants.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Thu Nov 14, 2013 1:31 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Cheapest bidirectional interface?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />It's really quite easy to detect which machine you're running on: <!-- m --><a class="postlink" href="http://wiki.nesdev.com/w/index.php/Detect_TV_system">http://wiki.nesdev.com/w/index.php/Detect_TV_system</a><!-- m --><br /><br />The math works out that the Dendy and NTSC use the same asynchronous timing; they're only 1% off from each other. 8N1 asynchronous serial is robust up with to about 3-5% baud rate error.<br /><br />If you really want a USB SPI slave, it'll be easiest to use a USB-enabled microcontroller.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Thu Nov 14, 2013 6:47 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Cheapest bidirectional interface?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">lidnariq wrote:</div><div class="quotecontent">The math works out that the Dendy and NTSC use the same asynchronous timing; they're only 1% off from each other. 8N1 asynchronous serial is robust up with to about 3-5% baud rate error.</div><br />Good point. In that case, the bootloader I've posted about a while back handles this clock selection.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">If you really want a USB SPI slave, it'll be easiest to use a USB-enabled microcontroller.</div><br />Yep. The hardware is so cheap and available these days, and it makes your design usable by almost anyone (including you at some later date when you don't have a PC with a parallel port anymore).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>HardWareMan</b> [ Thu Nov 14, 2013 7:38 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Cheapest bidirectional interface?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />In CopyFamiClone I used FT245B.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>