<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="https://forums.nesdev.com/feed.php?f=2&amp;t=16456" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="https://forums.nesdev.com/index.php" />
<updated>2017-09-06T09:29:40-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>https://forums.nesdev.com/feed.php?f=2&amp;t=16456</id>
<entry>
<author><name><![CDATA[thefox]]></name></author>
<updated>2017-09-06T09:29:40-07:00</updated>
<published>2017-09-06T09:29:40-07:00</published>
<id>https://forums.nesdev.com/viewtopic.php?t=16456&amp;p=204042#p204042</id>
<link href="https://forums.nesdev.com/viewtopic.php?t=16456&amp;p=204042#p204042"/>
<title type="html"><![CDATA[Re: NES: Technique for debugging CC65 code?]]></title>

<content type="html" xml:base="https://forums.nesdev.com/viewtopic.php?t=16456&amp;p=204042#p204042"><![CDATA[
NDX (<!-- m --><a class="postlink" href="https://kkfos.aspekt.fi/">https://kkfos.aspekt.fi/</a><!-- m -->) also supports source level debugging for C. It does kind of work, but I haven't tested it much. The main issue is that since there's a corresponding &quot;.s&quot; assembly source file for each compiled &quot;.c&quot; file, it will sometimes try to display the &quot;.s&quot; file even though it doesn't exist. I guess I should fix that some day...<br /><br />Watch window also works for statically allocated variables as long as you add a &quot;_&quot; before the variable names (variable &quot;foo&quot; becomes &quot;_foo&quot;). Stack variables don't work. If variable addresses is all that you care about, you can get the same information from a map file, though.<br /><br />(NOTE: You have to generate debug information for this to work, e.g., pass <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">-g -Wl --dbgfile,test.nes.dbg</tt> to cl65.)<p>Statistics: Posted by <a href="https://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=80">thefox</a> — Wed Sep 06, 2017 9:29 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[dustmop]]></name></author>
<updated>2017-09-06T09:03:37-07:00</updated>
<published>2017-09-06T09:03:37-07:00</published>
<id>https://forums.nesdev.com/viewtopic.php?t=16456&amp;p=204036#p204036</id>
<link href="https://forums.nesdev.com/viewtopic.php?t=16456&amp;p=204036#p204036"/>
<title type="html"><![CDATA[Re: NES: Technique for debugging CC65 code?]]></title>

<content type="html" xml:base="https://forums.nesdev.com/viewtopic.php?t=16456&amp;p=204036#p204036"><![CDATA[
I use this to get source-level debugging (original C source code visible in FCEUX's debugger):<br /><br /><!-- m --><a class="postlink" href="https://github.com/dustmop/annotatecc65">https://github.com/dustmop/annotatecc65</a><!-- m --><p>Statistics: Posted by <a href="https://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6219">dustmop</a> — Wed Sep 06, 2017 9:03 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[dougeff]]></name></author>
<updated>2017-09-06T04:38:32-07:00</updated>
<published>2017-09-06T04:38:32-07:00</published>
<id>https://forums.nesdev.com/viewtopic.php?t=16456&amp;p=204021#p204021</id>
<link href="https://forums.nesdev.com/viewtopic.php?t=16456&amp;p=204021#p204021"/>
<title type="html"><![CDATA[Re: NES: Technique for debugging CC65 code?]]></title>

<content type="html" xml:base="https://forums.nesdev.com/viewtopic.php?t=16456&amp;p=204021#p204021"><![CDATA[
Also, in FCEUX, there is a way to record button presses, so set record...get the bug to happen...pause, rewind a few frames, turn on the trace logger, and run a trace on the exact frame (or 2) where the bug happens.<br /><br />I don't usually do this.<br /><br />Usually I have a dummy function I call &quot;debug()&quot;. All debug does is increment a known address. Then I place a call to debug() right before the code I'm checking. I can set a breakpoint for the address, and step through the code, while looking at the .s output file from the .c code.<p>Statistics: Posted by <a href="https://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=7008">dougeff</a> — Wed Sep 06, 2017 4:38 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[calima]]></name></author>
<updated>2017-09-06T02:27:24-07:00</updated>
<published>2017-09-06T02:27:24-07:00</published>
<id>https://forums.nesdev.com/viewtopic.php?t=16456&amp;p=204010#p204010</id>
<link href="https://forums.nesdev.com/viewtopic.php?t=16456&amp;p=204010#p204010"/>
<title type="html"><![CDATA[Re: NES: Technique for debugging CC65 code?]]></title>

<content type="html" xml:base="https://forums.nesdev.com/viewtopic.php?t=16456&amp;p=204010#p204010"><![CDATA[
You get the map files as usual, &quot;-m mapfile&quot; and &quot;-vm&quot; for verbose maps to ld65/cl65. Note that only static/global vars can be tracked, stack vars change locations.<p>Statistics: Posted by <a href="https://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=7237">calima</a> — Wed Sep 06, 2017 2:27 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[rainwarrior]]></name></author>
<updated>2017-09-05T23:27:13-07:00</updated>
<published>2017-09-05T23:27:13-07:00</published>
<id>https://forums.nesdev.com/viewtopic.php?t=16456&amp;p=204001#p204001</id>
<link href="https://forums.nesdev.com/viewtopic.php?t=16456&amp;p=204001#p204001"/>
<title type="html"><![CDATA[Re: NES: Technique for debugging CC65 code?]]></title>

<content type="html" xml:base="https://forums.nesdev.com/viewtopic.php?t=16456&amp;p=204001#p204001"><![CDATA[
Compile and/or assemble with debug information (-g), and tell the <a href="https://cc65.github.io/doc/ld65.html" class="postlink">linker</a> to output a label file (-Ln) or a debugging file (--dbgfile), whichever format seems more convenient; dbgfile has more info, slightly trickier to parse.<br /><br />Convert those labels to an <a href="http://www.fceux.com/web/help/NLFilesFormat.html" class="postlink">FCEUX debug file</a> and you can see those symbols directly in its debugger.<br /><br />A while ago I wrote a simple python <em>-Ln to .NL</em> parser for an example: <a href="http://forums.nesdev.com/viewtopic.php?t=11151" class="postlink">thread</a><br /><br />If all you're looking for is the address things end up at, though, you could just keep the label/debug files open in a text editor and search for them by name as you need their addresses.<p>Statistics: Posted by <a href="https://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5165">rainwarrior</a> — Tue Sep 05, 2017 11:27 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tschak909]]></name></author>
<updated>2017-09-05T23:05:14-07:00</updated>
<published>2017-09-05T23:05:14-07:00</published>
<id>https://forums.nesdev.com/viewtopic.php?t=16456&amp;p=203998#p203998</id>
<link href="https://forums.nesdev.com/viewtopic.php?t=16456&amp;p=203998#p203998"/>
<title type="html"><![CDATA[NES: Technique for debugging CC65 code?]]></title>

<content type="html" xml:base="https://forums.nesdev.com/viewtopic.php?t=16456&amp;p=203998#p203998"><![CDATA[
Hey guys,<br /><br />Does anyone have a technique for debugging CC65 code, specifically mapping variables to RAM so that I can e.g. watch and trap in FCEUX's debugger? Usually with 6502 assembler, the memory map is simple enough, I know where my variables are, at the very least, I can derive them from an output listing. Not so much for CC65... Can someone point me in the general direction, as I have a _really_ weird edge case in my maze traversal code for wizard of wor that I need to catch.<br /><br />-Thom<p>Statistics: Posted by <a href="https://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=8569">tschak909</a> — Tue Sep 05, 2017 11:05 pm</p><hr />
]]></content>
</entry>
</feed>