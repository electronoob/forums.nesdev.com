<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=10&amp;t=16392" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2017-09-01T13:41:43-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=10&amp;t=16392</id>
<entry>
<author><name><![CDATA[nuker]]></name></author>
<updated>2017-09-01T13:41:43-07:00</updated>
<published>2017-09-01T13:41:43-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=16392&amp;p=203685#p203685</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=16392&amp;p=203685#p203685"/>
<title type="html"><![CDATA[Re: Making a basic PPU (Fully working CPU)]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=16392&amp;p=203685#p203685"><![CDATA[
<div class="quotetitle">tokumaru wrote:</div><div class="quotecontent"><br />I didn't catch anything that would result in the output you showed us, but I did notice a few problems:<br /><br />- The attribute table base address is wrong;<br />- The attribute data is not used at all;<br />- extractCurrentBitFromPatternTable doesn't use i;<br /><br />I rewrote a few formulas and completed some things that were missing (attributes, mostly), hopefully I didn't make any horrible mistakes:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">for (row &lt; 30) {<br />   for (col &lt; 32) {<br />      nameTable = read(0x2000 + (row &lt;&lt; 5) + col);<br />      attrTable = read(0x23c0 + ((row &gt;&gt; 2) &lt;&lt; 3) + (col &gt;&gt; 2));<br />      attribute = (attrTable &gt;&gt; (((row &amp; 0x02) &lt;&lt; 1) + (col &amp; 0x02))) &amp; 0x03;<br />      patternTableAddr = (nameTable &lt;&lt; 4) + ((ctrl &amp; 0x10) &lt;&lt; 8);<br />      <br />      for (i &lt; 8) {<br />         for (bit &lt; 8) {<br />            currentPixel = ((pattern&#91;patternTableAddr + i&#93; &gt;&gt; (7 - bit)) &amp; 0x01) + (((pattern&#91;patternTableAddr + i + 8&#93; &gt;&gt; (7 - bit)) &amp; 0x01) &lt;&lt; 1);<br />            pixelColor = palette&#91;(attribute &lt;&lt; 2) + currentPixel&#93;;<br />            screen&#91;(row &lt;&lt; 3) + i&#93;&#91;(col &lt;&lt; 3) + bit&#93; = pixelColor;<br />         }<br />      }<br />   }<br />}</div><br /><br />There's another thing I'd like to get out of the way: Are you separating CPU RAM from PPU RAM? People are sometimes confused by the fact that there are 2 separate buses, and if you don't emulate this correctly there's no way that the various tables will be populated and read correctly. I'm particularly worried about your read() function... is it reading from VRAM?<br /></div><br /><br />Sorry about that. I made it pseudocode and left a few things out. (I am using i in my real calculation for the pixel). <br /><br />Also, I am seperating PPU and CPU ram, so that isn't an issue. If you don't mind helping I can PM you the repo where my code is located.<br /><br />edit: By examining your code i realized I was rendering each pattern mirrored and fixed that. Now the letters are in the correct direction and I have color. However, it is still the same jumbled pattern and still turns to grey after  only a few frames of this jumble.<br /><br />CaptureColor.JPG<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=8412">nuker</a> — Fri Sep 01, 2017 1:41 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2017-09-01T13:35:54-07:00</updated>
<published>2017-09-01T13:35:54-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=16392&amp;p=203683#p203683</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=16392&amp;p=203683#p203683"/>
<title type="html"><![CDATA[Re: Making a basic PPU (Fully working CPU)]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=16392&amp;p=203683#p203683"><![CDATA[
I didn't catch anything that would result in the output you showed us, but I did notice a few problems:<br /><br />- The attribute table base address is wrong;<br />- The attribute data is not used at all;<br />- extractCurrentBitFromPatternTable doesn't use i;<br /><br />I rewrote a few formulas and completed some things that were missing (attributes, mostly), hopefully I didn't make any horrible mistakes:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">for (row &lt; 30) {<br />   for (col &lt; 32) {<br />      nameTable = read(0x2000 + (row &lt;&lt; 5) + col);<br />      attrTable = read(0x23c0 + ((row &gt;&gt; 2) &lt;&lt; 3) + (col &gt;&gt; 2));<br />      attribute = (attrTable &gt;&gt; (((row &amp; 0x02) &lt;&lt; 1) + (col &amp; 0x02))) &amp; 0x03;<br />      patternTableAddr = (nameTable &lt;&lt; 4) + ((ctrl &amp; 0x10) &lt;&lt; 8);<br />      <br />      for (i &lt; 8) {<br />         for (bit &lt; 8) {<br />            currentPixel = ((pattern&#91;patternTableAddr + i&#93; &gt;&gt; (7 - bit)) &amp; 0x01) + (((pattern&#91;patternTableAddr + i + 8&#93; &gt;&gt; (7 - bit)) &amp; 0x01) &lt;&lt; 1);<br />            pixelColor = palette&#91;(attribute &lt;&lt; 2) + currentPixel&#93;;<br />            screen&#91;(row &lt;&lt; 3) + i&#93;&#91;(col &lt;&lt; 3) + bit&#93; = pixelColor;<br />         }<br />      }<br />   }<br />}</div><br /><br />There's another thing I'd like to get out of the way: Are you separating CPU RAM from PPU RAM? People are sometimes confused by the fact that there are 2 separate buses, and if you don't emulate this correctly there's no way that the various tables will be populated and read correctly. I'm particularly worried about your read() function... is it reading from VRAM?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Fri Sep 01, 2017 1:35 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[lidnariq]]></name></author>
<updated>2017-09-01T12:31:30-07:00</updated>
<published>2017-09-01T12:31:30-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=16392&amp;p=203679#p203679</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=16392&amp;p=203679#p203679"/>
<title type="html"><![CDATA[Re: Making a basic PPU (Fully working CPU)]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=16392&amp;p=203679#p203679"><![CDATA[
Well, anyway, <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">row*8</tt> is not equal to <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">floor&#40;row/4&#41;*8</tt>.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3512">lidnariq</a> — Fri Sep 01, 2017 12:31 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[nuker]]></name></author>
<updated>2017-09-01T11:03:31-07:00</updated>
<published>2017-09-01T11:03:31-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=16392&amp;p=203670#p203670</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=16392&amp;p=203670#p203670"/>
<title type="html"><![CDATA[Re: Making a basic PPU (Fully working CPU)]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=16392&amp;p=203670#p203670"><![CDATA[
<div class="quotetitle">lidnariq wrote:</div><div class="quotecontent"><br />What writes to <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">screen</tt> if <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">currentPixel</tt> is not 0?<br />How does <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">extractCurrentBitFromPatternTable</tt> work?<br /></div><br /><br />Right now i am only drawing background pixels in order to just see if the ppu works at all. That way i dont have to worry about sprites or different palettes other than the background color. Therefore it is just white where i dont write and grey where i do write.<br /><br />Sorry, i was too lazy to write out extractCurrentBits. It just gets one bit from pattern table address and the second from that address + 8 and combines them<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=8412">nuker</a> — Fri Sep 01, 2017 11:03 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[lidnariq]]></name></author>
<updated>2017-09-01T10:56:14-07:00</updated>
<published>2017-09-01T10:56:14-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=16392&amp;p=203669#p203669</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=16392&amp;p=203669#p203669"/>
<title type="html"><![CDATA[Re: Making a basic PPU (Fully working CPU)]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=16392&amp;p=203669#p203669"><![CDATA[
What writes to <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">screen</tt> if <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">currentPixel</tt> is not 0?<br />How does <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">extractCurrentBitFromPatternTable</tt> work?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3512">lidnariq</a> — Fri Sep 01, 2017 10:56 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[nuker]]></name></author>
<updated>2017-09-01T10:04:39-07:00</updated>
<published>2017-09-01T10:04:39-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=16392&amp;p=203663#p203663</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=16392&amp;p=203663#p203663"/>
<title type="html"><![CDATA[Re: Making a basic PPU (Fully working CPU)]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=16392&amp;p=203663#p203663"><![CDATA[
<div class="quotetitle">Pokun wrote:</div><div class="quotecontent"><br />Are drawing the nametable? It looks more like you are drawing the pattern table, although corrupted. It looks like they are not properly aligned.<br /><br />Also the second pattern table is usually used as background tiles, not the first one. Both Donkey Kong and Mario Bros are doing that.<br /></div><br /><br />Thanks for the suggestion. It is very possible I have either made an arithmetic mistake or misunderstood something. Here is what I am doing in pseudocode:<br /><br /><br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">//Go through each row and column of nametable<br />for(row&lt;30) {<br />    for(col&lt;32) {<br />         //Fetch nametable, attrTable, and pattern<br />         nameTable = read(0x2000+col+(32*row));<br />         attrTable = read(0x2C30+(col/4)+(row*8));<br />         patternTableAddr = 16*nameTable + (((ctrl&gt;&gt;4)&amp;1)*0x1000);<br /><br />         //Draw pattern Table entry<br />         for(i&lt;8) {<br />             for(bit&lt;8) {<br />                 currentPixel = extractCurrentBitFromPatternTable(patternTableAddr,bit);<br />                 // only draw background pixels<br />                 if(currentPixel ==0) {<br />                       pixelColor = palette&#91;ram&#91;0x3F00&#93;&#93;;<br />                       screen&#91;8*row+i&#93;&#91;8*col+bit&#93; = pixelColor;<br />                  }<br />             }<br />         }<br /><br />    }<br />}<br /></div><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=8412">nuker</a> — Fri Sep 01, 2017 10:04 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Pokun]]></name></author>
<updated>2017-09-01T02:37:22-07:00</updated>
<published>2017-09-01T02:37:22-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=16392&amp;p=203640#p203640</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=16392&amp;p=203640#p203640"/>
<title type="html"><![CDATA[Re: Making a basic PPU (Fully working CPU)]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=16392&amp;p=203640#p203640"><![CDATA[
Yes of course, eventually you'll need to do that. But if you just want to get Donkey Kong to display for now, it sounds like you got them backwards.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6013">Pokun</a> — Fri Sep 01, 2017 2:37 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2017-09-01T01:29:17-07:00</updated>
<published>2017-09-01T01:29:17-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=16392&amp;p=203638#p203638</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=16392&amp;p=203638#p203638"/>
<title type="html"><![CDATA[Re: Making a basic PPU (Fully working CPU)]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=16392&amp;p=203638#p203638"><![CDATA[
<div class="quotetitle">Pokun wrote:</div><div class="quotecontent"><br />Also the second pattern table is usually used as background tiles, not the first one. Both Donkey Kong and Mario Bros are doing that.<br /></div><br />Better honor the $2000 setting for this than hardcode it. A lot of games do it the other way.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Fri Sep 01, 2017 1:29 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Pokun]]></name></author>
<updated>2017-09-01T01:22:19-07:00</updated>
<published>2017-09-01T01:22:19-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=16392&amp;p=203637#p203637</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=16392&amp;p=203637#p203637"/>
<title type="html"><![CDATA[Re: Making a basic PPU (Fully working CPU)]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=16392&amp;p=203637#p203637"><![CDATA[
Are drawing the nametable? It looks more like you are drawing the pattern table, although corrupted. It looks like they are not properly aligned.<br /><br />Also the second pattern table is usually used as background tiles, not the first one. Both Donkey Kong and Mario Bros are doing that.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6013">Pokun</a> — Fri Sep 01, 2017 1:22 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[nuker]]></name></author>
<updated>2017-08-31T22:11:41-07:00</updated>
<published>2017-08-31T22:11:41-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=16392&amp;p=203635#p203635</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=16392&amp;p=203635#p203635"/>
<title type="html"><![CDATA[Re: Making a basic PPU (Fully working CPU)]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=16392&amp;p=203635#p203635"><![CDATA[
<div class="quotetitle">tokumaru wrote:</div><div class="quotecontent"><br />I believe it has been pointed out that SMB isn't a good test subject for a barebones PPU implementation. It relies on raster effects (status bar), pallette mirroring, VRAM/ROM readback, scrolling... Better start with something simpler, like Donkey Kong or Mario Bros., which have already been suggested.<br /><br />It doesn't mean you will get nothing out of SMB, as even the simple approach to PPU rendering should show something discernible for SMB, it's just that it may be harder to debug the initial PPU implementation using a game that relies on more advanced PPU features. There certainly is something wrong there, but the problem may be easier to catch if you try a less demanding game.<br /><br />EDIT: Those patterns do resemble the pattern tables of SMB, but I don't think there's any reason for them to show up like that in the final emulated picture.<br /></div><br /><br />I tried other ROM's but a similar thing happens. I moreso wanted to know if there was a plausible or easy-to-spot explanation for why this is happening. Here is a screenshot from Donkey Kong.<br /><br />donkeyKong.JPG<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=8412">nuker</a> — Thu Aug 31, 2017 10:11 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2017-08-31T21:08:16-07:00</updated>
<published>2017-08-31T21:08:16-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=16392&amp;p=203632#p203632</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=16392&amp;p=203632#p203632"/>
<title type="html"><![CDATA[Re: Making a basic PPU (Fully working CPU)]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=16392&amp;p=203632#p203632"><![CDATA[
I believe it has been pointed out that SMB isn't a good test subject for a barebones PPU implementation. It relies on raster effects (status bar), pallette mirroring, VRAM/ROM readback, scrolling... Better start with something simpler, like Donkey Kong or Mario Bros., which have already been suggested.<br /><br />It doesn't mean you will get nothing out of SMB, as even the simple approach to PPU rendering should show something discernible for SMB, it's just that it may be harder to debug the initial PPU implementation using a game that relies on more advanced PPU features. There certainly is something wrong there, but the problem may be easier to catch if you try a less demanding game.<br /><br />EDIT: Those patterns do resemble the pattern tables of SMB, but I don't think there's any reason for them to show up like that in the final emulated picture.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Thu Aug 31, 2017 9:08 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[nuker]]></name></author>
<updated>2017-08-31T20:08:55-07:00</updated>
<published>2017-08-31T20:08:55-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=16392&amp;p=203629#p203629</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=16392&amp;p=203629#p203629"/>
<title type="html"><![CDATA[Re: Making a basic PPU (Fully working CPU)]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=16392&amp;p=203629#p203629"><![CDATA[
<div class="quotetitle">MottZilla wrote:</div><div class="quotecontent"><br /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">So to start it's a good idea to get the PPU registers working so you have the NameTables and Palette data populated giving you something to work with. You could decode all the tiles before hand to something easier for you to work with. If you like Donkey Kong or Donkey Kong Jr. I highly recommend them as early emulation test games. I used both of them for testing in my first emulator.<br /></div></div><br /><br />Thank you for the help guys! I went ahead and implemented a bare bones PPU. Just to see if it worked at all, i hardcoded it to always render the first nametable. I also made it so only the &quot;background&quot; pixels are rendered (value 0 in pattern table).<br /><br />However, when i run SMB ROM, i just get a weird grey pattern to show up before the entire output going grey. I just wanted to know if anyone had any ideas or tips. <br /><br />I've attached the weird grey pattern. One can clearly see the alphabet mirrored on it in the center.<br /><br />Capture.JPG<br /><br />To be clear, it shows this for a few frames before showing nothing but grey.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=8412">nuker</a> — Thu Aug 31, 2017 8:08 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[MottZilla]]></name></author>
<updated>2017-08-30T23:17:36-07:00</updated>
<published>2017-08-30T23:17:36-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=16392&amp;p=203564#p203564</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=16392&amp;p=203564#p203564"/>
<title type="html"><![CDATA[Re: Making a basic PPU (Fully working CPU)]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=16392&amp;p=203564#p203564"><![CDATA[
<div class="quotetitle">tokumaru wrote:</div><div class="quotecontent"><br />The simplest thing you can do to get games to display something is to first implement the PPU registers ($2000-$2007) to make sure that the basic settings work (pattern table addresses, sprite size, NMI generation, scroll, etc.) and that VRAM can be written to and read from. Then, you can create a simple function to draw a full frame at once, and call it 60 times per second, without bothering with CPUxPPU synchronization or with the exact processes the PPU uses to render pictures. You can do it at a higher level, gathering data from the pattern, name and attribute tables, OAM and palette RAM, and render a full frame. This should be enough to run simpler games, mainly those that don't use raster effects. More complex games might work to some extent, depending on when in the frame you sample the PPU data/settings for rendering.<br /><br />Then you can start to implement the actual PPU behavior, making it run alongside the CPU and respect the real duration and order of all memory accesses and other processes (such as sprite evaluation). Depending on the level of accuracy (or performance) you're going for, you may get away with doing things 1 scanline at a time, rather than 1 pixel at a time.<br /></div><br /><br />I think this is a great way to start out. Many games can work pretty well with this simplified approach. Donkey Kong &amp; Donkey Kong Jr., Mario Bros (the arcade port, not Super Mario Bros), Sqoon maybe. Pac-Man most likely. Even games like Mega Man and Contra work pretty well this way. Castlevania can work if you don't mind the scoreboard section scrolling. <br /><br />So to start it's a good idea to get the PPU registers working so you have the NameTables and Palette data populated giving you something to work with. You could decode all the tiles before hand to something easier for you to work with. If you like Donkey Kong or Donkey Kong Jr. I highly recommend them as early emulation test games. I used both of them for testing in my first emulator.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=1726">MottZilla</a> — Wed Aug 30, 2017 11:17 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Pokun]]></name></author>
<updated>2017-08-23T04:55:54-07:00</updated>
<published>2017-08-23T04:55:54-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=16392&amp;p=203093#p203093</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=16392&amp;p=203093#p203093"/>
<title type="html"><![CDATA[Re: Making a basic PPU (Fully working CPU)]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=16392&amp;p=203093#p203093"><![CDATA[
$2006 and $2007 are only for VRAM (background and palettes) though. For sprites you have to implement the same thing for OAM which is using $2003 and $2004, and also $4014 for OAM-DMA.<br /><br /><strong>Edit:</strong> Note that $2004 seems to be buggy and also not readable on all versions of the PPU (my Famicom can't read it for instance). Most games never use it though, as they use OAM-DMA to fill OAM.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6013">Pokun</a> — Wed Aug 23, 2017 4:55 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[nuker]]></name></author>
<updated>2017-08-22T17:39:52-07:00</updated>
<published>2017-08-22T17:39:52-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=16392&amp;p=203077#p203077</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=16392&amp;p=203077#p203077"/>
<title type="html"><![CDATA[Re: Making a basic PPU (Fully working CPU)]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=16392&amp;p=203077#p203077"><![CDATA[
<div class="quotetitle">tokumaru wrote:</div><div class="quotecontent"><br />All these tables are just memory, so the same way you don't have to worry about how games populate regular RAM with lives, levels, object data, etc., you don't have to care about how they fill the name/attribute tables or the rest of VRAM. If the CPU is working, the correct values will end up in VRAM.<br /><br />All you have to do is implement the interface through which the CPU writes to VRAM, since they're not directly connected. Basically you have to implement registers $2006, $2007, and the VRAM increment bit of $2000.<br /></div><br /><br />Okay, that makes a lot more sense! Confusion sorted out.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=8412">nuker</a> — Tue Aug 22, 2017 5:39 pm</p><hr />
]]></content>
</entry>
</feed>