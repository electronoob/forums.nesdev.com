<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Why no SNES homebrew scene?</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Why no SNES homebrew scene?</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=12&amp;t=10957">http://forums.nesdev.com/viewtopic.php?f=12&amp;t=10957</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>3</strong> of <strong>6</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>byuu</b> [ Sat Feb 01, 2014 6:34 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Why no SNES homebrew scene?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I always prefer 8-bit A, 16-bit X/Y. Switch to 16-bit A only when it helps performance (eg inner shift loop of a VWF routine, block transfer that has a catch which prevents simple DMA/MV[NP], etc)<br /><br />I have tried in the past implementing assembler directives to catch A/X/Y sizes. I find that all it does is trade one set of problems for another, and makes the code uglier.<br /><br />Catching rep and sep is easy, sure. But what do you do after plp, or rti, or even just a regular rts/rtl? The next function may have different expected sizes when invoked. What happens when you blur the line between functions and jump around with relative offsets? (jump tables and the like.) You're just as capable of getting lazy and missing a force size marker that results in non-working code.<br /><br />Like koitsu said, it's not really hard. I've written several megabytes worth of 65816 source, and mixing up sizes has only happened to me a few times at the beginning.<br /><br />But if I really wanted protection against this, here's the way I'd do it: create a usage file format. For each ROM address output by the assembler, store a byte in a usage.bin file that has the following bit-fields for each address: &lt;read, write, execute, M flag, X flag, ...&gt;. M/X flag only matters here for #const opcodes, where it can be detected by the assembler. Now have the emulator generate the same information as the program runs. If it detects a mismatch between the assembler-output and emulator-input M/X flags on a #const opcode, it should alert in the terminal. Even better if you store more usage information (source code line#, previous function name, etc.) Yes, it's one of those annoying run-time instead of compile-time detections, but it's a transparent behavior catch without you having to try and label M/X flag settings all throughout your source.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>ARM9</b> [ Sun Feb 02, 2014 8:44 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Why no SNES homebrew scene?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">koitsu wrote:</div><div class="quotecontent">It just pisses me off when I see people crying/whining over this shit.</div><br />There there, calm your tits. It's quite amusing how many times you've called me a whiner when you don't even understand what I'm talking about. <img src="./images/smilies/icon_rolleyes.gif" alt=":roll:" title="Rolling Eyes" /><br />I never said that it's hard to keep track of the processor status, I said that it's an inconvenience (admittedly mostly for beginners) that could be further diminished ever so slightly with some fairly basic features. If you don't like it then don't use it, no harm done.<br /><br />Byuu's approach is probably the most foolproof, but using plp without php sounds questionable.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Jarhmander</b> [ Sun Feb 02, 2014 8:59 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Why no SNES homebrew scene?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">ARM9 wrote:</div><div class="quotecontent"><div class="quotetitle">koitsu wrote:</div><div class="quotecontent">It just pisses me off when I see people crying/whining over this shit.</div><br />There there, calm your tits. It's quite amusing how many times you've called me a whiner when you don't even understand what I'm talking about. <img src="./images/smilies/icon_rolleyes.gif" alt=":roll:" title="Rolling Eyes" /><br />I never said that it's hard to keep track of the processor status, I said that it's an inconvenience (admittedly mostly for beginners) that could be further diminished ever so slightly with some fairly basic features. If you don't like it then don't use it, no harm done.<br /><br />Byuu's approach is probably the most foolproof, but using plp without php sounds questionable.</div><br />Use of <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">php</tt> with <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">plp</tt> is probably implied.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sun Feb 02, 2014 1:30 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Why no SNES homebrew scene?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />So let me try to wrap up the answers to my original post:<br /><br /><ol style="list-style-type: lower-alpha"><li>Assembler reliability and assembly syntax: Use ca65 with blargg's SPC700 macro pack to avoid problems with the discontinued WLA and to regain familiar (to NES/C64/Atari/Apple II coders) 6502 syntax. </li><li>WAVs: Find some CC-BY or otherwise permissively licensed sound font, or find or write a few quick synth programs. Convert the waves to the sampling rate that is a multiple of 16 times the note frequency, such as a multiple of 4186 for a middle C, and the loop points will line up. Making the sample rate a power of 2 times the note frequency will also make your note frequency tables sane. </li><li>Color use: Start by making normal, highlight, and shadow shades of skin, clothing 1, and clothing 2 colors. This allows more freedom than the NES, where you typically get one shadow, one color, and one highlight/skin without having to use overlap. </li><li>Layers: The common practice is to use mode 1 with three layers for playfield, parallax, and status, or use OPT mode 2 with two layers for playfield and parallax and sprites for the status bar. But your artists still need to determine what to put in the parallax layer. </li><li>A full SPC700 image will eat up 1/4 of 2 Mbit right away, and graphics may compress twice as big as they did on the NES. </li><li>Save up for a PowerPak. Accept the misfortune of having to wait years until you're old enough to work, accept the misfortune of having to check retrousb.com daily until the PowerPak is no longer Temporarily Unavailable, and accept the misfortune of having to move a CF card back and forth between your PC and your Super NES. But this still leaves open the difference between the power-up state of the Super NES and the state that the PowerPak menu leaves it in. Are there tests for the power-up state of the Super NES, and does higan pass them? </li><li>It's not just copying the CHR assets into VRAM. With all the registers that must be set to a sane value to get a display going, it's best to start from an example that exercises the feature you are looking for. I made a <a href="http://forums.nesdev.com/viewtopic.php?p=81806#p81806" class="postlink">minimal working example for the NES</a>. <a href="http://forums.nesdev.com/viewtopic.php?p=124753#p124753" class="postlink">mic_ lists a few for the Super NES</a>. </li><li>Use 816-tcc in the SNES SDK. Or just learn assembly and accept the misfortune. The rep/sep problem can be worked around by establishing calling conventions such as 8-bit A and 16-bit XY set for the parts of your program that interact with I/O registers. </li></ol>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>MottZilla</b> [ Sun Feb 02, 2014 7:23 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Why no SNES homebrew scene?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Besides a PowerPAK you could use one of INL's SNES boards, or a Super EverDrive, or one of many Backup Units. So there are other and cheaper options to test on real hardware.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>byuu</b> [ Mon Feb 03, 2014 2:17 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Why no SNES homebrew scene?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />&gt; Are there tests for the power-up state of the Super NES, and does higan pass them?<br /><br />higan is extremely conservative. If I don't know the power-on state of a register (many are write-only, and very challenging to determine initial values for), I default it to a random value that changes with each power cycle / run of the emulator.<br /><br />I most likely randomize things that shouldn't be. I'd rather have your game break only on higan than only on real hardware.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>koitsu</b> [ Mon Feb 03, 2014 3:19 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Why no SNES homebrew scene?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />While byuu and I don't usually see eye-to-eye, his approach with higan is completely understandable.<br /><br />I don't ever remember seeing &quot;documented&quot; power-on values (in any document, official or unofficial), all I remember is Nintendo <strong>very specifically</strong> outlining in their documentation the values values you need to assign to all memory-mapped registers in your RESET routine, ditto with standard <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">sei/clc/xce</tt> and the necessary <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">jml/jmp long</tt> (where long is bank $80 or higher) for games using high-speed mode (and also in NMI) to properly set the K register.<br /><br />The manual says something to the effect of &quot;{memory-mapped} register values are unknown when power is applied; initialisation must be done ASAP&quot;.  It's easier to just do the initialisation per Nintendo and not get OCD about the power-on state.  If you're worried about what the actual CPU registers are on power-on, those are actually documented in the official WDC 65816 manual (but I've given hints above :-) ).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>byuu</b> [ Mon Feb 03, 2014 4:31 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Why no SNES homebrew scene?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Amusingly, you could reduce &quot;sei/clc/xce&quot; to just &quot;xce&quot;, as P is always #$34 after both power cycle and soft reset. But yeah, you're saving two whole bytes. Not worth the brain space to remember that detail.<br /><br />One of the more evil things I've found ... the stack pointer decrements with each reset, and the Super UFO in particular defaults the stack to #$0100 (it probably set it to zero and then switched to emulation mode.) So if your first instruction is a jsr/jsl, then you switch to native mode and return, your game will crash always on the UFO, and after every ~256/3 resets otherwise. Overwriting the entry point with a JSL is a pretty common ROM hacking way to add an intro splash screen or a trainer.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Mon Feb 03, 2014 7:14 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Why no SNES homebrew scene?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />So as I understand your post, there's no one-frame delay before the regs become writable like <a href="http://wiki.nesdev.com/w/index.php/PPU_power_up_state" class="postlink">there is on NES</a>. I'll have to study the worked examples more. Can I get a pre-release copy of the source code for higan with this new text-based debugger so that I can compile it in Xubuntu (a Debian derivative) and play with it for a while?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>byuu</b> [ Mon Feb 03, 2014 8:27 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Why no SNES homebrew scene?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />&gt; So as I understand your post, there's no one-frame delay before the regs become writable like there is on NES.<br /><br />Not that I've observed, hard to capture the very first video frame output from a running system with the tools I have.<br /><br />One fun side effect I've seen is that VIRQs trigger one scanline late during only the first frame.<br /><br />&gt; Can I get a pre-release copy of the source code for higan with this new text-based debugger so that I can compile it in Xubuntu (a Debian derivative) and play with it for a while?<br /><br />It's currently too unstable to use (only started on it this week), but I'll point you at a pre-release WIP once things are a bit more stable.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>nocash</b> [ Mon Feb 03, 2014 10:49 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Why no SNES homebrew scene?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I've never noticed anything like a one-frame power up delay on SNES either. The initial I/O port settings are documented here <!-- m --><a class="postlink" href="http://nocash.emubase.de/fullsnes.htm#snesiomap">http://nocash.emubase.de/fullsnes.htm#snesiomap</a><!-- m --> and here <!-- m --><a class="postlink" href="http://nocash.emubase.de/fullsnes.htm#snesapumemoryandiomap">http://nocash.emubase.de/fullsnes.htm#s ... ryandiomap</a><!-- m --> (in the rightmost columns) (values in brackets tend to be so on initial power-up, but are left unchanged on /reset, it. they depend on if/how the game has changed, or when doing things like hotswapping cartridges, they might even contain values from the previously played game,  so they could be actually total random).<br />The write-only PPU register are mostly unknown. Only way to test them would be writing a dozen of test programs, and then examining the TV picture (eg. initialize all PPU registers, but leave one register uninitialized, and then look how that uninitialized register affects the picture). I am assuming that the uninitialized PPU registers are all FFh on power-up (at least some are known to be so: the ppu multiplier input, the vram increment mode, and I think Anomie mentioned that the BG scroll offsets are also like so).<br />Anyways, it would be best to initialize or zerofill all I/O ports when the game starts (best do that twice, for the 'write-twice' registers). And of course, initialize RAM, VRAM, and Sound RAM too. If that's done right, then it should be quite safe to assume that the game works on both directly booting retail cartridges, as well on flash cartidges with bootstrap loaders.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>cpow</b> [ Mon Feb 03, 2014 12:36 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Why no SNES homebrew scene?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">See also <a href="http://forums.nesdev.com/viewtopic.php?p=64779#p64779" class="postlink">what I wrote about breakpoints in NESICIDE</a>.</div><br />Funny what one finds when trolling threads not otherwise of interest.  I still owe you on this, tepples.   <img src="./images/smilies/icon_redface.gif" alt=":oops:" title="Embarassed" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>nocash</b> [ Mon Feb 03, 2014 4:22 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Why no SNES homebrew scene?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">ARM9 wrote:</div><div class="quotecontent">My wishlist for no$sns features:<br /><ul><li>Being able to set breakpoints on ROM/VRAM/WRAM/etc reads/writes (basically the entire memorymap + isolated stuff like vram and aram) would also be useful.</li><li>A way to view the contents of VRAM/CGRAM/OAM in hex.</li><li>A better organized I/O map window, or perhaps even just a simple list view like the debug window interface with the data next to each register, this way you could also map in additional registers easily like GSU and SA-1 mmio.</li><li>Being able to set breakpoints on coprocessor execution would be nice.</li><li>Support for .sym files. WLA can generate them but no$sns always complains about corruption (I tried all sorts of modifications but no dice). It'd be really convenient to have symbolic debugging.</li></ul>Breakpoints for main cpu bug out sometimes, it's impossible to remove one without clearing all breakpoints. It rarely happens and I haven't been able to observe a pattern yet.<br /></div><br /><strong>Memory access breaks</strong> would be nice. I am afraid it'd be some work (more as for RISC cpus) since the SNES has so many different opcodes with different addressing modes (not to mention all the coprocessors). For performance reasons, I'd need to implement each opcode twice (for normal fast execution, and slower debugging checks).<br /><strong>Vram/Palette/oam hex viewing</strong> for BG Maps, Palette, and OAM you can view HEX values (when moving the mouse across the VRAM viewer windows). Downside is that it doesn't cover non-BG-Map portions of VRAM, and of course there are cases where it'd be nicer to see all values at once, without needing to move the mouse on certain entries.<br /><strong>better organized I/O map window</strong> - alltogether I like the I/O map windows as is. They are currently resolving the meaning of the separate bits, which I wouldn't know how to do that in a list view. And they somehow sorted by categories. All sound registers in one tab, the DMA (and misc) registers in another tab. And the PPU registers in two tabs - that's the point where I am occassionally getting lost myself. Maybe I should rearrange those two tabs: One tab that contains solely BG related registers, one for basic control/status, and maybe a third tab for special effects like window &amp; color math.<br />NB. The coprocessor I/O ports can be viewed in the &quot;Cart Profile&quot; window, but it's really uncomfortable to use (need to reopen the window and scroll down each time when viewing them), but then, coprocessors are probably rarely used in homebrew projects, so it doesn't matter too much.<br /><strong>breakpoints on coprocessor</strong> - yup, would be great, especially for the APU, currently only the one-shot breaks (F4-key) are working on APU side. The issue with normal (F2-key) breaks is that I'd need to store some &quot;which break is for which cpu&quot; info in the breakpoint list (and of course, needing to implement them on the different cpus).<br /><strong>Breakpoints for main cpu bug out sometimes</strong> - whoops. Might have something to do with the new dynamically allocated lists that I had implemented in January 2013. I remember that there has been some problem... but I can't find any release notes about when I have fixed it. Maybe the bug does still exist in current no$sns version - you are using v1.5, don't you?<br /><strong>Support for .sym files</strong> that's supported. Allthough I don't seem have to documented how :-) best pick the magicsns source code <!-- m --><a class="postlink" href="http://nocash.emubase.de/magicflr.htm">http://nocash.emubase.de/magicflr.htm</a><!-- m --> store it in no$sns's &quot;STUFF&quot; folder, then use no$sns Utility -&gt; Assemble File to build the binary and .sym file. As for the breakpoints, it's lacking the &quot;for-which-cpu&quot; info, I'll need to change the format someday to something like &quot;APU:NNNN apu_label&quot; and &quot;CX4:NNNN capcom_label&quot;.<br /><br /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">Do you test in Wine? Or should I be your Linux guinea pig?</div><br />Yes, why not? Would be nice. I haven't tested in Wine. Judging from the latest posts, I am having the impression it does work under wine. Though I got some bug reports about debug font issues some years ago (unsupported GetGlyphOutline function, which is hopefully implemented meanwhile, and, some glitch where wine was using a proportional font, instead of the desired fixed width font). I know that lidnariq has tested the hardware accellerated video zooming under wine, so it seems that no$sns is somehow working, hopefully without font glitches.<br /><br />PS. The no$sns debugger can be found here: <!-- m --><a class="postlink" href="http://nocash.emubase.de/sns.htm">http://nocash.emubase.de/sns.htm</a><!-- m -->

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>benjaminsantiago</b> [ Mon Feb 03, 2014 5:50 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Why no SNES homebrew scene?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">So let me try to wrap up the answers to my original post:<br /><br /><ol style="list-style-type: lower-alpha"><li>Assembler reliability and assembly syntax: Use ca65 with blargg's SPC700 macro pack to avoid problems with the discontinued WLA and to regain familiar (to NES/C64/Atari/Apple II coders) 6502 syntax. </li><li>WAVs: Find some CC-BY or otherwise permissively licensed sound font, or find or write a few quick synth programs. Convert the waves to the sampling rate that is a multiple of 16 times the note frequency, such as a multiple of 4186 for a middle C, and the loop points will line up. Making the sample rate a power of 2 times the note frequency will also make your note frequency tables sane. </li><li>Color use: Start by making normal, highlight, and shadow shades of skin, clothing 1, and clothing 2 colors. This allows more freedom than the NES, where you typically get one shadow, one color, and one highlight/skin without having to use overlap. </li><li>Layers: The common practice is to use mode 1 with three layers for playfield, parallax, and status, or use OPT mode 2 with two layers for playfield and parallax and sprites for the status bar. But your artists still need to determine what to put in the parallax layer. </li><li>A full SPC700 image will eat up 1/4 of 2 Mbit right away, and graphics may compress twice as big as they did on the NES. </li><li>Save up for a PowerPak. Accept the misfortune of having to wait years until you're old enough to work, accept the misfortune of having to check retrousb.com daily until the PowerPak is no longer Temporarily Unavailable, and accept the misfortune of having to move a CF card back and forth between your PC and your Super NES. But this still leaves open the difference between the power-up state of the Super NES and the state that the PowerPak menu leaves it in. Are there tests for the power-up state of the Super NES, and does higan pass them? </li><li>It's not just copying the CHR assets into VRAM. With all the registers that must be set to a sane value to get a display going, it's best to start from an example that exercises the feature you are looking for. I made a <a href="http://forums.nesdev.com/viewtopic.php?p=81806#p81806" class="postlink">minimal working example for the NES</a>. <a href="http://forums.nesdev.com/viewtopic.php?p=124753#p124753" class="postlink">mic_ lists a few for the Super NES</a>. </li><li>Use 816-tcc in the SNES SDK. Or just learn assembly and accept the misfortune. The rep/sep problem can be worked around by establishing calling conventions such as 8-bit A and 16-bit XY set for the parts of your program that interact with I/O registers. </li></ol></div><br /><br />Not sure if this is mentioned other places in the thread, but don't underestimate the power of dithering: <br /><!-- m --><a class="postlink" href="http://upload.wikimedia.org/wikipedia/en/4/46/Lenna_ordered_dither.png">http://upload.wikimedia.org/wikipedia/e ... dither.png</a><!-- m --><br /><br />Depends on your taste, but you can reduce the amount of colors significantly depending on how much you are willing to put up with. I do it by hand sometimes, but you can also get interesting results out of Photoshop with the save for web option. If you save it as a .gif you can reduce the amount of colors and play with how the dithering works (pattern, noise, etc)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Mon Feb 03, 2014 6:51 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Why no SNES homebrew scene?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">benjaminsantiago wrote:</div><div class="quotecontent">Not sure if this is mentioned other places in the thread, but don't underestimate the power of dithering</div><br />Trust me; <a href="http://forums.nesdev.com/viewtopic.php?p=124228#p124228" class="postlink">I've played with dithering before</a> as a way to compensate for another platform's lack of HDMA. That's why I've suggested breaking each 15-color palette into five 3-color subpalettes, to allow each color to be dithered light and dark.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">If you save it as a .gif you can reduce the amount of colors and play with how the dithering works (pattern, noise, etc)</div><br />I had to alternate strips of pattern and noise to get things to look good.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>3</strong> of <strong>6</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>