<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=6&amp;t=16111" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2018-01-30T19:34:43-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=6&amp;t=16111</id>
<entry>
<author><name><![CDATA[pubby]]></name></author>
<updated>2018-01-30T19:34:43-07:00</updated>
<published>2018-01-30T19:34:43-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=16111&amp;p=212740#p212740</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=16111&amp;p=212740#p212740"/>
<title type="html"><![CDATA[Re: A constant-cycle music engine]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=16111&amp;p=212740#p212740"><![CDATA[
<div class="quotetitle">GradualGames wrote:</div><div class="quotecontent"><br />It looks like famitone and your engine perhaps only allow a single duty value to be used?<br /></div><br /><br />Famitone is like this but my engine handles duty sequences. The converter does a little work to comebine the duty sequence with the volume sequence in a way that preserves both.<br /><br />It breaks down if you loop both sequences and the loop lengths aren't multiple of each other, but that's extremely rare to run into.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=7486">pubby</a> — Tue Jan 30, 2018 7:34 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2018-01-30T08:33:38-07:00</updated>
<published>2018-01-30T08:33:38-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=16111&amp;p=212679#p212679</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=16111&amp;p=212679#p212679"/>
<title type="html"><![CDATA[Re: A constant-cycle music engine]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=16111&amp;p=212679#p212679"><![CDATA[
<div class="quotetitle">GradualGames wrote:</div><div class="quotecontent"><br />I do have a lot of rather fiddly arithmetic in place to juggle the duty cycle values and volume values. If I leave in the capability to have a duty cycle envelope complete with loop points, I might not be able to pre-bake these if the loop points cause glitches in the duty cycle (like if the lengths of each envelope are not multiples of each other, and when the volume envelope goes back the duty cycle would have been in a different location).<br /></div><br />In my engine, I just decided that volume envelopes aren't allowed to loop, and duty and arpeggio envelopes will loop only to the length of the volume envelope and stop. The envelope format is 1 byte for duty (2 bits), volume (4 bits), and whether arpeggio on this frame is nonzero (1 bit), followed by an arpeggio envelope value if needed. If you want to preserve ability to loop envelopes while baking duty into them, you could take the least common multiple of the volume and duty envelope loop lengths, use that as the overall loop length, and possibly emit a diagnostic in the converter if the resulting length exceeds the greater of the volume or duty envelope loop length.<br /><br /><div class="quotetitle">GradualGames wrote:</div><div class="quotecontent"><br />having several values in a row sounds too rough/odd.<br /></div><br />In some styles, you want rough.<br /><br /><div class="quotetitle">GradualGames wrote:</div><div class="quotecontent"><br />I actually have the ability to totally compile out arpeggios and dpcm from my engine because I never use them myself, haha.<br /></div><br />Likewise with <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">PENTLY_USE_*</tt> flags.<br /><br /><div class="quotetitle">GradualGames wrote:</div><div class="quotecontent"><br />Arpeggios sound like telephones to me and dpcm causes that controller bug; don't want to deal with it <img src="http://forums.nesdev.com/images/smilies/icon_lol.gif" alt=":lol:" title="Laughing" /><br /></div><br />Sometimes you <em>want</em> them to sound like telephones, as in <a href="http://forums.famitracker.com/viewtopic.php?f=9&amp;t=4553" class="postlink">my cover of &quot;Disconnected&quot; by Inspector K</a>.<br /><br /><div class="quotetitle">GradualGames wrote:</div><div class="quotecontent"><br />I also realized if famitone uses precompiled register values for sfx, that ggsound's sfx may be more flexible since they are basically tiny songs on their own that terminate by default (but could loop if desired)<br /></div><br />Sound effects in Pently behave more like instruments, but they do have their own &quot;speed&quot; value such that you could encode a jingle in one.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Tue Jan 30, 2018 8:33 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[GradualGames]]></name></author>
<updated>2018-01-30T07:29:01-07:00</updated>
<published>2018-01-30T07:29:01-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=16111&amp;p=212672#p212672</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=16111&amp;p=212672#p212672"/>
<title type="html"><![CDATA[Re: A constant-cycle music engine]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=16111&amp;p=212672#p212672"><![CDATA[
<div class="quotetitle">pubby wrote:</div><div class="quotecontent"><br />Volume+duty is combined into a single sequence that maps directly to the APU register. Pitch and Arpeggio are separate sequences and a bit of arithmetic is done each frame to calculate them.<br /><br />I only implemented one of FamiTracker's relative/absolute/fixed behavior (I used the default setting) for each sequence type, so that may also explain the difference.<br /></div><br />Ah! Yeah I was thinking about this last night and realized it wouldn't be possible to precompile pitch or arpeggio since it has to work for any note that is playing. But I do have a lot of rather fiddly arithmetic in place to juggle the duty cycle values and volume values. If I leave in the capability to have a duty cycle envelope complete with loop points, I might not be able to pre-bake these if the loop points cause glitches in the duty cycle (like if the lengths of each envelope are not multiples of each other, and when the volume envelope goes back the duty cycle would have been in a different location).  It looks like famitone and your engine perhaps only allow a single duty value to be used? *edit* I might want to change ggsound to work this way because I don't think I ever do anything more than one different duty value at the beginning for a crisp attack sound. having several values in a row sounds too rough/odd.<br /><br />I actually have the ability to totally compile out arpeggios and dpcm from my engine because I never use them myself, haha. Arpeggios sound like telephones to me and dpcm causes that controller bug; don't want to deal with it <img src="http://forums.nesdev.com/images/smilies/icon_lol.gif" alt=":lol:" title="Laughing" /> <br /><br />I also realized if famitone uses precompiled register values for sfx, that ggsound's sfx may be more flexible since they are basically tiny songs on their own that terminate by default (but could loop if desired)<br /><br />Everything is a trade off!<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3735">GradualGames</a> — Tue Jan 30, 2018 7:29 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[pubby]]></name></author>
<updated>2018-01-29T19:18:01-07:00</updated>
<published>2018-01-29T19:18:01-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=16111&amp;p=212641#p212641</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=16111&amp;p=212641#p212641"/>
<title type="html"><![CDATA[Re: A constant-cycle music engine]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=16111&amp;p=212641#p212641"><![CDATA[
Volume+duty is combined into a single sequence that maps directly to the APU register. Pitch and Arpeggio are separate sequences and a bit of arithmetic is done each frame to calculate them.<br /><br />I only implemented one of FamiTracker's relative/absolute/fixed behavior (I used the default setting) for each sequence type, so that may also explain the difference.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=7486">pubby</a> — Mon Jan 29, 2018 7:18 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[GradualGames]]></name></author>
<updated>2018-01-29T08:19:20-07:00</updated>
<published>2018-01-29T08:19:20-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=16111&amp;p=212601#p212601</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=16111&amp;p=212601#p212601"/>
<title type="html"><![CDATA[Re: A constant-cycle music engine]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=16111&amp;p=212601#p212601"><![CDATA[
<div class="quotetitle">pubby wrote:</div><div class="quotecontent"><br />Reading the notes and preparing/assigning the instruments and doing other bookkeeping can be broken up across frames. In my case, it saved about ~450 cycles.<br /><br />Reading the sequences and writing the APU registers has to be done every frame. I didn't implement any instrument compression, so that's a pretty big speed advantage over libraries that do.<br /></div><br />That's a great idea, this is making me want to refactor ggsound to work a similar way. Highly doubt it'll come close to the same speed, but I like the idea of making it the best it can be. Thanks for the inspiration. Sounds like I may need a little bit more ram, so that I can read the next envelope being prepared and then swap it into place for actual playback, where as at the moment I only store the current envelope.<br /><br />I have another question. Do you precompile instruments such that their volume, pitch, duty sequences are all predetermined as register values? In my engine, I modify the current volume, pitch and duty values per channel per envelope at runtime. Is that what you're referring to? That might be a nice improvement as well...<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3735">GradualGames</a> — Mon Jan 29, 2018 8:19 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[pubby]]></name></author>
<updated>2018-01-29T04:09:13-07:00</updated>
<published>2018-01-29T04:09:13-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=16111&amp;p=212588#p212588</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=16111&amp;p=212588#p212588"/>
<title type="html"><![CDATA[Re: A constant-cycle music engine]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=16111&amp;p=212588#p212588"><![CDATA[
Reading the notes and preparing/assigning the instruments and doing other bookkeeping can be broken up across frames. In my case, it saved about ~450 cycles.<br /><br />Reading the sequences and writing the APU registers has to be done every frame. I didn't implement any instrument compression, so that's a pretty big speed advantage over libraries that do.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=7486">pubby</a> — Mon Jan 29, 2018 4:09 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[GradualGames]]></name></author>
<updated>2018-01-28T20:22:16-07:00</updated>
<published>2018-01-28T20:22:16-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=16111&amp;p=212569#p212569</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=16111&amp;p=212569#p212569"/>
<title type="html"><![CDATA[Re: A constant-cycle music engine]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=16111&amp;p=212569#p212569"><![CDATA[
<div class="quotetitle">pubby wrote:</div><div class="quotecontent"><br /><div class="quotetitle">GradualGames wrote:</div><div class="quotecontent">:shock: Well, this is humbling! By the time ggsound burns 760 cycles, it has just had its coffee and is still waking up in the morning. Ah, time to actually make sounds now! <img src="http://forums.nesdev.com/images/smilies/icon_lol.gif" alt=":lol:" title="Laughing" /> I can really learn something from this code. Thanks for sharing.<br /></div><br />The biggest optimization comes from dividing the work out across multiple frames. I divided it into 4, and well, that's why it's 4x faster than famitone.</div><br />I'm having trouble imagining how I would do that. If I have an envelope with a loop point for example, I'm going to update the envelope and the associated channel registers on every frame. What work can you get away with spreading out? Maybe tempo and length counters as one example?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3735">GradualGames</a> — Sun Jan 28, 2018 8:22 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[pubby]]></name></author>
<updated>2018-01-28T18:24:24-07:00</updated>
<published>2018-01-28T18:24:24-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=16111&amp;p=212561#p212561</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=16111&amp;p=212561#p212561"/>
<title type="html"><![CDATA[Re: A constant-cycle music engine]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=16111&amp;p=212561#p212561"><![CDATA[
If I ever rewrote it I would probably use 3 frame resolution instead of 4. I didn't know much about FT music back then and it turns out that 3 speed is common and useful.<br /><br />You can sometimes fake faster speed with arpeggio sequences, but that's a pain.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=7486">pubby</a> — Sun Jan 28, 2018 6:24 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[FrankenGraphics]]></name></author>
<updated>2018-01-28T18:05:12-07:00</updated>
<published>2018-01-28T18:05:12-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=16111&amp;p=212559#p212559</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=16111&amp;p=212559#p212559"/>
<title type="html"><![CDATA[Re: A constant-cycle music engine]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=16111&amp;p=212559#p212559"><![CDATA[
Division of workload across frames - that ought to be a good technique for any future driver aspiring to drive INL:s expansion audio project. More channels = more burden (and potentially more data, depending on how the extra channels are facilitated).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=7508">FrankenGraphics</a> — Sun Jan 28, 2018 6:05 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2018-01-28T18:02:51-07:00</updated>
<published>2018-01-28T18:02:51-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=16111&amp;p=212558#p212558</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=16111&amp;p=212558#p212558"/>
<title type="html"><![CDATA[Re: A constant-cycle music engine]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=16111&amp;p=212558#p212558"><![CDATA[
<div class="quotetitle">pubby wrote:</div><div class="quotecontent"><br />The biggest optimization comes from dividing the work out across multiple frames. I divided it into 4, and well, that's why it's 4x faster than famitone.<br /></div><br />I've considered doing some of that in my own engine, checking for loop commands during downtime on frames that are not the start of a row. But to compensate for the lack of Sxx and Gxx, someone might need to use speed 3 to get (say) thirty-second-note resolution at 150 BPM. How would an engine that splits work over four frames cope with speed 3?<br /><br />Also <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">throw std::runtime_error&#40;&quot;pattern size not multiple of 8&quot;&#41;;</tt> would blow up on the 36-row patterns of the 2 AM theme in <a href="https://forums.nesdev.com/viewtopic.php?p=212394#p212394" class="postlink">the FamiTracker version of the <em>Thwaite</em> soundtrack</a>, which is in 9/8 time.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Sun Jan 28, 2018 6:02 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[pubby]]></name></author>
<updated>2018-01-28T17:35:59-07:00</updated>
<published>2018-01-28T17:35:59-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=16111&amp;p=212557#p212557</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=16111&amp;p=212557#p212557"/>
<title type="html"><![CDATA[Re: A constant-cycle music engine]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=16111&amp;p=212557#p212557"><![CDATA[
<div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />this piece of BGM was written with the intention to comply with your driver, just thought i'd let you know.<br /></div><br />Cool! That sounds really, really good.<br /><br /><div class="quotetitle">GradualGames wrote:</div><div class="quotecontent"><br />:shock: Well, this is humbling! By the time ggsound burns 760 cycles, it has just had its coffee and is still waking up in the morning. Ah, time to actually make sounds now! <img src="http://forums.nesdev.com/images/smilies/icon_lol.gif" alt=":lol:" title="Laughing" /> I can really learn something from this code. Thanks for sharing.<br /></div><br />The biggest optimization comes from dividing the work out across multiple frames. I divided it into 4, and well, that's why it's 4x faster than famitone.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=7486">pubby</a> — Sun Jan 28, 2018 5:35 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2018-01-28T09:33:39-07:00</updated>
<published>2018-01-28T09:33:39-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=16111&amp;p=212504#p212504</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=16111&amp;p=212504#p212504"/>
<title type="html"><![CDATA[Re: A constant-cycle music engine]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=16111&amp;p=212504#p212504"><![CDATA[
Feel free to mention anything pertinent in the <a href="https://wiki.nesdev.com/w/index.php/Audio_drivers#Penguin" class="postlink">engine's entry in the wiki's list of music engines</a>.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Sun Jan 28, 2018 9:33 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[GradualGames]]></name></author>
<updated>2018-01-28T08:43:37-07:00</updated>
<published>2018-01-28T08:43:37-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=16111&amp;p=212502#p212502</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=16111&amp;p=212502#p212502"/>
<title type="html"><![CDATA[Re: A constant-cycle music engine]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=16111&amp;p=212502#p212502"><![CDATA[
<img src="http://forums.nesdev.com/images/smilies/icon_eek.gif" alt=":shock:" title="Shocked" /> Well, this is humbling! By the time ggsound burns 760 cycles, it has just had its coffee and is still waking up in the morning. Ah, time to actually make sounds now! <img src="http://forums.nesdev.com/images/smilies/icon_lol.gif" alt=":lol:" title="Laughing" /> I can really learn something from this code. Thanks for sharing.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3735">GradualGames</a> — Sun Jan 28, 2018 8:43 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[FrankenGraphics]]></name></author>
<updated>2018-01-28T13:32:09-07:00</updated>
<published>2018-01-28T06:57:00-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=16111&amp;p=212500#p212500</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=16111&amp;p=212500#p212500"/>
<title type="html"><![CDATA[Re: A constant-cycle music engine]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=16111&amp;p=212500#p212500"><![CDATA[
<a href="https://frankengraphics.com/2017/08/07/project-obituary-t-rex-rider/" class="postlink">this</a> piece of BGM was written with the intention to comply with your driver, just thought i'd let you know. <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" /> . Sadly, the mini game got shelved indefinitely as elseyf needed to tend to other things. It is meant to use the cycle constancy to reliably time a few scroll splits without irq support.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=7508">FrankenGraphics</a> — Sun Jan 28, 2018 6:57 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[pubby]]></name></author>
<updated>2018-01-28T00:51:52-07:00</updated>
<published>2018-01-28T00:51:52-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=16111&amp;p=212495#p212495</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=16111&amp;p=212495#p212495"/>
<title type="html"><![CDATA[Re: A constant-cycle music engine]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=16111&amp;p=212495#p212495"><![CDATA[
I finally got around to using this, and found a few bugs along the way. The repo has been updated.<br /><br />I forgot to mention, but it does support the full range of pitches and duty cycles, which Famitone does not. The ROM usage is pretty bad though; about 2x that of Famitone. Maybe one day I'll optimize it better.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=7486">pubby</a> — Sun Jan 28, 2018 12:51 am</p><hr />
]]></content>
</entry>
</feed>