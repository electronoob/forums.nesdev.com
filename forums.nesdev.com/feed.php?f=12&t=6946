<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=12&amp;t=6946" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2010-09-10T03:44:08-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=12&amp;t=6946</id>
<entry>
<author><name><![CDATA[artakserkso]]></name></author>
<updated>2010-09-10T03:44:08-07:00</updated>
<published>2010-09-10T03:44:08-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6946&amp;p=67426#p67426</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6946&amp;p=67426#p67426"/>
<title type="html"><![CDATA[n00b SNESdev questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6946&amp;p=67426#p67426"><![CDATA[
Thanks a lot for the inside info, byuu, that's always great to hear!<br /><br />I hope some day the issues you mentioned get sorted out.<br /><br />By the way, bsnes is fantastic. It really helps when I have to test my code. I absolutely adore the debugger. Without the memory editor, I'm completely certain I'd never be able to understand why my code fails at first.<br /><br />Keep up the good work!<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4096">artakserkso</a> — Fri Sep 10, 2010 3:44 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[byuu]]></name></author>
<updated>2010-09-09T18:28:15-07:00</updated>
<published>2010-09-09T18:28:15-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6946&amp;p=67416#p67416</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6946&amp;p=67416#p67416"/>
<title type="html"><![CDATA[n00b SNESdev questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6946&amp;p=67416#p67416"><![CDATA[
<div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />In bsnes, however, pressing and holding Right only moves him once and tapping quickly really does move him as many times as I tap (this behaviour is what I would expect and like).<br /></div><br /><br />You mean it works differently on real hardware?<br /><br />Yeah, that's most likely auto joypad polling. It strobes the controller between V=225 to V=227, bit-by-bit. But unfortunately nobody knows how that strobe works. blargg looked into the timing for me, but it turns out to be ridiculously complex.<br /><br />At the moment, I do all the polling at V=227. So if you read at V=225 with that on, you're basically getting the previous frames' completed state, whereas on the real thing you'd get weird data back.<br /><br />There's a small number of things even I can't do yet:<br />- auto joypad polling<br />- CPU revision 1 HDMA&lt;&gt;DMA conflict crashing<br />- CPU&lt;&gt;SMP bus conflict issues<br />- CGRAM/OAM writes mid-scanline going to the wrong addresses<br />- SMP test register has two timing bits, and r1 has a rare timer glitch<br />- DSP has a mute pulse, not an instant mute<br />- initial memory states are not 'randomized' like the real thing<br />- PPU doesn't always cache registers at the right times for mid-scanline writes<br /><br />Outside of those issues, and bugs we don't even know about yet, it should be perfect.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=375">byuu</a> — Thu Sep 09, 2010 6:28 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[artakserkso]]></name></author>
<updated>2010-09-08T08:49:07-07:00</updated>
<published>2010-09-08T08:49:07-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6946&amp;p=67381#p67381</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6946&amp;p=67381#p67381"/>
<title type="html"><![CDATA[n00b SNESdev questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6946&amp;p=67381#p67381"><![CDATA[
Ah, right... You only need to set bit 0 of $4200 once. Noted.<br /><br />Also, I already had the wait for joypad stuff. But I accidentally put rep #$30 after the check, which probably meant I waited too long from when the joypad was ready to actually reading it.<br /><br />Thanks, tepples, it now works as it should!<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4096">artakserkso</a> — Wed Sep 08, 2010 8:49 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2010-09-08T08:06:18-07:00</updated>
<published>2010-09-08T08:06:18-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6946&amp;p=67378#p67378</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6946&amp;p=67378#p67378"/>
<title type="html"><![CDATA[n00b SNESdev questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6946&amp;p=67378#p67378"><![CDATA[
If you enable automatic joypad reading (bit 0 of $4200 = 1), it takes about three scanlines after vertical blank for the bits of $4218-$421F to settle. So do your DMA transfers to VRAM and wait for the controller reads to finish (that is, wait for bit 0 of $4212 to become 0) before you read them.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Wed Sep 08, 2010 8:06 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[artakserkso]]></name></author>
<updated>2010-09-08T07:38:39-07:00</updated>
<published>2010-09-08T07:38:39-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6946&amp;p=67376#p67376</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6946&amp;p=67376#p67376"/>
<title type="html"><![CDATA[n00b SNESdev questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6946&amp;p=67376#p67376"><![CDATA[
I knew it was something ridiculous, but this...  <img src="http://forums.nesdev.com/images/smilies/icon_eek.gif" alt=":shock:" title="Shocked" /> <br /><br />Thanks, mic_!<br /><br />I have to be more careful with the P reg...<br /><br />Btw, Mario moves a bit differently than I would have expected him to. If I tap Right fairly quickly (without trying too much), but at constant speed, Mario only moves once every two taps. Also, when I press and hold Right, he moves every half-second or so.<br /><br />In bsnes, however, pressing and holding Right only moves him once and tapping quickly really does move him as many times as I tap (this behaviour is what I would expect and like). Guess that must have something to do with cycles and my taking care of VBlank/the Joypad routine improperly.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4096">artakserkso</a> — Wed Sep 08, 2010 7:38 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[mic_]]></name></author>
<updated>2010-09-08T05:41:47-07:00</updated>
<published>2010-09-08T05:41:47-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6946&amp;p=67369#p67369</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6946&amp;p=67369#p67369"/>
<title type="html"><![CDATA[n00b SNESdev questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6946&amp;p=67369#p67369"><![CDATA[
I didn't do a full analysis so there may be other problems as well, but this:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">Joypad:<br />   php<br />   rep #$30<br />   lda $4212<br />   and #$01<br />   beq Joypad <br /></div><br />does not seem like a good idea, since you could end up trashing the stack completely by having the PHP instruction inside the loop.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=1181">mic_</a> — Wed Sep 08, 2010 5:41 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[artakserkso]]></name></author>
<updated>2010-09-08T05:01:43-07:00</updated>
<published>2010-09-08T05:01:43-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6946&amp;p=67367#p67367</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6946&amp;p=67367#p67367"/>
<title type="html"><![CDATA[n00b SNESdev questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6946&amp;p=67367#p67367"><![CDATA[
Okay, here's some code I threw together with help of Bazz's tutorial (available <a href="http://wiki.superfamicom.org/snes/show/HomePage" class="postlink">here</a>). In bsnes it works fine, so I thought it should work on the SNES PowerPak after a quick ucon64 -padn=524288. It doesn't.<br /><br />The point is showing a Mario sprite in the middle of the screen and doing nothing until Right on the D-pad is pressed. That's when the Mario sprite should do... Guess what! <img src="http://forums.nesdev.com/images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /><br /><br />So far I've had no trouble with padding something small/homebrew for the PowerPak and getting it to run (for example, when I had no joypad code and only wanted to put Mario on screen).<br /><br />This time Mario either pops up on screen, does nothing when I press anything and after a while <em>dissapears</em> off screen. Huh?! Sometimes when I reset or recopy the code from CF, he doesn't appear on screen at all. I'm very puzzled by all this.<br /><br />Anyway, here's the code. Also, any good programming tips I might be able to use are highly appreciated. Sorry for the code being messy as all hell.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">.INCLUDE &quot;header.inc&quot;<br />.INCLUDE &quot;initsnes.asm&quot;<br /><br />.MACRO LoadPalette      ;DMA transfers a palette to CGRAM &#40;A:8b,XY:16b&#41;<br />   lda #\2              ;args: 24b source, 8b dest, 8b number of colors<br />   sta $2121<br />   lda #:\1<br />   ldx #\1<br />   ldy #&#40;\3*2&#41;<br />   jsr DMAPalette<br />.ENDM<br /><br />.MACRO LoadBlockToVRAM      ;DMA transfers a block to VRAM &#40;A:8b,XY:16b&#41;<br />   ldx #\2                  ;args: 24b source, 16b dest, 8b size in bytes<br />   stx $2116<br />   lda #:\1<br />   ldx #\1<br />   ldy #\3<br />   jsr LoadVRAM<br />.ENDM<br /><br />.BANK 0 SLOT 0<br />.ORG 0<br /><br /><br />.ENUM $0002<br />Joy1Raw     DW      ; Holder of RAW joypad data from register &#40;from last frame&#41;<br />Joy2Raw     DW<br /><br />Joy1Press   DW      ; Contains only pressed buttons &#40;not held down&#41;<br />Joy2Press   DW<br /><br />Joy1Held    DW      ; Contains only buttons that are Held<br />Joy2Held    DW<br /><br /> .ENDE<br /><br />   <br />.SECTION &quot;Main&quot;<br />   <br />Start:<br />   InitSNES<br />   lda #$80<br />   sta $4200<br />   lda #$80                                 ;don't increment VRAM address until written to $2119<br />   sta $2115                                ;&#40;as opposed to $2118&#41;<br />   LoadPalette SprPal, 128, 16              ;sprite palettes start at 128<br />   LoadBlockToVRAM Sprite, $0000, $0800<br />   jsr SpriteInit<br />   lda #&#40;256/2-16&#41;<br />   sta $0000<br />   lda #&#40;224/2-16&#41;<br />   sta $0001<br />   lda #%01010100<br />   sta $0200<br />   jsr SetupVideo<br />   <br />loop:<br />   wai<br />   lda Joy1Press+1<br />   and #$01<br />   beq loop<br />   inc $0000<br />   inc $0000<br />    jmp loop<br /><br />SetupVideo:<br />   php<br />   rep #$10<br />   sep #$20<br />   stz $2102<br />   stz $2103<br />   ldy #$0400<br />   sty $4300<br />   stz $4302<br />   stz $4303<br />   lda #$7E<br />   sta $4304<br />   ldy #$0220<br />   sty $4305<br />   lda #$01<br />   sta $420B<br />   lda #%10100000<br />   sta $2101<br />   lda #%00010000<br />   sta $212C<br />   lda #$0F<br />   sta $2100<br />   plp<br />   rts<br /><br />LoadVRAM:         ;initiates DMA transfer to VRAM<br />   php<br />   stx $4302<br />   sta $4304<br />   sty $4305<br />   lda #$01<br />   sta $4300      ;first write to $2118, then $2119, then $2118...<br />   lda #$18<br />   sta $4301<br />   lda #$01<br />   sta $420B<br />   plp<br />   rts<br />   <br />DMAPalette:       ;initiates DMA transfer to CGRAM<br />   php<br />   stx $4302<br />   sta $4304<br />   sty $4305<br />   stz $4300      ;only write to $2122<br />   lda #$22<br />   sta $4301<br />   lda #$01<br />   sta $420B<br />   plp<br />   rts<br /><br />SpriteInit:       ;move all sprites off screen<br />   php<br />   rep #$30<br />   ldx #$0000<br />   lda #$01<br />_offscreen:<br />   sta $0000,x<br />   inx<br />   inx<br />   inx<br />   inx<br />   cpx #$0200<br />   bne _offscreen<br /><br />   lda #$5555<br />   ldx #$0000<br />_xsmb:<br />   sta $0200,x<br />   inx<br />   inx<br />   cpx #$0020<br />   bne _xsmb<br />   plp<br />   rts<br />   <br />VBlank:<br />   php<br />   jsr Joypad<br />   stz $2102<br />   stz $2103<br />   sep #$20<br />   lda $0000<br />   sta $2104<br />   lda $0001<br />   sta $2104<br />   plp<br />   rti<br /><br />Joypad:<br />   php<br />   rep #$30<br />   lda $4212<br />   and #$01<br />   beq Joypad<br />   lda #$81<br />   sta $4200<br />   ldx Joy1Raw<br />   lda $4218<br />   sta Joy1Raw<br />   txa<br />   eor Joy1Raw<br />   and Joy1Raw<br />   sta Joy1Press<br />   txa<br />   and Joy1Raw<br />   sta Joy1Held<br />   plp<br />   rts   <br />.ENDS<br />   <br />.BANK 1 SLOT 0<br />.ORG 0<br />.SECTION &quot;CharacterData&quot;<br />Sprite:<br />   .INCBIN &quot;biker.pic&quot;<br /><br />SprPal:<br />   .INCBIN &quot;biker.clr&quot;<br />.ENDS<br /></div><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4096">artakserkso</a> — Wed Sep 08, 2010 5:01 am</p><hr />
]]></content>
</entry>
</feed>