<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Seeing as so many of you like C</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Seeing as so many of you like C</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=17621">http://forums.nesdev.com/viewtopic.php?f=2&amp;t=17621</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Oziphantom</b> [ Fri Aug 03, 2018 6:33 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Seeing as so many of you like C</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />This might be of interest, it seems to be a &quot;lite&quot; C and hence make more optimal code, not tested it my self though <!-- m --><a class="postlink" href="https://github.com/RevCurtisP/C02">https://github.com/RevCurtisP/C02</a><!-- m -->

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>gauauu</b> [ Fri Aug 03, 2018 7:14 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Seeing as so many of you like C</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Thanks for pointing that out, it look intriguing.  The idea of an almost-but-not-quite-C language makes a lot of sense for the 6502, and the fact that there's a working Atari 2600 example demonstrates how you can mix it with assembly for the critical parts.<br /><br />I'm not sure it's mature enough that I'd want to use it for anything at this point, but I'm definitely interested in keeping an eye on it.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Fri Aug 03, 2018 7:36 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Seeing as so many of you like C</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />First off, I'd recommend that everyone with a GitHub account add a &quot;thumbs-up&quot; reaction to <a href="https://github.com/RevCurtisP/C02/issues/6" class="postlink">License (#6)</a>, reported by DarkiStar. Once that's resolved, I might have time to try it out.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Banshaku</b> [ Fri Aug 03, 2018 8:05 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Seeing as so many of you like C</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I didn't know about that one, I will keep an eye on it. Thanks!<br /><br />For now I won't use it right away since my older projects that I'm testing C with are ca65 based so it may not be the right time to try it. Maybe for something new, it may be worth experimenting with it.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Fri Aug 03, 2018 11:09 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Seeing as so many of you like C</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />It's both interesting and disappointing at the same time. Interesting because it's nice to see people attempt stuff like this. Disappointing because it seems extremely limited. Just take a look at this: <!-- m --><a class="postlink" href="https://github.com/RevCurtisP/C02/blob/master/doc/c02vsC.txt">https://github.com/RevCurtisP/C02/blob/ ... c02vsC.txt</a><!-- m --> It seems kind of like a beefed up assembler.<br /><br />I'd love to see a language that would have a convenient way to handle 16-bit/24-bit math, and would provide seamless support for SoA (structure of arrays) layouts.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>dougeff</b> [ Fri Aug 03, 2018 11:32 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Seeing as so many of you like C</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />That is disappointing.<br /><br />cc65 would be much faster if the c stack was fixed to 1 page, and the stack pointer was 1 byte.<br /><br />Then getting a parameter would work like...<br />ldy sp<br />lda stack, y<br /><br />rather than indirect addresses. and 16 bit stack / stack pointer.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>DRW</b> [ Sat Aug 04, 2018 7:00 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Seeing as so many of you like C</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />One thing that this project is definitely missing is <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">#define</tt>.<br /><br />When you have more than 50 different character types in your game and each of them has a huge bunch of fixed properties, then you can easily do this in C:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">#define ALL_CHARACTERS(postfix)\<br />&nbsp; &nbsp; Hero##postfix,\<br />&nbsp; &nbsp; Monster##postfix,\<br />&nbsp; &nbsp; Boss##postfix</div><br />etc.<br /><br />Then you do:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">enum<br />{<br />&nbsp; &nbsp; ALL_CHARACTERS(Type)<br />};</div><br /><br />And for the properties, you can do this:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">#define HeroCanWalkThroughWalls false<br />#define MonsterCanWalkThroughWalls false<br />#define BossCanWalkThroughWalls true<br /><br />const byte CanWalkThorughWallsProperties&#91;&#93; =<br />{<br />&nbsp; &nbsp; ALL_CHARACTERS(CanWalkThroughWalls)<br />};</div><br /><br />Now, I can be sure that something like this:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">if (CanWalkThorughWallsProperties&#91;CurrentCharacter.Type&#93;)</div><br />will always be correct and that I can later shuffle around the order of the characters in any way I like without having to manually update a bazillion property arrays.<br />Also, when I add a new character, I simply put it into the macro and let the compiler tell me where it's missing some property names:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">#define ALL_CHARACTERS(postfix)\<br />&nbsp; &nbsp; Hero##postfix,\<br />&nbsp; &nbsp; Companion##postfix,\<br />&nbsp; &nbsp; Monster##postfix,\<br />&nbsp; &nbsp; Boss##postfix</div><br />--&gt;<br />Undefined symbol: CompanionCanWalkThroughWalls<br />Undefined symbol: CompanionMaxEnergy<br />Undefined symbol: CompanionMetaSprites<br />etc.<br /><br />So, I can add these things piece by piece and don't have to search around manually, hoping that I haven't forgotten anything.<br /><br /><div class="quotetitle">dougeff wrote:</div><div class="quotecontent">That is disappointing.<br /><br />cc65 would be much faster if the c stack was fixed to 1 page, and the stack pointer was 1 byte.<br /><br />Then getting a parameter would work like...<br />ldy sp<br />lda stack, y<br /><br />rather than indirect addresses. and 16 bit stack / stack pointer.</div><br />I would suggest not to use local variables and parameters at all when using C for an NES project, unless it's not time-critical and you have enough ROM space.<br />Again a situation where macros come in handy:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">byte DoSomethingParamaterA;<br />byte DoSomethingParamaterB;<br /><br />void __fastcall__ DoSomething_(void);<br /><br />#define DoSomething(a, b)\<br />do\<br />{\<br />&nbsp; &nbsp; DoSomethingParameterA = a;\<br />&nbsp; &nbsp; DoSomethingParameterB = b;\<br />&nbsp; &nbsp; DoSomething_();\<br />}\<br />while (false)</div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>gauauu</b> [ Sat Aug 04, 2018 9:18 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Seeing as so many of you like C</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Missing #define is pretty terrible. That said, it would be really easy to replace that functionality with a custom pre-processor written in Python.<br /><br />That's assuming the core is good enough to be worth making that effort, which I'm not sure is the case here.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>pubby</b> [ Sat Aug 04, 2018 9:19 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Seeing as so many of you like C</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Can't you just run the source through the C processor first and then compile it?<br /><br />With GCC it's the -E flag, for example.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>gauauu</b> [ Sat Aug 04, 2018 9:46 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Seeing as so many of you like C</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">pubby wrote:</div><div class="quotecontent">Can't you just run the source through the C processor first and then compile it?<br /><br />With GCC it's the -E flag, for example.</div><br /><br />Yep, good call.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>