<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - CPU-test: cpu_dummy_writes [DONE]</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">CPU-test: cpu_dummy_writes [DONE]</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=3&amp;t=8738">http://forums.nesdev.com/viewtopic.php?f=3&amp;t=8738</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>3</strong> of <strong>3</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>crudelios</b> [ Thu Mar 29, 2012 12:26 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Nice going <img src="./images/smilies/icon_wink.gif" alt=";)" title="Wink" /> Incidentally, the test_cpu_exec_space_apu.nes error was indeed an open bus error.
<br />
<br />Good catch!

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bisqwit</b> [ Thu Mar 29, 2012 12:31 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">crudelios wrote:</div><div class="quotecontent">Incidentally, the test_cpu_exec_space_apu.nes error was indeed an open bus error.<br />Good catch!</div>
<br />That was the point of the test :-) It verifies that 1) the CPU can execute code from any location that it can address and that 2) data read from write-only locations is what was last placed on the bus.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Thu Mar 29, 2012 1:17 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bisqwit wrote:</div><div class="quotecontent"><div class="quotetitle">crudelios wrote:</div><div class="quotecontent">Turns out it was a really stupid bug (aren't they all?), I was allowing writes to the PRG ROM in mapper 0.</div><br />Hehe. Now I added a subtest that first verifies that ROM is not writable <img src="./images/smilies/icon_smile.gif" alt=":-)" title="Smile" /></div>
<br />Suggested error message if ROM is writable:
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">IT IS A SERIOUS CRIME<br />TO COPY VIDEO GAMES.</div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>infiniteneslives</b> [ Mon Apr 02, 2012 12:52 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bisqwit wrote:</div><div class="quotecontent">I will leave the OAM test like that though; I don't think I can improve it in any way except by adding more opcodes into the test or by making the opcode tests not depend on earlier tests, as is in the PPU memory version.<br /></div>
<br />
<br />I was curious about all this and was out of town last week and unable to test it out on the NESDEV1.  But some of this is a little over my head, I grasp the basics of whats going on with the open bus and double writes and the opcodes and such.  I'm a bit unclear with what/howl your testing everything (I'm not asking you to explain, just wanted to preface with that in efforts to not sound too stupid)
<br />
<br />Anyways I figured since the powerpak Tepples tested with has open bus issues I would try my cart out that holds bus capacitance well.  I did get some similar results to tepples on the OAM test but heres a breakdown:
<br />
<br />3418 failed, #2 failed:    First power up and a few other resets.
<br />127 failed, 42 opcodes failed, #2 failed:  atleast 3 times.
<br />73 failed, #2 failed:  once
<br />OK: 42 opcodes failed, #5 failed: atleast twice, I didn't see this one listed from tepples' results.
<br />a few others one timers: 102 fail, 113 fail, 112 fail  all with #2 fail on the last line.
<br />
<br />Anyways if this is all useless info sorry for wasting your time.  I just thought getting a couple OK's that tepples hadn't reported in the thread may have been new info.  Looks like I had 42 opcodes fail eachtime that it actually got to the point of performing that portion of the test.  Everything looked good with the ppu_mem test and had consistent results everytime.
<br />
<br />Let me know if anything is of value and you'd like more details I can retest with video if needed.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bisqwit</b> [ Mon Apr 02, 2012 1:13 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bisqwit wrote:</div><div class="quotecontent">I will leave the OAM test like that though; I don't think I can improve it in any way except by adding more opcodes into the test or by making the opcode tests not depend on earlier tests, as is in the PPU memory version.</div><br />Which, I later actually did.<br /><br /><div class="quotetitle">infiniteneslives wrote:</div><div class="quotecontent">I'm a bit unclear with what/howl your testing everything (I'm not asking you to explain, just wanted to preface with that in efforts to not sound too stupid)</div><br />Just for the sake of documentation, I will explain it anyway.<br /><br />The OAM version writes a predictable pattern into the PPU's sprite memory (the OAM), and does a series of reads to determine whether the content that is read from the memory actually is what was earlier written there. Aside from just comparing read data to written data, it also tests whether the OAM memory pointer (set by $2003) is properly incremented with writes and not incremented with reads. The initial filling of the memory is done byte by byte, setting the address separately each time.<br /><br />In the actual test, it subjects the OAM memory ($2004) to a number of read-modify-write opcodes by the CPU, such as INC, DEC or ROR. Those opcodes are supposed to first issue a read from the affected address, then write back a value, and write back another value. The first write should go to the same OAM slot that was read, but the second write should go into the next OAM slot. After executing the opcode, the program reads the OAM to determine which contents were written into which slots.<br />This is repeated for all read-modify-write opcodes that can adress 16-bit addresses, both official and unofficial ones.<br /><br /><br />The PPU test begins with an open bus test: It first writes a random byte (with some bits cleared for sanity) into each address between $2000..$2007, and reads a byte from $2002 and $2007, and after each read or write, attempts reading $2000, $2001, $2003, $2005 and $2006. The value read should show retain / some of the bits that were written / read previously. Each test (50 of them) is repeated 15 times, for a total of 750 tests, and the number of failures is shown. A "0" indicates it never failed, and "F" indicates it failed all 15 times.<br />Then it verifies that basic $2005/$2006/$2007 access works as supposed to, i.e. that there is an one-byte buffer in reads, and that the memory address gets properly incremented when supposed to, and that there's a flipflop for the high/low address bytes, and so on.<br /><br />The PPU test populates the second name/attribute table (addresses $2400-$27FF) with predictable contents.  The first name/attribute table is reserved for the console that is shown on the screen; it is not touched. This memory region was also chosen in order to not depend on VRAM. The initial filling of the memory is done byte by byte, setting the address separately each time.<br /><br />In the actual test, it subjects the PPU memory ADDRESS register ($2006) to a number of read-modify-write opcodes by the CPU, such as INC, DEC or ROR. Those opcodes are supposed to first issue a read from the affected address, then write back a value, and write back another value.  If the CPU works as supposed to, two writes are issued into $2006. Otherwise, only one write is issued. By reading from $2007 the program exactly determine what the CPU wrote into $2006. It was previously verified that a single write to $2006 will not affect the address used by $2007; two writes are needed for that.<br />This is repeated for all read-modify-write opcodes that can adress 16-bit addresses, both official and unofficial ones.<br /><br /><br /><div class="quotetitle">infiniteneslives wrote:</div><div class="quotecontent">Anyways if this is all useless info sorry for wasting your time. </div>
<br />Not at all; yours was the time wasted here. Thank you for the effort.
<br />But this just furthermore concludes that attempting to read the OAM is unrealiable at its best. When we eventually get a PPU delayered and traced, perhaps we will get our answers as to why the case is so.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>infiniteneslives</b> [ Mon Apr 02, 2012 8:28 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Thanks for the explanation, it all makes a lot more sense now.
<br />
<br /><div class="quotetitle">Bisqwit wrote:</div><div class="quotecontent">Not at all; yours was the time wasted here. Thank you for the effort.<br />But this just furthermore concludes that attempting to read the OAM is unrealiable at its best. When we eventually get a PPU delayered and traced, perhaps we will get our answers as to why the case is so.</div>
<br />
<br />Oh no, time was spent learning not wasted <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>3</strong> of <strong>3</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>