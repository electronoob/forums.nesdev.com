<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - NES Programming Tutorial : Multiple Sprites</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">NES Programming Tutorial : Multiple Sprites</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=10&amp;t=15646">http://forums.nesdev.com/viewtopic.php?f=10&amp;t=15646</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>FARID</b> [ Sat Mar 11, 2017 11:24 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>NES Programming Tutorial : Multiple Sprites</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="codetitle"><b>Code:</b></div><div class="codecontent">;NES Programming Tutorial<br />;Level 8 : Multiple Sprites<br />;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;<br />;Constants<br />;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;<br />;Variables<br />L_byte&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;= $0000<br />H_byte&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;= $0001<br />bg_X_pos&nbsp; &nbsp; &nbsp; &nbsp;= $0002<br />bg_Y_pos&nbsp; &nbsp; &nbsp; &nbsp;= $0003<br />NMI_index&nbsp; &nbsp; &nbsp; = $0004<br /><br />spt1_Y&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;= $0200<br />spt1_tile&nbsp; &nbsp; &nbsp; = $0201<br />spt1_att&nbsp; &nbsp; &nbsp; &nbsp;= $0202<br />spt1_X&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;= $0203<br /><br />spt2_Y&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;= $0204<br />spt2_tile&nbsp; &nbsp; &nbsp; = $0205<br />spt2_att&nbsp; &nbsp; &nbsp; &nbsp;= $0206<br />spt2_X&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;= $0207<br /><br />spt3_Y&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;= $0208<br />spt3_tile&nbsp; &nbsp; &nbsp; = $0209<br />spt3_att&nbsp; &nbsp; &nbsp; &nbsp;= $020A<br />spt3_X&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;= $020B<br /><br />spt4_Y&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;= $020C<br />spt4_tile&nbsp; &nbsp; &nbsp; = $020D<br />spt4_att&nbsp; &nbsp; &nbsp; &nbsp;= $020E<br />spt4_X&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;= $020F<br /><br />spt5_Y&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;= $0210<br />spt5_tile&nbsp; &nbsp; &nbsp; = $0211<br />spt5_att&nbsp; &nbsp; &nbsp; &nbsp;= $0212<br />spt5_X&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;= $0213<br /><br />spt6_Y&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;= $0214<br />spt6_tile&nbsp; &nbsp; &nbsp; = $0215<br />spt6_att&nbsp; &nbsp; &nbsp; &nbsp;= $0216<br />spt6_X&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;= $0217<br /><br />spt7_Y&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;= $0218<br />spt7_tile&nbsp; &nbsp; &nbsp; = $0219<br />spt7_att&nbsp; &nbsp; &nbsp; &nbsp;= $021A<br />spt7_X&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;= $021B<br /><br />spt8_Y&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;= $021C<br />spt8_tile&nbsp; &nbsp; &nbsp; = $021D<br />spt8_att&nbsp; &nbsp; &nbsp; &nbsp;= $021E<br />spt8_X&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;= $021F<br /><br />spt9_Y&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;= $0220<br />spt9_tile&nbsp; &nbsp; &nbsp; = $0221<br />spt9_att&nbsp; &nbsp; &nbsp; &nbsp;= $0222<br />spt9_X&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;= $0223<br /><br />;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;<br />;iNES header data (16bytes)<br />;32KB PRG + 8KB CHR + NROM-256 + Vertical Mirroring<br />&nbsp; .db $4E,$45,$53,$1A,$02,$01,$01,$00<br />&nbsp; .db $00,$00,$00,$00,$00,$00,$00,$00<br />;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;<br />;PRG codes $8000 ~ $FFFF (32KB)<br />&nbsp; .base $8000<br /><br />RESET:<br />&nbsp; &nbsp;SEI<br />&nbsp; &nbsp;CLD<br /><br />;Turn off NMI and rendering<br />&nbsp; &nbsp;LDA #%00000000<br />&nbsp; &nbsp;STA $2000<br />&nbsp; &nbsp;LDA #%00000000<br />&nbsp; &nbsp;STA $2001<br /><br />;PPU warm up<br />&nbsp; &nbsp;LDA $2002<br />vBlank_wait1:<br />&nbsp; &nbsp;BIT $2002<br />&nbsp; &nbsp;BPL vBlank_wait1<br />vBlank_wait2:<br />&nbsp; &nbsp;BIT $2002<br />&nbsp; &nbsp;BPL vBlank_wait2<br /><br />;Clear RAM<br />&nbsp; &nbsp;LDA #$00<br />&nbsp; &nbsp;LDX #$00<br />clear_loop:<br />&nbsp; &nbsp;STA $0000, X<br />&nbsp; &nbsp;STA $0100, X<br />&nbsp; &nbsp;STA $0200, X<br />&nbsp; &nbsp;STA $0300, X<br />&nbsp; &nbsp;STA $0400, X<br />&nbsp; &nbsp;STA $0500, X<br />&nbsp; &nbsp;STA $0600, X<br />&nbsp; &nbsp;STA $0700, X<br />&nbsp; &nbsp;INX<br />&nbsp; &nbsp;CPX #$00<br />&nbsp; &nbsp;BNE clear_loop<br /><br />;Name table + Attribute<br />&nbsp; &nbsp;LDA $2002<br />&nbsp; &nbsp;LDA #$20<br />&nbsp; &nbsp;STA $2006<br />&nbsp; &nbsp;LDA #$00<br />&nbsp; &nbsp;STA $2006<br />&nbsp; &nbsp;LDA #&lt;nam_att<br />&nbsp; &nbsp;STA L_byte<br />&nbsp; &nbsp;LDA #&gt;nam_att<br />&nbsp; &nbsp;STA H_byte<br />&nbsp; &nbsp;LDX #$00<br />&nbsp; &nbsp;LDY #$00<br />nam_loop:<br />&nbsp; &nbsp;LDA ($00), Y<br />&nbsp; &nbsp;STA $2007<br />&nbsp; &nbsp;INY<br />&nbsp; &nbsp;CPY #$00<br />&nbsp; &nbsp;BNE nam_loop<br />&nbsp; &nbsp;INC H_byte<br />&nbsp; &nbsp;INX<br />&nbsp; &nbsp;CPX #$04<br />&nbsp; &nbsp;BNE nam_loop<br /><br />;Name table + Attribute 2<br />&nbsp; &nbsp;LDA $2002<br />&nbsp; &nbsp;LDA #$24<br />&nbsp; &nbsp;STA $2006<br />&nbsp; &nbsp;LDA #$00<br />&nbsp; &nbsp;STA $2006<br />&nbsp; &nbsp;LDA #&lt;nam_att_2<br />&nbsp; &nbsp;STA L_byte<br />&nbsp; &nbsp;LDA #&gt;nam_att_2<br />&nbsp; &nbsp;STA H_byte<br />&nbsp; &nbsp;LDX #$00<br />&nbsp; &nbsp;LDY #$00<br />nam_loop_2:<br />&nbsp; &nbsp;LDA ($00), Y<br />&nbsp; &nbsp;STA $2007<br />&nbsp; &nbsp;INY<br />&nbsp; &nbsp;CPY #$00<br />&nbsp; &nbsp;BNE nam_loop_2<br />&nbsp; &nbsp;INC H_byte<br />&nbsp; &nbsp;INX<br />&nbsp; &nbsp;CPX #$04<br />&nbsp; &nbsp;BNE nam_loop_2<br /><br />;Background color setup<br />&nbsp; &nbsp;LDA $2002<br />&nbsp; &nbsp;LDA #$3F<br />&nbsp; &nbsp;STA $2006<br />&nbsp; &nbsp;LDA #$00<br />&nbsp; &nbsp;STA $2006<br />&nbsp; &nbsp;LDX #$00<br />bg_pal_loop:<br />&nbsp; &nbsp;LDA bg_pal, X<br />&nbsp; &nbsp;STA $2007<br />&nbsp; &nbsp;INX<br />&nbsp; &nbsp;CPX #$10<br />&nbsp; &nbsp;BNE bg_pal_loop<br /><br />;Sprites color setup<br />&nbsp; &nbsp;LDA $2002<br />&nbsp; &nbsp;LDA #$3F<br />&nbsp; &nbsp;STA $2006<br />&nbsp; &nbsp;LDA #$10<br />&nbsp; &nbsp;STA $2006<br />&nbsp; &nbsp;LDX #$00<br />spt_pal_loop:<br />&nbsp; &nbsp;LDA spt_pal, X<br />&nbsp; &nbsp;STA $2007<br />&nbsp; &nbsp;INX<br />&nbsp; &nbsp;CPX #$10<br />&nbsp; &nbsp;BNE spt_pal_loop<br />&nbsp; <br />;Sprites data to ram<br />LoadSprites:<br />&nbsp; &nbsp;LDX #$00<br />LoadSpritesLoop:<br />&nbsp; &nbsp;LDA sprites, X<br />&nbsp; &nbsp;STA $0200, X<br />&nbsp; &nbsp;INX<br />&nbsp; &nbsp;CPX #$00<br />&nbsp; &nbsp;BNE LoadSpritesLoop<br />&nbsp; <br />;Reset Scroll<br />&nbsp; &nbsp;LDA #$00<br />&nbsp; &nbsp;STA $2005<br />&nbsp; &nbsp;LDA #$00<br />&nbsp; &nbsp;STA $2005<br />&nbsp; &nbsp;<br />;Turn on NMI and rendering<br />&nbsp; &nbsp;LDA #%10001000<br />&nbsp; &nbsp;STA $2000<br />&nbsp; &nbsp;LDA #%00011010<br />&nbsp; &nbsp;STA $2001<br /><br />;Infinite loop<br />Forever:<br /><br />;Move background<br />&nbsp; &nbsp;JSR vblank_wait<br />&nbsp; &nbsp;INC bg_X_pos<br />&nbsp; &nbsp;LDA bg_X_pos<br />&nbsp; &nbsp;STA $2005<br />&nbsp; &nbsp;LDA #$00<br />&nbsp; &nbsp;STA $2005<br /><br />;Give effect to sprites<br />&nbsp; &nbsp;INC spt6_Y<br />&nbsp; &nbsp;INC spt7_Y<br />&nbsp; &nbsp;INC spt8_Y<br />&nbsp; &nbsp;INC spt9_Y<br />&nbsp; &nbsp;<br />;Sprites data to OAM<br />&nbsp; &nbsp;JSR vblank_wait<br />&nbsp; &nbsp;LDA #$00<br />&nbsp; &nbsp;STA $2003<br />&nbsp; &nbsp;LDA #$02<br />&nbsp; &nbsp;STA $4014<br /><br />&nbsp; &nbsp;JMP Forever<br />;---------------------------;<br />vblank_wait:<br />&nbsp; &nbsp;LDA NMI_index<br />not_yet:<br />&nbsp; &nbsp;CMP NMI_index<br />&nbsp; &nbsp;BEQ not_yet<br />&nbsp; &nbsp;RTS&nbsp; &nbsp;<br />;---------------------------;<br />NMI:<br />&nbsp; &nbsp;INC NMI_index<br />&nbsp; &nbsp;RTI<br />;---------------------------; <br />IRQ:<br />&nbsp; &nbsp;RTI<br />;---------------------------;<br />nam_att:<br />&nbsp; .incbin &quot;mario_bg.nam&quot;<br /><br />nam_att_2:<br />&nbsp; .incbin &quot;mario_bg_2.nam&quot;<br /><br />bg_pal:<br />&nbsp; .incbin &quot;mario_bg.pal&quot;<br />&nbsp;<br />spt_pal:<br />&nbsp; .incbin &quot;mario_spt.pal&quot;<br /><br />sprites:<br />&nbsp; .incbin &quot;mario_spt.oam&quot;<br />;---------------------------;&nbsp; <br />&nbsp; .pad $FFFA,$FF&nbsp; <br />;Vectors<br />&nbsp; .org $FFFA<br />&nbsp; .dw NMI<br />&nbsp; .dw RESET<br />&nbsp; .dw IRQ<br />;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;<br />;CHR data $0000 ~ $1FFF (8KB)<br />&nbsp; .base $0000<br />&nbsp; .incbin &quot;mario_bg.chr&quot;<br />&nbsp; .incbin &quot;mario_spt.chr&quot;<br />&nbsp; .pad $2000,$FF<br /></div><br /><br />Output :<br /><br /><img src="http://s8.picofile.com/file/8289766100/20.PNG" alt="Image" /><br /><br /><br />Explanation :<br /><br />* Transferring 4-byte info of one sprite with $2003 and $2004 is ok, but it is slow for multiple sprites<br /><br />* There is a faster way to transfer multiple sprites data to OAM : Using $2003 and $4014<br /><br />* The data of sprites are stored in the RAM from $0200 to $02FF (256 Bytes)<br /><br />* Extract those data from &quot;Super Mario Bros. (W) [!].nes&quot; and save them as : mario_spt.oam<br /><br />* Attach it to the source code<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">sprites:<br />&nbsp; .incbin &quot;mario_spt.oam&quot;</div><br /><br />* We load the data of sprites into $0200 to $02FF<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">;Sprites data to ram<br />LoadSprites:<br />&nbsp; &nbsp;LDX #$00<br />LoadSpritesLoop:<br />&nbsp; &nbsp;LDA sprites, X<br />&nbsp; &nbsp;STA $0200, X<br />&nbsp; &nbsp;INX<br />&nbsp; &nbsp;CPX #$00<br />&nbsp; &nbsp;BNE LoadSpritesLoop</div><br /><br />* We set OAM memory address to $00 with $2003<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp;LDA #$00<br />&nbsp; &nbsp;STA $2003</div><br /><br />* We write $02 to $2014<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp;LDA #$02<br />&nbsp; &nbsp;STA $4014</div><br /><br />* We only write the High byte of the RAM address to $2014, the Low byte of the RAM is automatically adjusted to $00 and there is no need to declare it.<br /><br />* With this method a total of 256 bytes (info of 64 sprites) are transferred from RAM ($0200 ~ $02FF) to OAM memory<br /><br />* This method is called DMA. Need more info about it? Then read this : <a href="https://wiki.nesdev.com/w/index.php/PPU_OAM" class="postlink">PPU OAM</a><br /><br />* Inside the game engine loop we can change the info of sprites which are saved on the ram<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">;Give effect to sprites<br />&nbsp; &nbsp;INC spt6_Y<br />&nbsp; &nbsp;INC spt7_Y<br />&nbsp; &nbsp;INC spt8_Y<br />&nbsp; &nbsp;INC spt9_Y</div><br /><br />* In this code we increase the Y coordinate of mario sprite, so it seems mario is going down constantly<br /><br />/////////////////////////////////////////////////////////////////////////////////////////////////<br /><br />Exercise :<br /><br />Open mario_spt.oam with HxD and edit mario's data to become upside down.<br /><br />/////////////////////////////////////////////////////////////////////////////////////////////////<br /><br />Files :<br />asm6.exe<br />Assembler.bat<br />Game.asm<br />name.exe<br />Bg_Editor.bat<br />alleg42.dll<br />mario_bg.nam<br />mario_bg_2.nam<br />mario_bg.pal<br />mario_spt.pal<br />mario_spt.oam<br />mario_bg.chr<br />mario_spt.chr<br /><br />/////////////////////////////////////////////////////////////////////////////////////////////////<br /><br />Former Level : <a href="http://forums.nesdev.com/viewtopic.php?f=10&amp;t=15647" class="postlink">NES Programming Tutorial : Sprite</a><br />Next Level : <a href="http://forums.nesdev.com/viewtopic.php?f=10&amp;t=15645" class="postlink">NES Programming Tutorial : Using Joypad</a>

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>