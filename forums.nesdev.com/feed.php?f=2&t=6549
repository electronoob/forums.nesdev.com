<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=2&amp;t=6549" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2010-07-01T16:22:27-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=2&amp;t=6549</id>
<entry>
<author><name><![CDATA[Memblers]]></name></author>
<updated>2010-07-01T16:22:27-07:00</updated>
<published>2010-07-01T16:22:27-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6549&amp;p=63560#p63560</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6549&amp;p=63560#p63560"/>
<title type="html"><![CDATA[How RLE decompression to be done in a platformer?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6549&amp;p=63560#p63560"><![CDATA[
If you use method 1, definitely use a better decompression method.<br /><br />RLE is very helpful when loading on-the-fly, it's fast and simple to implement.. unless you want to scroll backwards.  I guess scrolling back could be doable still, but would make the compressed data larger and more complicated to access (unless someone has a good idea for an 'RLE rewind' hack).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=10">Memblers</a> — Thu Jul 01, 2010 4:22 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2010-07-01T08:09:23-07:00</updated>
<published>2010-07-01T08:09:23-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6549&amp;p=63535#p63535</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6549&amp;p=63535#p63535"/>
<title type="html"><![CDATA[How RLE decompression to be done in a platformer?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6549&amp;p=63535#p63535"><![CDATA[
You can pick a better kind of compression if you take into consideration the type of scrolling your game will have. Is your game a side scroller or does it scroll vertically as well? Does it scroll at all?<br /><br />If it doesn't scroll, things should be really simple, just compress each screen separately and decompress them to a RAM buffer before using. If it scrolls horizontally, you can still make it work by encoding each screen separately, but you'd need RAM buffers for two screens that you'd overwrite as the level scrolled.<br /><br />Vertical scrolling makes things more complex unless you have the RAM for 4 screen buffers, but that can be too much if you have only 2KB. So you might want to switch to a row-based approached to compression, where the screens would all be composed by a fixed number of rows and only the rows themselves would be RLE-compressed. That would slightly reduce the efficiency of the compression, but would give you random access to individual rows, allowing you to scroll vertically using the same 2 RAM maps as if you scrolled only horizontally.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Thu Jul 01, 2010 8:09 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2010-07-01T04:54:31-07:00</updated>
<published>2010-07-01T04:54:31-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6549&amp;p=63529#p63529</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6549&amp;p=63529#p63529"/>
<title type="html"><![CDATA[How RLE decompression to be done in a platformer?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6549&amp;p=63529#p63529"><![CDATA[
1) This method allows the greatest destructibility of the environment, which is why M.C. Kids and SMB3 use it. You usually need an 8 KiB PRG RAM at $6000 to do this. (But see <a href="http://nesdev.com/bbs/viewtopic.php?t=4706" class="postlink">this thread</a> for an alternate solution.)<br /><br />2) If you store a separate RLE state for each row of metatiles, and you scroll only one way (like SMB1, TMNT2, or TMNT3), you can use horizontal RLE. I have code demonstrating this technique if you want to see it. SMB1 does something similar with its object-based level encoding: An object (or "run") can be multiple rows tall, there can be four objects (one terrain and three others) active over any column, and everything is drawn on top of a plane of clouds and the like.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Thu Jul 01, 2010 4:54 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Nadia]]></name></author>
<updated>2010-07-01T03:04:28-07:00</updated>
<published>2010-07-01T03:04:28-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6549&amp;p=63525#p63525</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6549&amp;p=63525#p63525"/>
<title type="html"><![CDATA[How RLE decompression to be done in a platformer?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6549&amp;p=63525#p63525"><![CDATA[
In one of previous posts I read about the simple Run Length Encoding compression and a decompression routine. <br /><br />How should the RLE be used when it is supposed to decompress the map for a side scroller platform game? I can think of 2 options:<br /><br />1) Decompress the whole level into memory just before a level is about to begin. Scrolling then will just require to copy from this memory area to the nametable. This option will demand a lot of work RAM.<br /><br />2) Decompress the level data on the fly. i.e. Decompress the level data onto Name table whenever the need arise. Simple RLE will not help here I guess.<br /><br />Any other suggestions will be appreciated.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4104">Nadia</a> — Thu Jul 01, 2010 3:04 am</p><hr />
]]></content>
</entry>
</feed>