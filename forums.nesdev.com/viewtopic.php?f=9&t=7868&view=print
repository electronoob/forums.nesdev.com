<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Simple/cheap EEPROM-style NES cartridge interface.</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Simple/cheap EEPROM-style NES cartridge interface.</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=9&amp;t=7868">http://forums.nesdev.com/viewtopic.php?f=9&amp;t=7868</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>person</b> [ Thu Jun 16, 2011 1:38 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Simple/cheap EEPROM-style NES cartridge interface.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I have been thinking about getting a NES ROM dumper, but I just find the public alternatives like CopyNES way overpriced.
<br />
<br />I know that most solutions use huge arrays of I/O ports or a bunch of buffers and latches in combination with some micocontroller, but I don't have a microcontroller, and I don't want to learn another programming language just for this project. Because of this I set out to design my own interface, with the idea that it could easily be directly connected to a standard computer bus interface (like the old-fashioned ISA-bus).
<br />
<br />I came up with a design using two Nand gates, one Or gate and a 74LS145 bus-transceiver. It still needs an address decoder to be put on an ISA card, but it should at this point be possible to plug it into any EEPROM-interface with support for 64K*8 chips.
<br />
<br />The design should only theoretically work, unless the mapper chips are extremely timing-sensitive. However, it's not tested practically. It works like this: A read from the lower 32KB will read whatever the cartridge curently maps as CHR. A read from the upper 32KB will read whatever the cartrige curently maps as PRG. A write to the upper 32KB will result in a write to the mapper (just like on the actual NES), while a write to the lower 32KB will indicate a write to the cartridge, but no chip will be enabled to receive it.
<br />
<br />At this point I have most of the parts, except for the 72-pin edge connector and a 64K*8 ROM interface. It's darn simple to make such an interface, so that's no problem.
<br />
<br />Here is the schematics:
<br /><!-- m --><a class="postlink" href="http://oldibmpc.sitesled.com/misc/NESadapter.GIF">http://oldibmpc.sitesled.com/misc/NESadapter.GIF</a><!-- m -->
<br />
<br />If the ISA-card solution is chosen, then the ISA ALE signal can replace the Nand-gate generating the Ã˜2 signal. However, then the /CE line must be masked by the ISA AEN line (requiering an OR-gate). Still, the part-count doesn't really change at all.
<br />
<br />Any thoughts or comments on this?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>qbradq</b> [ Thu Jun 16, 2011 6:06 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I won't judge you're DIY attitude. I am currently soldering together an EEPROM burner with an Arduino <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" />
<br />
<br />Also, Arduino is a great choice for a general-purpose microcontroller platform. It's written in C, has great library support and is dead-simple to use. <a href="http://arduino.cc/" class="postlink">Home Page</a>, <a href="http://www.sparkfun.com/products/9950" class="postlink">Buy at SparkFun ($29.95 USD)</a>.
<br />
<br />Back to your ISA bus project. I thought I had a hard enough time finding a computer with an LPT port on it. I haven't seen an ISA card since 98 <img src="./images/smilies/icon_razz.gif" alt=":P" title="Razz" />
<br />
<br />The upper / lower 32K stuff you are doing is going to be problematic. Many mappers (like MMC5) have mapper registers in the $5000 - $7FFF address range. Furthermore many carts also have save RAM at $6000 - $7FFF. It might be useful to be able to read and write to this as well.
<br />
<br />Other than that it all sounds pretty straight-forward. Can I ask what you use for your prototypes? I am doing my first project on protoboard and I am hating it. Air wires are getting on my nerves <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>FARID</b> [ Thu Jun 16, 2011 9:55 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Have you seen this page :
<br />
<br /><a href="http://www.ziegler.desaign.de/io56.htm" class="postlink">IO-56 Reader/Writer for NES</a>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>infiniteneslives</b> [ Thu Jun 16, 2011 11:41 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Why do you need the LS245 transceiver?
<br />
<br />I'm not familiar with ISA, but the cart certainly shouldn't require it, if you don't enable the chip the data line will be high-Z.  And if you are writing the roms will accept whatever you put on the bus.
<br />
<br />So from the cart's standpoint I don't see why controlling data flow direction will do anything for you.  Unless you're just using it for a common output enable for some reason.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>person</b> [ Fri Jun 17, 2011 1:54 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">qbradq wrote:</div><div class="quotecontent">Also, Arduino is a great choice for a general-purpose microcontroller platform. It's written in C, has great library support and is dead-simple to use. <a href="http://arduino.cc/" class="postlink">Home Page</a>, <a href="http://www.sparkfun.com/products/9950" class="postlink">Buy at SparkFun ($29.95 USD)</a>.</div><br />Yes, but that's one of the problems I have with microcontrollers. I don't know enough C to be familiar with it. I do know a lot of assembler languages, though, especially for the Intel-based chips.<br /><br /><div class="quotetitle">qbradq wrote:</div><div class="quotecontent">Back to your ISA bus project. I thought I had a hard enough time finding a computer with an LPT port on it. I haven't seen an ISA card since 98 <img src="./images/smilies/icon_razz.gif" alt=":P" title="Razz" /></div><br />The system is not a problem. I'm a "vintage computer" enthusiast so I have the requiered machines available.<br /><br /><div class="quotetitle">qbradq wrote:</div><div class="quotecontent">The upper / lower 32K stuff you are doing is going to be problematic. Many mappers (like MMC5) have mapper registers in the $5000 - $7FFF address range. Furthermore many carts also have save RAM at $6000 - $7FFF. It might be useful to be able to read and write to this as well.</div><br />That can be fixed by adding more address lines to the /CHR-RD line decoder. However, I don't have any MMC5 cartridges.<br /><br />As of I've understood, the CHR area is never more than the lower 16KB.<br /><br /><div class="quotetitle">qbradq wrote:</div><div class="quotecontent">Other than that it all sounds pretty straight-forward. Can I ask what you use for your prototypes? I am doing my first project on protoboard and I am hating it. Air wires are getting on my nerves <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /></div>
<br />My previous project ended up like this: <!-- m --><a class="postlink" href="http://oldibmpc.sitesled.com/nestoxt/RIMG0457.JPG">http://oldibmpc.sitesled.com/nestoxt/RIMG0457.JPG</a><!-- m --> , where the PCB-part alone looks like this: <!-- m --><a class="postlink" href="http://oldibmpc.sitesled.com/nestoxt/RIMG0300.JPG">http://oldibmpc.sitesled.com/nestoxt/RIMG0300.JPG</a><!-- m --> . It's a complete spaghetti-soup, but it works. However, I had to do some questionable tricks to get it working, like soldering wires to other wires instead of to the PCB.
<br />
<br />What I used there was proto-board with every 3 holes connected, somewhat like an big array of 3*1 connections. The wire I have available is regular blasting-cap-type wire (solid steel-core wire). I got towards a kilogram of it years ago after they did some construction work by the school I went to.
<br />
<br />I know about the I/O 56, but I don't have any spare 8255's around.
<br />
<br />And about the bus transceiver, that's to keep compability with bus-operation. If the adapter is only a part of a bigger bus, then it will need to be disabled from outputing data when it's not accessed (asuming the bus has more than 16 address lines)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Fri Jun 17, 2011 2:22 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I think the simplest (and cheapest?) dumper is building a cart with blargg's bootloader in it (of course it can also be run off of a PowerPak), building a rs232/usb-&gt;controller port cable and disabling the CIC in the NES. Then just hotswap the cart-to-be-dumped in after the bootloader has been loaded to RAM. Rest is just software (which remains to be written...)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>person</b> [ Fri Jun 17, 2011 2:59 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Original schematics has been updated. Now it limits the CHR area to the lower 16KB instead of the lower 32KB, and the upper 48KB should work just like it does on a real NES when accessed.
<br />
<br />I also added a XOR-OR based comparator for the addres decoder if the design is to be put on an ISA card. It would also be possible to use a 4-bit demultiplexer with a 16*2 pin-connector and a jumper, however 4-bit demultiplexers are not as common as theit 3-bit counterparts.
<br />
<br />I do not have any kind of flashcartridge, and I don't want to sacrifice one of my games, so the bootloader solution is at the moment out of question.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>person</b> [ Fri Jun 17, 2011 4:18 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I have now reworked the schematics to contain parts that I actually have (except the 72-pin edge connecror and an ISA prototype card, both which can be gotten relatively cheap): <!-- m --><a class="postlink" href="http://oldibmpc.sitesled.com/misc/NESadapter2.GIF">http://oldibmpc.sitesled.com/misc/NESadapter2.GIF</a><!-- m -->
<br />
<br />The entire design will have a total of 4 ICs (one 74LS04, one 74LS08, one 74LS32 and one 74LS154), and can be configured to anywhere in the base 1MB of the targer PC's memory.
<br />
<br />The real question still is that if it is OK to "forge" the Ã˜2 signal by NAND-ing /RD and /WE.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>qbradq</b> [ Fri Jun 17, 2011 6:00 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The CHR address space is 8KB. Carts have contained up to 512 KB of CHR-ROM that I know of, with bank switching normally occurring by write cycles to the CPU address space above $401f. However, some games (like Punch Out! and I think a Dragon Quest game or two) bank swap CHR-ROM based on read cycles to the PPU address space.
<br />
<br />If you like assembly you can also code the Arduino in AVR assembly. You just have to use a different makefile.
<br />
<br />As for not wanting to learn another assembler, you're going to need to understand at least the basics of the 2A03 used in the NES and have a much better understanding of the various mapper hardware used for this project to work out for you.
<br />
<br />Here is some recommended reading:
<br /><a href="http://en.wikipedia.org/wiki/MOS_Technology_6502" class="postlink">MOS 6502 (Wikipedia)</a>
<br /><a href="http://wiki.nesdev.com/w/index.php/2A03" class="postlink">2A03 CPU</a>
<br /><a href="http://wiki.nesdev.com/w/index.php/MMC" class="postlink">Mappers</a>
<br />
<br />Supplemental reading:
<br /><a href="http://wiki.nesdev.com/w/index.php/CPU" class="postlink">NES CPU Details</a>
<br /><a href="http://wiki.nesdev.com/w/index.php/PPU" class="postlink">NES PPU Details</a>
<br />
<br />Reference material:
<br /><a href="http://www.obelisk.demon.co.uk/6502/reference.html#BNE" class="postlink">6502 Instruction Set</a>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>kyuusaku</b> [ Sat Jun 18, 2011 11:07 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">person wrote:</div><div class="quotecontent">The real question still is that if it is OK to "forge" the Ã˜2 signal by NAND-ing /RD and /WE.</div>
<br />Not likely since without further decoding Phi2 and PPU /RD every write on the ISA bus will go to the cart as garbage (really not good with bus conflict carts). Also ISA accesses are/can be 4x faster than the CPU or PPU so that's a problem too.
<br />
<br />I had the same idea as you, but I went with the parallel port. If you want REALLY cheap you only need two '393 counters. The control port can do all the decoding. Since there aren't enough outputs for counter reset the counter state can be determined by hooking A14 back to a status input. This method also gives you access to VRAM A10, VRAM /CE and /IRQ (though VRAM /CE isn't necessarily of use without an inverter for PPU /A13).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>person</b> [ Sun Jun 19, 2011 10:25 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I know about the various mappers, so that shouldn't be a problem.
<br />
<br />Also, I don't expect the mapper-chipsets to be extremely timing-sensitive (TTL chips can take anything from single-stepping to about 25MHz). ROM chips can also tackle any bus speed up to their maximum specification, which in most cases includes the ISA bus speed, so that's not a problem either.
<br />
<br />As of the "forged" Ã˜2 signal, I see the problem, and I guess it will work if I mask it with the /CS signal then.
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">A15&nbsp; &nbsp;A14&nbsp; &nbsp;/WE&nbsp; &nbsp;/RD&nbsp; &nbsp;/CE&nbsp; &nbsp;|&nbsp; &nbsp;PRG R /W&nbsp; &nbsp;Ã˜2&nbsp; &nbsp;PRG ROM /CE&nbsp; &nbsp;CHR /RD <br />&nbsp;0&nbsp; &nbsp; &nbsp;0&nbsp; &nbsp; &nbsp;0&nbsp; &nbsp; &nbsp;0&nbsp; &nbsp; &nbsp;0&nbsp; &nbsp; |&nbsp; &nbsp; &nbsp; 0&nbsp; &nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;0&nbsp; &nbsp; &nbsp; Invalid <br />&nbsp;0&nbsp; &nbsp; &nbsp;0&nbsp; &nbsp; &nbsp;0&nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp;0&nbsp; &nbsp; |&nbsp; &nbsp; &nbsp; 0&nbsp; &nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp; Dummy Write &#40;No operation&#41; <br />&nbsp;0&nbsp; &nbsp; &nbsp;0&nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp;0&nbsp; &nbsp; &nbsp;0&nbsp; &nbsp; |&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;0&nbsp; &nbsp; &nbsp; Read CHR <br />&nbsp;0&nbsp; &nbsp; &nbsp;0&nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp;0&nbsp; &nbsp; |&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; &nbsp;0&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp; No operation <br />&nbsp;X&nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp;0&nbsp; &nbsp; &nbsp;0&nbsp; &nbsp; &nbsp;0&nbsp; &nbsp; |&nbsp; &nbsp; &nbsp; 0&nbsp; &nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp; Invalid <br />&nbsp;X&nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp;0&nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp;0&nbsp; &nbsp; |&nbsp; &nbsp; &nbsp; 0&nbsp; &nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp; Mapper Write <br />&nbsp;X&nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp;0&nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; |&nbsp; &nbsp; &nbsp; 0&nbsp; &nbsp; &nbsp; &nbsp;0&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp; No operation<br />&nbsp;X&nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp;0&nbsp; &nbsp; &nbsp;0&nbsp; &nbsp; |&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp; PRG read <br />&nbsp;X&nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp;0&nbsp; &nbsp; |&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; &nbsp;0&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp; No operation<br /></div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>kyuusaku</b> [ Sun Jun 19, 2011 2:54 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />It looks like ISA holds the read strobe for 1.5 clock periods. Best case that's 188ns on an 8 MHz bus. Then you have to take into account your decoding which at 4 gates deep is 40-80ns, so subtract that and a few more ns (maybe 10) for ISA hold time. Even if you improved the decoding you still only have ~150 ns best case on an 8 MHz ISA. 
<br />
<br />NES carts will have up to 100 ns of decoding on top of 200 ns ROMs.
<br />
<br />I'm not sure even <strong>4.77 MHz</strong> will work. To be safe we could call your decoding and worst case cart propagation 400ns. 1 / (400 ns / 1.5) = a maximum clock speed of 3.75 MHz.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>person</b> [ Sun Jun 19, 2011 2:59 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">kyuusaku wrote:</div><div class="quotecontent">Unless you're on a 4.77 MHz PC/XT I think it WILL be a problem for ROM reads. <br /><br />It looks like ISA holds the read strobe for 1.5 (8-8.33 MHz) clock periods. Best case that's 188ns. Then you have to take into account your decoding which at 4 gates deep is 40-80ns, so subtract that and a few more ns (maybe 10) for ISA hold time.<br /><br />Then realize that carts will have up to 100 ns of decoding on top of 200 ns ROMs.</div>
<br />Fortunately I do have a 4.77MHz XT available. Actually I have two, plus a clone (as I mentioned, I am a vintage computer enthusiast  <img src="./images/smilies/icon_wink.gif" alt=":wink:" title="Wink" />  ).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>kyuusaku</b> [ Sun Jun 19, 2011 3:07 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Better underclock it to 3.58 MHz lol

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>person</b> [ Sun Jun 19, 2011 3:11 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">kyuusaku wrote:</div><div class="quotecontent">Better underclock it to 3.58 MHz lol</div>
<br />Remember that those old CPU's don't do 1-cycle-per-operation like todays CPUs. For an IBM XT with an 8088, a full bus-cycle takes 4 clocks, where two are provided for actual memory access. Even some of the BIOS chips supplied by IBM are 400ns!
<br />
<br />Eventually, you allways have the "IO CH RDY" line which can add waitstates manually.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>