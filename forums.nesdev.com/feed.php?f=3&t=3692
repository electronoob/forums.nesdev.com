<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=3&amp;t=3692" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2007-11-17T14:43:26-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=3&amp;t=3692</id>
<entry>
<author><name><![CDATA[Zepper]]></name></author>
<updated>2007-11-17T14:43:26-07:00</updated>
<published>2007-11-17T14:43:26-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3692&amp;p=28376#p28376</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3692&amp;p=28376#p28376"/>
<title type="html"><![CDATA[Opcodes: huge switch statement or goto label?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3692&amp;p=28376#p28376"><![CDATA[
Uh... yes, but I meant another point. By using multiple jumps (goto), does it take out a chance to optimize the code for the compiler? A "major" programmer said that to me, as if this piece of code "locks" any optimizing... or almost.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=39">Zepper</a> — Sat Nov 17, 2007 2:43 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2007-11-14T19:49:01-07:00</updated>
<published>2007-11-14T19:49:01-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3692&amp;p=28284#p28284</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3692&amp;p=28284#p28284"/>
<title type="html"><![CDATA[Opcodes: huge switch statement or goto label?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3692&amp;p=28284#p28284"><![CDATA[
<div class="quotetitle">Fx3 wrote:</div><div class="quotecontent"><br />Yes, that's my idea, and I could simplify a lot of code. However, I have no clues about seeing the compiler level of anything...<br /></div><br />If you're looking for ideas on what not to hand-optimize, and you can read i386 assembly language, you can look at the asm code that GCC generates:<br /><br />gcc -Wall -O <strong>-c</strong> hello.c<br />produces object code in hello.o<br /><br />gcc -Wall -O <strong>-S</strong> hello.c<br />produces asm code in hello.s<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Wed Nov 14, 2007 7:49 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Zepper]]></name></author>
<updated>2007-11-14T14:54:06-07:00</updated>
<published>2007-11-14T14:54:06-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3692&amp;p=28274#p28274</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3692&amp;p=28274#p28274"/>
<title type="html"><![CDATA[Opcodes: huge switch statement or goto label?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3692&amp;p=28274#p28274"><![CDATA[
Yes, that's my idea, and I could simplify a lot of code. However, I have no clues about seeing the compiler level of anything...<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=39">Zepper</a> — Wed Nov 14, 2007 2:54 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Mednafen]]></name></author>
<updated>2007-11-13T15:30:43-07:00</updated>
<published>2007-11-13T15:30:43-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3692&amp;p=28235#p28235</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3692&amp;p=28235#p28235"/>
<title type="html"><![CDATA[Opcodes: huge switch statement or goto label?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3692&amp;p=28235#p28235"><![CDATA[
With gcc(this uses a gcc extension), I've done something like this before:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">static const void* GotoTable&#91;256&#93; =<br />&#123;<br /> &amp;&amp;Op00, &amp;&amp;Op01, &amp;&amp;Op02, &#91;...&#93;<br />&#125;;<br /><br />goto *GotoTable&#91;happy_opcode&#93;;<br /></div><br /><br />Whether or not this is good programming practice is left to the reader.  <img src="http://forums.nesdev.com/images/smilies/icon_wink.gif" alt=";)" title="Wink" /><br />I actually had an instance where doing this was measurably faster than a switch() statement, so I guess gcc's optimizer is a bit flaky sometimes.  But, the NES has enough opcodes, that it should always cause gcc to generate a jump table automatically with an opcode switch() statement.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=1026">Mednafen</a> — Tue Nov 13, 2007 3:30 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[johnnie]]></name></author>
<updated>2007-11-13T11:57:49-07:00</updated>
<published>2007-11-13T11:57:49-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3692&amp;p=28221#p28221</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3692&amp;p=28221#p28221"/>
<title type="html"><![CDATA[Opcodes: huge switch statement or goto label?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3692&amp;p=28221#p28221"><![CDATA[
Good, thanks. I guess I underestimated the compiler's (gcc) capabilities here.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3431">johnnie</a> — Tue Nov 13, 2007 11:57 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2007-11-13T00:24:05-07:00</updated>
<published>2007-11-13T00:24:05-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3692&amp;p=28203#p28203</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3692&amp;p=28203#p28203"/>
<title type="html"><![CDATA[Opcodes: huge switch statement or goto label?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3692&amp;p=28203#p28203"><![CDATA[
Yep. The straight forward switch is the best place to start:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">switch &#40; opcode &#41;<br />&#123;<br />case 0x00: // BRK<br />    ...<br />    break;<br /><br />case 0x01: // ORA &#40;zp,x&#41;<br />    ...<br />    break;<br />...<br />&#125;</div><br />If you've got over 100 case statements, most compilers will use a jump table for the switch, since that's faster than the 7 comparisons that would otherwise be required to determine the opcode (7 because they would use a binary search, not the 100 that a linear search would require).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Tue Nov 13, 2007 12:24 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Disch]]></name></author>
<updated>2007-11-12T20:13:30-07:00</updated>
<published>2007-11-12T20:13:30-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3692&amp;p=28193#p28193</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3692&amp;p=28193#p28193"/>
<title type="html"><![CDATA[Opcodes: huge switch statement or goto label?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3692&amp;p=28193#p28193"><![CDATA[
large switch statements usually get compiled to a jump table.<br /><br />therefore a single, large switch is usually the way to go.  From there I generally use macros or inline functions for addressing mode/instruction combos.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=33">Disch</a> — Mon Nov 12, 2007 8:13 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[kyuusaku]]></name></author>
<updated>2007-11-12T19:59:07-07:00</updated>
<published>2007-11-12T19:59:07-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3692&amp;p=28192#p28192</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3692&amp;p=28192#p28192"/>
<title type="html"><![CDATA[Opcodes: huge switch statement or goto label?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3692&amp;p=28192#p28192"><![CDATA[
you could do:<br /><br />switch(opcode)<br />{<br />  case 0x00: goto brk or brk();<br />  ...<br />}<br /><br />and hope it becomes a jump table.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=20">kyuusaku</a> — Mon Nov 12, 2007 7:59 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[johnnie]]></name></author>
<updated>2007-11-12T18:15:55-07:00</updated>
<published>2007-11-12T18:15:55-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3692&amp;p=28190#p28190</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3692&amp;p=28190#p28190"/>
<title type="html"><![CDATA[Dynamic goto label?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3692&amp;p=28190#p28190"><![CDATA[
Hm.. Come to think of it: Is it at all possible to use a dynamic goto label like LBL_(OPCODE) in C?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3431">johnnie</a> — Mon Nov 12, 2007 6:15 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[johnnie]]></name></author>
<updated>2007-11-12T18:32:47-07:00</updated>
<published>2007-11-12T17:55:35-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3692&amp;p=28189#p28189</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3692&amp;p=28189#p28189"/>
<title type="html"><![CDATA[Opcodes: huge switch statement or goto label?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3692&amp;p=28189#p28189"><![CDATA[
Hello again!<br /><br />I am currently writing the opcode handling routine, and I fear the routine is going to blow up into a massive switch-case-web. So, in the light of optimizing, is it worth rewriting the part that I have (approximately 40 opcodes) into a different format? <br /><br />I am thinking of replacing the case-statements with a label prefix and executing a (computer science course teachers, please beware) goto at the beginning of the handling routine. I understand that this will introduce an additional jump-instruction at the start of each opcode, but it removes the need of comparing the fetched byte to each and every opcode. Additionally, this will make sure that the opcodes at the end of the list start almost as fast as those at the beginning. Ofcourse one could use a list of opcode stastistics (I swear I have seen one, I forgot where) to determine opcode placement in the switch-statement.<br /><br />Can anybody shed some light on this issue? My arguments seem to favor the goto-approach, but I'd like to know if I'm forgetting something before making an important design decision like this one.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3431">johnnie</a> — Mon Nov 12, 2007 5:55 pm</p><hr />
]]></content>
</entry>
</feed>