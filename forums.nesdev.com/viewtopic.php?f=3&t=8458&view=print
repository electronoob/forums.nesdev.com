<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - instruction usage list</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">instruction usage list</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=3&amp;t=8458">http://forums.nesdev.com/viewtopic.php?f=3&amp;t=8458</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Coldberg</b> [ Mon Dec 26, 2011 5:59 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>instruction usage list</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I remember seeing an instruction usage by percent chart somewhere
<br />anyone know what i'm talking about and can link me ?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Shiru</b> [ Mon Dec 26, 2011 6:04 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><a href="http://slack.net/~ant/nes-emu/6502.html" class="postlink">Check bottom of the page</a>.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dwedit</b> [ Mon Dec 26, 2011 6:26 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Here's my data of total execution count based on logging PocketNES.  It's not comprehensive.  Data may be inaccurate, because the emulator has speedhacks, so it tries to skip idle loops.  LDA $nn, BNE/BEQ, and JMP are much greater than what is shown here.
<br />If you took out any idle loop parts of a game, the list would be very different.
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">7.4797%&nbsp; &nbsp;_A5&nbsp; &nbsp;LDA $nn<br />5.7161%&nbsp; &nbsp;_D0&nbsp; &nbsp;BNE *<br />5.3027%&nbsp; &nbsp;_85&nbsp; &nbsp;STA $nn<br />4.5473%&nbsp; &nbsp;_F0&nbsp; &nbsp;BEQ *<br />3.1360%&nbsp; &nbsp;_E8&nbsp; &nbsp;INX<br />2.7743%&nbsp; &nbsp;_20&nbsp; &nbsp;JSR $nnnn<br />2.7525%&nbsp; &nbsp;_60&nbsp; &nbsp;RTS<br />2.7162%&nbsp; &nbsp;_C8&nbsp; &nbsp;INY<br />2.6038%&nbsp; &nbsp;_9D&nbsp; &nbsp;STA $nnnn,X<br />2.5311%&nbsp; &nbsp;_18&nbsp; &nbsp;CLC<br />2.5233%&nbsp; &nbsp;_BD&nbsp; &nbsp;LDA $nnnn,X<br />2.5231%&nbsp; &nbsp;_29&nbsp; &nbsp;AND #$nn<br />2.4835%&nbsp; &nbsp;_AD&nbsp; &nbsp;LDA $nnnn<br />2.2968%&nbsp; &nbsp;_8D&nbsp; &nbsp;STA $nnnn<br />2.1907%&nbsp; &nbsp;_6E&nbsp; &nbsp;ROR $nnnn<br />2.1410%&nbsp; &nbsp;_66&nbsp; &nbsp;ROR $nn<br />2.1025%&nbsp; &nbsp;_C9&nbsp; &nbsp;CMP #$nn<br />2.0923%&nbsp; &nbsp;_4A&nbsp; &nbsp;LSR<br />2.0549%&nbsp; &nbsp;_10&nbsp; &nbsp;BPL *<br />1.7834%&nbsp; &nbsp;_CA&nbsp; &nbsp;DEX<br />1.7301%&nbsp; &nbsp;_A9&nbsp; &nbsp;LDA #$nn<br />1.7259%&nbsp; &nbsp;_B1&nbsp; &nbsp;LDA &#40;$nn&#41;,Y<br />1.6681%&nbsp; &nbsp;_88&nbsp; &nbsp;DEY<br />1.6523%&nbsp; &nbsp;_90&nbsp; &nbsp;BCC *<br />1.6431%&nbsp; &nbsp;_65&nbsp; &nbsp;ADC $nn<br />1.5062%&nbsp; &nbsp;_4C&nbsp; &nbsp;JMP $nnnn<br />1.2130%&nbsp; &nbsp;_B0&nbsp; &nbsp;BCS *<br />1.1877%&nbsp; &nbsp;_30&nbsp; &nbsp;BMI *<br />1.1778%&nbsp; &nbsp;_B9&nbsp; &nbsp;LDA $nnnn,Y<br />1.1399%&nbsp; &nbsp;_0A&nbsp; &nbsp;ASL<br />1.1014%&nbsp; &nbsp;_69&nbsp; &nbsp;ADC #$nn<br />0.9876%&nbsp; &nbsp;_38&nbsp; &nbsp;SEC<br />0.9143%&nbsp; &nbsp;_EA&nbsp; &nbsp;NOP<br />0.8458%&nbsp; &nbsp;_C6&nbsp; &nbsp;DEC $nn<br />0.8078%&nbsp; &nbsp;_A0&nbsp; &nbsp;LDY #$nn<br />0.7783%&nbsp; &nbsp;_45&nbsp; &nbsp;EOR $nn<br />0.7761%&nbsp; &nbsp;_B5&nbsp; &nbsp;LDA $nn,X<br />0.7436%&nbsp; &nbsp;_99&nbsp; &nbsp;STA $nnnn,Y<br />0.7131%&nbsp; &nbsp;_05&nbsp; &nbsp;ORA $nn<br />0.7099%&nbsp; &nbsp;_68&nbsp; &nbsp;PLA<br />0.7064%&nbsp; &nbsp;_AA&nbsp; &nbsp;TAX<br />0.6906%&nbsp; &nbsp;_E0&nbsp; &nbsp;CPX #$nn<br />0.6371%&nbsp; &nbsp;_A8&nbsp; &nbsp;TAY<br />0.6323%&nbsp; &nbsp;_48&nbsp; &nbsp;PHA<br />0.6079%&nbsp; &nbsp;_8A&nbsp; &nbsp;TXA<br />0.5931%&nbsp; &nbsp;_26&nbsp; &nbsp;ROL $nn<br />0.5134%&nbsp; &nbsp;_E6&nbsp; &nbsp;INC $nn<br />0.5105%&nbsp; &nbsp;_A6&nbsp; &nbsp;LDX $nn<br />0.4982%&nbsp; &nbsp;_A4&nbsp; &nbsp;LDY $nn<br />0.4661%&nbsp; &nbsp;_E9&nbsp; &nbsp;SBC #$nn<br />0.4423%&nbsp; &nbsp;_A2&nbsp; &nbsp;LDX #$nn<br />0.4328%&nbsp; &nbsp;_2A&nbsp; &nbsp;ROL<br />0.4327%&nbsp; &nbsp;_91&nbsp; &nbsp;STA &#40;$nn&#41;,Y<br />0.4173%&nbsp; &nbsp;_C5&nbsp; &nbsp;CMP $nn<br />0.3839%&nbsp; &nbsp;_86&nbsp; &nbsp;STX $nn<br />0.3662%&nbsp; &nbsp;_98&nbsp; &nbsp;TYA<br />0.3594%&nbsp; &nbsp;_C0&nbsp; &nbsp;CPY #$nn<br />0.3493%&nbsp; &nbsp;_E5&nbsp; &nbsp;SBC $nn<br />0.3350%&nbsp; &nbsp;_BC&nbsp; &nbsp;LDY $nnnn,X<br />0.3162%&nbsp; &nbsp;_95&nbsp; &nbsp;STA $nn,X<br />0.2551%&nbsp; &nbsp;_2C&nbsp; &nbsp;BIT $nnnn<br />0.2532%&nbsp; &nbsp;_6A&nbsp; &nbsp;ROR<br />0.2522%&nbsp; &nbsp;_46&nbsp; &nbsp;LSR $nn<br />0.2392%&nbsp; &nbsp;_84&nbsp; &nbsp;STY $nn<br />0.2258%&nbsp; &nbsp;_06&nbsp; &nbsp;ASL $nn<br />0.2253%&nbsp; &nbsp;_7D&nbsp; &nbsp;ADC $nnnn,X<br />0.1876%&nbsp; &nbsp;_25&nbsp; &nbsp;AND $nn<br />0.1617%&nbsp; &nbsp;_24&nbsp; &nbsp;BIT $nn<br />0.1513%&nbsp; &nbsp;_8E&nbsp; &nbsp;STX $nnnn<br />0.1507%&nbsp; &nbsp;_8C&nbsp; &nbsp;STY $nnnn<br />0.1490%&nbsp; &nbsp;_70&nbsp; &nbsp;BVS *<br />0.1412%&nbsp; &nbsp;_DD&nbsp; &nbsp;CMP $nnnn,X<br />0.1354%&nbsp; &nbsp;_ED&nbsp; &nbsp;SBC $nnnn<br />0.1343%&nbsp; &nbsp;_58&nbsp; &nbsp;CLI<br />0.1266%&nbsp; &nbsp;_49&nbsp; &nbsp;EOR #$nn<br />0.1200%&nbsp; &nbsp;_09&nbsp; &nbsp;ORA #$nn<br />0.1122%&nbsp; &nbsp;_F5&nbsp; &nbsp;SBC $nn,X<br />0.1083%&nbsp; &nbsp;_AE&nbsp; &nbsp;LDX $nnnn<br />0.1034%&nbsp; &nbsp;_55&nbsp; &nbsp;EOR $nn,X<br />0.1020%&nbsp; &nbsp;_6C&nbsp; &nbsp;JMP &#40;$nnnn&#41;<br />0.1006%&nbsp; &nbsp;_11&nbsp; &nbsp;ORA &#40;$nn&#41;,Y<br />0.0985%&nbsp; &nbsp;_6D&nbsp; &nbsp;ADC $nnnn<br />0.0929%&nbsp; &nbsp;_E4&nbsp; &nbsp;CPX $nn<br />0.0891%&nbsp; &nbsp;_C4&nbsp; &nbsp;CPY $nn<br />0.0888%&nbsp; &nbsp;_FD&nbsp; &nbsp;SBC $nnnn,X<br />0.0887%&nbsp; &nbsp;_4D&nbsp; &nbsp;EOR $nnnn<br />0.0828%&nbsp; &nbsp;_DE&nbsp; &nbsp;DEC $nnnn,X<br />0.0826%&nbsp; &nbsp;_D9&nbsp; &nbsp;CMP $nnnn,Y<br />0.0744%&nbsp; &nbsp;_79&nbsp; &nbsp;ADC $nnnn,Y<br />0.0691%&nbsp; &nbsp;_2E&nbsp; &nbsp;ROL $nnnn<br />0.0668%&nbsp; &nbsp;_50&nbsp; &nbsp;BVC *<br />0.0659%&nbsp; &nbsp;_1D&nbsp; &nbsp;ORA $nnnn,X<br />0.0658%&nbsp; &nbsp;_0D&nbsp; &nbsp;ORA $nnnn<br />0.0628%&nbsp; &nbsp;_71&nbsp; &nbsp;ADC &#40;$nn&#41;,Y<br />0.0611%&nbsp; &nbsp;_36&nbsp; &nbsp;ROL $nn,X<br />0.0549%&nbsp; &nbsp;_AC&nbsp; &nbsp;LDY $nnnn<br />0.0533%&nbsp; &nbsp;_19&nbsp; &nbsp;ORA $nnnn,Y<br />0.0510%&nbsp; &nbsp;_EC&nbsp; &nbsp;CPX $nnnn<br />0.0499%&nbsp; &nbsp;_CE&nbsp; &nbsp;DEC $nnnn<br />0.0479%&nbsp; &nbsp;_31&nbsp; &nbsp;AND &#40;$nn&#41;,Y<br />0.0456%&nbsp; &nbsp;_28&nbsp; &nbsp;PLP<br />0.0456%&nbsp; &nbsp;_08&nbsp; &nbsp;PHP<br />0.0425%&nbsp; &nbsp;_B4&nbsp; &nbsp;LDY $nn,X<br />0.0404%&nbsp; &nbsp;_CD&nbsp; &nbsp;CMP $nnnn<br />0.0395%&nbsp; &nbsp;_FE&nbsp; &nbsp;INC $nnnn,X<br />0.0390%&nbsp; &nbsp;_78&nbsp; &nbsp;SEI<br />0.0354%&nbsp; &nbsp;_B6&nbsp; &nbsp;LDX $nn,Y<br />0.0344%&nbsp; &nbsp;_D5&nbsp; &nbsp;CMP $nn,X<br />0.0344%&nbsp; &nbsp;_75&nbsp; &nbsp;ADC $nn,X<br />0.0338%&nbsp; &nbsp;_EE&nbsp; &nbsp;INC $nnnn<br />0.0326%&nbsp; &nbsp;_40&nbsp; &nbsp;RTI<br />0.0313%&nbsp; &nbsp;_2D&nbsp; &nbsp;AND $nnnn<br />0.0250%&nbsp; &nbsp;_F1&nbsp; &nbsp;SBC &#40;$nn&#41;,Y<br />0.0232%&nbsp; &nbsp;_BE&nbsp; &nbsp;LDX $nnnn,Y<br />0.0220%&nbsp; &nbsp;_3D&nbsp; &nbsp;AND $nnnn,X<br />0.0214%&nbsp; &nbsp;_A1&nbsp; &nbsp;LDA &#40;$nn,X&#41;<br />0.0210%&nbsp; &nbsp;_96&nbsp; &nbsp;STX $nn,Y<br />0.0158%&nbsp; &nbsp;_4E&nbsp; &nbsp;LSR $nnnn<br />0.0154%&nbsp; &nbsp;_94&nbsp; &nbsp;STY $nn,X<br />0.0147%&nbsp; &nbsp;_0E&nbsp; &nbsp;ASL $nnnn<br />0.0144%&nbsp; &nbsp;_F6&nbsp; &nbsp;INC $nn,X<br />0.0141%&nbsp; &nbsp;_D1&nbsp; &nbsp;CMP &#40;$nn&#41;,Y<br />0.0137%&nbsp; &nbsp;_F9&nbsp; &nbsp;SBC $nnnn,Y<br />0.0129%&nbsp; &nbsp;_35&nbsp; &nbsp;AND $nn,X<br />0.0124%&nbsp; &nbsp;_15&nbsp; &nbsp;ORA $nn,X<br />0.0114%&nbsp; &nbsp;_D6&nbsp; &nbsp;DEC $nn,X<br />0.0095%&nbsp; &nbsp;_BA&nbsp; &nbsp;TSX<br />0.0092%&nbsp; &nbsp;_CC&nbsp; &nbsp;CPY $nnnn<br />0.0085%&nbsp; &nbsp;_76&nbsp; &nbsp;ROR $nn,X<br />0.0073%&nbsp; &nbsp;_9A&nbsp; &nbsp;TXS<br />0.0070%&nbsp; &nbsp;_7E&nbsp; &nbsp;ROR $nnnn,X<br />0.0059%&nbsp; &nbsp;_39&nbsp; &nbsp;AND $nnnn,Y<br />0.0030%&nbsp; &nbsp;_51&nbsp; &nbsp;EOR &#40;$nn&#41;,Y<br />0.0029%&nbsp; &nbsp;_3E&nbsp; &nbsp;ROL $nnnn,X<br />0.0026%&nbsp; &nbsp;_81&nbsp; &nbsp;STA &#40;$nn,X&#41;<br />0.0022%&nbsp; &nbsp;_5D&nbsp; &nbsp;EOR $nnnn,X<br />0.0015%&nbsp; &nbsp;_1E&nbsp; &nbsp;ASL $nnnn,X<br />0.0013%&nbsp; &nbsp;_5E&nbsp; &nbsp;LSR $nnnn,X<br />0.0009%&nbsp; &nbsp;_16&nbsp; &nbsp;ASL $nn,X<br />0.0004%&nbsp; &nbsp;_D8&nbsp; &nbsp;CLD<br />0.0003%&nbsp; &nbsp;_B8&nbsp; &nbsp;CLV<br />0.0003%&nbsp; &nbsp;_59&nbsp; &nbsp;EOR $nnnn,Y<br />0.0001%&nbsp; &nbsp;_01&nbsp; &nbsp;ORA &#40;$nn,X&#41;<br />0.0000%&nbsp; &nbsp;_C1&nbsp; &nbsp;CMP &#40;$nn,X&#41;<br />0.0000%&nbsp; &nbsp;_00&nbsp; &nbsp;BRK<br />0.0000%&nbsp; &nbsp;_56&nbsp; &nbsp;LSR $nn,X<br />0.0000%&nbsp; &nbsp;_21&nbsp; &nbsp;AND &#40;$nn,X&#41;<br />0.0000%&nbsp; &nbsp;_41&nbsp; &nbsp;EOR &#40;$nn,X&#41;<br />0.0000%&nbsp; &nbsp;_61&nbsp; &nbsp;ADC &#40;$nn,X&#41;<br />0.0000%&nbsp; &nbsp;_B3&nbsp; &nbsp;LDAX &#40;$nn&#41;,Y<br />0.0000%&nbsp; &nbsp;_E1&nbsp; &nbsp;SBC &#40;$nn,X&#41;<br />0.0000%&nbsp; &nbsp;_F8&nbsp; &nbsp;SED<br /></div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Tue Dec 27, 2011 9:09 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Thanks for the interesting breakdown.
<br />
<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><div class="codetitle"><b>Code:</b></div><div class="codecontent">2.7743%&nbsp; &nbsp;_20&nbsp; &nbsp;JSR $nnnn<br />2.7525%&nbsp; &nbsp;_60&nbsp; &nbsp;RTS</div></div><br />I was expecting more RTS than JSR, due to <a href="http://wiki.nesdev.com/w/index.php/RTS_Trick" class="postlink">RTS dispatch in state machines</a>. What happens to the other JSRs that don't return?<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><div class="codetitle"><b>Code:</b></div><div class="codecontent">0.0214%&nbsp; &nbsp;_A1&nbsp; &nbsp;LDA &#40;$nn,X&#41;</div></div>
<br />Notice how ($nn,X) instructions end up near the bottom of the list. The (d,X) addressing mode appears to be designed for a table of pointers on zero page. I haven't seen a need for such a table other than in a music engine that puts pointers to each channel's instrument and music sequence data on zero page, with X = 0, 4, 8, or 12. Where do these LDA ($nn,X) typically occur?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Zelex</b> [ Tue Dec 27, 2011 12:08 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Instruction usage also varies based on what ROM your running.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Tue Dec 27, 2011 12:33 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">What happens to the other JSRs that don't return?</div>
<br />JSR can be used for revealing the PC... in some cases there will be no need for an RTS after getting the PC off the stack.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Shiru</b> [ Tue Dec 27, 2011 12:48 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">I was expecting more RTS than JSR, due to <a href="http://wiki.nesdev.com/w/index.php/RTS_Trick" class="postlink">RTS dispatch in state machines</a>. What happens to the other JSRs that don't return?</div>
<br />I often do this:
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">routine1:<br />&nbsp;... ;also needs to call routine2<br />routine2:<br />&nbsp;... ;also needs to call routine3<br />routine3:<br />&nbsp;...<br />&nbsp;rts</div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dwedit</b> [ Tue Dec 27, 2011 12:58 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Everyone knows about the "replace JSR \ RTS" with JMP trick as well.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Tue Dec 27, 2011 3:32 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Shiru wrote:</div><div class="quotecontent"><div class="quotetitle">tepples wrote:</div><div class="quotecontent">I was expecting more RTS than JSR, due to <a href="http://wiki.nesdev.com/w/index.php/RTS_Trick" class="postlink">RTS dispatch in state machines</a>. What happens to the other JSRs that don't return?</div><br />I often do this:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">routine1:<br />&nbsp;... ;also needs to call routine2<br />routine2:<br />&nbsp;... ;also needs to call routine3<br />routine3:<br />&nbsp;...<br />&nbsp;rts</div></div>
<br />That shouldn't affect the statistics though, because on runtime each JSR is still paired with a corresponding RTS.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Hangin10</b> [ Tue Dec 27, 2011 4:22 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I might be confused about what's going on here, but if functions are called in more than one spot, doesn't make perfect sense for there to be more JSRs than RTSs?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Kasumi</b> [ Tue Dec 27, 2011 4:51 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />No, because every subroutine you would jsr to "should" (unless you're doing something tricky) return with an rts regardless of how many times the subroutine is called or from where.
<br />
<br />They "should" be equal.
<br />
<br />edit: Ah, wait. I get your thinking. But I think this is runtime analysis, since a $20 in ROM isn't necessarily a jsr. You can only know that when the code is run.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Coldberg</b> [ Tue Dec 27, 2011 5:53 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Thanks to everyone for the replies <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>foobaz</b> [ Wed Dec 28, 2011 3:14 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Wow, I find this conversation really interesting. I was recently trying to track down some problems where I was rts'ing or rti'ing to an obviously bad address, and I was wondering what kind of checking was legitimate. I ended up adding type information to the stack so I could try to verify that stack pushes and pops matched each other. So, for example, in nmi() I have:<div class="codetitle"><b>Code:</b></div><div class="codecontent">mmu.stackPush16&#40;PC, Mmu.TYPE_PC_NMI&#41;;<br />mmu.stackPush8&#40;P &amp; ~BRK_BIT, Mmu.TYPE_REGISTER&#41;;</div><br />and in rti I have:<div class="codetitle"><b>Code:</b></div><div class="codecontent">P = mmu.stackPop8&#40;Mmu.TYPE_REGISTER&#41; | ALWAYS_SET_BIT &amp; ~BRK_BIT;<br />setPc&#40;mmu.stackPop16&#40;Mmu.TYPE_PC_NMI&#41;&#41;;</div>
<br />The push functions save some extra type bits  on the "side" of the stack for each byte. The pop functions verify that the values from the stack have the same types as what's being requested. Unfortunately, I can't verify cases where the stack was manipulated manually. For example, if you perform an rts from an absolute address manually pushed onto the stack instead of through a JSR, it looks identical to the case where you have a corrupt stack.
<br />
<br />The PC is another case where I feel like I can type most operations but not all. For example, right now I verify that the PC is always assigned to program rom. It seems likely there are some (many?) roms that generate program code in ram, and the verification won't work there.
<br />
<br />And so, to circle back, I wonder how much typing you can add without getting false negatives? For those asking, "why?" the point is mostly to help emudev. The quicker you can spot when something has gone south, the easier it is to track it down - at least that's the theory anyway.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Thu Dec 29, 2011 8:11 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">foobaz wrote:</div><div class="quotecontent">And so, to circle back, I wonder how much typing you can add without getting false negatives? For those asking, "why?" the point is mostly to help emudev. The quicker you can spot when something has gone south, the easier it is to track it down - at least that's the theory anyway.</div>
<br />I added similar functionality (checking for JSR/RTS IRQ/RTI matches for simple function profiling support) to NintendulatorDX at one point, but it turned out not to be very useful for existing ROMs since there are surprisingly many games that don't play nice with the stack.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>ccovell</b> [ Thu Dec 29, 2011 6:17 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I don't know about you, but sometimes a single subroutine in my code has 2 RTSes, ie: for an early exit when space is tight (1 less byte than a branch to the nearest RTS or to the end of the subroutine) so I thought there would be more RTSes than JSRs.  But I guess I'm a bad programmer.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>