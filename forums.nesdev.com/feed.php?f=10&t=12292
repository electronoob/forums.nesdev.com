<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=10&amp;t=12292" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2015-01-26T16:06:17-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=10&amp;t=12292</id>
<entry>
<author><name><![CDATA[Vectrex2809]]></name></author>
<updated>2015-01-26T16:06:17-07:00</updated>
<published>2015-01-26T16:06:17-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12292&amp;p=139951#p139951</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12292&amp;p=139951#p139951"/>
<title type="html"><![CDATA[Re: Scrolling problems...]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12292&amp;p=139951#p139951"><![CDATA[
<div class="quotetitle">Bregalad wrote:</div><div class="quotecontent"><br />I didn't look at your code, but it sounds like you are overwriting sprite #0 with your boss metasprites. You should double check your sprite engine and make sure you have control of everything. There is a million of approaches depending on if you want to do priorities, if you want to do sprite cycling, etc...<br /><br />As for the main thread in or out the NMI problem, just do as you feel like, I don't think there is a clear advantage on one over another.<br /></div><br /><br />EDIT: Glitch fixed <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" /><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6607">Vectrex2809</a> — Mon Jan 26, 2015 4:06 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2015-01-26T15:03:35-07:00</updated>
<published>2015-01-26T15:03:35-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12292&amp;p=139948#p139948</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12292&amp;p=139948#p139948"/>
<title type="html"><![CDATA[Re: Scrolling problems...]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12292&amp;p=139948#p139948"><![CDATA[
I didn't look at your code, but it sounds like you are overwriting sprite #0 with your boss metasprites. You should double check your sprite engine and make sure you have control of everything. There is a million of approaches depending on if you want to do priorities, if you want to do sprite cycling, etc...<br /><br />As for the main thread in or out the NMI problem, just do as you feel like, I don't think there is a clear advantage on one over another.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Mon Jan 26, 2015 3:03 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Vectrex2809]]></name></author>
<updated>2015-01-25T10:51:13-07:00</updated>
<published>2015-01-25T10:51:13-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12292&amp;p=139873#p139873</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12292&amp;p=139873#p139873"/>
<title type="html"><![CDATA[Re: Scrolling problems...]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12292&amp;p=139873#p139873"><![CDATA[
<div class="quotetitle">tokumaru wrote:</div><div class="quotecontent"><br />Before you do that, check if this is really your problem. I suspect you're setting the scroll for the first time too late in the frame, but you can check in FCEUX debugger (there are many threads explaining how to use it).<br /><br />That being said, having the game logic in the NMI handler is a legitemate way to do thing (famous games like SMB do it), but you have to do PPU updates first and game logic second (I don't know if nerdy nights does it like that, but I've seen tutorials that don't), otherwise the VBlank will end before you have processed the entire game state and the PPU updates will spill into rendering time, screwing things up.<br /></div><br /><br />Well, I already went to the wiki and rewrote my code according to what was said in &quot;The Frame and NMI&quot; page, and right now, each time I try to make a sprite zero hit, the game crashes. I actually have no idea on how to implement a sprite zero hit in this, it seems like each time the game runs the &quot;Spritezero_test&quot; routines, it crashes. Here's my NMI handler (The sprite zero thing is probably something really, really bad)<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NMI:<br /><br />  PHA<br />  TXA<br />  PHA<br />  TYA<br />  PHA<br /><br />  LDA needdma<br />  BEQ .nodma<br /><br />  LDA #$00<br />  STA $2003  ; set the low byte (00) of the RAM address<br />  LDA #$07<br />  STA $4014  ; set the high byte (02) of the RAM address, start the transfer<br /><br />.nodma<br /><br />  LDA needdraw<br />  BEQ Buffer_Done<br />  LDA fadeswitch<br />  BEQ .nofade<br />  BIT $2002<br />  JSR Palette_Fade<br /><br />  JMP Buffer_Done<br />.nofade<br /><br />  BIT $2002<br />  LDX #$00<br />Buffer:<br />  LDA Buffer_Shit,x   ;Determines the length of the string we will have to copy<br />  BEQ Buffer_Done   ;If equal to zero, stop copying<br />  TAY         ;If not, transfer to Y and prepare the start address for the PPU<br />  INX<br /><br />  LDA Buffer_Shit,x<br />  STA $2006      ;Here's your address, PPU<br />  INX<br />  LDA Buffer_Shit,x<br />  STA $2006      ;*Gives address to PPU*<br />  INX<br /><br />  LDA Buffer_Shit,x   ;Are we copying stuff vertically or horizontally?<br />  BEQ .buffright   ;(The former won't probably be used in this game, but it can be<br />  LDA #%10010100   ;kickass for future platforming games) ;-)<br />  STA $2000      ;Oh, this is the vert loop (with A=1)<br />  INX<br />  JMP Buffer_Loop<br />.buffright<br />  LDA #%10010000   ;Enable NMI, 8x8 sprites from Pattern Table 0, background from Pattern Table 1<br />  STA $2000      ;Horizontal draw (Do I still have this from Nerdy Nights?!)<br />  INX<br />Buffer_Loop:      ;This is where the magic happens<br /><br />  LDA Buffer_Shit,x<br />  STA $2007<br />  INX<br />  DEY<br />  CPY #$00<br />  BNE Buffer_Loop<br />  JMP Buffer<br /><br />Buffer_Done:<br /><br />  LDA needppureg<br />  BEQ NoPPU<br /><br />  LDA gamestate<br />  CMP #BOSSFIGHT<br />  BEQ .spritezero<br /><br />  LDA soft2000<br />  STA $2000<br />  LDA soft2001<br />  STA $2001<br /><br />  BIT $2002<br />  LDA scroll<br />  STA $2005<br />  LDA scrolly<br />  STA $2005<br />  JMP NoPPU<br /><br />.spritezero<br /><br />  LDA soft2000<br />  STA $2000<br />  LDA soft2001<br />  STA $2001<br /><br />  LDA #$00<br />  STA $2005<br />  STA $2005<br /><br />Sprite0_testone:<br />  LDA $2002<br />  AND #%01000000<br />  BNE Sprite0_testone<br />Sprite0_testtwo:      ;First check if Sprite Zero gets hit<br />  LDA $2002<br />  AND #%01000000<br />  BEQ Sprite0_testone<br /><br />  LDX #$00<br />WaitScanline1:         ;Wait to make sure you get the right scanline<br />  INX<br />  CPX #$70<br />  BNE WaitScanline1<br /><br />  LDA soft2000<br />  STA $2000<br />  LDA soft2001<br />  STA $2001<br /><br />  LDA scroll<br />  STA $2005<br />  LDA #$00<br />  STA $2005<br /><br />NoPPU:<br /><br />  LDA #$00<br />  STA sleeping<br /><br />  PLA<br />  TAY<br />  PLA<br />  TAX<br />  PLA<br /><br />  RTI</div><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6607">Vectrex2809</a> — Sun Jan 25, 2015 10:51 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2015-01-25T06:50:33-07:00</updated>
<published>2015-01-25T06:50:33-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12292&amp;p=139859#p139859</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12292&amp;p=139859#p139859"/>
<title type="html"><![CDATA[Re: Scrolling problems...]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12292&amp;p=139859#p139859"><![CDATA[
Before you do that, check if this is really your problem. I suspect you're setting the scroll for the first time too late in the frame, but you can check in FCEUX debugger (there are many threads explaining how to use it).<br /><br />That being said, having the game logic in the NMI handler is a legitemate way to do thing (famous games like SMB do it), but you have to do PPU updates first and game logic second (I don't know if nerdy nights does it like that, but I've seen tutorials that don't), otherwise the VBlank will end before you have processed the entire game state and the PPU updates will spill into rendering time, screwing things up.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Sun Jan 25, 2015 6:50 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Vectrex2809]]></name></author>
<updated>2015-01-25T05:13:19-07:00</updated>
<published>2015-01-25T05:13:19-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12292&amp;p=139857#p139857</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12292&amp;p=139857#p139857"/>
<title type="html"><![CDATA[Re: Scrolling problems...]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12292&amp;p=139857#p139857"><![CDATA[
<div class="quotetitle">tokumaru wrote:</div><div class="quotecontent"><br />Can't say much based on the code you posted, it's too incomplete.<br /><br /><div class="quotetitle">Vectrex2809 wrote:</div><div class="quotecontent">after I implemented a pretty big metasprite (it's a boss level), it looks like the part of the screen before the s0 hit get the scroll value and vice-versa (the playfield goes back to $00).<br /></div><br />Does this big sprite significantly increase the amount of processing you do every frame? Are you running your game logic inside the NMI handler, like some tutorials like to teach? If so, it could be that the extra processing is &quot;leaking&quot; into the visible frame before you have time to setup the scroll for the status bar.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />When looking at the RAM in FCEUX's hex editor, there are numbers that go in the stack when the glitch is happening. After a while, the game freezes (probably because it hits the buffer, which is in the $0100 page)<br /></div><br />Do all the JSRs have a matching RTSs? Does every PHA have a matching PLA? If you forget things in the stack or pull more bytes than you've pushed, the program will certainly crash. Make sure that there are no branches skipping instructions that manipulate the stack.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Here's the problematic part of the code<br /></div><br />Like I said, this is too incomplete for us to diagnose anything. It doesn't show where the NMI handler is, when in the frame this code runs, what PPUCleanup does...</div><br /><br />It may be from the fact that I'm running the game logic in the NMI handler, since that's the way the Nerdy Nights taught me to do it. I'm going to remove it from the NMI handler and I'll see if something changes.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6607">Vectrex2809</a> — Sun Jan 25, 2015 5:13 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2015-01-24T17:00:42-07:00</updated>
<published>2015-01-24T17:00:42-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12292&amp;p=139836#p139836</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12292&amp;p=139836#p139836"/>
<title type="html"><![CDATA[Re: Scrolling problems...]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12292&amp;p=139836#p139836"><![CDATA[
Can't say much based on the code you posted, it's too incomplete.<br /><br /><div class="quotetitle">Vectrex2809 wrote:</div><div class="quotecontent"><br />after I implemented a pretty big metasprite (it's a boss level), it looks like the part of the screen before the s0 hit get the scroll value and vice-versa (the playfield goes back to $00).<br /></div><br />Does this big sprite significantly increase the amount of processing you do every frame? Are you running your game logic inside the NMI handler, like some tutorials like to teach? If so, it could be that the extra processing is &quot;leaking&quot; into the visible frame before you have time to setup the scroll for the status bar.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />When looking at the RAM in FCEUX's hex editor, there are numbers that go in the stack when the glitch is happening. After a while, the game freezes (probably because it hits the buffer, which is in the $0100 page)<br /></div><br />Do all the JSRs have a matching RTSs? Does every PHA have a matching PLA? If you forget things in the stack or pull more bytes than you've pushed, the program will certainly crash. Make sure that there are no branches skipping instructions that manipulate the stack.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Here's the problematic part of the code<br /></div><br />Like I said, this is too incomplete for us to diagnose anything. It doesn't show where the NMI handler is, when in the frame this code runs, what PPUCleanup does...<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Sat Jan 24, 2015 5:00 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Vectrex2809]]></name></author>
<updated>2015-01-24T09:36:34-07:00</updated>
<published>2015-01-24T09:36:34-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12292&amp;p=139825#p139825</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12292&amp;p=139825#p139825"/>
<title type="html"><![CDATA[Scrolling problems...]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12292&amp;p=139825#p139825"><![CDATA[
I have a level that covers 2 nametables, with a sprite zero hit to make the status bar stay on nametable 0. However, after I implemented a pretty big metasprite (it's a boss level), it looks like the part of the screen before the s0 hit get the scroll value and vice-versa (the playfield goes back to $00). When looking at the RAM in FCEUX's hex editor, there are numbers that go in the stack when the glitch is happening. After a while, the game freezes (probably because it hits the buffer, which is in the $0100 page)<br /><br />Here's the problematic part of the code<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">  LDX #$00<br />.posxloop<br />  LDA Pony_Posx                        ;X position of the evil My Little Ponies (Using a variable to make them &quot;alive&quot; when in another Nametable<br />  SEC<br />  SBC scroll<br />  STA $0213,x<br />  CLC<br />  ADC #$08<br />  STA $0217,x<br />  CLC<br />  ADC #$08<br />  STA $021B,x<br />  CLC<br />  ADC #$08<br />  STA $021F,x<br />  TXA<br />  CLC<br />  ADC #$10<br />  TAX<br />  CPX #$50<br />  BNE .posxloop<br /><br />  LDA $0210                              ;y position (problematic) - I have the Pony_Posy variable ready but even when using this, it glitches<br />  STA $0214<br />  STA $0218<br />  STA $021C<br />  CLC<br />  ADC #$10<br />  LDA $0220<br />  STA $0224<br />  STA $0228<br />  STA $022C<br />  CLC<br />  ADC #$08<br />  LDA $0230<br />  STA $0234<br />  STA $0238<br />  STA $023C<br />  CLC<br />  ADC #$10<br />  LDA $0240<br />  STA $0244<br />  STA $0248<br />  STA $024C<br />  CLC<br />  ADC #$10<br />  LDA $0250<br />  STA $0254<br />  STA $0258<br />  STA $025C<br /><br />  LDA $0263<br />  STA $026B<br />  CLC<br />  ADC #$08<br />  STA $0267<br />  STA $026F<br /><br />  LDA $0260<br />  STA $0264<br />  CLC<br />  ADC #$10<br />  STA $0268<br />  STA $026C<br /><br />  JSR ReadController                                  ;Controller reads, basic stuff<br />  JSR Sprite_Cycling                                   ;Flickering routine, OAM at $07xx<br />  JSR CheckScores                                     ;Scoring, works perfectly<br /><br />  LDA #$36                                               ;Don't mess with Sprite Zero<br />  STA $0700<br />  LDA #$80<br />  STA $0701<br />  LDA #$13<br />  STA $0702<br />  STA $0703<br /><br />  JSR PPUCleanup<br /><br />Sprite0_testone:<br />  BIT $2002<br />  BVS Sprite0_testone<br />Sprite0_testtwo:      ;First check if Sprite Zero gets hit<br />  BIT $2002<br />  BVC Sprite0_testtwo<br /><br />  LDX #$00<br />WaitScanline1:         ;Wait to make sure you get the right scanline<br />  INX<br />  CPX #$70<br />  BNE WaitScanline1<br /><br />  JSR PPUCleanup              ;make sure $2000 and $2001 are in their usual state<br />  LDA scroll<br />  STA $2005<br />  LDA #$00<br />  STA $2005<br /><br />  JMP GameEngineDone</div><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6607">Vectrex2809</a> — Sat Jan 24, 2015 9:36 am</p><hr />
]]></content>
</entry>
</feed>