<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Text and timing</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Text and timing</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=10&amp;t=4860">http://forums.nesdev.com/viewtopic.php?f=10&amp;t=4860</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Wkter</b> [ Wed Feb 11, 2009 2:51 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Text and timing</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Ok, I've used Celius's code to display some simple text on the background, and I even made it blink with my CPU expensive, lazy and newbie way (Simply having to code twice, one with text, the other blank, and a counter)
<br />But this method will be a real mess if I'm to write a lot of text, which I will...
<br />
<br />So, the real question is, how can I add more text without making such a mess, and having it change after a certain time?
<br />
<br />At the timing, I'm thinking on adding a variable, and increase it by 1 each frame.
<br />And when it reaches 60 (One second), change the text.
<br />
<br />Celius's code:
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp;lda #$21 ;position to write text in name table<br />&nbsp; &nbsp;sta $2006 ; mess around with values to get a feel<br />&nbsp; &nbsp;lda #$91 ; for positioning<br />&nbsp; &nbsp;sta $2006<br />&nbsp; &nbsp;<br />&nbsp; &nbsp;&nbsp; &nbsp;lda #$00<br />&nbsp; &nbsp;sta $2005<br />&nbsp; &nbsp;sta $2005&nbsp; &nbsp;&nbsp; &nbsp;<br />&nbsp; &nbsp;ldy #10 ;number of characters in hello world string<br />&nbsp; &nbsp;ldx #0<br /><br />&nbsp; &nbsp;loadtext:<br />&nbsp; &nbsp;lda text1, x<br />&nbsp; &nbsp;sta $2007<br />&nbsp; &nbsp;inx<br />&nbsp; &nbsp;dey<br />&nbsp; &nbsp;bne loadtext <br />&nbsp; &nbsp;text1:<br />&nbsp; &nbsp;&nbsp; &nbsp;.db 177,178,179,180,0,179,181,182,183,181 ;Bad placing of&nbsp; characters in the CHR<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;; P&nbsp; &nbsp;U&nbsp; &nbsp;S&nbsp; &nbsp;H&nbsp; &nbsp; &nbsp;S&nbsp; &nbsp;T&nbsp; &nbsp;A&nbsp; &nbsp;R&nbsp; &nbsp;T</div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Celius</b> [ Wed Feb 11, 2009 5:46 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />If you have a variable that's counting to 60, you should have it count from 60 to 0 instead of 0 to 60. If you do it 0 to 60, it may look like:
<br />
<br />label
<br /> blah blah blah
<br /> inc Variable
<br /> cmp #60
<br /> bne label
<br />
<br />Where if you count <em>from</em> 60, it would look like:
<br />
<br />label
<br /> blah blah blah
<br /> dec Variable
<br /> bne label
<br />
<br />Which just takes less time. And besides, that way you could easily change the value of the counter without a big shindig.
<br />
<br />I'm not so sure what you're looking for with the text though. Are you making some sort of text engine to stick into a game?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Wkter</b> [ Wed Feb 11, 2009 5:54 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Celius wrote:</div><div class="quotecontent">I'm not so sure what you're looking for with the text though. Are you making some sort of text engine to stick into a game?</div>
<br />Something like that.
<br />I want to be able to change a fixed text field when ever I want, with some predefined text.
<br />I'm not that used to Assembly, but I'm thinking on just doing a modification to your code, into something like this:
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">lda text&#91;textNum&#93;, x </div>
<br />And then just make it loop.
<br />
<br />And counting DOWN from 60 was clever, I'm going to change it right away, so I can just copy that  whenever needed <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Celius</b> [ Wed Feb 11, 2009 8:05 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Well what you're going to want is a kind of function or routine that you can feed values. Here's what I'd recommend.
<br />
<br />Take a look at this routine:
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">WriteText:<br />&nbsp; &nbsp;lda NTHigh<br />&nbsp; &nbsp;sta $2006<br />&nbsp; &nbsp;lda NTLow<br />&nbsp; &nbsp;sta $2006<br /><br />&nbsp; &nbsp;ldx TextLength<br />&nbsp; &nbsp;ldy #1<br />-<br />&nbsp; &nbsp;lda &#40;TextAddress&#41;,y<br />&nbsp; &nbsp;sta $2007<br />&nbsp; &nbsp;iny<br />&nbsp; &nbsp;dex<br />&nbsp; &nbsp;bne -<br />&nbsp; &nbsp;rts<br /></div>
<br />
<br />You feed this routine 5 bytes: NTLow, NTHigh, TextLength, TextAddress, and TextAddress+1. I'd recommend storing the text as is with the first byte representing the length. So you'd have a string like:
<br />
<br />Text:
<br />  .db 13
<br />  .db "Hello, World!"
<br />
<br />It would read the first byte as 13, and store that into "TextLength". Then you store the High and Low parts of the address of the label "Text" into TextAddress and TextAddress+1. It's up to your engine to figure out where on the name table to put it.
<br />
<br />And notice that I start the loop with Y equal to 1. This is because the first entry of the string of text represents how long it is, so we don't want to write that value to the background. This limits the size of the text to be 255 characters.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Wkter</b> [ Thu Feb 12, 2009 1:17 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Celius wrote:</div><div class="quotecontent">You feed this routine 5 bytes: NTLow, NTHigh, TextLength, TextAddress, and TextAddress+1.</div>
<br />When and how should I change those values?
<br />Just change them before jumping to WriteText?
<br />
<br />Also, I'm a little confused on the TextAddress.
<br />How I'm I supposed to set it/find the high and low values of the label?
<br />
<br />Lot of questions <img src="./images/smilies/icon_rolleyes.gif" alt=":roll:" title="Rolling Eyes" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Celius</b> [ Thu Feb 12, 2009 2:15 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Yes, you should change them before jumping to WriteText. It's up to your game engine to determine what name table address to write the data at, and what piece of text to write.
<br />
<br />Getting the address of the text probably requires a table of pointers. You may have a table that looks like:
<br />
<br />TextArrays:
<br />  .dw Text1, Text2, Text3, Text4, etc.
<br />
<br />And just to be clear, .dw will place two bytes at that location, the first being the low part of the address, and the second being the high one. So .dw Text1 is placing the address of "Text1" (a label) at that location in ROM first the low byte, and then the high.
<br />
<br />Your game engine may say that it wants to write the text that's located at the address 4 bytes into that table (Text3, in the case above). So you'd have some code that is given an index for that table, and stores the address pointed to in "TextAddress" and "TextAddress + 1".
<br />
<br />For example, say the routine was fed a value of 4. It would take that value, put it into X, and put TextArrays,x into TextAddress, inx, then TextArrays,x into TextAddress+1. After that, you'd do:
<br />
<br />ldy #0
<br />lda (TextAddress),y
<br />sta NumberOfCharacters
<br />
<br />Then all you'd have left is the name table address to figure out.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Thu Feb 12, 2009 10:41 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />How about accepting the X/Y location as a single byte in A, with the horizontal limited to multiples of 4, and using a zero-terminated string? That allows you to pass everything in registers:
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">example:<br />&nbsp; &nbsp; &nbsp; &nbsp; ; Call print_at manually, to show how<br />&nbsp; &nbsp; &nbsp; &nbsp; ; it works. Prints test at h=8 v=4.<br />&nbsp; &nbsp; &nbsp; &nbsp; lda #&#40;4*32 + 8&#41;/4<br />&nbsp; &nbsp; &nbsp; &nbsp; ldx #&gt;test<br />&nbsp; &nbsp; &nbsp; &nbsp; ldy #&lt;test<br />&nbsp; &nbsp; &nbsp; &nbsp; jsr print_at<br />&nbsp; &nbsp; &nbsp; &nbsp; <br />&nbsp; &nbsp; &nbsp; &nbsp; ; Use macro to make little text box<br />&nbsp; &nbsp; &nbsp; &nbsp; print_at 12,10,&quot;+-------+&quot;<br />&nbsp; &nbsp; &nbsp; &nbsp; print_at 12,11,&quot;| Hello |&quot;<br />&nbsp; &nbsp; &nbsp; &nbsp; print_at 12,12,&quot;+-------+&quot;<br /><br />test:&nbsp; &nbsp;.byte &quot;test&quot;,0<br /><br />.zeropage<br />temp:&nbsp; &nbsp;.res 2 ; 2 bytes of temporary space<br />.code<br /><br />; Prints 0-terminated string at specified location<br />; A -&gt; &#40;v*32+h&#41;/4 &#40;x pos must be multiple of 4&#41;<br />; X -&gt; high byte of string address<br />; Y -&gt; low byte of string address<br />print_at:<br />&nbsp; &nbsp; &nbsp; &nbsp; ; Set PPU address to &#40;A+$800&#41;*4<br />&nbsp; &nbsp; &nbsp; &nbsp; sta temp<br />&nbsp; &nbsp; &nbsp; &nbsp; lda #$20/4<br />&nbsp; &nbsp; &nbsp; &nbsp; asl temp<br />&nbsp; &nbsp; &nbsp; &nbsp; rol a<br />&nbsp; &nbsp; &nbsp; &nbsp; asl temp<br />&nbsp; &nbsp; &nbsp; &nbsp; rol a<br />&nbsp; &nbsp; &nbsp; &nbsp; sta $2006<br />&nbsp; &nbsp; &nbsp; &nbsp; lda temp<br />&nbsp; &nbsp; &nbsp; &nbsp; sta $2006<br />&nbsp; &nbsp; &nbsp; &nbsp; <br />&nbsp; &nbsp; &nbsp; &nbsp; ; Set pointer to string<br />&nbsp; &nbsp; &nbsp; &nbsp; sty temp<br />&nbsp; &nbsp; &nbsp; &nbsp; stx temp+1<br />&nbsp; &nbsp; &nbsp; &nbsp; ldy #0<br />&nbsp; &nbsp; &nbsp; &nbsp; beq @first&nbsp; &nbsp; &nbsp; ; always branches<br />&nbsp; &nbsp; &nbsp; &nbsp; <br />&nbsp; &nbsp; &nbsp; &nbsp; ; Write characters until zero<br />@loop:&nbsp; sta $2007<br />&nbsp; &nbsp; &nbsp; &nbsp; iny<br />@first: lda &#40;temp&#41;,y<br />&nbsp; &nbsp; &nbsp; &nbsp; bne @loop<br />&nbsp; &nbsp; &nbsp; &nbsp; <br />&nbsp; &nbsp; &nbsp; &nbsp; rts<br /><br />; Prints str at h,v. H is rounded down to<br />; multiple of 4.<br />.macro print_at h, v, str<br />&nbsp; &nbsp; &nbsp; &nbsp; .local str_addr ; avoids duplicate names<br />&nbsp; &nbsp; &nbsp; &nbsp; <br />&nbsp; &nbsp; &nbsp; &nbsp; lda #&#40;v*32+h&#41;/4<br />&nbsp; &nbsp; &nbsp; &nbsp; ldx #&gt;str_addr<br />&nbsp; &nbsp; &nbsp; &nbsp; ldy #&lt;str_addr<br />&nbsp; &nbsp; &nbsp; &nbsp; jsr print_at<br />&nbsp; &nbsp; &nbsp; &nbsp; <br />&nbsp; &nbsp; &nbsp; &nbsp; ; Place string in RODATA segment, which<br />&nbsp; &nbsp; &nbsp; &nbsp; ; doesn't mix with code<br />&nbsp; &nbsp; &nbsp; &nbsp; .rodata<br />&nbsp; &nbsp; &nbsp; &nbsp; str_addr:<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; .byte str<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; .byte 0 ; terminate with 0<br />&nbsp; &nbsp; &nbsp; &nbsp; .code<br />.endmacro</div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Celius</b> [ Thu Feb 12, 2009 12:48 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Oh, that's actually a pretty cool idea. So you're going with a kind of a C-esque string termination (right? or am I just being stupid?). I've never thought of doing that. Though for some reason, I'm willing to use $FF as a string ender, though $00 makes a lot more sense because you can detect the value with a single instruction (beq/bne with no cmp).
<br />
<br />So where exactly is the string defined when the macro is called? It looks like its defined right where the code is, which seems you have to jump over it somehow...

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Thu Feb 12, 2009 2:24 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The ".rodata" directive puts the string in the RODATA segment, which doesn't mix with the code. During linking, the assembler puts each segment's data into the file, as a contiguous chunk. Oh wait, I already put a comment to this effect. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Wkter</b> [ Thu Feb 12, 2009 2:32 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Ok, I'm having trouble trying to get your code working in NESASM, blargg.
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">;----------------------Write Text----------------<br />; Prints 0-terminated string at specified location<br />; A -&gt; &#40;v*32+h&#41;/4 &#40;x pos must be multiple of 4&#41;<br />; X -&gt; high byte of string address<br />; Y -&gt; low byte of string address<br />print_at:<br />&nbsp; &nbsp; &nbsp; &nbsp; ; Set PPU address to &#40;A+$800&#41;*4<br />&nbsp; &nbsp; &nbsp; &nbsp; sta temp<br />&nbsp; &nbsp; &nbsp; &nbsp; lda #$20/4<br />&nbsp; &nbsp; &nbsp; &nbsp; asl temp<br />&nbsp; &nbsp; &nbsp; &nbsp; rol a<br />&nbsp; &nbsp; &nbsp; &nbsp; asl temp<br />&nbsp; &nbsp; &nbsp; &nbsp; rol a<br />&nbsp; &nbsp; &nbsp; &nbsp; sta $2006<br />&nbsp; &nbsp; &nbsp; &nbsp; lda temp<br />&nbsp; &nbsp; &nbsp; &nbsp; sta $2006<br />&nbsp; &nbsp; &nbsp; &nbsp;<br />&nbsp; &nbsp; &nbsp; &nbsp; ; Set pointer to string<br />&nbsp; &nbsp; &nbsp; &nbsp; sty temp<br />&nbsp; &nbsp; &nbsp; &nbsp; stx temp+1<br />&nbsp; &nbsp; &nbsp; &nbsp; ldy #0<br />&nbsp; &nbsp; &nbsp; &nbsp; beq firstWrite&nbsp; &nbsp; &nbsp; ; always branches<br />&nbsp; &nbsp; &nbsp; &nbsp;<br />&nbsp; &nbsp; &nbsp; &nbsp; ; Write characters until zero<br />loopWrite:&nbsp; sta $2007<br />&nbsp; &nbsp; &nbsp; &nbsp; iny<br />firstWrite: lda &#40;temp&#41;,y<br />&nbsp; &nbsp; &nbsp; &nbsp; bne loopWrite<br />&nbsp; &nbsp; &nbsp; &nbsp;<br />&nbsp; &nbsp; &nbsp; &nbsp; rts <br /><br /><br /><br />;---------------MACRO------------------<br />printText .macro<br />&nbsp;;h, v, str<br />&nbsp; &nbsp; &nbsp; &nbsp; .local str_addr ; avoids duplicate names<br />&nbsp; &nbsp; &nbsp; &nbsp;<br />&nbsp; &nbsp; &nbsp; &nbsp; lda #&#40;\2*32+\1&#41;/4<br />&nbsp; &nbsp; &nbsp; &nbsp; ldx #low&#40;str_addr&#41;<br />&nbsp; &nbsp; &nbsp; &nbsp; ldy #high&#40;str_addr&#41;<br />&nbsp; &nbsp; &nbsp; &nbsp; jsr print_at<br />&nbsp; &nbsp; &nbsp; &nbsp;<br />&nbsp; &nbsp; &nbsp; &nbsp; ; Place string in RODATA segment, which<br />&nbsp; &nbsp; &nbsp; &nbsp; ; doesn't mix with code<br />&nbsp; &nbsp;&nbsp; &nbsp;.rodata<br />&nbsp; &nbsp;&nbsp; &nbsp;str_addr:<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; .byte \3<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; .byte 0 ; terminate with 0<br />&nbsp; &nbsp;&nbsp; &nbsp;.code<br />printText .endm<br />;---------------MACRO------------------<br /><br />;------------------Write text End------------------</div>
<br />I got no compile errors,but I guess it's just big logic flaw here <img src="./images/smilies/icon_lol.gif" alt=":lol:" title="Laughing" /> 
<br />
<br />Also, I have no clue how NESASM wants the input for the macro.
<br />printText(12,11,177) is my suggestion, but doesn't work.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Thu Feb 12, 2009 4:39 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The macro can work if you use the .data section, basically the equivalent of .rodata in ca65:
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">print_at .macro ; h, v, str<br />&nbsp; &nbsp; ; \@ suffix ensures unique names when<br />&nbsp; &nbsp; ; macro is invoked multiple times<br />&nbsp; &nbsp; lda #&#40;\2*32+\1&#41;/4<br />&nbsp; &nbsp; ldx #high&#40;str_addr\@&#41;<br />&nbsp; &nbsp; ldy #low&#40;str_addr\@&#41;<br />&nbsp; &nbsp; jsr print_at_<br />&nbsp; &nbsp; .data<br />str_addr\@:<br />&nbsp; &nbsp; .byte \3<br />&nbsp; &nbsp; .byte 0<br />&nbsp; &nbsp; .code<br />&nbsp; &nbsp; .endm</div><br />I found you have to first set up the .data section to be at a different address, otherwise the .code overwrites it (without any warnings, of course!):<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">; &#40;at beginning of file, before code and data&#41;<br />&nbsp; &nbsp; ; Put data at $A000<br />&nbsp; &nbsp; .data<br />&nbsp; &nbsp; .bank 1<br />&nbsp; &nbsp; .org $A000<br />&nbsp; &nbsp; <br />&nbsp; &nbsp; ; Put code at $8000<br />&nbsp; &nbsp; .code<br />&nbsp; &nbsp; .bank 0<br />&nbsp; &nbsp; .org $8000</div><br />After doing this exercise, I realized the "at" could be separated from the "print". This makes everything simpler:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">; Prints string at current location<br />print_str .macro ; str<br />&nbsp; &nbsp; ...<br />&nbsp; &nbsp; .endm<br /><br />; Moves to specified location on screen<br />move_to .macro ; x, y<br />&nbsp; &nbsp; lda #high&#40;\2*32 + \1 + $2000&#41;<br />&nbsp; &nbsp; sta $2006<br />&nbsp; &nbsp; lda #low&#40; \2*32 + \1 + $2000&#41;<br />&nbsp; &nbsp; sta $2006<br />&nbsp; &nbsp; .endm<br /><br />; Prints string at specified location<br />print_at .macro ; x, y, str<br />&nbsp; &nbsp; move_to \1, \2<br />&nbsp; &nbsp; print_str \3<br />&nbsp; &nbsp; .endm</div>
<br />BTW, another lovely nesasm feature that just bit me: if you do something like LDA (foo),y, it quietly treats it as LDA foo. Absolutely idiotic; for one, it should never quietly ignore something, and for another, since (foo),y is the official syntax, it should definitely give an error when it's used.
<br />
<br />Full sources for above two examples, with test driver: <a href="http://h1.ripway.com/blargg/temp/print_str_nesasm.zip" class="postlink">print_str_nesasm.zip</a>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Wkter</b> [ Mon Feb 16, 2009 4:11 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Ok, I've been able to add your code, blargg, but I'm stuck on one problem.
<br />How can I input multiple raw hex and/or decimal?
<br />I've tried "text1: .db $b1,$b2,$b3,$b4,$00,$b3,$b5,$b6,$b7,$b5", "print_at 0,26,177,178" and, believe it or not, "print_at 0,26,"±²³´�³µ¶·µ"".
<br />
<br />So, the closest I've come is the last try there, but it also display some unwanted tiles in front of every character.
<br />
<br />I could place all the characters at the 'right' places in the chr, but then I have a lot of graphics I have to move.
<br />
<br />Suggestions?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Celius</b> [ Mon Feb 16, 2009 4:25 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I believe his code terminates the string when it encounters the entry $00... So that first one would only store the first 4 characters. What exactly does it put on the screen when you do "print_at 0,26,177,178" or actually any of the other ones?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Wkter</b> [ Mon Feb 16, 2009 4:33 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />At the first AND second, it simply displays the first character, which is a P in my case. 
<br />Nothing more, and nothing less..
<br />
<br />The third one adds a lot of random tiles before printing the next characters I want. (Not completely random, it follows some sort of pattern, but I'm clueless about it..)
<br />
<br />About the $00.
<br />With your code I can successfully type "0" for a blank spot.
<br />I used hex at the 3rd attempt, because I did something wrong when typing the decimals, so I just skipped it..

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Wkter</b> [ Fri Feb 20, 2009 5:43 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Ok, I've got this working smoothly (Changed the CHR, so the letters are at right position)
<br />
<br />But on to my other problem, timing.
<br />
<br />I want the text to change after a certain time after the player push start.
<br />I got the controller working, but I'm completely lost on the timing.
<br />
<br />Also, I want to change the text often, but how can I avoid getting a mess with branching? (I suppose I have to branch after a comparing)

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>