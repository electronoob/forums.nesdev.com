<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Hello World</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Hello World</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=10&amp;t=7307">http://forums.nesdev.com/viewtopic.php?f=10&amp;t=7307</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>13</strong> of <strong>18</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>FinalZero</b> [ Wed Nov 23, 2011 6:40 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I'm using it in a tech demo whose source I plan to release in a few months if you can answer one question. Who's cuter: Hanson or Alvin and the Chipmunks?</div><br />Um, I don't know who either of those are.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">NTFS is the file system used by Windows for fixed disks. You probably meant NTSC</div>
<br />Ah, yes, I did. I had to give a speech about hard drives today, so please forgive me!
<br />
<br />Another question: What's a "vblank"? Is it just the period when the screen is redrawn?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Wed Nov 23, 2011 6:44 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">FinalZero wrote:</div><div class="quotecontent"><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I'm using [a VWF engine] in a tech demo whose source I plan to release in a few months if you can answer one question. Who's cuter: Hanson or Alvin and the Chipmunks?</div><br />Um, I don't know who either of those are.</div><br />Popular music acts known for their squeaky voices, but that's beside the point.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">What's a "vblank"? Is it just the period when the screen is redrawn?</div>
<br />In video, the <a href="http://en.wikipedia.org/wiki/Vertical_blanking_interval" class="postlink">vertical blanking interval</a> (vblank) is a short time between one picture and the next. The CPU can write data to the PPU only during forced blanking (when the CPU has told the PPU to stop rendering and blank the screen) or during vblank. Battletoads works around the shorter NTSC vblank by introducing an area of forced blanking near the top of the screen, but that's an advanced trick because such programming must be very careful to use a constant amount of time.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Hamtaro126</b> [ Wed Nov 23, 2011 7:06 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Isn't the only way for SNES to officially bankswitch is to use a Capcom chip? (Used in Megaman X, and other titles.)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>FinalZero</b> [ Sat Nov 26, 2011 2:43 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">In video, the vertical blanking interval (vblank) is a short time between one picture and the next. The CPU can write data to the PPU only during forced blanking (when the CPU has told the PPU to stop rendering and blank the screen) or during vblank. Battletoads works around the shorter NTSC vblank by introducing an area of forced blanking near the top of the screen, but that's an advanced trick because such programming must be very careful to use a constant amount of time.</div><br />Does it have to be timed in a certain way?<br /><br />More Questions:<br />1) How does one increment or decrement the accumulator? There's no INA or DEA instruction? Must one just use ADC instead? Looking at documentation, it still only takes 2 cycles, but it's a byte longer.<br />2) Are there any undocumented/illegal instructions that are used with any frequency?<br /><br /><div class="quotetitle">http://www.obelisk.demon.co.uk/6502/reference.html#JMP wrote:</div><div class="quotecontent">An original 6502 has does not correctly fetch the target address if the indirect vector falls on a page boundary (e.g. $xxFF where xx is and value from $00 to $FF). In this case fetches the LSB from $xxFF as expected but takes the MSB from $xx00. This is fixed in some later chips like the 65SC02 so for compatibility always ensure the indirect vector is not at the end of the page.</div>
<br />3) Is this honored in emulators today?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dwedit</b> [ Sat Nov 26, 2011 4:20 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">FinalZero wrote:</div><div class="quotecontent">1) How does one increment or decrement the accumulator? There's no INA or DEA instruction? Must one just use ADC instead? Looking at documentation, it still only takes 2 cycles, but it's a byte longer.<br /></div><br />Yep, you need to use ADC to increment or decrement the accumulator.  And you also need to know the initial state of carry as well, so you probably need a CLC instruction before the ADC as well.<br /><div class="quotetitle">FinalZero wrote:</div><div class="quotecontent">2) Are there any undocumented/illegal instructions that are used with any frequency?<br /></div><br />If you need to use a read-modify-write instruction on an otherwise unsupported addressing mode (such as the nonexistent "INC nnnn,Y", or "DEC (nn),y" instructions), and you don't care what happens to the accumulator or flags, then you can use an illegal instruction that does the read-modify-write instruction and ALU instruction at the same time.<br />The possible illegal instructions are these combinations: ORA+ASL, AND+ROL, EOR+LSR, ADC+ROR, CMP+DEC, and SBC+INC.  These carry out the read-modify-write instruction to memory, then do the ALU instruction on register A and flags.  So if you just wanted the Read-Modify-Write part done, and don't care about register A, they are possibly useful.<br />The CMP+DEC instruction is probably the best illegal instruction, since it doesn't affect the contents of A.  But you have incorrect flags afterwards, since it also did a CMP as part of executing the instruction.  You don't get the nice "my value in memory went down to zero so set the zero flag" part.<br /><br />There's other illegal instructions too, but Martin Korth gave a bunch of warnings about how they didn't work consistently on his 6502-based Commodore 64/128 computers.  They might work okay on the NES though.  The ALU+Read-Modify-Write instructions seem stable enough though.<br /><br /><div class="quotetitle">FinalZero wrote:</div><div class="quotecontent"><div class="quotetitle">http://www.obelisk.demon.co.uk/6502/reference.html#JMP wrote:</div><div class="quotecontent">An original 6502 has does not correctly fetch the target address if the indirect vector falls on a page boundary (e.g. $xxFF where xx is and value from $00 to $FF). In this case fetches the LSB from $xxFF as expected but takes the MSB from $xx00. This is fixed in some later chips like the 65SC02 so for compatibility always ensure the indirect vector is not at the end of the page.</div><br />3) Is this honored in emulators today?</div>
<br />That just means don't use the Indirect Jump instruction "JMP (nnnn)" with a value of nnnn that ends with FF.  Your target address can still be anything with no problem.  And the regular jump instruction "JMP nnnn" can have any jump target with no problem.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>MottZilla</b> [ Sat Nov 26, 2011 4:37 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Hamtaro126 wrote:</div><div class="quotecontent">Isn't the only way for SNES to officially bankswitch is to use a Capcom chip? (Used in Megaman X, and other titles.)</div>
<br />
<br />SNES only bankswitches with certain chips and Capcom's Cx4 is not one of them. I recall SDD-1 and SA-1 having banking capabilities. The SNES generally doesn't need banking because the 65816 has a 24bit address space divided into 256 64K banks. Typical mapping allow for up to 32 megabits (4 megabytes) of ROM and more complicated mapping allows for about 96 megabits which I think is about 12 megabytes. 
<br />
<br />The real impressive part of bankswitching on the NES is doing so for the CHR/graphics. By doing so you can instantly load new animation frames for characters on screen or to animate backgrounds with different patterns rather than by changing the palette to give an illusion which is sometimes done.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>FinalZero</b> [ Sat Nov 26, 2011 4:42 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">That just means don't use the Indirect Jump instruction "JMP (nnnn)" with a value of nnnn that ends with FF. Your target address can still be anything with no problem. And the regular jump instruction "JMP nnnn" can have any jump target with no problem.</div><br />But who programs with the hex directly? Instead, won't one have to check the output of the assembler after every assemblation?<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">or to animate backgrounds with different patterns rather than by changing the palette to give an illusion which is sometimes done.</div>
<br />I recall the second Double Dragon game doing that to animate conveyor belts. I don't know whether it it was bank switching or not though.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dwedit</b> [ Sat Nov 26, 2011 4:46 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Usually, JMP (xxxx) is done with an address in RAM.  When you defined your address, you probably have a general idea of where your variables are.  Yes, it screws up if xxxx and xxxx+1 are on a different page, but I usually stick both bytes in the zeropage anyway.
<br />I can't think of many situations where you'd want a 16-bit address sitting in ROM, and using a JMP (xxxx) to go there indirectly.
<br />
<br />Conveyor belts are usually animated with palette animation, but I didn't play Double Dragon 2, so don't know how the game animated them.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sat Nov 26, 2011 4:51 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">FinalZero wrote:</div><div class="quotecontent">But who programs with the hex directly? Instead, won't one have to check the output of the assembler after every assemblation?</div><br />Not if you use .align wisely.<br /><br /><div class="quotetitle">Dwedit wrote:</div><div class="quotecontent">Conveyor belts are usually animated with palette animation.</div>
<br />Unless you have MMC3 or CHR RAM and you can poke in different tiles like SMB3 does.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>FinalZero</b> [ Sun Nov 27, 2011 5:35 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I was watching <!-- m --><a class="postlink" href="http://www.youtube.com/watch?v=bBE4KHKzhKc">http://www.youtube.com/watch?v=bBE4KHKzhKc</a><!-- m --> . Can someone explain what he's explaining at 9:10? I don't understand what he's saying.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Jeroen</b> [ Sun Nov 27, 2011 5:38 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Timestamped <!-- m --><a class="postlink" href="http://www.youtube.com/watch?v=bBE4KHKzhKc&amp;t=9m10s">http://www.youtube.com/watch?v=bBE4KHKzhKc&amp;t=9m10s</a><!-- m -->

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>MottZilla</b> [ Sun Nov 27, 2011 5:41 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />He's saying some instructions are Read Write Modify. Meaning on the hardware level they read memory, then that write it back, then they actually change it and write it again. Something like Bill and Ted's adventure makes use of this with reseting the MMC1 which some odd INC opcode which causes an edge case behavior in the MMC1. If you don't emulate this correctly the game won't work. If you are programming for NES this basically has no meaning to you.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Sun Nov 27, 2011 5:51 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />He's just saying that, internally, these read-modify-write instructions behave a little differently than programmers think they do. For us programmers, it's logical to think that these instructions read the value from memory, do some sort of operation on then, and finally write the modified value back to memory, but the way the instructions were programmed in the CPU actually causes them to write the original value back to memory before writing the modified value. It was probably easier/cheaper to make the CPU that way, and since there are no disadvantages to this behavior, everything was OK.
<br />
<br />It really doesn't make much difference for programmers, but if you look at the hardware level you can detect the the CPU is indeed doing this, and someone might be interested in using these consecutive writes for some obscure purpose. I seem to remember people here mentioning a NES game writing to mapper registers with RMW instructions (INC or DEC maybe).
<br />
<br />This is not very useful, and it's really advanced stuff for beginners, so I'm not sure if you should be bothering about things like these at this time.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>FinalZero</b> [ Mon Nov 28, 2011 12:37 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />A couple more questions:
<br />1) How does the overflow flag work with ADC and SBC?
<br />2) <div class="quotetitle">http://www.obelisk.demon.co.uk/6502/reference.html#ADC wrote:</div><div class="quotecontent">If overflow occurs the carry bit is set</div><br />What does this mean exactly? What if overflow does *not* occur, is the carry bit cleared then? or simply left untouched?<br /><br />3)<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">On the NES, interrupts are used to indicate the beginning of the vertical blank (the PPU can optionally fire an NMI when VBlank starts), to create raster effects (several mappers can generate IRQs when specific parts of the display are being rendered), and to indicate that a sample has finished playing (the APU can optionally generate an IRQ in this case). </div><br />So, are they always used? or only sometimes used?<br />4) There is no SEV instruction to complement the CLV one. What does one use instead? BIT #$40 ?<br />5)<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">It really doesn't make much difference for programmers, but if you look at the hardware level you can detect the the CPU is indeed doing this, and someone might be interested in using these consecutive writes for some obscure purpose. I seem to remember people here mentioning a NES game writing to mapper registers with RMW instructions (INC or DEC maybe).</div>
<br />So this doesn't mean anything to the programmer? Instructions are still atomic?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Mon Nov 28, 2011 8:06 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />ADC and SBC touch all flags NVZC.
<br />
<br />Pretty much all NES games (except for a few obscure ones that almost nobody in my country probably has) use the NMI to detect the start of vertical blanking.
<br />
<br />What would SEV be needed for?
<br />
<br />BIT immediate does not exist on the original 6502.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>13</strong> of <strong>18</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>