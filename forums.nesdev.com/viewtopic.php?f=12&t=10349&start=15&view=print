<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - SNES Hi/Fast ROM Header Problems</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">SNES Hi/Fast ROM Header Problems</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=12&amp;t=10349">http://forums.nesdev.com/viewtopic.php?f=12&amp;t=10349</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>2</strong> of <strong>3</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>bazz</b> [ Sat Aug 10, 2013 1:45 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: SNES Hi/Fast ROM Header Problems</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Ok I'm done. I'm zipping everything for you.<br /><br />SPECIAL NOTES: Use .BASE $80, that way you can just phk and plb, you HIROM banks will match the correct LOROM ones, at least for $40 banks or so, that should get you by. <br /><br />The reason I say this is because only banks 00-3f (pretty sure that's right) can access hardware registers $2000-$4fff or w/e. So if you have code in $c0, it's only ROM from $0000-$ffff, it cannot access the hardware registers without assigning a seperate data bank from its program bank. Therefore, it's more complicated. So if you just use HIROM banks $80-($80+3f), then you can match the program bank with the data bank, and still be able to use hardware registers. You should be fine.<br /><br />Now, if you really want to get else, I'm not going to help you with that because that's complicated. It involves knowing that your data bank will most likely have to be different from your program bank. But if you do it the way I just told you to do, you shouldn't have a problem with that. <br /><br />So just use what I gave you, or at least check it out and see what's happening. I'm 100% sure that it works. <br />here's the zip: <a href="http://www.cs.umb.edu/~bazz/Lesson2.zip" class="postlink">http://www.cs.umb.edu/~bazz/Lesson2.zip</a>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>bazz</b> [ Sat Aug 10, 2013 1:52 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: SNES Hi/Fast ROM Header Problems</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Another note is that you never do in fact CLI, the re-enables the interrupts. so if you find yourself adding interrupts later and they don't work. Then you'll know why <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" />  <img src="./images/smilies/icon_mrgreen.gif" alt=":mrgreen:" title="Mr. Green" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>bazz</b> [ Sat Aug 10, 2013 2:06 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: SNES Hi/Fast ROM Header Problems</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />You don't yet use your NMI routine, but when you do, take note that the program bank and process register get pushed pulled, but everything else is in your hands. This includes data bank, accum, index regs, and direct page

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sat Aug 10, 2013 2:38 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: SNES Hi/Fast ROM Header Problems</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />So is it enough to PHB PHA TDA PHA PHX PHY on entry and PLY PLX PLA TAD PLA PLB RTI on exit?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>bazz</b> [ Sat Aug 10, 2013 3:00 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: SNES Hi/Fast ROM Header Problems</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />here's the latest code update for the man who asked this thread:<br /><a href="http://www.cs.umb.edu/~bazz/Lesson2_NMI_final.zip" class="postlink">http://www.cs.umb.edu/~bazz/Lesson2_NMI_final.zip</a> <br />Please see the below comments for important information regarding your code and my advice to you is to stay LoRom. You are not ready yet. Not in my opinion at least.<br /><br />Tepples, make sure you rep #$30 before, both times, to ensure saving 16 bits.<br />also, it's easier to just use phd pld for the direct page.<br />here's what I am using for the FastRom NMI:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">VBlank:<br />&nbsp; &nbsp; jml FastVBlank<br />FastVBlank:<br />&nbsp; &nbsp;rep #$30<br />&nbsp; &nbsp;phb<br />&nbsp; &nbsp;phd<br />&nbsp; &nbsp;pha<br />&nbsp; &nbsp;phx<br />&nbsp; &nbsp;phy<br /><br />&nbsp; &nbsp;; <br />&nbsp; &nbsp;phk&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;; only works for VBlank being in $00-3f $8000+<br />&nbsp; &nbsp;plb&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;; otherwise data bank must not match program bank<br />&nbsp; &nbsp; <br />&nbsp; &nbsp;<br />&nbsp; &nbsp; &nbsp; &nbsp;; DO STUFF<br /><br /><br />&nbsp; &nbsp; rep #$30<br />&nbsp; &nbsp;ply<br />&nbsp; &nbsp;plx&nbsp; &nbsp;&nbsp; &nbsp;<br />&nbsp; &nbsp;pla<br />&nbsp; &nbsp;pld<br />&nbsp; &nbsp;plb<br />&nbsp; &nbsp;rti</div><br /><br />LycanLambda, I think you should stay in LoRom. This level of coding you are not ready for it. I'm being honest. You'll have a more enjoyable experience elsewhere. Probably easier to stick to LoRom for now. Ditch the fastRom, SuperMarioWorld was a slow rom game and did you ever think it was running too slow?? Not I.. <br /><br />Among other things, I noticed multiple sections of code with no WLA sections housing them. So I brushed up the code. You need to make sure that in the way his memory map is, that you use SEMIFREE sections .org'd at $8000, this ensures that the code that you want to be able to access hardware registers doesn't accidently get moved to an address under $8000, those addresses are not mirrored into the banks that can access hardware registers.. Coding in LoRom Slowrom will take most of these concerns away. Practically all. except for ROM in banks $40-$5f. But we doubt you need that much, because as I learned, you typically know what you're doing by the time you need that much space anyways.<br /><br /><br /><br />Anyway mate, here is the code modified, and this one actually enables your NMI routine I modified to preserve important registers, and it changes the screen color every several VBlanks in order to observe successful testing. The colors are black and white, but the white is grey because you didn't turn screen brightness all the way up (at least how it appears in my bsnes and zsnes. I just confirmed that turning screen brightness all the way does indeed make white look white <img src="./images/smilies/icon_wink.gif" alt=";)" title="Wink" />)<br /><br />There is another caveat in programming with FastRom/HiRom. You must be more explicit in your addressing modes. if you do<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">lda $00</div> or even<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">lda $0000</div><br />I have observed WLa assembles this as a direct page addressing. Direct page addressing always loads direct address from Bank 0. This may become problematic if that is not what you expected, thinking lda $0000 was loading an absolute address. Therefore, you need to be tighter and more explicit, saying <br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">lda $0000.w</div> to sharply express desire for the address to be word-long. and then WLA will assemble as an absolute address which takes advantage of the Data Bank Register DBR.<br /><br />So once again, here is the fina final version of your code. I manipulated a lot.<br />One must have a greater understanding of ROM addresses vs. what these addresses become in the SNES memory map. This is easier understood with LoRom. for instance,<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">LoRom Example<br />ROM $00:0000-7FFF = SNES $00:8000-ffff <br />ROM 00:8000-ffff = SNES $01:8000-ffff </div><br />so in ROM all the memory is linear 100% always. In the SNES map, it gets chopped and screwed, just depends on the memory map. LoRom is easier because it is basically always chopped in $8000 byte-size chunks, seperated by $8000 in each SNES bank. HiRom is a different story, judging from the SNES Memory maps I have seen (not always corellating, thefore I wait for my conclusion until I dump my own), the difference is big. To say the least. I'll evolve more on that in the future.<br /><br />Take care, and again, lastly, here's the latest code update for the man who asked this thread:<br /><a href="http://www.cs.umb.edu/~bazz/Lesson2_NMI_final.zip" class="postlink">http://www.cs.umb.edu/~bazz/Lesson2_NMI_final.zip</a>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>bazz</b> [ Sat Aug 10, 2013 3:52 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: SNES Hi/Fast ROM Header Problems</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />There is a simpler way to specify the difference between Hardware-accessible ROM and hardware-inaccessible ROM for WLA. <br /><br />First, we used this Memory map:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">.MEMORYMAP<br />&nbsp; &nbsp; SLOTSIZE $10000&nbsp; &nbsp; ;Slot size of $10000 bytes<br />&nbsp; &nbsp; DEFAULTSLOT 0&nbsp; &nbsp; &nbsp; &nbsp;;Default Slot for Reset, NMI and other interrupt vectors<br />&nbsp; &nbsp; SLOT 0 $8000<br />.ENDME</div><br /><br />Then you had to make sure to use SEMIFREE sections that started at least at $8000 for hardware accessible regions. that's a bit cumbersome and strict. We could more easily do this: <br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">.MEMORYMAP<br />&nbsp; &nbsp; SLOTSIZE $08000&nbsp; &nbsp; ;Slot size of $8000 bytes<br />&nbsp; &nbsp; DEFAULTSLOT 0<br />&nbsp; &nbsp; SLOT 1 $0000&nbsp; &nbsp; &nbsp; &nbsp; <br />&nbsp; &nbsp; SLOT 0 $8000<br />.ENDME</div><br /><br />Here we divided the slotsize by 2, and now have 2 seperate slots, SLOT 1 and SLOT 0. You can use SLOT 0 for all your hardware register accessing code, and SLOT 1 for other stuff that cannot access hardware registers.. Wait a minute. Don't forget. SLOT 1 CAN access hardware registers if you manipulate the data bank register and use addressing modes that make use of it <img src="./images/smilies/icon_wink.gif" alt=";)" title="Wink" /> <br /><br />Still, this simplifies.<br /><br /><br />I also wanted to explain more on the difference between ROM and SNES addresses.<br />I'm going to make another post explaining the difference between ROM and SNES memory to you.<br /><br />When you have a ROM chip, it's a black chip, and it has pure linear memory on it. so if it's the size of Super Mario World (4 Mbit), then it is $080000 bytes long. I'm talking $080000 bytes right straight in a row. No gaps.<br /><br />The SNES comes along, and using the power of technology, only grabs parts of the ROM at a time, only for certain addresses, and it grabs other stuff too, like PPU registers, maps that, and  it becomes the SNES memory map.<br /><br />When you code though, you are only coding a ROM. there is no ROM address at $c00000,for instance. and you need to learn discover that $c00000 in HiRom is actually ROM $000000. That's right! <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /> Here's let's observe this in BSNES in a hex editor of the ROM <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /><img src="http://www.cs.umb.edu/~bazz/HiRom_c0.png" alt="Image" /><br /><br />Now a guy without this knowledge would might think he has to get his code at $c0:0000 in the ROM, making sure to do all kinds of strange things like adding enough ROM banks to get to $c0. When he would be doing it all wrong, $c0 is just a mirror of the very FIRST bank. it gets a little weirder. We won't go that far :0 Ok let's go there <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /> so we see $c0 is ROM 00:0000-7FFF, actually ROM 00:8000-FFFF = SNES C0:8000-ffff and also SNES 00:8000-FFFF. That's the gist, and now that you understand that. You can learn the rest yourself from this file (most likely): <a href="http://www.cs.umb.edu/~bazz/SNESMem.txt" class="postlink">http://www.cs.umb.edu/~bazz/SNESMem.txt</a>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>bazz</b> [ Sat Aug 10, 2013 3:59 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: SNES Hi/Fast ROM Header Problems</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">So is it enough to PHB PHA TDA PHA PHX PHY on entry and PLY PLX PLA TAD PLA PLB RTI on exit?</div><br />Tepples want to make one more note on that: when you lack rep/sep in your code, at least on WLA, it may help or even require you to use .INDEX or .ACCU directives to explicitly tell the assembler &quot;the (A/X/Y) register is going to be THIS big (8/16)&quot; this is to make sure that WLA doesn't accidently do the wrong setting without explicit notice through a rep/sep instruction. I used to run into trouble when doing it on my programs that included outside source files that already knew what the P flags would be. But when WLA when to assemble them, <strong>IT</strong> didn't know, so I got code errors. So <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /> Do that. (If you're using WLA), it's good back-knowledge no matter the assembler.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>koitsu</b> [ Sat Aug 10, 2013 5:27 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: SNES Hi/Fast ROM Header Problems</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Comment in passing: I really wish you would stop saying &quot;ROM {some address}&quot;, and start saying &quot;file offset {some address}&quot;.  Example:<br /><br /><div class="quotetitle">bazz wrote:</div><div class="quotecontent">When you code though, you are only coding a ROM. there is no ROM address at $c00000,for instance. and you need to learn discover that $c00000 in HiRom is actually ROM $000000. That's right! :)</div><br />I just got done <a href="http://forums.nesdev.com/viewtopic.php?p=115879#p115879" class="postlink">dealing with that in another thread on this board</a>.  The OP needs to understand that there is no direct correlation between the ROM file offset and actual memory location in the console itself.  All this is further compounded by the different memory modes/models available on the SNES/SFC.<br /><br />TL;DR -- When explaining how something works to someone who has little or no familiarity with a subject, use literal/exact terms and not shortcuts/ambiguous terms (like &quot;ROM&quot;), as all they potentially do is induce confusion in the recipient.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>bazz</b> [ Sat Aug 10, 2013 9:27 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: SNES Hi/Fast ROM Header Problems</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I messed with it some more. Had to add #01 to $420d. Be sure to not bother with this. It's over your head. Why are trying to do this again? I'll be sure to read your original post. Once again, stick with SlowRom, LoRom being the simplest. <a href="http://www.cs.umb.edu/~bazz/Lesson2_fastrom_green_blink.zip" class="postlink">http://www.cs.umb.edu/~bazz/Lesson2_fastrom_green_blink.zip</a><br /><br /><div class="quotetitle">koitsu wrote:</div><div class="quotecontent">Comment in passing: I really wish you would stop saying &quot;ROM {some address}&quot;, and start saying &quot;file offset {some address}&quot;. </div><br />No. The reasoning behind this is that I cannot identify ROM as a file offset. It's on a black chip, I'm not calling it a file offset. I believe the correct logistic is to use prefix SNES for SNES address, and ROM for ROM address. And to clarify this before details is always a +

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sat Aug 10, 2013 10:29 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: SNES Hi/Fast ROM Header Problems</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">bazz wrote:</div><div class="quotecontent">I cannot identify ROM as a file offset. It's on a black chip, I'm not calling it a file offset. I believe the correct logistic is to use prefix SNES for SNES address, and ROM for ROM address.</div><br />I'm inclined to agree. For ROM images without a copier header that aren't split across multiple chips, &quot;ROM offset&quot; and &quot;file offset&quot; are one and the same.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>bazz</b> [ Sat Aug 10, 2013 10:53 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: SNES Hi/Fast ROM Header Problems</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent"><div class="quotetitle">bazz wrote:</div><div class="quotecontent">I cannot identify ROM as a file offset. It's on a black chip, I'm not calling it a file offset. I believe the correct logistic is to use prefix SNES for SNES address, and ROM for ROM address.</div><br />I'm inclined to agree. For ROM images without a copier header that aren't split across multiple chips, &quot;ROM offset&quot; and &quot;file offset&quot; are one and the same.</div><br />Thanks for the support Tepples, not for me for the facts. I stand for the facts.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Ramsis</b> [ Sun Aug 11, 2013 2:50 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: SNES Hi/Fast ROM Header Problems</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">bazz wrote:</div><div class="quotecontent">JSL SNES_init. not JML.. like the guy above me said.</div><br />I didn't say <em>anything</em> like that. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>bazz</b> [ Sun Aug 11, 2013 5:08 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: SNES Hi/Fast ROM Header Problems</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />that was koitsu i was referring to. i was in turbo mode so i didnt bother checking names.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>ARM9</b> [ Sun Aug 11, 2013 7:30 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: SNES Hi/Fast ROM Header Problems</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />+1 to sticking with lorom, hirom is a mess if you're new to the SNES. Fast+lorom is easy enough to implement, can't think of any reason to avoid fastrom.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>koitsu</b> [ Sun Aug 11, 2013 2:12 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: SNES Hi/Fast ROM Header Problems</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">bazz wrote:</div><div class="quotecontent">ha meh that was koitsu i was referring to. i was in turbo mode so i didnt bother checking names.</div><br />I've fixed this. Thank you.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>2</strong> of <strong>3</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>