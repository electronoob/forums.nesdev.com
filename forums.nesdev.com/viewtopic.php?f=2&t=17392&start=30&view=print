<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Collision detection problem with my project.</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Collision detection problem with my project.</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=17392">http://forums.nesdev.com/viewtopic.php?f=2&amp;t=17392</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>3</strong> of <strong>4</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>kikutano</b> [ Sat Jun 09, 2018 7:08 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Collision detection problem with my project.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="codetitle"><b>Code:</b></div><div class="codecontent">LDA BALL_POS_X<br />&nbsp; SEC<br />&nbsp; SBC #$0F&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ; subtrack 16 pixel to put x in the same x space of the tiles<br />&nbsp; <br />&nbsp; LSR A<br />&nbsp; &nbsp;LSR A<br />&nbsp; &nbsp;LSR A<br />&nbsp; &nbsp;LSR A&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; Divide by 16<br />&nbsp; STA BALL_POS_X_ON_TILE<br /><br />&nbsp; LDA BALL_POS_Y<br />&nbsp; SEC<br />&nbsp; SBC #$0F<br /><br />&nbsp; LSR A<br />&nbsp; LSR A<br />&nbsp; LSR A<br />&nbsp; LSR A&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; Divide by 16<br />&nbsp; STA BALL_POX_Y_ON_TILE</div><br /><br />Now I've the position ( x, y ) of the ball on Tile. Now I need to understand how to take the tile from the X and Y position stored in $2007 with this method:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">bg_raw:<br />&nbsp; .db $24,$24,$24,$24,$24,$24,$24,$24,$24,$24,$24,$24,$24,$24,$24,$24,$24,$24,$24,$24,$24,$24,$24,$24,$24,$24,$24,$24,$24,$24,$24,$24 ; 0 raw background<br />bg_lvl_top_corner:&nbsp; <br />&nbsp; .db $24,$2B,$2C,$2C,$2C,$2C,$2C,$2C,$2C,$2C,$2C,$2C,$2C,$2C,$2C,$2C,$2C,$2C,$2C,$2C,$2C,$2C,$2C,$2C,$2B,$24,$24,$24,$24,$24,$24,$24 ; 1 top corner<br />bg_lvl_1_0:<br />&nbsp; .db $24,$2B, $27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27, $2B,$24,$24,$24,$24,$24,$24,$24 ; 2<br />&nbsp; .db $24,$2B, $27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27, $2B,$24,$24,$24,$24,$24,$24,$24 ; 3<br />&nbsp; .db $24,$2B, $27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27, $2B,$24,$1C,$1D,$1E,$0D,$12,$18 ; 4<br />&nbsp; .db $24,$2B, $27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27, $2B,$24,$15,$0E,$0A,$1F,$0E,$1C ; 5<br />&nbsp; .db $24,$2B, $2D,$2E,$2D,$2E,$2D,$2E,$2D,$2E,$2D,$2E,$2D,$2E,$2D,$2E,$2D,$2E,$2D,$2E,$2D,$2E,$2D,$2E, $2B,$24,$24,$24,$02,$00,$01,$08 ; 6<br />&nbsp; .db $24,$2B, $2D,$2E,$2D,$2E,$2D,$2E,$2D,$2E,$2D,$2E,$2D,$2E,$2D,$2E,$2D,$2E,$2D,$2E,$2D,$2E,$2D,$2E, $2B,$24,$24,$24,$24,$24,$24,$24 ; 7<br />&nbsp; .db $24,$2B, $2D,$2E,$2D,$2E,$2D,$2E,$2D,$2E,$2D,$2E,$2D,$2E,$2D,$2E,$2D,$2E,$2D,$2E,$2D,$2E,$2D,$2E, $2B,$24,$24,$24,$24,$24,$24,$24 ; 8<br />&nbsp; .db $24,$2B, $2D,$2E,$2D,$2E,$2D,$2E,$2D,$2E,$2D,$2E,$2D,$2E,$2D,$2E,$2D,$2E,$2D,$2E,$2D,$2E,$2D,$2E, $2B,$24,$24,$24,$24,$24,$24,$24 ; 9<br /><br />bg_lvl_1_1:<br />&nbsp; .db $24,$2B, $27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27, $2B,$24,$24,$24,$24,$24,$24,$24 ; 10<br />&nbsp; .db $24,$2B, $27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27, $2B,$24,$24,$24,$24,$24,$24,$24 ; 11<br />&nbsp; .db $24,$2B, $27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27, $2B,$24,$24,$24,$24,$24,$24,$24 ; 12<br />&nbsp; .db $24,$2B, $27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27, $2B,$24,$24,$24,$24,$24,$24,$24 ; 13<br />&nbsp; .db $24,$2B, $27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27, $2B,$24,$24,$24,$24,$24,$24,$24 ; 14<br />&nbsp; .db $24,$2B, $27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27, $2B,$24,$24,$24,$24,$24,$24,$24 ; 15<br />&nbsp; .db $24,$2B, $27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27, $2B,$24,$24,$24,$24,$24,$24,$24 ; 16<br />&nbsp; .db $24,$2B, $27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27, $2B,$24,$24,$24,$24,$24,$24,$24 ; 17<br /><br />bg_lvl_1_2<br />&nbsp; .db $24,$2B, $27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27, $2B,$24,$24,$24,$24,$24,$24,$24 ; 18<br />&nbsp; .db $24,$2B, $27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27, $2B,$24,$24,$24,$24,$24,$24,$24 ; 19<br />&nbsp; .db $24,$2B, $27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27, $2B,$24,$24,$24,$24,$24,$24,$24 ; 20<br />&nbsp; .db $24,$2B, $27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27, $2B,$24,$24,$24,$24,$24,$24,$24 ; 21<br />&nbsp; .db $24,$2B, $27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27, $2B,$24,$24,$24,$24,$24,$24,$24 ; 22<br />&nbsp; .db $24,$2B, $27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27, $2B,$24,$24,$24,$24,$24,$24,$24 ; 23<br />&nbsp; .db $24,$2B, $27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27, $2B,$24,$24,$24,$24,$24,$24,$24 ; 24<br />&nbsp; .db $24,$2B, $27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27, $2B,$24,$24,$24,$24,$24,$24,$24 ; 25<br /><br />bg_lvl_1_3<br />&nbsp; .db $24,$2B, $27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27, $2B,$24,$24,$24,$24,$24,$24,$24 ; 26<br />&nbsp; .db $24,$2B, $27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27, $2B,$24,$24,$24,$24,$24,$24,$24 ; 27<br />&nbsp; .db $24,$2B, $27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27, $2B,$24,$24,$24,$24,$24,$24,$24 ; 28<br />&nbsp; .db $24,$2B, $27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27, $2B,$24,$24,$24,$24,$24,$24,$24 ; 29</div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Punch</b> [ Sat Jun 09, 2018 8:15 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Collision detection problem with my project.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Kikutano: Check collision.asm on my code if you're trying to figure out angular and subpixel movement, especially this section:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">;This table shows the amount of pixels<br />;that you should travel in the x/y directions<br />;in order to move with a certain speed (1-8)<br />;in 30, 45 or 60 degrees.<br />Vector_Angle_Table:<br />&nbsp; &nbsp;.db 0, 1, 2, 3, 4, 5, 6, 6 ;30 degree X<br />&nbsp; &nbsp;.db 0, 1, 1, 2, 2, 3, 3, 4 ;30 degree Y<br />&nbsp; &nbsp;<br />&nbsp; &nbsp;.db 0, 1, 2, 2, 3, 4, 4, 5 ;45 degree X<br />&nbsp; &nbsp;.db 0, 1, 2, 2, 3, 4, 4, 5 ;45 degree Y<br />&nbsp; &nbsp;<br />&nbsp; &nbsp;.db 0, 1, 1, 2, 2, 3, 3, 4 ;60 degree X<br />&nbsp; &nbsp;.db 0, 1, 2, 3, 4, 5, 6, 6 ;60 degree Y<br />&nbsp; &nbsp;<br />;base 256 fractions to represent the angle as floating point<br />Vector_Fraction_Table:<br />&nbsp; &nbsp;.db 223, 186, 153, 119, 84, 50, 23, 246 ;30 deg X<br />&nbsp; &nbsp;.db 128, 0, 128, 0, 128, 0, 128, 0 ;30 deg Y<br />&nbsp; &nbsp;.db 181, 106, 31, 212, 137, 62, 243, 168 ;45 deg X<br />&nbsp; &nbsp;.db 181, 106, 31, 212, 137, 62, 243, 168 ;45 deg Y<br />&nbsp; &nbsp;.db 128, 0, 128, 0, 128, 0, 128, 0 ;60 deg X<br />&nbsp; &nbsp;.db 223, 186, 153, 119, 84, 50, 23, 246 ;60 deg Y<br />&nbsp; &nbsp;<br />&nbsp; &nbsp;<br />&nbsp; &nbsp;<br />&nbsp; &nbsp;</div><br /><br />Ain't nothing as fast as reading fron a table... <img src="./images/smilies/icon_lol.gif" alt=":lol:" title="Laughing" /> Not that it would be difficult to generate such a table, but to save you the trouble:<br /><br />I, the author, release the code snippet above as Public Domain and forfeit my exclusive Author Intellectual Property Rights (so go ahead and copy it if you want without crediting me). :p

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>kikutano</b> [ Sat Jun 16, 2018 7:54 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Collision detection problem with my project.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I'm working on collision, and it start to works finally <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" />. All bricks are on background, the next step is to compute the bouncing and update the background. Programming for Nes is a pain in the ass, but hey, it's so funny! <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /> I will post here the collision detection code, I hope to upload on Github the entire project when I will finish it.<br /><br /><img src="https://media.giphy.com/media/28EyGiLoFrAwE6O2zS/giphy.gif" alt="Image" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>kikutano</b> [ Mon Jun 25, 2018 12:14 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Collision detection problem with my project.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><img src="https://thumbs.gfycat.com/LazyRipeGrayfox-max-1mb.gif" alt="Image" /><br /><br />Hello! Some progress here and new doubts! The collision detection works great with background. But I've a couple of question about the way to address the nametables where I want to compute the collision.<br /><br />I load the background in this way:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">LDX #$00 <br />LoadBackgroundLVLLoop: <br />&nbsp; LDA bg_lvl_1_0, x&nbsp; &nbsp; &nbsp; <br />&nbsp; STA $2007&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<br />&nbsp; INX&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<br />&nbsp; CPX #$00&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <br />&nbsp; BNE LoadBackgroundLVLLoop<br />&nbsp; <br />&nbsp; LDX #$00<br />LoadBackgroundLVLLoop1: <br />&nbsp; LDA bg_lvl_1_1, x&nbsp; &nbsp; &nbsp; <br />&nbsp; STA $2007&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<br />&nbsp; INX&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<br />&nbsp; CPX #$00&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <br />&nbsp; BNE LoadBackgroundLVLLoop1<br /><br />&nbsp; LDX #$00<br />LoadBackgroundLVLLoop2: <br />&nbsp; LDA bg_lvl_1_2, x&nbsp; &nbsp; &nbsp; <br />&nbsp; STA $2007&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<br />&nbsp; INX&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<br />&nbsp; CPX #$00&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <br />&nbsp; BNE LoadBackgroundLVLLoop2<br /><br />&nbsp; LDX #$00<br />LoadBackgroundLVLLoop3: <br />&nbsp; LDA bg_lvl_1_3, x&nbsp; &nbsp; &nbsp; <br />&nbsp; STA $2007&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<br />&nbsp; INX&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<br />&nbsp; CPX #$80&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <br />&nbsp; BNE LoadBackgroundLVLLoop3</div><br /><br />With 4 loop because I can't count over 256, so now I'm calculating the collision only on <div class="codetitle"><b>Code:</b></div><div class="codecontent">bg_lvl_1_0</div> in this way:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">PerformBallColWithBrickLeft:<br />&nbsp; LDX BALL_POS_X_ON_TILE<br />&nbsp; LDA bg_lvl_1_0, x<br />&nbsp; CMP #$2D<br />&nbsp; BEQ PerformBallCollisionWithBrick</div><br /><br />So, there is a way to switch dynamically <div class="codetitle"><b>Code:</b></div><div class="codecontent">bg_lvl_1_0</div> with, for example, <div class="codetitle"><b>Code:</b></div><div class="codecontent">bg_lvl_1_1</div>? I need this not only to compute the collision on the portion of the background, but also to load a new background for a new level. <br /><br />Can I do something like this? :<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">LDA bg_lvl_1_0<br />&nbsp; STA NAMETABLE_TO_LOAD<br /><br />&nbsp; LDX #$00 <br />LoadBackgroundLVLLoop: <br />&nbsp; LDA NAMETABLE_TO_LOAD, x&nbsp; &nbsp; &nbsp; <br />&nbsp; STA $2007&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<br />&nbsp; INX&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<br />&nbsp; CPX #$00&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <br />&nbsp; BNE LoadBackgroundLVLLoop<br /></div><br /><br />So I can change only NAMETABLE_TO_LOAD? Thanks a lot!

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Mon Jun 25, 2018 9:07 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Collision detection problem with my project.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />So your problem it's basically that you don't know how to have dynamic access to more than 256 bytes,is that it? What you need to do is use a pointer. A pointer is a pair of consecutive memory positions in ZP, that together form a 16-bit address, which's able to point anywhere in the 6502's 16-bit address space.<br /><br />Say you have #$00 stored at $0040, and #$84 stored at $0041. The instruction <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">LDA &#40;$40&#41;, Y</tt> will load the value at address $8400+Y. This is similar to the regular indexed addressing mode you've been using, except that the base address isn't fixed, it's stored in RAM and you can change it. This way you can update the address in RAM when the index (Y) goes over 255, so you can access tables longer than 256 bytes.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>dougeff</b> [ Mon Jun 25, 2018 10:00 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Collision detection problem with my project.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />missing parentheses.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>kikutano</b> [ Mon Jun 25, 2018 10:02 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Collision detection problem with my project.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">So your problem it's basically that you don't know how to have dynamic access to more than 256 bytes,is that it? What you need to do is use a pointer. A pointer is a pair of consecutive memory positions in ZP, that together form a 16-bit address, which's able to point anywhere in the 6502's 16-bit address space.<br /></div><br /><br />Ok thanks! But I want to know if how can I do something like this:<br /><br />  <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">LDA bg_lvl_1_0<br />  STA NAMETABLE_TO_LOAD<br /><br />  LDX #$00 <br />LoadBackgroundLVLLoop: <br />  LDA NAMETABLE_TO_LOAD, x      <br />  STA $2007               <br />  INX                     <br />  CPX #$00                <br />  BNE LoadBackgroundLVLLoop</tt><br /><br />where bg_lvl1_1_0 is the nametable that I want to draw:<br /><br /><tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">bg_lvl_1_0:<br />  .db $24,$2B, $27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27,$27, $2B,$24,$24,$24,$24,$24,$24,$24 ; 2<br />....</tt><br /><br />So there is a way to use NAMETABLE_TO_LOAD as variable to it can point to bg_lvl_1_0 or another level for example bg_lvl_2_0? So I can compute the collision on the current Level?<br /><br /><tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">PerformBallColWithBrickLeft:<br />  LDX BALL_POS_X_ON_TILE<br />  LDA bg_lvl_1_0, x &#40;  LDA NAMETABLE_TO_LOAD, x &#41;<br />  CMP #$2D<br />  BEQ PerformBallCollisionWithBrick</tt><br /><br />In short words, I need to change and draw the level dynamically and compute the collision using the background information of the level. Maybe it's the wrong way, I don't know, this is my first time on a Nes and on ASM! Thanks a lot!  <img src="./images/smilies/icon_redface.gif" alt=":oops:" title="Embarassed" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Mon Jun 25, 2018 10:47 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Collision detection problem with my project.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">dougeff wrote:</div><div class="quotecontent">missing parentheses.</div><br />Oh, sorry about that. Yeah, it's supposed to be <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">LDA &#40;$40&#41;, Y</tt> in my example above. Or <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">LDA [$40], Y</tt> if you're using NESASM.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Mon Jun 25, 2018 11:42 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Collision detection problem with my project.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The straightforward way to do what you want is to have a list of pointers to the name tables you have, like this:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">Level0Data:<br />.db $24, $2B, $27, $27, (...)<br /><br />Level1Data:<br />.db $20, $4B, $28, $28, (...)<br /><br />Level1Data:<br />.db $34, $40, $16, $4B, (...)<br /><br />LevelPointers:<br />.dw Level0Data, Level1Data, Level2Data</div><br />Then you can copy any of the pointers to ZP and access the data via indirect addressing. Here's an example routine to copy a name table to VRAM:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">;call this subroutine with the map index in register A<br />CopyBackground:<br /><br />&nbsp; ;multiply the index by 2, since each pointer is 2 bytes, and put it in an index register<br />&nbsp; asl<br />&nbsp; tay<br /><br />&nbsp; ;copy the pointer to zero page<br />&nbsp; lda LevelPointers+0, y<br />&nbsp; sta Pointer+0<br />&nbsp; lda LevelPointers+1, y<br />&nbsp; sta Pointer+1<br /><br />&nbsp; ;copy 1024 bytes from the location indicated by the pointer to VRAM<br />&nbsp; ldx #$04<br />&nbsp; ldy #$00<br />CopyByte:<br />&nbsp; lda (Pointer), y<br />&nbsp; sta $2007<br />&nbsp; iny<br />&nbsp; bne CopyByte ;go copy another byte if less than 256 have been copied<br />&nbsp; inc Pointer+1 ;advance the pointer by 256 positions<br />&nbsp; dex<br />&nbsp; bne CopyByte ;go copy 256 more bytes if less than 1024 have been copied<br /><br />&nbsp; rts</div><br />You can use the same pointers for collision purposes, you just need to fetch the base address from the table of level pointers, add the offset of the tile you want, and then use the result as a pointer to read the tile. Something like this:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">;X coordinate in register A, Y coordinate in register X<br />GetTile:<br /><br />&nbsp; ;divide the X coordinate by 8<br />&nbsp; lsr<br />&nbsp; lsr<br />&nbsp; lsr<br />&nbsp; tay<br /><br />&nbsp; ;simulate a division by 8 followed by a multiplication by 32 of the Y coordinate<br />&nbsp; lda #$00<br />&nbsp; sta Pointer+1<br />&nbsp; txa<br />&nbsp; and #%11111000<br />&nbsp; asl<br />&nbsp; rol Pointer+1<br />&nbsp; asl<br />&nbsp; rol Pointer+1<br /><br />&nbsp; ;add the result to the base address of the NT<br />&nbsp; adc CurrentLevelPointer+0<br />&nbsp; sta Pointer+0<br />&nbsp; lda Pointer+1<br />&nbsp; adc CurrentLevelPointer+1<br />&nbsp; sta Pointer+1<br /><br />&nbsp; ;get the tile<br />&nbsp; lda (Pointer), y<br /><br />&nbsp; rts</div><br />This subroutine expects coordinates in pixel units, since that's what you'll probably have. It also assumes you have cached the current level pointer, so you don't have to read it off the table every time you need it.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>kikutano</b> [ Mon Jun 25, 2018 11:47 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Collision detection problem with my project.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Thanks a lot! I will try now!  <img src="./images/smilies/Mfr_icon_homebrew.png" alt=":beer:" title="Beer" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Tue Jun 26, 2018 8:14 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Collision detection problem with my project.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Even though I made an example routine that reads individual tiles from the level maps in RAM, I don't think you'll be doing that in the game, right? I mean, since the blocks are breakable, it makes no sense to read the original state of the map from ROM.<br /><br />What's your approach, then? Do you keep a copy of the level in RAM, using half of the total RAM to make the level destructible? Or do you read map data from VRAM during vblank? Either way, you still have to calculate the tile's offset using the <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">offset = TileY * 32 + TileX</tt> formula.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>kikutano</b> [ Tue Jun 26, 2018 9:15 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Collision detection problem with my project.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">Even though I made an example routine that reads individual tiles from the level maps in RAM, I don't think you'll be doing that in the game, right? I mean, since the blocks are breakable, it makes no sense to read the original state of the map from ROM.<br /></div><br /><br />I don't know yet, probably I will copy the level in RAM. Btw, I'm trying to run your code, but the result is as you can see in the screen. <br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">;multiply the index by 2, since each pointer is 2 bytes, and put it in an index register<br />&nbsp; asl A<br />&nbsp; tay<br /><br />&nbsp; ;copy the pointer to zero page<br />&nbsp; lda LevelPointers+0, y<br />&nbsp; sta NAMETABLE_TO_LOAD+0<br />&nbsp; lda LevelPointers+1, y<br />&nbsp; sta NAMETABLE_TO_LOAD+1<br /><br />&nbsp; ;copy 1024 bytes from the location indicated by the pointer to VRAM<br />&nbsp; ldx #$04<br />&nbsp; ldy #$00<br />CopyByte:<br />&nbsp; lda (NAMETABLE_TO_LOAD), y<br />&nbsp; sta $2007<br />&nbsp; iny<br />&nbsp; bne CopyByte ;go copy another byte if less than 256 have been copied<br />&nbsp; inc NAMETABLE_TO_LOAD+1 ;advance the pointer by 256 positions<br />&nbsp; dex<br />&nbsp; bne CopyByte ;go copy 256 more bytes if less than 1024 have been copied</div><br /><br />For some reason the tile pointed is always &quot;0&quot; any idea? Thanks!

		
			<br clear="all" /><br />

			<table class="tablebg" width="100%" cellspacing="1">
			<tr>
				<td><b class="genmed">Attachments: </b></td>
			</tr>
			
				<tr>
					<td>
			<a href="./download/file.php?id=12889&amp;mode=view"><img src="./download/file.php?id=12889&amp;t=1" alt="Schermata 2018-06-26 alle 18.13.23.png" /></a><br />
			<span class="gensmall">Schermata 2018-06-26 alle 18.13.23.png [ 41.15 KiB | Viewed 2052 times ]</span>
		

		<br />
	</td>
				</tr>
			
			</table>
		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Tue Jun 26, 2018 9:23 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Collision detection problem with my project.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />There's nothing wrong in the code that I can see... It could be something in the variable declarations or somewhere else. Have you extended NAMETABLE_TO_LOAD to 16 bits, now that it has to hold an address?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>kikutano</b> [ Tue Jun 26, 2018 9:38 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Collision detection problem with my project.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />This is my variables declarations:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">BALL_POS_X&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; .rs 1 ;$0000<br />BALL_POS_Y&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; .rs 1 ;$0001<br />BALL_DIRECTION_X&nbsp; &nbsp; &nbsp; &nbsp; .rs 1<br />BALL_DIRECTION_Y&nbsp; &nbsp; &nbsp; &nbsp; .rs 1<br />BALL_IS_DIR_X_POSITIVE&nbsp; .rs 1<br />BALL_IS_DIR_Y_POSITIVE&nbsp; .rs 1<br />PADDLE_RIGHT_X_POSITION .rs 1<br />PADDLE_LEFT_X_POSITION&nbsp; .rs 1<br />BRICK_Y_MAX&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;.rs 1<br />BALL_IS_COLL_WITH_BRICK .rs 1<br />BALL_POS_X_ON_TILE&nbsp; &nbsp; &nbsp; .rs 1<br />BALL_POS_Y_ON_TILE&nbsp; &nbsp; &nbsp; .rs 1<br />BALL_POS_X_ON_TILE_PREV .rs 1<br />BALL_POS_Y_ON_TILE_PREV .rs 1<br />BALL_POS_NEXT_TILE&nbsp; &nbsp; &nbsp; .rs 1<br />NAMETABLE_TO_LOAD&nbsp; &nbsp; &nbsp; &nbsp;.rs 2</div><br /><br />The sourcecode complete is here: <!-- m --><a class="postlink" href="https://pastebin.com/689fHti0">https://pastebin.com/689fHti0</a><!-- m --><br /><br />Btw, I've another question, just to understand how Assembly works. In this example code:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">LDX #$00<br />&nbsp; LDA LevelPointers, x<br />&nbsp; STA NAMETABLE_TO_LOAD <br /><br />&nbsp; LDX #$00 <br />LoadBackgroundLVLLoop: <br />&nbsp; LDA (NAMETABLE_TO_LOAD), x&nbsp; &nbsp; &nbsp; <br />&nbsp; STA $2007&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<br />&nbsp; INX&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<br />&nbsp; CPX #$00&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <br />&nbsp; BNE LoadBackgroundLVLLoop</div><br /><br />NAMETABLE_TO_LOAD should point to first elemento of LevelPointers right? So when i do <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">LDA &#40;NAMETABLE_TO_LOAD&#41;, x</tt> and increase the x by INX it should point to the next element of the NAMETABLE? Right?<br /><br />I know I can't works on the ROM memory to change the tile and hide the bricks on the screen, but I'm learning step by step so any suggests is welcome, even some article to read about! <img src="./images/smilies/icon_razz.gif" alt=":P" title="Razz" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Tue Jun 26, 2018 12:04 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Collision detection problem with my project.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">kikutano wrote:</div><div class="quotecontent">NAMETABLE_TO_LOAD should point to first elemento of LevelPointers right? So when i do <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">LDA &#40;NAMETABLE_TO_LOAD&#41;, x</tt> and increase the x by INX it should point to the next element of the NAMETABLE? Right?</div><br />Well, each entry in the table is 2 bytes (i.e. a 16-bit address), but the 6502 can only load/store one byte at a time. This means that index 0 is the low byte of the first element, index 1 is the high byte of the first element, index 2 is the low byte of the second element, and so on. This is why my example code multiplies the level index by 2. I also used a &quot;trick&quot; to read from the table... I could've used INX/INY to reach the high byte of the address, but I can just as well leave the index untouched and read from a base address 1 byte after the start of the table (i.e. LevelPointers+1), so final address read is the same, and I saved 2 cycles.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><div class="codetitle"><b>Code:</b></div><div class="codecontent">LDA (NAMETABLE_TO_LOAD), x</div></div><br />This addressing mode doesn't work with X, only with Y, so plan your register use accordingly.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>3</strong> of <strong>4</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>