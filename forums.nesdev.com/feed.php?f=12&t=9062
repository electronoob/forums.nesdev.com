<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=12&amp;t=9062" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2012-07-09T00:17:08-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=12&amp;t=9062</id>
<entry>
<author><name><![CDATA[fireaza]]></name></author>
<updated>2012-07-09T00:17:08-07:00</updated>
<published>2012-07-09T00:17:08-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9062&amp;p=96638#p96638</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9062&amp;p=96638#p96638"/>
<title type="html"><![CDATA[Been reading up on SNES repos, have I got my facts straight?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9062&amp;p=96638#p96638"><![CDATA[
Okay, thanks!<br /><br />I'd always been curious about that little extra bit where the mask ROMs were soldered in, the markings clearly indicate that it's for a larger mask ROM, but I've never seen on that big being used.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5347">fireaza</a> — Mon Jul 09, 2012 12:17 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[qwertymodo]]></name></author>
<updated>2012-07-09T00:13:36-07:00</updated>
<published>2012-07-09T00:13:36-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9062&amp;p=96637#p96637</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9062&amp;p=96637#p96637"/>
<title type="html"><![CDATA[Been reading up on SNES repos, have I got my facts straight?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9062&amp;p=96637#p96637"><![CDATA[
The Mask ROM is always the same.  Take a look at that diagram and you'll see that even between the 32 and 36 pin versions, all of the pins are the same except the extra 4  on the one end (you can even see it marked on 36-pin boards where you could put a 32-pin one in instead if you didn't need a large ROM).  As far as indexing from 0 or 1, that is purely in the diagrams and making sure you match up the pins correctly (i.e. if one diagram indexes from 0 and the other from 1, then A0 from the first diagram matches with A1 from the second, and so on.  Same for the data pins).  The only "extra" pins you might find on an EEPROM that don't exist on the Mask ROM are the /WE (write enable, Mask ROMs were read only, so no need for a write enable pin), and maybe a second CE (chip enable, sometimes they would have a CE and a /CE for extra protection during power-up and power-down).  Read the data sheet for the EEPROM/Flash ROM you intend to use, compare it to the pinout for the Mask ROM and just connect the dots.  Any pins that are in different places need to be lifted and rewired.  If there are extra pins or pins named differently, try to figure out what they're for.  Also, be aware that pins marked like /PIN or PIN# (the actual symbol "#", not a number) or have a line over the pin name, indicate that those pins are enabled when the signal is low, so keep that in mind with things like /WE (so you need to connect it to ground when you're programming it, but after it's programmed, connect it to +5v in order to disable writing and set it as read-only).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5348">qwertymodo</a> — Mon Jul 09, 2012 12:13 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[fireaza]]></name></author>
<updated>2012-07-07T19:52:09-07:00</updated>
<published>2012-07-07T19:52:09-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9062&amp;p=96610#p96610</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9062&amp;p=96610#p96610"/>
<title type="html"><![CDATA[Been reading up on SNES repos, have I got my facts straight?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9062&amp;p=96610#p96610"><![CDATA[
<div class="quotetitle">qwertymodo wrote:</div><div class="quotecontent"><br />Yes, the wiring is different depending on the chip used.  A lot of the chips use standard pinouts, but even then, the "standard" pinout can be different depending on the capacity of the chip (in the case where you have 2 different capacities with the same pin count).  Check the datasheets and compare them to the relevant <a href="http://www.caitsith2.net/snes/flashcart/cart-chip-pinouts.html#rom" class="postlink">ROM pinout</a>.  Any pins that match up can be soldered in straight.  Any that don't need to be lifted and rewired to match.<br /></div><br />Okay, so let me get this straight. The mask ROMs in a SNES cart are consistent (I could only find two sets of pin outs, one for 32 pin, the other for 36 with the note of "This seems to be consistent with all their mask ROMs" on that site you linked to) however this may differ depending on what eprom/eeprom you choose, in which case, you would need to compare the design? In that case, does the design of a particular eprom (say, a 27C801, which requires the wiring in the above photo) stay consistent, even between brands? <br /><br /><br /><div class="quotetitle">qwertymodo wrote:</div><div class="quotecontent"><br />Also, any input pins that exist in an EEPROM/Flash ROM but not in a Mask ROM (/WE is the only one I can think of) also need to be lifted and tied either to GND or to VCC (for instance, /WE should go to VCC to disable writing to the ROM once it's been programmed).<br /></div><br />Okay, so normally both the mask ROM and an eprom would both have data pins, but on the rare occasion, you'll find games that that used mask ROMs that don't have these data pins? In this case, would the mask ROM have less pins?<br /><br /><div class="quotetitle">qwertymodo wrote:</div><div class="quotecontent"><br />Also, be sure whether or not the address and data pin numbers are indexed from 0 or from 1 (basically whether or not there is an A0/D0 pin), and (for single supply voltage diagrams) Vcc=Vdd, Vss=GND<br /></div><br />As with the question in my first paragraph, would whether or not  a eprom is indexed from 0 or 1 be consistent between different types and brands? If I had an eeprom that I knew was suitable, I could continue buying it without issue?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5347">fireaza</a> — Sat Jul 07, 2012 7:52 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[qwertymodo]]></name></author>
<updated>2012-07-07T13:47:58-07:00</updated>
<published>2012-07-07T13:47:58-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9062&amp;p=96597#p96597</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9062&amp;p=96597#p96597"/>
<title type="html"><![CDATA[Been reading up on SNES repos, have I got my facts straight?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9062&amp;p=96597#p96597"><![CDATA[
Yes, the wiring is different depending on the chip used.  A lot of the chips use standard pinouts, but even then, the "standard" pinout can be different depending on the capacity of the chip (in the case where you have 2 different capacities with the same pin count).  Check the datasheets and compare them to the relevant <a href="http://www.caitsith2.net/snes/flashcart/cart-chip-pinouts.html#rom" class="postlink">ROM pinout</a>.  Any pins that match up can be soldered in straight.  Any that don't need to be lifted and rewired to match.  Also, any input pins that exist in an EEPROM/Flash ROM but not in a Mask ROM (/WE is the only one I can think of) also need to be lifted and tied either to GND or to VCC (for instance, /WE should go to VCC to disable writing to the ROM once it's been programmed).<br /><br />Also, be sure whether or not the address and data pin numbers are indexed from 0 or from 1 (basically whether or not there is an A0/D0 pin), and (for single supply voltage diagrams) Vcc=Vdd, Vss=GND<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5348">qwertymodo</a> — Sat Jul 07, 2012 1:47 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[fireaza]]></name></author>
<updated>2012-07-07T09:48:00-07:00</updated>
<published>2012-07-07T09:48:00-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9062&amp;p=96585#p96585</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9062&amp;p=96585#p96585"/>
<title type="html"><![CDATA[Been reading up on SNES repos, have I got my facts straight?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9062&amp;p=96585#p96585"><![CDATA[
Thanks for the info!<br /><br /><div class="quotetitle">qwertymodo wrote:</div><div class="quotecontent"><br />You also won't be able to use an x16 ROM (so be careful there, I've made that mistake.  For instance the vast majority of Microchip's parallel Flash ROM lineup is x16).<br /></div><br />x16? Like, 16 bit or something? That's not a term I'm familiar with (unsurprising, since I've only just recently looked into how to make SNES repros <img src="http://forums.nesdev.com/images/smilies/icon_razz.gif" alt=":P" title="Razz" />)<br /><br /><br /><div class="quotetitle">qwertymodo wrote:</div><div class="quotecontent"><br />As far as the wiring, be sure to check (and double/triple check!) the datasheets for the relevant pinouts.  Just connect the correct signals together and you'll be fine.<br /></div><br />Does the wiring occasionally change? I was kinda hoping it would always be in this position:<br /><img src="http://img.photobucket.com/albums/v31/fireaza/6448602089_9273fb9889_z.jpg" alt="Image" /><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5347">fireaza</a> — Sat Jul 07, 2012 9:48 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[qwertymodo]]></name></author>
<updated>2012-07-07T09:14:18-07:00</updated>
<published>2012-07-07T09:14:18-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9062&amp;p=96582#p96582</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9062&amp;p=96582#p96582"/>
<title type="html"><![CDATA[Been reading up on SNES repos, have I got my facts straight?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9062&amp;p=96582#p96582"><![CDATA[
EEPROMs were around before Flash technology, so Flash ROMs are usually considered a separate technology.  EEPROMs run on 5v, where most Flash ROMs run on 3.3v.  Converting a 3.3v ROM to work with the SNES (which expects 5v logic) is a real pain.  However, there are a few 5v Flash ROMs (the AM29F032 being one of them, the SST39SF040 being another), just most have become obsolete in favor of the 3.3v ones.  For the most part, you won't be able to use a 3.3v ROM for the SNES.  You also won't be able to use an x16 ROM (so be careful there, I've made that mistake.  For instance the vast majority of Microchip's parallel Flash ROM lineup is x16).  I'm not sure about mixing Flash and EEPROMs, but I think it should work so long as both ROMs are faster than 120ns (the speeds shouldn't have to match so long as both are fast enough).  I managed to pick up a lot of 10 AM29F032's for $40 shipped, so honestly to me it's just easier to use them rather than messing with other ROMs (at least for now... I'm in the process of trying to make a currently in-production 3.3v ROM work so I don't have to keep sourcing obsolete parts, but that's down the road a ways...).<br /><br />As far as the wiring, be sure to check (and double/triple check!) the datasheets for the relevant pinouts.  Just connect the correct signals together and you'll be fine.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5348">qwertymodo</a> — Sat Jul 07, 2012 9:14 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[fireaza]]></name></author>
<updated>2012-07-06T21:42:10-07:00</updated>
<published>2012-07-06T21:42:10-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9062&amp;p=96568#p96568</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9062&amp;p=96568#p96568"/>
<title type="html"><![CDATA[Been reading up on SNES repos, have I got my facts straight?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9062&amp;p=96568#p96568"><![CDATA[
<div class="quotetitle">qwertymodo wrote:</div><div class="quotecontent"><br /><div class="quotetitle">fireaza wrote:</div><div class="quotecontent">Is <a href="http://www.buyicnow.com/vp.php?pd=595" class="postlink">THIS</a> the chip you're talking about? I notice it's an eeprom, while the 8 megabit chip I was looking to use is an eprom, it's safe to mix eeproms and eproms right?<br /></div><br /><br />The SST39SF040 isn't an EEPROM, it's a Flash ROM (which, I suppose is technically an EEPROM, but you don't typically call Flash ROMs EEPROMs).   <a href="http://www.microchip.com/wwwproducts/Devices.aspx?dDocName=en549494" class="postlink">Here's the official product page</a></div><br />Oh, I thought flash ROMs were eeproms since they're electronically erasable, thanks for the clarification! Either way, is it OK to use a mix of flash ROMs and eproms? And it will require the two crossed wires, just like the 27C801 correct?<br /><br />And I may have ninja'ed you with that edit I made to the previous post, but what's the deal with voltage on eproms/eeproms? Is this something I should be checking when I'm looking at chips?<br /><br /><div class="quotetitle">qwertymodo wrote:</div><div class="quotecontent"><br />I don't know what kind of copy protection different games have, but IIRC the typical check is for a game designed for 64K SRAM to check if 256K SRAM is present because many copiers contained that much SRAM (in order to support games that used 256K) and if it detects that there is in fact more than 64K, it assumes you are using a copier and that triggers the copy protection.  Doubling the ROM will not affect this.  The game will have no way of detecting it.  It would be the same if you grounded the high address lines or doubled the ROM or whatever.  I don't know of any copy protection that could possibly be triggered by a larger ROM as long as the upper address lines are properly dealt with.  You technically aren't modifying the ROM as far as the console is concerned (as long as you do it right).<br /></div><br />That makes sense, thanks! Upon further reading, the protection I mentioned earlier all ties back to attempting to defeat the code involved in the first layer of copy protection (if there's more SRAM than there should be) if you haven't altered that code (which would be unnecessary if you're using the original SFC version of the game as the donor), then you should be sweet.<br /><br />*EDIT* On the subject of ROM padding, I've been pointed to <a href="http://fusoya.eludevisibility.org/le/index.html" class="postlink">THIS PROGRAM</a>. It looks pretty good to me! Thoughts guys?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5347">fireaza</a> — Fri Jul 06, 2012 9:42 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[qwertymodo]]></name></author>
<updated>2012-07-06T21:30:09-07:00</updated>
<published>2012-07-06T21:30:09-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9062&amp;p=96566#p96566</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9062&amp;p=96566#p96566"/>
<title type="html"><![CDATA[Been reading up on SNES repos, have I got my facts straight?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9062&amp;p=96566#p96566"><![CDATA[
<div class="quotetitle">fireaza wrote:</div><div class="quotecontent"><br />Is <a href="http://www.buyicnow.com/vp.php?pd=595" class="postlink">THIS</a> the chip you're talking about? I notice it's an eeprom, while the 8 megabit chip I was looking to use is an eprom, it's safe to mix eeproms and eproms right?<br /></div><br /><br />The SST39SF040 isn't an EEPROM, it's a Flash ROM (which, I suppose is technically an EEPROM, but you don't typically call Flash ROMs EEPROMs).   <a href="http://www.microchip.com/wwwproducts/Devices.aspx?dDocName=en549494" class="postlink">Here's the official product page</a><br /><br />That does help, thanks! I feel a more relieved about using a doubled ROM, but burning a eprom that's made up of a ROM consisting of 4 back halves and 2 front halves of a ROM still kinda freaks me out <img src="http://forums.nesdev.com/images/smilies/icon_razz.gif" alt=":P" title="Razz" /> I think in this case, I'd definitely go for a 2 eprom configuration, assuming all non-power of 2 games used 2x mask roms <img src="http://forums.nesdev.com/images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /> <br /><br /><div class="quotetitle">fireaza wrote:</div><div class="quotecontent"><br />Just to to be sure, would altering the ROM trip the copy protection on games that have it? Take EarthBound's sadistic (it erases your saves at the end boss!) protection, at multiple points, the game checks to see if it's been altered, and the copy protection will spring into action if it has. From what you've described, the game should be reading the same data from the ROM as if there were only one copy in the eprom, but I thought I'd check!<br /></div><br /><br />I don't know what kind of copy protection different games have, but IIRC the typical check is for a game designed for 64K SRAM to check if 256K SRAM is present because many copiers contained that much SRAM (in order to support games that used 256K) and if it detects that there is in fact more than 64K, it assumes you are using a copier and that triggers the copy protection.  Doubling the ROM will not affect this.  The game will have no way of detecting it.  It would be the same if you grounded the high address lines or doubled the ROM or whatever.  I don't know of any copy protection that could possibly be triggered by a larger ROM as long as the upper address lines are properly dealt with.  You technically aren't modifying the ROM as far as the console is concerned (as long as you do it right).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5348">qwertymodo</a> — Fri Jul 06, 2012 9:30 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[fireaza]]></name></author>
<updated>2012-07-06T21:03:22-07:00</updated>
<published>2012-07-06T21:03:22-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9062&amp;p=96565#p96565</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9062&amp;p=96565#p96565"/>
<title type="html"><![CDATA[Been reading up on SNES repos, have I got my facts straight?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9062&amp;p=96565#p96565"><![CDATA[
<div class="quotetitle">qwertymodo wrote:</div><div class="quotecontent"><br /><div class="quotetitle">fireaza wrote:</div><div class="quotecontent">It works out to be about $6 for both chips, vs $12 for the 29F032 and TSOP adaptor <img src="http://forums.nesdev.com/images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /> With regards to brands, obviously AMD is a good choice for the 27C040. For the 27C801, I've got a choice between ST, ATMEL, MXIC and NEC. NEC is the only brand I recognise there, so them maybe? They're all DIP32 with a speed of 120ns or less, so I'm not sure how much brand matters.<br /></div><br /><br />Brand isn't a big deal.  I've used Atmel and ST parts before as well, I know Nintendo used NEC parts for various things in their consoles.  Also, something to consider is if you only need 4 or 8Mbit, check out the SST39SF040 by Microchip.  It's a 5V x8 parallel flash ROM in a 32 DIP or TSOP package that's still in production.  It's basically the only one I know of that's still in production, most have gone to 3.3v, and it's even hard to find x8's period (thankfully there are a few selectable x8/x16's like Micron's M28W/M29W line).</div><br />Is <a href="http://www.buyicnow.com/vp.php?pd=595" class="postlink">THIS</a> the chip you're talking about?  I notice it's an eeprom, while the 8 megabit chip I was looking to use is an eprom, it's safe to mix eeproms and eproms right? Also voltage? Does the voltage requirements of eeprom/eproms very?<br /><br /><div class="quotetitle">qwertymodo wrote:</div><div class="quotecontent"><br />As far as doubling up the file to fill the ROM, maybe I can help explain that.  Think of the address lines as though they were switches.  Take the highest address line and if you turn it on, you are pointing at the "top" half of the ROM and if it's off, you're pointing to the "bottom" half.  Now go to the next highest line and if it's on, it points to the top half of the half selected by the highest address line, if it's off, the bottom half.  You keep doing that all the way until you've switched all of your address lines the way you want and you've cut it in half enough times that now you're pointing at a single byte.  Now, imagine that you're using a 16Mbit game on a 32Mbit ROM.  You want the highest address line to always be off because nothing should be in the top half of the ROM.  However, depending on how the chip is wired in, that address line might not be pulled to ground.  If an input pin is not connected to anything, it is what is called "floating", which means it is susceptible to EM interference in the air and will appear as though you are rapidly flipping the switch on and off and you can't guarantee which it will be at any given moment.  So, if you duplicate your ROM so that you have the same data in both the bottom and top half of the chip, it won't matter whether that high address line is on or off, it will read the same data regardless.  The other option is to just guarantee that the high address line is always off, which is easy to do (connect the pin to ground), but if you're only putting a single ROM file on the chip anyway, why not fill it just to be safe?  It's simple when you have ROMs of powers of two because of the way the address lines "cut it in half" over and over, it's a bit more complex with 12/24/28Mbit ROMs because they aren't powers of two and don't line up with the "halfway mark" so you first have to copy a small part to fill it to that point, then duplicate the entire thing from there.  Does that help at all?<br /></div><br />That does help, thanks! I feel a more relieved about using a doubled ROM, but burning a eprom that's made up of a ROM consisting of 4 back halves and 2 front halves of a ROM still kinda freaks me out <img src="http://forums.nesdev.com/images/smilies/icon_razz.gif" alt=":P" title="Razz" /> I think in this case, I'd definitely go for a 2 eprom configuration, assuming all non-power of 2 games used 2x mask roms <img src="http://forums.nesdev.com/images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /> <br /><br />Just to to be sure, would altering the ROM trip the copy protection on games that have it? Take EarthBound's sadistic (it erases your saves at the end boss!) protection, at multiple points, the game checks to see if it's been altered, and the copy protection will spring into action if it has. From what you've described, the game should be reading the same data from the ROM as if there were only one copy in the eprom, but I thought I'd check!<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5347">fireaza</a> — Fri Jul 06, 2012 9:03 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[qwertymodo]]></name></author>
<updated>2012-07-06T19:53:07-07:00</updated>
<published>2012-07-06T19:53:07-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9062&amp;p=96562#p96562</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9062&amp;p=96562#p96562"/>
<title type="html"><![CDATA[Been reading up on SNES repos, have I got my facts straight?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9062&amp;p=96562#p96562"><![CDATA[
As far as doubling up the file to fill the ROM, maybe I can help explain that.  Think of the address lines as though they were switches.  Take the highest address line and if you turn it on, you are pointing at the "top" half of the ROM and if it's off, you're pointing to the "bottom" half.  Now go to the next highest line and if it's on, it points to the top half of the half selected by the highest address line, if it's off, the bottom half.  You keep doing that all the way until you've switched all of your address lines the way you want and you've cut it in half enough times that now you're pointing at a single byte.  Now, imagine that you're using a 16Mbit game on a 32Mbit ROM.  You want the highest address line to always be off because nothing should be in the top half of the ROM.  However, depending on how the chip is wired in, that address line might not be pulled to ground.  If an input pin is not connected to anything, it is what is called "floating", which means it is susceptible to EM interference in the air and will appear as though you are rapidly flipping the switch on and off and you can't guarantee which it will be at any given moment.  So, if you duplicate your ROM so that you have the same data in both the bottom and top half of the chip, it won't matter whether that high address line is on or off, it will read the same data regardless.  The other option is to just guarantee that the high address line is always off, which is easy to do (connect the pin to ground), but if you're only putting a single ROM file on the chip anyway, why not fill it just to be safe?  It's simple when you have ROMs of powers of two because of the way the address lines "cut it in half" over and over, it's a bit more complex with 12/24/28Mbit ROMs because they aren't powers of two and don't line up with the "halfway mark" so you first have to copy a small part to fill it to that point, then duplicate the entire thing from there.  Does that help at all?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5348">qwertymodo</a> — Fri Jul 06, 2012 7:53 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[qwertymodo]]></name></author>
<updated>2012-07-06T19:36:22-07:00</updated>
<published>2012-07-06T19:36:22-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9062&amp;p=96561#p96561</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9062&amp;p=96561#p96561"/>
<title type="html"><![CDATA[Been reading up on SNES repos, have I got my facts straight?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9062&amp;p=96561#p96561"><![CDATA[
<div class="quotetitle">fireaza wrote:</div><div class="quotecontent"><br />It works out to be about $6 for both chips, vs $12 for the 29F032 and TSOP adaptor <img src="http://forums.nesdev.com/images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /> With regards to brands, obviously AMD is a good choice for the 27C040. For the 27C801, I've got a choice between ST, ATMEL, MXIC and NEC. NEC is the only brand I recognise there, so them maybe? They're all DIP32 with a speed of 120ns or less, so I'm not sure how much brand matters.<br /></div><br /><br />Brand isn't a big deal.  I've used Atmel and ST parts before as well, I know Nintendo used NEC parts for various things in their consoles.  Also, something to consider is if you only need 4 or 8Mbit, check out the SST39SF040 by Microchip.  It's a 5V x8 parallel flash ROM in a 32 DIP or TSOP package that's still in production.  It's basically the only one I know of that's still in production, most have gone to 3.3v, and it's even hard to find x8's period (thankfully there are a few selectable x8/x16's like Micron's M28W/M29W line).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5348">qwertymodo</a> — Fri Jul 06, 2012 7:36 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[fireaza]]></name></author>
<updated>2012-07-06T19:30:18-07:00</updated>
<published>2012-07-06T19:30:18-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9062&amp;p=96560#p96560</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9062&amp;p=96560#p96560"/>
<title type="html"><![CDATA[Been reading up on SNES repos, have I got my facts straight?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9062&amp;p=96560#p96560"><![CDATA[
<div class="quotetitle">tepples wrote:</div><div class="quotecontent"><br /><div class="quotetitle">fireaza wrote:</div><div class="quotecontent">It still boggles me that putting a second copy of half the ROM, into the ROM and doubling that (ending up with 4 copies of the back half the ROM and 2 of the front in the one ROM) doesn't break the ROM horribly.<br /></div><br />It's called "incomplete decoding". As long as a given set of signals on the address bus produce the expected signals on the data bus, the program can't tell the difference. Have you ever heard of an "overdump"?</div><br />I have now...? <img src="http://forums.nesdev.com/images/smilies/icon_wink.gif" alt=";)" title="Wink" /> This comes back to the design philosophy of "if it looks good, it is good", having a final product that consists of 4 copies of the back half the ROM and 2 of the front in the one ROM doesn't "look good", but hey, that's why I study design and not programming! <img src="http://forums.nesdev.com/images/smilies/icon_wink.gif" alt=";)" title="Wink" /><br /><br />Turning this thread back around again, there's what hopefully should be the last remaining questions that I have (at which point I should be ready to rumble, as well as write my own "idiot's guide" for the forum detailing all that I've learned in simple terminology and steps):<br /><br />1) eprom brands: important or not? I've got a choice between ST, ATMEL, MXIC and NEC, with NEC being the only familiar brand to me.<br /><br />2) ROM splitting: it's it a problem that SNES ROM Utility split the ROM in what I would think isn't the ideal place?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5347">fireaza</a> — Fri Jul 06, 2012 7:30 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[pichichi010]]></name></author>
<updated>2012-07-06T08:50:00-07:00</updated>
<published>2012-07-06T08:50:00-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9062&amp;p=96539#p96539</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9062&amp;p=96539#p96539"/>
<title type="html"><![CDATA[Been reading up on SNES repos, have I got my facts straight?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9062&amp;p=96539#p96539"><![CDATA[
Thanks for the opinion, and yes i think we will encourage the developer to get a menu done, because one of the games is a mini game roughly 8mbit and the other game which is a complete game would be the same size.<br /><br />If you know someone that has or would like to have his game put in this multicart pls pm me.<br /><br />they will be paid a percentage based on sales.<br /><br />Thank you Tepples!<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5138">pichichi010</a> — Fri Jul 06, 2012 8:50 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2012-07-06T08:47:16-07:00</updated>
<published>2012-07-06T08:47:16-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9062&amp;p=96538#p96538</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9062&amp;p=96538#p96538"/>
<title type="html"><![CDATA[Been reading up on SNES repos, have I got my facts straight?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9062&amp;p=96538#p96538"><![CDATA[
You're right about the user experience. I would recommend a reset-based solution only if all games completely fill all bytes of the memory, meaning you can't even spare a couple kilobytes for the most basic menu. But in any multicart, you're going to have to find some way to handle the NMI and IRQ vectors.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Fri Jul 06, 2012 8:47 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[pichichi010]]></name></author>
<updated>2012-07-06T08:10:15-07:00</updated>
<published>2012-07-06T08:10:15-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9062&amp;p=96537#p96537</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9062&amp;p=96537#p96537"/>
<title type="html"><![CDATA[Been reading up on SNES repos, have I got my facts straight?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9062&amp;p=96537#p96537"><![CDATA[
Well, we are planning on making 2 games in one cart.. may be 3 if we find someone else's game that we think is good and they want to put it in a cart.<br /><br />But actually I believe that making a cool menu (ie: Dragon quest 1&amp;2)<br /><br />would add to the user experience.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5138">pichichi010</a> — Fri Jul 06, 2012 8:10 am</p><hr />
]]></content>
</entry>
</feed>