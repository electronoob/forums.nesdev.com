<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Right to left language?</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Right to left language?</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=10&amp;t=6270">http://forums.nesdev.com/viewtopic.php?f=10&amp;t=6270</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>FARID</b> [ Wed Apr 07, 2010 1:36 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Right to left language?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />How can I make a NES ROM to support right to left language? 
<br />I don't have any problem for translating fixed text on the screen but texts which gradually appear from left to right, are really hard to translate. 
<br />Captain Tsubasa Arabic translation is a good example for this matter. 
<br />I guess I have to do it in assembly 6502 but I don't have any idea how to do it.
<br />I appreciate anyone who can help me. 
<br />
<br />Also some other nice people guide me but I really need some more help : 
<br />
<br /><a href="http://www.romhacking.net/forum/index.php/topic,10389.0.html" class="postlink">http://www.romhacking.net/forum/index.php/topic,10389.0.html</a>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Rid</b> [ Wed Apr 07, 2010 2:47 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Hello FARID.
<br />
<br />Your question is quite weird. I mean, the way the text is displayed on the screen has no incidence on the way it is stored in the ROM.
<br />
<br />Did you find the address of the text? You should use relative search tools to begin. And if it doesn't work, maybe you should look at debug tools such those which FCEUXD SP features...

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>67726e</b> [ Wed Apr 07, 2010 3:35 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Are you talking about making your own ROM or modding an existing game?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Rid</b> [ Wed Apr 07, 2010 4:39 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />He says he wants to translate Captain Tsubasa into Arabic.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Wed Apr 07, 2010 6:40 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />There are three ways to print from right to left:<ol style="list-style-type: lower-alpha"><li>Store entire lines of text in visual order. This might work for something like Super Mario Bros. </li><li>Store text in logical order and copy it to VRAM backwards, starting from the last character in a string and using a 'dex/bpl' loop. </li><li>If your game prints text to the screen a character at a time, like in many cut scenes, print it at descending VRAM addresses on each row. </li></ol>
<br />This would suffice for Hebrew, but Arabic has the complication of connected glyphs.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Memblers</b> [ Wed Apr 07, 2010 12:10 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The VRAM address normally auto-increments, so you definitely will have to change the code in the game, possibly in several locations.  You won't be able to make it the same size or smaller as the original, so you probably will have to find or make some free space in the ROM (in the same bank, in RAM, anywhere possible).
<br />
<br />You could start by finding the text data that you want to print reversed in ROM - you need to convert that to the address space as the NES CPU sees it.  Basically, remove 16 byte iNES header, and divide it into bank size and locate the address within that bank.  Once you have the address you can use a debugger to set a breakpoint when that address is read.  If the debugger stopped on an LDA instruction, then you've probably found the first part of it.
<br />
<br />At that point it probably will not write it to $2007 - instead it may do an STA $xxxx,y somewhere into RAM (as a buffer).  Now you could put a breakpoint on the address of the buffer, and find out where it's reading that followed by an STA $2007.  Then scroll backwards to the previous code, you should see it write to $2006 twice, to set the VRAM address.  And right there you may have found the code that you need to change.  If not, put a breakpoint on whatever RAM location it read the VRAM address from, I doubt you would have to trace it back any further than that, but you never know until you try it.
<br />
<br />You'll have to replace the code that sets the VRAM address in that particular case, and hopefully that's all.  Just make sure you've found the right case, where it's for text only and not any other kind of PPU data.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>FARID</b> [ Wed Apr 07, 2010 12:29 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Let me explain more :
<br />
<br />I want to translate a nes game (Kunio Kun no Nekketsu Soccer League.nes) from Japanese to Persian. As I said, I can translate every text in it, by using FCEUX and Tile Layer Pro. I made some progress in it :
<br />
<br /><img src="http://up.iranblog.com/Files/a64b6119b8e244b790f3.png" alt="Image" />
<br />
<br /><img src="http://up.iranblog.com/37262/1268477142.png" alt="Image" />
<br />
<br /><img src="http://up.iranblog.com/37262/1268417489.png" alt="Image" />
<br />
<br /><img src="http://up.iranblog.com/37262/1268458059.png" alt="Image" />
<br />
<br /><img src="http://up.iranblog.com/Files/856b1ecdf7fd4c69875d.png" alt="Image" />
<br />
<br />
<br />Even I can translate text which appear gradually from left to right. But guess what! Persian language is written from right to left so my text appears in a reverse order and it is really unpleasant!
<br />
<br />
<br />On the other hand I am not the first person who want to find a way for this matter, I mean about ten years ago someone (must be a skillful one!) solved this problem, and he translated Captain Tsubasa from Japanese to Arabic :
<br />
<br />Text is appearing gradually from left to right :
<br />
<br /><img src="http://up.iranblog.com/Files/37223e946c664e1ebc09.png" alt="Image" />
<br />
<br />Text is appearing gradually from right to left :
<br />
<br /><img src="http://up.iranblog.com/Files/c85c91e127ff4ce68332.png" alt="Image" />
<br />
<br />But unfortunately I couldn't find him to ask my question! 
<br />
<br />To be honest, I didn't read the rules of this forum, am I permitted to link to a nes game or not? Also I have it's IPS patch.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>FARID</b> [ Wed Apr 07, 2010 12:40 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Memblers wrote:</div><div class="quotecontent">The VRAM address normally auto-increments, so you definitely will have to change the code in the game, possibly in several locations.  You won't be able to make it the same size or smaller as the original, so you probably will have to find or make some free space in the ROM (in the same bank, in RAM, anywhere possible).<br /><br />You could start by finding the text data that you want to print reversed in ROM - you need to convert that to the address space as the NES CPU sees it.  Basically, remove 16 byte iNES header, and divide it into bank size and locate the address within that bank.  Once you have the address you can use a debugger to set a breakpoint when that address is read.  If the debugger stopped on an LDA instruction, then you've probably found the first part of it.<br /><br />At that point it probably will not write it to $2007 - instead it may do an STA $xxxx,y somewhere into RAM (as a buffer).  Now you could put a breakpoint on the address of the buffer, and find out where it's reading that followed by an STA $2007.  Then scroll backwards to the previous code, you should see it write to $2006 twice, to set the VRAM address.  And right there you may have found the code that you need to change.  If not, put a breakpoint on whatever RAM location it read the VRAM address from, I doubt you would have to trace it back any further than that, but you never know until you try it.<br /><br />You'll have to replace the code that sets the VRAM address in that particular case, and hopefully that's all.  Just make sure you've found the right case, where it's for text only and not any other kind of PPU data.</div>
<br />
<br />Thanks man, you really deserve to be an admin!
<br />
<br />Can you look at the following link and make a tutorial with an example for your explanations? Use any nes game you want and please don't forget to add some pictures. I am not in a hurry so you can write it any time that you are free.
<br />
<br /><a href="http://www.romhacking.net/forum/index.php/topic,10389.msg156524.html#msg156524" class="postlink">http://www.romhacking.net/forum/index.php/topic,10389.msg156524.html#msg156524</a>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dwedit</b> [ Wed Apr 07, 2010 2:01 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Note: I'm typing this as I go, so apologies for total lack of clarity.
<br />
<br />I'll do Dragon Warrior 1 as en example.  Every game does things differently!
<br />
<br />The first message the king tells you is stored at address B13E in NES memory.
<br />Set a data breakpoint for there.
<br />
<br />
<br />
<br />After stepping through some code, we find something relevant:
<br />
<br />01:B653:AE 0D 65  LDX $650D
<br />01:B656:9D 14 65  STA $6514,X @ $6514
<br />01:B659:EE 0D 65  INC $650D
<br />
<br />It's loading an index for the text buffer, storing the text character it read, and increments the pointer.
<br />
<br />Then later on:
<br />
<br />01:B5C1:AE B4 64  LDX $64B4
<br />01:B5C4:BD 14 65  LDA $6514,X @ $6514 = #$50
<br />01:B5C7:EE B4 64  INC $64B4
<br />
<br />It's reading from that buffer, and incrementing some other pointer.  Maybe there's two parts so it can output longer strings like character names...
<br />
<br />01:B5EB:AE 0D 65  LDX $650D = #$00
<br />01:B5EE:BD 14 65  LDA $6514,X @ $6514 = #$50
<br />01:B5F1:EE 0D 65  INC $650D = #$00
<br />
<br />Later on it does some more stuff involving reading the text from the buffer...
<br />
<br />01:BA01:9D 7C 65  STA $657C,X @ $657C = #$5F
<br />
<br />Now it's storing the character into yet another buffer...
<br />
<br />03:C6AC:9D 00 03  STA $0300,X @ $0302 = #$44
<br />
<br />This one looks like it might be the one where it goes into some kind of buffer for PPU display?
<br />
<br />Here we go, finally some meat:
<br />
<br />03:FE98:BD 00 03  LDA $0300,X @ $0300 = #$22
<br />03:FE9B:8D 06 20  STA $2006 = #$00
<br />03:FE9E:BD 01 03  LDA $0301,X @ $0301 = #$65
<br />03:FEA1:8D 06 20  STA $2006 = #$00
<br />03:FEA4:BD 02 03  LDA $0302,X @ $0302 = #$50
<br />03:FEA7:8D 07 20  STA $2007 = #$00
<br />03:FEAA:E8        INX
<br />03:FEAB:E8        INX
<br />03:FEAC:E8        INX
<br />
<br />This code that runs inside vblank takes a character PPU address, then writes the character.
<br />
<br />So it looks like in this case you want to find where it's messing with bytes 300 and 301, then change the code so it decreases the address instead of increase the address, then you also want it to reset to the right margin instead of the left margin.
<br />
<br />
<br />
<br />
<br />
<br />======================
<br />EXPLANATION OF WHAT I'M DOING
<br />======================
<br />
<br />
<br />
<br />
<br />
<br />Basically, you follow your text character through its journey through the NES game's code.
<br />
<br />Here, I'll demonstrate:
<br />
<br />03:FD2F:B1 30     LDA ($30),Y @ $B13E = #$50
<br />
<br />It loads the first text character here...
<br />
<br />03:FD31:85 37     STA $0037 = #$02
<br />
<br />Then stores it into address $37.  Now we need to watch $37.  Set a data breakpoint for reads and writes to $37.
<br />
<br />03:FD33:68        PLA
<br />
<br />Next instruction is PLA.  It pops A off the stack.  We no longer need to watch register A at this point since it no longer contains our text character.
<br />
<br />Now we wait for the game to access $37
<br />
<br />03:FD37:A5 37     LDA $0037 = #$50
<br />
<br />Now step for a while and see what it does with register A...
<br />
<br />01:B64E:A2 01     LDX #$01
<br />01:B650:8E 0A 65  STX $650A = #$01
<br />01:B653:AE 0D 65  LDX $650D = #$00
<br />01:B656:9D 14 65  STA $6514,X @ $6514 = #$50
<br />01:B659:EE 0D 65  INC $650D = #$00
<br />
<br />It stores A into a buffer starting at 6514.  Set a breakpoint for that now.  Keep stepping and watching register A, but now we also need to watch 6514.
<br />
<br />Eventually we reach
<br />01:B679:A9 02     LDA #$02
<br />and now we can stop watching A.  Run until it accesses 6514 or 37
<br />
<br />03:FD1C:85 37     STA $0037 = #$50
<br />It just replaced 37 with something else, we no longer care about 37.  Stop watching that.
<br />
<br />01:B5BC:A9 00     LDA #$00
<br />01:B5BE:8D B4 64  STA $64B4 = #$00
<br />01:B5C1:AE B4 64  LDX $64B4 = #$00
<br />01:B5C4:BD 14 65  LDA $6514,X @ $6514 = #$50
<br />01:B5C7:EE B4 64  INC $64B4 = #$00
<br />
<br />Now it's reading 6514 for some reason.  Watch where A goes...
<br />
<br />We later see it loop through to there again and discard A, so let's keep running ahead (watching 6514)
<br />
<br />01:B5E6:A2 00     LDX #$00
<br />01:B5E8:8E 0D 65  STX $650D = #$00
<br />01:B5EB:AE 0D 65  LDX $650D = #$00
<br />01:B5EE:BD 14 65  LDA $6514,X @ $6514 = #$50
<br />01:B5F1:EE 0D 65  INC $650D = #$00
<br />
<br />We see it read 6514 here.  Let's keep watching where A goes...
<br />
<br />01:B5F8:48        PHA
<br />
<br />Now it pushed A onto the stack.  Keep running until we hit PLA, (the Step Out feature of a debugger helps here, you skip the unnecessary code and keep reaching your breakpoints) Looks like this particular stack push we don't really need to watch though.
<br />
<br />01:B9C7:48        PHA
<br />
<br />Another PHA...
<br />
<br />01:B9C8:A5 D2     LDA $00D2 = #$00
<br />
<br />Now A is gone, keep running it until it hits the PLA and gets the character back...
<br />
<br />01:B9D8:68        PLA
<br />
<br />Now A is the text character again...
<br />
<br />01:B9F5:48        PHA
<br />
<br />another pha...
<br />
<br />01:B9FC:68        PLA
<br />
<br />the corresponding PLA...
<br />
<br />01:BA01:9D 7C 65  STA $657C,X @ $657C = #$5F
<br />01:BA04:85 08     STA $0008 = #$5F
<br />
<br />Now it's storing it into a buffer, and 08.  Watch 657C and 08.
<br />
<br />
<br />03:C69C:A6 04     LDX $0004 = #$00
<br />03:C69E:A5 0B     LDA $000B = #$22
<br />03:C6A0:9D 00 03  STA $0300,X @ $0300
<br />03:C6A3:E8        INX
<br />03:C6A4:A5 0A     LDA $000A = #$65
<br />03:C6A6:9D 00 03  STA $0300,X @ $0301
<br />03:C6A9:E8        INX
<br />03:C6AA:A5 08     LDA $0008 = #$50
<br />03:C6AC:9D 00 03  STA $0300,X @ $0302 = #$44
<br />03:C6AF:E8        INX
<br />03:C6B0:E6 03     INC $0003 = #$00
<br />03:C6B2:86 04     STX $0004 = #$00
<br />
<br />This code reads 08, and stores it into 302.  For this game, 302 is the text data it will write to the screen during vblank, and 300 is the PPU address it writes it to.
<br />
<br />Looks like we may need to watch 0A and 0B, since it has to do with the PPU address, they get copied to 301 and 300.
<br />
<br />
<br />03:FE98:BD 00 03  LDA $0300,X @ $0300 = #$22
<br />03:FE9B:8D 06 20  STA $2006 = #$00
<br />03:FE9E:BD 01 03  LDA $0301,X @ $0301 = #$65
<br />03:FEA1:8D 06 20  STA $2006 = #$00
<br />03:FEA4:BD 02 03  LDA $0302,X @ $0302 = #$50
<br />03:FEA7:8D 07 20  STA $2007 = #$00
<br />03:FEAA:E8        INX
<br />03:FEAB:E8        INX
<br />03:FEAC:E8        INX
<br />03:FEAD:E4 04     CPX $0004 = #$03
<br />03:FEAF:D0 E7     BNE $FE98
<br />
<br />So yeah, here's that VBLANK code again.  this code runs during vblank and draws the character to the screen.
<br />
<br />
<br />
<br />=============
<br />SO NOW WHAT?
<br />=============
<br />
<br />Find out how the game calculates what PPU address to write text to.  Then hack it so it goes right to left instead of left to right.
<br />You need to change an increment somewhere into a decrement.
<br />Then change the code for when it resets to the left margin to instead set to the right margin.
<br />
<br />Obviously every game does things differently.  Dragon Warrior wasn't too bad to follow and see where the text character goes once its been read.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>FARID</b> [ Mon May 03, 2010 8:50 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Ok I made some progress. Here is my report :
<br />
<br />Finding the correct breakpoint address was really difficult but after reading KingMike's DTE document and some trial and error I could find it.
<br />
<br />I want to change these two lines which are appearing from left to right.
<br />
<br /><img src="http://up.iranblog.com/Files/593632ed518146bcb28a.png" alt="Image" />
<br />
<br />
<br />By setting a breakpoint for B18F Debugger stops at here :
<br />
<br /><img src="http://up.iranblog.com/Files/b0a4640f178144599014.PNG" alt="Image" />
<br />
<br />By stepping over, the following code comes up :
<br />
<br />00:AFA6:B1 32     LDA ($32),Y @ $B18F = #$EA
<br />00:AFA8:D0 0A     BNE $AFB4
<br />00:AFB4:10 07     BPL $AFBD
<br />00:AFB6:C9 F0     CMP #$F0
<br />00:AFB8:90 1C     BCC $AFD6
<br />00:AFD6:85 2A     STA $002A = #$00
<br />00:AFD8:A9 FF     LDA #$FF
<br />00:AFDA:85 29     STA $0029 = #$FF
<br />00:AFDC:A5 2A     LDA $002A = #$EA
<br />00:AFDE:8D B9 06  STA $06B9 = #$FF
<br />00:AFE1:A5 29     LDA $0029 = #$FF
<br />00:AFE3:8D 96 06  STA $0696 = #$FF
<br />00:AFE6:4C 23 B0  JMP $B023
<br />00:B023:A9 01     LDA #$01
<br />00:B025:8D 95 06  STA $0695 = #$1B
<br />00:B028:8D B8 06  STA $06B8 = #$1B
<br />00:B02B:AD 08 06  LDA $0608 = #$02
<br />00:B02E:8D 94 06  STA $0694 = #$42
<br />00:B031:18        CLC
<br /><span style="color: red">00:B032:69 20     ADC #$20</span>
<br />00:B034:8D B7 06  STA $06B7 = #$62
<br />00:B037:08        PHP
<br />00:B038:AD 07 06  LDA $0607 = #$23
<br />00:B03B:8D 93 06  STA $0693 = #$FF
<br />00:B03E:28        PLP
<br />00:B03F:69 00     ADC #$00
<br />00:B041:8D B6 06  STA $06B6 = #$FF
<br /><span style="color: red">00:B044:EE 08 06  INC $0608 = #$02</span>
<br />00:B047:D0 03     BNE $B04C
<br />00:B04C:AD B9 06  LDA $06B9 = #$EA
<br />00:B04F:C9 FF     CMP #$FF
<br />00:B051:F0 05     BEQ $B058
<br />00:B053:A9 35     LDA #$35
<br />00:B055:20 02 C0  JSR $C002
<br />00:B058:60        RTS
<br />07:C323:4C 68 C3  JMP $C368
<br />07:C368:68        PLA
<br />07:C369:20 D3 EE  JSR $EED3
<br />07:C36C:60        RTS
<br />05:A2E0:AD 05 06  LDA $0605 = #$80
<br />05:A2E3:30 03     BMI $A2E8
<br />05:A2E8:A2 00     LDX #$00
<br />05:A2EA:20 94 91  JSR $9194
<br />05:A2ED:20 65 C0  JSR $C065
<br />05:A2F0:20 14 80  JSR $8014
<br />05:A2F3:20 5C C0  JSR $C05C
<br />05:A2F6:60        RTS
<br />05:80C4:4C 7A 80  JMP $807A
<br />05:807A:60        RTS
<br />07:C362:68        PLA
<br />07:C363:85 F7     STA $00F7 = #$80
<br />07:C365:68        PLA
<br />07:C366:A5 F6     LDA $00F6 = #$0C
<br />07:C368:68        PLA
<br />07:C369:20 D3 EE  JSR $EED3
<br />07:C36C:60        RTS
<br />07:C4BA:4C C3 C4  JMP $C4C3
<br />07:C4C3:A5 51     LDA $0051 = #$00
<br />07:C4C5:C5 51     CMP $0051 = #$00
<br />07:C4C7:F0 FC     BEQ $C4C5
<br />07:C4C5:C5 51     CMP $0051 = #$00
<br />07:C4C7:F0 FC     BEQ $C4C5
<br />07:C4C5:C5 51     CMP $0051 = #$00
<br />07:C4C7:F0 FC     BEQ $C4C5
<br />
<br />And finally it loops at C4C5 and C4C7! Without printing any character!
<br />
<br />Anyway as you said I changed 
<br />
<br />EE 08 06  INC $0608
<br />To 
<br />CE 08 06  DEC $0608
<br />
<br />And 
<br />69 20     ADC #$20
<br />To
<br />69 19     ADC #$19
<br />
<br />Now the text (throughout the game) appears from right to left.
<br />Also I can adjust it's alignment by changing the operand of ADC. 
<br />
<br />But as you can see in the picture just two characters of the first line print and the rest become hidden!
<br />
<br /><img src="http://up.iranblog.com/Files/c4c757a1dca747cab8f1.png" alt="Image" />
<br />
<br />The second line is ok.
<br />
<br />Now what can I do about it?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>jstout</b> [ Mon May 03, 2010 12:08 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Changing: 69 20 ADC #$20 To 69 19 ADC #$19 is wrong.  The #$20 allows for the " to be placed directly above the letters.
<br />
<br />Using your code above, you know that the PPU Address is being set by $607 and $608.  You need to adjust the starting PPU Address for the text, so set a breakpoint for a write to $607 and $608 then you'll get:
<br />
<br />00:B0AC:AD 18 B1  LDA $B118 = #$02
<br />00:B0AF:8D 08 06  STA $0608 = #$46
<br />00:B0B2:AD 19 B1  LDA $B119 = #$23
<br />00:B0B5:8D 07 06  STA $0607 = #$23
<br />
<br />Changing $B118 (x3128) to #$1B gets the results that you are desiring.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>FARID</b> [ Mon May 03, 2010 8:35 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">jstout wrote:</div><div class="quotecontent">Changing: 69 20 ADC #$20 To 69 19 ADC #$19 is wrong.  The #$20 allows for the " to be placed directly above the letters.<br /><br />Using your code above, you know that the PPU Address is being set by $607 and $608.  You need to adjust the starting PPU Address for the text, so set a breakpoint for a write to $607 and $608 then you'll get:<br /><br />00:B0AC:AD 18 B1  LDA $B118 = #$02<br />00:B0AF:8D 08 06  STA $0608 = #$<span style="color: red">46</span><br />00:B0B2:AD 19 B1  LDA $B119 = #$23<br />00:B0B5:8D 07 06  STA $0607 = #$23<br /><br />Changing $B118 (x3128) to #$1B gets the results that you are desiring.</div>
<br />
<br />Thank you very very ... much!  <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" />  It really worked!
<br />
<br />I set a breakpoint for a read to $B118 :
<br />
<br />00:B0AC:AD 18 B1  LDA $B118 = #$02
<br />00:B0AF:8D 08 06  STA $0608 = #$<span style="color: red">29</span>
<br />00:B0B2:AD 19 B1  LDA $B119 = #$23
<br />00:B0B5:8D 07 06  STA $0607 = #$23
<br />
<br /> <img src="./images/smilies/icon_question.gif" alt=":?:" title="Question" />  Why the second line is different from yours?
<br />Even if I set a write breakpoint to $0608 it returns :
<br />
<br />00:B0AF:8D 08 06  STA $0608 = #$<span style="color: red">29</span>
<br />
<br />Anyway as you said I changed :
<br />
<br />AD 18 B1  LDA $B118
<br />To
<br />A9 1B     LDA #$1B
<br />EA        NOP
<br />
<br />But nothing special happened! Later debugger stopped at :
<br />
<br />00:AF1F:AD 18 B1  LDA $B118 = #$02
<br />
<br />And I changed it to
<br />
<br />00:AF1F:A9 1B     LDA #$1B
<br />00:AF21:EA        NOP
<br />
<br />Now the text appears from right to left :
<br />
<br /><img src="http://up.iranblog.com/Files/1e7cbfa832a440818839.png" alt="Image" />
<br />
<br />And now some real questions :  <img src="./images/smilies/icon_redface.gif" alt=":oops:" title="Embarassed" /> 
<br />
<br /> <img src="./images/smilies/icon_question.gif" alt=":?:" title="Question" />  Can you tell me how did you realize that, I must set a write breakpoint to $0607 and change B118?
<br />
<br /> <img src="./images/smilies/icon_question.gif" alt=":?:" title="Question" />  What do you mean by (x3128) in your last sentence?
<br />
<br /> <img src="./images/smilies/icon_question.gif" alt=":?:" title="Question" />  In some places after appearing text, some characters are left on the screen! How can I solve it?
<br />
<br /><img src="http://up.iranblog.com/Files/b60d13f83a744f7a9458.png" alt="Image" />
<br />
<br /><img src="http://up.iranblog.com/Files/5784abc1a79f4f36a6ca.png" alt="Image" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dwedit</b> [ Mon May 03, 2010 8:49 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Characters aren't mirrored, just the order is reversed.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>