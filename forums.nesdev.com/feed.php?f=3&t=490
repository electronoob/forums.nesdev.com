<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=3&amp;t=490" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2005-08-16T05:29:53-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=3&amp;t=490</id>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2005-08-16T05:29:53-07:00</updated>
<published>2005-08-16T05:29:53-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=490&amp;p=3799#p3799</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=490&amp;p=3799#p3799"/>
<title type="html"><![CDATA[precalculated flags N and Z?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=490&amp;p=3799#p3799"><![CDATA[
<div class="quotetitle">tepples wrote:</div><div class="quotecontent"><br />I'm not inclined to put much faith in this statement: "Profiling shows that BMI and BPL aren't that frequent" given the ' bit / bpl ' sequences in NES programs' init codes and in any zero-based loop using ' dex / bpl :- '.<br /></div><br /><br />Argh, I must have removed the reference to that being a profile of various NSFs, which of course don't have a VBL wait loop.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Tue Aug 16, 2005 5:29 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[hap]]></name></author>
<updated>2005-08-16T03:04:10-07:00</updated>
<published>2005-08-16T03:04:10-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=490&amp;p=3793#p3793</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=490&amp;p=3793#p3793"/>
<title type="html"><![CDATA[precalculated flags N and Z?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=490&amp;p=3793#p3793"><![CDATA[
I handle BIT and PLP flag changing differently. If Z and N are both set, the MSB of NZ is set, and the low byte is 0, so instead of:<br /><br />is_negative = (((nz + 0x200) &gt;&gt; 3) | nz) &amp; 0x80<br />it's: is_negative = nz &amp; 0x8080<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=115">hap</a> — Tue Aug 16, 2005 3:04 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2005-08-15T23:23:06-07:00</updated>
<published>2005-08-15T23:23:06-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=490&amp;p=3780#p3780</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=490&amp;p=3780#p3780"/>
<title type="html"><![CDATA[precalculated flags N and Z?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=490&amp;p=3780#p3780"><![CDATA[
<div class="quotetitle">hap wrote:</div><div class="quotecontent"><br />It looks like a fast and easy method, but I'm doing it the blargg way: <!-- m --><a class="postlink" href="http://www.slack.net/~ant/nes-emu/6502.html">http://www.slack.net/~ant/nes-emu/6502.html</a><!-- m --><br /></div><br />I'm not inclined to put much faith in this statement: "Profiling shows that BMI and BPL aren't that frequent" given the ' bit / bpl ' sequences in NES programs' init codes and in any zero-based loop using ' dex / bpl :- '.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Mon Aug 15, 2005 11:23 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2005-08-15T10:21:41-07:00</updated>
<published>2005-08-15T10:21:41-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=490&amp;p=3752#p3752</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=490&amp;p=3752#p3752"/>
<title type="html"><![CDATA[precalculated flags N and Z?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=490&amp;p=3752#p3752"><![CDATA[
In this example, zero and negative are two extra variables. They don't store simple boolean results, rather they store the last 8-bit value which the flag would have been set based on. When the actual flag is needed, the variable needs to be tested for that condition. The optimization is that this condition isn't tested until it's actually needed, and for branches the native test instruction can be used rather than the somewhat inefficient conversion to a boolean value: flag = (zero == 0)<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">// AND #imm<br />case 0x29:<br />   a = a &amp; read_memory&#40; pc + 1 &#41;;<br />   pc = pc + 2;<br />   zero = a;<br />   negative = a;<br />   break;<br /><br />// BNE<br />case 0xD0:<br />   if &#40; zero != 0 &#41;<br />   &#123;<br />      int offset = &#40;char&#41; read_memory&#40; pc + 1 &#41;;<br />      pc = pc + offset;<br />   &#125;<br />   pc = pc + 2;<br />   break;<br /><br />// BMI<br />case 0x30:<br />   if &#40; negative &amp; 0x80 &#41;<br />   &#123;<br />      int offset = &#40;char&#41; read_memory&#40; pc + 1 &#41;;<br />      pc = pc + offset;<br />   &#125;<br />   pc = pc + 2;<br />   break;<br /></div><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Mon Aug 15, 2005 10:21 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Anes]]></name></author>
<updated>2005-08-15T07:29:41-07:00</updated>
<published>2005-08-15T07:29:41-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=490&amp;p=3749#p3749</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=490&amp;p=3749#p3749"/>
<title type="html"><![CDATA[precalculated flags N and Z?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=490&amp;p=3749#p3749"><![CDATA[
Im actually not using separate variables for flags, i mean i only use one variable that is "P", thats emulate the 6502 P. It seems it is not a good idea ah?<br /><br />Disch: your method is cool but it means i have to re-arrange a lot of code  <img src="http://forums.nesdev.com/images/smilies/icon_confused.gif" alt=":?" title="Confused" /> , it is a pain that i didnt put this topic before.<br /><br />Blargg: i still dont understand what you want to mean with the "ifs"<br />is it for testing the flags? Cos i dont like to use "if" that are commonly transleted to x86 CMP,JMP, which are slower (of course if we compare BYTES). Of course this not include "ifs" like this (if (a &amp; 0x80)) wich i think it compiles to a "test" instruction, which is faster.<br />(correct me if i missunerstood something).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=72">Anes</a> — Mon Aug 15, 2005 7:29 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2005-08-15T07:11:28-07:00</updated>
<published>2005-08-15T07:11:28-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=490&amp;p=3746#p3746</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=490&amp;p=3746#p3746"/>
<title type="html"><![CDATA[precalculated flags N and Z?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=490&amp;p=3746#p3746"><![CDATA[
Disch described the idea quite well. The version I use merges n and z together simply to reduce the number of variables, but it's really convoluted and probably not worth it. Here's a summary of one evolutionary path:<br /><br />1) Keep flags as booleans and calculate in each instruction:<br /><br />zero = (result == 0);<br />negative = (result &lt; 0);<br /><br />2)  Use table:<br /><br />flags &amp;= ~(negative_mask | zero_mask);<br />flags |= nzc_table [result];<br /><br />3) Defer testing until flag is actually needed by using the native processor's own comparison instructions:<br /><br />zero = result;<br />negative = result;<br />carry = result;<br /><br />if ( zero == 0 ) ...<br />if ( negative &lt; 0 ) ...<br />if ( carry &amp; 0x100 ) ...<br /><br />In most cases the status flag <em>never needs to be calculated</em>, which this scheme takes advantage of.<br /><br />This scheme is part of an important general pattern of keeping data in the most efficient form for emulation and converting it to the actual hardware format only when needed. For 6502 emulation, the hardware format is needed only when saving/restoring the status register on the stack; all other uses of the status flags can be of the internal format you choose for your emulator. For PPU emulation you might keep the pattern data in a format that's faster to draw to the screen, perhaps expanding it to 8 bits per pixel.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Mon Aug 15, 2005 7:11 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Disch]]></name></author>
<updated>2005-08-15T06:32:13-07:00</updated>
<published>2005-08-15T06:32:13-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=490&amp;p=3742#p3742</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=490&amp;p=3742#p3742"/>
<title type="html"><![CDATA[precalculated flags N and Z?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=490&amp;p=3742#p3742"><![CDATA[
I never fully understood blargg's method, but took its idea and spun it into my own.  Rather than keeping one NZ flag I keep both N and Z, but set them both during each instruction.  You might see a lot of this in my code:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">fN = fZ = A;<br /></div><br /><br />For example my ORA emulation looks like this:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">#define ORA&#40;&#41;<br />   fN = fZ = A |= val<br /></div><br /><br /><br />Then the Z flag is set whenever fZ is zero (and is cleared when fZ is nonzero -- this is kind of backwards) -- whereas the high bit of fN is used to determine the N flag -- as my BMI/BPL/BNE/BEQ emulation demonstrates:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">   case 0x10:   BRANCH&#40;!&#40;fN &amp; 0x80&#41;&#41;;   break;  /* BPL  */<br />   case 0x30:   BRANCH&#40; &#40;fN &amp; 0x80&#41;&#41;;   break;  /* BMI  */<br />   case 0xD0:   BRANCH&#40; fZ &#41;;   break;  /* BNE  */<br />   case 0xF0:   BRANCH&#40; !fZ &#41;;   break;  /* BEQ  */<br /></div><br /><br />Probably isn't as efficient as blargg's way since it requires two vars instead of one, but I've gotten used to it.<br /><br /><br />I <em>used</em> to use a pre-built NZ table like that and keep all the status bits in one byte -- but I found this to be troublesome.  As it requires operations to flip off and flip on bits every instruction.  For example when the NZ bits change not only do you have to OR your status var with the value in that table, but you also have to AND it with the inverse of NZ bits before ORing (to flip off N and Z before flipping them back on).  It just seemed like such a waste.<br /><br />Keeping seperate vars for each flag is definitely the way to go, imo.  That way you only have to combine them to a single byte when the status is push/pulled -- which doesn't occur very much at all.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=33">Disch</a> — Mon Aug 15, 2005 6:32 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[hap]]></name></author>
<updated>2005-08-15T04:10:06-07:00</updated>
<published>2005-08-15T04:10:06-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=490&amp;p=3739#p3739</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=490&amp;p=3739#p3739"/>
<title type="html"><![CDATA[precalculated flags N and Z?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=490&amp;p=3739#p3739"><![CDATA[
No it shouldn't be deleted, don't be so hard on yourself :p<br />It looks like a fast and easy method, but I'm doing it the blargg way: <!-- m --><a class="postlink" href="http://www.slack.net/~ant/nes-emu/6502.html">http://www.slack.net/~ant/nes-emu/6502.html</a><!-- m --><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=115">hap</a> — Mon Aug 15, 2005 4:10 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Anes]]></name></author>
<updated>2005-08-15T03:13:59-07:00</updated>
<published>2005-08-15T03:13:59-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=490&amp;p=3736#p3736</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=490&amp;p=3736#p3736"/>
<title type="html"><![CDATA[precalculated flags N and Z?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=490&amp;p=3736#p3736"><![CDATA[
im sure a lot of people has implemented this, but in any case i post it here cos maybe someone havent done it this way, i think its faster that testing bits. Its only for N and Z flags.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">BYTE g_Flags&#91;256&#93;<br />...<br />cpuinit&#40;&#41;<br />&#123;<br />WORD i;<br /><br />   for &#40;i = 0; i &lt; 256; i++&#41;<br />     g_Flags&#91;i&#93; = &#40;i == 0 ? 0x02 : 0x00&#41; | &#40;i &amp; 0x80&#41;;<br /><br />&#125;<br /></div><br /><br />So when we have to set or clear the flags for an instruction (soppouse its a LDA that only affects N &amp; Z:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">.. // Code for LDA here<br /><br />g_CpuContext.P &amp;= 0x7D;<br />g_CpuContext.P |= g_Flags&#91;g_CpuContext.A&#93;;<br /><br /></div><br /><br />First we clear the N and Z flag cos we dont know if the value needs to clear the flags, then we set what we pre-calculated in the initcpu() routine.<br /><br />If this post is help someone im glad for you, if not please admin delete it.   <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" /><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=72">Anes</a> — Mon Aug 15, 2005 3:13 am</p><hr />
]]></content>
</entry>
</feed>