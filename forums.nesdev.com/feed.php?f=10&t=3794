<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=10&amp;t=3794" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2007-12-22T09:24:28-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=10&amp;t=3794</id>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2007-12-22T09:24:28-07:00</updated>
<published>2007-12-22T09:24:28-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3794&amp;p=29805#p29805</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3794&amp;p=29805#p29805"/>
<title type="html"><![CDATA[main loop or nmi?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3794&amp;p=29805#p29805"><![CDATA[
Using a main loop ensures that there is only one thread of execution, simplifying coding. Putting code in NMI ensures that it runs every frame, regardless of what the main loop is doing. Therefore, you I recommend using the main loop for everything except that which must run every frame.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Sat Dec 22, 2007 9:24 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[nineTENdo]]></name></author>
<updated>2007-12-22T02:43:04-07:00</updated>
<published>2007-12-22T02:43:04-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3794&amp;p=29802#p29802</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3794&amp;p=29802#p29802"/>
<title type="html"><![CDATA[main loop or nmi?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3794&amp;p=29802#p29802"><![CDATA[
<strong>Ive been wondering whats the main difference in using a MAIN loop over a NMI.  On my demos some subroutines work better in NMI than in Main loop,  or sometimes not at all.  I've been wondering cause ive been realizing that sometimes my code begins to get buggy after a while, when run in the NMI. </strong><br />         <br /><em>For example in my debounce routine.  I never used a delay routine only a STATE to check for a closure.  But then i realized that after my code started getting longer and putting more strane on the NMI I had to eventualay add a delay routine b/w closures so that it wouldnt skip a number or so.</em><br /><br /><strong>After only using NMI to run my code i eventually got lazy and just kept using them to run my code.  so i program my code to always looking for closures and then branching.  updating what ever it needed when needed and then returning to look for new closures. </strong><br /><br /><em>I guess what im trying to say is.  when it feaseable to use code in your MAIN loop over the NMI?  My impression is that while NMI is always updating.  MAIN loop is always setting up.</em><br /><strong><br />thanks for looking<br />el<br /><br />p.s. sorry for the format its better on the eyes and reading flows better</strong><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=352">nineTENdo</a> — Sat Dec 22, 2007 2:43 am</p><hr />
]]></content>
</entry>
</feed>