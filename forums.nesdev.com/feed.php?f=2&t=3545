<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=2&amp;t=3545" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2007-08-24T12:19:58-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=2&amp;t=3545</id>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2007-08-24T12:19:58-07:00</updated>
<published>2007-08-24T12:19:58-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3545&amp;p=26490#p26490</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3545&amp;p=26490#p26490"/>
<title type="html"><![CDATA[Easier and harder game genre to code/developp]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3545&amp;p=26490#p26490"><![CDATA[
Well, what you describe is quite insteresting, while it seems not doable.<br />This would work if both players moves by 8 pixels increments (both vertically and horizontally) AND if the mapper is MMC5 so that each tile get independant banking adressing and color, which is great. Then the game would have to redraw those tiles each times one of the fighters changes it's position or moves 8 pixels ahead, mazing the background back, and re-mazing the player further. I think it could look good if the player are really enormous, but then the graphics won't look too good either if the characters are just too big. Alternativly, you could duplicate each sprites (but decaled of 4 pixels and get 4 pixel increment, which is more decent, and quadruple all sprites (each time decaled of 2 pixels) to get 2 pixel increment, which would look good enough. Then each fighter for each poses has all it's "interior" made of background with 8 different variants (in function of the horizontal position), and both fighters moves horizontally by 2 pixels increment, and vertically by 8 pixels increments (they won't move much vertically anyway exept when they jump and when they fall). Additionally to this, both fighter's palette (assuming they use one) are redundant with the background, leaving 2 palettes for the background. Since the background is selected in function of one of the fighters (typically) this helps a lot. This sounds definitely doable, but only with the MMC5, and with a lot of CHR ROM. It can be done with another mapper, but then everything would have to be the same color (grayscale) and would look terrible, or have to move in 16 pixels increment, which is even more horrible.<br /><br />I better like the idea of one figher BG and the other sprites, and this can be done easily, but with BG only above and below the fighters, which can definitely look decent. Honnesly, I already see the street background with houses on the top, a road in the middle which is made of solid grey where the guys fights, and a barrier with some people watching the fight below. Or even better, a beach where you have palm tree, etc.. on the top, solid yellow on the middle and the sea on the bottom. Seriously such backgrounds are easy to made. Additionally you can have the bottom scroll more than the top and give the game a 3D look. This would be done with vertical mirroring, and would work very well.<br /><br />If jumping (or vertical moving) is allowed, this make things more complex, not only for collision detection, but also for animating the player themselves, especially if one is made of backgound. Additionally to this, as long as jumping is featured, the players can jump over the other and face another direction. If jump isn't featured, you can just assume player 1 is watching right and player 2 is watching left.<br />As for the size of the characters, they can definitely not be higher than 8 tiles : Because when they fall, the sprite player cannot be "longer" than 8 tiles, and it would look bad if he suddently become shorter because it fell. Maybe if he passes from 9 tiles to 8 this won't look too bizzare, but more difference will be noticeable. Of course, the CPU could automatically exchange the sprite and the BG player when needed (so when one fall, it automatically becomes the BG one to be more long), and I guess it would be rare that both player fell at the same time (depending on the game engine). I don't know if this would be doable.<br /><br />Tokumaru : Are you really sure fighting game are that much easy to code ? Becuase I never trought about it seriously but now... I couldn't think about anything else the whole day ! I might do a fighting game after my current game is out if I get inspired for enough characters (and moves) ! And the advantage is that you can take your characters from other games you already did (you just have to add details to them). Maybe even stole characters from existing games : Imagine a NES fighting game called Capcom vs NESdev !! Wouldn't it rock ?<br />As for the AI of fighting game, I think having the CPU attempt random moves at regular intervals (and no nothing if the player blocks those moves) might work well enough, and making it so that normal mode have the CPU act slightly faster than easy modes where the CPU only kick and punches once in a while. Hard mode can have the CPU try to avoid and/or block kick and punches from the player more often (additional to quick attack when it get the chance to), but still do it with enough delays betwen actions to give the player a chance.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Fri Aug 24, 2007 12:19 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2007-08-24T09:19:28-07:00</updated>
<published>2007-08-24T09:19:28-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3545&amp;p=26485#p26485</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3545&amp;p=26485#p26485"/>
<title type="html"><![CDATA[Easier and harder game genre to code/developp]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3545&amp;p=26485#p26485"><![CDATA[
He was suggesting a method to have big fighters while still having a background.<br /><br />I think he meant that tiles that are fully occupied by the players (both of them) should be drawn to the background, while tiles with transparency would be rendered as sprites, surrounding those other tiles.<br /><br />I think this is a good idea, but there are some problems. first, motion would not be very smooth, because when drawing stuff to the background you have to respect the 8x8 pixel grid, so it'd probably feel like some fighting games programmed for the Mester System. Also, even if we're just using sprites around solid tiles, there are many frames of animation where there aren't many solid tiles, and almost everything would have to be sprites anyway.<br /><br />The "blank background" way can provide smooth animation for both players, since only one is drawn to the background and this background can be scrolled freely. I'd probably use 1-screen mirroring for that, with one of the name tables used for the background (with a blank area) and the other name table is exclusive to the other fighter. The screen would have to be split twice during rendering, to insert the background player in the blank area.<br /><br />I'm still thinking of a good way to "fake" a more complex background while still having one player fully rendered with background tiles.<br /><br />EDIT: Oops, too late! =)<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Fri Aug 24, 2007 9:19 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[strangenesfreak]]></name></author>
<updated>2007-08-24T09:10:02-07:00</updated>
<published>2007-08-24T09:10:02-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3545&amp;p=26484#p26484</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3545&amp;p=26484#p26484"/>
<title type="html"><![CDATA[Easier and harder game genre to code/developp]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3545&amp;p=26484#p26484"><![CDATA[
The method I was thinking of allows background tiles behind the fighters, although it won't allow multiple scrolling backgrounds behind the fighters' action area as a disadvantage.   This could be resolved by using the animating parallax tiles method as mentioned before, but the tiles would likely be repetitive like that.  The ExAttributes could help have more fighter tiles rendered to the BG so that the background and fighters' attributes don't collide, and less sprites to fill for missing fighter areas that take up less than half a tile (since only fighter tiles that take up nearly whole tiles are rendered to the BG in my method).  Although this method could also be done without ExAttributes, but that would require some more sprites for the fighters' missing areas.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3329">strangenesfreak</a> — Fri Aug 24, 2007 9:10 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2007-08-24T08:53:09-07:00</updated>
<published>2007-08-24T08:53:09-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3545&amp;p=26483#p26483</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3545&amp;p=26483#p26483"/>
<title type="html"><![CDATA[Easier and harder game genre to code/developp]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3545&amp;p=26483#p26483"><![CDATA[
It doesn't matter if there is the MMC5 or not, as the MMC5 has the ability to show more tiles at once on the screen and to bypass the 2x2 normal color limit to implement a new 1x1 limit, it doesn't allow multiple backgrounds to scroll one on the other, so you'd still have to have the area behind both fighters blank. Unless of course one of the fighters doesn't move, which is just stupid.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Fri Aug 24, 2007 8:53 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[strangenesfreak]]></name></author>
<updated>2007-08-24T06:18:30-07:00</updated>
<published>2007-08-24T06:18:30-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3545&amp;p=26482#p26482</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3545&amp;p=26482#p26482"/>
<title type="html"><![CDATA[Easier and harder game genre to code/developp]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3545&amp;p=26482#p26482"><![CDATA[
<div class="quotetitle">Bregalad wrote:</div><div class="quotecontent"><br />The problem is that this doesn't really help in this case, as if the characters moves by big chunks it will look bad. However, characters don't move that much vertically, so maybe it'll be possible to make some horizontal line to not make a big chuck of one solid color as the background, and when the character jumps, well, I don't know...<br /></div><br />Maybe parts of the fighters that jump that go above the fighters' "horizontal line" can be drawn using sprites, but that may not be plausible if the fighters are more than 8 tiles wide.<br /><br />For a fighting game, I was thinking that to draw a normal background (not blanked at all) along with BG fighters, the game could use MMC5 with ExAttributes.  Parts of fighters that cover whole or almost whole tiles would be rendered to the BG, and parts of fighters that take up half or less of a tile would be rendered with sprites.  The game would need to turn off some scanlines (maybe a little more than 16?) to update more tiles than usual for updating the fighters.  Since there's no level data and very little objects to check collision for, it might be plausible to set up this data to render without slowing the game down.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3329">strangenesfreak</a> — Fri Aug 24, 2007 6:18 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2007-08-24T00:59:09-07:00</updated>
<published>2007-08-24T00:59:09-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3545&amp;p=26479#p26479</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3545&amp;p=26479#p26479"/>
<title type="html"><![CDATA[Easier and harder game genre to code/developp]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3545&amp;p=26479#p26479"><![CDATA[
<div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Yeah, something like that. But it would be cooler if you could move the cross hair from an enemy to the other... like, hold a button to turn automatic targeting on and the left and right buttons would move from target to target around you.<br /></div><br />Like when you're targetting enemis in Chrono Trigger (SNES) ?<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />I mean, there are no level maps! One of the hardest things to coordinate in a game is the scrolling of the screen with the decoding of compressed maps and metatiles, updating the name tables and attribute tables in small chunks, etc.<br /></div><br />Come on, coding the level maps and scrolling should have been the funiest part of the game I'm currently making for me. I love to design maps, but I hate to design enemies. Not really that I hate it, but I just suck at it.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />I don't think programming a fighting game is hard at all, but I do think it is very hard to finish one. First, you have to be very creative to come up with interesting characters with equally interesting and unique moves. You also need a lot of patience to draw the insane amount of sprites that are necessary.<br /></div><br />Yes, that is definitely harder than just code a level map and scrolling code (at least for me). I love drawing sprites, but however I never come up with ideas of sprites to draw. Not to forget you have to make the characters cool and interesting, having them look good *AND* have them with tons of moves and fun gameplay. Maybe programming a bad fighting game is easy, but programming a good one shouldn't.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />A person might try using the background for one of the fighters so they'd look much bigger (like on the SNES or the Mega Drive/Genesis), but trying to come up with an interesting background (even if it's only above and below the fighting area) or a good excuse for the absence of one, that will be a challenge! =)<br /></div><br />Yeah, I'd be ready to code a fighting game only for that ! I love technical challenge such as this. However, even if the game engine isn't overly complicated to code, you have to come up with characters, and a ton of moves per characters ! Not to mention that you have to come up with AI to have CPU controlled enemies which give some challenge to the player, but still let them a chance...<br /><br />Oh, and by the way when desiging BG big enemies that moves, remember that background is possible if there is a pattern that repeats each x pixels and that the big BG enemy moves by increment of x pixels (like in Mega Man 2's game over screen). The problem is that this doesn't really help in this case, as if the characters moves by big chunks it will look bad. However, characters don't move that much vertically, so maybe it'll be possible to make some horizontal line to not make a big chuck of one solid color as the background, and when the character jumps, well, I don't know... Of course you can come up with no jumping, making everything much simper. Just A=Punch, B=Kick, up=block up attacks, down=block down attacks, up+A = High punch, down+A=Low punch, etc... Then button combos could make special attacks. I don't know if this would be fun enough for the player, but it sounds decent.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Fri Aug 24, 2007 12:59 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[atari2600a]]></name></author>
<updated>2007-08-23T23:59:09-07:00</updated>
<published>2007-08-23T23:59:09-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3545&amp;p=26478#p26478</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3545&amp;p=26478#p26478"/>
<title type="html"><![CDATA[Easier and harder game genre to code/developp]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3545&amp;p=26478#p26478"><![CDATA[
Lol, can someone write something for lightgun games?  I believe I have the concept down but I'd like to see a nice 1-2 paragraph overview from an experienced 6502 programmer...<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3367">atari2600a</a> — Thu Aug 23, 2007 11:59 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Jeroen]]></name></author>
<updated>2007-08-23T23:00:35-07:00</updated>
<published>2007-08-23T23:00:35-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3545&amp;p=26477#p26477</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3545&amp;p=26477#p26477"/>
<title type="html"><![CDATA[Easier and harder game genre to code/developp]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3545&amp;p=26477#p26477"><![CDATA[
Thought up a way for a shooter. Top view like pokemon kinda then kinda random you could have "shoot-outs" pop up. Then you just have to shoot the enemy's before they shoot you (they pop up randomly to) <img src="http://forums.nesdev.com/images/smilies/icon_wink.gif" alt=":wink:" title="Wink" /><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3369">Jeroen</a> — Thu Aug 23, 2007 11:00 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2007-08-23T22:32:59-07:00</updated>
<published>2007-08-23T22:32:59-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3545&amp;p=26476#p26476</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3545&amp;p=26476#p26476"/>
<title type="html"><![CDATA[Easier and harder game genre to code/developp]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3545&amp;p=26476#p26476"><![CDATA[
<div class="quotetitle">Bregalad wrote:</div><div class="quotecontent"><br />Yes - I asked the question for general purpose programming.<br /></div><br />I thought so.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Of course it also means on the NES, but I guess the NES don't make genre harder to code or to design, it just has some limitation.<br /></div><br />Yeah, of course. We're on a NES message board, so it's only natural that we think about implementing those things on the NES. It's just that when comparing game genres with each other, the platform shouldn't matter.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Automatic targetting would rock, I guess you just have to automatically target the enemy which is closer to the player (according to the sum of the horizontal and vertical delta of position) this give me some ideas.<br /></div><br />Yeah, something like that. But it would be cooler if you could move the cross hair from an enemy to the other... like, hold a button to turn automatic targeting on and the left and right buttons would move from target to target around you. This is much more difficult though, as you'd need to find the relative angle of each target to the player (you'd still use the deltas, aka the legs of a triangle, for that) so that you could sort them to make a "circle".<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Am I the only one who thinks a fighting game should be the very hardest genre ?<br /></div><br />Uh... I find exactly the opposite! =) Classic fighting games such as Street Fighter and Mortal Kombat seem to me like the easiest kind of game to program (just behind single screen puzzles).<br /><br />I mean, there are no level maps! One of the hardest things to coordinate in a game is the scrolling of the screen with the decoding of compressed maps and metatiles, updating the name tables and attribute tables in small chunks, etc. In a fighting game, with 2 name tables you can just fill them with tiles once before the fight starts and there you go, you don't have to worry about this until the next fight starts. 512 pixels is a big enough arena... You could even animate it with palette cycling and/or pattern cycling.<br /><br />The absence of a level map also makes complex physics unnecessary. The player are on a flat floor, and most movements can just be scripted. Also, there are very few active elements at a time... usually just 2 players and some occasional energy blasts. That is, very few things to test for collisions.<br /><br />I don't think programming a fighting game is hard at all, but I do think it is very hard to finish one. First, you have to be very creative to come up with interesting characters with equally interesting and unique moves. You also need a lot of patience to draw the insane amount of sprites that are necessary.<br /><br />On the programming side, I admit that coding the AI for fighters might actually be very hard, but that's it.<br /><br />Of course programming such a fighting game on the NES might be a bit more challenging, mainly because of the sprite limitation. A person might try using the background for one of the fighters so they'd look much bigger (like on the SNES or the Mega Drive/Genesis), but trying to come up with an interesting background (even if it's only above and below the fighting area) or a good excuse for the absence of one, that will be a challenge! =)<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Thu Aug 23, 2007 10:32 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[WhoaMan]]></name></author>
<updated>2007-08-23T21:33:50-07:00</updated>
<published>2007-08-23T21:33:50-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3545&amp;p=26475#p26475</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3545&amp;p=26475#p26475"/>
<title type="html"><![CDATA[Easier and harder game genre to code/developp]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3545&amp;p=26475#p26475"><![CDATA[
try making the card game War on the NES. the card management is a pain in the ass. keeping all the cards in the same order why swapping them between two players. i am currently using two double sided stacks... though it isnt really a stack... but its the only way i know how to describe it is by comparing it to a stack<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=25">WhoaMan</a> — Thu Aug 23, 2007 9:33 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2007-08-23T01:20:03-07:00</updated>
<published>2007-08-23T01:20:03-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3545&amp;p=26469#p26469</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3545&amp;p=26469#p26469"/>
<title type="html"><![CDATA[Easier and harder game genre to code/developp]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3545&amp;p=26469#p26469"><![CDATA[
Yes - I asked the question for general purpose programming. Of course it also means on the NES, but I guess the NES don't make genre harder to code or to design, it just has some limitation.<br />And shots from smallers angles than 45° exists on the NES (Solar Jetman) however they can be a pain to control sometimes. Automatic targetting would rock, I guess you just have to automatically target the enemy which is closer to the player (according to the sum of the horizontal and vertical delta of position) this give me some ideas. Final Fantasy Adventure does target enemies automatically when using the magic Fire, and this is great, as for some reason the enemy who I want to be hit is automatically hit, as if the gameboy was able to read my thinkings. I know this is a gameboy game, and not a NES game, but apart of the CPU those systems are still close enough when it comes to overall power (I already see Tepples finding arguments to proof I'm wrong here, but I mean aproximatively, both are 8-bit systems with the same number of buttons).<br /><br />A game engine that could never made it to the NES no matter what is Tales of Phantasia : Just look at how many sprites per line there is in battle (even the SNES, wich holds 4 times more sprites than the NES, flickers a lot). Plus, the battle system is programmed mediocrly (even on the SNES), so I guess it was very hard to programm this game, as not only it's a RPG but additionally its battle system is somewhat unique and strange. They got it pretty right no matter what.<br /><br />Am I the only one who thinks a fighting game should be the very hardest genre ? I mean there is nothing too complex in itself, but most fighting games I played for the NES (such as Best of the Best championship Karate, Karate Champ, Karateka, Kung Fu, TMNT Tourament Fighters, Double Dragon in mode B, etc...) just plain shucked. Yes, Punch-Out is great, however it's definitely not a traditional fighting game.<br />I havent played really fun fighting games until the PS1 was out (even if I'm not a fan of the genre). And, yes there is several decent fighting games on the SNES (including SF2 and some others) but definitely they are not fun for a very long time, as moves are always the same and get very repetitive + the CPU is insanely hard to beat.<br /><br />EDIT : About Sim City, I remember the original wasn't overly complicated, however Sim City 2000 and 3000 were very complicated (and were isometric perspective, while the original was top view). Am I right ? Maybe the (original ?) Macintosh version wasn't very optimized, and that the potential NES version would have been optimised to use less RAM. Maybe it would have used EWROM, but the MMC5 can actually handle 64 KB of RAM (including 32 KB battery backed), so what Tepples describe is possible. Maybe it would have been the only game that actually used the MMC5 well. The SNES verison of Sim City uses a special cart with extra SRAM, too, depsite the fact that the SNES has already 128 kb of internal RAM.<br /><br />And about Koei, yeah they were just crazy. It's so much a shame that they games aren't as crazy as their hardware. Anyway Koei games make good devcarts no matter what. And they are still crazy today, releasing 2D games on the PS2  <img src="http://forums.nesdev.com/images/smilies/icon_wink.gif" alt=":wink:" title="Wink" /><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Thu Aug 23, 2007 1:20 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2007-08-22T22:03:48-07:00</updated>
<published>2007-08-22T22:03:48-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3545&amp;p=26467#p26467</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3545&amp;p=26467#p26467"/>
<title type="html"><![CDATA[Easier and harder game genre to code/developp]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3545&amp;p=26467#p26467"><![CDATA[
<div class="quotetitle">tepples wrote:</div><div class="quotecontent"><br /><ul><li>Twitch-oriented bipedal shooters such as Quake III, even redone in a pseudo-overhead perspective like Metal Gear or Ikari, because of the lack of a way to quickly aim a weapon in increments more precise than 45 degrees</li></ul><br /></div><br />There are ways to do this... even if you have to implement some sort of automatic targeting system, that moves the cross hair from shootable thing to shootable thing... I think it could work... on the NES even.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br /><ul><li>Simulators such as SimCity, The Sims, Harvest Moon, Animal Crossing, where the state of a simulated town is much larger than 8 KiB </li><li>Manic shooters such as DoDonPachi and Espgaluda, where sprite flicker would surpass that of the first port of Pac-Man to Atari 2600 </li></ul><br /></div><br />That does not make a game difficult to program, just unlikely to be done on the NES. But provided you have the appropriate resources, it shouldn't be hard.<br /><br />Anyway, the difficulty in programming a certain type of game shouldn't vary much from one platform to the other, because the mechanics are the same. You might have to use some tricks here and there when attempting certain things on older systems such as the NES, but a 2D platformer works mostly the same on the NES and on a PC, and that has little to do with how difficult it is to program.<br /><br />And even if the platform did play a huge role on how hard it is to program the same style of game (too many tricks to emulate some native feature of other platform), that shouldn't matter when comparing different genres of games. Regardless of the platform, an RPG will be harder to code than a space shooter.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Wed Aug 22, 2007 10:03 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[bunnyboy]]></name></author>
<updated>2007-08-22T19:48:38-07:00</updated>
<published>2007-08-22T19:48:38-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3545&amp;p=26466#p26466</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3545&amp;p=26466#p26466"/>
<title type="html"><![CDATA[Easier and harder game genre to code/developp]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3545&amp;p=26466#p26466"><![CDATA[
<div class="quotetitle">tepples wrote:</div><div class="quotecontent"><br /><div class="quotetitle">bunnyboy wrote:</div><div class="quotecontent"><div class="quotetitle">tepples wrote:</div><div class="quotecontent">Simulators such as SimCity, The Sims, Harvest Moon, Animal Crossing, where the state of a simulated town is much larger than 8 KiB<br /></div><br />Except there is a finished version of SimCity for NES.</div><br />Was a prototype ever found? I have a feeling that as with Earthbound: Prototype, Nintendo decided against putting this on cartridge due to replication cost.</div><br />A verified final finished version is in the hands of a Nintendo Power editor, never to be seen again!  Cost and end of NES lifetime probably cancelled it.  <br /><br /><br /><div class="quotetitle">tepples wrote:</div><div class="quotecontent"><br />I seem to remember that a save state from SimCity for Mac OS was 27 KiB. But then you'd need yet another 27 KiB for the current state of the town. Round up to a power of 2 and you have 64 KiB, half of which must be battery-backed. Add MMC5 and you're looking at one expensive Game Pak.<br /></div><br />I assume Mac vers didn't bother with too much compression, but that still likely wouldn't get below 32KB for both current and saved.  Would be expensive but not much more than Romance of the Three Kingdoms II (MMC5, 32KB WRAM battery backed, 256KB PRG/CHR) but Koei was just crazy  <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" />  Add in the licensing fees and they must have made nothing on those carts.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=228">bunnyboy</a> — Wed Aug 22, 2007 7:48 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2007-08-22T19:31:42-07:00</updated>
<published>2007-08-22T19:31:42-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3545&amp;p=26465#p26465</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3545&amp;p=26465#p26465"/>
<title type="html"><![CDATA[Easier and harder game genre to code/developp]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3545&amp;p=26465#p26465"><![CDATA[
<div class="quotetitle">bunnyboy wrote:</div><div class="quotecontent"><br />Thats what the PowerGlove is for!  <img src="http://forums.nesdev.com/images/smilies/icon_wink.gif" alt=";)" title="Wink" /><br /></div><br />I said "Nintendo controllers". Power Glove was a Mattel product; Nintendo wouldn't do its own motion-sensing console controller until 2006. I guess the Control Pad would move the player, the glove would control a bulls-eye, and pulling the trigger finger would shoot at it.<br /><br /><div class="quotetitle">bunnyboy wrote:</div><div class="quotecontent"><br />Don't have specific examples but there should be overhead car racing or skiing games that do smaller than 45 degrees?<br /></div><br />Overhead-style racing games such as Micro Machines, RC Pro-Am, and Rock n Roll Racing have their own problems: you can't see far enough down the track.<br /><br /><div class="quotetitle">bunnyboy wrote:</div><div class="quotecontent"><br />Of course with the dpad getting good aim is hard or slow, not good for twitch games.<br /></div><br />Especially when you need to <a href="http://en.wikipedia.org/wiki/Bunny_hopping" class="postlink">hop around</a> with precision, bunnyboy.<br /><br /><div class="quotetitle">bunnyboy wrote:</div><div class="quotecontent"><br /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">Simulators such as SimCity, The Sims, Harvest Moon, Animal Crossing, where the state of a simulated town is much larger than 8 KiB<br /></div><br />Except there is a finished version of SimCity for NES.</div><br />Was a prototype ever found? I have a feeling that as with Earthbound: Prototype, Nintendo decided against putting this on cartridge due to replication cost.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />No idea what mapper it uses but there are uncommon boards with 32KB+ WRAM (SXROM, EWROM).<br /></div><br />I seem to remember that a save state from SimCity for Mac OS was 27 KiB. But then you'd need yet another 27 KiB for the current state of the town. Round up to a power of 2 and you have 64 KiB, half of which must be battery-backed. Add MMC5 and you're looking at one expensive Game Pak.<br /><br />Another thing about Animal Crossing: It lets the player design patterns on his clothes. You'd need 3D hardware (or an insanely optimized software renderer) to be able to animate a custom clothes pattern for all of the character's actions, and you'd need more than four colors per sprite to be able to draw this clothes pattern without using the Mega Man overlap trick and potentially causing tons of flicker.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Wed Aug 22, 2007 7:31 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[bunnyboy]]></name></author>
<updated>2007-08-22T19:02:48-07:00</updated>
<published>2007-08-22T19:02:48-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3545&amp;p=26464#p26464</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3545&amp;p=26464#p26464"/>
<title type="html"><![CDATA[Easier and harder game genre to code/developp]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3545&amp;p=26464#p26464"><![CDATA[
<div class="quotetitle">tepples wrote:</div><div class="quotecontent"><br />Twitch-oriented bipedal shooters such as Quake III, even redone in a pseudo-overhead perspective like Metal Gear or Ikari, because of the lack of a way to quickly aim a weapon in increments more precise than 45 degrees<br /></div><br />Thats what the PowerGlove is for!  <img src="http://forums.nesdev.com/images/smilies/icon_wink.gif" alt=";)" title="Wink" />  Don't have specific examples but there should be overhead car racing or skiing games that do smaller than 45 degrees?  RC Pro AM?  Of course with the dpad getting good aim is hard or slow, not good for twitch games. <br /><br /><br /><div class="quotetitle">tepples wrote:</div><div class="quotecontent"><br />Simulators such as SimCity, The Sims, Harvest Moon, Animal Crossing, where the state of a simulated town is much larger than 8 KiB<br /></div><br />Except there is a finished version of SimCity for NES.  No idea what mapper it uses but there are uncommon boards with 32KB+ WRAM (SXROM, EWROM).  More CHR address lines could be used to get even more WRAM, but that gets away from the available Nintendo made boards.  I would assume SimCity would have been MMC5 for the extra tiles and full batt backup instead of just 8KB.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=228">bunnyboy</a> — Wed Aug 22, 2007 7:02 pm</p><hr />
]]></content>
</entry>
</feed>