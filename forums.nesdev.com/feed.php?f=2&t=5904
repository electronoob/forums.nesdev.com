<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=2&amp;t=5904" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2010-01-17T07:29:40-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=2&amp;t=5904</id>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2010-01-17T07:29:40-07:00</updated>
<published>2010-01-17T07:29:40-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5904&amp;p=55260#p55260</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5904&amp;p=55260#p55260"/>
<title type="html"><![CDATA[4015 question]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5904&amp;p=55260#p55260"><![CDATA[
<div class="quotetitle">Drag wrote:</div><div class="quotecontent"><br />There's no way to know for sure; all you have is the knowledge that the DMC's bit in 4015 could flip itself at *any time*, and that "any time" can occur right after you read 4015, and are about to rewrite to it. <img src="http://forums.nesdev.com/images/smilies/icon_razz.gif" alt=":P" title="Razz" /><br /></div><br />You're wrong when you say the bit could flip any time. First, it will never change from 0 to 1 on its own. Second, it will reset on its own only on the end of a sample. A sample will end on a predictable fork of time from the time you enable it, and if you enable it in a predictable fork of time (when the sound code runs), there is probably a way to make sure it never ends there.<br /><br />Else it could be done like that (tricky) :<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">IRQ :<br />  bit $4015<br />  bpl +      ;Acknownledge &amp; return on sample IRQ<br />  rti<br />+  .... real IRQ code<br /><br />WriteTo4015 :<br />  sei               ;No interrupts<br />  lda $4015<br />  and Wathever  ;Force on/off whathever channels<br />  ora Whathever<br />  sta $4015       ;A sample might get accidentally restarted here<br />  bit $4015       ;Acknownledge possible IRQ<br />  bpl +<br />   and #$0f      ;If we missed an IRQ, disable the channel right away<br />   sta $4015<br />+ cli<br />...<br /></div><br />I think that should work - not 100% sure tough.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Sun Jan 17, 2010 7:29 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Drag]]></name></author>
<updated>2010-01-16T12:20:31-07:00</updated>
<published>2010-01-16T12:20:31-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5904&amp;p=55233#p55233</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5904&amp;p=55233#p55233"/>
<title type="html"><![CDATA[4015 question]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5904&amp;p=55233#p55233"><![CDATA[
There's no way to know for sure; all you have is the knowledge that the DMC's bit in 4015 could flip itself at *any time*, and that "any time" can occur right after you read 4015, and are about to rewrite to it. <img src="http://forums.nesdev.com/images/smilies/icon_razz.gif" alt=":P" title="Razz" /><br /><br />That's why I wanted to use the IRQ to tell when it ended, so I could set 4013 to 00, and effectively nullify the glitch. That apparently has the potential to be a little intrusive though (even if I don't think so).<br /><br />I did what Disch said though, I just sucked it up and had an exception programmed in for the triangle, to silence it differently from the set-volume-to-0 method the other channels use. I don't touch 4015 at all except to start a DMC sample. <img src="http://forums.nesdev.com/images/smilies/icon_razz.gif" alt=":P" title="Razz" /><br /><br />However, to silence the triangle channel, I changed it so I write 00-&gt;4008, and <strong>07</strong>-&gt;400B (instead of 00-&gt;400B). The change is because in NotSo, certain triangle-muting situations (specifically, a triangle sound effect ending when the triangle music channel is playing silence (thus, no period to 'restore')) would result in a pop, and I tracked it down to the fact that I write to 4017 at the very end of my music engine, whereas the code that handles the above situation is quite a ways away from that write, apparently enough to allow the triangle to clock with a period of $0xx, making a pop.<br /><br />Setting the period to $7xx fixed the pop (since now the triangle can only clock up to *one* time, rather than *several* times), and it only added 2 cpu cycles to the silence routine. <img src="http://forums.nesdev.com/images/smilies/icon_razz.gif" alt=":P" title="Razz" /><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=21">Drag</a> — Sat Jan 16, 2010 12:20 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2010-01-16T04:00:49-07:00</updated>
<published>2010-01-16T04:00:49-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5904&amp;p=55221#p55221</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5904&amp;p=55221#p55221"/>
<title type="html"><![CDATA[4015 question]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5904&amp;p=55221#p55221"><![CDATA[
I just wanted to ask something about the glitch that could occur if I were to do something like :<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">lda $4015<br />and #$10<br />ora Whathever<br />sta $4015</div><br /><br />Assuming the sound code is called only 1 time per frame, just after the VBlank, this piece of code would always run at an approximately predictable time of the frame (in the first few scanlines).<br /><br />My question is : is there any way to be 100% sure a DMC sample will never end in those lines of code ? I think as long as the DMC sample is far away of a whole number of frame long, there shouldn't be any problem - the sample will never end during the sound code playback and will avoid all problems.<br /><br />More specifically the following piece of code :<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">  lda KeyOff<br />  eor #$1f<br />  and $4015<br />  ora KeyOn<br />  sta $4015<br /></div><br />Would allow all channel to be silenced whenever their "KeyOff" bit is set, and enabled back when a "KeyOn" is set, and I might decide to use something like that in more advanced versions of my sound engine.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Sat Jan 16, 2010 4:00 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Disch]]></name></author>
<updated>2010-01-07T08:47:21-07:00</updated>
<published>2010-01-07T08:47:21-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5904&amp;p=54817#p54817</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5904&amp;p=54817#p54817"/>
<title type="html"><![CDATA[4015 question]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5904&amp;p=54817#p54817"><![CDATA[
<div class="quotetitle">Drag wrote:</div><div class="quotecontent"><br />I guess I can $00-&gt;$4008 $80-&gt;$4017<br /></div><br /><br />Don't forget to write to $400B (to set the halt flag) before $4017... otherwise the $4008 write does nothing.<br /><br />But yeah.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=33">Disch</a> — Thu Jan 07, 2010 8:47 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2010-01-07T05:19:32-07:00</updated>
<published>2010-01-07T05:19:32-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5904&amp;p=54811#p54811</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5904&amp;p=54811#p54811"/>
<title type="html"><![CDATA[4015 question]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5904&amp;p=54811#p54811"><![CDATA[
Well about the cut-off early, even if you cut-off only 1 frame, do you think it will be noticeable if a square channel cut-off 1 frame and the triangle channel 3/4 of the frame ? (which is the worst case if you use 4 step sequences and fall just after a tick). Maybe it is - I don't know but I doubt it.<br /><br />And yeah $4015 is the only method that work universally on all channels. Writing #$00 to regs 2 and 3 works on square &amp; triangle, but not on noise, write #%xx110000 to reg 0 works on square and noise, but not on triangle, and writing $00 or $80 works on triangle but not on square and noise.<br />So the other method I'd think which would work equally on all channels is to write #%xx110000 to reg 0 and #$00 to reg 2 and reg 3 which will work, but with the click problem on triangle.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Thu Jan 07, 2010 5:19 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Drag]]></name></author>
<updated>2010-01-07T05:04:10-07:00</updated>
<published>2010-01-07T05:04:10-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5904&amp;p=54809#p54809</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5904&amp;p=54809#p54809"/>
<title type="html"><![CDATA[4015 question]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5904&amp;p=54809#p54809"><![CDATA[
Yeah, you guys are right. <img src="http://forums.nesdev.com/images/smilies/icon_razz.gif" alt=":P" title="Razz" /> I find that I have a very bad tendency to overcomplicate things in the interests of trying to be "clever". <img src="http://forums.nesdev.com/images/smilies/icon_razz.gif" alt=":P" title="Razz" /><br /><br />The main thing is that I want to be as efficient as I can, and to reuse as much code as I can, so finding a silencing method that works the same way on all 4 channels seemed like a very good solution in my eyes. I would've used this method on my current engine, since it doesn't support DMC. However, I want the next version of my engine to be able to support DMC, but since this method prevents proper DMC usage, I can't use it.<br /><br />The channel silencing code is in my envelope code, and I already had to make a seperate subroutine for the triangle. I guess there's no way I can fully recycle the envelope code, and that's just the way things are. <img src="http://forums.nesdev.com/images/smilies/icon_razz.gif" alt=":P" title="Razz" /><br /><br />If writing $80-&gt;$4017 will clock the linear counter immediately, then I guess I can $00-&gt;$4008 $80-&gt;$4017 just as easily as I can $0B-&gt;$4015 $0F-&gt;$4015. Messing with $4017 will kinda break the APU's hardware features though, but nothing's really lost, since I don't use them anyway.<br /><br />By the way, I wanted to be able to immediately silence the triangle channel without any delays, because the other 3 channels have (simple) ways to immediately silence them. In essence, I was able to put in a "cut the notes x 'ticks' early" feature, which (very usefully on the triangle channel) broke the notes up into seperate discernible puffs, rather than a lengthy toot (3 notes of the same pitch on the triangle channel will sound like 1 long note without this feature). However, if I add a feature to the music interpreter, it *needs* to work on all of the channels. If the triangle has random delays before it shuts off, then the feature is "broken" on that channel, since it doesn't behave the same way as it does on the others, even though it *should*.<br /><br />My virtual channel registers were already taken care of: I already needed to store the channel's current period in order for pitch slides to work, and the envelope code would already restore the volume to the channel (if it were interrupted) simply by continuing to the next "step" of the envelope, since the envelopes aren't tempo-based, and update every frame.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=21">Drag</a> — Thu Jan 07, 2010 5:04 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2010-01-07T04:37:15-07:00</updated>
<published>2010-01-07T04:37:15-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5904&amp;p=54808#p54808</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5904&amp;p=54808#p54808"/>
<title type="html"><![CDATA[4015 question]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5904&amp;p=54808#p54808"><![CDATA[
<div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />The catch is that you'd have to write to $400B and $4017 every frame -- but you could throw those in at the end of your play routine -- what would it be... like 8 bytes?<br /></div><br />I do exactly what you describe in my engine - and write to $400b only on key ons yet it works perfectly on all emulators and real HW. Maybe there is a ~1/4 frame delay before the silence tough - writing to $400b and $4017 will likely remove it.<br /><br />However as long as you never play DMC samples, I don't see any problem with the $4015 approach. Then there is a few ways you could make sure to be safe, the IRQ method, or just shut off manually the sample right before it finishes itself. I don't know if writing $1x to $4015 will start a sample if the previous stopped. If it does, then what I said yesterday won't work.<br /><br />The only thing in which the triangle channel differs from the other in my engine is that to have it working the normal way, you need to choose a special duty cycle that OR the value with $80. If you choose another duty cycle, it will work in timed mode and all notes will sound the same lenght (but those are for the square/noise channel normally). On the other way, if you select triangle duty cycle for square/noise, it will work in hardware decay mode.<br />The only piece of code that is specific to a sound channel is the code that sets noise frequency registers. It would be possible but a real pain to have to deal with the normal pitch table for noise notes.<br /><br />I'd have to find a better approach that threat all channels equally and that remove this duty cycle mess for a more complex version of the sound engine tough.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Thu Jan 07, 2010 4:37 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[neilbaldwin]]></name></author>
<updated>2010-01-07T01:27:07-07:00</updated>
<published>2010-01-07T01:27:07-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5904&amp;p=54805#p54805</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5904&amp;p=54805#p54805"/>
<title type="html"><![CDATA[4015 question]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5904&amp;p=54805#p54805"><![CDATA[
I'm with Disch: sounds like you're massively over-complicating things.<br /><br />I've written two quite different NES music engines in the last 6 months and both used the "normal" method to silence the triangle voice i.e. writing $00 to $4008, and I've always found it effective enough.<br /><br />Are you doing something radically different? I ask sincerely: I'm really curious.<br /><br />In both my engines I have a set of RAM variables that I call "V_APU" and "V_APU_OLD. It's 22 bytes each that represent each of the APU registers.<br /><br />During the refresh I do all my register writes to these variables, well V_APU.<br /><br />At the end of the refresh I compare V_APU to V_APU_OLD and write any of the hardware registers that have changed during that refresh.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">_APU_REGISTERS    EQU $4000<br /><br />V_APU             DSB 22,0<br />V_APU_OLD         DSB 22,0<br /><br />plyrWriteAPU:<br />                  ldx #$00             ;write data to chip only if it's changed since last pass<br />@a                lda V_APU,X<br />                  cmp V_APU_OLD,X      ;same as old APU register value?<br />                  beq @b<br />                  sta V_APU_OLD,X      ;no, update and write to APU<br />                  sta _APU_REGISTERS,x<br />@b                inx<br />                  cpx #$16   <br />                  bne @a<br />                  rts<br /><br /></div><br />I have a "volume" for Triangle like Disch describes. I write $88 to the Triangle Volume when it should be playing and $00 to it when it shouldn't.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3896">neilbaldwin</a> — Thu Jan 07, 2010 1:27 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Disch]]></name></author>
<updated>2010-01-06T20:40:01-07:00</updated>
<published>2010-01-06T20:40:01-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5904&amp;p=54800#p54800</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5904&amp;p=54800#p54800"/>
<title type="html"><![CDATA[4015 question]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5904&amp;p=54800#p54800"><![CDATA[
Sounds like a really roundabout way to me.<br /><br />Hooking the IRQ seems like a terrible idea.  It adds an extra hurdle for whatever program that uses this engine.  What if the game is using IRQs for something else (something that might be timing sensitive)?<br /><br />Bregalad's idea could work... but it's definatley something you'd want to thorougly test on the hardware.  I don't know if anyone knows exactly when the DMC polls the regs -- if it doesn't poll them on $4015 write then it could be a problem.<br /><br />But I still think the $4017 approach is the least invasive.  Sure it only works for the Triangle, but so what?  Volume changes only work for Squares/Noise and Duty changes only work for Noise, etc.  You can't possibly treat all the channels the same.<br /><br />Actually -- now that I think about it ... you could kind of treat the triangle somewhat the same as the square/noise.  Give the triangle a volume level just like the squares/noise, and write it to $4008 (1st reg just like square/noise).<br /><br />It wouldn't be an actual volume level, but it would be like 0=silence and nonzero=full volume:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">LDA trivolume<br />ORA #$80<br />STA $4008<br /><br />; ...<br /></div><br /><br />The catch is that you'd have to write to $400B and $4017 every frame -- but you could throw those in at the end of your play routine -- what would it be... like 8 bytes?<br /><br />Anyway.. then every channel can be turned off by setting volume to zero.  No muss, no fuss.  And you never have to mess with $4015.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=33">Disch</a> — Wed Jan 06, 2010 8:40 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Drag]]></name></author>
<updated>2010-01-06T18:50:40-07:00</updated>
<published>2010-01-06T18:50:40-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5904&amp;p=54798#p54798</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5904&amp;p=54798#p54798"/>
<title type="html"><![CDATA[4015 question]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5904&amp;p=54798#p54798"><![CDATA[
Ok, so I think I have a method worked out, but I would like to get some opinions on it before I commit to it.<br /><br />Basically, I'd still be using the $4015 method, because it works for all of the channels, and it'll simplify many things, i.e., all 4 PSG channels will use the same code to flip their $4015 bits off and on, the only thing that changes is a simple table lookup index or something.<br /><br />I played with the DMC, and yeah, its $4015 bit is actually its trigger, so I need to keep track of that. However, writing to $4015 for any reason other than starting the DMC will leave me wide open for the bug Disch pointed out:<br />If the DMC's bit changes between when I read it and when I write to $4015, the sample will restart since I'll write the wrong bit, which retriggers the sample.<br /><br />To get around that, I'll use the DMC's IRQ (which fires when the sample ends), and during the IRQ, I'll write $00 to $4013 (Sets the length of the sample to 0), and then $0F to $4015 (to acknowledge the DMC irq, and I can write $0F because no matter what, any disabled bits will be re-enabled immediately after they're disabled, so this doesn't conflict with anything). This way, when the bug occurs, the sample doesn't get repeated, it'll just play nothing. (or at least, something unnoticeable)<br /><br />How does this sound?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=21">Drag</a> — Wed Jan 06, 2010 6:50 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Disch]]></name></author>
<updated>2010-01-06T14:14:06-07:00</updated>
<published>2010-01-06T14:14:06-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5904&amp;p=54796#p54796</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5904&amp;p=54796#p54796"/>
<title type="html"><![CDATA[4015 question]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5904&amp;p=54796#p54796"><![CDATA[
<div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Disch: I wasn't planning on *reading* $4015 at all, just writing to it.<br /></div><br /><br />If you want to stop the Triangle with $4015, and the DMC might be playing, you'd have to read $4015.  It's the only way you can really know whether or not you need to write 0 or 1 for the DMC bit.<br /><br />The DMC bit is not like the other bits.  It's like a switch that shuts itself off after the DMC sample finishes.  If you switch it back on after it has switched itself off, you replay the same sample all over again.<br /><br />If the DMC isn't playing and you write 1, you'll start the DMC.<br />If the DMC is playing and you write 0, you'll stop the DMC.<br /><br />The only way not to interrupt the DMC is to write that bit properly.  And the only way to know what to write is by reading $4015.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Though, is there any reason why I'd need to disable the DMC's bit in $4015?<br /></div><br /><br />You'd write 0 if the DMC isn't playing (and you don't want to make it start playing)<br /><br />Or if you want to stop the DMC early.<br /><br /><br />Anyway -- like I say.  The $4015 approach for silencing the triangle <em>really</em> complicates things for the DMC... and there's no way I can see to do it without introducing potential audio glitches.<br /><br />You're better off with the $4017 approach.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=33">Disch</a> — Wed Jan 06, 2010 2:14 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Drag]]></name></author>
<updated>2010-01-06T12:36:51-07:00</updated>
<published>2010-01-06T12:36:51-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5904&amp;p=54794#p54794</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5904&amp;p=54794#p54794"/>
<title type="html"><![CDATA[4015 question]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5904&amp;p=54794#p54794"><![CDATA[
Disch: I wasn't planning on *reading* $4015 at all, just writing to it. Either way, that behavior was what I was afraid of. If 1-&gt;0-&gt;1 on 4015.4 restarts the DMC sample, then I probably shouldn't use it for silencing the channel DMC channel. <img src="http://forums.nesdev.com/images/smilies/icon_razz.gif" alt=":P" title="Razz" /><br /><br />Though, is there any reason why I'd need to disable the DMC's bit in $4015? If the DMC silences itself after the sample is done playing, then that's probably all I'd need, since my music engine would ultimately only just *trigger* the samples on the DMC.<br /><br />I guess being able to stop the DMC would be useful if you wanted looping samples, but like Disch said, quicky toggling the DMC's $4015 bit off then on would only restart the sample, right?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=21">Drag</a> — Wed Jan 06, 2010 12:36 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2010-01-06T09:48:32-07:00</updated>
<published>2010-01-06T09:48:32-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5904&amp;p=54790#p54790</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5904&amp;p=54790#p54790"/>
<title type="html"><![CDATA[4015 question]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5904&amp;p=54790#p54790"><![CDATA[
Well if you're not going to use DMC then it'll be all right writing a '0' in it all times.<br />If you're actually going to use it... when initializing the APU at reset you may want to play a dummy 1-byte sample, and then always write '1' to it - exept when you need to restart a new sample where you do the '0' then '1' thing. I don't know if it'll work but it sounds like it would.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Wed Jan 06, 2010 9:48 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Disch]]></name></author>
<updated>2010-01-05T21:04:03-07:00</updated>
<published>2010-01-05T21:04:03-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5904&amp;p=54775#p54775</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5904&amp;p=54775#p54775"/>
<title type="html"><![CDATA[4015 question]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5904&amp;p=54775#p54775"><![CDATA[
Once you add the DMC you'll want to minimize this as much as possible.  You'll also want to have the smallest possible window between the $4015 read and $4015 write.<br /><br />$4015.4 is the DMC enable bit.  If it transitions from a 0-&gt;1 state, the DMC is restarted, and if you write 0, the DMC stops.  So the only way to not interrupt the DMC if it is playing is to have 1-&gt;1.<br /><br />The problem is, when you read $4015.4, it is 1 if the DMC is playing, and 0 if it isn't playing.   So if the DMC stops playing after your read, but before you write -- you'll end up starting the DMC all over again (2 drum kicks instead of 1).<br /><br />Granted... the odds of this happening would be slim, but it's one of those bugs that will pop up out of nowhere one day... and might be very hard to diagnose.  (And borderline impossible to reproduce on command -- making debugging exceptionally difficult)<br /><br />I wouldn't recommend the $4015 approach for this very reason.  It's hard to avoid on the Tri, but I <em>definately</em> would avoid it for Squares and Noise, since they can be very easily silenced by setting their volume to 0.<br /><br /><br />Another idea would be to artifically clock the length/linear counter with a $4017 write:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">; silence the triangle<br />LDA #0<br />STA $4008   ; clear Linear counter control flag<br /><br />LDA __whatever__<br />STA $400B   ; set linear counter halt flag<br /><br />LDA #$80<br />STA $4017   ; enter 5-step mode<br /><br />  ; tri is now silenced immediately &#40;after 1-2 CPU cycles&#41;<br /></div><br /><br />This works because entering 5-step mode with the $4017 write clocks the linear counter immediately, which triggers the linear counter reload (setting the actual counter to 0, silencing the channel).<br /><br />In fact -- I suspect this is why many commercial games write $80 to $4017 every frame.<br /><br />Pros)<br />- doesn't require $4015 usage, and therefore avoids DMC troubles<br /><br />Cons)<br />- Disrupts the natural flow of the frame sequencer.  IE:  you can't really use sweep/decay/etc units for a duration any longer than 1 frame.<br />- Can't use frame IRQs (who cares)<br />- Really really old or lame emus might not support it (who cares)<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=33">Disch</a> — Tue Jan 05, 2010 9:04 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2010-01-05T19:07:01-07:00</updated>
<published>2010-01-05T19:07:01-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5904&amp;p=54774#p54774</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5904&amp;p=54774#p54774"/>
<title type="html"><![CDATA[4015 question]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5904&amp;p=54774#p54774"><![CDATA[
You can read the status of all five channels' length counters from $4015. To "power-cycle" the triangle channel's length counter, something like this might work:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">  lda $4015<br />  and #%11111011<br />  sta $4015<br />  ora #%00000100<br />  sta $4015<br /></div><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Tue Jan 05, 2010 7:07 pm</p><hr />
]]></content>
</entry>
</feed>