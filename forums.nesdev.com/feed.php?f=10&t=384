<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=10&amp;t=384" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2005-07-10T14:40:40-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=10&amp;t=384</id>
<entry>
<author><name><![CDATA[Anonymous]]></name></author>
<updated>2005-07-10T14:40:40-07:00</updated>
<published>2005-07-10T14:40:40-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=384&amp;p=2711#p2711</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=384&amp;p=2711#p2711"/>
<title type="html"><![CDATA[What is a &quot;slot&quot; in wla dx assembler?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=384&amp;p=2711#p2711"><![CDATA[
A <em>slot</em> is a subdivision of the logical memory space.<br />A <em>bank</em> is a chunk of physical memory which is mapped to physical memory in a slot.<br /><br />You typically have many banks which you swap in and out of various slots, so you can have much more physical memory than the CPU would normally allow.<br /><br />You might also define slots in the assembler that don't strictly exist (the memory manager doesn't know about them), but are convenient for programming. E.g. in this <a href="http://nesdev.com/bbs/viewtopic.php?p=2622#2622" class="postlink">example courtesy of Bregalad</a>:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">.memorymap <br />defaultslot 0 <br />slotsize $100 <br />slot 0 $0 ;0 page RAM <br />..............<br /></div><br /><br />The CNROM MM doesn't actually have a slot for the zero page, but it's convenient to have in case you define too many variables.<p>Statistics: Posted by Guest — Sun Jul 10, 2005 2:40 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2005-07-04T03:58:25-07:00</updated>
<published>2005-07-04T03:58:25-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=384&amp;p=2635#p2635</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=384&amp;p=2635#p2635"/>
<title type="html"><![CDATA[What is a &quot;slot&quot; in wla dx assembler?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=384&amp;p=2635#p2635"><![CDATA[
I can't get what you don't understand. A memory slot is just used because the assembler have to know at wich adress your variable or your code have to be stocked.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Mon Jul 04, 2005 3:58 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2005-07-03T02:33:22-07:00</updated>
<published>2005-07-03T02:33:22-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=384&amp;p=2624#p2624</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=384&amp;p=2624#p2624"/>
<title type="html"><![CDATA[What is a &quot;slot&quot; in wla dx assembler?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=384&amp;p=2624#p2624"><![CDATA[
What are memory slots in the wla dx assembler?<br /><br />Continuing from <!-- m --><a class="postlink" href="http://nesdev.com/bbs/viewtopic.php?t=383">http://nesdev.com/bbs/viewtopic.php?t=383</a><!-- m --><br /><br />First off, <!-- m --><a class="postlink" href="http://nesdev.com/bbs/viewtopic.php?p=2622#2622">http://nesdev.com/bbs/viewtopi ... =2622#2622</a><!-- m --> does not help me at all. But I think I might have figured out what the concept means, and how utterly confusingly every presentation has been (as well as the name).<br /><br />Could a slot be a means of filling several areas of memory in an interleved fashion, a way of keeping several "current position" markers for each area? If so, calling them segments would have made their use obvious (I think this is what ca-65 calls them).<br /><br />For example on the NES I'd have a segment for zero-page, one for low-memory, and one for each ROM bank. Then I'd fill them in an interleved fashion:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">    $0-$ff      zero_page<br />    $200-$7ff   low_mem<br />    $8000-$bfff rom_bank_0<br />    ...<br />    <br />    .segment &quot;zero_page&quot;<br />fast_temp:<br />    .byte   0   ; address = 0<br /><br />    .segment &quot;rom_bank_0&quot;<br />    lda #12     ; address = $8000<br />    ; .. some routine here<br />    <br />    .segment &quot;low_mem&quot;<br />temp_buffer:<br />    .byte 0,0   ; address = $200<br />    <br />    .segment &quot;zero_page&quot;<br />another_variable:<br />    .byte   0   ; address = 1<br />    <br />    ; etc.<br /></div><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Sun Jul 03, 2005 2:33 am</p><hr />
]]></content>
</entry>
</feed>