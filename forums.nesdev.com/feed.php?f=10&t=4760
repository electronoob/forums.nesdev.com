<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=10&amp;t=4760" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2009-01-20T12:28:35-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=10&amp;t=4760</id>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2009-01-20T12:28:35-07:00</updated>
<published>2009-01-20T12:28:35-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4760&amp;p=42180#p42180</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4760&amp;p=42180#p42180"/>
<title type="html"><![CDATA[Efficiency: reading joypad data into a byte of RAM]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4760&amp;p=42180#p42180"><![CDATA[
<div class="quotetitle">UncleSporky wrote:</div><div class="quotecontent"><br />Is this particular quirk documented anywhere, or do I just need to be as knowledgeable as you?  :)<br /></div><br />See these threads: <a href="http://nesdev.com/bbs/viewtopic.php?t=4116" class="postlink">DPCM generates extra $4016 read pulse</a> and <a href="http://nesdev.com/bbs/viewtopic.php?t=4124" class="postlink">DMC-fortified controller read routine</a>.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Tue Jan 20, 2009 12:28 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Disch]]></name></author>
<updated>2009-01-20T11:42:27-07:00</updated>
<published>2009-01-20T11:42:27-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4760&amp;p=42178#p42178</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4760&amp;p=42178#p42178"/>
<title type="html"><![CDATA[Efficiency: reading joypad data into a byte of RAM]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4760&amp;p=42178#p42178"><![CDATA[
<div class="quotetitle">Bregalad wrote:</div><div class="quotecontent"><br />This don't apply if you do not use DPCM or if you are on PAL machines.<br /></div><br /><br />News to me.  Do you have a source for this?  I fail to see why PAL systems would be unaffected.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=33">Disch</a> — Tue Jan 20, 2009 11:42 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2009-01-20T10:33:45-07:00</updated>
<published>2009-01-20T10:33:45-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4760&amp;p=42175#p42175</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4760&amp;p=42175#p42175"/>
<title type="html"><![CDATA[Efficiency: reading joypad data into a byte of RAM]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4760&amp;p=42175#p42175"><![CDATA[
Yes, it has been discovered recently that the DPCM can cause erronous $4016 reads in NTSC machines, so you have to read multiple times until you get two consecutive matches. This don't apply if you do not use DPCM or if you are on PAL machines.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Tue Jan 20, 2009 10:33 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[UncleSporky]]></name></author>
<updated>2009-01-20T10:29:11-07:00</updated>
<published>2009-01-20T10:29:11-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4760&amp;p=42174#p42174</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4760&amp;p=42174#p42174"/>
<title type="html"><![CDATA[Efficiency: reading joypad data into a byte of RAM]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4760&amp;p=42174#p42174"><![CDATA[
<div class="quotetitle">tepples wrote:</div><div class="quotecontent"><br />Are you going to be playing sampled audio (using $4010-$4013) in your demo? If so, you need to keep in mind that the DMA unit causes "noise" on the controller ports' clock signal.<br /></div><br />By clock signal, you mean I might read out erroneous data from $4016?  Is this why some games such as Mario 3 do multiple reads, and why most games don't have anything going on while the DMA is playing?<br /><br />Is this particular quirk documented anywhere, or do I just need to be as knowledgeable as you?  <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" /><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3438">UncleSporky</a> — Tue Jan 20, 2009 10:29 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2009-01-20T07:41:08-07:00</updated>
<published>2009-01-20T07:41:08-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4760&amp;p=42171#p42171</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4760&amp;p=42171#p42171"/>
<title type="html"><![CDATA[Efficiency: reading joypad data into a byte of RAM]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4760&amp;p=42171#p42171"><![CDATA[
Are you going to be playing sampled audio (using $4010-$4013) in your demo? If so, you need to keep in mind that the DMA unit causes "noise" on the controller ports' clock signal.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Tue Jan 20, 2009 7:41 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2009-01-20T07:17:49-07:00</updated>
<published>2009-01-20T07:17:49-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4760&amp;p=42168#p42168</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4760&amp;p=42168#p42168"/>
<title type="html"><![CDATA[Efficiency: reading joypad data into a byte of RAM]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4760&amp;p=42168#p42168"><![CDATA[
I could just past the way I do it :<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">ReadJoy<br />   lda #$01<br />   sta $4016      ;Be sure to reset the shift counters<br />   sta JoyData.b<br />   lsr A         ;Simple trick to get a 0, heh<br />   sta $4016<br />_joyLoop<br />   lda $4016      ;Read the value of JoyPad 1<br />   and #$03<br />   cmp #$01<br />   rol JoyData.b<br />   bcc _joyLoop      ;Carry will be set when all 8 keys are read<br />   rts</div><br /><br />I guess it's pretty much optimal if you want anything better you'd want to have an unrolled loop.<br /><br />Also to detect only '0' to '1' transitions which is very usefull :<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">ReadLockJoys<br />   lda JoyData<br />   eor #$ff      ;Invert the old value<br />   pha<br />   jsr ReadJoy<br />   pla<br />   and JoyData      ;And AND it with the new one<br />   sta JoyLocked<br />   bit JoyLocked<br />   bvc +<br />   inc BButtonCounter   ;Increase button counter for combos<br />+   rts</div><br />It also have a counter that counts automatically '0' to '1' transitions of the B button, for some reason I needed that in my project.<br />I guess it's pretty much optimal, but maybe one could come with something better, anyway I'm going to use my own routines. Anyone is free to use them for any non-commercial project.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Tue Jan 20, 2009 7:17 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[MetalSlime]]></name></author>
<updated>2009-01-20T01:11:27-07:00</updated>
<published>2009-01-20T01:11:27-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4760&amp;p=42162#p42162</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4760&amp;p=42162#p42162"/>
<title type="html"><![CDATA[Efficiency: reading joypad data into a byte of RAM]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4760&amp;p=42162#p42162"><![CDATA[
Awesome thread.  I didn't know about the famicon thing, and was puzzled when I found them reading that other bit in some ROMs.  Now I know.  <br /><br />And I love all of these sneaky tricks!<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3632">MetalSlime</a> — Tue Jan 20, 2009 1:11 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2009-01-19T19:18:07-07:00</updated>
<published>2009-01-19T19:18:07-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4760&amp;p=42155#p42155</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4760&amp;p=42155#p42155"/>
<title type="html"><![CDATA[Efficiency: reading joypad data into a byte of RAM]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4760&amp;p=42155#p42155"><![CDATA[
There was another thread about this a while back: <a href="http://nesdev.com/bbs/viewtopic.php?t=4357" class="postlink">Joystick read without using temp RAM intermediate</a>. The non-Famicom version there had a completely unrolled loop, making it about twice as fast as the others. If you want a rolled loop, you can use your shift register as a counter, leaving X and Y untouched:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">    lda #%01111111<br />    sta NewJoyPad<br />    sta $4016<br />    asl a       ; A = %11111110<br />    sta $4016<br />loop: <br />    lda $4016<br />    lsr a<br />    ror NewJoyPad<br />    bcs loop</div><br />NewJoyPad starts out with %01111111 in it, so after the first 7 RORs at the end of the loop, carry is set, and the loop continues. After the 8th ROR, carry is clear, so the loop stops.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Mon Jan 19, 2009 7:18 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[UncleSporky]]></name></author>
<updated>2009-01-19T18:33:10-07:00</updated>
<published>2009-01-19T18:33:10-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4760&amp;p=42154#p42154</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4760&amp;p=42154#p42154"/>
<title type="html"><![CDATA[Efficiency: reading joypad data into a byte of RAM]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4760&amp;p=42154#p42154"><![CDATA[
Wow, that was really fast.<br /><br /><div class="quotetitle">Celius wrote:</div><div class="quotecontent"><br />Here's how I'd do it:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">ldx #1<br />stx $4016<br />dex<br />stx $4016<br /><br />ldx #8<br />-<br />lda $4016<br />lsr a<br />rol NewJoyPad<br />dex<br />bne -<br /><br /></div><br /><br />Also notice you don't have to clear "NewJoyPad', because it's shifted left 8 times, completely erasing every old bit in the byte. Oh, and just a tip for basically anything, remember that you don't have to use "adc" to add something like 1 and 2 together. You can just use "ora" if you're adding to cleared bits.<br /></div>Oh, that is brilliant, using the carry flag to put data right into the variable.  I didn't catch that right away.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />And also, I just noticed you do lda #0 two times in a row. Remember to look for things like that when optimizing code. Sorry, don't mean to be really picky or anything  <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" /> .<br /></div>No, that is precisely what I need to learn.  But I like your way better, just using dex.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Oh, also, stx #8 wouldn't do much for you. Ldx #8 I'm sure is what you meant.<br /></div>I was just coming back to fix that!<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Also @ UncleSporky, your method won't work because $4016 doesn't give you $00/$01 like you expect -- the high bits are open bus which means you'll most likely get $40/$41. You need to mask out the low bit(s) -- or shift them out, like Celius does. You shouldn't use the value you get from $4016 in full.<br /></div>Yet another thing I didn't know, I was wondering why it wasn't working right.  Suddenly I am really glad I posted about this.<br /><br />I don't think I will bother with the Famicom for now, but that is good to know for future use.<br /><br />Thanks a lot guys.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3438">UncleSporky</a> — Mon Jan 19, 2009 6:33 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Disch]]></name></author>
<updated>2009-01-19T18:28:40-07:00</updated>
<published>2009-01-19T18:28:40-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4760&amp;p=42153#p42153</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4760&amp;p=42153#p42153"/>
<title type="html"><![CDATA[Efficiency: reading joypad data into a byte of RAM]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4760&amp;p=42153#p42153"><![CDATA[
Only bit 0 matters for strobing.  So writing 9 has the same effect as writing 1, with the advantage of setting X to 8 after the dex, so you don't need another ldx to prep your loop.<br /><br />Famicom controllers are build in to the system, they weren't seperate things you plug in like on the NES.  This means that replacement controllers or special controllers (like ones with turbo) had to be plugged into the expansion port and data from them is read from bit 1 (not from bit 0, because bit 0 are the built-in controllers).  Therefore checking both bits 0 and 1 makes your program more Famicom friendly.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=33">Disch</a> — Mon Jan 19, 2009 6:28 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Celius]]></name></author>
<updated>2009-01-19T18:26:09-07:00</updated>
<published>2009-01-19T18:26:09-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4760&amp;p=42152#p42152</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4760&amp;p=42152#p42152"/>
<title type="html"><![CDATA[Efficiency: reading joypad data into a byte of RAM]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4760&amp;p=42152#p42152"><![CDATA[
Woah, ldx #9? And what's the deal with bit 0 and 1?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=138">Celius</a> — Mon Jan 19, 2009 6:26 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Disch]]></name></author>
<updated>2009-01-19T18:22:26-07:00</updated>
<published>2009-01-19T18:22:26-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4760&amp;p=42151#p42151</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4760&amp;p=42151#p42151"/>
<title type="html"><![CDATA[Efficiency: reading joypad data into a byte of RAM]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4760&amp;p=42151#p42151"><![CDATA[
For those of you who want to be Famicom compatible, you may want to consider checking both bits 0 and 1 for button presses with a CMP instruction:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">ldx #9<br />stx $4016<br />dex<br />stx $4016<br /><br />loop:<br />  lda $4016<br />  and #3<br />  cmp #1<br />  rol joy<br />  dex<br />  bne loop<br /></div><br /><br /><br />EDIT:<br /><br />Also @ UncleSporky, your method won't work because $4016 doesn't give you $00/$01 like you expect -- the high bits are open bus which means you'll most likely get $40/$41.  You need to mask out the low bit(s) -- or shift them out, like Celius does.  You shouldn't use the value you get from $4016 in full.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=33">Disch</a> — Mon Jan 19, 2009 6:22 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Celius]]></name></author>
<updated>2009-01-19T18:28:17-07:00</updated>
<published>2009-01-19T18:19:31-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4760&amp;p=42150#p42150</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4760&amp;p=42150#p42150"/>
<title type="html"><![CDATA[Efficiency: reading joypad data into a byte of RAM]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4760&amp;p=42150#p42150"><![CDATA[
Here's how I'd do it:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">ldx #1<br />stx $4016<br />dex<br />stx $4016<br /><br />ldx #8<br />-<br />lda $4016<br />lsr a<br />rol NewJoyPad<br />dex<br />bne -<br /><br /></div><br /><br />Also notice you don't have to clear "NewJoyPad', because it's shifted left 8 times, completely erasing every old bit in the byte. Oh, and just a tip for basically anything, remember that you don't have to use "adc" to add something like 1 and 2 together. You can just use "ora" if you're adding to cleared bits.<br /><br />And also, I just noticed you do lda #0 two times in a row. Remember to look for things like that when optimizing code. Sorry, don't mean to be really picky or anything  <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" /> .<br /><br />Oh, also, stx #8 wouldn't do much for you. Ldx #8 I'm sure is what you meant.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=138">Celius</a> — Mon Jan 19, 2009 6:19 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[UncleSporky]]></name></author>
<updated>2009-01-19T18:11:12-07:00</updated>
<published>2009-01-19T18:11:12-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4760&amp;p=42149#p42149</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4760&amp;p=42149#p42149"/>
<title type="html"><![CDATA[Efficiency: reading joypad data into a byte of RAM]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4760&amp;p=42149#p42149"><![CDATA[
Forgive me for asking about something so simple, but I am paranoid about program efficiency.  This is the best way I could come up with to read all the joypad data into one byte...is it decent?  Anything you would do differently?<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">   lda #$01    ;strobe joypad<br />   sta $4016<br />   lda #$00<br />   sta $4016<br /><br />   clc<br />   lda #0      ;clear pad 1 data<br />   stx #8      ;loop 8 times, once for every button<br />-  sta pad1<br />   lda $4016   ;get next button state<br />   adc pad1    ;add the 0 or 1 into pad data<br />   ror         ;rotate pad data right<br />   dex<br />   bne -<br />   sta pad1</div><br />It's really short and simple, but I want to make sure I'm doing this stuff right and not, for example, doing an adc when a cmp would suffice.  I want to start off with good programming practices so I don't end up with a huge mess later.<br /><br />Just before I posted it I already noticed one thing to fix, I was able to eliminate one extra load/store to pad1.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3438">UncleSporky</a> — Mon Jan 19, 2009 6:11 pm</p><hr />
]]></content>
</entry>
</feed>