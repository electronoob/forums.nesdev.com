<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - 8x16 and whatever else unreg wants to know</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">8x16 and whatever else unreg wants to know</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=10&amp;t=7451">http://forums.nesdev.com/viewtopic.php?f=10&amp;t=7451</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>76</strong> of <strong>83</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>unregistered</b> [ Sun Dec 01, 2013 9:48 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: 8x16 and whatever else unreg wants to know</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><strong><span style="color: #40FF40"><span style="font-size: 150%; line-height: normal">THANK YOU SO MUCH FOR YOUR EXPLANATIONS KASUMI!</span></span></strong>  <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" />   goodnight! <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /><br />edit: Here's his post with great explanations. I understand almost all of it! <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /> <div class="quotetitle">Kasumi wrote:</div><div class="quotecontent">The two pieces of code accomplish the same goal. (Though mine sets up the buffers differently. The different way would be faster for your NMI to read as well, though.) You don't need to store/restore X in goodlocation because it just stays in X. (I mean... you may still have to load it before the loop, but you no longer have to do it IN the loop.)  You come out ahead because the code I added takes fewer cycles than the unneeded code I removed. (storing/restoring goodlocation)<br /><br />I omitted some stuff, but the full thing would be like: <br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">ldx #29;Before everything. So not during the loop. This is like goodlocation<br />;But we load it with #29 instead of #59 for other reasons.<br />loop:<br />lda ($10), y;Originally omitted. Have to do that still to get the index, of course<br />sty pointerposition;This wasn't needed before, so we're 3 cycles behind<br />tay;This was needed before. We overwrote what was in y, which is why we stored it above<br /><br /><br />;Metatile index is Y. Location in RAM buffer is in X.<br />&nbsp;lda MetatileTile0, y;Assuming this top left tile<br />&nbsp;sta RAMbuffereven, x;Even buffer<br />&nbsp;lda MetatileTile1,y;Assuming this is top right tile<br />&nbsp;sta RAMbufferodd, x;Odd buffer<br />&nbsp;dex;Takes us to the next tile for BOTH buffers<br /><br />&nbsp;lda MetatileTile2, y;Assuming this bottom left tile<br />&nbsp;sta RAMbuffereven, x;Even buffer<br />&nbsp;lda MetatileTile3,y;Assuming this is bottom right tile<br />&nbsp;sta RAMbufferodd, x;Odd buffer<br /><br />lda pointerposition;used to be tya. You lose just one cycle doing this instead<br />;But you gain that back by not having&nbsp; <br />;ldx goodLocation and stx goodLocation (which would take 6 cycles)<br />;because X doesn't jobs in mine. It's always where you are in the buffer.<br /><br />&nbsp; clc<br />&nbsp;adc #$10 ;increment y by 16!!!!<br />tay<br /><br />&nbsp;dex<br />bpl loop<br /></div><br /><br />After loading the metatile index, you did tax. Mine does this too (well... tay instead), in addition to storing the position to temp ram. That takes 3 extra cycles.<br /><br />Later, you did tya because you can only add to A. Mine does lda tempRAM instead which takes 1 extra cycle than tya. (if zero page)<br /><br />All together, I've made your metatile index transfer work another way. It takes 4 cycles extra.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"> I needed to move y anyway, but i didn't need to move x? <img src="./images/smilies/icon_confused.gif" alt=":?" title="Confused" /> </div><br />Right. You need X/Y for three tasks. 1. Loading from the pointer. (can only be done with Y) 2. Loading tiles from the metatile. 3. Storing the tiles to the buffer. This means either X or Y must change jobs, because two things can't do three jobs without changing. This is true for mine, and it was true for yours. <br /><br />Because of how I preserved X instead of Y (which needed to be change jobs in both because it's needed to access the pointer), I've eliminated stx goodLocation and ldx goodLocation (DURING the loop anyway) which would have taken 6 cycles. So it ends up 2 cycles faster.<br /><br />But mine is also faster for other reasons related to why I did the transfers that way. I dex once for every two times you do, because I do both even and odd at once using separate buffers. I avoid storing each tile of the metatile in the very beginning of the buffer RAM, because there's no need. I have where I am in the buffer in X already when I load the metatile index in y (you load where you are in the buffer later), so they're just stored exactly where they need to be. No need for the temp stores.<br /><br />It saves a lot of cycles per loop. I think 42. 4 for doing dex twice instead of four times, 9*4=36 for not doing the indexed temp stores, 6 for not storing/restoring goodlocation. -4 for things I added. <br /><br />This loops 15 times, so that's 630 cycles. 630 more if you do it twice for two 16x16 columns like it seems you're planning.<br /><br />All that said, I make no guarantees this will work verbatim. There may be some extra stuff you need to do before/after the loop I'm forgetting, but I can't imagine any of it not making the savings worth it.<br /><br />Edit: Heck, I was being safe, but you can move the clc before the add from the loop to before the loop if the pointer is set up such that y = 0 to access the first element. Nothing in the loop changes the carry except the add, and the adds during the loop will NEVER set the carry. (You add 16 to Y 15 times, which would only make it 240. Not greater than 255, so carry would be clear throughout.).  This saves another 28 cycles per loop. 2*15 for not doing it in the loop -2 because you still need to do it before the loop.</div> Yes! Sweet, thanks... y must = 0 to access the first element?  If I set y to zero before the loop... that wont help right?  I need to go away and think about this some more... bye.<br /><br />edit2: I guess y can be guarenteed to be less than 16... that would work right?  It would be 240+15=255 so the carry would be clear because 255 is not greater than 255. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />  I'm not ever going to draw the bottom half of a column... it will start near 0 each time, I think.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>unregistered</b> [ Mon Dec 02, 2013 6:23 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: 8x16 and whatever else unreg wants to know</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Ok, how do I somehow create RAMbufferW?  I've got this part...<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">;======================v<br />RAMbufferw0even .dsb 30<br />RAMbufferw1even .dsb 30<br />RAMbufferw0odd&nbsp; .dsb 30<br />RAMbufferw1odd&nbsp; .dsb 30<br />;======================^</div><br />... ok, now I want to add <div class="codetitle"><b>Code:</b></div><div class="codecontent">RAMbufferW .dsb 120</div> in the exact same place where those are... I've thought about this part so much... I've figured out so much  <img src="./images/smilies/icon_mrgreen.gif" alt=":mrgreen:" title="Mr. Green" />  <img src="./images/smilies/icon_mrgreen.gif" alt=":mrgreen:" title="Mr. Green" />  <img src="./images/smilies/icon_mrgreen.gif" alt=":mrgreen:" title="Mr. Green" /> using yall's info Kasumi, 3gengames, and tepples... thank yall so much!!!  <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" />  Need to understand this blah  <img src="./images/smilies/icon_confused.gif" alt=":?" title="Confused" /> help me please.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>3gengames</b> [ Mon Dec 02, 2013 6:29 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: 8x16 and whatever else unreg wants to know</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />You can use the first variable name as the entire space, because it's going to be the same spot as the different variable name, just make sure you comment &quot;This variable is used as (whatever) in this code.&quot; or mark the label so you know. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>unregistered</b> [ Mon Dec 02, 2013 6:48 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: 8x16 and whatever else unreg wants to know</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">3gengames wrote:</div><div class="quotecontent">You can use the first variable name as the entire space, because it's going to be the same spot as the different variable name, just make sure you comment &quot;This variable is used as (whatever) in this code.&quot; or mark the label so you know. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /></div>  <span style="font-size: 200%; line-height: normal"><strong><span style="color: #FF0000">THANK YOU INCREDIBLY SO MUCH 3GENGAMES!!!</span></strong></span> <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Tue Dec 03, 2013 7:41 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: 8x16 and whatever else unreg wants to know</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Rather than using a comment, it's usually a better idea to define the label so that the code is easier to read:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">RAMbufferW = RAMbufferw0even<br /></div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>unregistered</b> [ Tue Dec 03, 2013 10:08 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: 8x16 and whatever else unreg wants to know</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">thefox wrote:</div><div class="quotecontent">Rather than using a comment, it's usually a better idea to define the label so that the code is easier to read:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">RAMbufferW = RAMbufferw0even<br /></div></div><br /><br />WOAH That's what I wanted.....!!!!!  <strong>[b] Thank you thefox!! </strong>[/b] <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /><br />This is becoming so much fun creating labels and overextending my variable!  SWEET! <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /><br /><br />edit: so here it is   <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /> <img src="./images/smilies/icon_mrgreen.gif" alt=":mrgreen:" title="Mr. Green" /> <br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">0C6A9&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;;************************************************************************<br />0C6A9&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; recieves x... x selects which buffers to use: <br />0C6A9&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;;&nbsp; 0 for RAMbufferw0even and RAMbufferw0odd<br />0C6A9&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;;&nbsp; 1 for RAMbufferw1even and RAMbufferw1odd<br />0C6A9&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; destroys a x and y&nbsp; &nbsp;ooooooooooohhhhh&nbsp; nooooooooooooooooo<br />0C6A9&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;;************************************************************************<br />0C6A9&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;draw_us_a_column: ;(please)<br />0C6A9&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<br />0C6A9 20 73 C6&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;jsr next<br />0C6AC A5 3B&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; lda columnLo<br />0C6AE C5 45&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cmp playdough<br />0C6B0 F0 3F&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; beq +end<br />0C6B2 A5 3A&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; lda columnHi<br />0C6B4 8D 06 20&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;sta $2006<br />0C6B7 A5 3B&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; lda columnLo<br />0C6B9 8D 06 20&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;sta $2006<br />0C6BC&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <br />0C6BC 86 47&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; stx t10<br />0C6BE&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ;start with the even column<br />0C6BE&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<br />0C6BE&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <br />0C6BE&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ;x should be 0 or 1.&nbsp; Set it before hand, please. :)<br />0C6BE BC C9 DD&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;ldy bufferoffsettable, x ;lda RAMbufferw0even, y<br />0C6C1 A2 1D&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ldx #29<br />0C6C3 B9 A8 05&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;- lda RAMbufferW, y<br />0C6C6 8D 07 20&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;sta $2007<br />0C6C9 88&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;dey<br />0C6CA CA&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;dex<br />0C6CB 10 F6&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; bpl -<br />0C6CD&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <br />0C6CD A6 3B&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ldx columnLo<br />0C6CF E8&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;inx<br />0C6D0 A5 3A&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; lda columnHi<br />0C6D2 8D 06 20&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;sta $2006<br />0C6D5 8E 06 20&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;stx $2006<br />0C6D8&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ;then do the odd one<br />0C6D8&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <br />0C6D8 A6 47&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ldx t10<br />0C6DA E8&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;inx<br />0C6DB E8&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;inx<br />0C6DC&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <br />0C6DC BC C9 DD&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;ldy bufferoffsettable, x<br />0C6DF A2 1D&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ldx #29<br />0C6E1 B9 A8 05&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;- lda RAMbufferW, y<br />0C6E4 8D 07 20&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;sta $2007<br />0C6E7 88&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;dey<br />0C6E8 CA&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;dex<br />0C6E9 10 F6&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; bpl -<br />0C6EB&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <br />0C6EB&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;+complete<br />0C6EB A5 3B&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; lda columnLo<br />0C6ED 85 45&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; sta playdough<br />0C6EF&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <br />0C6EF E6 30&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; inc valid_left<br />0C6F1&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<br />0C6F1 60&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; +end: rts; end of draw_us_a_column</div><br />lunch time <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>unregistered</b> [ Tue Dec 03, 2013 2:46 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: 8x16 and whatever else unreg wants to know</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">unregistered wrote:</div><div class="quotecontent">Wow! Once my game becomes alive... <span style="color: #FFFF00">the Max part in Nintendulator debug says 2872</span>... which is no good cause you said <div class="quotetitle">Kasumi wrote:</div><div class="quotecontent">If all the input is now good (i.e. You verified the RAM now has the correct 60 values, and you can't find issues with the code that reads from it) and you're getting bad output, it's possible you're trying to write to $2007 when rendering has begun. ~2270 cycles before rendering begins after the NMI. ~513 of those are eaten by sprite DMA. Anything from the start of the NMI to the last write to $2006/$2007 should happen in less. <br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;vblank: sta $401E<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; pha<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; tya<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; pha<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; txa<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; pha<br />*********SNIP*************<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; SkipUpdates: sta $401F<br /></div></div> so 2270-513 is quite less than 2000.  Thank you for your example code... it helped me realize that my vblank is overused.  <img src="./images/smilies/icon_eek.gif" alt=":shock:" title="Shocked" />  Need to spend some  time on using it less.  <img src="./images/smilies/icon_question.gif" alt=":?:" title="Question" />  I am going to reread your reply. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />  edit: Ok I'm going to think more about your simple question.  It seems like a hard question right now.  Ok it's supper time! Goodnight and thank you for all of this theory! <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /></div><br /><span style="color: #FFFF00">Kasumi, now my NintendulatorDX Max says 2776</span>... but average says 1630.26.... this still is much better than 2872.  Maybe it would be better to just have draw_us_a_column and draw_us_another_column... both have same code with either (RAMbufferw1even and RAMbufferw1odd) or ( RAMbufferw0even and RAMbufferw0odd).  Then my loops would be quicker by 2 cycles each time through, right?   <img src="./images/smilies/icon_confused.gif" alt=":?" title="Confused" /> <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /><br />edit: Average  is  at 1034... then it keeps rising...  now at 2409!  <img src="./images/smilies/icon_eek.gif" alt=":shock:" title="Shocked" /><br />edit2: it always keeps rising.. now at 2626 max is still 2776. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /><span style="font-size: 200%; line-height: normal">last edit: Average starts out at like 609 when my game comes alive!!</span>  <img src="./images/smilies/icon_eek.gif" alt=":shock:" title="Shocked" />  <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" />  That's with no changes code is exactly the same as above.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Kasumi</b> [ Tue Dec 03, 2013 5:54 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: 8x16 and whatever else unreg wants to know</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />609 is probably when you are only updating sprites. Anything else is when you're updating tiles+sprites, which yeah, would result in an average in between. And if you never move so that new tiles scroll, the average would keep getting lower because no frames with tile updates are happening. And vice versa.<br /><br />Focus only on max, which is still way too high. It's over the limit and you haven't even added attribute stuff. Benchmark each part of your NMI. <br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">sta $401E<br />jsr draw_us_a_column<br />sta $401F<br /></div><br />How many cycles is that taking? If you're doing it twice, how much does each take? That's a way you can find out what to optimize. Maybe your loops are fine, but the next routine that's run inside draw_us_a_column is really slow or something. Benchmark stuff to find out what's eating all your cycles. <br /><br />And remember, you can prepare everything outside of the vblank. You can do what next does (prepare columnhi and columnlo) outside of vblank, store it in RAM guaranteed to not be used by anything else, then have the NMI read the decision rather than have the NMI MAKE the decision. Anytime you can avoid your NMI making a decision (before screen updates are finished at least), you should do it. <br /><br />Things your NMI <em>needs</em> to do:<br />Store registers A, X and Y so your program doesn't break upon return.<br />Decide whether or not the tile buffers are READY to update, so it can skip them if not.<br />Any writes to $2006 or $2007.<br />Sprite DMA.<br />Scroll Writes. (Well... sorta)<br />Restore registers A, X, and Y.<br /><br />Anything not in the above list, including the preparation of said buffers can probably be moved out.<br /><br />Here's a thought: Instead of having your buffers contain JUST the tiles, why not have them contain the address too? So now they're 32 bytes instead of 30. And you do this above the loop:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">0C6BE BC C9 DD&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;ldy bufferoffsettable, x ;(Gets a value of multiple of 32-1 rather than 30-1.)<br />lda RAMbufferW, y<br />sta $2006<br />dey<br />lda RAMbufferW,y<br />sta $2006<br />dey<br />0C6C1 A2 1D&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ldx #29<br />0C6C3 B9 A8 05&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;- lda RAMbufferW, y<br />0C6C6 8D 07 20&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;sta $2007<br /></div><br />Then you have no need for columnhi or columnlo and next doesn't need to be run in the NMI. (You still need to prepare the addresses with the buffer OUTSIDE the NMI, of course.)<br /><br />One other really tiny thing that won't save you a lot, but is worth seeing. <br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">jsr update_sprite<br /></div><br />This adds 12 cycles and 3 bytes to your NMI, as opposed to just putting sprite update stuff directly in.<br /><br />Like so:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp;ldy #$00&nbsp; &nbsp;<br />&nbsp; &nbsp;sty $2003<br /><br />&nbsp; &nbsp;lda #;Whatever page you're using for sprite updates<br />&nbsp; &nbsp;sta $4014<br /></div><br />I understand it's sometimes nice to have a 1 line thing rather than more, but it costs you time and space if the subroutine is called from just that one place. If you really like the 1 line thing, you can still do that by making update_sprite or anything else like it a macro.<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Maybe it would be better to just have draw_us_a_column and draw_us_another_column... <br />...<br />Then my loops would be quicker by 2 cycles each time through, right? <img src="./images/smilies/icon_confused.gif" alt=":?" title="Confused" /> <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /></div><br />Really there's no shame in doubling up code sometimes. And yes, you'd save 2 cycles per each loop, but be careful always! Sometimes the cycles you save will be overcome by the additional setup you need to do. (Probably not in this case, but think about it.)<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp;lda RAMbufferW, y<br />0C6C6 8D 07 20&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;sta $2007<br />0C6C9 88&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;dey<br />0C6CA CA&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;dex<br />0C6CB 10 F6&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; bpl -</div><br />This is 10 bytes. If you had one of these loops for each of the each buffers, it's not a huge hit. And like you said, you wouldn't need both dex and dey (because both would always be the same value between 0 and 29), so each would only really be 9 bytes. (A small bit more logic at the beginning to select which piece of the quadrupled up code you want, though.)<br /><br />I quadrupled a larger routine (42 bytes, so 168...) for the sole reason I save a compare at the end of the loops. Didn't think twice about it. That said, I could probably use a pointer and come out VERY ahead on the current 168 bytes, and only slightly behind on cycles. <br /><br />Anyway, what to do in optimization is a choice for you. I focus on speed at the expense of size 9 times out of 10. Now I'm out of space in my ROM and have to dial things back. <img src="./images/smilies/icon_lol.gif" alt=":lol:" title="Laughing" />  Sometimes fortune smiles on you and you find a way to make something both smaller and faster, but generally when you're making a thing faster, you're making it bigger. When you're making it smaller, you're making it slower.<br /><br />See unrolled loops vs rolled loops, quadrupled code vs not, huge tables vs loops. You can find a middle ground most of the time, with semi unrolled loops, doubled up code with some extra stuff to setup each version, smaller tables + loops that don't run as many times...<br /><br />Your NMI routine doesn't necessarily need to be AS FAST AS POSSIBLE, but right now it's not fast enough. And even the 60 or so cycles you'd save by doubling up the code doesn't get you anywhere near where you need to be. And I have no idea what's taking up all the time, so find out!

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>unregistered</b> [ Tue Dec 03, 2013 6:53 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: 8x16 and whatever else unreg wants to know</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Kasumi wrote:</div><div class="quotecontent">609 is probably when you are only updating sprites. Anything else is when you're updating tiles+sprites, which yeah, would result in an average in between. And if you never move so that new tiles scroll, the average would keep getting lower because no frames with tile updates are happening. And vice versa.</div>I've only read this so far and I want to say that 609 is after my game comes alive... after 2 16-bit wide columns are drawn my screen said Avg 609.  That's very impressive!!! Thank you so much Kasumi and some others... 3gengames, tokumaru, tepples, thefox, and qbradq!! <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" />  And... ...well secondly, after coming alive, my game's average grows grows an d grows.  That's all it does... there isn't any tiles scrolling... I'm just standing there after 2 16-bit wide columns are drawn and it grows! Up up up up up up up and up. It almost got higher than my new lower around 2776 Max... but I ended it. Ok that's all I can say now I'm going to be viewing Naruto Shippuden.  Bye. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /><br />edit: It's Wednesday afternoon now.  Ok I'm going to find out what is taking up all this time; thank you, Kasumi, you bless me with all this knowledge! <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" />   There's past words that I'm going to try too. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>unregistered</b> [ Wed Dec 04, 2013 4:46 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: 8x16 and whatever else unreg wants to know</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Kasumi wrote:</div><div class="quotecontent">One other really tiny thing that won't save you a lot, but is worth seeing. <br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">jsr update_sprite<br /></div><br />This adds 12 cycles and 3 bytes to your NMI, as opposed to just putting sprite update stuff directly in.<br /><br />Like so:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp;ldy #$00&nbsp; &nbsp;<br />&nbsp; &nbsp;sty $2003<br /><br />&nbsp; &nbsp;lda #;Whatever page you're using for sprite updates<br />&nbsp; &nbsp;sta $4014<br /></div><br />I understand it's sometimes nice to have a 1 line thing rather than more, but it costs you time and space if the subroutine is called from just that one place. If you really like the 1 line thing, you can still do that by making update_sprite or anything else like it a macro.</div> <br />I'm trying making update_sprite a macro... <br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">.MACRO update_sprite<br />&nbsp; &nbsp;&nbsp; &nbsp;lda #&gt;sprite<br />&nbsp; &nbsp; &nbsp; &nbsp; sta $4014 ;OAM_DMA register ; Jam sprite page ($200-$2FF) into SPR-RAM<br /><br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ;takes 513 cycles.<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; <br />&nbsp; &nbsp; &nbsp; &nbsp;.ENDM<br /></div> but it says &quot;Label already defined.&quot;  I guess the code thinks  my other &quot;update_sprite&quot; is a label instead of recognizing it's a macro?     <img src="./images/smilies/icon_confused.gif" alt=":?" title="Confused" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Kasumi</b> [ Wed Dec 04, 2013 4:52 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: 8x16 and whatever else unreg wants to know</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">unregistered wrote:</div><div class="quotecontent"> but it says &quot;Label already defined.&quot;  I guess the code thinks  my other &quot;update_sprite&quot; is a label instead of recognizing it's a macro?</div><br />Sounds right. You can't have both a macro called update_sprite and a label called update_sprite. Just get rid of the version with the label, you don't need it when you have the macro.<br /><br />Got a text editor that can find all instances of a thing in a directory? Search for it if it's not where you think.<br /><br />Edit: Or wait, how are you calling the macro? Not sure how asm6 works, but you need to have space before it or it will think it's a label.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">update_sprite;Is different than<br />&nbsp; &nbsp;update_sprite;<br />;at least in nesasm. <br /></div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>unregistered</b> [ Wed Dec 04, 2013 5:03 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: 8x16 and whatever else unreg wants to know</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Kasumi wrote:</div><div class="quotecontent">Sounds right. You can't have both a macro called update_sprite and a label called update_sprite. Just get rid of the version with the label, you don't need it when you have the macro.<br /><br />Got a text editor that can find all instances of a thing in a directory? Search for it if it's not where you think.</div><br /><br />but it's my method call...<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">MACRO / ENDM<br /><br />&nbsp; &nbsp; &nbsp; &nbsp; MACRO name args...<br /><br />&nbsp; &nbsp; &nbsp; &nbsp; Define a macro.&nbsp; Macro arguments are comma separated.<br />&nbsp; &nbsp; &nbsp; &nbsp; Labels defined inside macros are local (visible only to that macro).<br /><br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; MACRO setAXY x,y,z<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; LDA #x<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; LDX #y<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; LDY #z<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ENDM<br /><br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; setAXY $12,$34,$56<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ;expands to LDA #$12<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;LDX #$34<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;LDY #$56</div><br />That's what README.TXT says.  My macro doesn't have any arguments... so when I call it it is just <div class="codetitle"><b>Code:</b></div><div class="codecontent">update_sprite</div><br /><br />edit: there are two spaces infront of update_sprite... I guess asm6 has a problem with an argument-less macro call... I bet tokumaru would know.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Kasumi</b> [ Wed Dec 04, 2013 5:17 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: 8x16 and whatever else unreg wants to know</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Define your macro before you use it.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp;<br /><br />macro mario<br />&nbsp; &nbsp;lda #$00<br />endm<br /><br />mario<br /></div><br />works<br />and<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">mario<br /><br />macro mario<br />&nbsp; &nbsp;lda #$00<br />endm<br /></div><br />doesn't.<br /><br />If it ain't that, I have NO idea.<br /><br />edit: Anyway, typically when I do things like this (put a bunch of code into a macro instead for one line convenience), I put the hide-code macros in a different file and include that file at the top of the asm file that uses it.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>unregistered</b> [ Wed Dec 04, 2013 5:38 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: 8x16 and whatever else unreg wants to know</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Kasumi wrote:</div><div class="quotecontent">Define your macro before you use it.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp;<br /><br />macro mario<br />&nbsp; &nbsp;lda #$00<br />endm<br /><br />mario<br /></div><br />works<br />and<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">mario<br /><br />macro mario<br />&nbsp; &nbsp;lda #$00<br />endm<br /></div><br />doesn't.<br /><br />If it ain't that, I have NO idea.</div><br />That was it! <strong>Thank you Kasumi!</strong> <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /><br /><br />edit: <strong>Your edit is a great idea! </strong>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>unregistered</b> [ Fri Dec 06, 2013 11:17 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: 8x16 and whatever else unreg wants to know</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Kasumi wrote:</div><div class="quotecontent">Focus only on max, which is still way too high. It's over the limit and you haven't even added attribute stuff. Benchmark each part of your NMI. <br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">sta $401E<br />jsr draw_us_a_column<br />sta $401F<br /></div><br />How many cycles is that taking? If you're doing it twice, how much does each take?</div>The top one's cycles Max is 1051.  And the lower one's cycles Max is 1068.  Is that too much?I guess it is.  <img src="./images/smilies/icon_sad.gif" alt=":(" title="Sad" />  I'll continue benchmarking each part of draw_us_a_column after lunch.<br /><br />edit: ok... each of these loops runs 30 times<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp;sta $401e<br />&nbsp;- lda RAMbufferW, y<br />&nbsp; &nbsp;sta PPUDATA7<br />&nbsp; &nbsp;dey<br />&nbsp; &nbsp;dex<br />&nbsp; &nbsp;bpl -<br />sta $401f</div>  The upper loop runs 449 cycles and the lower loop runs 479 cycles cause I guess it crosses a page boundary.   The code in between runs 29 cycles once.  So thats a Max of 957 cycles for  the two loops and the inbetween.  That's close to 1051 and 1068...  <img src="./images/smilies/icon_confused.gif" alt=":?" title="Confused" />

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>76</strong> of <strong>83</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>