<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Updating columns on the name table during VBlank</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Updating columns on the name table during VBlank</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=10&amp;t=417">http://forums.nesdev.com/viewtopic.php?f=10&amp;t=417</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>mbrenaman</b> [ Tue Jul 19, 2005 8:19 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Updating columns on the name table during VBlank</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Hi again. I'm back with more ignorance.
<br />
<br />I'm attempting to make a simple horizontal side scroller. I thought I could update the name table one column at a time as the screen scrolled (inside the NMI). But alas, my column update subroutine is to slow and goes over the time limit.
<br />
<br />So my question is, in a side scroller, should I be updating the name table in a different manner (not in the NMI) or is my code really to much and needs to be fixed.
<br />
<br />Here's the subrountine I'm using to update the name table. This by itself takes to long so I won't post the code that updates the attribute table for a column.
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">draw_map_column subroutine&nbsp; &nbsp;;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;; curr_name_table_hi/lo should point to the top of the<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;; the column in the name table<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;; register X should be set to the name table column to draw<br /><br />&nbsp; &nbsp;; Set VRAM address to current name table page<br /><br />&nbsp; &nbsp;lda curr_name_table_hi<br />&nbsp; &nbsp;sta $2006<br />&nbsp; &nbsp;lda curr_name_table_lo<br />&nbsp; &nbsp;sta $2006<br /><br />&nbsp; &nbsp;; Set VRAM address count to 32<br /><br />&nbsp; &nbsp; &nbsp; &nbsp; lda ppu_reg_0 <br />&nbsp; &nbsp;ora #%00000100<br />&nbsp; &nbsp; &nbsp; &nbsp; sta $2000<br /><br />&nbsp; &nbsp;; Begin pattern table drawing loop &#40;y = y counter&#41;<br />&nbsp; &nbsp;<br />&nbsp; &nbsp;lda #$00&nbsp; &nbsp;<br />&nbsp; &nbsp;sta y<br /><br />.draw_column_loop<br /><br />&nbsp; &nbsp;; Get meta-tile for current screen spot and use<br />&nbsp; &nbsp;; as offset to tile look up table &#40;meta_tile_patterns&#41;<br /><br />&nbsp; &nbsp;; Find tile on map_buffer<br /><br />&nbsp; &nbsp;and #%11111110&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;; y/2 * 16<br />&nbsp; &nbsp;asl&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;; <br />&nbsp; &nbsp;asl&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;; <br />&nbsp; &nbsp;asl&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;;<br />&nbsp; &nbsp;sta main_temp_lo&nbsp; &nbsp;&nbsp; &nbsp;; Save<br />&nbsp; &nbsp;txa&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;; Find x/2<br />&nbsp; &nbsp;lsr&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;;<br />&nbsp; &nbsp;clc&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;;<br />&nbsp; &nbsp;adc main_temp_lo&nbsp; &nbsp;&nbsp; &nbsp;; Add y/2 * 16 + x/2<br />&nbsp; &nbsp;tay&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;; Transfer to index Y to use as offset to map_buffer<br />&nbsp; &nbsp;lda &#40;map_buffer,y&#41;&nbsp; &nbsp;&nbsp; &nbsp;; Load a with tile at current meta-tile<br />&nbsp; &nbsp;asl&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;; Multiply the tile number by four<br />&nbsp; &nbsp;asl&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;; &#40;four pattern tiles per meta-tile&#41;<br />&nbsp; &nbsp;sta main_temp_lo&nbsp; &nbsp;&nbsp; &nbsp;; Store offset<br />&nbsp; &nbsp;txa&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;; Add x%2 to offset<br />&nbsp; &nbsp;and #%00000001&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;;<br />&nbsp; &nbsp;clc&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;;<br />&nbsp; &nbsp;adc main_temp_lo&nbsp; &nbsp;&nbsp; &nbsp;;<br />&nbsp; &nbsp;sta main_temp_lo&nbsp; &nbsp;&nbsp; &nbsp;;<br />&nbsp; &nbsp;lda y&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;; Add y%2 * 2&nbsp; &nbsp;<br />&nbsp; &nbsp;and #%00000001&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;;<br />&nbsp; &nbsp;asl&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;;<br />&nbsp; &nbsp;clc&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;;<br />&nbsp; &nbsp;adc main_temp_lo&nbsp; &nbsp;&nbsp; &nbsp;;<br />&nbsp; &nbsp;tay&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;; Transfer meta_tile_patterns offset to y index<br />&nbsp; &nbsp;lda &#40;meta_tile_patterns,y&#41;&nbsp; &nbsp;; Load pattern tile for current meta-tile<br />&nbsp; &nbsp;sta $2007&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;; Store on screen<br /><br />&nbsp; &nbsp;inc y&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;; Increment y counter<br />&nbsp; &nbsp;lda y<br />&nbsp; &nbsp;cmp #30 &nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;; Test if whole name table column has been drawn<br />&nbsp; &nbsp;bne .draw_column_loop&nbsp; &nbsp;&nbsp; &nbsp;; If not, continue...<br /><br />&nbsp; &nbsp;rts<br /><br /></div>
<br />
<br />map_buffer contains the actual meta-tile data.
<br />
<br />meta_tile_patterns is a pointer to a look up table for each meta-tile's pattern numbers. Each tile has four byte for the Upper Left, Upper Right, Lower Left, Lower Right parts of it (the meta-tiles are 16x16 pixels).
<br />
<br />There might be some typos in the comments but the code is tested and works.
<br />
<br />So.... how bad does it look?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Quietust</b> [ Tue Jul 19, 2005 8:21 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Here's how you fix it: do all of the 'calculations' during the frame and store the nametable updates in a buffer in system RAM. When VBLANK finally comes along, just copy that buffer into VRAM with a reasonably tight loop.
<br />
<br />Also, I couldn't help but notice you're using a few nonexistant instructions; namely, "lda (meta_tile_patterns,y)" is not a valid instruction for the 6502 - the only valid indirect modes are "lda (meta_tile_patterns,x)" and "lda (meta_tile_patterns),y", as well as the plain indexed mode "lda meta_tile_patterns,y".

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>mbrenaman</b> [ Tue Jul 19, 2005 8:26 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />That was fast.
<br />
<br />This buffer, I can't think of a way to buffer it other then allocating an entire 960 bytes in RAM. Is there a less memory intensive way to do it? Is there another way I can keep track of the changes?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>mbrenaman</b> [ Tue Jul 19, 2005 8:30 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />About those instructions. I thought so but, they compile with DASM and run in Nesten and Nintendulator (thanks for making that by the way).When I tried using x like (lda ($F000,x)), it told me it had to be a zero page address (the $F000).
<br />
<br />EDIT:
<br />Oh, wait. So that means DASM is spitting out regular indexed lol. I wasn't supposed to use ()'s.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Quietust</b> [ Tue Jul 19, 2005 8:31 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Your "VRAM update buffer" only needs to be 32 bytes or so - 30 bytes for the new nametable data, and 2 bytes to specify the address where it starts. If you want to allow updating more than one column per VBLANK, simply allocate a few more buffers, though you'll only realistically be able to update two, <em>maybe</em> three columns in a single frame. There's also the attribute table to consider.
<br />
<br />Regarding those instructions, it sounds like your assembler is simply ignoring the parentheses and treating them as "lda addr,y" - if you intend to use indirection (i.e. specifying a pointer to the beginning of a buffer and then reading through it), you MUST store the pointer in zero page and you MUST use the proper index register (X for pre-indexed, Y for post-indexed).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>mbrenaman</b> [ Tue Jul 19, 2005 8:36 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I get it. I'll get to work on it later. Thanks for clearing all of that up. 
<br />
<br />Thanks again.
<br />
<br />EDIT: Yea. I gathered that much hehe. Thanks  <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />
<br />EDIT 2: I wanted regular indexed BTW. So out with the ()'s

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Tue Jul 19, 2005 11:41 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Realistically, you'll also need a 64-byte buffer for attribute table changes.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>mbrenaman</b> [ Thu Jul 21, 2005 5:03 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I just saw your post. Using a 64 byte buffer for the attribute table is what I ended up doing (to keep track of the old bytes without having to touch $2007). Thank you though <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />. Now I've got my level compressing (small program in Java turns ASCII &gt; RLE compressed bin) and decompressing working. I'm compressing each screen's worth of at a time. Everything's working great. Anyways...
<br />
<br />My reason for posting again was to ask. Would posting my simple little horizontal scroll "engine/demo" (code and some txt explaining it) be beneficial for others. I've documented everything I've done on paper for my own purposes. I figured I could take alittle time to convert it to electronic form. However being new to both 6502 ASM (not my first ASM programming) and new to the NES, I would need someone give the text and source a once over. Then I'd need someone to test the demo on the real hardware just to make sure it works.
<br />
<br />So should I just keep this stuff to myself? Is there already material covering the basics of getting a little sidescroller going out there that I missed? I went through alot stuff to figure what I knew before I made the first post in this thread (thanks for keeping the old board up, very useful). I thought it would just be helpful....
<br />
<br />Let me know what you think.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Memblers</b> [ Thu Jul 21, 2005 2:02 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I think it could be beneficial.  For you, if someone spots some optimizations or pitfalls maybe, and for everyone else if you don't mind people using some of your code.
<br />
<br />I once posted a metatile decoding routine but it was total crap.  I wrote a better one since then, but it doesn't handle attributes.  And since the map data was always written as hex bytes, it was never very friendly to use, heheh.  If I ever do write a map editor, I'll probably make it run on NES just because of the familiarity, heh.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>mbrenaman</b> [ Fri Jul 22, 2005 4:16 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Yea, I'll get my stuff together. As far as a generic Java map level with a GUI. The only reason I haven't thrown one together is pure laziness... But when my needs out way my laziness and I finally make something better then an ASCII map reader. I'll try to make it as general as possible. Beacuse, well, I haven't found a level editor really geared for NES development. Maybe I'm looking in the wrong places, who knows....

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>