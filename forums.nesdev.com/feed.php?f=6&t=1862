<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=6&amp;t=1862" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2006-08-26T12:39:46-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=6&amp;t=1862</id>
<entry>
<author><name><![CDATA[Drag]]></name></author>
<updated>2006-08-26T12:39:46-07:00</updated>
<published>2006-08-26T12:39:46-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1862&amp;p=16593#p16593</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1862&amp;p=16593#p16593"/>
<title type="html"><![CDATA[Suggetion : Universal console music format]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1862&amp;p=16593#p16593"><![CDATA[
Oh, I thought you were making a standalone music player, instead of a music player for a game. My mistake.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=21">Drag</a> — Sat Aug 26, 2006 12:39 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2006-08-18T12:27:25-07:00</updated>
<published>2006-08-18T12:27:25-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1862&amp;p=16343#p16343</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1862&amp;p=16343#p16343"/>
<title type="html"><![CDATA[Suggetion : Universal console music format]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1862&amp;p=16343#p16343"><![CDATA[
<div class="quotetitle">Drag wrote:</div><div class="quotecontent"><br />Hey Tepples, if you want fast forwarding, there's an easy way to do it. You just run your playback code in a loop until you reach the position of the song you want. So it's like fastforwarding a cassette tape; you play your song at turbo speed (and muted sound output) until the desired position is reached.<br /></div><br />Would the player tolerate the game freezing until the desired position is reached?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Fri Aug 18, 2006 12:27 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Drag]]></name></author>
<updated>2006-08-18T12:23:45-07:00</updated>
<published>2006-08-18T12:23:45-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1862&amp;p=16342#p16342</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1862&amp;p=16342#p16342"/>
<title type="html"><![CDATA[Suggetion : Universal console music format]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1862&amp;p=16342#p16342"><![CDATA[
Hey Tepples, if you want fast forwarding, there's an easy way to do it. You just run your playback code in a loop until you reach the position of the song you want. So it's like fastforwarding a cassette tape; you play your song at turbo speed (and muted sound output) until the desired position is reached. One way to keep track of your position is by counting how many code iterations into the song you are. So it's like saying "from the beginning, play at super speed until you get 2000 code iterations into the song, and then play normally."<br /><br />Fastforwarding during a song's easy, but you'll need a slider or something. I play the song until the slider got to 1440, and I wanted to skip the huge bass solo, so I moved the slider to 3000. The song's 1440 iterations in, so run the playback code in a loop 1560 times to get to 3000, then resume playing normally.<br /><br />Rewinding's a little less convenient, but essentially the same thing. If you want to go from 3000 back to 1440, you restart the song from the beginning, and then run the code in a loop until you get 1440 iterations into the song, and then start playing normally.<br /><br />If you have a section of the song that you want to repeat a bunch of times (like a drum loop), just do what Sonic The Hedgehog does, and include a command which says "jump to [position], x times, and then skip over this command"<br /><br />[drumloop A]<br />BD<br />HH<br />SD<br />HH<br />jump to [drumloop A], 2 times.<br />(Fill-in goes here)<br />jump to [drumloop A].<br /><br />This would play that first part 3 times (once initially, and then it'll jump back there twice, and then it'll skip over the command onto the fill-in, and then it goes back to the beginning where it all happens again)<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=21">Drag</a> — Fri Aug 18, 2006 12:23 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2006-08-10T14:29:16-07:00</updated>
<published>2006-08-10T14:29:16-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1862&amp;p=16124#p16124</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1862&amp;p=16124#p16124"/>
<title type="html"><![CDATA[Suggetion : Universal console music format]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1862&amp;p=16124#p16124"><![CDATA[
<div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />I don't see how this structure is any different from NED's order/pattern structure, except that the pattern on each channel may start at any time.<br /></div><br />This don't FORCE you to use patterns, and you can use patterns at any time on any channel. Typically you'd be using patterns only for repeated data, but never for data that is not repeated more than once in the channel's main loop.<br />This is just usefull for data that repeats arround other data.<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />The NES has 2 KB of RAM. How much state did you plan on using to save the state of a channel?<br /></div><br />Basically a word pointer pointing what the channel is playing, and a counter to cound the number of frame/events until the next event that has to be taken into account.<br />There should be a lot more variable for pitch slide, vibrato, etc...<br />About one page of 256 bytes should be taken overall, I think.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Thu Aug 10, 2006 2:29 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2006-08-10T14:21:46-07:00</updated>
<published>2006-08-10T14:21:46-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1862&amp;p=16123#p16123</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1862&amp;p=16123#p16123"/>
<title type="html"><![CDATA[Suggetion : Universal console music format]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1862&amp;p=16123#p16123"><![CDATA[
<div class="quotetitle">Bregalad wrote:</div><div class="quotecontent"><br />I'd like all music and sound effect to directly refer to a channel list.<br />Each channel itself is just a pointer to a music track, that refer to notes, rests, and presets (macro) changes. It'd also be able to repeat data or to jump to another chunk of data to be returned, just like JSR or CALL does with code, in order to save space and avoid the author to repeat its pattern a high number of time.<br /></div><br />I don't see how this structure is any different from NED's order/pattern structure, except that the pattern on each channel may start at any time.<br /><br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Each music track is totally independant from eachother, and is totally independant of if it is pointed by a music of a SFX.<br />The only difference is that SFX is played "over" music, that more than one single SFX can be played at the same time on differnent channels, and that music can be paused and unpaused while anotehr is played.<br /></div><br />The NES has 2 KB of RAM. How much state did you plan on using to save the state of a channel?<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Mario's 1UP would be one setup of duty cylce and volume, then the series of note : G A &lt; E C D G, then one end marker.<br /></div><br />That's what I meant too: a jingle, or pattern.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />I'm unsure if macros should be shared for the whole game to all music and SFX, or if macros should be proper to each song. I think macros shared for the whole game should be OK, but there should be a large number of them available.<br /></div><br />More than 256?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Thu Aug 10, 2006 2:21 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2006-08-10T12:02:22-07:00</updated>
<published>2006-08-10T12:02:22-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1862&amp;p=16116#p16116</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1862&amp;p=16116#p16116"/>
<title type="html"><![CDATA[Suggetion : Universal console music format]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1862&amp;p=16116#p16116"><![CDATA[
Sorry, but I think you didn't really take the direction I meaned. You're going with the "tracker" structure, but I was meaning the MML structure.<br /><br />I'm not planning to organize my NES data under instruments, because I want each different setup available be set up separatly. I think you mean an instument say the volume envloppe, the duty cycle, etc.. But I'd like to have all of theese set up separately, to allow more freedom to the user. I'm planning to use macros pretty much just like the current version of MML does (but in an improved fashion).<br />Of course this will restult in a bit of space wasted at the begining of a song, but this give more freedom. Instuments will be there only for sound cards with samples (SNES, GBA, etc..) to refer to wich sample is used for playback.<br /><br />Also, I want all music and sound effects be stored under the exact same format, regardless of the channel's waveform or the fact that it is a music or a sound effect.<br />I'd like all music and sound effect to directly refer to a channel list.<br />Each channel itself is just a pointer to a music track, that refer to notes, rests, and presets (macro) changes. It'd also be able to repeat data or to jump to another chunk of data to be returned, just like JSR or CALL does with code, in order to save space and avoid the author to repeat its pattern a high number of time. It'd also be able to loop, of coure, or stop itself.<br />Each music track is totally independant from eachother, and is totally independant of if it is pointed by a music of a SFX.<br />The only difference is that SFX is played "over" music, that more than one single SFX can be played at the same time on differnent channels, and that music can be paused and unpaused while anotehr is played.<br /><br />In the case of the SMB's SFX you mentionned, mario jumping would be a SFX with one single channel, played on a Square channel, setup the duty cycle and volume enveloppe, setup a slide up and one single note, all of this followed by a end marker.<br />Mario's 1UP would be one setup of duty cylce and volume, then the series of note : G A &lt; E C D G, then one end marker.<br /><br />In other world, the channel's track would be just like MML code, but with bytes instead of just letters and symbols.<br /><br />I'm unsure if macros should be shared for the whole game to all music and SFX, or if macros should be proper to each song. I think macros shared for the whole game should be OK, but there should be a large number of them available.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Thu Aug 10, 2006 12:02 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2006-08-10T10:06:05-07:00</updated>
<published>2006-08-10T10:06:05-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1862&amp;p=16115#p16115</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1862&amp;p=16115#p16115"/>
<title type="html"><![CDATA[Suggetion : Universal console music format]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1862&amp;p=16115#p16115"><![CDATA[
It's about time to start writing the structure of the engine:<br /><br />A project is made of songs, jingles, and instruments.<br />A song is a list of song channels.<br />A song channel is list of pattern references with times to play them.<br />A jingle, or pattern, is a list of notes, rests, instrument changes, and effects.<br /><br />Sound effects, depending on their complexity, can be stored as instruments (e.g. Mario jumping) or as jingles (e.g. 1-Up or pause).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Thu Aug 10, 2006 10:06 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2006-08-10T07:57:13-07:00</updated>
<published>2006-08-10T07:57:13-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1862&amp;p=16111#p16111</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1862&amp;p=16111#p16111"/>
<title type="html"><![CDATA[Suggetion : Universal console music format]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1862&amp;p=16111#p16111"><![CDATA[
This is why the sound replay engine should be rewritten even for NES, but be (almost ?) backward compatible with the previous MML format, but having a more optimized format. On the fly, it would be possible to compile a music file for many output, just by changing a few parameters. Actually I think I should modify my current sound engine to support most of MML's features, and ask someone to write a compiler that will output music data readable by my sound engine.<br />BTW I don't think the N106 would be supported any more. I'd stick with normal sound, and MMC5 (because it is just the same as normal sound, and because I'm planning to write Ecological Evolution, my RPG game, using the MMC5 in a while). Nobody will ever write a homebrew game using the N106, and I don't have a signe idea how this mapper's sound works.<br /><br />I just need someone to write the compiler, at first. I may also have a small webpage dedicated to it, but I don't like too much creating web pages, and I have to take news on my current home pages.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Thu Aug 10, 2006 7:57 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Quietust]]></name></author>
<updated>2006-08-09T21:43:00-07:00</updated>
<published>2006-08-09T21:43:00-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1862&amp;p=16093#p16093</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1862&amp;p=16093#p16093"/>
<title type="html"><![CDATA[Suggetion : Universal console music format]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1862&amp;p=16093#p16093"><![CDATA[
<div class="quotetitle">tepples wrote:</div><div class="quotecontent"><br />I can think of a reason: a ROM might contain more than music, or it might contain more than one song, or it might be manufactured with a smaller than maximum (512 KiB PRG for MMC3) capacity for cost saving reasons.<br /></div><br /><br />That's not a valid reason for a song <em>alone</em> almost entirely filling up a ROM, which is most certainly possible with MCK - I have at least one MCK NSF which is 144KB long <strong>for a single 3.5-minute song</strong> (though it does use the Namco106 sound chip, this is still no excuse).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=7">Quietust</a> — Wed Aug 09, 2006 9:43 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2006-08-09T21:17:04-07:00</updated>
<published>2006-08-09T21:17:04-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1862&amp;p=16092#p16092</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1862&amp;p=16092#p16092"/>
<title type="html"><![CDATA[Suggetion : Universal console music format]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1862&amp;p=16092#p16092"><![CDATA[
<div class="quotetitle">Bregalad wrote:</div><div class="quotecontent"><br />By the way, I found this in the bottom of "readme.txt" in the MIDI2MML tool package :<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"> *** New Sound Driver<br /><br /> MCK is okay, but suffers from a number of problems. One of the major<br /> ones is space usage. Based on my cursory knowledge of NES architecture,<br /> I see no reason why a song of any reasonable size should ever exhaust<br /> the capacity of a ROM.<br /></div></div><br />I can think of a reason: a ROM might contain more than music, or it might contain more than one song, or it might be manufactured with a smaller than maximum (512 KiB PRG for MMC3) capacity for cost saving reasons.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Wed Aug 09, 2006 9:17 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2006-08-09T12:25:56-07:00</updated>
<published>2006-08-09T12:25:56-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1862&amp;p=16087#p16087</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1862&amp;p=16087#p16087"/>
<title type="html"><![CDATA[Suggetion : Universal console music format]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1862&amp;p=16087#p16087"><![CDATA[
Well, I didn't understand the whole specs of the Genesis, but if you know that console's APU well enough to add it to the format's possible target, this can only be good.<br /><br />Now to say the trurth I'm confused, I don't know too much what to do next. I've been exepting people to either say "Your idea won't add anything to the homebrew scene and is boring" or "Whoa cool this should be done at any price I'm joining". I did have none of these, so then I don't know too well if this should be continued or not.<br />I think the NES should be the first taget to be studied, and then other can come once NES is completed sucessfully.<br />I need at least to be sure to have someone that can code MML compilers with the command prompt (or better yet, a win32 programm) to compile the file from MML to .nsf and .bin<br />Once I know someone agree to do it, I think I may build a homepage or something about it.<br /><br />By the way, I found this in the bottom of "readme.txt" in the MIDI2MML tool package :<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />*** New Sound Driver<br /><br /> MCK is okay, but suffers from a number of problems. One of the major<br /> ones is space usage. Based on my cursory knowledge of NES architecture,<br /> I see no reason why a song of any reasonable size should ever exhaust<br /> the capacity of a ROM. It would also be nice to support expansion chips<br /> directly. One project would be to rewrite the sound driver so that<br /> MIDIMML has its own back-end. This would also solve many of the above<br /> problems en passant.<br /></div><br />I think I should try to contact the author one the project has gotten some serious form.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Wed Aug 09, 2006 12:25 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[LocalH]]></name></author>
<updated>2006-08-06T13:49:32-07:00</updated>
<published>2006-08-06T13:49:32-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1862&amp;p=16030#p16030</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1862&amp;p=16030#p16030"/>
<title type="html"><![CDATA[Re: Suggetion : Universal console music format]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1862&amp;p=16030#p16030"><![CDATA[
<div class="quotetitle">Bregalad wrote:</div><div class="quotecontent"><br />Then two main category of targets can be made : The ones that use digital sampled audio (SNES, Playstation, Game Boy Advance ...) And the one that doesn't have memory for sampled audio and just use fixed waveforms (NES, Game Boy, Genesis...)<br /></div><br />The Genesis really doesn't have fixed waveforms per se - it uses 4-operator, 6-voice FM synthesis along with an idential PSG to that found in the SMS. The YM2612 can also support software-clocked 8-bit PCM. Earlier games that used samples would dedicate the sample playing to the Z80 and run the FM/PSG from the 68k, but many newer games used the Z80 for all sound output, thus lowering the potenial quality of DAC output. The Z80 has 2KB of RAM at $2000 but it can also access 68k ROM via a 32KB bankswitched area at $8000, so with proper software one could play a sample of almost 4MB in length or less.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=325">LocalH</a> — Sun Aug 06, 2006 1:49 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2006-08-04T13:48:28-07:00</updated>
<published>2006-08-04T13:48:28-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1862&amp;p=15987#p15987</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1862&amp;p=15987#p15987"/>
<title type="html"><![CDATA[Suggetion : Universal console music format]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1862&amp;p=15987#p15987"><![CDATA[
<div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />What reference would we use for "note #0"? We might as well use MIDI note numbers and allow for 10 octaves.<br /></div><br />MIDI allow a 128-notes range, but I was thinking for memory space saving it would be better to use the MML system : Just memorise the note in the 12-scale range, and switch octaves, so that you have the octave wasting memory only when it changes. The music engine I've written yet works like this.<br />"Note 0" would be a C of the octave 0, and the last available note would be a B of octave 7. (so that octave can be coded in 3 bits) This should be largly enough for all aplications.<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />But can the main code query the song to see what measure and beat it's on, so that your intro is synchronized to the music? Look at Mario Kart 64 for an example of what a synced intro looks like, and look at what Snes9x does to the opening of Kirby Super Star to see what lack of this feature does. Heck, look at Dance Dance Revolution and Lumines for examples of using music sync during game play.<br /></div><br />All your ideas are appliced to the main format features, since my goal is to offer as much features as possible. You'd rather say "I'd like the main code to..." insted of saying "will the main code be able to..."<br />Further ideas will be added to the list above, I'd edit my post to keep it refreshed.<br /><br />BTW in the intro Chrono Trigger does play a looped music (Crono's theme), but at the end an alternate music loop plays instead, and the music got an ending instead of looping eternally. On my PAL SNES with a NTSC cartridge, glitches will appear because some channels will switch to the end too early for some reason.<br />This trick is also present in Final Fantasy IX when fighting the very last boss. So the main code should be able to send flags to the sound code, and the other way arround.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />And can the main code scale the music tempo, as seen in Super Mario Bros. 1, 3, and World when time is running out, or as seen in Tetris when the block pile is higher than the next piece window, or as seen in WarioWare after a specific number of microgames have been played?<br /></div><br />I've got that idea playing Final Fantasy V and Chrono Trigger, wich also does scale the main pitch for the music in some scenes. (Final Fantasy V at a point where the hero Bartz does a nightmare when Cid fixes the airship, and the music was more and more stressfull, playing constantly faster and higer, heh that was hella fun)<br /><br />EDIT : I put the list in the first post to make things clearer.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Fri Aug 04, 2006 1:48 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2006-08-04T13:35:45-07:00</updated>
<published>2006-08-04T13:35:45-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1862&amp;p=15984#p15984</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1862&amp;p=15984#p15984"/>
<title type="html"><![CDATA[Suggetion : Universal console music format]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1862&amp;p=15984#p15984"><![CDATA[
<div class="quotetitle">Bregalad wrote:</div><div class="quotecontent"><br />Now that some people seems interested, we have to discuss the abilities of the format. I'd submit the following :<br />[code]<br />- Can play any notes in the 12-tone scale and up to 8 octaves range<br /></div><br />What reference would we use for "note #0"? We might as well use MIDI note numbers and allow for 10 octaves.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />&#91;code&#93;- Can allow the main code to dialog with the sound handling programm to : Start a new song, pause a song and save the sate of a paused song while starting a new one (usefull for RPGs during battles), stop the playback of a song, unpause a paused song while it's old state is restored (usefull AFTER battles for RPGs)&#91;/code&#93;<br /></div><br />Or in games where events cause jingles that take over the entire music space: <em>Super Mario Bros.</em> low time; <em>Super Mario Bros. 2</em> grab mushroom; <em>Sonic the Hedgehog</em> low O2; <em>Goldeneye</em> multiplayer death.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />&#91;code&#93;start playing a SFX, stop playing an SFX, start playing a second SFX (the # of SFX that can be played at the same time depend of the target platform).&#91;/code&#93;<br /></div><br />But can the main code query the song to see what measure and beat it's on, so that your intro is synchronized to the music? Look at <em>Mario Kart 64</em> for an example of what a synced intro looks like, and look at what Snes9x does to the opening of <em>Kirby Super Star</em> to see what lack of this feature does. Heck, look at <em>Dance Dance Revolution</em> and <em>Lumines</em> for examples of using music sync during game play.<br /><br />And can the main code scale the music tempo, as seen in <em>Super Mario Bros.</em> 1, 3, and World when time is running out, or as seen in <em>Tetris</em> when the block pile is higher than the next piece window, or as seen in <em>WarioWare</em> after a specific number of microgames have been played?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Fri Aug 04, 2006 1:35 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2006-08-04T13:49:04-07:00</updated>
<published>2006-08-04T01:23:48-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1862&amp;p=15973#p15973</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1862&amp;p=15973#p15973"/>
<title type="html"><![CDATA[Suggetion : Universal console music format]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1862&amp;p=15973#p15973"><![CDATA[
<div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />So basically, MML with a better data format and replay engine? I'd be interested in that.<br /></div><br />Exactly, and that with a different compiler and replay programm for each platform available.<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Only weird thing with MML is syncing the channels together. You could define alternate start points in the song (pretty much how the looping works), but the person writing the song still has to take some care to syncronize the point for all channels (unlike a tracker, where you just select the pattern and hit the play button).<br /></div><br />The tracker format is quite limitating, even if it seems more confortable. My goal is to reach a format with the less limits as possible, allowing to take full advantage of the target's output.<br />Now that some people seems interested, we have to discuss the abilities of the format.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Fri Aug 04, 2006 1:23 am</p><hr />
]]></content>
</entry>
</feed>