<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - KIL opcodes and such</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">KIL opcodes and such</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=10&amp;t=11513">http://forums.nesdev.com/viewtopic.php?f=10&amp;t=11513</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>3</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>mikaelmoizt</b> [ Fri Aug 08, 2014 12:07 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>KIL opcodes and such</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />This might be one of those questions that just could be answered theoretically, or just handled as &quot;because it is so, dumbass.&quot;<br /><br />But anyways.. *question got more complex as I began writing.. too much coffee*.<br /><br />Since I started NES hacking about one year ago - and learning 6502 assembler - , I quickly found that certain &quot;opcodes&quot; would simply crash the cpu.<br />Yes, the KIL/HLT/DIE whatever you want to call them. Mostly &quot;opcodes&quot; with $*2. Mainly from branching to incorrect location, or forgetting to RTS from somewhere and end up in &lt;wrong place&gt;.. or from some datacollection.. you know how this could happen  <img src="./images/smilies/icon_wink.gif" alt=":wink:" title="Wink" /> <br /><br />The question is, WHY? I can see the reasoning behind stopping CPU by a BRK and having some control over the continued processing, but this just stops and halts until a reset. Was this intended as a forced stop or was it some kind of costcutting measure? I mean, there are a LOT of opcodes that crash the CPU instantly. Why have some potential programming error stop CPU irreversebly? Faulty design? <br /> <br />I watched some youtube movie about reverse engineering the 6502 where, if I remember correctly, this topic was adressed. <br />Still, I wonder why not have the CPU ignore opcodes like those and carry on? By software or hardware trapping buffer of some sort. For game consoles, this must have been a good idea? Maybe Nintendo REALLY trusted the individuals writing games for their console back in the days. A crashed game = unhappy player = the game itself and Nintendo gets bad publicity.<br /><br /><em>Like who cares? It worked, didn´t it?</em>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Fri Aug 08, 2014 12:10 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: KIL opcodes and such</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">mikaelmoizt wrote:</div><div class="quotecontent">was it some kind of costcutting measure?<br /></div> You got it.<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">A crashed game = unhappy player = the game itself and Nintendo gets bad publicity.<br /></div>By the time you're in danger of executing KIL, you're already trying to execute garbage and the game won't be able to recover to something reasonable anyway.<br />KIL might even be preferable to arbitrary execution, especially in games with battery-backed saves.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>43110</b> [ Fri Aug 08, 2014 12:14 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: KIL opcodes and such</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />What happens with all the KIL opcodes is that a flag responsible for ending the instruction never gets reset, or as <a href="http://visual6502.org/wiki/index.php?title=6502_Unsupported_Opcodes" class="postlink">visual6502</a> puts it &quot;KIL will put the T-state counter into an unrecoverable state&quot;. I like to think of them being infinite sized instructions.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Fri Aug 08, 2014 12:20 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: KIL opcodes and such</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Even the 65816 core in the Super NES's S-CPU has one ($DB), though this time it's intentional because it puts the processor into an extreme low-power state.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Fri Aug 08, 2014 12:29 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: KIL opcodes and such</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />There's no point in carrying on from a bad opcode anyway. The chances that the game recovers in a meaningful way are low.<br /><br />But yeah, these aren't really intentionally designed that way. They just didn't implement anything for the bad opcode, and more or less what was already hooked up defined what it would do. This is why a lot of bad opcodes seem to perform combinations of things that valid opcodes do. All they really need to make sure of for bad opcodes is that using them doesn't damage the system. As long as that's taken care of they can let whatever happens happen.<br /><br />Lately I've been filling unused space in my ROM with NOPs, which, by accident, happened to create a NOPslide directly into the initialization code which I was storing at the high end of the bank before the vector table, so execution from an empty error actually results in a &quot;reset&quot;, more or less, tough maybe I should try to stick a diagnostic in there before the init code.<br /><br />Protecting battery-backed saves is a good reason to use the halting instructions, I hadn't thought of that. Though, many carts with this feature had a write protect option built into the mapper.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>koitsu</b> [ Fri Aug 08, 2014 12:59 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: KIL opcodes and such</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">rainwarrior wrote:</div><div class="quotecontent">There's no point in carrying on from a bad opcode anyway. The chances that the game recovers in a meaningful way are low.</div><br />This.  Though I would have rephrased it as: stop using undocumented opcodes.  (How many times do I have to tell people this?  :P  Haha)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>mikaelmoizt</b> [ Fri Aug 08, 2014 1:03 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: KIL opcodes and such</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">lidnariq wrote:</div><div class="quotecontent">By the time you're in danger of executing KIL, you're already trying to execute garbage and the game won't be able to recover to something reasonable anyway.<br />KIL might even be preferable to arbitrary execution, especially in games with battery-backed saves.</div><br /><br />Ah. I see that way of thinking. A loose cannon wrting into save data and such, both by running into undesired places of written code, and into garbage that just happens to do stupid stuff.. And when the stop comes, hopefully not much garbage execution has been done. <br /><br />I thought of the possiblity of (somehow) treating KIL opcodes like BRK or forcing RESET, but it wouldn´t matter much to the player, right?  <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Lately I've been filling unused space in my ROM with NOPs, which, by accident, happened to create a NOPslide directly into the initialization code which I was storing at the high end of the bank before the vector table, so execution from an empty error actually results in a &quot;reset&quot;, more or less, tough maybe I should try to stick a diagnostic in there before the init code.</div><br /><br />Hrm. Yeah.. I know exactly what this means. I was trying to make an expanded SMB ROM hack some months ago and changed a large section with $EA instead of the prewritten $FF all the way to end of ROM. So, RESET it was. <br /><br />Also, before I knew all about the vectors, I put a RTS at $FFFE  &quot;just in case we end up there&quot;.. That went wrong in so many ways..  <img src="./images/smilies/icon_redface.gif" alt=":oops:" title="Embarassed" /><br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Even the 65816 core in the Super NES's S-CPU has one ($DB), though this time it's intentional because it puts the processor into an extreme low-power state.</div><br />Interesting. Does it trigger any flag or give some register change for the debugging purpose?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>mikaelmoizt</b> [ Fri Aug 08, 2014 1:07 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: KIL opcodes and such</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">koitsu wrote:</div><div class="quotecontent"><div class="quotetitle">rainwarrior wrote:</div><div class="quotecontent">There's no point in carrying on from a bad opcode anyway. The chances that the game recovers in a meaningful way are low.</div><br />This.  Though I would have rephrased it as: stop using undocumented opcodes.  (How many times do I have to tell people this?  <img src="./images/smilies/icon_razz.gif" alt=":P" title="Razz" />  Haha)</div><br /><br />LAX  seem to work just fine tho  <img src="./images/smilies/icon_wink.gif" alt=":wink:" title="Wink" /><br /><br />Nah, jk<br /><br />EDIT: cant find hex for it..

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Fri Aug 08, 2014 1:11 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: KIL opcodes and such</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">koitsu wrote:</div><div class="quotecontent">I would have rephrased it as: stop using undocumented opcodes.  (How many times do I have to tell people this?  <img src="./images/smilies/icon_razz.gif" alt=":P" title="Razz" />  Haha)</div><br />Why, when <a href="http://wiki.nesdev.com/w/index.php/Programming_with_unofficial_opcodes" class="postlink">so many of them are so useful</a>?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Fri Aug 08, 2014 5:13 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: KIL opcodes and such</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Undocumented instructions are really useful when you're under tight timing constraints, if they can do the job faster than the equivalent official instructions. They're often used in Atari 2600 homebrew, because on that system you have only 76 cycles per scanline to update playfield, players, missiles and ball. If an undocumented instruction can get you better graphics or more objects in an Atari 2600 game, I think they should be used.<br /><br />Another good example are those amazing 3D polygon demos posted in this forum a while ago. IIRC, undocumented instructions were used to speed up the polygon filling, which is a very repetitive process, meaning that every cycle you can save will add up to a great deal of saved time. The smoothness of those real-time 3D animations is incredible.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Myask</b> [ Fri Aug 08, 2014 7:02 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: KIL opcodes and such</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I found <!-- m --><a class="postlink" href="http://www.pagetable.com/?p=39">http://www.pagetable.com/?p=39</a><!-- m --> most useful in terms of understanding what was going on for KIL/JAM/CIM/HLT.<br /><div class="quotetitle">koitsu wrote:</div><div class="quotecontent">  Though I would have rephrased it as: stop using undocumented opcodes.  (How many times do I have to tell people this?  <img src="./images/smilies/icon_razz.gif" alt=":P" title="Razz" />  Haha)</div>One need not intend to use them for the processor to reach the second byte of your LDX #2. Or for your processor to jump into RAM which happens to have some twos in it. <br /><br />Undocumented codes are also quite useful when you are only allowed to patch three bytes; sometimes you really do need that Branch Never DOP that doesn't muck with registers or status.<br /><br /><div class="quotetitle">rainwarrior wrote:</div><div class="quotecontent">Lately I've been filling unused space in my ROM with NOPs, which, by accident, happened to create a NOPslide directly into the initialization code which I was storing at the high end of the bank before the vector table, so execution from an empty error actually results in a &quot;reset&quot;, more or less, t<span style="font-size: 50%; line-height: normal">h</span>ough maybe I should try to stick a diagnostic in there before the init code.</div>I ran into that on my Hello World <span style="font-size: 50%; line-height: normal">hex</span> implementations. Only NOPs (or anything that just lets you keep on going) means you always get somewhere. I wonder how many people actually use the &quot;signature byte&quot; of a BRK.<div class="quotetitle">mikaelmoizt wrote:</div><div class="quotecontent">LAX<br />EDIT: cant find hex for it..</div><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp; Air #&nbsp; &nbsp;zp&nbsp; z,X a&nbsp; &nbsp;a,X a,Y (,X)(),Y alias |Notes<br />LAX _&nbsp; &nbsp;AB* A7&nbsp; _&nbsp; &nbsp;AF&nbsp; _&nbsp; &nbsp;BF&nbsp; A3&nbsp; B3&nbsp; ANX ATX|LAX z,Y: B7. Load both A/X.*AB somewhat unstable, aka OAL, LXA </div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Omegamatrix</b> [ Sat Aug 09, 2014 11:33 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: KIL opcodes and such</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">Undocumented instructions are really useful when you're under tight timing constraints, if they can do the job faster than the equivalent official instructions. They're often used in Atari 2600 homebrew, because on that system you have only 76 cycles per scanline to update playfield, players, missiles and ball. If an undocumented instruction can get you better graphics or more objects in an Atari 2600 game, I think they should be used.</div><br /><br />Yep, illegal opcodes can be useful. On the 2600 LAX, SBX, DCP, SAX, double, and triple NOP's are often used.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>zzo38</b> [ Sun Aug 10, 2014 1:10 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: KIL opcodes and such</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Stable unofficial opcodes are really useful and I use them a lot; I just use them whenever I find them useful even if there aren't tight timing constraints; I still try to save bytes and cycles in the program. Unstable opcodes should not be used (KIL is one).<br /><br />Here is an example:<div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp;sta &lt;t0<br />&nbsp; &nbsp;ror a<br />&nbsp; &nbsp;arr #$FF<br />&nbsp; &nbsp;bvs predicf</div><br /><br />Using only official instructions, it is like this (and is one cycle longer):<div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp;sta &lt;t0<br />&nbsp; &nbsp;ror a<br />&nbsp; &nbsp;eor &lt;t0<br />&nbsp; &nbsp;bmi predicf</div><br /><br />(The value of the accumulator is not used after that point anyways; the value then used is loaded from the t0 variable.)<br /><br /><div class="quotetitle">rainwarrior wrote:</div><div class="quotecontent">Protecting battery-backed saves is a good reason to use the halting instructions, I hadn't thought of that. Though, many carts with this feature had a write protect option built into the mapper.</div>Is there documentation on battery RAM protection and how all of that works? What kind of hardware protections are possible other than write-protect?<br /><br /><div class="quotetitle">mikaelmoizt wrote:</div><div class="quotecontent">I thought of the possiblity of (somehow) treating KIL opcodes like BRK or forcing RESET, but it wouldn't matter much to the player, right?</div>As far as I am concerned probably an emulator should display an error message in such a case, followed by advancing the PPU to the next frame (without executing any more CPU instructions) and stopping execution (also displaying the debugger if it is enabled and implemented). Hardware implementations should probably just halt the CPU like they already do.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Mon Aug 11, 2014 2:06 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: KIL opcodes and such</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">stop using undocumented opcodes</div><br />I'm glad I'm not alone with this one. Everything that can be done with illegal opcodes can be done with legal ones. (hint : illegal opcodes are doccumented, so it makes no sense to call them &quot;undoccumented&quot;. And yes I know they are &quot;legal&quot; in a law point of view, but at least it makes more sense to call them that)<br /><br />I don't see. They're just like drugs, they're illegal and they're not cool. Anyone who think they're cool because they're illegal is just a rebel teenager and is plain wrong.<br /><br />As for killing the CPU with legal opcode, just turn all interrupts off, and do a :<br />here : jmp here<br /><br />It's equivalent, using normal opcodes.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Mon Aug 11, 2014 5:16 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: KIL opcodes and such</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">Everything that can be done with illegal opcodes can be done with legal ones.</div><br />Mathematically, sure, but speedwise, not always. I certainly avoid illegal/undocumented instructions, but if using them in a tight loop can improve the graphics and/or frame rate, I'll definitely consider using them.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">(hint : illegal opcodes are doccumented, so it makes no sense to call them &quot;undoccumented&quot;.</div><br />They're not officially documented though, right? IMO &quot;illegal&quot; is just as bad as &quot;undocumented&quot;, because there are absolutely no legal implications in using those opcodes. &quot;Unofficial&quot; sounds more appropriate I guess.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I don't see. They're just like drugs, they're illegal and they're not cool.</div><br />The legality of drugs varies from place to place. Alcohol is legal everywhere.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Anyone who think they're cool because they're illegal is just a rebel teenager and is plain wrong.</div><br />In programming it's not (or shouldn't be!) about being cool, but being useful. There's always a price though: when you use illegal/undocumented/unofficial opcodes to noticeably improve your program, you're risking compatibility with clones and such, which might not support said opcodes.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>3</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>