<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - FDS Writing extension for TapeDump</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">FDS Writing extension for TapeDump</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=9909">http://forums.nesdev.com/viewtopic.php?f=2&amp;t=9909</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>3</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>ccovell</b> [ Mon Mar 11, 2013 9:32 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>FDS Writing extension for TapeDump</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Hi, everyone.  The NES programming bug hit me again (or was it a wave of FDS nostalgia that did it?) and so I wanted to find a way to upload .FDS images and save them to disk using my program, TapeDump (<a href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=7978" class="postlink">version 1.0 here</a>).  I was wondering, continuing the &quot;no extra hardware needed&quot; idea, whether KCS audio files could be sent TO the NES, or Famicom, via the microphone, or something.<br /><br />Anyway, I didn't try to get KCS decoding going on the Famicom just yet (anybody has any advice with tape decoding, let me know) because I thought the simpler first step would be to get general (fast) data uploading going on the Famicom with a dedicated cable.  Last summer I in fact did make a special cable for my <a href="http://en.wikipedia.org/wiki/C64_Direct-to-TV" class="postlink">C-64 DTV</a> using the schematic included with <a href="http://picobay.com/dtv_wiki/index.php?title=DTVTrans" class="postlink">DTVTrans</a>, the software that uploads data to the C-64 via the PC's parallel port at a good rate.<br /><br />So here are the initial results of my experiment:<br /><br />Here's how I connected the DTVTrans cable to the Famicom expansion port:<br /><img src="http://www.chrismcovell.com/images/cable-schematics.gif" alt="Image" /><br /><br />I adapted this cable to the Famicom's expansion port, choosing wires that wouldn't conflict with the existing connected joypads, and got the wiring all right and software polling of the data lines working.  Using the DTVTrans software on the PC, I can upload files to the Famicom at about 4.6Kbytes/sec.<br /><br />I then got down to studying how to write to FDS disks, and eventually, using a disk drive that HAS NO COPY-PROTECTION CIRCUITRY, got my software to write full FDS disk images from the PC!  Since my current PC can't run FDSLoader at all, this disk re-writing via parallel port is the next best thing.<br /><br />A quick whipped-together ZIP file: <!-- m --><a class="postlink" href="http://www.chrismcovell.com/data/TapeDump_ParPort_Writer.zip">http://www.chrismcovell.com/data/TapeDu ... Writer.zip</a><!-- m --><br />(my in-progress version skips the usual TapeDump title screen and goes directly to the FDS Writer code)<br /><br />Pic of it writing:<br /><img src="http://www.chrismcovell.com/images/tapedtv3.jpg" alt="Image" /><br /><br />Loading of FDS files straight to the RAM adaptor for soft booting works well too, though some files can't be loaded properly, and several games read the FDS disk themselves right after booting, but it's a good way to load your own software onto the FDS RAM unit for quick testing.<br /><br />Pic of RAM upload:<br /><img src="http://www.chrismcovell.com/images/tapedtv2.jpg" alt="Image" /><br />---<br /><br />Okay, so I'll keep working on this program since it still needs polishing and stuff.  Does anybody have any comments about the cable and connection method?<br /><br />The $4016/$4017 bit assignments are not set in stone for now, but there are some limitations.  I can't use the same $4016/7 bit assignments for the Famicom and the NES, because the NES has a few too many of those bits going to its expansion port, not the joystick port.  And the bits that ARE usable on NES Joy 2 can't be used on the Famicom without having to disconnect the usually hard-wired Joystick 2 on the Famicom.  That's why I chose other available bits on the Fami expansion connector.<br /><br />If anybody makes a cable to try this out on their Famicoms, let me know if it works.  The DTVTrans cable calls for Schottky-barrier diodes but the requirement may not be <em>that</em> strict.  I've included a &quot;PortTest.NES&quot; program for debugging and verifying correct cable operation.  (Remember that, as I discovered to my surprise, lines being sent to the Famicom appear logically <strong>inverted</strong>, because the Fami uses pull-up resistors, or something like that...)<br /><br />Port tester:<br /><img src="http://www.chrismcovell.com/images/tapedtv1.jpg" alt="Image" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Mon Mar 11, 2013 12:21 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: FDS Writing extension for TapeDump</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Back in the day of acoustic couplers for modems, I don't think they got above 300 baud... wikipedia tells me the last one got to 1200 baud, but only with very good seals.<br /><br />The two KCS parsing circuits I've seen (Famicom Keyboard, something from <span style="text-decoration: underline">How to Build Your Own Working Microcomputer</span>) both had a ~hysteretic stage to fix up the derivative-taking nature of audio cassettes. Since the famicom microphone doesn't have any such stage... it's hard to advise without some real-world data as to just how 1200hz+ audio comes in on the microphone's 1 bit ADC.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>ccovell</b> [ Mon Mar 11, 2013 6:57 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: FDS Writing extension for TapeDump</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Here's a program I made up to test the Famicom mic:<br /><br /><!-- m --><a class="postlink" href="http://www.chrismcovell.com/data/Waveform_Check.zip">http://www.chrismcovell.com/data/Waveform_Check.zip</a><!-- m --><br /><br /><img src="http://www.chrismcovell.com/images/fami_mic.jpg" alt="Image" /><br /><br />The microphone, when in the controller's case, is extremely insensitive... put earbud headphones up to the mic hole and it barely registers as a pulse on-screen.<br /><br />So I removed the mic from the controller case and it got much more response on-screen.<br /><br />I also connected a waveform generator directly to the Mic wires and took some measurements:<br /><br />Sensitivity Range (waveform is solid with no noise): 10 Hz -&gt; 15 KHz<br /><br />At high frequencies, it triggers at around 1.25 Volts.<br />At low frequencies, it triggers at 0.125 V.  Max voltage 2.71 V (then the capacitor in the controller starts to lift the DC voltage away from 0V.)<br /><br />Duty Cycle: 7.8% &lt;-&gt; 97.5% at low frequencies<br />49% &lt;-&gt; 55% at high frequencies<br /><br />Maybe someone else can do more accurate measurements.  Anyway, I had fun playing with the Mic input, but I'm not sure if I want to go down the long path to getting FDS rewriting working through 300 baud mic transmission...   <img src="./images/smilies/icon_confused.gif" alt=":?" title="Confused" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Mon Mar 11, 2013 8:36 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: FDS Writing extension for TapeDump</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I've looked in Castle Excellent, which can save games using the Famicom data recorder. Its code for parsing KCS is in the first 255 bytes of the ROM, so it's easy to find.<br /><br />The way it worked is it made a &quot;temporal comparator&quot; to determine whether it's been closer to 746 or 1491 cycles since the last time the input toggled. It should be easy enough to look at the input on the microphone and see if it's suitable for such logic, or if there's too much noise. Or maybe you could even just borrow the code from Castle Excellent for the purposes of testing, dunno.<br /><br />I do suspect that driving the microphone with a sine instead of a square wave is better.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>ccovell</b> [ Mon Mar 11, 2013 8:51 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: FDS Writing extension for TapeDump</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Does Castle Excellent actually use <strong>KCS</strong>?<br /><br />I checked earlier into the data format for Wrecking Crew and it used an incompatible format (borrowed from the SHARP MZ series of computers) for transmitting data, which means decoding/encoding software is esoteric/nonexistent.<br /><br />The same KCS08 program that I use for TapeDump decoding can be used for encoding as well, so the same standard will be preferable.<br /><br />In my tests with the Mic, square waves triggered much better than sine or triangle waves.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Mon Mar 11, 2013 9:16 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: FDS Writing extension for TapeDump</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />It looked like KCS? Definitely 1200/2400 Hz FSK at 1200 baud; marker tone of 5 seconds of 1200 Hz. I suppose it might have been some other very similar FSK.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Mon Mar 11, 2013 9:30 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: FDS Writing extension for TapeDump</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Wikipedia says there's something called KCS and something called CUTS. I can't really tell the difference. KCS, as I understand it, is FSK at 300 baud, 0=1200 Hz, 1=2400 Hz, 110 between bytes. CUTS is pretty much the same except with the option to run at 1200 baud.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>byemu</b> [ Tue Mar 12, 2013 4:21 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: FDS Writing extension for TapeDump</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />can you make a rom dumper use a real famicom via rs232?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>ccovell</b> [ Tue Mar 12, 2013 5:07 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: FDS Writing extension for TapeDump</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Possible, but I'm not the one to do it.  I don't have a working COM port on my computer (and USB solutions have failed me.)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>ccovell</b> [ Fri Mar 22, 2013 11:56 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: FDS Writing extension for TapeDump</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Here's a partial disassembly of Castle Excellent's KCS code.  Yes, it uses KCS, but the bit ordering is backwards in the bytes it sends compared to KCS.<br /><br />KCS:                 0,b0 b1 b2 b3 b4 b5 b6 b7,1,1<br />Castle Excellent: 0,b7 b6 b5 b4 b3 b2 b1 b0,1,1<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">;*****************************<br />;Disassembly of Castle Excellent KCS loader/saver<br />;*****************************<br />; Partial work by Chris Covell<br />;*****************************<br />;<br />;*****************************<br /><br />;*****************************<br />; 8000: Long delay.<br />;*****************************<br />k_Long_Delay:&nbsp; &nbsp;ldx #$91<br />-:&nbsp; &nbsp;&nbsp; &nbsp;dex<br />&nbsp; &nbsp;&nbsp; &nbsp;bne -<br />&nbsp; &nbsp;&nbsp; &nbsp;rts<br /><br />;*****************************<br />; 8006: Short delay.<br />;*****************************<br />k_Short_Delay:&nbsp; &nbsp;ldx #$47<br />-:&nbsp; &nbsp;&nbsp; &nbsp;dex<br />&nbsp; &nbsp;&nbsp; &nbsp;bne -<br />&nbsp; &nbsp;&nbsp; &nbsp;rts<br /><br />;*****************************<br />; 800C: Wait for Audio Level transition<br />;*****************************<br />k_Wait_Transition: ldy #$00&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ;Y will be a &quot;loop&quot; counter<br />-:&nbsp; &nbsp;&nbsp; &nbsp;iny<br />&nbsp; &nbsp;&nbsp; &nbsp;beq +&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;;256 loops = timeout<br />;-----<br />&nbsp; &nbsp;&nbsp; &nbsp;lda $4016&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;;Joystick 1 + strobe<br />&nbsp; &nbsp;&nbsp; &nbsp;and #$02&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ;Get Tape data bit<br />&nbsp; &nbsp;&nbsp; &nbsp;eor $30&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;;Is it different from last read?<br />&nbsp; &nbsp;&nbsp; &nbsp;beq -&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;;If not, keep looping, inc Y<br />&nbsp; &nbsp;&nbsp; &nbsp;eor $30<br />&nbsp; &nbsp;&nbsp; &nbsp;sta $30&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;;$30 will contain Level after transition<br />&nbsp; &nbsp;&nbsp; &nbsp;rts&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; Y will contain # of loops until transition<br />;-----<br />+:&nbsp; &nbsp;&nbsp; &nbsp;dey&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;;Y = FF = 256 reads with no change.<br />&nbsp; &nbsp;&nbsp; &nbsp;rts<br /><br />;*****************************<br />; 8021: Count Audio Level Transitions within 40 loops<br />;*****************************<br />k_Count_Transitions:&nbsp; &nbsp;ldx #$28&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ;Do 40 loops no matter what<br />&nbsp; &nbsp;&nbsp; &nbsp;ldy #$00<br />-:&nbsp; &nbsp;&nbsp; &nbsp;lda $4016&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;;Joystick 1 + strobe<br />&nbsp; &nbsp;&nbsp; &nbsp;and #$02<br />&nbsp; &nbsp;&nbsp; &nbsp;eor $30&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;;Transition?<br />&nbsp; &nbsp;&nbsp; &nbsp;beq +<br />&nbsp; &nbsp;&nbsp; &nbsp;eor $30&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;;Store the change<br />&nbsp; &nbsp;&nbsp; &nbsp;sta $30<br />&nbsp; &nbsp;&nbsp; &nbsp;iny<br />&nbsp; &nbsp;&nbsp; &nbsp;dex<br />&nbsp; &nbsp;&nbsp; &nbsp;bne -<br />&nbsp; &nbsp;&nbsp; &nbsp;rts&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;;Y will contain # of transitions<br />;--------<br />+:&nbsp; &nbsp;&nbsp; &nbsp;lda $30&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ;This just wastes cycles<br />&nbsp; &nbsp;&nbsp; &nbsp;lda $30<br />&nbsp; &nbsp;&nbsp; &nbsp;lda $30<br />&nbsp; &nbsp;&nbsp; &nbsp;dex<br />&nbsp; &nbsp;&nbsp; &nbsp;bne -<br />&nbsp; &nbsp;&nbsp; &nbsp;rts<br /><br />;*****************************<br />; 8041: Send Zero Bit - Single long cycle<br />;*****************************<br />k_Zero_Bit:&nbsp; &nbsp;lda #$00<br />&nbsp; &nbsp;&nbsp; &nbsp;sta $4016&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;;Joystick 1 + strobe<br />&nbsp; &nbsp;&nbsp; &nbsp;jsr k_Long_Delay<br />&nbsp; &nbsp;&nbsp; &nbsp;lda #$01<br />&nbsp; &nbsp;&nbsp; &nbsp;sta $4016&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;;Joystick 1 + strobe<br />&nbsp; &nbsp;&nbsp; &nbsp;jsr k_Long_Delay<br />&nbsp; &nbsp;&nbsp; &nbsp;lda #$00<br />&nbsp; &nbsp;&nbsp; &nbsp;sta $4016&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;;Joystick 1 + strobe<br />&nbsp; &nbsp;&nbsp; &nbsp;rts<br /><br />;*****************************<br />; 8057: Send a bit currently stored in Carry<br />;*****************************<br />k_Send_Bit:&nbsp; &nbsp;bcc k_Zero_Bit<br />;*****************************<br />; 8059: Send a &quot;One&quot; - A Pair of short cycles.<br />;*****************************<br />k_Ones_Bit:&nbsp; &nbsp;lda #$00<br />&nbsp; &nbsp;&nbsp; &nbsp;sta $4016&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;;Joystick 1 + strobe<br />&nbsp; &nbsp;&nbsp; &nbsp;jsr k_Short_Delay<br />&nbsp; &nbsp;&nbsp; &nbsp;lda #$01<br />&nbsp; &nbsp;&nbsp; &nbsp;sta $4016&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;;Joystick 1 + strobe<br />&nbsp; &nbsp;&nbsp; &nbsp;jsr k_Short_Delay<br />&nbsp; &nbsp;&nbsp; &nbsp;lda #$00<br />&nbsp; &nbsp;&nbsp; &nbsp;sta $4016&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;;Joystick 1 + strobe<br />&nbsp; &nbsp;&nbsp; &nbsp;jsr k_Short_Delay<br />&nbsp; &nbsp;&nbsp; &nbsp;lda #$01<br />&nbsp; &nbsp;&nbsp; &nbsp;sta $4016&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;;Joystick 1 + strobe<br />&nbsp; &nbsp;&nbsp; &nbsp;jsr k_Short_Delay<br />&nbsp; &nbsp;&nbsp; &nbsp;lda #$00<br />&nbsp; &nbsp;&nbsp; &nbsp;sta $4016&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;;Joystick 1 + strobe<br />&nbsp; &nbsp;&nbsp; &nbsp;rts<br /><br />;*****************************<br />; 807F: Waits for stable Leader tone<br />;*****************************<br />k_Wait_for_Leader: lda #$04<br />&nbsp; &nbsp;&nbsp; &nbsp;sta $4016&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;;Joystick 1 + strobe<br />&nbsp; &nbsp;&nbsp; &nbsp;ldx #$00<br />&nbsp; &nbsp;&nbsp; &nbsp;stx $30<br />-:&nbsp; &nbsp;&nbsp; &nbsp;jsr k_Wait_Transition&nbsp; &nbsp;;Wait for a transition<br />&nbsp; &nbsp;&nbsp; &nbsp;cpy #$12&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ;And check it's between $12 and $19<br />&nbsp; &nbsp;&nbsp; &nbsp;bcc k_Wait_for_Leader&nbsp; &nbsp;;loops per transition<br />&nbsp; &nbsp;&nbsp; &nbsp;cpy #$1A<br />&nbsp; &nbsp;&nbsp; &nbsp;bcs k_Wait_for_Leader<br />&nbsp; &nbsp;&nbsp; &nbsp;inx<br />&nbsp; &nbsp;&nbsp; &nbsp;bne -&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ;256 transitions<br />&nbsp; &nbsp;&nbsp; &nbsp;rts<br /><br />;*****************************<br />; 8097: Send Leader tone for 7.04 seconds<br />;*****************************<br />k_Send_Leader:&nbsp; &nbsp;lda #$21&nbsp; &nbsp;;#$2100 / 2400Hz * 2<br />&nbsp; &nbsp;&nbsp; &nbsp;sta $2F<br />&nbsp; &nbsp;&nbsp; &nbsp;ldy #$00<br />-:&nbsp; &nbsp;&nbsp; &nbsp;jsr k_Ones_Bit&nbsp; &nbsp;;Send continuous &quot;Ones&quot; for duration<br />&nbsp; &nbsp;&nbsp; &nbsp;dey<br />&nbsp; &nbsp;&nbsp; &nbsp;bne -<br />&nbsp; &nbsp;&nbsp; &nbsp;dec $2F<br />&nbsp; &nbsp;&nbsp; &nbsp;bne -<br />&nbsp; &nbsp;&nbsp; &nbsp;clc<br />&nbsp; &nbsp;&nbsp; &nbsp;rts<br /><br />;*****************************<br />; 80A9: Send a full byte as: 0,b,11<br />; CASTLE EXCELLENT SENDS THE BYTE OPPOSITE TO KCS FORMAT!!<br />;*****************************<br />k_Send_Byte:&nbsp; &nbsp;jsr k_Zero_Bit&nbsp; &nbsp;&nbsp; &nbsp;;a coded &quot;0&quot; is sent first<br />&nbsp; &nbsp;&nbsp; &nbsp;ldy #$08<br />-:&nbsp; &nbsp;&nbsp; &nbsp;asl $17&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;;MSB first!! Backwards from KCS format!<br />&nbsp; &nbsp;&nbsp; &nbsp;jsr k_Send_Bit&nbsp; &nbsp;&nbsp; &nbsp;;Then all 8 bits<br />&nbsp; &nbsp;&nbsp; &nbsp;dey<br />&nbsp; &nbsp;&nbsp; &nbsp;bne -<br />&nbsp; &nbsp;&nbsp; &nbsp;jsr k_Ones_Bit&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ;Then a &quot;1&quot;<br />&nbsp; &nbsp;&nbsp; &nbsp;jmp k_Ones_Bit&nbsp; &nbsp;&nbsp; &nbsp;;Finish with a &quot;1&quot;<br /><br />;*****************************<br />; 80BC: Receive a byte<br />; CASTLE EXCELLENT RECEIVES THE BYTE OPPOSITE TO KCS FORMAT!!<br />;*****************************<br />k_Recv_Byte:&nbsp; &nbsp;lda $4016&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;;Joystick 1 + strobe<br />&nbsp; &nbsp;&nbsp; &nbsp;and #$02<br />&nbsp; &nbsp;&nbsp; &nbsp;beq k_Recv_Byte&nbsp; &nbsp; &nbsp; &nbsp;;Wait for rising edge<br />-:&nbsp; &nbsp;&nbsp; &nbsp;lda $4016&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;;Joystick 1 + strobe<br />&nbsp; &nbsp;&nbsp; &nbsp;and #$02<br />&nbsp; &nbsp;&nbsp; &nbsp;bne -&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp;;Wait for falling edge<br />&nbsp; &nbsp;&nbsp; &nbsp;sta $30&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;;Save zero<br />&nbsp; &nbsp;&nbsp; &nbsp;jsr k_Wait_Transition&nbsp; &nbsp;;Wait 0-&gt;1<br />-:&nbsp; &nbsp;&nbsp; &nbsp;sty $2D&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;;Save timing result<br />&nbsp; &nbsp;&nbsp; &nbsp;jsr k_Wait_Transition&nbsp; &nbsp;;Wait 1-&gt;0 (or 0-&gt;1)<br />&nbsp; &nbsp;&nbsp; &nbsp;tya<br />&nbsp; &nbsp;&nbsp; &nbsp;clc<br />&nbsp; &nbsp;&nbsp; &nbsp;adc $2D&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;;Add both timings together<br />&nbsp; &nbsp;&nbsp; &nbsp;bcs -&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;;If over $FF, read again.<br />&nbsp; &nbsp;&nbsp; &nbsp;cmp #$50&nbsp; &nbsp;&nbsp; &nbsp;;If $50 or less, read again<br />&nbsp; &nbsp;&nbsp; &nbsp;bcc -<br />&nbsp; &nbsp;&nbsp; &nbsp;lda #$08<br />&nbsp; &nbsp;&nbsp; &nbsp;sta $2E&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;;Counter for 8 bits<br />-:&nbsp; &nbsp;&nbsp; &nbsp;jsr k_Count_Transitions ;How many transitions in a span (1/2400th sec?)<br />&nbsp; &nbsp;&nbsp; &nbsp;cpy #$04<br />&nbsp; &nbsp;&nbsp; &nbsp;bcs +&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;;If more than 3 transitions... QUIT!&nbsp; (Bad transmission)<br />&nbsp; &nbsp;&nbsp; &nbsp;cpy #$02&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ;Carry set if &gt;=2, cleared if 0 or 1<br />&nbsp; &nbsp;&nbsp; &nbsp;rol $17&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;;Carry rolled into ZP<br />&nbsp; &nbsp;&nbsp; &nbsp;tya<br />&nbsp; &nbsp;&nbsp; &nbsp;lsr a&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;;If odd number of transitions, even it out<br />&nbsp; &nbsp;&nbsp; &nbsp;bcs ++<br />&nbsp; &nbsp;&nbsp; &nbsp;jsr k_Wait_Transition&nbsp; &nbsp;;Skip 1 pulse<br />++:&nbsp; &nbsp;&nbsp; &nbsp;jsr k_Wait_Transition<br />&nbsp; &nbsp;&nbsp; &nbsp;dec $2E<br />&nbsp; &nbsp;&nbsp; &nbsp;bne -<br />&nbsp; &nbsp;&nbsp; &nbsp;lda $2D<br />&nbsp; &nbsp;&nbsp; &nbsp;clc<br />+:&nbsp; &nbsp;&nbsp; &nbsp;rts<br />;-------------------------------------------------<br /><br />;-------------------------------------------------<br />$80FF: &nbsp; &nbsp;;Reads in Joystick 1 with NMIs off, stores in $20 and A<br />;-------------------------------------------------<br />$810B:&nbsp; &nbsp;;Reads in Joystick 1, stores in $20 and A<br />;-------------------------------------------------<br />$8111:&nbsp; &nbsp;;Read Joystick<br />;-------------------------------------------------<br />$8129:&nbsp; &nbsp;;Reads in Joystick 2 with NMIs off, stores in $20 and A<br />;-------------------------------------------------<br />$8135:&nbsp; &nbsp;;Reads in Joystick 2, stores in $20 and A<br />;-------------------------------------------------<br />$813B:&nbsp; &nbsp;;Read Joystick 2<br />;-------------------------------------------------<br />$8158:&nbsp; &nbsp;;NMIs OFF: clears $2000.7<br />;-------------------------------------------------<br />$815E:&nbsp; &nbsp;;NMIs_on: sets $2000.7<br />;-------------------------------------------------<br />$8164:&nbsp; &nbsp;;Screen_off: clears $2000<br />;-------------------------------------------------<br />$816A:&nbsp; &nbsp;;Wait VBlank start, turn on screen<br />;-------------------------------------------------<br />$8175:&nbsp; &nbsp;;Bankswitch CHR.<br />;-------------------------------------------------<br />Start_KB_or_Tape_Send:&nbsp; &nbsp;;$8180: Starts Xmission to keyboard or tape<br />&nbsp; &nbsp;&nbsp; &nbsp;bit $1F<br />&nbsp; &nbsp;&nbsp; &nbsp;bpl +<br />&nbsp; &nbsp;&nbsp; &nbsp;jmp k_Send_Leader<br />+:&nbsp; &nbsp;&nbsp; &nbsp;jsr Keyb_Next_Row<br />&nbsp; &nbsp;&nbsp; &nbsp;lda #$00<br />&nbsp; &nbsp;&nbsp; &nbsp;sta $17<br />&nbsp; &nbsp;&nbsp; &nbsp;jsr Keyb_Write_Data<br />&nbsp; &nbsp;&nbsp; &nbsp;lda #$AA<br />&nbsp; &nbsp;&nbsp; &nbsp;sta $17<br />&nbsp; &nbsp;&nbsp; &nbsp;jsr Keyb_Write_Data<br />&nbsp; &nbsp;&nbsp; &nbsp;lda #$55<br />&nbsp; &nbsp;&nbsp; &nbsp;sta $17<br />&nbsp; &nbsp;&nbsp; &nbsp;jmp Keyb_Write_Data<br /><br />;-------------------------------------------------<br />Start_KB_or_Tape_Recv:&nbsp; &nbsp;;$819F: Starts Xmission from keyboard or tape<br />&nbsp; &nbsp;&nbsp; &nbsp;bit $1F<br />&nbsp; &nbsp;&nbsp; &nbsp;bpl +<br />&nbsp; &nbsp;&nbsp; &nbsp;jmp k_Wait_for_Leader<br />+: &nbsp; &nbsp;&nbsp; &nbsp;jsr Keyb_Next_Row<br />&nbsp; &nbsp;&nbsp; &nbsp;jsr Keyb_Read_Data<br />&nbsp; &nbsp;&nbsp; &nbsp;jsr Keyb_Read_Data<br />&nbsp; &nbsp;&nbsp; &nbsp;lda $17<br />&nbsp; &nbsp;&nbsp; &nbsp;cmp #$AA<br />&nbsp; &nbsp;&nbsp; &nbsp;bne +<br />&nbsp; &nbsp;&nbsp; &nbsp;jsr Keyb_Read_Data<br />&nbsp; &nbsp;&nbsp; &nbsp;lda $17<br />&nbsp; &nbsp;&nbsp; &nbsp;cmp #$55<br />&nbsp; &nbsp;&nbsp; &nbsp;bne +<br />&nbsp; &nbsp;&nbsp; &nbsp;clc<br />&nbsp; &nbsp;&nbsp; &nbsp;rts<br />+:&nbsp; &nbsp;&nbsp; &nbsp;sec<br />&nbsp; &nbsp;&nbsp; &nbsp;rts<br /><br />;-------------------------------------------------<br />Send_KB_or_Tape: ;$81C2: sends to KB or Tape depending on $1F.8<br />&nbsp; &nbsp;&nbsp; &nbsp;sta $17<br />&nbsp; &nbsp;&nbsp; &nbsp;stx $1A<br />&nbsp; &nbsp;&nbsp; &nbsp;bit $1F<br />&nbsp; &nbsp;&nbsp; &nbsp;bpl +<br />&nbsp; &nbsp;&nbsp; &nbsp;jsr k_Send_Byte<br />&nbsp; &nbsp;&nbsp; &nbsp;jmp ++<br />+:&nbsp; &nbsp;&nbsp; &nbsp;jsr Keyb_Write_Data<br />++:&nbsp; &nbsp;&nbsp; &nbsp;ldx $1A<br />&nbsp; &nbsp;&nbsp; &nbsp;rts<br />;-------------------------------------------------<br />Recv_KB_or_Tape: ;$81D6: Receives byte from KB or Tape depending on $1F.8<br />&nbsp; &nbsp;&nbsp; &nbsp;stx $1A<br />&nbsp; &nbsp;&nbsp; &nbsp;bit $1F<br />&nbsp; &nbsp;&nbsp; &nbsp;bmi +<br />&nbsp; &nbsp;&nbsp; &nbsp;jsr Keyb_Read_Data<br />&nbsp; &nbsp;&nbsp; &nbsp;jmp ++<br />+:&nbsp; &nbsp;&nbsp; &nbsp;jsr k_Recv_Byte<br />++:&nbsp; &nbsp;&nbsp; &nbsp;ldx $1A<br />&nbsp; &nbsp;&nbsp; &nbsp;lda $17<br />&nbsp; &nbsp;&nbsp; &nbsp;rts<br />;-------------------------------------------------<br />Keyb_Write_Data: ;$81EA: Writes a byte to Keyboard serially (?)<br />&nbsp; &nbsp;&nbsp; &nbsp;ldy #$07&nbsp; &nbsp;&nbsp; &nbsp;;8 loops<br />-:&nbsp; &nbsp;&nbsp; &nbsp;asl $17&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;;Feed byte stored in $17 out to Keyboard<br />&nbsp; &nbsp;&nbsp; &nbsp;lda #$00<br />&nbsp; &nbsp;&nbsp; &nbsp;rol a&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;;Bit 0 = Keyboard row reset<br />&nbsp; &nbsp;&nbsp; &nbsp;ora #$06&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ;Enable keyboard<br />&nbsp; &nbsp;&nbsp; &nbsp;sta $4016&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;;Joystick 1 + strobe<br />&nbsp; &nbsp;&nbsp; &nbsp;and #$03&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ;Disable keyboard matrix<br />&nbsp; &nbsp;&nbsp; &nbsp;sta $4016&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;;Joystick 1 + strobe<br />&nbsp; &nbsp;&nbsp; &nbsp;dey<br />&nbsp; &nbsp;&nbsp; &nbsp;bpl -<br />&nbsp; &nbsp;&nbsp; &nbsp;rts<br />;-------------------------------------------------<br />Keyb_Read_Data:&nbsp; &nbsp;;$81FF: Reads only column 2 (???) of the Family BASIC keyboard?<br />&nbsp; &nbsp;&nbsp; &nbsp;ldy #$07&nbsp; &nbsp;&nbsp; &nbsp;;Loop 8 times<br />-:&nbsp; &nbsp;&nbsp; &nbsp;lda $4017&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;;Joystick 2 + strobe<br />&nbsp; &nbsp;&nbsp; &nbsp;lsr a<br />&nbsp; &nbsp;&nbsp; &nbsp;lsr a<br />&nbsp; &nbsp;&nbsp; &nbsp;and #$01&nbsp; &nbsp;&nbsp; &nbsp;;Isolate Keyboard column 2??<br />&nbsp; &nbsp;&nbsp; &nbsp;ora #$06&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ;Enable keyboard matrix (usually resets it)<br />&nbsp; &nbsp;&nbsp; &nbsp;sta $4016&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;;Joystick 1 + strobe<br />&nbsp; &nbsp;&nbsp; &nbsp;and #$03&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ;Disable keyboard matrix<br />&nbsp; &nbsp;&nbsp; &nbsp;sta $4016&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;;Joystick 1 + strobe<br />&nbsp; &nbsp;&nbsp; &nbsp;lsr a<br />&nbsp; &nbsp;&nbsp; &nbsp;rol $17&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;;Store column 2 data in $17.<br />&nbsp; &nbsp;&nbsp; &nbsp;dey<br />&nbsp; &nbsp;&nbsp; &nbsp;bpl -<br />&nbsp; &nbsp;&nbsp; &nbsp;clc<br />&nbsp; &nbsp;&nbsp; &nbsp;rts<br />;-------------------------------------------------<br />Keyb_Next_Row:&nbsp; &nbsp;;$821A: Increases Keyboard Row<br />&nbsp; &nbsp;&nbsp; &nbsp;lda #$00&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ;This should increment row<br />&nbsp; &nbsp;&nbsp; &nbsp;sta $4016&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;;Joystick 1 + strobe<br />&nbsp; &nbsp;&nbsp; &nbsp;lda #$02<br />&nbsp; &nbsp;&nbsp; &nbsp;sta $4016&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;;Joystick 1 + strobe<br />&nbsp; &nbsp;&nbsp; &nbsp;rts<br />;-------------------------------------------------<br /><br /></div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>ccovell</b> [ Sun Apr 21, 2013 7:50 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: FDS Writing extension for TapeDump</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Okay, I've got KCS file receiving/disk writing working pretty well now, so I'll release a Beta version:<br /><br /><!-- m --><a class="postlink" href="http://www.chrismcovell.com/data/TapeDump_FDS_Writer_Beta.zip">http://www.chrismcovell.com/data/TapeDu ... r_Beta.zip</a><!-- m --><br /><br /><img src="http://www.chrismcovell.com/images/Tapedump_KCS.png" alt="Image" /><br /><br />Be sure to read the included Quick readme.<br /><br />This KCS writer will receive FDS disk header files and file header+data files at 1200 baud over the Fami's microphone.  I've set up some scripts and included DOS/Win programs and batch files to automate FDS -&gt; WAV conversion.<br /><br />Let me know if you get it working!  Different PC+Fami combinations will yield better or worse results through the microphone, and I've discovered that the circuits (and volume/detection levels) are different for the microphones inside of my two Famicom systems: a Sharp Twin Famicom and a Sharp Famicom Titler.  The Titler receives audio files loud and clear if you connect the audio out from your PC to GND and the mic's red wire inside the controller; however, the Twin Famicom is rather hard-of-hearing.  I discovered that bridging a resistor inside the Twin Fami system boosts its microphone detection to within &quot;normal&quot; parameters (hysteresis is still evident meaning the duty cycle will appear narrower through the Mic test program.)  If anybody wants more info about the Twin Fami fix, ask me and I'll post a pic.<br /><br />also...<br /><br />Did anybody try out the Parport DTVTrans writing with a cable yet?  Let me know.  I've also made a bootstrap (DTVTrans protocol) receiving program that can be run without need for a devcart at all.  (All that is needed is Wrecking Crew, a single Game Genie code, and some time.)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>ccovell</b> [ Wed May 01, 2013 4:51 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: FDS Writing extension for TapeDump</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />....   .. .    .  .  @       *   *... . ... ... .<br /><br />tumbleweeds ^^^<br /><br /><br />So, nobody has tried this out or got it working?  Interest is at 0%?   <img src="./images/smilies/icon_sad.gif" alt=":(" title="Sad" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>infiniteneslives</b> [ Wed May 01, 2013 10:23 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: FDS Writing extension for TapeDump</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Not a large population of people on here with FDS and flash carts I'd imagine.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Thu May 02, 2013 12:32 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: FDS Writing extension for TapeDump</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I am interested, but I don't have any free time and won't have any until june.<br /><br />That being said, thank you very much for using something else than a parallel port !<br /><br />Is there a way to make the microphone work on an AV Famicom ? Because I don't have the original famicom currently.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Tomy</b> [ Thu May 02, 2013 5:15 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: FDS Writing extension for TapeDump</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">ccovell wrote:</div><div class="quotecontent">So, nobody has tried this out or got it working?  Interest is at 0%?   <img src="./images/smilies/icon_sad.gif" alt=":(" title="Sad" /></div><br /><br />I think many people interest in it. But they don't know how to build (soldering work), or don't have cable to make it.<br />I want to ask, I only need DTVTrans cable to the Famicom expansion port is enough to dump FDS ?<br />Look like it transfer data not use sound format.<br /><br />About KCS, I need a Famicom keyboard ?

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>3</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>