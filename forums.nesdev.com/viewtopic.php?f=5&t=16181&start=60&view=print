<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Designing a NES compatible console - nesdev designs, part 2.</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Designing a NES compatible console - nesdev designs, part 2.</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=5&amp;t=16181">http://forums.nesdev.com/viewtopic.php?f=5&amp;t=16181</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>5</strong> of <strong>5</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>FrankenGraphics</b> [ Sat Jul 15, 2017 10:54 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Designing a NES compatible console - nesdev designs, par</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><strong>re terminology:</strong> Studio equipment companies are (like many industries) full of commercial buzzwords. Everything between heaven and earth has been called &quot;phat&quot; and &quot;analog&quot;, for instance  <img src="./images/smilies/icon_lol.gif" alt=":lol:" title="Laughing" /> In the modular counter-culture, &quot;snappy&quot; has become a holy word which has caught on as its meaning gets dilluted. Wavetable synthesis probably sounded a lot cooler and selling to a marketeer than s+s, sample synthesis, and sampling. Another term that was used largely to obfuscate what the synth underneath really was about was &quot;vector synthesis&quot;. In yamaha products, it's a combined fm synth and rudimentary sampler. In KORG (wavestation) it is actually a wavetable synth. Their common factor? A joystick for blending sounds and/or steering control messages with semi-alterable addressing.  <img src="./images/smilies/icon_rolleyes.gif" alt=":roll:" title="Rolling Eyes" /> <span style="font-size: 85%; line-height: normal"> Not to diminish the feature - It gave back a dimension of control synthesizers had abandoned since the minimoog generation. </span><br /><br />I think the distinction between a sampler and a wavetable synth being if the samples repeat after one cycle/period or not is very clear. Other distinctions (like if it is able to record a sample) aren't waterproof and have been blurred as new products have entered the market. <br /><br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I'm not sure if all this stuff would've made the chip expensive in the late 80s to early 90s though.</div><br />Most probably, that chip was already pretty advanced for its time. Today you can get pretty advanced synths/delays/reverbs on a chip, but they're also generally costly. Example of a <a href="http://www.profusionplc.com/parts/spn1001-fv1" class="postlink">lower end FX chip</a>.  There might be bucket brigade chips on the cheap, but i don't know. The problem here is for a commercial, easy to source part, the legal dimension of emulating it can potentially get tricky (it's someone's product). For old stuff, you can't reliably source them. So i think there's two options: Emulate and program a suitable DSP pic / mcu / fpga, or make a circuit from more discrete parts (might be too expensive and labourous) and emulate that in turn. Or a combo/compromise.<br /><br />Some FX are both cheap to build discrete, and easy to emulate. If you want do give each or some channels a suboctave side channel, all you basically need to use is optionally a comparator and essentially a d-flip flop. Especially if the sub channel is directly derived after tone generation (where the amplitude is known) and then summed/mixed in prior to any volume envelope (and filtering, if that applies). Mixing would require a programmable mixer, of course.<br /><br />FM/AM synthesis is good in retro gaming (i think) because it offloads the CPU by some (but with 65816, would it matter?). Besides the audio range modulation, you can create vibrato and tremolo just the same way without continously feeding new pitch/volume data to the unit, and tremolo/vibrato would work independent of their famitracker-style instrument envelopes (apart from you wanting to change rate and amplitude of those effects).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>psycopathicteen</b> [ Sat Jul 15, 2017 3:07 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Designing a NES compatible console - nesdev designs, par</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I wonder if the SPC700 ditched the compression, Gaussian interpolation and the CPU part, it would be able to fit more channels in.  If they really need interpolation, I think linear would have been fine.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Sat Jul 15, 2017 3:21 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Designing a NES compatible console - nesdev designs, par</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I'd hunch that the channel limitation is a matter of bandwidth instead of silicon.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sat Jul 15, 2017 3:44 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Designing a NES compatible console - nesdev designs, par</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Based on <a href="http://problemkaputt.de/fullsnes.htm#snesapulowleveltimings" class="postlink">low level timing in nocash's Fullsnes</a>, in the worst case, with all eight channels playing at maximum rate (127.9 kHz) and straddling the loop point, the DSP has to read and write 48 bytes: 5 bytes per channel per sample (two loop start pointer bytes, one BRR header, and two BRR data representing four input samples), plus read one stereo frame (4 bytes) from the echo buffer and write one (4 bytes) back. This times 32000 samples per second fills three-fourths of the 2048000 ARAM access slots per second that the DSP gets.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>FrankenGraphics</b> [ Sat Jul 15, 2017 3:53 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Designing a NES compatible console - nesdev designs, par</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />If a 'new chip' is on the table: Why not combine wavetable oscillators with fm operation? <br /><br />Each oscillator could be something like N163 in itself. It's a unit. It doesn't even have to have 8 channels per oscillator like the N163 has, because that takes its toll on fidelity. Maybe 4 is enough.  Maybe one or two. <br /><br />-Now, you could either route its sum to Out, or you could route it to modulate another units' registers. What is needed is an interface from audio -&gt; control register. <br /><br />-There's the question how low the N163/Super-N163/hypothetical wavetable unit could go. Sub audio territory is very useful. Here, interpolation plays a big role. It'd also play a big role naturally since you don't want your modulator signal to be too jagged in FM/AM synthesis.<br /><br />-All units can switch between a shared wave ROM onboard and a shared RAM space. The musician/programmer can make their lives easy and send all outs to Audio Out, or they can facilitate some to take benefits of FM/AM operation. If it's possible to force an oscillator to reset its period, you'd gain hardsync effects as a bonus. <br /><br />-No fm operators goes to waste by not being used. You'd use them for ordinary sound channels. And if you want to use the wavetable synth as a wavetable synth or just as an oscillator with selectable waveforms, that'd be up to you. Or open the envelope and stream samples. It's all up to the music engine to set the limitations, with regard to processing bandwidth and ease of use.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Sat Jul 15, 2017 4:08 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Designing a NES compatible console - nesdev designs, par</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">FrankenGraphics wrote:</div><div class="quotecontent">-Now, you could either route its sum to Out, or you could route it to modulate another units' registers. What is needed is an interface from audio -&gt; control register. <br />-There's the question how low the N163/Super-N163/hypothetical wavetable unit could go. Sub audio territory is very useful. Here, interpolation plays a big role. It'd also play a big role naturally since you don't want your modulator signal to be too jagged. <br /></div>Both the SNES and TG16 support this. (The SPC isn't really tuned for audio-rate FM, but it does work... <a href="http://problemkaputt.de/fullsnes.htm#snesapudspbrrpitch" class="postlink">PMON allows channel 0-6 to be fed in as a modulator for the next higher channel</a>)<br /><br />TG16 is quite a bit more limited, only channel 1 can feed into channel 0.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>FrankenGraphics</b> [ Sat Jul 15, 2017 4:57 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Designing a NES compatible console - nesdev designs, par</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I suppose having something like the n163* as an operator unit would also have the benefit that this way you could facilitate all of the &quot;many operators modulate the one other&quot; type of algorithms present on yamaha DX7 up to SY77/99 (and probably onwards, don't know what yamaha is up to these days). You'd set it to simulate as many oscillators as you'd need and let the sum of them modulate the next operator unit. <br /><br />If they weren't summed before sent to modulation, they could instead be used for polyphonic FM patches.<br /><br />*edit: as in something that simulates several oscillators by cycling through their tasks in a round robin fashion.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>psycopathicteen</b> [ Sat Jul 15, 2017 7:57 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Designing a NES compatible console - nesdev designs, par</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I've been thinking about APU bandwidth, and I thought of this:<br /><br />-No header bytes.  All samples are just 4-bit PCM, or IMA ADPCM.<br />-Loop points and sample length are stored in hardware registers.<br /><br />So with this it could fetch 28 channels plus echo at 2Mhz.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>5</strong> of <strong>5</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>