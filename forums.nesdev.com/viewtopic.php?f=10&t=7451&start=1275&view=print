<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - 8x16 and whatever else unreg wants to know</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">8x16 and whatever else unreg wants to know</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=10&amp;t=7451">http://forums.nesdev.com/viewtopic.php?f=10&amp;t=7451</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>86</strong> of <strong>88</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Thu Nov 06, 2014 12:04 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: 8x16 and whatever else unreg wants to know</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">unregistered wrote:</div><div class="quotecontent">Shiru, I want to buy the SNES one... how do I find it?</div><br />I don't have a link (and I think we're not allowed to link to that kind of thing here), but I'm pretty sure it's available online.<br /><br />Keep in mind that official manuals usually only contain explanations about the capabilities of the system, and detailed descriptions of the various registers used to control the hardware. It's nothing that will help you with the actual programming of games if you're not familiar with all the logic involved in creating a game world.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Thu Nov 06, 2014 12:12 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: 8x16 and whatever else unreg wants to know</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />To give you an idea of what to expect: At best, an official manual will be about as detailed as the official manual for something like <a href="http://www.libsdl.org/release/SDL-1.2.15/docs/" class="postlink">SDL</a> or <a href="http://www.pygame.org/docs/" class="postlink">Pygame</a>. For example, where the SDL or Pygame docs explain the arguments of a function call, official console devkit docs might explain the bits of a register.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>unregistered</b> [ Thu Nov 06, 2014 2:56 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: 8x16 and whatever else unreg wants to know</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Thank you tokumaru and tepples for replying.  I didn't realize that the documentation was destroyed due to contractual agreements and legal stuff...  I'm no longer interested. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>unregistered</b> [ Mon Nov 10, 2014 9:52 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: 8x16 and whatever else unreg wants to know</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />tokumaru, somewhere you wrote that if I draw 16 pixels, one metatile column, a frame... that would prevent my girl from reaching the side of the screen.  Well I checked my drawRAMbuffer and drawOurColumn and both of them draw two 8pixel columns... <s>one</s> <span style="color: #00BFFF">two</span> to my RAMbuffer and <s>one</s> <span style="color: #00BFFF">two</span> to the screen, respectively.  That will prevent her from reaching the edge of the screen (cause the max she moves is 10 pixels during a frame) right?  Cause, she reaches the edge and I'm going insane trying to figure this out.  Could it be only drawing one 8bit column of tiles?  What else do you think it could it be?<br /><br /><span style="color: #00BFFF">edit.</span><br /><br />edit2: Do you think keeping track of each 8 bit column of tiles with a counter would be a good idea?  Or a waste of time, why? <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Mon Nov 10, 2014 10:38 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: 8x16 and whatever else unreg wants to know</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">unregistered wrote:</div><div class="quotecontent">Well I checked my drawRAMbuffer and drawOurColumn and both of them draw two 8pixel columns... <s>one</s> <span style="color: #00BFFF">two</span> to my RAMbuffer and <s>one</s> <span style="color: #00BFFF">two</span> to the screen, respectively.  That will prevent her from reaching the edge of the screen (cause the max she moves is 10 pixels during a frame) right?</div><br />Yeah, if a character moves less than the area you can update each frame it's mathematically impossible for it to reach the edge.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Cause, she reaches the edge and I'm going insane trying to figure this out.  Could it be only drawing one 8bit column of tiles?  What else do you think it could it be?</div><br />I can't guess. You should be able to debug this with FCEUX or Nintendulator. Use the name table viewer to see how the column updates are working.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">edit2: Do you think keeping track of each 8 bit column of tiles with a counter would be a good idea?  Or a waste of time, why? <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /></div><br />What do you mean keep track? Normally these things can be deduced from the camera position. For example, if the camera (it's left side) is at position $00FD, and moves to $0102 (5 pixels to the right), it crosses a 16-pixel boundary, meaning you have to draw a new column. In order to know which column to draw, you can simply add the width of the screen (256 pixels) to the camera coordinate and you'll know exactly which column you have to update.<br /><br />Keeping many separate counters for things that are interconnected is an invitation for bugs, because updating everything in sync is way harder than keeping track of a few numbers/positions and calculating the rest from those whenever necessary.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>unregistered</b> [ Mon Nov 10, 2014 2:38 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: 8x16 and whatever else unreg wants to know</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent"><div class="quotetitle">unregistered wrote:</div><div class="quotecontent">Well I checked my drawRAMbuffer and drawOurColumn and both of them draw two 8pixel columns... <s>one</s> <span style="color: #00BFFF">two</span> to my RAMbuffer and <s>one</s> <span style="color: #00BFFF">two</span> to the screen, respectively.  That will prevent her from reaching the edge of the screen (cause the max she moves is 10 pixels during a frame) right?</div><br />Yeah, if a character moves less than the area you can update each frame it's mathematically impossible for it to reach the edge.</div><strong><span style="font-size: 150%; line-height: normal">WOOOHOOOO!!!!!!!! Thanks so much tokumaru!!</span></strong> <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /><br /><br /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent"><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Cause, she reaches the edge and I'm going insane trying to figure this out.  Could it be only drawing one 8bit column of tiles?  What else do you think it could it be?</div><br />I can't guess. You should be able to debug this with FCEUX or Nintendulator. Use the name table viewer to see how the column updates are working.</div>Ha ha I can't do that cause the columns aren't being drawn right now; my fault  <img src="./images/smilies/icon_mad.gif" alt=":x" title="Mad" />. I'll do this! <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /><br /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent"><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">edit2: Do you think keeping track of each 8 bit column of tiles with a counter would be a good idea?  Or a waste of time, why? <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /></div><br />What do you mean keep track? Normally these things can be deduced from the camera position. For example, if the camera (it's left side) is at position $00FD, and moves to $0102 (5 pixels to the right), it crosses a 16-pixel boundary, meaning you have to draw a new column. In order to know which column to draw, you can simply add the width of the screen (256 pixels) to the camera coordinate and you'll know exactly which column you have to update.</div><span style="font-size: 150%; line-height: normal"><strong><span style="color: #BF0080">SWEET MESQUITE!</span></strong></span>  I can see itwadbe <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;"><strong>inc CameraX+1</strong></tt> <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /><br /><br /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">Keeping many separate counters for things that are interconnected is an invitation for bugs, because updating everything in sync is way harder than keeping track of a few numbers/positions and calculating the rest from those whenever necessary.</div> <span style="font-size: 200%; line-height: normal"><strong><span style="color: #FFFF80">THANKS TOKUMARU!!</span></strong></span> <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>unregistered</b> [ Fri Nov 14, 2014 10:57 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: 8x16 sprite is really a 16x32 pixel image?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Kasumi<span style="color: #00BFFF">, on page 66,</span> wrote:</div><div class="quotecontent">Continuing from this:<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">If cameraposition/8 - oldcameraposition/8 is not equal to 0, we moved at least one tile and need to update the nametables.</div><br /><br />columntoupdate = cameraposition / 8.<br /><br />Edit: Well, when scrolling left anyway. When scrolling right, columntoupdate = (cameraposition+256)/8</div>  My general question is: Since I have chosen to divide my cameraposition by 16 to find my columntoupdate... does that account for the screen scrolling slower?  I was thinking that maybe that's my problem where my character still reaches the edge of the screen which is mathematically impossible.   Just wondering... thought I would ask, thanks. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /><br /><span style="color: #00BFFF">edit: forgot to add this note.</span>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Kasumi</b> [ Fri Nov 14, 2014 8:54 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: 8x16 and whatever else unreg wants to know</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"> Since I have chosen to divide my cameraposition by 16 to find my columntoupdate... does that account for the screen scrolling slower?</div><br />Your scroll keeps track of a pixel position. The division is because tiles/attribute columns are not 1 pixel wide. If you move one pixel, you can still be in the same tile/attribute column. It's wherever the scroll is, divided. How fast it got there doesn't matter. (Well... if you scroll faster than 8 pixels in a frame, a tile could be skipped without extra logic. But going slow doesn't matter at all.)<br /><br />The difference between dividing by 8 or dividing by 16 is just because you're choosing whether you're updating a tile at a time (8 pixels across) or two tiles at a time (16 pixels across).<br /><br />Edit: So short answer: If you've implemented that correctly, that's not why the character reaches the edge of the screen. <br /><br />Edit2: More edition: Your character's on screen position is their actual position minus the scroll. When a character is in the middle of the screen while moving right, it means that the scroll position and the character's position are increasing at the same rate. (128-0 is 128. 256-128 is 128. 404-276 is 128.) They reach the edge of the screen when the scroll is not allowed to increase further with the character's position. Level is 1024 pixels wide, scroll has a maximum of 768. If the player moves beyond 896, they are now more than 128 pixels from the scroll. If they keep moving right, they will get closer to the edge of the screen because the scroll cannot follow them further.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>unregistered</b> [ Mon Nov 17, 2014 10:30 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: 8x16 and whatever else unreg wants to know</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Kasumi wrote:</div><div class="quotecontent">Edit2: More edition: Your character's on screen position is their actual position minus the scroll.</div> <span style="color: #FF0080"><strong><span style="font-size: 200%; line-height: normal">!!!!!!THANKS KASUMI!!!!!</span></strong></span> The rest of your post is really helpful... I just quoted that part because I totally forgot that and your reminder is so appreciated!! <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" />  Thank you for your entire <span style="color: #FFFFBF">enabling and</span> extremely helpful post!!  <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /> <img src="./images/smilies/icon_mrgreen.gif" alt=":mrgreen:" title="Mr. Green" /><br /><br /><span style="color: #FFFFBF">edit.</span>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>unregistered</b> [ Fri Nov 28, 2014 4:40 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: 8x16 sprite is really a 16x32 pixel image?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">unregistered<span style="color: #FFBF80">, on page 48,</span> wrote:</div><div class="quotecontent">...FCEUX's debugger is so great!! <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /> I think I've learned what <span style="color: #80FF00">step-over</span> and <span style="color: #BFFF00">step-out</span> do too! <br /><br /><ul><ul><span style="color: #80FF00">Step-over</span> allows you to run the code that the method jsrs to but skip it entirely; it skips to the next line!</ul>  <br /><ul><span style="color: #BFFF00">Step-out</span> let's you step out of a method and it also skips to the same next line that <span style="color: #80FF00">step-over</span> would have skipped to... that's there for people like me who accidentally press <strong>step-into</strong> too many times. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /></ul></ul><br />  Now debugging is even faster! <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" />  Please correct me on anything I've not described correctly... it's just what I've noticed while debugging.</div>  I just figured out something else about <span style="color: #BFFF00">Step-out</span>... sometimes after pressing <span style="color: #BFFF00">Step-out</span> I get a message &quot;A Step-out is already in progress... cancel it and run a new Step-out?&quot; and I never understood that until today.  Here is what my code looks like <span style="color: #FF0080">in the debugger</span>... <div class="codetitle"><b>Code:</b></div><div class="codecontent">&#91;draw_RAMbuffers&#93;<br />&nbsp; sta $FF<br />&nbsp; ...<br />&nbsp; jsr colors<br />&nbsp; &#91;colors&#93; <br />&nbsp; &nbsp; sta $FF<br />&nbsp; &nbsp; ...<br />&nbsp; &nbsp; rts<br />&nbsp; rts<br />lda iBeginAtOne</div>  ...tokumaru gave me the idea of setting a breakpoint  for a write to address $ff and so each <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">sta $ff</tt> causes my debugger to take a break.  <br /><br />So, today, I returned to my computer and found it inside draw_RAMbuffers taking a break at its <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">sta $ff</tt>.  Then I thought I would like to <span style="color: #BFFF00">Step-out</span> of draw_RAMbuffers and I'd be at the first instruction after draw_RAMbuffers ends... the <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">lda iBeginAtOne</tt>.  But <img src="./images/smilies/icon_eek.gif" alt=":shock:" title="Shocked" /> that didn't happen!!  It stopped at another <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">sta $ff</tt> instead <img src="./images/smilies/icon_mad.gif" alt=":x" title="Mad" /> and I became mad thinking I had clicked the <span style="color: #BFFF00">Step-out</span> button, but it misunderstood me and had responded to the <span style="color: #FFFF00">Run</span> button being clicked.  I had a feeling that this had happened before.  <img src="./images/smilies/icon_evil.gif" alt=":evil:" title="Evil or Very Mad" /><br /><br />OH GOODNESS GEE! I need to go run before it gets too dark... sorry brb...<br />edit:back.  Ok... I was very mad... for totally the wrong reason.   ...I'll explain...<br /><br />edit2: ...wooooooooooah.... water with ice is excellent!!! <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" />... ... ...my feeling of it happening before was because these exact feelings had happened like at least twice in the past... but this time I handled it  well.  I clicked <span style="color: #BFFF00">Step-out</span> again and it gave me another message like, &quot;A Step-out is already in progress... cancel it and run a new Step-out?&quot;... and I had noticed that <span style="color: #BF80FF">colors</span> runs at the end of <span style="color: #BF80FF">draw_RAMbuffers</span> ...and so I thought well maybe it could be working correctly now...maybe I should click the <span style="color: #BFBF80">no</span> button <span style="color: #00BFFF">(that would be the first time clicking the &quot;no&quot; button... all the other times I clicked &quot;yes&quot;.)</span>. I clicked the <span style="color: #BFBF80">no</span> button and after an uncertain pause I then clicked the <span style="color: #FFFF00">Run</span> button <span style="font-size: 200%; line-height: normal">AND IT PAUSED AT <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">lda iBeginAtOne</tt>!!!</span>    <img src="./images/smilies/icon_surprised.gif" alt=":o" title="Surprised" /> <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" />  <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /> <br /><br />Food is here Amazing Race is starting.  Must go eat!<br /><br /><span style="color: #00BFFF">last edit. (frosty the snowman rocks! : ))</span><br /><br /><span style="color: #FF0080">edited once more because I needed to add a note above.</span>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>unregistered</b> [ Mon Dec 08, 2014 3:12 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: 8x16 and whatever else unreg wants to know</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tokumaru<span style="color: #00BFBF">, on page 50,</span> wrote:</div><div class="quotecontent"><span style="color: #FFFF80">The exact formula obviously depends on how your maps are stored, but the typical way to convert pixel coordinates into map offsets is more like (y / MetatilesWidth) * NumberOfMetatilesPerRow + (x / MetatileHeight).</span></div><div class="quotetitle">tokumaru<span style="color: #00BFBF">, a few posts further down... also on page 50,</span> wrote:</div><div class="quotecontent"><span style="color: #FFFF80"> The formula for reading data from a 2D array which is stored in memory linearly is always <strong>Y * ElementsPerRow + X</strong>, that doesn't change. But you also have to take into consideration that the base unit is the type of element you are accessing, in this case, metatiles. If you have pixel coordinates, you have to first convert them to metatile coordinates, hence the need to divide both X and Y by the dimensions of your metatiles before applying that formula.</span></div>  I highlighted your words so that others might read all of them.  The problem I'm experiencing now is that my code is working weirdly... and I was wondering, well, I'm trying to use metatile with a row-length of 32.  So my pseudo code almost reads like<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp;;Calculate the index of the metatile: (Y / 16) * 32 + (X / 16) = LINEAR_POSITION&nbsp; p.50&nbsp; -Not me.-<br />&nbsp; &nbsp;;= ... (Y / 16) * (2 * 16) + (X / 16)<br />&nbsp; &nbsp;;= ... ((Y / 16) * 16) * 2 + (X / 16)</div>  Is that correct?  I mean... is it ok that I'm trying to cram two screens of 16x16 metatiles into one row?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>unregistered</b> [ Thu Dec 11, 2014 10:08 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: 8x16 and whatever else unreg wants to know</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">qbradq<span style="color: #8080FF">, on <a href="http://forums.nesdev.com/viewtopic.php?p=102563#p102563" class="postlink">page 54</a>,</span> wrote:</div><div class="quotecontent">How are you storing your collision data? That has a lot to do with how to scroll it <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /></div>My collision data is kept in a 15 rows by 32 columns table in 0600-07DF.  This is so I don't have to scroll it...  I just have to update it once every two screens. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Thu Dec 11, 2014 11:05 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: 8x16 and whatever else unreg wants to know</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">unregistered wrote:</div><div class="quotecontent"><div class="codetitle"><b>Code:</b></div><div class="codecontent">;= ... (Y / 16) * (2 * 16) + (X / 16)<br />;= ... ((Y / 16) * 16) * 2 + (X / 16)</div>  Is that correct?</div><br />Looks correct to me. Take care with that optimization you did though: you might look at (Y / 16) * 16 and feel tempted to skip all the shifting, but then you'll be keeping the lower 4 bits of Y, which will screw up the result when you add (X / 16) later. The correct way to optimize this formula is (Y AND $F0) * 2 + (X / 16). Multiplications and divisions are obviously done by shifting bits.<br /><br />Also, since you have only 2 screens worth of collision data, you should ignore the higher bits (you only need bits 0 through 8) of the X coordinate, otherwise you might end up with a pointer to a memory location past the area you have defined for collision data.<br /><br /><div class="quotetitle">unregistered wrote:</div><div class="quotecontent">My collision data is kept in a 15 rows by 32 columns table in 0600-07DF.</div><br />If you add $600 to the result from the formula above, you'll end up with a 16-bit pointer you can use to read from this table. You could even skip adding (X / 16) to the pointer and put that into the Y registers instead. The complete code might look like this:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">lda PixelY ;8-bit Y coordinate<br />and #$0f ;same as shifting right 4 times and then left 4 times<br />asl ;shift one more time to complete the multiplication by 32<br />sta Pointer+0 ;the low byte of the pointer is ready<br />lda #$06 ;prepare to add the high byte of the base address<br />adc #$00 ;add to the highest bit (carry) of PixelY * 32<br />sta Pointer+1 ;the high byte of the pointer is ready<br />lda PixelX+1 ;high byte of 16-bit X coordinate<br />lsr ;get the only bit we need from it<br />lda PixelX+0 ;low byte of the 16-bit X coordinate<br />ror ;put the high bit in<br />lsr ;shift 3 times to complete the division by 16<br />lsr<br />lsr<br />tay ;put the row offset in the index register<br />lda (Pointer), y ;get the collision data</div><br /><br />This is just one way to do it. Another approach would be to store the collision data a bit differently, as 2 16x15 blocks, instead of a single 32x15 one. That way you could use only the lower bytes of the coordinates to form an 8-bit index and check the 9th bit of the X coordinate to decide between reading from the first or the second collision table. The options are endless, so pick what works best for you. =)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Thu Dec 11, 2014 11:28 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: 8x16 and whatever else unreg wants to know</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">Another approach would be to store the collision data a bit differently, as 2 16x15 blocks, instead of a single 32x15 one.</div><br />This is what <em>Super Mario Bros.</em> does: a 32x13-metatile sliding window stored as two 16x13 halves.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Thu Dec 11, 2014 6:31 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: 8x16 and whatever else unreg wants to know</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">This is what <em>Super Mario Bros.</em> does: a 32x13-metatile sliding window stored as two 16x13 halves.</div><br />This might be a good approach because it better matches the name table layout, in addition to the possibility of accessing any part of each table with an 8-bit index.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>86</strong> of <strong>88</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>