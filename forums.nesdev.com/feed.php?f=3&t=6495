<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=3&amp;t=6495" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2010-06-15T04:49:56-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=3&amp;t=6495</id>
<entry>
<author><name><![CDATA[byuu]]></name></author>
<updated>2010-06-15T04:49:56-07:00</updated>
<published>2010-06-15T04:49:56-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6495&amp;p=62971#p62971</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6495&amp;p=62971#p62971"/>
<title type="html"><![CDATA[portable GUI library that works with game libraries like SDL]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6495&amp;p=62971#p62971"><![CDATA[
The way you get around Qt being message based is to setup a QTimer that fires every 0ms. Your program won't ever go to sleep as a result, and you just treat your timer as the main loop of your program.<br /><br />Also, don't use QApplication::processEvents() in place of QApplication::run(), as that breaks the OS X port.<br /><br />I would personally target Qt and then embed SDL into that using SDL_WINDOWID; but you can do it any way you want. Just don't make your core dependent upon any API you don't have to.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=375">byuu</a> — Tue Jun 15, 2010 4:49 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2010-06-14T10:05:43-07:00</updated>
<published>2010-06-14T10:05:43-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6495&amp;p=62949#p62949</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6495&amp;p=62949#p62949"/>
<title type="html"><![CDATA[portable GUI library that works with game libraries like SDL]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6495&amp;p=62949#p62949"><![CDATA[
I know little about SDL, though I really need to learn it because Ubuntu developers care more when it breaks than when Allegro breaks. But Allegro has a basic GUI framework that apps can use if they choose, and Allegro alert boxes (as seen in freepuzzlearena) and the Allegro file chooser (as seen in 8TED, 8name, and the replayl in Lockjaw) are built on this framework.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Mon Jun 14, 2010 10:05 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[mattmatteh]]></name></author>
<updated>2010-06-14T09:52:21-07:00</updated>
<published>2010-06-14T09:52:21-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6495&amp;p=62948#p62948</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6495&amp;p=62948#p62948"/>
<title type="html"><![CDATA[portable GUI library that works with game libraries like SDL]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6495&amp;p=62948#p62948"><![CDATA[
if you want your app to be cross platform i suggest you build it and test it on as many platforms as you can as often as you can.   for example, i test mine on x86, x86_64, ppc, linux, bsd, mac, and a some time ago on the ps2.<br /><br />i am working toward the same goal as you kinda.   currently working on my core written in C as a lib, then i can use what ever UI i want, sdl, qt, opengl, what ever.   while coding all my debugging was dumped to stdout.   you should be able to do the same thing with a funtion call and have it return what ever debug data you want and have it set break points, all without gui code embedded in the core.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=170">mattmatteh</a> — Mon Jun 14, 2010 9:52 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Petruza]]></name></author>
<updated>2010-06-14T08:50:38-07:00</updated>
<published>2010-06-14T08:50:38-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6495&amp;p=62946#p62946</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6495&amp;p=62946#p62946"/>
<title type="html"><![CDATA[portable GUI library that works with game libraries like SDL]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6495&amp;p=62946#p62946"><![CDATA[
I implemented the CPU and a basic PPU and arrived to a phase where I need to build a debugger to watch machine code, memory and PPU state to see what's happening and fine tune the emulator. ( it renders a static-background demo, but games don't output anything to the screen )<br /><br />I'm using SDL, mainly because I want to make my emulator portable.<br />But for the debugger I need some GUI, as the debugger needs not be distributed with the first public version of the emu, so the debugger doesn't need to be cross-platform, I'd still like to make it portable.<br /><br />What do you recommend for the GUI? Libs like QT take control of main() as SDL does, so I'm not sure if they can work well together. There are some GUI libs built on top of SDL, but I'm nor sure they're good, and not many seem updated lately.<br /><br />For portable emulators, which I know SDL is a popular choice, are GUIs commonly programmed natively for each platform? or are they programmed on a portable GUI library?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3773">Petruza</a> — Mon Jun 14, 2010 8:50 am</p><hr />
]]></content>
</entry>
</feed>