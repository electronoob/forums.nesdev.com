<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Updating APU Regs Multiple Times Per Frame</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Updating APU Regs Multiple Times Per Frame</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=3580">http://forums.nesdev.com/viewtopic.php?f=2&amp;t=3580</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>strangenesfreak</b> [ Thu Sep 13, 2007 1:33 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Updating APU Regs Multiple Times Per Frame</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />How practical would it be to write a sound engine that wrote to the APU registers 2 times per frame instead of one time per frame?  I think it would be interesting with an engine like this, maybe more depth could be added to the APU channels, like for frequency changes, or duty cycle changes for the square channels, or volume changes.  For 2 times per frame, maybe a game fires a mapper IRQ near the middle of the frame, or as close as it can get if there's split-screen effects going on there.  Maybe a game could use a large status bar like Kirby's Adventure and do mid-frame APU updating there...  Could 3 or 4 times per frame also be practical?
<br />
<br />What if a game did its own manual sample mixing for $4011 and mixes two sound channels together once per frame?  I think such sound channels would need to be split up in one frame segments (50 or 60 HZ segments).  When mapper IRQs are being fired at about every 2-3 scanlines or lower frequency, a game can just pop a value from RAM and write to $4011.  A problem would be that sample bytes would need to be skipped in split-screen effects and VBlank, or using a pseudo-extra channel timer during split-screen IRQs to still write to $4011 would complicate the IRQs and lose time for calculating the split-screen data.  Using conventional loops and indexes, mixing two 80-120 byte segments together would also be very time consuming and take up a lot of the frame, leaving less time to actually update $4011.  Even if completely unrolled code was used, a lot of PRG code would need to be used and it would still be pretty time consuming, but it wouldn't be as bad.  What are better ways to incorporate pseudo-extra channels with $4011?
<br />
<br />I was just wondering, but did games ever use similar methods as these - for sound effects or music?  Even though it's not a good game (it's an LJN game), WWF King of the Ring seems to mix audience cheers and wrestler grunts together during gameplay, but the two sound effects seem to drown out each other.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Thu Sep 13, 2007 1:56 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">How practical would it be to write a sound engine that wrote to the APU registers 2 times per frame instead of one time per frame?</div><br /><br />I already throught a bit about this. It can range to very simple to almost impossible in function of the mapper used and the CPU usage for the rest of the game (not the sound code).<br />First, the problem is that to call the sound programm 2 times (or more) a frame, you need to have a second reliable time base (the first being the VBlank NMI). I trought of using APU frame IRQ for this (by waiting half a frame while booting then start the frame APU from there), but then it would be slightly faster (or slower, I cannot remeber) and would eventually run of duty, and there is no way of making it keep in synch, exept if you want to regulary sacrifice a frame to re-sync it (it could cause gaps in the gameplay each 16 frames or so, it could be tolerable in a RPG, maybe not in an action game). You could of course use a music engine that could split between normal mode and dual more automatically, for example in a RPG the music would be normal on the field, but fast in battle (where the sound code is called twice a frame) to have more detailed sound effects, and then skip a frame ocasionally to re-synch the APU frame IRQ used to tigger the additional call of the sound code. Another problem is that the PAL NES has the frame IRQ that is not a little faster or a little slower than the VBlank like the NTSC NES, but it is just a whole lot faster than the VBlank, so it would need to re-synch very often (maybe each 4-5 frames or so).<br /><br />This is for a mapper that has no particular timebase IRQ. If you use the MMC3 (but do not use split-screen effect) it would be a lot easier to reliably trigger two or more times the music code in the frame. The only real downside is that you will eat a more lot CPU time, as the sound programm is running a couple of time per frame, so it has to not be too slow to not screw up the rest of the programm. Finally, it would be harder to use the IRQs for something else at the same time. Again, a game could use the IRQ for some graphical stuff at one place, and for sound at another place in function of the game needs. In a very standard action game with a status bar, it wouldn't be hard to use 2 IRQs per scanline (approximately at 1/3 and 2/3 of the frame) and split the screen to the status bar on the second IRQ too (before calling the sound routine).<br /><br />Finally, on the MMC5 it would be even simpler than on the MMC3, as IRQs are absolute (and not relative) so it would help a lot if you want to merge IRQs for graphic uses and for sound uses (you would need to write a small IRQ handler, that would trigger the first needed, then init the second when the first happen, etc... for the whole frame).<br /><br />So in conclusion this is possible, with and without special mapper, but it sure does complicate things, so unless you really want very detailed sound effects or special effects in you music it's simpler to just use the regular way to do things, and the hardware sweep registers can change the pitch faster than a one-frame basis (combined with also changing the pitch evey frame can create interesting effects).<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">What if a game did its own manual sample mixing for $4011 and mixes two sound channels together once per frame? I think such sound channels would need to be split up in one frame segments (50 or 60 HZ segments)</div>
<br />It depends what you call "mixing". I mean even one single channel cannot be played, unless the whole programm is completely frozen. You *could* come up with a programm that cuts all its tasks into very small timed codes of a fixed CPU lenght then manage to call those small task in a good order and write to $4011 between them, but this would be a real headache to handle (not technically impossible).
<br />If you want to mix 2 channels, in theory you would have to mix the equivalent of one sample in software, write to $4011 AND call a small piece of the rest of the code regulary, which is even more a headache. If you just add the values of two samples together before feeding $4011 I don't think it changes much things, however if you want to come with volume mixing, resampling and such things I'd say forget about that unless you seriously overclock the NES.
<br />
<br />With extra hardware of course this make things differently, I guess the Squeedo car has a microcontroller that mix audio and then IRQ the main programm, directly sending it data the cart just has to copy to $4014 regulary. This works, but eats considerable CPU %.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>strangenesfreak</b> [ Thu Sep 13, 2007 6:43 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">With extra hardware of course this make things differently</div>
<br />Would "extra hardware" include mappers with their own IRQs?  Gauntlet II and King of the Ring used the MMC3's IRQs for driving $4011 during rendering only but they don't slow down.  Gauntlet II updated $4011 every 3 scanlines, King of the Ring updated $4011 every 2 scanlines.  King of the Ring seems to use pre-mixed sound samples for playing both cheers and grunts at the same time, as it just loads data from the PRG ROM.
<br />
<br />Empire Strikes Back actually drives $4011 nearly every rendered scanline during gameplay without pausing or slowing down the game, but that might be because of there's very little enemies.  Ultimate Stuntman seems to skip sample bytes lost for the game engine and plays drum samples during free time in the game, as the drums' quality worsen when there's more enemies.  That approach, however, would not be good in case too much stuff is going on, but there's not much intense action in the game.
<br />
<br />Would $4011 sound channel mixing be more practical in puzzle or text/graphic adventure games where there's usually not as much action?
<br />
<br />EDIT: Changed "drives $4011 every scanline" to "drives $4011 nearly every <strong>rendered</strong> scanline" to be more accurate.  Also added "during rendering" to "used the MMC3's IRQs for driving $4011" to reflect this.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Thu Sep 13, 2007 8:48 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The DMC can be used to generate a mid-frame interrupt or generate many interrupts per frame (up to around 4 kHz, 66 per frame). By using a sample made up of $55 or $AA, you can have just a quiet square wave at high pitch.
<br />
<br />About the only use for sample mixing is playing more than one drum sample at once. Trying to play notes would probably result in crappy music like on the Game Boy Advance.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>dvdmth</b> [ Thu Sep 13, 2007 8:58 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">Another problem is that the PAL NES has the frame IRQ that is not a little faster or a little slower than the VBlank like the NTSC NES, but it is just a whole lot faster than the VBlank, so it would need to re-synch very often (maybe each 4-5 frames or so).</div>
<br />This isn't true.  On both NTSC and PAL, frame IRQ's occur at (approximately) the same rate that NMI's occur (60Hz NTSC, 50Hz PAL).  Blargg verified this some time ago.
<br />
<br />That said, I strongly discourage the use of fram IRQ's (for any reason) because they aren't in sync with PPU timing.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Fri Sep 14, 2007 8:40 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">strangenesfreak wrote:</div><div class="quotecontent">Empire Strikes Back actually drives $4011 every scanline during gameplay without pausing or slowing down the game, but that might be because of there's very little enemies.</div><br />Which mapper is that? And how would anything drive $4011 during OAM DMA?<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Would $4011 sound channel mixing be more practical in puzzle or text/graphic adventure games where there's usually not as much action?</div>
<br />Possibly, but would $4011 mixing keep up with <a href="http://www.youtube.com/watch?v=jwC544Z37qo" class="postlink">this kind of puzzle game</a> or <a href="http://www.youtube.com/watch?v=U3dy5oOZp4Y" class="postlink">this kind of puzzle game</a>?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>strangenesfreak</b> [ Fri Sep 14, 2007 8:57 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">Which mapper is that? And how would anything drive $4011 during OAM DMA?</div><br />That game uses MMC3, but it doesn't use its IRQs for $4011.  Actually, it doesn't update $4011 during VBlank, sorry that I forgot to mention that.  None of the games I mentioned update $4011 during VBlank, only when the screen's rendering.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Possibly, but would $4011 mixing keep up with this kind of puzzle game or this kind of puzzle game?</div>
<br />I don't think $4011 mixing would work easily with complex puzzle games like Lumines, but it could work with simpler games like Tetris.  A bit off topic, but speaking of that Tetris video, woah, that guy is FAST.   <img src="./images/smilies/icon_eek.gif" alt=":shock:" title="Shocked" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Fri Sep 14, 2007 10:53 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Trying to play notes would probably result in crappy music like on the Game Boy Advance.</div>
<br />Exept that the NES CPU is abot 20 times less powerfull than the GBA one. In fact I doubt it would be possible to play simples on the NES with resampling&amp;cie without any co-processor on the cartridge, even if all action and screen stuff is completely paused.
<br />
<br />And of course it's possible to play samples AND keep action on the screen, HOWEVER the main programm has to regulary write to $4011 at mostly regular intervals, and this is a hard things to do, and would complex the whole game engine. I guess fighting games needs very low CPU usage, allowing the rest of the CPU time used for such things.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>strangenesfreak</b> [ Fri Sep 14, 2007 11:31 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />For $4011 mixing, assuming the gameplay can allow for it without too much difficulty, would it be plausible to mix drum beats (realistic or using sound waves) with simple wave channels (squares, triangles, saws, etc.) instead of realistic non-drum sound samples (guitar sounds, etc.)?  Would simple waves  sound better instead of realistic samples here?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Fri Sep 14, 2007 12:01 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Drums beats should be doable, as if their pitch is sligtly modulated it won't sound too bad. Simple wave channels or looped samples would sound bad anyway, because the pitch would be slightly modulated and sound fuzzy. Unless of course you can write to $4011 at EXACT intervals, which is almost impossible (unless you sacrify a lot of VBlank time for this).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Fri Sep 14, 2007 5:47 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />It's probably safer just to use DPCM for drums (and possibly bass if you're feeling especially Sunsoftish) and the 2A03 tone generators for anything pitched.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>strangenesfreak</b> [ Sat Sep 15, 2007 10:58 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />If one wanted to play DPCM samples during intense split-screen effect IRQs, would it be practical to read from the same samples converted from DPCM to RAW and update $4011, then determine where to continue the DPCM sample?  With this method, if it needs to be updated, DPCM would always be updated at the same time every frame.  Would it be alright if DPCM was temporarily disabled and then the sample is continued?

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>