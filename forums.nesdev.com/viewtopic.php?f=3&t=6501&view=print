<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Goal for this week: mapping a NES: Update with PPU probs</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Goal for this week: mapping a NES: Update with PPU probs</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=3&amp;t=6501">http://forums.nesdev.com/viewtopic.php?f=3&amp;t=6501</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>domlebo70</b> [ Thu Jun 17, 2010 12:26 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Goal for this week: mapping a NES: Update with PPU probs</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Hi guys, long time lurker here.
<br />
<br />Semester is over and I've decided I want to attempt to create a NES emulator. This is a serious goal, and I will hopefully blog my exploits.
<br />
<br />For this weeks goal, I would like to achieve the reading of a *.nes rom file, and copying the memory addresses so they'll be able to be manipulated later on. I have chosen C# as my language of choice, however this will probably change. My IMMEDIATE aim is to get a stranglehold on the 6502's architecture, it's memory representations and the basics. I'm not attempting any actual CPU emulation yet.
<br />
<br />Can anyone give me a few pointers? I realise this isn't a specific question, but I hoped people could just voice their thoughts on anything. Links, tutorials, blogs, other people in my situation are all helpful.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Thu Jun 17, 2010 6:07 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><!-- m --><a class="postlink" href="http://6502.org/">http://6502.org/</a><!-- m --> should get you started.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Banshaku</b> [ Thu Jun 17, 2010 6:23 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Tepples.. You didn't read is message at all. He just want to know how to take a nes rom file and map it in ram for later use. That site will not help him in that case.
<br />
<br />It's quite a vague question actually.  Before you can start to map it to memory, you will need to understand more about&#058;
<br />
<br />- the nes memory map
<br />- how mapper affect what inside the rom
<br />- how to interpret ines headers
<br />
<br />Reading the file for now will not do much good.  You need to understand more about the inner workings of the nes and mappers before it will make sense.
<br />
<br />My answer maybe vague as well in a way. People that have more experience with making emulator may be able to give you information on the subject.
<br />
<br />I would suggest to read the wiki content and understand more about the <a href="http://wiki.nesdev.com/w/index.php/CPU_memory_map" class="postlink">cpu memory map</a>.  This will still not be enough for what you want to do but it will already be a good start.
<br />
<br />I will let other more knowledgeable people fill the missing information.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>domlebo70</b> [ Thu Jun 17, 2010 6:44 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Well this afternoon I implemented a quick and dirty Chip8 emulator after following a tutorial. The tut was for C++, and I used python, so it wasn't as much help as I thought it would be. 
<br />
<br />Learnt a heap (had no prior assembly knowledge, and I feel i have a few of the concepts down pat). I managed to interpret the rom, store the hex data, and begin interpretation of the opcodes. So far I have around 10 opcodes done, but it's enough to display a few graphics on the screen. Python's parsing of hex numbers makes me want to rage. 
<br />
<br />I realise a 6502 is a big step up from a Chip8, but I'm feeling pretty good atm <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Thu Jun 17, 2010 6:57 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Banshaku wrote:</div><div class="quotecontent"><div class="quotetitle">tepples wrote:</div><div class="quotecontent"><div class="quotetitle">domlebo70 wrote:</div><div class="quotecontent">My IMMEDIATE aim is to get a stranglehold on the 6502's architecture</div><br /><!-- m --><a class="postlink" href="http://6502.org/">http://6502.org/</a><!-- m --> should get you started.</div><br />Tepples.. You didn't read is message at all.</div><br />I beg to differ.<br /><br /><div class="quotetitle">Banshaku wrote:</div><div class="quotecontent">He just want to know how to take a nes rom file and map it in ram for later use. That site will not help him in that case.</div>
<br />Good dumps of NES ROMs consist of a 16-byte header, a PRG ROM (the ROM connected to the CPU bus), and a CHR ROM (the ROM connected to the PPU bus).
<br />
<br />The first thing you need to worry about is <a href="http://wiki.nesdev.com/w/index.php/INES#.NES_format" class="postlink">the header</a>: <ul><li>Byte 0-3 should be 'N','E','S',0x1A </li><li>Byte 4 is the size of PRG ROM in 16384 byte units </li><li>Byte 5 is the size of CHR ROM in 8192 byte units; this can be 0 </li><li>Bytes 6 and 7 give more information about the circuit board, which controls (among other things) how the ROM is connected to the CPU </li></ul>
<br />If header bytes 6 and 7 are both less than 16, then the ROM uses mapper 0. This should have 16384 or 32768 bytes of PRG ROM (header[4] = 1 or 2) and 8192 bytes of CHR ROM (header[5] = 1). The first 16384 bytes of PRG ROM appear at $8000-$BFFF in the CPU's address space, and the last 16384 bytes appear at $C000-$FFFF. This means that if the PRG ROM is only 16384 bytes, it will be <a href="http://wiki.nesdev.com/w/index.php/Mirroring#Memory_Mirroring" class="postlink">mirrored</a> into both regions because the ROM chip is ignoring bit 14 of the address bus.
<br />
<br />So where do you start the CPU's program counter? It doesn't always start at the start of ROM ($8000 or $C000) as you might expect. When a 6502 is powered on or reset, it executes JMP ($FFFC): read $FFFC and put it in the low 8 bits of the program counter, then read $FFFD and put it in the high 8 bits.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Banshaku</b> [ Thu Jun 17, 2010 7:16 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Semester over, realistic goal for this week: mapping a 6</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Maybe my wording was too strong when I said "you didn't read" and should have been more diplomatic.
<br />
<br />This is what I meant:
<br />
<br /><div class="quotetitle">domlebo70 wrote:</div><div class="quotecontent">For this weeks goal, I would like to achieve the reading of a *.nes rom file, and copying the memory addresses so they'll be able to be manipulated later on. </div>
<br />
<br />If this is what he wants to do this week, he needs to learn more about the nes and files structure. After that, for his immediate goal, he will need to learn more about the 6502.  
<br />
<br />It just the reply felt dry by just putting a link to 6502.org for the answer. Sorry if my answer felt harsh, no direct attack intended.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dwedit</b> [ Thu Jun 17, 2010 7:46 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />If this is anything like an emulator, think about PRG banking early, don't bolt it on at the end, and don't even think about memcpy-style bankswitching.
<br />Mappers generally switch PRG in units as small as 8KB.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Disch</b> [ Thu Jun 17, 2010 7:50 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Dwedit wrote:</div><div class="quotecontent">If this is anything like an emulator, think about PRG banking early, don't bolt it on at the end, and don't even think about memcpy-style bankswitching.<br />Mappers generally switch PRG in units as small as 8KB.</div>
<br />
<br />If you want NSF support, you should even go as small as 4KB

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>domlebo70</b> [ Mon Jul 05, 2010 1:54 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Hi guys,
<br />
<br />Okay I have rudimentary CPU emulation working so far.
<br />
<br />However, like this guys=: <!-- m --><a class="postlink" href="http://nesdev.com/bbs/viewtopic.php?t=4891&amp;start=0">http://nesdev.com/bbs/viewtopi ... 91&amp;start=0</a><!-- m -->
<br />
<br />I'm a little confused as to how to start PPU emulation.
<br />
<br />I'm stuck looping from 800A to 800D (I assume I am waiting for VBLANK. But I don't really know where to go from here :S
<br />
<br />Any tips/links

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Mon Jul 05, 2010 5:31 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Just emulate PPUCTRL ($2000) D7 and PPUSTATUS ($2002) D7, and games will start to boot. (See <a href="http://wiki.nesdev.com/w/index.php/PPU_registers" class="postlink">PPU registers</a>.)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>domlebo70</b> [ Sat Jul 10, 2010 12:18 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Thanks tepples.
<br />
<br />Okay, so I have emulated the PPU 2000/2002 registers writing and reading.
<br />
<br />Now my execution looks like this:
<br />
<br /> <div class="codetitle"><b>Code:</b></div><div class="codecontent">8002: LDA #$10&nbsp; &nbsp; ; read immediate value to set PPU control registers <br />8004: STA $2000&nbsp; &nbsp;; store value <br />8007: LDX #$FF&nbsp; &nbsp; ; load immediate value into X register <br />8009: TXS&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; store X register into stack <br />800a: LDA $2002&nbsp; &nbsp;; read PPU flags into accumulator &#40;set N flag based on bit 7&#41; <br />800d: BPL&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; test N flag, branch to 800a if not positive, &#40;N is set&#41; <br />800a: LDA $2002&nbsp; &nbsp;; read PPU flags into accumulator &#40;set N flag based on bit 7&#41; <br />800d: BPL&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; test N flag, branch to 800a if not positive, &#40;N is set&#41; <br />00a: LDA $2002&nbsp; &nbsp;; read PPU flags into accumulator &#40;set N flag based on bit 7&#41; <br />800d: BPL&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; test N flag, branch to 800a if not positive, &#40;N is set&#41; <br />800a: LDA $2002&nbsp; &nbsp;; read PPU flags into accumulator &#40;set N flag based on bit 7&#41; <br />800d: BPL&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; test N flag, branch to 800a if not positive, &#40;N is set&#41; <br />800a: LDA $2002&nbsp; &nbsp;; read PPU flags into accumulator &#40;set N flag based on bit 7&#41; <br />800d: BPL&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; test N flag, branch to 800a if not positive, &#40;N is set&#41; <br />............... etc etc............<br />then:<br /><br />800F: LDA $2002&nbsp; &nbsp;; read PPU flags into accumulator &#40;set N flag based on bit 7&#41; <br />8012: BPL&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; test N flag, branch to 800F if not positive, &#40;N is set&#41; <br />8014: LDY&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; Loads a byte of memory into the Y register setting the zero and negative flags as appropriate. <br /></div>
<br />
<br />Now I was under the impression it's meant to loop from 800F to 8012 for 1 frame, like 800A to 800D. I've clearly missed something basic.
<br />
<br />Any ideas?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sat Jul 10, 2010 5:13 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Are you turning off NMI_occurred on reads? See <a href="http://wiki.nesdev.com/w/index.php/NMI#Operation" class="postlink">two flags and four operations</a>.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>domlebo70</b> [ Sat Jul 10, 2010 6:30 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Hmm, is that the correct behaviour though? I have the output from another working emulator and it's identical. Here's the output (for Super Mario Bros):
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">...etc<br />.......<br />.......<br />.......<br />800a<br />800d<br />800a<br />800d<br />800a<br />800d<br />800f<br />8012<br />8014<br />8016<br />8018<br />801b<br />801d<br />801f<br />8020<br />8020<br />8018<br />801b<br />801d<br />801f<br />8020<br />8020<br />8018<br />801b<br />etc...<br /></div>

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>