<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Another Final Fantasy question</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Another Final Fantasy question</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=1066">http://forums.nesdev.com/viewtopic.php?f=2&amp;t=1066</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>3</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Celius</b> [ Fri Feb 03, 2006 5:01 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Another Final Fantasy question</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I am currently working on a Final Fantasy project, and I was wondering about Final Fantasy's maps. Are they based on 2x2 meta tiles? Do they have different sizes? I'm really really concerned that I may not have enough space for maps, and I'm wondering how the other Final Fantasies work. Does anybody know how they conserve space? Like Final Fantasy 3 for instance? Any multiple size metatiles?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sat Feb 04, 2006 12:23 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />A lot of games use "object oriented" maps, where each element of the map has a type, x, y, width and height, and those are rendered into a metatile map in RAM before being drawn to the nametables. <em>Super Mario Bros.</em> uses a primitive version of this technique; <em>Super Mario Bros. 3</em> and <em>Super Mario World</em> implement it exactly as I just described it.
<br />
<br />As for games whose map structure is still a grid, <em>Pok√©mon</em> is said to use 32x32-pixel metatiles. <em>Sonic the Hedgehog 2</em> uses run-length encoding and 128x128-pixel (!) metatiles, which is acceptable because the player moves so fast that he or she doesn't see the repetition.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Sat Feb 04, 2006 7:17 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />All 8-bit Final Fantasy games (including Final Fantasy Legend and Adventure for game boy, even if they're not real FF games) works on 16x16 metatiles.
<br />The games probably use some trick to reduce the size of the maps. There is many compression algorithms, begining with RLE, that can easily shut the size down to 20% of the original one, and because they run with additionnal RAM, it is easy to use a lot of RAM to have all used maps decompressed in RAM.
<br />If you want to know more, try to reverse-engineere them to have a better idea of how they works.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Sat Feb 04, 2006 12:09 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent"><em>Sonic the Hedgehog 2</em> uses run-length encoding and 128x128-pixel (!) metatiles</div>
<br />These are indeed very large metatiles! But even with such large construction blocks they can pull levels that look much more interesting than the ones in the GBA <em>Sonic</em> games.
<br />
<br />I think they use some sort of LZ compression, not RLE. The whole level is decompressed to RAM at once, on level start. The 128x128 metatiles are made of 16x16-pixel metatiles though, not individual tiles. The SMS version of <em>Sonic 2</em> uses RLE compression and 32x32-pixel metatiles, that are placed directly in the levels. The levels are also fully decompressed to RAM when the level starts.
<br />
<br />Celius, I can't tell you how they do it in <em>Final Fantasy</em>. But if you want to have large maps you will most likely need to chose one of the following:
<br />
<br />1. object-based levels, where every screen starts empty and is filled with objects at specifyed positions, in RAM;
<br />2. grid-based with compression, where you decompress the screens to RAM as the player moves;
<br />3. grid-based with heavier indirection, as in the <em>Sonic</em> series, where you have more than 1 level of metatiles.
<br />
<br />For my current game I chose option 3, since that seems to be the only option that does not require extensive use of RAM. I use 16x16-pixel metatiles that are used to make 64x64-pixel metatiles that are used to make 256x256-pixel screens that are used to form the level. May seem complicated but allows for very large maps, needs no compression/decompression algorithms and needs no extra RAM, you can access everything directly from ROM.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Celius</b> [ Sat Feb 04, 2006 6:58 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Thank you all for that information. I have one question though.
<br />
<br /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">those are rendered into a metatile map in RAM before being drawn to the nametables</div><br /><br />Why is that? Why are they rendered into RAM before being drawn to name tables? I've always wondered why people say a map has to be decompressed before it can be compressed in RAM or something like that, I thought it was all nonsense. Why the heck does it have to be decompressed before compression? I think I may be translating this into my brain incorrectly. I really don't know what everyone's talking about. Will someone please clarify this?[/quote]

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sat Feb 04, 2006 7:28 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Celius wrote:</div><div class="quotecontent"><div class="quotetitle">tepples wrote:</div><div class="quotecontent">those are rendered into a metatile map in RAM before being drawn to the nametables</div><br />Why is that? Why are they rendered into RAM before being drawn to name tables?</div>
<br />Most general-purpose data compression schemes require data to be read out in strict sequence, such as from left to right and top to bottom. Arbitrary scrolling maps are specifically <em>not</em> read out in strict sequence; the RAM is used as a buffer to allow random access to inherently sequential data.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Sat Feb 04, 2006 7:29 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Celius wrote:</div><div class="quotecontent">Why is that? Why are they rendered into RAM before being drawn to name tables?</div>
<br />
<br />Because you draw ROWS and COLUMS of tiles to the name tables. If your map is not arranged in the form of rows and columns, as happens with grid maps but not with object based maps, you'll have a hard time translating that to rows and columns in real time.
<br />
<br />I don't know if you know that Celius, but when the screen scrolls, you only draw what is new, in the form or rows and columns. When your screens are compressed or arranged with objects, thare is no way you can read rows or columns from there unless you decompress/render them to RAM first, where the map will be arranged in the form of grids.
<br />
<br />You could render a non-grid map to the name tables IF you didn't use scrolling, since in that case you could just shut rendering off and take your time to draw all you want to the screen - object by object, or by full decompression of the compressed screen. But with scrolling, you only have time to draw a few rows and/or columns of tiles.
<br />
<br />Hope you understand.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Celius</b> [ Sat Feb 04, 2006 9:32 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">I don't know if you know that Celius, but when the screen scrolls, you only draw what is new, in the form or rows and columns.</div>
<br />
<br />I understand that, I believe I was translating it into my head incorrectly. I'm retarded, I thought people were talking about meta tiles for some reason. Like, for a one screen 16x15 map using 2x2 meta tiles, you had to have all 1024 bytes for each tile, instead of one byte for each 2x2 meta tile. Like decompressed meta tiles. I don't know. But what do you think would be a good way to do what you were talking about?
<br />
<br /> I think I'll try a few things, I should be able to come up with something. I'd be able to have about 64 maps + code in 1 16k PRG bank. So 1 8x8 screen grid in 1 bank, that's pretty good actually. And I don't know why people keep saying 2x2 meta tiles makes a 16x16 map, it doesn't. It makes a 16x15. I've counted. I only need $F0 bytes to fill a whole screen. Now that I think about it, I don't think it'll be THAT much space taken up. 
<br />
<br />So pretty much I'm just retarded. I think reading the columns will be the hardest part. Should I have the whole 8x8 screen grid is 1 big 1 dimensional array? Or should I have 64 seperate screens? I think the big array will be the better option, because reading columns will be alot easier. Thanks a bunch for your feedback. =)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Sun Feb 05, 2006 2:47 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">1. object-based levels, where every screen starts empty and is filled with objects at specifyed positions, in RAM;</div><br />I don't think this one is very good, at least not for an RPG. While space-efficient, it would be very limited and glitchy if you happen to superpose one object on another.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">2. grid-based with compression, where you decompress the screens to RAM as the player moves;</div><br />This is probably the best option for a RPG or a strategy game.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">3. grid-based with heavier indirection, as in the <em>Sonic</em> series, where you have more than 1 level of metatiles.</div>
<br />This will be better for platformers or shooters, where maps are larger and less detailed than with RPGs.
<br />
<br />For my current game (that is a action-adventure game) I use two levels of metatiles. I use maps of 8x6 blocks that are 32x32 pixels (the maps are compressed with a kind of RLE), then I use 16x16 metatiles (there is 4 of them in a 32x32 block) that contain tile graphics and collision properties. This works fine because it is an action-RPG so it needs less detail than a true RPG. However, in a real RPG you couldn't use that method because you need a lot of detail with houses, chests, etc...
<br />I hope I was clear enough.
<br />Celius, I definitely should make an univeral RPG map library available for anyone that want to make a 16x16 based RPG. I'd do that someday, but I have pretty much alot of work right now.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Celius</b> [ Sun Feb 05, 2006 3:04 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I am thinking of making a NES ROM map editor like the one I made, but for large 8x8 screen maps. But the bad thing is that it'd only be able to let you edit a 4x8 section, because RAM is only 8k, and 8x8 screens is 16k. So this is not good. I don't know how I could do this. I really wish I could have 1 big map. Oh, I still could, I'd just have to edit it like 4 screens verticly, and 8 screens horizontally. Then I'll just copy/paste the data from one, and combine it as the second half of the other. I don't know. I cannot make any C/C++ programs, that is out of the question. I will learn those sometime, but not soon.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Memblers</b> [ Sun Feb 05, 2006 3:15 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Metatile maps are smaller and will also probably compress better in some cases than 8x8 grid maps.  I don't think it's any harder to index metatiles (just run through each row/column twice, drawing half on each pass).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Sun Feb 05, 2006 9:15 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Celius, here is a quick tip to draw (to the name tables) metatiles in the form of rows or columns of tiles:
<br />
<br />Have the maps for the metatiles arranged in a non-sequential way. Reserve 4 pages (256 bytes) of ROM, so that one page represents the top left tile, the other page represents the top right tile, and so on. Then you can have access to any tile of the metatile just indexing with the metatile number.
<br />
<br />Then to draw a row of tiles, say, the top half of the metatiles, you'd do it like this:
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">LDA &#40;screenmap&#41;, Y 'load the metatile index<br />TAY 'put it in Y<br />LDA upleft, Y 'load upper left tile index<br />STA $2007 'write it<br />LDA upright, Y 'load upper right tile index<br />STA $2007 'write it<br /></div>Then you move to the next metatile.<br /><br />It will work you have maps for your metatiles, but I just remembered that you were using a format where you specified the index of the first tile the other 3 were the ones following the first, right?<br /><br />You can still draw a row just as easily. Like the previous example, say you want to draw the top half of the metatiles:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">LDA &#40;screenmap&#41;, Y 'load the metatile index<br />TAY 'put it in Y<br />STY $2007 'write the index of the top left tile<br />INY 'make it the index of the top right tile<br />STY $2007 'write it<br /></div>
<br />
<br />Or something like this. Hope you got the idea.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Celius</b> [ Sun Feb 05, 2006 3:20 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I'm sorry, I'm not calling you a bad explainer, but I dont' know what you mean. My format does this:
<br />
<br />meta tile index = $82
<br />
<br />This is what will appear on screen:
<br />
<br />$82,$83
<br />$92,$93
<br />
<br />If the variable Tile_Index is $82, and is processesed through my subroutine, then that is what will happen. It will show up as what I posted above. But why do you only show me like 3 writes to $2007? I don't know how this shows a column, or a row. Would you care to explain again? I don't get what you are saying when you are talking about the upper right/left corners. Sorry...

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Sun Feb 05, 2006 8:48 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Celius wrote:</div><div class="quotecontent">If the variable Tile_Index is $82, and is processesed through my subroutine, then that is what will happen.</div><br />Where? In your level editor? You'll probably have to write faster code for the game itself. I'd suggest you have metatile $82 be composed by tiles $82, $83, $84 and $85 just for simplicity. You can write faster code if you do it like this. You must be doing it the way you do so that you can easily view the blocks when you use a pattern table viewer, right? Please don't bother with that if it will slow down your code.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">But why do you only show me like 3 writes to $2007?</div><br />Because I showed you how to render 1 metatile only. It is up to you to build the rendering code around that. I don't know if you're gonna make a loop, or have it unrolled... so I showed you how to render only 1, and you repeat that as you'd like.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I don't get what you are saying when you are talking about the upper right/left corners.</div>
<br />Your metatile is composed by 4 tiles: the upper left one (0), the upper right one (1), the lower left one (2) and the lower right one (3). Like this:
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">0 1<br />2 3<br /></div>
<br />
<br />When you're copying rows of tiles to the name tables, you have PPU increments set to 1, then you'll be drawing either tiles 0 and 1 or 2 and 3. Remember, rows. If you're rendering columns, with PPU increments set to 32, you'll be drawing either tiles 0 and 2 or tiles 1 and 3.
<br />
<br />The code I showed you before wrote tile 0 and then tile 1. You'll have to build the other 3 versions of that, or figure out a way to use the same routine for all 4 cases.
<br />
<br />Anyway, you'll be running through all the metatiles in the row and/or column to be drawn, writing the 2 tiles of it that interest you, depending on whether you're drawing a row or a column, and if it's the first or second half of it.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sun Feb 05, 2006 9:21 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent"><div class="quotetitle">Celius wrote:</div><div class="quotecontent">If the variable Tile_Index is $82, and is processesed through my subroutine, then that is what will happen.</div><br />Where? In your level editor? You'll probably have to write faster code for the game itself. I'd suggest you have metatile $82 be composed by tiles $82, $83, $84 and $85 just for simplicity.</div><br />I'd suggest<br />$84 $86<br />$85 $87<br />which would let you use the same tile data for backgrounds and 8x16 sprites. However, if you don't run your metatiles through a lookup table, you're going to have problems with solid-color sky metatiles taking up 4 tiles in your pattern table instead of 1.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">You can write faster code if you do it like this. You must be doing it the way you do so that you can easily view the blocks when you use a pattern table viewer, right? Please don't bother with that if it will slow down your code.</div>
<br />If you have a pattern table viewer or editor that supports 8x16 sprites, such as the tile view of 8TED, then the layout I proposed will still look fine.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>3</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>