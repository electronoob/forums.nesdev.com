<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=2&amp;t=3805" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2008-08-20T11:35:27-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=2&amp;t=3805</id>
<entry>
<author><name><![CDATA[Celius]]></name></author>
<updated>2007-12-30T20:44:36-07:00</updated>
<published>2007-12-30T20:44:36-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3805&amp;p=29954#p29954</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3805&amp;p=29954#p29954"/>
<title type="html"><![CDATA[nameless label styles:  x816 vs. ca65]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3805&amp;p=29954#p29954"><![CDATA[
<div class="quotetitle">Disch wrote:</div><div class="quotecontent"><br />Considering cheap @local labels are functionally very similar to x816 style "nameless" or "reusable" labels... perhaps I should leave x816 style labels out and just go with ca65's style?<br /></div><br /><br />If you want to make it an extremely comfortable assembler, you could do both. It would be nice to have more flexibility. But if nothing else, I'd go with ca65's type of nameless lables.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=138">Celius</a> — Sun Dec 30, 2007 8:44 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Disch]]></name></author>
<updated>2007-12-30T17:03:32-07:00</updated>
<published>2007-12-30T17:03:32-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3805&amp;p=29941#p29941</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3805&amp;p=29941#p29941"/>
<title type="html"><![CDATA[nameless label styles:  x816 vs. ca65]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3805&amp;p=29941#p29941"><![CDATA[
re:  brackets used as long indirection on 65816:<br /><br />I brainfarted on this and totally forgot they had this use on 65816.  I hadn't considered making this a 65816 assembler... but should I ever decide on that in the future it'd be good to avoid things like this that will cause headaches.<br /><br />I suppose I could use some other form of encapsulation symbol for expressions.  Maybe {curly braces}?  That seems kind of iffy.  I can't use &lt;&gt; because those have other meanings and can't be overloaded this way, and if brackets and parenthesis are both taken by indirection... I'm running out of options.<br /><br />Maybe I'm overthinking this.  Complex expressions are somewhat of a rarity -- at least from the code I've seen and written.  In that event curly braces ought to do just fine.<br /><br />-----------------<br /><br />cheap @local labels are already something I've considered and decided to go with.  .SCOPE and .PROC are something I haven't really considered.  At least not initially.  Personally I'd like to omit them from at least the initial version and maybe add them later.  They don't seem like a high priority feature to me.<br /><br />-----------------<br /><br />I'm still kicking around macro ideas.  I'll probably go with something similar but not quite as advanced as ca65's setup.  Some of its features seem a little <em>too</em> extravagent... at least for a first version.<br /><br /><br /><br />I appreciate all the input, everyone.<br /><br /><br /><br />EDIT<br /><br /><br />Considering cheap @local labels are functionally very similar to x816 style "nameless" or "reusable" labels... perhaps I should leave x816 style labels out and just go with ca65's style?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=33">Disch</a> — Sun Dec 30, 2007 5:03 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2007-12-30T14:44:19-07:00</updated>
<published>2007-12-30T14:44:19-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3805&amp;p=29939#p29939</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3805&amp;p=29939#p29939"/>
<title type="html"><![CDATA[nameless label styles:  x816 vs. ca65]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3805&amp;p=29939#p29939"><![CDATA[
<div class="quotetitle">loopy wrote:</div><div class="quotecontent"><br />(edit) Here, "nameless" is a misnomer, maybe "reusable" is more appropriate..<br /></div><br />"Reusable" is a good word for discussing the underlying concept here. I don't use CA65's nameless labels much in my own code now that I've discovered its two other useful layers of local labels. Here, I explain @ labels and scoped ordinary labels.<br /><br />CA65's <a href="http://www.cc65.org/doc/ca65-6.html#ss6.2" class="postlink">cheap local labels</a> (also called @ labels), of the form '@here' and '@there', roughly correspond to x816's labels '+here' and '-there'. An @ label is visible only between one ordinary label and the next. Here, the two labels '@inner' are distinct because the ordinary label 'clearRAM' separates them:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">clearNametable:<br />  lda #0<br />  tay<br />  ldx #4<br />  @inner:<br />    sta $2007<br />    sta $2007<br />    sta $2007<br />    sta $2007<br />    iny<br />    bne @inner<br />  rts<br /><br />clearRAM:<br />  lda #0<br />  tax<br />  @inner:<br />    sta $00,x<br />    sta $300,x<br />    sta $400,x<br />    sta $500,x<br />    sta $600,x<br />    inx<br />    bne @inner<br />  rts<br /></div><br />An ordinary label can be made visible only inside the scope of a single procedure by wrapping the procedure in a .proc block. Here, the two labels 'inner' are distinct, called 'clearNametable::inner' and 'clearRAM::inner':<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">.proc clearNametable<br />  lda #0<br />  tay<br />  inner:<br />    sta $2007<br />    sta $2007<br />    sta $2007<br />    sta $2007<br />    iny<br />    bne inner<br />  rts<br />.endproc<br /><br />.proc clearRAM<br />  lda #0<br />  tax<br />  inner:<br />    sta $00,x<br />    sta $300,x<br />    sta $400,x<br />    sta $500,x<br />    sta $600,x<br />    inx<br />    bne inner<br />  rts<br />.endproc<br /></div><br /><br /><div class="quotetitle">Disch wrote:</div><div class="quotecontent"><br />Another thing that was a minor beef with nesasm for me was it's use of brackets for indirection instead of traditional parenthesis. Instead it used parenthesis for expresson evaluation. I can see how this would become an issue if you used parenthesis for both:<br />[...]<br />I thought about having a set of rules to dictate whether or not the parenthesis were in fact part of an expression or whether they were used to indicate indirection<br /></div><br />I can't find anything in the CA65 manual that explains the algorithm that CA65 uses to distinguish these. But as far as I can tell, if the entire operand in a CA65 expression is one single parenthesized expression, CA65 treats it as indirection. Otherwise, CA65 treats it as absolute. Yes, this breaks C-style preprocessor macros, which employ parentheses to separate arguments and results from the precedence system, but CA65 has a <a href="http://www.cc65.org/doc/ca65-11.html" class="postlink">richer macro syntax</a> than C.<br /><br /><div class="quotetitle">Celius wrote:</div><div class="quotecontent"><br />Parenthesis are good for real 6502 instructions, and brackets are good for expressions.<br /></div><br />I thought parentheses vs. brackets were for distinguishing a 16-bit "near" address from a 24-bit "far" address on the 65C816. Because CA65 assembles both 6502 and 65C816 code, it has more need of such an algorithm.<br /><br /><div class="quotetitle">Celius wrote:</div><div class="quotecontent"><br />And it's also best to describe by the definition of the nameless lable why the code will jump to that point<br /></div><br />Based on the elaborate comments you give with these labels, it might be better to summarize the comment into a cheap local label, such as '@notWithinX' in CA65 or '+notWithinX' in x816.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Sun Dec 30, 2007 2:44 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Celius]]></name></author>
<updated>2007-12-30T13:21:49-07:00</updated>
<published>2007-12-30T13:21:49-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3805&amp;p=29936#p29936</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3805&amp;p=29936#p29936"/>
<title type="html"><![CDATA[nameless label styles:  x816 vs. ca65]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3805&amp;p=29936#p29936"><![CDATA[
<div class="quotetitle">Disch wrote:</div><div class="quotecontent"><br />Though I'll do it reverse from nesasm (parenthesis <em>should</em> be for indirection since that's how they're used virtually everywhere else).  So brackets would be used for expressions.  Plus using indirecton (from my experience) is much more common than complex expressions that require parenthesis<br /><br />Thoughts/opinions?<br /></div><br /><br />This is a good idea. Parenthesis are good for real 6502 instructions, and brackets are good for expressions. This would be good to seperate them like that so you could have an easier time debugging.<br /><br />As for nameless lables, and lack of readability, that's what comments are for. I personally like to write comments as if I'm talking to someone who's never looked at the code. I describe what the code is doing, how it translates into understandable concepts, and how the routine will have effect on the grand scheme of things. And it's also best to describe by the definition of the nameless lable why the code will jump to that point, and where it will have come from. Like so:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">RoutineA:<br />lda $xx<br />beq +<br />bmi ++<br />             ;we will be here if bit seven is not set, and the number is not equal to 0.<br />+           ;This lable defines what will happen if the variable tested in RoutineA ends up being equal to zero<br /> blah code<br />++<br />              ;This lable defines the location what will happen if bit 7 of the variable tested in RoutineA is set.<br /> blah code<br /></div><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=138">Celius</a> — Sun Dec 30, 2007 1:21 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[loopy]]></name></author>
<updated>2008-08-20T11:35:27-07:00</updated>
<published>2007-12-30T13:06:21-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3805&amp;p=29933#p29933</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3805&amp;p=29933#p29933"/>
<title type="html"><![CDATA[nameless label styles:  x816 vs. ca65]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3805&amp;p=29933#p29933"><![CDATA[
<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4">loopy</a> — Sun Dec 30, 2007 1:06 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Celius]]></name></author>
<updated>2007-12-30T13:03:59-07:00</updated>
<published>2007-12-30T13:03:59-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3805&amp;p=29932#p29932</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3805&amp;p=29932#p29932"/>
<title type="html"><![CDATA[nameless label styles:  x816 vs. ca65]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3805&amp;p=29932#p29932"><![CDATA[
WLA-DX does the nameless lables like x816 seems to do. I am really used to this method because I use WLA-DX, but it seems that ca65's method would be alot better, because every lable is the same. <br /><br />In WLA, all the assembler does is it finds the nearest "++" lable and uses that as the destination. It doesn't matter if there's not a "+" lable before it. I actually like that. But I think the :+/:- would be better, since you wouldn't have to actually name the lables "+" or "-".<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=138">Celius</a> — Sun Dec 30, 2007 1:03 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Disch]]></name></author>
<updated>2007-12-30T12:55:07-07:00</updated>
<published>2007-12-30T12:55:07-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3805&amp;p=29931#p29931</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3805&amp;p=29931#p29931"/>
<title type="html"><![CDATA[nameless label styles:  x816 vs. ca65]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3805&amp;p=29931#p29931"><![CDATA[
That's interesting.  I may adopt that as well.<br /><br /><br />Another thing that was a minor beef with nesasm for me was it's use of brackets for indirection instead of traditional parenthesis.  Instead it used parenthesis for expresson evaluation.  I can see how this would become an issue if you used parenthesis for both:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">LDA &#40;zing+5&#41;,Y<br /></div><br /><br />Is that Absolute Y with parenthesis to enclose the expression?  Or is it Indirect Y?<br /><br />I thought about having a set of rules to dictate whether or not the parenthesis were in fact part of an expression or whether they were used to indicate indirection... but I think that's a bit overkill.  Considering the complexity it would involve and that it would ultimately confuse people and cause hard to find assembly errors... I think I'm going to take the nesasm approach and simply use brackets for one and parenthesis for the other.<br /><br />Though I'll do it reverse from nesasm (parenthesis <em>should</em> be for indirection since that's how they're used virtually everywhere else).  So brackets would be used for expressions.  Plus using indirecton (from my experience) is much more common than complex expressions that require parenthesis<br /><br />Thoughts/opinions?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=33">Disch</a> — Sun Dec 30, 2007 12:55 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[loopy]]></name></author>
<updated>2008-08-20T11:35:07-07:00</updated>
<published>2007-12-30T12:47:38-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3805&amp;p=29929#p29929</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3805&amp;p=29929#p29929"/>
<title type="html"><![CDATA[Re: nameless label styles:  x816 vs. ca65]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3805&amp;p=29929#p29929"><![CDATA[
<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4">loopy</a> — Sun Dec 30, 2007 12:47 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[kyuusaku]]></name></author>
<updated>2007-12-30T12:12:40-07:00</updated>
<published>2007-12-30T12:12:40-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3805&amp;p=29928#p29928</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3805&amp;p=29928#p29928"/>
<title type="html"><![CDATA[nameless label styles:  x816 vs. ca65]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3805&amp;p=29928#p29928"><![CDATA[
I think BNE ++ can only jump to ++. The point is just to not have to come up with names, not to be flexible.<br /><br />I like this notation that AFAIK, no assembler uses:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">: something else<br />: NOP<br />  LDA somewhere<br />  BEQ +1<br />    DEC something<br />    BNE -1<br />  LDA somewhere<br />  CMP something<br />  BEQ +2<br />  BNE -2<br />: RTS<br />: something else</div><br /><br />I really don't like the idea of "BEQ ++++++" and generally the less I have to type the better for me.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=20">kyuusaku</a> — Sun Dec 30, 2007 12:12 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Disch]]></name></author>
<updated>2007-12-30T11:18:36-07:00</updated>
<published>2007-12-30T11:18:36-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3805&amp;p=29925#p29925</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3805&amp;p=29925#p29925"/>
<title type="html"><![CDATA[nameless label styles:  x816 vs. ca65]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3805&amp;p=29925#p29925"><![CDATA[
x816 does nameless labels with + and - as label names, then jumps to them with "BNE +" or "BNE -".  Example:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">- NOP<br />  LDA somewhere<br />  BEQ +<br />    DEC something<br />    BNE -<br />+ RTS<br /></div><br /><br /><br />ca65 uses : for all nameless lables, and jumps to them with "BNE :+" or "BNE :-".  Example (would assemble to same as above, but ca65 style):<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">: NOP<br />  LDA somewhere<br />  BEQ :+<br />    DEC something<br />    BNE :-<br />: RTS<br /></div><br /><br />ca65's system just makes <span style="text-decoration: underline"><strong><em>so</em></strong></span> much more sense to me personally...  yet I seem to see x816's style more often.  Which method is generally more preferred by the users here?<br /><br />I ask because with the recent heat surrounding nesasm and my own boredom I've started looking into making a little assembler of my own.  Since the above styles' syntax are not mutually exclusive, I've considered having both of them in the assembler, which I think would be ideal.  But I'm <em>still</em> not 100% sure how x816 style works.<br /><br />can a "BNE +" jump to a "++" label?  I mean like....<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">    LDA blah<br />    BNE +<br />    JSR routine<br />++   DEC somewhere<br />+    INC somewhereelse<br />    RTS<br /></div><br /><br />would that BNE jump to the DEC or the INC?  If the DEC, then why do you need the double ++?  And if the INC, then why bother with nameless labels when they're not really nameless (in a sense, the number of +'s becomes the name)?<br /><br />It just confuses me.  But I know a lot of people prefer it.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=33">Disch</a> — Sun Dec 30, 2007 11:18 am</p><hr />
]]></content>
</entry>
</feed>