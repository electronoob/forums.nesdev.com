<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=2&amp;t=6719" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2010-07-31T04:37:10-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=2&amp;t=6719</id>
<entry>
<author><name><![CDATA[Wave]]></name></author>
<updated>2010-07-31T04:37:10-07:00</updated>
<published>2010-07-31T04:37:10-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6719&amp;p=65234#p65234</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6719&amp;p=65234#p65234"/>
<title type="html"><![CDATA[A better way to scramble the sprites for flickering]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6719&amp;p=65234#p65234"><![CDATA[
I do object reversing + random OAM start address + advance OAM in 7 entries each frame<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4116">Wave</a> — Sat Jul 31, 2010 4:37 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Drag]]></name></author>
<updated>2010-07-30T15:14:46-07:00</updated>
<published>2010-07-30T15:14:46-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6719&amp;p=65206#p65206</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6719&amp;p=65206#p65206"/>
<title type="html"><![CDATA[A better way to scramble the sprites for flickering]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6719&amp;p=65206#p65206"><![CDATA[
Split your OAM into two partitions, where one partition has the OAM shuffling performed on it, and the other partition doesn't.<br /><br />Have the non-shuffling OAM have priority over the shuffling OAM.<br /><br />With this method, you can maintain a little more control over sprite priority.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=21">Drag</a> — Fri Jul 30, 2010 3:14 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Dwedit]]></name></author>
<updated>2010-07-30T10:48:24-07:00</updated>
<published>2010-07-30T10:48:24-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6719&amp;p=65181#p65181</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6719&amp;p=65181#p65181"/>
<title type="html"><![CDATA[A better way to scramble the sprites for flickering]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6719&amp;p=65181#p65181"><![CDATA[
The really easy way to do OAM cycling:<br />Whenever you add a sprite to the list, advance 9 sprites (36 bytes).<br />If after adding a sprite, you end up at the start position, you have transferred 64 sprites, so that's a good time to stop.  That's just an 8 bit comparison.<br />You can also advance the start position by one sprite (4 bytes) every frame.<br /><br />Only downside to this method is that you lose any form of sprite priority.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=53">Dwedit</a> — Fri Jul 30, 2010 10:48 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2010-07-30T08:30:38-07:00</updated>
<published>2010-07-30T08:30:38-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6719&amp;p=65169#p65169</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6719&amp;p=65169#p65169"/>
<title type="html"><![CDATA[A better way to scramble the sprites for flickering]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6719&amp;p=65169#p65169"><![CDATA[
Having the player see the most recent shot at all times is important for visual feedback to reinforce the connection between the fire button and the shots. So I'd recommend always putting Timmy and the first shot first, and then mixing the other two shots with enemies. Skip through enemies by threes or fives, and cycle through them starting at 0, 1, and 2, or 0, 2, 4, 1, 3.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Fri Jul 30, 2010 8:30 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2010-07-30T08:03:59-07:00</updated>
<published>2010-07-30T08:03:59-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6719&amp;p=65168#p65168</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6719&amp;p=65168#p65168"/>
<title type="html"><![CDATA[A better way to scramble the sprites for flickering]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6719&amp;p=65168#p65168"><![CDATA[
I process all my objects (including the main character) in (pseudo)random order. I get a number from my PRNG and use it to make the index of the first object to process, and then I add some odd number to it (like 7) after each object is done (wrapping back when necessary). It is simple and has worked well so far, but I don't know if that would work well for everybody.<br /><br />I decided to "randomize" objects rather than individual sprites because I need to be able to stack sprites, I must have some control over their priorities, and this way I full control of the priorities of each object's sprites.<br /><br />For controlling the priority between different objects I have created 2 virtual layers, and objects that must be on top are rendered to the lower end of the OAM (closer to 0) and low priority ones are rendered to the upper end of the OAM (closer to 63). The OAM gets full when/if both lists meet (although I should let high priority sprites overwrite low priority ones I guess).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Fri Jul 30, 2010 8:03 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Sivak]]></name></author>
<updated>2010-07-30T07:50:35-07:00</updated>
<published>2010-07-30T07:50:35-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6719&amp;p=65167#p65167</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6719&amp;p=65167#p65167"/>
<title type="html"><![CDATA[A better way to scramble the sprites for flickering]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6719&amp;p=65167#p65167"><![CDATA[
So, I'm wanting to put enemies into the game soon.  In BK1, the way I did the flickering was like this:<br /><br />Had a thing that got EOR'd each frame.  Basically, it made it go like this in terms of sprite order:<br />0 - Timmy, Timmy's shots, all enemies in sequential order<br />1 - All enemies, Timmy, Timmy's shots<br /><br />The main problem with the sequential order is if things get stacked, something will always be invisible.<br /><br />I was thinking of keeping the routines for drawing stored in memory and then using the EOR'd memory to go to a secondary routine that'd read them in in a different order...  for instance, it might go like this:<br />0 - Timmy, shots, enemies #1-16<br />1 - Enemies 16-1, Timmy, shots<br /><br />Does this approach sound reasonable?  Thanks.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3374">Sivak</a> — Fri Jul 30, 2010 7:50 am</p><hr />
]]></content>
</entry>
</feed>