<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - A note to all NES-emulator authors: ROM header wishlist</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">A note to all NES-emulator authors: ROM header wishlist</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=3&amp;t=10183">http://forums.nesdev.com/viewtopic.php?f=3&amp;t=10183</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>4</strong> of <strong>8</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>proxy</b> [ Mon Jun 24, 2013 4:26 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: A note to all NES-emulator authors..</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Occasionally I think about the state of the .NES 2.0 header. And while it seems like it would work, it also feels like a kluge.<br /><br />I know that there is probably no chance of this idea being adopted, and that people (including myself) wouldn't be thrilled with &quot;yet another NES header.&quot;<br /><br />Regardless, I feel like it's better to at least get the idea out there, feel free to shoot it down (but please, provide reasons so it can be a learning discussion).<br /><br />Given the current state of NES format, and the strong desire for backwards compatibility, here's what I would consider ideal.<br /><br />A structure which looks like this:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">struct {<br />&nbsp; &nbsp; uint32_t magic;<br />&nbsp; &nbsp; uint32_t checksum;<br />&nbsp; &nbsp; uint32_t version;<br />&nbsp; &nbsp; // ... followed by all the data deemed useful by the community.<br />};</div><br /><br />and can be located <strong>anywhere</strong> within the file, but probably the end of the file for maximum compatibility. Here's the concept:<br /><br />When loading a ROM, you search the file for a magic value. If I were implementing this standard, I would enforce that it must be on a 4-byte boundary so make the search efficient. If found, you read the version number (so you know the size of the structure) and the checksum.  Then you CRC what you found. If that matches the checksum, <strong>this is your header</strong>, you can just ignore the iNES 1.0 header entirely from that point forward.<br /><br />There are several benefits to this approach:<br /><br />* 100% backwards compatible, should not break old emulators<br />* easy to apply to existing ROMs, you just append it to the ROM file.<br />* versioned, so we can add new fields as the community strives for more and more accurate emulation.<br />* because it can be located anywhere, it's size is not limited. So if a new version wants to add some new bytes to the structure, it's trivial to do so.<br />* provides an opportunity to recreate the structure in a more sane way (no more munging together bit fields to create values). For example, I would just a uint16_t for mapper numbers, I would use a full uint32_t for PRG and CHR sizes (but with the standard spelling out how to handle non-power of 2 sizes).<br /><br />The only counter argument I can foresee at the moment is &quot;the loading is relatively complicated in comparison to just &quot;read the first 16 bytes and parse.&quot; My counter argument to that is that iNES 1.0 already is fairly complex to parse correctly as it has been tweaked over time and requires mashing together bit fields for things like mapper numbers and such. This becomes even more complex as iNES 2.0 comes into play. When comparing the two schemes, a simple linear search followed by a checksum is pretty simple when compared to the bit fiddling currently needed to handle things correctly.<br /><br />Thoughts?<br />proxy

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>byuu</b> [ Mon Jun 24, 2013 7:58 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: A note to all NES-emulator authors..</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Only because you asked for feedback ...<br /><br />&gt; and can be located anywhere within the file<br /><br />What if two tags appear in the same file? Some emulators will invariably go with the first, others with the last, regardless of what you say in the specification.<br /><br />&gt; I would enforce that it must be on a 4-byte boundary so make the search efficient.<br /><br />Other emulators would happily ignore this, and then homebrew makers would ignore it, and then you'd look like the broken implementation for enforcing this rule.<br /><br />&gt; 100% backwards compatible, should not break old emulators<br /><br />You have to insert the data somewhere into existing ROMs. If you put it at the end, you will most certainly break some emulators that rely on file sizes instead of header info. Eg one might say &quot;read iNES PRG ROM size, and assume CHR ROM size == remaining file size.&quot;<br /><br />Remember that there are more NES emulators than there are cars. If it can be done, it's been done <img src="./images/smilies/icon_razz.gif" alt=":P" title="Razz" /><br /><br />&gt; easy to apply to existing ROMs, you just append it to the ROM file.<br /><br />Breaks checksums of files, breaks existing emulator CRC32 lookups.<br /><br />&gt; versioned, so we can add new fields as the community strives for more and more accurate emulation.<br /><br />Versioning creates as many problems as it solves. But for something like this, I don't see much choice. Especially when everyone keeps insisting on non-extensible data formats.<br /><br />&gt; because it can be located anywhere, it's size is not limited. So if a new version wants to add some new bytes to the structure, it's trivial to do so.<br /><br />The header should just specify the packet size.<br /><br />...<br /><br />Anyway, please don't be disheartened in the critiques. Always fun to hear new ideas!<br /><br />My favorite part of your idea is that it could be embedded in new homebrew, while still keeping the PRG/CHR size exactly right. That would truly be 100% seamless with existing emulators.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>proxy</b> [ Tue Jun 25, 2013 6:44 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: A note to all NES-emulator authors..</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">byuu wrote:</div><div class="quotecontent">Only because you asked for feedback ...</div><br /><br />I did, and it is always appreciated. You thought of some things which I hadn't, which is a good thing <img src="./images/smilies/icon_smile.gif" alt=":-)" title="Smile" />. I do have some responses though.<br /><br /><div class="quotetitle">byuu wrote:</div><div class="quotecontent">&gt; and can be located anywhere within the file<br />What if two tags appear in the same file? Some emulators will invariably go with the first, others with the last, regardless of what you say in the specification.<br /></div><br /><br />That would have to be addressed on a spec level. First matched tag seems reasonable to me as it would be the easiest for an author to implement. Also, it's what other similar specifications have done (multiboot, ACPI tables, etc) with much success.<br /><br />With any spec, there is a reasonable expectation and requirement for people to follow it for it to be useful. While it is true that some people will of course not follow it correctly. I could say the same thing about <strong>any spec</strong>, even iNES 1.0 and 2.0. People could easily choose to interpret some bits the wrong way and not play the game correctly.<br /><br />There is a silver lining though, most (if not all) NES emulator authors are members of this forum, so it is at least possible to get the majority of emulators on board with doing it right, which is enough for it to work.<br /><br /><div class="quotetitle">byuu wrote:</div><div class="quotecontent">&gt; I would enforce that it must be on a 4-byte boundary so make the search efficient.<br />Other emulators would happily ignore this, and then homebrew makers would ignore it, and then you'd look like the broken implementation for enforcing this rule.<br /></div><br /><br />Good point, I would have hoped that anyone trying this spec out would do it right, but definitely some people would not.  Fortunately, that is nothing more than an optimization which could be dropped. Any alignment would work, just doing it by uint32_t's make it 4 times faster to locate it.<br /><br /><div class="quotetitle">byuu wrote:</div><div class="quotecontent">&gt; 100% backwards compatible, should not break old emulators<br />You have to insert the data somewhere into existing ROMs. If you put it at the end, you will most certainly break some emulators that rely on file sizes instead of header info. Eg one might say &quot;read iNES PRG ROM size, and assume CHR ROM size == remaining file size.&quot;<br /></div><br /><br />Interesting point. I know that GoodNES hashing everything after the first 16 bytes, so it would be effected (that's how it determines overdumps). It's a problem, but, I don't think it's a major problem, here's why:<br /><br />#1 it is no different as far as these emulators are concerned from an overdump, there is just some extra data at the end.<br />#2 emulators which ignore the iNES headers and use hashes instead are fairly new and likely still in development to some degree, so we could work with the authors to get it right.<br />#3 truly legacy emulators (i mean the ones from the 90's) definitely rely on the iNES 1.0 header, so they won't be effected.<br />#4 every emulator which makes decisions based on hashes would be insane not to fall back on iNES headers if there isn't a match found. That's what would happen here. It's not perfect, but most games are playable under those conditions. <br />#5 taking into consideration point #4, those same emulators would have to continually update there database of checksums to keep up with new releases or they risk not being able to play new dumps/home brews. If they are keeping up, they can either add these new &quot;overdumps&quot;, or update there emulator to handle it more gracefully.<br />#6 regarding  &quot;read iNES PRG ROM size, and assume CHR ROM size == remaining file size.&quot;, that's interesting, and certainly <strong>someone</strong> has done it. But the resultant CHR ROM size wouldn't be a valid size (not a multiple of 8192). So they would pretty much have to truncate it since they would not have a whole page at the end.<br />#7 I have a (admitadly stalled) &quot;Open GoodNES&quot; project which aims to be an open source / open DB  alternative GoodNES. This may be a good reason to resume work on it!<br /><br /><div class="quotetitle">byuu wrote:</div><div class="quotecontent">&gt; easy to apply to existing ROMs, you just append it to the ROM file.<br />Breaks checksums of files, breaks existing emulator CRC32 lookups.<br /></div><br /><br />This is pretty much the same as the previous point.<br /><br /><div class="quotetitle">byuu wrote:</div><div class="quotecontent">&gt; versioned, so we can add new fields as the community strives for more and more accurate emulation.<br />Versioning creates as many problems as it solves. But for something like this, I don't see much choice. Especially when everyone keeps insisting on non-extensible data formats.<br /></div><br /><br />Agreed, I think it's necessary, but can be done carefully to make it easy to get right.<br /><br /><div class="quotetitle">byuu wrote:</div><div class="quotecontent">&gt; because it can be located anywhere, it's size is not limited. So if a new version wants to add some new bytes to the structure, it's trivial to do so.<br />The header should just specify the packet size.<br /></div><br /><br />Agreed! Now that I think of it, it should be done similar to Microsoft APIs. Size <strong>is</strong> the version. The structure should have a size field instead of a version field. And you simply never remove fields, only append to the end (potentially deprecating previous ones). This has worked for almost 30 years and if there is one thing they succeed at, it's maintaining compatibility with older versions of there API.<br /><br />All in all, you make some good critiques, but I don't think any of them would be deal breakers. The need is not to get <strong>every</strong> emulator to do it right, but only the most popular ones. The rest will follow suite if that happens.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Sik</b> [ Tue Jun 25, 2013 5:50 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: A note to all NES-emulator authors..</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I'm surprised byuu didn't ask what would happen if the game itself happens to have something in it that matches the tag starting the metadata. That's pretty much guaranteed to break everything. Heck, it could even be used to ensure emulators can't run the ROMs properly.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>zzo38</b> [ Tue Jun 25, 2013 6:22 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: A note to all NES-emulator authors..</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Sik wrote:</div><div class="quotecontent">I'm surprised byuu didn't ask what would happen if the game itself happens to have something in it that matches the tag starting the metadata. That's pretty much guaranteed to break everything. Heck, it could even be used to ensure emulators can't run the ROMs properly.</div>That is why I hate this way of doing it. If more header is needed to be added to NES 2.0 (such as to make NES 2.3 or to make NES 3.0), then add a header extension table address field in the header. However I also think many things don't need to be included in the ROM image file, and probably everything that does need to be included is already a part of NES 2.0, so this won't be necessary at all.<br /><br />I recommend that you never use the database of checksums to determine the file if the header is NES 2.0 format (as indicated by the version bits). Probably best is don't use it at all unless the user enables and loads the database anyways. NES 2.0 headers should always be assumed correct.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>etabeta</b> [ Tue Jun 25, 2013 10:48 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: A note to all NES-emulator authors..</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Sik wrote:</div><div class="quotecontent">I'm surprised byuu didn't ask what would happen if the game itself happens to have something in it that matches the tag starting the metadata. That's pretty much guaranteed to break everything. Heck, it could even be used to ensure emulators can't run the ROMs properly.</div><br /><br />I agree that this is the biggest issue with proxy's suggestion (much more than a dev stupidly assuming that he can ignore the CHR size in the header, when the format explicitly requires it for a reason <img src="./images/smilies/icon_wink.gif" alt=";)" title="Wink" />  and for the record any Vimm lair overdump would fail in such an emu as well, since that website was appending a 0x10 watermark on its roms, based on the fact that the format only specifies the PRG/CHR chunks and not the whole rom size, so you can load larger files without most emu even noticing it)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>etabeta</b> [ Tue Jun 25, 2013 11:10 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: A note to all NES-emulator authors..</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">zzo38 wrote:</div><div class="quotecontent">I recommend that you never use the database of checksums to determine the file if the header is NES 2.0 format (as indicated by the version bits). Probably best is don't use it at all unless the user enables and loads the database anyways. NES 2.0 headers should always be assumed correct.</div><br /><br />MESS took a more radical approach, actually. We prefer users to adopt for non-homebrew entries separate PRG and CHR files, so that we can throw in the wc and flush away headers (both correct and incorrect), and rely only on the database. Given that years of attempts to spread correct headers have proven useless because most users don't even want to know what headers are and why they need a correct one for the games to work, why not to remove entirely the problem and just have to handle good and bad dumps? <img src="./images/smilies/icon_wink.gif" alt=";)" title="Wink" /><br /><br />iNES is of course fine for homebrew, because one hopes the creator has setup the parameters correct, but for the rest...<br /><br />I ensure you that we still get reports of people asking why half of their nointro set does not load in MESS, just because they downloaded it in 6 years ago when the set was first built and distributed by website *without* any headers<br />and people ask why these can't just load like SNES, GB and MD roms (but at least to this I can't reply to check their Atari Lynx and Atari 7800 romsets which have the same problem with headers <img src="./images/smilies/icon_wink.gif" alt=";)" title="Wink" /> )

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>zzo38</b> [ Tue Jun 25, 2013 11:43 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: A note to all NES-emulator authors..</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">etabeta wrote:</div><div class="quotecontent">MESS took a more radical approach, actually. We prefer users to adopt for non-homebrew entries separate PRG and CHR files, so that we can throw in the wc and flush away headers (both correct and incorrect), and rely only on the database. Given that years of attempts to spread correct headers have proven useless because most users don't even want to know what headers are and why they need a correct one for the games to work, why not to remove entirely the problem and just have to handle good and bad dumps?</div>Well, I suppose you could have an emulator to do this if you want to, but if you take this approach, you should probably do the following:<ul><li>Make the database external to the executable but in the same directory and provided with the emulator.</li><li>Provide information about the database format in order to convert between iNES format and separate PRG/CHR format; you could also provide an extra program to do this.</li><li>If the database includes the relevant information, also allow .NES.INI file to be created from an entry in the database; this could be done by the same program as the one to convert to/from iNES.</li></ul><br />Although doing it your way is OK if you want to, I don't like that way; I think that that the user ought to understand these things when downloading a bad dump or if they are dumping a cartridge they own by themself, to know what the correct settings are (there is bootgod database to help with this).<br /><br />Note that GameBoy ROMs already include headers; if you copy it from a cartridge the header will already be there, because Nintendo put them there!

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>etabeta</b> [ Wed Jun 26, 2013 1:17 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: A note to all NES-emulator authors..</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">zzo38 wrote:</div><div class="quotecontent">[*]Make the database external to the executable but in the same directory and provided with the emulator.<br />[*]Provide information about the database format in order to convert between iNES format and separate PRG/CHR format; you could also provide an extra program to do this.<br />[*]If the database includes the relevant information, also allow .NES.INI file to be created from an entry in the database; this could be done by the same program as the one to convert to/from iNES.[/list]</div><br /><br />about the first 2 points, did you ever attempt to make a search about MESS before posting? <img src="./images/smilies/icon_wink.gif" alt=";)" title="Wink" /><br />the database is already external, and in xml format (so one can rely on existing parsers to read info from it)<br />it also was announced to the community long ago: <!-- l --><a class="postlink-local" href="http://forums.nesdev.com/viewtopic.php?f=3&amp;t=6558">viewtopic.php?f=3&amp;t=6558</a><!-- l --> and everyone is free to use any info from it whenever they like (even if I'd appreciate people to acknowledge the source of info and share back any fix)<br />the updated address for the db is: <!-- m --><a class="postlink" href="http://git.redump.net/mame/tree/hash/nes.xml">http://git.redump.net/mame/tree/hash/nes.xml</a><!-- m --><br /><br />same goes for the info in all the other databases we include with MESS: <!-- m --><a class="postlink" href="http://git.redump.net/mame/tree/hash/">http://git.redump.net/mame/tree/hash/</a><!-- m -->  (non-NES lists still lack proper documentation of controllers that can be used with a given game, but it will be added in due time)<br /><br /><br />about the 3rd point: I've been toying for a couple of years with the idea of adding support for a per-game xml file but we are back to the header point... despite trying for a few years, we never succeeded having people to fix headers in they roms, why should they now add an xml (or bml or ini or whatever additional file) to their roms? how would you force them to do that?<br /><br /><br /><br /><div class="quotetitle">zzo38 wrote:</div><div class="quotecontent">Note that GameBoy ROMs already include headers; if you copy it from a cartridge the header will already be there, because Nintendo put them there!</div><br /><br />you might want to re-read my previous post. all the cases I mentioned (NES, Lynx and A7800) use a format which is not a straight dump from the carts, but rely on bits added by the dumper (or the emu author) in order to setup mappings of the ROM inside the emu memory. As such, even if you get a perfect dump from a cart you own, you cannot use it in emus which don't use hash databases because the binary dump does not contain the mapping data needed for emulation (and typically you blame emulators, not without a point)<br />OTOH, of course GB roms have an header too, but it's part of the original binary you extract from the cart so it has not to be added (artificially) by whoever spreads the dumps and does not confuse users...

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>zzo38</b> [ Wed Jun 26, 2013 2:12 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: A note to all NES-emulator authors..</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">etabeta wrote:</div><div class="quotecontent">about the first 2 points, did you ever attempt to make a search about MESS before posting? ;)<br />the database is already external, and in xml format (so one can rely on existing parsers to read info from it)<br />it also was announced to the community long ago: <!-- l --><a class="postlink-local" href="http://forums.nesdev.com/viewtopic.php?f=3&amp;t=6558">viewtopic.php?f=3&amp;t=6558</a><!-- l --> and everyone is free to use any info from it whenever they like (even if I'd appreciate people to acknowledge the source of info and share back any fix)</div>That is good idea; thanks.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">about the 3rd point: I've been toying for a couple of years with the idea of adding support for a per-game xml file but we are back to the header point... despite trying for a few years, we never succeeded having people to fix headers in they roms, why should they now add an xml (or bml or ini or whatever additional file) to their roms? how would you force them to do that?</div>In my case the .NES.INI contains only optional information; the game should work without it. The information in the INI might be used to display a title, make a simpler cartridge (or at least give you more options) than what is specified in the iNES header, automatically select the correct input device, dynamically optimize the emulator, add enhancements for the game, use for querying in a database, etc. It is not a requirement. (My own released .NES files include a .NES.INI too, and no programs currently read them; that is perfectly fine. My format is meant to be completely optional on both ends (I am not trying to <em>force</em> anyone to do anything).)<br /><br />I also suppose that you could use XSLT and XQuery to convert the database entries into an individual XML file for each game if you want to, and if you find such things useful; I also suppose that it would be possible to convert some of the data in such a file to/from .NES format and .NES.INI format, since much of it is the information in the NES 2.0 header while some (such as the <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">&lt;feature name=&quot;peripheral&quot;&gt;</tt> command) corresponds to things in the .NES.INI format.<br /><br />Note that although I like to have the PRG and CHR ROM and header and stuff in one iNES file, I would rather have the disk images in a separate file for each side (I have decided to give these files the .QDI extension so you don't confuse them with .FDS files that have all disk sides in one file), so that you can write-protect them individually, make copies of the disks, use FDS software that can write files on other disks (maybe no commercial FDS games do this, but homebrew software might), etc.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><div class="quotetitle">zzo38 wrote:</div><div class="quotecontent">Note that GameBoy ROMs already include headers; if you copy it from a cartridge the header will already be there, because Nintendo put them there!</div><br /><br />you might want to re-read my previous post. all the cases I mentioned (NES, Lynx and A7800) use a format which is not a straight dump from the carts, but rely on bits added by the dumper (or the emu author) in order to setup mappings of the ROM inside the emu memory. As such, even if you get a perfect dump from a cart you own, you cannot use it in emus which don't use hash databases because the binary dump does not contain the mapping data needed for emulation (and typically you blame emulators, not without a point)<br />OTOH, of course GB roms have an header too, but it's part of the original binary you extract from the cart so it has not to be added (artificially) by whoever spreads the dumps and does not confuse users...</div>I don't know about Lynx and A7800, but OK I understand you.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>proxy</b> [ Wed Jun 26, 2013 5:13 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: A note to all NES-emulator authors..</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Sik wrote:</div><div class="quotecontent">I'm surprised byuu didn't ask what would happen if the game itself happens to have something in it that matches the tag starting the metadata. That's pretty much guaranteed to break everything. Heck, it could even be used to ensure emulators can't run the ROMs properly.</div><br /><br />If it were just the magic which had to be correct you'd have a point. But that's why there are 3 things which need to match.  The uint32_t magic value, the uint32_t size value AND the uint32_t checksum. That's a total number of values = 2^96, which makes it have 1/79,228,162,514,300,000,000,000,000,000 odds of happening by random chance.<br /><br /><strong>Many</strong> standards have used this approach before with great success. And these aren't minor standards they are things like:<br /><br />* Multiboot - What GRUB uses to load Linux and other OSes<br />* ACPI - What the OS uses to identify the power management features of your OS are[/list]<br /><br />There are actually tons of systems which use this &quot;taged packet with a checksum&quot; approach. While it is not literally impossible for there to be a collision, it is quite close to it. Your odds of getting a CRC32 collision on the ROM's PRG/CHR themselves in a database lookup are FAR greater.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Wed Jun 26, 2013 11:05 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: A note to all NES-emulator authors..</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">byuu wrote:</div><div class="quotecontent"><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">and can be located anywhere within the file</div><br />What if two tags appear in the same file? Some emulators will invariably go with the first, others with the last, regardless of what you say in the specification.</div><br />Two tags each with valid checksums? That'd be pretty tricky to make work, might even be like trying to create a file that gives a certain hash.<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"> I would enforce that it must be on a 4-byte boundary so make the search efficient.</div><br />Other emulators would happily ignore this, and then homebrew makers would ignore it, and then you'd look like the broken implementation for enforcing this rule.</div><br />Plus we're talking hundred-K files. Premature optimization here.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">My favorite part of your idea is that it could be embedded in new homebrew, while still keeping the PRG/CHR size exactly right. That would truly be 100% seamless with existing emulators.</div><br />Excellent point. Existing ROM sets have the problem more or less solved, through databases and headers. New ones can't rely on databases, and iNES handling isn't fully consistent or thorough. New ones can have this in their ROM data.<br /><div class="quotetitle">proxy wrote:</div><div class="quotecontent">If it were just the magic which had to be correct you'd have a point. But that's why there are 3 things which need to match. The uint32_t magic value, the uint32_t size value AND the uint32_t checksum. That's a total number of values = 2^96, which makes it have 1/79,228,162,514,300,000,000,000,000,000 odds of happening by random chance.</div><br />The size value will mostly be a small value with its upper and lower bits clear. The values being matched are also not distributed evenly, with things like 0x00 and 0xFF being more common than others. A while back I did an analysis of NES ROMs and found certain three- and four-byte sequences that were drastically less likely than others. I used this in choosing a three-byte magic value for the bootloader format.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>proxy</b> [ Wed Jun 26, 2013 11:49 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: A note to all NES-emulator authors..</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">blargg wrote:</div><div class="quotecontent"><div class="quotetitle">byuu wrote:</div><div class="quotecontent"><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">and can be located anywhere within the file</div><br />What if two tags appear in the same file? Some emulators will invariably go with the first, others with the last, regardless of what you say in the specification.</div><br />Two tags each with valid checksums? That'd be pretty tricky to make work, might even be like trying to create a file that gives a certain hash.<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"> I would enforce that it must be on a 4-byte boundary so make the search efficient.</div><br />Other emulators would happily ignore this, and then homebrew makers would ignore it, and then you'd look like the broken implementation for enforcing this rule.</div><br />Plus we're talking hundred-K files. Premature optimization here.<br /></div><br /><br />Yea, the two tags thing, the odds of it happening by random are astronomical. The only way I could see it happening is if tools fail to check for an existing one before applying a new one. Which like i said, the spec could just say &quot;Use the first&quot;. The second one would do no harm.<br /><br />I Agreed about the alignment requirement. While nice in concept when thinking in terms of efficiency, it is simply not needed and only really serves to be something which be done wrong. I would be happy to ditch that part <img src="./images/smilies/icon_smile.gif" alt=":-)" title="Smile" />.<br /><br /><div class="quotetitle">blargg wrote:</div><div class="quotecontent"><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">My favorite part of your idea is that it could be embedded in new homebrew, while still keeping the PRG/CHR size exactly right. That would truly be 100% seamless with existing emulators.</div><br />Excellent point. Existing ROM sets have the problem more or less solved, through databases and headers. New ones can't rely on databases, and iNES handling isn't fully consistent or thorough. New ones can have this in their ROM data.<br /></div><br /><br />I hadn't thought about that, and I like that perspective. Having it as part of all new ROMs would be completely harmless since they won't be in any DBs anyway. Only serves as extra information for any emulators which choose to implement this kind of standard. After that addition of old ROMs could happen at any pace depending on adoption.<br /><br />Though I do feel that the database lookup issue is not as bad as it sounds. Ever emulator I've ever seen will at least fall back on built in headers if the ROM isn't in the DB. And that will work for almost all games.<br /><br /><div class="quotetitle">blargg wrote:</div><div class="quotecontent"><div class="quotetitle">proxy wrote:</div><div class="quotecontent">If it were just the magic which had to be correct you'd have a point. But that's why there are 3 things which need to match. The uint32_t magic value, the uint32_t size value AND the uint32_t checksum. That's a total number of values = 2^96, which makes it have 1/79,228,162,514,300,000,000,000,000,000 odds of happening by random chance.</div><br />The size value will mostly be a small value with its upper and lower bits clear. The values being matched are also not distributed evenly, with things like 0x00 and 0xFF being more common than others. A while back I did an analysis of NES ROMs and found certain three- and four-byte sequences that were drastically less likely than others. I used this in choosing a three-byte magic value for the bootloader format.</div><br /><br />Fair enough, the odds aren't quire  1/(2^96) due to non-linear distributions. Picking a good magic value is certainly important. Additionally to improve unqueness, there are several equally viable options.<br /><br />* make the magic value bigger.<br />* have a magic footer value too at the end of the structure.<br /><br />Either one of these would be very effective in ensuring no collisions. And like I mentioned earlier, the odds of a CRC32 collision on PRG/CHR hashes is already FAR more likely and that doesn't seem to be an issue.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Wed Jun 26, 2013 12:57 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: A note to all NES-emulator authors..</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">proxy wrote:</div><div class="quotecontent">Yea, the two tags thing, the odds of it happening by random are astronomical. The only way I could see it happening is if tools fail to check for an existing one before applying a new one. Which like i said, the spec could just say &quot;Use the first&quot;. The second one would do no harm.</div><br />I think the only concern would be utilities, but a utility adding a second one without checking for the first would be fine since the checksum for the first would almost surely be wrong afterwards. Thus there would only be one valid tag in the file. Even a malicious utility would have to somehow have both checksums correct, which like I mentioned is very tricky, since modifying one changes the correct value for the other.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Sik</b> [ Wed Jun 26, 2013 1:20 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: A note to all NES-emulator authors..</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">proxy wrote:</div><div class="quotecontent">If it were just the magic which had to be correct you'd have a point. But that's why there are 3 things which need to match.  The uint32_t magic value, the uint32_t size value AND the uint32_t checksum. That's a total number of values = 2^96, which makes it have 1/79,228,162,514,300,000,000,000,000,000 odds of happening by random chance.</div><br />That still doesn't prevent the &quot;fake header on purpose&quot; issue.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>4</strong> of <strong>8</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>