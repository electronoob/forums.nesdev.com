<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - So, how does the NES access all that memory?</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">So, how does the NES access all that memory?</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=10&amp;t=116">http://forums.nesdev.com/viewtopic.php?f=10&amp;t=116</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>DoomedNewbie</b> [ Wed Dec 22, 2004 11:20 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>So, how does the NES access all that memory?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Hey, I'm a newbie mudling through trying to write an emulator as a learning exercise and this has me a little confused.  Since the NES's addressing is only 16 bits, how does it access any memory outside the first 64 KB?  I understand it has to change pages (or banks if you like that term better), but how?  I checked all the 6502 opcodes but couldn't find anything there.  I know this probably has a really simple answer, but bare with me - I'm a newbie.  Thanks in advance.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Thu Dec 23, 2004 12:16 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Mappers.
<br />
<br />The cart places writable registers somewhere in the $4018-$FFFF range, and these registers control the upper address lines of the program and graphics ROMs, effectively "turning the page" so to speak. The easiest to understand are UNROM/UOROM (iNES mapper #2) and CNROM (iNES mapper #3).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Memblers</b> [ Thu Dec 23, 2004 12:22 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />If you know how binary numbers work, then you'll know how adding just one more address bit would double the possible amount.
<br />
<br />And because the NES doesn't have enough address bits to hook up to a ROM larger than 32kB, we just add more hardware so the NES can write to a cartridge to control those extra bits.
<br />
<br />The CPU doesn't know the difference, it'll just be running whatever bank it currently 'sees'.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>DoomedNewbie</b> [ Thu Dec 23, 2004 1:12 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />So, the different mappers just define more of those "special" memory registers that, when written to, change the current page?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>J2</b> [ Thu Dec 23, 2004 2:57 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Yep. Theres plenty of different mappers too , each with their own "style" of "changing pages"/bankswitching.
<br />
<br />It's real simple when you think about it. The "mappers" just control the higher address lines depending on what is stored in one of the certain addresses that it uses (each mapper having different registers (memory addresses)). Usually the registers arn't just 1 certain memory address = current page, unless it's a complex IC. 
<br />
<br />UNROM boards (NES games have board names, which correspond to their mapper + other specifications) have a chip that stores whatevers in the lowest 3 bits (D0-D2), if the address written to is $8000-$FFFF (PRG /CE = 1, this = 1 because it means it's accessing the PRG Address Bus (and it does that whenever the memory address is $8000-$FFFF). It then uses the value that stored in the chip and ORs it (using another chip) with A14 which mean if A14 = 0 then the values the other chip had (the bank number) is passed onto the PRG rom chip (and changing those values changes what the CPU "sees.") If you understand binary it becomes really simple.
<br />
<br />
<br />In other words. you load a value into the right register/s, and depending on the mapper, it will switch the current bank that the CPU "sees" depending on what the cpu is "looking at." Each mapper is different so you'll just have to read the docs + mappers can do much more than increase the memory size, you may want to look into that too.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>DoomedNewbie</b> [ Thu Dec 23, 2004 4:16 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Thanks!

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>