<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=3&amp;t=10694" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2013-11-16T17:25:40-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=3&amp;t=10694</id>
<entry>
<author><name><![CDATA[ArsonIzer]]></name></author>
<updated>2013-11-16T17:25:40-07:00</updated>
<published>2013-11-16T17:25:40-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10694&amp;p=121021#p121021</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10694&amp;p=121021#p121021"/>
<title type="html"><![CDATA[Re: When does the 6502 CPU cycle?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10694&amp;p=121021#p121021"><![CDATA[
I suppose so. I haven't seen these things before in any other 6502 documentation. It's nice to know though, because that information made my CPU core a step closer to the real deal ^^<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6075">ArsonIzer</a> — Sat Nov 16, 2013 5:25 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2013-11-16T16:50:16-07:00</updated>
<published>2013-11-16T16:50:16-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10694&amp;p=121019#p121019</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10694&amp;p=121019#p121019"/>
<title type="html"><![CDATA[Re: When does the 6502 CPU cycle?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10694&amp;p=121019#p121019"><![CDATA[
Yeah, the entities in the bus-level description are typically not visible at the architectural level (e.g. ADH, ADL).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Sat Nov 16, 2013 4:50 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[ArsonIzer]]></name></author>
<updated>2013-11-16T14:52:44-07:00</updated>
<published>2013-11-16T14:52:44-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10694&amp;p=121014#p121014</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10694&amp;p=121014#p121014"/>
<title type="html"><![CDATA[Re: When does the 6502 CPU cycle?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10694&amp;p=121014#p121014"><![CDATA[
<div class="quotetitle">blargg wrote:</div><div class="quotecontent"><br />The 6502's 8-bit adder has a carry output for multi-byte operations. The address calculation logic examines this after adding the low byte and index register to determine whether a page crossing occurred and it needs to increment the high byte and redo the access.<br /></div><br /><br />Ah, so we're not talking about the same carry as in the 6502's processor status register. Good to know, I was confused as to what the heck the carry flag had anything to do with this operation. Thanks.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6075">ArsonIzer</a> — Sat Nov 16, 2013 2:52 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2013-11-16T11:45:20-07:00</updated>
<published>2013-11-16T11:45:20-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10694&amp;p=120999#p120999</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10694&amp;p=120999#p120999"/>
<title type="html"><![CDATA[Re: When does the 6502 CPU cycle?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10694&amp;p=120999#p120999"><![CDATA[
The 6502's 8-bit adder has a carry output for multi-byte operations. The address calculation logic examines this after adding the low byte and index register to determine whether a page crossing occurred and it needs to increment the high byte and redo the access.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Sat Nov 16, 2013 11:45 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[ArsonIzer]]></name></author>
<updated>2013-11-16T08:48:15-07:00</updated>
<published>2013-11-16T08:48:15-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10694&amp;p=120977#p120977</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10694&amp;p=120977#p120977"/>
<title type="html"><![CDATA[Re: When does the 6502 CPU cycle?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10694&amp;p=120977#p120977"><![CDATA[
Never mind. <br /><br />There's a very handy document (<a href="http://users.telenet.be/kim1-6502/6502/hwman.html#AA" class="postlink">http://users.telenet.be/kim1-6502/6502/hwman.html#AA</a>) which describes exactly for which operations in combination with certain addressing modes a dummy read/write happens (appendix A). In the case of ASL, a dummy write happens after the data is read, i.e. the same data which is read is written back to memory without alteration. <br /><br />Just for the people who didn't know (doubtful, but still).<br /><br />Anyway, this still leaves me with a question, if I may put it in the same thread which is only partially related: <br /><br />The aforementioned document (appendix A, page 4, section 2.5) speaks of this: <br /><br />&quot;Carry is 0 or 1 as required from previous add operation&quot;<br /><br />What does this imply? I get that for some operations, when a page boundary is crossed, a previous read will be discarded as faulty, and a new read will be done, making the discarded read effectively a dummy read. The thing I just don't get is what the carry has to do with it. Can anyone answer this for me?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6075">ArsonIzer</a> — Sat Nov 16, 2013 8:48 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[ArsonIzer]]></name></author>
<updated>2013-11-16T04:40:59-07:00</updated>
<published>2013-11-16T04:40:59-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10694&amp;p=120975#p120975</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10694&amp;p=120975#p120975"/>
<title type="html"><![CDATA[When does the 6502 CPU cycle?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10694&amp;p=120975#p120975"><![CDATA[
I'm halfway-ish done making my PPU cycle-specific, but I'm still wondering when the CPU needs to let the PPU cycle 3 times. Basically, what I have right now, is that the PPU's tick() method (basically just calls cycle() 3x) is called in: <br /><br />- CPU's memory.read method<br />- CPU's memory.write method<br />- Whenever an additional cycle is required when branching/page crossing<br /><br />Now, I have implemented dummy memory.reads to get that extra cycle in 1-byte operations, which makes sense. The things that confuse me are instructions like Zero Page ASL (OP $06) because they require 5 cycles, and here is what I might be misunderstanding (or not): <br /><br />- Cycle 1: Fetching OP from PC (check)<br />- Cycle 2: Fetching zero page address from PC + 1 (check)<br />- Cycle 3: Fetching data from zero page address (check)<br />- Cycle 4: Writing altered data back to memory (check)<br />- Cycle 5: ??????? (not check)<br /><br />Now, if I had to guess, this 5th cycle would actually be the 4th cycle (so between the above mentioned cycle 3 and 4), and basically this cycle is where all the shifting and flag checking would happen. If that's the case, then my (Java) code looks something like this:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">public void executeInstruction() { <br />    int op = memory.read(PC++); //CPU cycles once, PPU cycles 3 times<br />..... //something something something<br />    switch(op) { <br />.....<br />    case 0x06: //ASL with zero page addressing<br />        asl(getZeroAddress());<br />        break;<br />.....<br />}<br /><br />.....<br />.....<br />.....<br /><br />public void asl(int address) { <br />    int data = memory.read(address); //CPU cycles once, PPU cycles 3 times<br />    data &lt;&lt;= 1;<br />    checkCarry(data);<br />    checkZero(data);<br />    checkSign(data);<br />    data &amp;= 0xFF;<br />    ppu.tick(); //CPU cycled once, let the PPU cycle 3 times<br />    memory.write(address, data); //CPU cycles once, PPU cycles 3 times<br />}<br />.....<br />.....<br />.....<br />public int getZeroAddress() { <br />    return memory.read(PC++); //CPU cycles once, PPU cycles 3 times<br />}</div><br /><br />Is this correct, or am I misunderstanding something?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6075">ArsonIzer</a> — Sat Nov 16, 2013 4:40 am</p><hr />
]]></content>
</entry>
</feed>