<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - NES Programming Blog</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">NES Programming Blog</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=13676">http://forums.nesdev.com/viewtopic.php?f=2&amp;t=13676</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>5</strong> of <strong>7</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Diskover</b> [ Sun Mar 06, 2016 2:23 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: NES Programming Blog</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">dougeff wrote:</div><div class="quotecontent">Without the source code, I won't be able to figure it out. Clearly, 2 incorrect spites are appearing.<br /><br />Have the linker make a label file. Find the address of the label that handles sprites. Set a breakpoint in the FCEUX for execution at that address (at the same time it happens). Step through the code, and see what numbers are being loaded to the Sprite area of RAM. <br /><br />Or, review that RAM in the hex editor tool, and see the exact address of the strange sprite. Set a breakpoint for writes to that RAM area, and try to figure out where those numbers are coming from.<br /><br />Learning to debug is an important lesson. I spend at least 25% of my time fixing bugs.</div><br /><br />Ok, sorry for the inconvenience. And I detected the fault. Upon update the sprite, the FOR performed it four times instead of one. Why did that bug.<br /><br />Thank you for your explanations. There are things that I find hard to understand, but I try to move on. I look much your example to find solutions, and as you see, for now it seems that everything works fine.<br /><br />What do you like my alpha 0.08? This afternoon add weapon selection on the menu.<br /><br />And a technical question is it better to have a single function with many instructions or have multiple functions with separate instructions? For example, in the function movi_logic() I store the movement of all: player, enemies menu arrow, weapons, etc ... would it be better to give a movement function separately to each thing? Does it affect the performance?<br /><br />UPDATE: I have already managed to make a functional menu, and then select to catch and weapon.<br /><!-- m --><a class="postlink" href="https://dl.dropboxusercontent.com/u/31966385/NES%20demos/juego%20alpha%200.09c.nes">https://dl.dropboxusercontent.com/u/319 ... 00.09c.nes</a><!-- m --><br /><br />Spanish:<br />Ok, perdona por la molestia. Ya detecté el fallo. Al hacer el update del sprite, el FOR lo realizaba cuatro veces en vez de una. Por eso daba ese error.<br /><br />Gracias por tus explicaciones. Hay cosas que me resultan difíciles de entender, pero me esfuerzo por seguir adelante. Miro mucho tus ejemplo para buscar soluciones, y como ves, por ahora parece que todo funciona bien.<br /><br />¿Que te a parecido mi alpha 0.08? Esta tarde añadiré la selección de armas en el menú.<br /><br />Y una pregunta técnica ¿es mejor tener una sola función con muchas instrucciones o tener varias funciones con instrucciones separadas? Por ejemplo, en la función movi_logic almaceno el movimiento de TODO: player, enemigos, flecha del menu, armas, etc... ¿seria mejor dar una funcion de movimiento separada a cada cosa? ¿afecta al rendimiento?<br /><br />UPDATE: Ya he conseguido hacer un menú funcional, y poder coger y luego seleccionar arma.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Sun Mar 06, 2016 8:58 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: NES Programming Blog</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Diskover wrote:</div><div class="quotecontent">And a technical question is it better to have a single function with many instructions or have multiple functions with separate instructions? For example, in the function movi_logic() I store the movement of all: player, enemies menu arrow, weapons, etc ... would it be better to give a movement function separately to each thing? Does it affect the performance?</div><br />It's generally easier and more organized to isolate tasks as much as possible. There is an impact on performance, since each function call needs at least 12 cycles more than inlined code, because of the JSR and the RTS, plus whatever time is needed to handle parameters, return values and such, but depending on the overall complexity of the game, that might not even make a difference.<br /><br />I suggest you try to make things as organized as you can, so the code is easy to maintain. Use whatever structure you're most comfortable working with. Then later on, IF<br />you detect any performance issues, you do something about it.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>na_th_an</b> [ Sun Mar 06, 2016 2:31 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: NES Programming Blog</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />cc65 needs inline functions. That would make code both readable and fast in those cases you are using functions that will be called just once in your code (just for organization). I've coded some stuff for the SEGA 8-bit consoles in SDCC and inline functions, which that compiler supports, are a great feature.<br /><br />In my case, I use a dirty trick (dirty, dirty) if I want to keep things organized but I don't want to spend cycles calling functions (for example, when packing up small tasks from NMI to sprite 0 collision detection for splits): I just put the code to another file and use a #include in the main. This is ugly C code, but it does the job <em>for me</em>.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp;switch (ent) {<br />&nbsp; &nbsp;&nbsp; &nbsp;case 1:<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;#include &quot;enems_linear.h&quot;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;break;<br />&nbsp; &nbsp;&nbsp; &nbsp;case 2:<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;#include &quot;enems_gyrosaw.h&quot;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;break;<br />&nbsp; &nbsp;&nbsp; &nbsp;case 3:<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;#include &quot;enems_buzzer.h&quot;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;break;<br />&nbsp; &nbsp;&nbsp; &nbsp;case 4:<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;#include &quot;enems_pezon.h&quot;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;break;<br />&nbsp; &nbsp;&nbsp; &nbsp;case 5:<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;#include &quot;enems_fanty.h&quot;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;break;<br />&nbsp; &nbsp;&nbsp; &nbsp;case 6: <br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;#include &quot;enems_bloco.h&quot;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;break;<br />&nbsp; &nbsp;&nbsp; &nbsp;case 7:<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;#include &quot;enems_final_frog.h&quot;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;break;<br />&nbsp; &nbsp;}</div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Sun Mar 06, 2016 2:42 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: NES Programming Blog</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />You can use a preprocessor macro (#define) as a substitute for inline functions. It's also handy for unrolling loops.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>DRW</b> [ Sun Mar 06, 2016 2:54 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: NES Programming Blog</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Edit: rainwarror was faster.<br /><br />Yeah, inline functions would be good here.<br /><br />Because for every called sub routine, the assembly code uses a JSR and an RTS. But writing everything in one function could become hard to read.<br /><br />However, as a workaround, you can use macros:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">#define MovePlayer()\<br />do\<br />{\<br />&nbsp; &nbsp; Task1();\<br />&nbsp; &nbsp; Task2();\<br />}\<br />while (0)</div><br /><br />The <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">do while &#40;0&#41;</tt> is done, so that you don't run into problems in this situation:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">if (a == 3)<br />&nbsp; &nbsp; MovePlayer();<br />else<br />&nbsp; &nbsp; SomethingElse();</div><br /><br />If you didn't have the <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">do while &#40;0&#41;</tt>, the compiler would complain because of the semicolon since the macro would be translated to this:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">if (a == 3)<br />{<br />&nbsp; &nbsp; Task1();<br />&nbsp; &nbsp; Task2();<br />}; /* &lt;-- Error if followed by an else. */<br />else<br />&nbsp; &nbsp; SomethingElse();</div><br /><br />So, you would be forced to write:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">if (a == 3)<br />&nbsp; &nbsp; MovePlayer()<br />else<br />&nbsp; &nbsp; SomethingElse();</div><br />which doesn't look good.<br />That's why <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">do while &#40;0&#41;</tt> is the best. (It doesn't add anything to the compiled code. Both versions would create exactly the same output.)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>na_th_an</b> [ Sun Mar 06, 2016 3:14 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: NES Programming Blog</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I use defines it for simple functions I want to inline and of course to unroll loops, but the syntax has its caveats and it's a bit ugly, so when the function is complex, it can be a PITA to maintain if it's writen as a define. That's why I use the #include hack for longer, more complex functions I'd rather inline.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>DRW</b> [ Sun Mar 06, 2016 4:30 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: NES Programming Blog</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I would say if the function is really complex, then an additional JSR, RTS won't really make a difference.<br /><br />That's why I have a whole bunch of MoveCharacter functions (one for each different type of character) which are only used in one location in the whole program.<br />So, yes, the algorithms could be written directly since the functions are not resuable.<br />And yes, using a macro for these long functions would look really ugly.<br />So, I just use a regular function and call it a day. That's four additional JSR, RTS per frame. If the game will ever lag, I don't think <em>that</em> will be the main issue.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Diskover</b> [ Sun Mar 06, 2016 4:33 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: NES Programming Blog</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">na_th_an wrote:</div><div class="quotecontent">cc65 needs inline functions. That would make code both readable and fast in those cases you are using functions that will be called just once in your code (just for organization). I've coded some stuff for the SEGA 8-bit consoles in SDCC and inline functions, which that compiler supports, are a great feature.<br /><br />In my case, I use a dirty trick (dirty, dirty) if I want to keep things organized but I don't want to spend cycles calling functions (for example, when packing up small tasks from NMI to sprite 0 collision detection for splits): I just put the code to another file and use a #include in the main. This is ugly C code, but it does the job <em>for me</em>.<br /></div><br /><br />I will study. Sometimes I use as I should switch.<br /><br />Spanish:<br />Lo estudiaré. Algunas veces uso switch según me conviene.<br /><br /><div class="quotetitle">rainwarrior wrote:</div><div class="quotecontent">You can use a preprocessor macro (#define) as a substitute for inline functions. It's also handy for unrolling loops.</div><br /><br /><div class="quotetitle">DRW wrote:</div><div class="quotecontent">Edit: rainwarror was faster.<br /><br />Yeah, inline functions would be good here.<br /><br />Because for every called sub routine, the assembly code uses a JSR and an RTS. But writing everything in one function could become hard to read.</div><br /><br />If, in fact I already use quite the macro (#define), especially on the issue of ordering some things and that code does not become something endless. It is more comfortable to work.<br /><br />Spanish:<br />Si, de hecho ya utilizo bastante las macro (#define), sobre todo por el tema de ordenar un poco las cosas y que el código no se convierta en algo interminable. Es más cómodo de trabajar.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Diskover</b> [ Wed Mar 09, 2016 3:04 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: NES Programming Blog</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Well, I think you have to teach a little of my progress in this area. Little by little I'm improving something:<br /><br />- Added select menu items.<br />- Added collision box walls.<br />- Added lives, energy and points.<br />- Added screen Continue and Game Over.<br />- Added top scorer. It contains points system, selected weapon, lives and energy player.<br />- I added two more maps.<br />- I added music and sound (testing).<br /><br />Some of these things I had to guide me a little with the demo Spacy3 dougeff, especially with the score and music. The music is taken directly from that demo. I have been researching the operation of Famitone, and the truth is that it is very complicated. I'll leave it to the last of all.<br /><br />ROM: <!-- m --><a class="postlink" href="https://dl.dropboxusercontent.com/u/31966385/NES%20demos/juego%20alpha%200.12b.nes">https://dl.dropboxusercontent.com/u/319 ... 00.12b.nes</a><!-- m --><br /><br /><img src="http://oi66.tinypic.com/wgz5h4.jpg" alt="Image" /> <img src="http://oi68.tinypic.com/34g68ft.jpg" alt="Image" /> <img src="http://oi65.tinypic.com/34fyypf.jpg" alt="Image" /><br /><br />Spanish:<br />Bueno, creo que os tengo que enseñar un poco de mis avances en la materia. Poco a poco voy mejorando alguna cosa:<br /><br />- Añadido menú de selección de objetos.<br />- Añadido colisión de caja con paredes.<br />- Añadidas vidas, energía y puntos. <br />- Añadido pantalla de Continue y Game Over.<br />- Añadido marcador superior. Contiene sistema de puntos, arma seleccionada, vidas y energía del player.<br />- He añadido dos mapas más.<br />- He añadido música y sonido (en pruebas).<br /><br />Parte de estas cosas me he tenido que guiar un poco con la demo Spacy3 de dougeff, sobre todo con el marcador y la música. La música esta cogida directamente de esa demo. He estado investigando el funcionamiento de Famitone, y la verdad es que es muy complicado. Lo dejaré para lo último de todo.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>dougeff</b> [ Wed Mar 09, 2016 3:27 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: NES Programming Blog</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Looks good.<br /><br />Maybe now would be a good time to start your own forum thread... perhaps over in the 'homebrew' section.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>dougeff</b> [ Wed Mar 09, 2016 10:36 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: NES Programming Blog</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Pushing the box is a little buggy.<br /><br />Also, wait till you're in v-blank before turning on an off the screen. You're getting 1 frame of misaligned screens, every time you press 'start' or change rooms.<br /><br />Example (por ejemplo) you step into a door, which triggers the code to load the next room...<br /><br />1.wait for v-blank...as...<br /><br />from my example code, wait for NMI_flag != 0<br /><br />2. Now, turn the screen 'off' ...All_Off();<br />3. Load the next room's data to PPU<br />4. Blank the sprites from the last room (move them off screen)...Blank_sprite();<br />5. Set the position of hero for new room, and position of other sprites, etc.<br />6. wait for v-blank...Wait_Vblank();<br /><br />_Wait_Vblank:<br />	lda $2002<br />	bpl _Wait_Vblank<br /><br />7. reset NMI_flag = 0;<br />8. turn the screen'on' and nmi's 'on' ...All_On();<br />9. back to regular game loop

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Diskover</b> [ Thu Mar 10, 2016 8:33 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: NES Programming Blog</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">dougeff wrote:</div><div class="quotecontent">Pushing the box is a little buggy.<br /><br />Also, wait till you're in v-blank before turning on an off the screen. You're getting 1 frame of misaligned screens, every time you press 'start' or change rooms.<br /><br />Example (por ejemplo) you step into a door, which triggers the code to load the next room...<br /><br />1.wait for v-blank...as...<br /><br />from my example code, wait for NMI_flag != 0<br /><br />2. Now, turn the screen 'off' ...All_Off();<br />3. Load the next room's data to PPU<br />4. Blank the sprites from the last room (move them off screen)...Blank_sprite();<br />5. Set the position of hero for new room, and position of other sprites, etc.<br />6. wait for v-blank...Wait_Vblank();<br /><br />_Wait_Vblank:<br />	lda $2002<br />	bpl _Wait_Vblank<br /><br />7. reset NMI_flag = 0;<br />8. turn the screen'on' and nmi's 'on' ...All_On();<br />9. back to regular game loop</div><br /><br />Basically I do all that you say, but nevertheless do not get to solve that problem.<br /><br />It seems silly but that frame gets to be problems with the collision map by charging and that the player has not yet been put in place.<br /><br />As much as I try and change, I can not fix the problem.<br /><br />Spanish:<br />Básicamente hago todo eso que dices, pero sin embargo no consigo solucionar ese problema.<br /><br />Parece una tontería pero ese frame consigue que haya problemas con el mapa de colisiones al cargarle y que el player no se haya colocado todavía en su sitio.<br /><br />Por más que pruebo y cambio, no consigo solucionar el problema.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>dougeff</b> [ Thu Mar 10, 2016 1:22 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: NES Programming Blog</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I don't have your source code, but setting a breakpoint for writes to $2001 and $2005-6 shows me this...while pressing 'Start'. (and viewing the sprite buffer in the hex editor).<br /><br />-screen is turned off at scanline 79, giving 1 frame that is 1/4 drawn.<br />-while the sprite buffer is set to have all Y positions at $f8 (off screen), the buffer is not pushed to the OAM, so when the screen is turned back on...(at scanline 241, the start of v-blank)...the OAM is still filled with the last screen's sprites. Sprites are visible for 1 frame.<br /><br />(Start pressed again)...<br /><br />-screen is turned off at scanline 24, which shows no visible errors, but is technically not the right time to turn off the screen (outside of v-blank)<br />-screen is turned on at scanline 241 (the start of v-blank)...but for a whole frame, the scroll position is not set, and the PPU address $28c0 is still in the PPU address, which misaligns the screen for 1 frame.<br /><br />OK, also...you are setting $2000-2001 twice every frame...both during v-blank, so no visible errors, but still not necessary. And, the screen is flip-flopping back and forth between nametable #0 and nametable #1. It's not visible, because both sceens are loaded with identical data, but certainly not necessary (as far as I can tell).<br /><br />So...solutions.<br />Add...<br />OAM_ADDRESS = 0;<br />OAM_DMA = 2;<br /><br />after you blank the sprites.<br /><br />Add...<br />SCROLL = 0;<br />SCROLL = 0;<br /><br />at the end of the All_On function<br /><br />figure out why $2000/2001 is being written to twice, why nametables are switching, and how to wait for v-blank before turning the screen off (preferably using the NMI_flag).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>dougeff</b> [ Sun Mar 13, 2016 1:47 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: NES Programming Blog</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I've added a few pages on 6502 ASM coding to my blog.<br /><br /><!-- m --><a class="postlink" href="http://nesdoug.com/2016/03/10/26-asm-basics/">http://nesdoug.com/2016/03/10/26-asm-basics/</a><!-- m --><br /><br />If anyone out there (who knows this stuff) is willing to look it over, and make sure I didn't make any errors, I would appreciate it. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /><br />Although, no rush, really. My statistic thing says I only get about 40 viewers a day, and almost none have them looked at the ASM pages. I just don't like to post errant information. Speaking of...<br /><br />This document, which I had on my computer, and referenced when looking up ASM instructions...<br /><!-- m --><a class="postlink" href="http://nesdev.com/6502.txt">http://nesdev.com/6502.txt</a><!-- m --><br />Incorrectly lists PLA as setting no flags.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>dougeff</b> [ Mon May 09, 2016 5:58 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: NES Programming Blog</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Hey, I made my first YouTube instructable video today. It's not very good (I did about 5 minutes of prep). It's just a quick how-to on using NES screen tool.<br /><br /><!-- m --><a class="postlink" href="https://youtu.be/BtV_NCwWAqs">https://youtu.be/BtV_NCwWAqs</a><!-- m --><br /><br />I have plans to make a few more on FCEUX debugging tools, and such.<br /><br />(Interesting side note, I modified the palette of my NES Screen Tool and replaced it with Kizuls palette<br /><br /><!-- l --><a class="postlink-local" href="http://forums.nesdev.com/viewtopic.php?f=21&amp;t=13555">viewtopic.php?f=21&amp;t=13555</a><!-- l --><br /><br />The palette was easy to find {hex editor} since Shiru posted the source code).

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>5</strong> of <strong>7</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>