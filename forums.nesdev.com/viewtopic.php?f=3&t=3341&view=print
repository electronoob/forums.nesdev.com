<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Mappers and PRG pages</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Mappers and PRG pages</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=3&amp;t=3341">http://forums.nesdev.com/viewtopic.php?f=3&amp;t=3341</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>ninty</b> [ Mon Apr 30, 2007 3:21 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Mappers and PRG pages</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Hello.
<br />
<br />I'm starting out in NES emulation, and have quite a few (probably stupid) questions.  
<br />I've read a lot of documentation, and have a working CPU core and ROM loader, but mappers are confusing me.
<br />
<br />I've read some posts about keeping pointers for PRG "pages", but I don't think I really know what I'm doing!
<br />For the minute, I'm only catering for NROM carts, but I'd like to make my code easily "upgradeable" to handle other mappers too.  Would this be right for an NROM cart, assuming prg_rom is loaded with the cart's ROM data (as per the iNES header)?
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">byte *prg_rom;<br />byte *prg_page&#91;10&#93;;&nbsp; &nbsp;&nbsp; &nbsp;// 4k pages from $6000<br />...<br />void nrom_init&#40;&#41;<br />&#123;<br />&nbsp; &nbsp;int count, num;<br /><br />&nbsp; &nbsp;for&#40;count = 0, num = 0; count &lt;= 0x10000; count += 0x1000, num++&#41;<br />&nbsp; &nbsp;&nbsp; &nbsp;prg_page&#91;num&#93; = &amp;prg_rom&#91;count&#93;;<br /><br />&nbsp; &nbsp;if&#40;prg_pages == 1&#41;<br />&nbsp; &nbsp;&#123;&nbsp; &nbsp;<br />&nbsp; &nbsp;&nbsp; &nbsp;prg_page&#91;2&#93; = prg_rom;&nbsp; &nbsp;// $8000<br />&nbsp; &nbsp;&nbsp; &nbsp;prg_page&#91;6&#93; = prg_rom;&nbsp; &nbsp;// $C000<br />&nbsp; &nbsp;&#125;<br />&#125;<br /></div>
<br />
<br />... or am I completely messing that up?
<br />
<br />Thanks for any help/suggestions.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Disch</b> [ Mon Apr 30, 2007 5:56 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />You have the right idea.
<br />
<br />I do pretty much the exact same thing.  I keep 16 pointers for PRG (one for each 4k page -- I know not all 4k pages can be PRG, but having 16 pointers makes the math a little simpler) then simpy use those pointers to index PRG.  When mappers swap PRG, all you'll have to do is change where those pointers point.
<br />
<br />something like the following:
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">u8* prg&#91;0x10&#93;;&nbsp; &nbsp; //&nbsp; pointers to PRG pages<br />u8* prg_buf;&nbsp; &nbsp; //&nbsp; the actual buffer containing the PRG<br /><br /><br />u8 ReadPRG&#40; u16 address &#41;<br />&#123;<br />&nbsp; return prg&#91;address &gt;&gt; 12&#93;&#91;address &amp; 0x0FFF&#93;;<br />&#125;<br /><br />void SwapPRG_16k&#40; int where, int page &#41;<br />&#123;<br />&nbsp; page *= 0x4000;&nbsp; // multiply page index by 16k<br />&nbsp; prg&#91;where+0&#93; = &amp;prg_buf&#91; page + 0x0000 &#93;;<br />&nbsp; prg&#91;where+1&#93; = &amp;prg_buf&#91; page + 0x1000 &#93;;<br />&nbsp; prg&#91;where+2&#93; = &amp;prg_buf&#91; page + 0x2000 &#93;;<br />&nbsp; prg&#91;where+3&#93; = &amp;prg_buf&#91; page + 0x3000 &#93;;<br />&#125;<br /><br />void LoadROM&#40;&#41;<br />&#123;<br />&nbsp; // ...<br />&nbsp; <br />&nbsp; // for NROM:<br /><br />&nbsp; if&#40; ROM_IS_16k &#41;<br />&nbsp; &#123;<br />&nbsp; &nbsp; SwapPRG_16k&#40; 0x8, 0 &#41;;&nbsp; // 16k page 0 goes at $8000<br />&nbsp; &nbsp; SwapPRG_16k&#40; 0xC, 0 &#41;;&nbsp; // and at $C000<br />&nbsp; &#125;<br />&nbsp; else&nbsp; // ROM is 32k<br />&nbsp; &#123;<br />&nbsp; &nbsp; &nbsp;SwapPRG_16k&#40; 0x8, 0 &#41;;<br />&nbsp; &nbsp; &nbsp;SwapPRG_16k&#40; 0xC, 1 &#41;;<br />&nbsp; &#125;<br />&#125;<br /><br /></div>
<br />
<br />That's simplified a bit.  You'll probably want to do some kind of bounds checking or wrapping when you swap PRG in so that you don't go to a page that doesn't exist.
<br />
<br />I also have SwapPRG_4k, 8k, and 32k functions -- all of which work the same way, but in smaller pages.
<br />
<br />
<br />You probably will want to do the same thing with 1k CHR pages -- as mappers swap CHR as well as PRG.  And if you REALLY want to accomidate for future games... have options to swap in ROM or RAM.  Some mappers have both CHR-ROM and CHR-RAM... and some others (MMC5 comes to mind) can swap PRG-ROM or PRG-RAM (SRAM) into the $8000-DFFF range.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>ninty</b> [ Tue May 01, 2007 10:03 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Thanks Disch, that's really helped to sort it out in my mind <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />
<br />
<br />I'm sure I'll be back with more questions soon!

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Zepper</b> [ Tue May 01, 2007 10:12 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />[Split from <a href="http://nesdev.com/bbs/viewtopic.php?p=23824#23824" class="postlink">this post</a>]
<br />
<br />As additional note, you could use shifting instead of multiplying numbers. No clue, but looks faster..?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Tue May 01, 2007 10:37 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />If your emulator is written in C, then compilers should turn multiplies by a constant power of 2 into shifts.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>WedNESday</b> [ Tue May 01, 2007 11:41 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">If your emulator is written in C, then compilers should turn multiplies by a constant power of 2 into shifts.</div>
<br />
<br />Should. But it's bad programming to rely on a compiler to do the work for you.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Tue May 01, 2007 12:37 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">But it's bad programming to rely on a compiler to do the work for you.</div>
<br />That's exactly what the compiler's job is. Your job as a programmer is to make use of your tools so that your code is as clear as possible.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>WedNESday</b> [ Tue May 01, 2007 1:31 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">blargg wrote:</div><div class="quotecontent"><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">But it's bad programming to rely on a compiler to do the work for you.</div><br />That's exactly what the compiler's job is. Your job as a programmer is to make use of your tools so that your code is as clear as possible.</div>
<br />
<br />No, that would be to turn the text into a binary file. It's still bad programming to rely on a compiler to do the work for you.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Tue May 01, 2007 1:34 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">WedNESday wrote:</div><div class="quotecontent"><div class="quotetitle">blargg wrote:</div><div class="quotecontent"><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">But it's bad programming to rely on a compiler to do the work for you.</div><br />That's exactly what the compiler's job is. Your job as a programmer is to make use of your tools so that your code is as clear as possible.</div><br />No, that would be to turn the text into a binary file.</div><br />A compiler's job is to turn your code into the <em>best</em> binary file that implements the semantics of your code. Depending on the options you specify, "best" can mean "most quickly produced" (e.g. gcc -O0), "smallest" (e.g. gcc -Os), or "fastest executing" (e.g. gcc -O3).<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"> It's still bad programming to rely on a compiler to do the work for you.</div>
<br />Then why not program Windows-based tools directly in assembly language?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>baisoku</b> [ Tue May 01, 2007 7:10 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">WedNESday wrote:</div><div class="quotecontent">Should. But it's bad programming to rely on a compiler to do the work for you.</div>
<br />If your compiler is incapable of this most very basic form of strength reduction, you have much bigger problems than can be fixed by converting multiplies and divides into shifts.
<br />And then what happens when your new computer's architecture does integer multiplication faster than bit shifting? That's an simplified example, but this stuff happens all the time.
<br />Here's a prime <a href="http://blogs.msdn.com/shawnhar/archive/2007/03/19/a-story-about-premature-optimization.aspx" class="postlink">example</a> of Knuth's infamous root of all evil.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Zepper</b> [ Tue May 01, 2007 8:36 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />(I suggest to split this topic starting on my -first- message...)
<br />
<br />- Yes, I got the spirit. By the way, it's not the most smart example of programming vs compiler. You can think of 2^n as 'golden' values that can be written using shifts. However, life isn't measured as 2^n numbers, and potentially we're deep into a C code written badly, unoptimized and only the coder knows the meaning of that 'encrypted code'.
<br />
<br />- Anyway, personally, I never did a binary comparision between two codes. You know that a compiler has bugs. Some of you can detect obscure annoyances... I can't. Probably you know how to write a piece of C code into ASM (dynamic recompilation, on CPU emulation): I don't. Will the compiler do the task? I won't. <img src="./images/smilies/icon_wink.gif" alt=";)" title="Wink" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>WedNESday</b> [ Wed May 02, 2007 10:21 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />But it's <strong><em><span style="text-decoration: underline">STILL</strong></em></span> bad programming to rely on the compiler to do the work for you.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>WedNESday</b> [ Wed May 02, 2007 10:39 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I agree that * 0x1000 vs &lt;&lt; 12 is easier to read, and that is absolutely fine. I did go to that link, and it does make some good points about how * 0x2000 could be better than a &lt;&lt;. But the point I'm trying to make is, not just about shifts vs multiplying, it's about expecting someone/something else to do the work for you. Because I've only even needed to write it once in my emulator, if I lost my directx.cpp file, I would have to go back online or get a directx book because I've forgotten how to do some of the specifics. Same goes for the letting someone/something else do something for you too much, you end up forgetting how to do it properly.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>WedNESday</b> [ Wed May 02, 2007 10:41 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Hey Disch deleted that post! That aint fair!  <img src="./images/smilies/icon_exclaim.gif" alt=":!:" title="Exclamation" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Disch</b> [ Wed May 02, 2007 10:44 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Yeah I deleted my post shortly after posting it.  I was hoping to do it before anyone saw it (and before anyone replied to it)
<br />
<br />I decided this wasn't a discussion I wanted to pursue

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>