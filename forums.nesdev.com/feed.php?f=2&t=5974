<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=2&amp;t=5974" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2010-03-24T01:09:28-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=2&amp;t=5974</id>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2010-03-24T01:09:28-07:00</updated>
<published>2010-03-24T01:09:28-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5974&amp;p=58933#p58933</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5974&amp;p=58933#p58933"/>
<title type="html"><![CDATA[FDS homebrew ?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5974&amp;p=58933#p58933"><![CDATA[
<div class="quotetitle">Memblers wrote:</div><div class="quotecontent"><br />I thought I remembered running some strange FDS images on emulators a long time ago that had changed the boot screen to show something else.  It might have been Hacker International.  I may be remembering something else though.<br /></div><br />Oh my god you are right.<br />The trick is surprisingly simple : The trick is that FDS BIOS write $c0 to $100 giving NMI control to vector #3 ($dffa-$dffb) by default, and just change it when it exept a VBlank to fire, and restore it again. They load something into the PPU registers, and enable NMIs (which are supposed to be disabled) that way. Eventually an NMI fires and the main program can boot from here - without displaying Nintendo's screen.<br /><br />EDIT :<br />Here is a hack of Chris' demo so that it skip Nintendo's screen : <a href="http://jonathan.microclub.ch/dummy/DiskTest.FDS" class="postlink">http://jonathan.microclub.ch/dummy/DiskTest.FDS</a><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Wed Mar 24, 2010 1:09 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Hamtaro126]]></name></author>
<updated>2010-03-23T14:53:14-07:00</updated>
<published>2010-03-23T14:53:14-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5974&amp;p=58893#p58893</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5974&amp;p=58893#p58893"/>
<title type="html"><![CDATA[FDS homebrew ?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5974&amp;p=58893#p58893"><![CDATA[
<div class="quotetitle">tepples wrote:</div><div class="quotecontent"><br />The wiki article about FDS states that the BIOS verifies 224 bytes in VRAM against corresponding bytes in the BIOS before executing anything, and the KYODAKU- file is supposed to populate them with a trademark notice. This has been ruled ineffective in <em>Sega v. Accolade</em>, 977 F.2d 1510, 24 USPQ2d (BNA) 1561 (9th Cir. 1992). But does the BIOS clear out or verify anything else in the VRAM between loading the initial files and displaying the screen? Specifically does the BIOS do anything to thwart these workarounds?<br /><br />Workaround #1: Use a nametable file loaded into $3F00 to blank the text.<br />Workaround #2: Use a CHR file to scramble the text.<br />Workaround #3: Make the KYODAKU- file 160 bytes longer, much like the opening screen of Bleemcast:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">  CORRECTION: THIS PRODUCT IS<br />  NOT LICENSED BY NINTENDO OR<br />  ANYONE ELSE FOR THAT MATTER.<br />  IGNORE WHAT IT SAYS ABOVE.<br /></div><br /></div><br /><br />According to Lost Levels, Sunsoft had Hacker International's Hex editor, it's a relationship that nintendo did not know of even of now.<br /><br />In Sunsoft's Nazoraa Land (Puzzler Land) Series, The FDS BIOS was rearranged after the BIOS shoed, Scattering and Rebuilding the word ''SUNSOFT'', Then boots up. <br /><br />This also had something in common in Hacker International's FDS games.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=287">Hamtaro126</a> — Tue Mar 23, 2010 2:53 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Memblers]]></name></author>
<updated>2010-03-23T13:21:07-07:00</updated>
<published>2010-03-23T13:21:07-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5974&amp;p=58886#p58886</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5974&amp;p=58886#p58886"/>
<title type="html"><![CDATA[FDS homebrew ?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5974&amp;p=58886#p58886"><![CDATA[
I thought I remembered running some strange FDS images on emulators a long time ago that had changed the boot screen to show something else.  It might have been Hacker International.  I may be remembering something else though.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=10">Memblers</a> — Tue Mar 23, 2010 1:21 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2010-03-23T10:53:16-07:00</updated>
<published>2010-03-23T10:53:16-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5974&amp;p=58870#p58870</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5974&amp;p=58870#p58870"/>
<title type="html"><![CDATA[FDS homebrew ?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5974&amp;p=58870#p58870"><![CDATA[
Nintendo were careful, and all these workarounds won't work. After loading the boot files, the first nametable is cleared and the second part of the second nametable uses palette #2 which is entirely black (the attribute table is written after the boot files load of course). The palette is rewritten, and from ROM directly. The tiles $00-$23 of second pattern table are backed up in system RAM, and overwritten by the FDS BIOS font for the approval screen, and are restored after the approval screen is shown.<br /><br />The only "workaround" that might work would be to load a 1-byte file at $101 to give IRQ control to your program (assumed you loaded it BEFORE of course). I have no idea how well it'll work tough and I have no idea how the powerpak would react to this.<br /><br />EDIT: The FDS BIOS refuses to load any data from disk to $000-$1ff so no way to transfer IRQ control to the main program nor to modify the return adress on stack, like some C64 games did to skip the "ready" prompt. It will ALSO refuse to load data into $800-$9ff, $1000-$11ff and $1800-$19ff. Nintendo REALLY thought of everything.<br /><br />I guess this is a non-issue, there is probably no way this screen can be skipped or even somehow effected.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Tue Mar 23, 2010 10:53 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2010-03-23T07:39:34-07:00</updated>
<published>2010-03-23T07:39:34-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5974&amp;p=58863#p58863</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5974&amp;p=58863#p58863"/>
<title type="html"><![CDATA[FDS homebrew ?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5974&amp;p=58863#p58863"><![CDATA[
The wiki article about FDS states that the BIOS verifies 224 bytes in VRAM against corresponding bytes in the BIOS before executing anything, and the KYODAKU- file is supposed to populate them with a trademark notice. This has been ruled ineffective in <em>Sega v. Accolade</em>, 977 F.2d 1510, 24 USPQ2d (BNA) 1561 (9th Cir. 1992). But does the BIOS clear out or verify anything else in the VRAM between loading the initial files and displaying the screen? Specifically does the BIOS do anything to thwart these workarounds?<br /><br />Workaround #1: Use a nametable file loaded into $3F00 to blank the text.<br />Workaround #2: Use a CHR file to scramble the text.<br />Workaround #3: Make the KYODAKU- file 160 bytes longer, much like the opening screen of Bleemcast:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">  CORRECTION: THIS PRODUCT IS<br />  NOT LICENSED BY NINTENDO OR<br />  ANYONE ELSE FOR THAT MATTER.<br />  IGNORE WHAT IT SAYS ABOVE.<br /></div><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Tue Mar 23, 2010 7:39 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Memblers]]></name></author>
<updated>2010-03-15T08:51:02-07:00</updated>
<published>2010-03-15T08:51:02-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5974&amp;p=58341#p58341</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5974&amp;p=58341#p58341"/>
<title type="html"><![CDATA[FDS homebrew ?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5974&amp;p=58341#p58341"><![CDATA[
Earlier in the thread I said I'd be cool to do an FDS release, but the more I considered it the more it sounds like a horrible idea.  Just imagine all the "fun" it would be to send copies of your game out only to have some drives not read them because of drives going out of alignment after 15 years, or any other very common disk failure modes.  Even after calibrating your own drive somehow you'd have to deal with everyone else's bum disks and bum drives.  Sounds like big fun, not.<br /><br />Not to mention the loading times.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=10">Memblers</a> — Mon Mar 15, 2010 8:51 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Xious]]></name></author>
<updated>2010-03-15T03:11:05-07:00</updated>
<published>2010-03-15T03:11:05-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5974&amp;p=58316#p58316</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5974&amp;p=58316#p58316"/>
<title type="html"><![CDATA[FDS homebrew ?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5974&amp;p=58316#p58316"><![CDATA[
I meant save, then continue later...<br /><br />FYI, if you hit Death with the holy water, it both stuns and does heavy damage to him and you'll beat him in a hurry.<br /><br /><br /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent"><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"> <br /><br />For example, I would love to see an FDS version of Castlevania: Chorus of Mysteries (on top of the Akumajo Dracula FDS diskette) so that you can save three files and have continues.<br /></div><br />I just wanted to point that there IS infinite continues in Castlevania - they just whiped the save out, which wasn't really necessary since you can finish the game in ~45 minutes (for those who are good enough to kill Death, unlike me). No matter if I have saves or not I'll always be stuck at Death, the only way to pass it for me is to have savestates.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />The FDS also has its own sound chip, so it would be neat to see new games that make use of it, but if you want to run them on real HW, you'll have to figure out how to write to a disk from an image, which is something I brought up on the hardware forums a while back.<br /></div><br />You are right that if I use the sound hardware, it may act differently on the PowerPak that on a real FDS... so I'd have to buy a twin famicom or a working FDS + ask my 60-&gt;72 adaptater back from my bro in law + find a way to make the cart fit in my NES, and in all cases buy at least 1 disc and find a way to rewrite it, which sounds tedious, although I'd love to be able to do that.<br /><br />Also how common are 72-&gt;60 adapters ? If I ever go trough the trouble to import a rare twin famicom, I'd be able to at least play games from my Power Pak in NTSC mode !</div><br /><br />The other consideration for FDS homebrews is file size: If you want your game to exceed 128K, you have to span multiple disks, and the PowerPak, as of the time of this post, does not support multiple-disk games. <br /><br />-Xious<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4070">Xious</a> — Mon Mar 15, 2010 3:11 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[kyuusaku]]></name></author>
<updated>2010-03-10T09:28:35-07:00</updated>
<published>2010-03-10T09:28:35-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5974&amp;p=57889#p57889</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5974&amp;p=57889#p57889"/>
<title type="html"><![CDATA[FDS homebrew ?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5974&amp;p=57889#p57889"><![CDATA[
A simple microcontroller circuit could surely emulate the disk drive (like FDSLoadr) using a SD card/USB host for storage. It's more of an "*shrug* why bother" thing since that Loopy emulated the FDS in the PowerPak. I don't see any reason to NOT try FDS homebrew, but I wouldn't seriously consider it for a game of mine for its lack of accessibility/interest, and because well, the actual hardware really is a pain to use.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=20">kyuusaku</a> — Wed Mar 10, 2010 9:28 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[AWal]]></name></author>
<updated>2010-03-10T01:24:58-07:00</updated>
<published>2010-03-10T01:24:58-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5974&amp;p=57854#p57854</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5974&amp;p=57854#p57854"/>
<title type="html"><![CDATA[FDS homebrew ?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5974&amp;p=57854#p57854"><![CDATA[
<div class="quotetitle">Super-Hampster wrote:</div><div class="quotecontent"><br />something like this perhaps, only made to fit the fds<br /><br /><!-- m --><a class="postlink" href="http://usbflashstore.com/smarsecdigfl.html">http://usbflashstore.com/smarsecdigfl.html</a><!-- m --><br /></div><br /><br />I remember when that came out. Sucker was $50.<br /><br />FDS homebrew, from a hobbyist point of view, is a novelty in the least, simply due to the rarity of actual code operation in it's native location (on an FDS disk/in a RAM cart)...on the other hand, if someone was to make some sort of device that is a sit-in clone of the FDS RAM Cart that connected to a standard floppy drive, I'd probably build/buy one, for the sake of an alternative of the hassle of actually maintaining a real one.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=26">AWal</a> — Wed Mar 10, 2010 1:24 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2010-03-10T00:31:56-07:00</updated>
<published>2010-03-10T00:31:56-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5974&amp;p=57851#p57851</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5974&amp;p=57851#p57851"/>
<title type="html"><![CDATA[FDS homebrew ?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5974&amp;p=57851#p57851"><![CDATA[
Well that wasn't my point, I am unable to clone anything. I just thought about releasing a FDS version people could play on their powepak with extra audio, and this IS runnin on a real hardware, but not a real FDS so the audio and IRQ generation might behave slightly differently on the powerpak than on a real FDS, and that is the problem.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Wed Mar 10, 2010 12:31 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[MottZilla]]></name></author>
<updated>2010-03-09T16:39:51-07:00</updated>
<published>2010-03-09T16:39:51-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5974&amp;p=57817#p57817</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5974&amp;p=57817#p57817"/>
<title type="html"><![CDATA[FDS homebrew ?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5974&amp;p=57817#p57817"><![CDATA[
Unless you can make something extremely cheap somehow, the answer will always run back to the PowerPAK. The PowerPAK isn't the cheapest device, but it's very capable. Maybe if you wanted to make an FDS-like system, you could create a very stripped down sort of PowerPAK with a fixed mapper, BIOS, and functions to load from removable flash memory. <br /><br />Perhaps if you choose your features wisely enough you could make something appealing to developers while still being cheap and worthwhile for games to be released for it. But with the 135$ PowerPAK you must make whatever it is for significantly less than that or else people won't see the point. Then there is the chicken/egg issue of no one besides developers will buy it until a developer makes some worthwhile games for it. <br /><br />But if you manage to create something cheap enough but still capable of some nice games maybe you'll find a market for it. I suppose you don't need a whole lot of features. Your removable media could give developers more space than they will ever need. <br /><br />Still seems like alot of IFs are involved. So you might have better luck cloning the FDS RAM Adapter and drive. And perhaps you could avoid legal issues by socketing the BIOS and letting people just order it on an EPROM from somewhere else.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=1726">MottZilla</a> — Tue Mar 09, 2010 4:39 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Super-Hampster]]></name></author>
<updated>2010-03-09T13:31:34-07:00</updated>
<published>2010-03-09T13:31:34-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5974&amp;p=57812#p57812</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5974&amp;p=57812#p57812"/>
<title type="html"><![CDATA[FDS homebrew ?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5974&amp;p=57812#p57812"><![CDATA[
something like this perhaps, only made to fit the fds<br /><br /><!-- m --><a class="postlink" href="http://usbflashstore.com/smarsecdigfl.html">http://usbflashstore.com/smarsecdigfl.html</a><!-- m --><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=493">Super-Hampster</a> — Tue Mar 09, 2010 1:31 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[lidnariq]]></name></author>
<updated>2010-03-09T07:30:29-07:00</updated>
<published>2010-03-09T07:30:29-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5974&amp;p=57792#p57792</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5974&amp;p=57792#p57792"/>
<title type="html"><![CDATA[FDS homebrew ?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5974&amp;p=57792#p57792"><![CDATA[
Why not compactflash? It's 5V compatible (unlike SD) and it even already supports a mode that's "present a 2kB section of memory that pretends to be RAM" although it's a lie and still requires in-order reads &amp; writes.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3512">lidnariq</a> — Tue Mar 09, 2010 7:30 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2010-03-09T07:17:21-07:00</updated>
<published>2010-03-09T07:17:21-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5974&amp;p=57788#p57788</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5974&amp;p=57788#p57788"/>
<title type="html"><![CDATA[FDS homebrew ?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5974&amp;p=57788#p57788"><![CDATA[
<div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />I don't know how it work but I wouldn't be surprised that the bios must be in the ram cart, together (I'm guessing here). In that case, just replacing the drive unit with something with SD card would be great.<br /></div><br />Assuming the BIOS, sound and IRQ generation hardware is all on the adapter, then yes I agree. I don't know how accurately the powerpak emulate those.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Tue Mar 09, 2010 7:17 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Banshaku]]></name></author>
<updated>2010-03-09T07:11:12-07:00</updated>
<published>2010-03-09T07:11:12-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5974&amp;p=57787#p57787</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5974&amp;p=57787#p57787"/>
<title type="html"><![CDATA[FDS homebrew ?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5974&amp;p=57787#p57787"><![CDATA[
I don't know how it work but I wouldn't be surprised that the bios must be in the ram cart, together (I'm guessing here). In that case, just replacing the drive unit with something with SD card would be great. But I guess the target audience is so small that emulating the FDS files on the powerpak is a better option.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3559">Banshaku</a> — Tue Mar 09, 2010 7:11 am</p><hr />
]]></content>
</entry>
</feed>