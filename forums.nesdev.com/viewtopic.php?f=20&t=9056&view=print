<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Help with some GB Z80 commands</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Help with some GB Z80 commands</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=20&amp;t=9056">http://forums.nesdev.com/viewtopic.php?f=20&amp;t=9056</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Pennywise</b> [ Fri Jun 29, 2012 9:02 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Help with some GB Z80 commands</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I am having a bit of trouble with writing some Z80 code and while I have written some code before, it's been a while and I'm still quite uncomfortable with Z80 as compared to 6502. Here's my WIP code:
<br />
<br />ld hl,C000	21 00 C0
<br />ld a,(hl)	7E
<br />jr nz		20 0A
<br />
<br />What I'm trying to do is have the code jump when A doesn't equal 0 ala BNE. Any idea of what I'm doing wrong?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Drag</b> [ Fri Jun 29, 2012 9:10 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The z80 doesn't set the flags on ld operations. You have to use something like
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">or a</div>
<br />to set the flags after an ld.
<br />
<br />A little different from 6502, huh? <img src="./images/smilies/icon_razz.gif" alt=":P" title="Razz" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Pennywise</b> [ Sat Jun 30, 2012 11:34 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Heh, figures.
<br />
<br />I've pretty much been converting 6502 to Z80 for all my asm mods so far. Sometimes it worked, sometimes not. 
<br />
<br />Incidentally is there just a doc that just contains all the Z80 instructions for the GB with opcodes and the basic functions? The best I can seem to find is from that unofficial GB programming doc compiled by several people. It's PDF and is a pain in the ass to navigate.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dwedit</b> [ Sat Jun 30, 2012 1:25 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="codetitle"><b>Code:</b></div><div class="codecontent">XOR L&nbsp; &nbsp;AD<br />XOR H&nbsp; &nbsp;AC<br />XOR E&nbsp; &nbsp;AB<br />XOR D&nbsp; &nbsp;AA<br />XOR C&nbsp; &nbsp;A9<br />XOR B&nbsp; &nbsp;A8<br />XOR A&nbsp; &nbsp;AF<br />XOR &#40;HL&#41;&nbsp; &nbsp;AE<br />SWAP L&nbsp; &nbsp;35CB<br />SWAP H&nbsp; &nbsp;34CB<br />SWAP E&nbsp; &nbsp;33CB<br />SWAP D&nbsp; &nbsp;32CB<br />SWAP C&nbsp; &nbsp;31CB<br />SWAP B&nbsp; &nbsp;30CB<br />SWAP A&nbsp; &nbsp;37CB<br />SWAP &#40;HL&#41;&nbsp; &nbsp;36CB<br />SUB L&nbsp; &nbsp;95<br />SUB H&nbsp; &nbsp;94<br />SUB E&nbsp; &nbsp;93<br />SUB D&nbsp; &nbsp;92<br />SUB C&nbsp; &nbsp;91<br />SUB B&nbsp; &nbsp;90<br />SUB A&nbsp; &nbsp;97<br />SUB &#40;HL&#41;&nbsp; &nbsp;96<br />STOP &quot;&quot;&nbsp; &nbsp;10<br />SRL L&nbsp; &nbsp;3DCB<br />SRL H&nbsp; &nbsp;3CCB<br />SRL E&nbsp; &nbsp;3BCB<br />SRL D&nbsp; &nbsp;3ACB<br />SRL C&nbsp; &nbsp;39CB<br />SRL B&nbsp; &nbsp;38CB<br />SRL A&nbsp; &nbsp;3FCB<br />SRL &#40;HL&#41;&nbsp; &nbsp;3ECB<br />SRA L&nbsp; &nbsp;2DCB<br />SRA H&nbsp; &nbsp;2CCB<br />SRA E&nbsp; &nbsp;2BCB<br />SRA D&nbsp; &nbsp;2ACB<br />SRA C&nbsp; &nbsp;29CB<br />SRA B&nbsp; &nbsp;28CB<br />SRA A&nbsp; &nbsp;2FCB<br />SRA &#40;HL&#41;&nbsp; &nbsp;2ECB<br />SLA L&nbsp; &nbsp;25CB<br />SLA H&nbsp; &nbsp;24CB<br />SLA E&nbsp; &nbsp;23CB<br />SLA D&nbsp; &nbsp;22CB<br />SLA C&nbsp; &nbsp;21CB<br />SLA B&nbsp; &nbsp;20CB<br />SLA A&nbsp; &nbsp;27CB<br />SLA &#40;HL&#41;&nbsp; &nbsp;26CB<br />SCF &quot;&quot;&nbsp; &nbsp;37<br />SBC A,L&nbsp; &nbsp;9D<br />SBC A,H&nbsp; &nbsp;9C<br />SBC A,E&nbsp; &nbsp;9B<br />SBC A,D&nbsp; &nbsp;9A<br />SBC A,C&nbsp; &nbsp;99<br />SBC A,B&nbsp; &nbsp;98<br />SBC A,A&nbsp; &nbsp;9F<br />SBC A,&#40;HL&#41;&nbsp; &nbsp;9E<br />RST 38H&nbsp; &nbsp;FF<br />RST 30H&nbsp; &nbsp;F7<br />RST 28H&nbsp; &nbsp;EF<br />RST 20H&nbsp; &nbsp;E7<br />RST 18H&nbsp; &nbsp;DF<br />RST 10H&nbsp; &nbsp;D7<br />RST 08H&nbsp; &nbsp;CF<br />RST 00H&nbsp; &nbsp;C7<br />RRCA &quot;&quot;&nbsp; &nbsp;0F<br />RRC L&nbsp; &nbsp;0DCB<br />RRC H&nbsp; &nbsp;0CCB<br />RRC E&nbsp; &nbsp;0BCB<br />RRC D&nbsp; &nbsp;0ACB<br />RRC C&nbsp; &nbsp;09CB<br />RRC B&nbsp; &nbsp;08CB<br />RRC A&nbsp; &nbsp;0FCB<br />RRC &#40;HL&#41;&nbsp; &nbsp;0ECB<br />RRA &quot;&quot;&nbsp; &nbsp;1F<br />RR L&nbsp; &nbsp;1DCB<br />RR H&nbsp; &nbsp;1CCB<br />RR E&nbsp; &nbsp;1BCB<br />RR D&nbsp; &nbsp;1ACB<br />RR C&nbsp; &nbsp;19CB<br />RR B&nbsp; &nbsp;18CB<br />RR A&nbsp; &nbsp;1FCB<br />RR &#40;HL&#41;&nbsp; &nbsp;1ECB<br />RLCA &quot;&quot;&nbsp; &nbsp;07<br />RLC L&nbsp; &nbsp;05CB<br />RLC H&nbsp; &nbsp;04CB<br />RLC E&nbsp; &nbsp;03CB<br />RLC D&nbsp; &nbsp;02CB<br />RLC C&nbsp; &nbsp;01CB<br />RLC B&nbsp; &nbsp;00CB<br />RLC A&nbsp; &nbsp;07CB<br />RLC &#40;HL&#41;&nbsp; &nbsp;06CB<br />RLA &quot;&quot;&nbsp; &nbsp;17<br />RL L&nbsp; &nbsp;15CB<br />RL H&nbsp; &nbsp;14CB<br />RL E&nbsp; &nbsp;13CB<br />RL D&nbsp; &nbsp;12CB<br />RL C&nbsp; &nbsp;11CB<br />RL B&nbsp; &nbsp;10CB<br />RL A&nbsp; &nbsp;17CB<br />RL &#40;HL&#41;&nbsp; &nbsp;16CB<br />RETI &quot;&quot;&nbsp; &nbsp;D9<br />RET Z&nbsp; &nbsp;C8<br />RET NZ&nbsp; &nbsp;C0<br />RET NC&nbsp; &nbsp;D0<br />RET C&nbsp; &nbsp;D8<br />RET &quot;&quot;&nbsp; &nbsp;C9<br />PUSH HL&nbsp; &nbsp;E5<br />PUSH DE&nbsp; &nbsp;D5<br />PUSH BC&nbsp; &nbsp;C5<br />PUSH AF&nbsp; &nbsp;F5<br />POP HL&nbsp; &nbsp;E1<br />POP DE&nbsp; &nbsp;D1<br />POP BC&nbsp; &nbsp;C1<br />POP AF&nbsp; &nbsp;F1<br />OR L&nbsp; &nbsp;B5<br />OR H&nbsp; &nbsp;B4<br />OR E&nbsp; &nbsp;B3<br />OR D&nbsp; &nbsp;B2<br />OR C&nbsp; &nbsp;B1<br />OR B&nbsp; &nbsp;B0<br />OR A&nbsp; &nbsp;B7<br />OR &#40;HL&#41;&nbsp; &nbsp;B6<br />NOP &quot;&quot;&nbsp; &nbsp;00<br />LDI A,&#40;HL&#41;&nbsp; &nbsp;2A<br />LDI &#40;HL&#41;,A&nbsp; &nbsp;22<br />LDD A,&#40;HL&#41;&nbsp; &nbsp;3A<br />LDD &#40;HL&#41;,A&nbsp; &nbsp;32<br />LD SP,HL&nbsp; &nbsp;F9<br />LD L,L&nbsp; &nbsp;6D<br />LD L,H&nbsp; &nbsp;6C<br />LD L,E&nbsp; &nbsp;6B<br />LD L,D&nbsp; &nbsp;6A<br />LD L,C&nbsp; &nbsp;69<br />LD L,B&nbsp; &nbsp;68<br />LD L,A&nbsp; &nbsp;6F<br />LD L,&#40;HL&#41;&nbsp; &nbsp;6E<br />LD H,L&nbsp; &nbsp;65<br />LD H,H&nbsp; &nbsp;64<br />LD H,E&nbsp; &nbsp;63<br />LD H,D&nbsp; &nbsp;62<br />LD H,C&nbsp; &nbsp;61<br />LD H,B&nbsp; &nbsp;60<br />LD H,A&nbsp; &nbsp;67<br />LD H,&#40;HL&#41;&nbsp; &nbsp;66<br />LD E,L&nbsp; &nbsp;5D<br />LD E,H&nbsp; &nbsp;5C<br />LD E,E&nbsp; &nbsp;5B<br />LD E,D&nbsp; &nbsp;5A<br />LD E,C&nbsp; &nbsp;59<br />LD E,B&nbsp; &nbsp;58<br />LD E,A&nbsp; &nbsp;5F<br />LD E,&#40;HL&#41;&nbsp; &nbsp;5E<br />LD D,L&nbsp; &nbsp;55<br />LD D,H&nbsp; &nbsp;54<br />LD D,E&nbsp; &nbsp;53<br />LD D,D&nbsp; &nbsp;52<br />LD D,C&nbsp; &nbsp;51<br />LD D,B&nbsp; &nbsp;50<br />LD D,A&nbsp; &nbsp;57<br />LD D,&#40;HL&#41;&nbsp; &nbsp;56<br />LD C,L&nbsp; &nbsp;4D<br />LD C,H&nbsp; &nbsp;4C<br />LD C,E&nbsp; &nbsp;4B<br />LD C,D&nbsp; &nbsp;4A<br />LD C,C&nbsp; &nbsp;49<br />LD C,B&nbsp; &nbsp;48<br />LD C,A&nbsp; &nbsp;4F<br />LD C,&#40;HL&#41;&nbsp; &nbsp;4E<br />LD B,L&nbsp; &nbsp;45<br />LD B,H&nbsp; &nbsp;44<br />LD B,E&nbsp; &nbsp;43<br />LD B,D&nbsp; &nbsp;42<br />LD B,C&nbsp; &nbsp;41<br />LD B,B&nbsp; &nbsp;40<br />LD B,A&nbsp; &nbsp;47<br />LD B,&#40;HL&#41;&nbsp; &nbsp;46<br />LD A,L&nbsp; &nbsp;7D<br />LD A,H&nbsp; &nbsp;7C<br />LD A,E&nbsp; &nbsp;7B<br />LD A,D&nbsp; &nbsp;7A<br />LD A,C&nbsp; &nbsp;79<br />LD A,B&nbsp; &nbsp;78<br />LD A,A&nbsp; &nbsp;7F<br />LD A,&#40;HL&#41;&nbsp; &nbsp;7E<br />LD A,&#40;DE&#41;&nbsp; &nbsp;1A<br />LD A,&#40;BC&#41;&nbsp; &nbsp;0A<br />LDH A,&#40;C&#41;&nbsp; &nbsp;F2<br />LD &#40;HL&#41;,L&nbsp; &nbsp;75<br />LD &#40;HL&#41;,H&nbsp; &nbsp;74<br />LD &#40;HL&#41;,E&nbsp; &nbsp;73<br />LD &#40;HL&#41;,D&nbsp; &nbsp;72<br />LD &#40;HL&#41;,C&nbsp; &nbsp;71<br />LD &#40;HL&#41;,B&nbsp; &nbsp;70<br />LD &#40;HL&#41;,A&nbsp; &nbsp;77<br />LD &#40;DE&#41;,A&nbsp; &nbsp;12<br />LD &#40;BC&#41;,A&nbsp; &nbsp;02<br />LDH &#40;C&#41;,A&nbsp; &nbsp;E2<br />JP HL&nbsp; &nbsp;E9<br />INC SP&nbsp; &nbsp;33<br />INC L&nbsp; &nbsp;2C<br />INC HL&nbsp; &nbsp;23<br />INC H&nbsp; &nbsp;24<br />INC E&nbsp; &nbsp;1C<br />INC DE&nbsp; &nbsp;13<br />INC D&nbsp; &nbsp;14<br />INC C&nbsp; &nbsp;0C<br />INC BC&nbsp; &nbsp;03<br />INC B&nbsp; &nbsp;04<br />INC A&nbsp; &nbsp;3C<br />INC &#40;HL&#41;&nbsp; &nbsp;34<br />HALT &quot;&quot;&nbsp; &nbsp;76<br />EI &quot;&quot;&nbsp; &nbsp;FB<br />DI &quot;&quot;&nbsp; &nbsp;F3<br />DEC SP&nbsp; &nbsp;3B<br />DEC L&nbsp; &nbsp;2D<br />DEC HL&nbsp; &nbsp;2B<br />DEC H&nbsp; &nbsp;25<br />DEC E&nbsp; &nbsp;1D<br />DEC DE&nbsp; &nbsp;1B<br />DEC D&nbsp; &nbsp;15<br />DEC C&nbsp; &nbsp;0D<br />DEC BC&nbsp; &nbsp;0B<br />DEC B&nbsp; &nbsp;05<br />DEC A&nbsp; &nbsp;3D<br />DEC &#40;HL&#41;&nbsp; &nbsp;35<br />DAA &quot;&quot;&nbsp; &nbsp;27<br />CPL &quot;&quot;&nbsp; &nbsp;2F<br />CP L&nbsp; &nbsp;BD<br />CP H&nbsp; &nbsp;BC<br />CP E&nbsp; &nbsp;BB<br />CP D&nbsp; &nbsp;BA<br />CP C&nbsp; &nbsp;B9<br />CP B&nbsp; &nbsp;B8<br />CP A&nbsp; &nbsp;BF<br />CP &#40;HL&#41;&nbsp; &nbsp;BE<br />CCF &quot;&quot;&nbsp; &nbsp;3F<br />AND L&nbsp; &nbsp;A5<br />AND H&nbsp; &nbsp;A4<br />AND E&nbsp; &nbsp;A3<br />AND D&nbsp; &nbsp;A2<br />AND C&nbsp; &nbsp;A1<br />AND B&nbsp; &nbsp;A0<br />AND A&nbsp; &nbsp;A7<br />AND &#40;HL&#41;&nbsp; &nbsp;A6<br />ADD HL,SP&nbsp; &nbsp;39<br />ADD HL,HL&nbsp; &nbsp;29<br />ADD HL,DE&nbsp; &nbsp;19<br />ADD HL,BC&nbsp; &nbsp;09<br />ADD A,L&nbsp; &nbsp;85<br />ADD A,H&nbsp; &nbsp;84<br />ADD A,E&nbsp; &nbsp;83<br />ADD A,D&nbsp; &nbsp;82<br />ADD A,C&nbsp; &nbsp;81<br />ADD A,B&nbsp; &nbsp;80<br />ADD A,A&nbsp; &nbsp;87<br />ADD A,&#40;HL&#41;&nbsp; &nbsp;86<br />ADC A,L&nbsp; &nbsp;8D<br />ADC A,H&nbsp; &nbsp;8C<br />ADC A,E&nbsp; &nbsp;8B<br />ADC A,D&nbsp; &nbsp;8A<br />ADC A,C&nbsp; &nbsp;89<br />ADC A,B&nbsp; &nbsp;88<br />ADC A,A&nbsp; &nbsp;8F<br />ADC A,&#40;HL&#41;&nbsp; &nbsp;8E<br />XOR *&nbsp; &nbsp;EE<br />SUB *&nbsp; &nbsp;D6<br />SET *,L&nbsp; &nbsp;C5CB<br />SET *,H&nbsp; &nbsp;C4CB<br />SET *,E&nbsp; &nbsp;C3CB<br />SET *,D&nbsp; &nbsp;C2CB<br />SET *,C&nbsp; &nbsp;C1CB<br />SET *,B&nbsp; &nbsp;C0CB<br />SET *,A&nbsp; &nbsp;C7CB<br />SET *,&#40;HL&#41;&nbsp; &nbsp;C6CB<br />SBC A,*&nbsp; &nbsp;DE<br />RES *,L&nbsp; &nbsp;85CB<br />RES *,H&nbsp; &nbsp;84CB<br />RES *,E&nbsp; &nbsp;83CB<br />RES *,D&nbsp; &nbsp;82CB<br />RES *,C&nbsp; &nbsp;81CB<br />RES *,B&nbsp; &nbsp;80CB<br />RES *,A&nbsp; &nbsp;87CB<br />RES *,&#40;HL&#41;&nbsp; &nbsp;86CB<br />OR *&nbsp; &nbsp;F6<br />LD SP,*&nbsp; &nbsp;31<br />LD L,*&nbsp; &nbsp;2E<br />LD HL,SP+*&nbsp; &nbsp;F8<br />LD HL,*&nbsp; &nbsp;21<br />LD H,*&nbsp; &nbsp;26<br />LD E,*&nbsp; &nbsp;1E<br />LD DE,*&nbsp; &nbsp;11<br />LD D,*&nbsp; &nbsp;16<br />LD C,*&nbsp; &nbsp;0E<br />LD BC,*&nbsp; &nbsp;01<br />LD B,*&nbsp; &nbsp;06<br />LD A,&#40;*&#41;&nbsp; &nbsp;FA<br />LDH A,&#40;*&#41;&nbsp; &nbsp;F0<br />LD A,*&nbsp; &nbsp;3E<br />LD &#40;HL&#41;,*&nbsp; &nbsp;36<br />LD &#40;*&#41;,SP&nbsp; &nbsp;08<br />LD &#40;*&#41;,A&nbsp; &nbsp;EA<br />LDH &#40;*&#41;,A&nbsp; &nbsp;E0<br />JR Z,*&nbsp; &nbsp;28<br />JR NZ,*&nbsp; &nbsp;20<br />JR NC,*&nbsp; &nbsp;30<br />JR C,*&nbsp; &nbsp;38<br />JR *&nbsp; &nbsp;18<br />JP Z,*&nbsp; &nbsp;CA<br />JP NZ,*&nbsp; &nbsp;C2<br />JP NC,*&nbsp; &nbsp;D2<br />JP C,*&nbsp; &nbsp;DA<br />JP *&nbsp; &nbsp;C3<br />CP *&nbsp; &nbsp;FE<br />CALL Z,*&nbsp; &nbsp;CC<br />CALL NZ,*&nbsp; &nbsp;C4<br />CALL NC,*&nbsp; &nbsp;D4<br />CALL C,*&nbsp; &nbsp;DC<br />CALL *&nbsp; &nbsp;CD<br />BIT *,L&nbsp; &nbsp;45CB<br />BIT *,H&nbsp; &nbsp;44CB<br />BIT *,E&nbsp; &nbsp;43CB<br />BIT *,D&nbsp; &nbsp;42CB<br />BIT *,C&nbsp; &nbsp;41CB<br />BIT *,B&nbsp; &nbsp;40CB<br />BIT *,A&nbsp; &nbsp;47CB<br />BIT *,&#40;HL&#41;&nbsp; &nbsp;46CB<br />AND *&nbsp; &nbsp;E6<br />ADD SP,*&nbsp; &nbsp;E8<br />ADD A,*&nbsp; &nbsp;C6<br />ADC A,*&nbsp; &nbsp;CE<br /><br /></div>
<br />
<br />Copy-pasted (and edited) from a TASM table.  Note that asterisks are usually numbers (possibly 8 or 16-bit depending on the instruction), and CB is a byte prefix, not a suffix.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Pennywise</b> [ Sat Jun 30, 2012 4:18 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="codetitle"><b>Code:</b></div><div class="codecontent">ld de,C000 ; dte second pass check<br />ld a,&#40;de&#41;&nbsp; &nbsp;<br />cp a,00<br />jr nz&nbsp; &nbsp;&nbsp; &nbsp;<br />ld hl,C20C&nbsp; &nbsp; ; original text read routine<br />ld c,&#40;hl&#41;<br />inc hl&nbsp; &nbsp;&nbsp; &nbsp;<br />ld b,&#40;hl&#41;&nbsp; &nbsp;<br />ld a,&#40;bc&#41;&nbsp; &nbsp;<br />cp a,50&nbsp; &nbsp;; dte check&nbsp; &nbsp;<br />jr nc&nbsp; &nbsp;&nbsp; &nbsp;<br />ret&nbsp; &nbsp;&nbsp; &nbsp;<br />cp a,80&nbsp; &nbsp;&nbsp; &nbsp;<br />jr nc&nbsp; &nbsp;&nbsp; &nbsp;</div><br /><br />Alright, so I'm working on converting a dte routine coded in 6502 to z80 and I am at a loss, but at least the first part is working as intended. How exactly does one write something to WRAM? Is the only option to load the RAM offset into hl etc and put A into it?<br /><br />I also have this bit of code in 6502 that I'm thinking will need to be changed around a bit to get it to work in z80.<br /><br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">SEC <br />SBC #$80&nbsp; &nbsp; <br />ASL&nbsp; &nbsp; <br />TAX <br />LDA $BD40,X</div>
<br />
<br />Two questions, when I want to subtract from A is there an equivalent instruction for SEC or is the carry flag set when I use the SUB command? I'm not sure, but I think that's what the later says in my docs. Lastly what instructions are used to load data from table as in the last LDA? Much appreciate the help.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Shiru</b> [ Sat Jun 30, 2012 4:39 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I think it is better to clear this up: GB does not have Z80. The GB CPU is more like a modified 8080 with some things derived from the Z80 and 6502 even. So answer to a question of the 'how to do this for Z80' kind will be different for GB, as its CPU lacks major number of actual Z80 features.
<br />
<br />Writing to the WRAM is not a CPU-related question. Since it is a normal memory, any ways of working with memory will work with it, be it ld (hl),r or ld (nnnn),a etc.
<br />
<br />There is a nasty bug in the GB CPU - if you use inc rr or dec rr (bc, de, hl) when its content is in $fe00..$feff range, it corrupts OAM. So use these carefully. It also happens with few other, GB CPU specific opcodes.
<br />
<br />Z80 does not have an equivalent for lda nnnn,x. GB CPU does, but only for the scratchpad RAM ($ff00..$ffff). Typical trick for 8080/Z80 is to put data at 256-byte boundary, so LSB part of a register pair will work as an index in a 256-byte block.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dwedit</b> [ Sat Jun 30, 2012 5:21 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Z80 has ld (NNNN),a, or ld (hl),NN.  Take your pick.
<br />For where to put things in memory, read the GB memory map.  Might need to find some unused memory by running the game in an emulator for a while.  Note that old versions of VisualBoyAdvance have a bug: the mirror of RAM is treated as a distinct memory region.
<br />
<br />I call it the GBZ80 because the ASM opcodes are written out in a syntax just like the Z80, and most of the opcode byte values match exactly with the Z80.  It's close enough for me.  But there are still no IX or IY registers, or LDI/CPI/LDIR/CPIR... instructions.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Drag</b> [ Sat Jun 30, 2012 8:22 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The opcode reference I've been using is <a href="http://www.devrs.com/gb/files/opcodes.html" class="postlink">this one</a>.
<br />The gameboy hardware reference I've been using is <a href="http://nocash.emubase.de/pandocs.htm" class="postlink">Nocash's</a>, which also has an opcode list.
<br />
<br />When you're working with the gameboy, most of your indexed addressing is going to be with HL, DE, and BC. For instance, something like:
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">loop:<br />LDA $----,Y<br />STA $----<br />INY<br />goto loop</div><br /><br />will be done like:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">ld hl,----<br />loop:<br />ldi a,&#40;hl&#41;&nbsp; ;increments HL automatically<br />ld &#40;----&#41;,a<br />goto loop</div><br /><br />If both your fetch and store need to be indexed:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">ld hl,----<br />ld de,----<br />loop:<br />ldi a,&#40;hl&#41;<br />ld &#40;de&#41;,a<br />inc de<br />goto loop</div>
<br />
<br />If I recall correctly, "ldi" doesn't exist on the vanilla z80, so you'd have to put an "inc hl" yourself.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dwedit</b> [ Sat Jun 30, 2012 9:38 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />LDI exists on the regular Z80, but it is completely different:
<br />Copy byte from (HL) to (DE), increment hl and de, decrement bc, set overflow flag to whether bc equals zero.
<br />LDIR is the looping version of LDI, and repeats until bc = 0.
<br />These are found on the regular Z80, not the game boy.
<br />
<br />Some people use CPI (compare and increment) as an optimization trick on the Z80 when they want to increment HL, decrement BC, and don't care about the compare part.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Shiru</b> [ Sat Jun 30, 2012 9:47 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />What is the point of using CPI instead of INC/DEC on Z80? It is slower, 16 t-states vs 2*6, and takes two bytes in any case.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dwedit</b> [ Sun Jul 01, 2012 12:58 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />CPI sets overflow flag based on value of BC, so you get the comparison for free.  Also code size.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Shiru</b> [ Sun Jul 01, 2012 5:30 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />So your explaination of situation where the trick could be useful was missing important part about the overflow flag. The optimization is only could be achieved when the flag could be actually used. Like, replacing the common code piece (7 bytes, 30 t-states)
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp;inc hl<br />&nbsp;dec bc<br />&nbsp;ld a,b<br />&nbsp;or c<br />&nbsp;jp nz,loop</div><br /><br />with (5 bytes, 26 t-states)<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp;cpi<br />&nbsp;jp po,loop</div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Pennywise</b> [ Sun Jul 01, 2012 10:09 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Here's my tested and working dte code. The game executes this code three times before moving onto to the next text byte and that really threw a wrench into my code. I'm this is not the best routine ever, but it does work as intended.
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">ld de,C000&nbsp; &nbsp;11 00 C0&nbsp; &nbsp;; dte second pass check&nbsp; &nbsp;<br />&nbsp; &nbsp;&nbsp; &nbsp;ld a,&#40;de&#41;&nbsp; &nbsp;1A&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;<br />&nbsp; &nbsp;&nbsp; &nbsp;cp a,03&nbsp; &nbsp;&nbsp; &nbsp;FE 03&nbsp; &nbsp;&nbsp; &nbsp;; go to second pass routine if 03<br />&nbsp; &nbsp;&nbsp; &nbsp;jr z&nbsp; &nbsp;&nbsp; &nbsp;28 2F<br />&nbsp; &nbsp;&nbsp; &nbsp;cp a,04&nbsp; &nbsp;&nbsp; &nbsp;FE 04&nbsp; &nbsp;&nbsp; &nbsp;; above except slightly modified<br />&nbsp; &nbsp;&nbsp; &nbsp;jr z&nbsp; &nbsp;&nbsp; &nbsp;28 31<br />&nbsp; &nbsp;&nbsp; &nbsp;cp a,05&nbsp; &nbsp;&nbsp; &nbsp;FE 05<br />&nbsp; &nbsp;&nbsp; &nbsp;jr z&nbsp; &nbsp;&nbsp; &nbsp;28 2D<br />&nbsp; &nbsp;&nbsp; &nbsp;cp a,06&nbsp; &nbsp;&nbsp; &nbsp;FE 06<br />&nbsp; &nbsp;&nbsp; &nbsp;jr nz&nbsp; &nbsp;&nbsp; &nbsp;20 03&nbsp; &nbsp;&nbsp; &nbsp;<br />&nbsp; &nbsp;&nbsp; &nbsp;ld a,00&nbsp; &nbsp;&nbsp; &nbsp;3E 00<br />&nbsp; &nbsp;&nbsp; &nbsp;ld de,a&nbsp; &nbsp;&nbsp; &nbsp;12<br />&nbsp; &nbsp;&nbsp; &nbsp;ld hl,C20C&nbsp; &nbsp;21 0C C2&nbsp; &nbsp;; original text read routine<br />&nbsp; &nbsp;&nbsp; &nbsp;ld c,&#40;hl&#41;&nbsp; &nbsp;4E<br />&nbsp; &nbsp;&nbsp; &nbsp;inc hl&nbsp; &nbsp;&nbsp; &nbsp;23<br />&nbsp; &nbsp;&nbsp; &nbsp;ld b,&#40;hl&#41;&nbsp; &nbsp;46<br />&nbsp; &nbsp;&nbsp; &nbsp;ld a,&#40;bc&#41;&nbsp; &nbsp;0A<br />&nbsp; &nbsp;&nbsp; &nbsp;cp a,50&nbsp; &nbsp;&nbsp; &nbsp;FE 50&nbsp; &nbsp;&nbsp; &nbsp;; dte check values 50-80<br />&nbsp; &nbsp;&nbsp; &nbsp;jr nc&nbsp; &nbsp;&nbsp; &nbsp;30 01<br />&nbsp; &nbsp;&nbsp; &nbsp;ret&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;C9&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;; return if less than 50 or greater than 80<br />&nbsp; &nbsp;&nbsp; &nbsp;cp a,80&nbsp; &nbsp;&nbsp; &nbsp;FE 80<br />&nbsp; &nbsp;&nbsp; &nbsp;jr nc&nbsp; &nbsp;&nbsp; &nbsp;30 FB<br />&nbsp; &nbsp;&nbsp; &nbsp;push af&nbsp; &nbsp;&nbsp; &nbsp;F5<br />&nbsp; &nbsp;&nbsp; &nbsp;ld a,&#40;de&#41;&nbsp; &nbsp;1A&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;; increments the dte second pass check byte<br />&nbsp; &nbsp;&nbsp; &nbsp;inc a&nbsp; &nbsp;&nbsp; &nbsp;3C<br />&nbsp; &nbsp;&nbsp; &nbsp;ld &#40;de&#41;,a&nbsp; &nbsp;12<br />&nbsp; &nbsp;&nbsp; &nbsp;pop af&nbsp; &nbsp;&nbsp; &nbsp;F1<br />&nbsp; &nbsp;&nbsp; &nbsp;sub,50&nbsp; &nbsp;&nbsp; &nbsp;D6 50&nbsp; &nbsp;&nbsp; &nbsp;; subtract 50 from the dte value to be used for the table<br />&nbsp; &nbsp;&nbsp; &nbsp;push hl&nbsp; &nbsp;&nbsp; &nbsp;E5<br />&nbsp; &nbsp;&nbsp; &nbsp;ld h1,3B80&nbsp; &nbsp;21 80 3B&nbsp; &nbsp;; loads the base offset for the dte table<br />&nbsp; &nbsp;&nbsp; &nbsp;add l&nbsp; &nbsp;&nbsp; &nbsp;85&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;; adds what was previous subtracted to the table<br />&nbsp; &nbsp;&nbsp; &nbsp;ld l,a&nbsp; &nbsp;&nbsp; &nbsp;6F<br />&nbsp; &nbsp;&nbsp; &nbsp;ld a,&#40;hl&#41;&nbsp; &nbsp;7E&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;; puts the first dte value in a<br />&nbsp; &nbsp;&nbsp; &nbsp;pop hl&nbsp; &nbsp;&nbsp; &nbsp;E1<br />&nbsp; &nbsp;&nbsp; &nbsp;ret&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;C9<br />&nbsp; &nbsp;&nbsp; &nbsp;<br />&nbsp; &nbsp;&nbsp; &nbsp;ld hl,C20C&nbsp; &nbsp;21 0C C2&nbsp; &nbsp;; second pass routine only triggered once<br />&nbsp; &nbsp;&nbsp; &nbsp;ld a, &#40;hl&#41;&nbsp; &nbsp;7E&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;<br />&nbsp; &nbsp;&nbsp; &nbsp;dec a&nbsp; &nbsp;&nbsp; &nbsp;3D&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;; decrements the the text offset by 1 to adjust for dte<br />&nbsp; &nbsp;&nbsp; &nbsp;ld hl,a&nbsp; &nbsp;&nbsp; &nbsp;77<br />&nbsp; &nbsp;&nbsp; &nbsp;<br />&nbsp; &nbsp;&nbsp; &nbsp;ld a,&#40;de&#41;&nbsp; &nbsp;1A&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;; second pass routine, goes here if a &lt; 3<br />&nbsp; &nbsp;&nbsp; &nbsp;inc a&nbsp; &nbsp;&nbsp; &nbsp;3C&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;; increments dte flag<br />&nbsp; &nbsp;&nbsp; &nbsp;ld &#40;de&#41;,a&nbsp; &nbsp;12<br />&nbsp; &nbsp;&nbsp; &nbsp;ld hl,C20C&nbsp; &nbsp;21 0C C2&nbsp; &nbsp;; original text read routine<br />&nbsp; &nbsp;&nbsp; &nbsp;ld c,&#40;hl&#41;&nbsp; &nbsp;4E<br />&nbsp; &nbsp;&nbsp; &nbsp;inc hl&nbsp; &nbsp;&nbsp; &nbsp;23<br />&nbsp; &nbsp;&nbsp; &nbsp;ld b,&#40;hl&#41;&nbsp; &nbsp;46<br />&nbsp; &nbsp;&nbsp; &nbsp;ld a,&#40;bc&#41;&nbsp; &nbsp;0A<br />&nbsp; &nbsp;&nbsp; &nbsp;sub,50&nbsp; &nbsp;&nbsp; &nbsp;D6 50<br />&nbsp; &nbsp;&nbsp; &nbsp;push hl&nbsp; &nbsp;&nbsp; &nbsp;E5<br />&nbsp; &nbsp;&nbsp; &nbsp;ld h1,3B80&nbsp; &nbsp;21 80 3B&nbsp; &nbsp;; same dte code<br />&nbsp; &nbsp;&nbsp; &nbsp;add l&nbsp; &nbsp;&nbsp; &nbsp;85<br />&nbsp; &nbsp;&nbsp; &nbsp;ld l,a&nbsp; &nbsp;&nbsp; &nbsp;6F<br />&nbsp; &nbsp;&nbsp; &nbsp;inc 1&nbsp; &nbsp;&nbsp; &nbsp;2C&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;; add 1 to the dte table offset for second dte value<br />&nbsp; &nbsp;&nbsp; &nbsp;ld a,&#40;hl&#41;&nbsp; &nbsp;7E<br />&nbsp; &nbsp;&nbsp; &nbsp;pop hl&nbsp; &nbsp;&nbsp; &nbsp;E1<br />&nbsp; &nbsp;&nbsp; &nbsp;ret&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;C9<br /></div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dwedit</b> [ Sun Jul 01, 2012 11:54 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />It looks like you're assembling by hand, are you really doing this?  I'd at least set up TASM or something to make a binary, then I can copy-paste assembled code in with a hex editor.
<br />
<br />I see some typos in the ASM code, like missing parenthesis on (de) or (hl), or calling hl "h1".  Those don't matter if you're assembling by hand, but an assembler would give errors.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Pennywise</b> [ Mon Jul 02, 2012 3:40 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Yeah, I know assembling code by hand isn't the smartest or even the best way to handle writing and developing code. I'm actually waiting for this person called Lin to release his/her assembler for the system. Hopefully, if it's released this summer, I'll be switching over to that.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>