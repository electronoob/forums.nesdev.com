<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=3&amp;t=8107" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2011-10-14T03:43:00-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=3&amp;t=8107</id>
<entry>
<author><name><![CDATA[Bisqwit]]></name></author>
<updated>2011-10-14T03:15:58-07:00</updated>
<published>2011-10-14T03:15:58-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8107&amp;p=85032#p85032</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8107&amp;p=85032#p85032"/>
<title type="html"><![CDATA[PLA]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8107&amp;p=85032#p85032"><![CDATA[
Also, on the topic of Visual6502, I went ahead and combined PLA-related information from a few sources into this listing.<br />At &gt; 50 kB is probably too large to post here directly, so I will just link to it: <!-- m --><a class="postlink" href="http://bisqwit.iki.fi/kala/nes-pla-listing.txt">http://bisqwit.iki.fi/kala/nes-pla-listing.txt</a><!-- m --><br /><br />I suspect there are errors in it.<br />For example, line 103 is described as 0xx010x0 , which matches the described PHP, PLA, PHA, PLP, but also ASL, ROL, ROR and LSR.<br /> I did not verify with the photographed chip. This is just copied from others' listings, from people who say they doublechecked it...<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5043">Bisqwit</a> — Fri Oct 14, 2011 3:15 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bisqwit]]></name></author>
<updated>2011-10-14T03:43:00-07:00</updated>
<published>2011-10-14T01:15:42-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8107&amp;p=85026#p85026</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8107&amp;p=85026#p85026"/>
<title type="html"><![CDATA[SHX/SHY]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8107&amp;p=85026#p85026"><![CDATA[
I implemented SHX and SHY as such:<br /><br />// 9E: // shx  $1234,y<br />Array<br />(<br />    [1005] =&gt; addr = PB();   <br />    [1020] =&gt; d = Y;<br />    [1050] =&gt; addr = u8(addr) + 256 * PB();<br />    [1080] =&gt; RB(wrap(addr, addr+d));<br />    [1262] =&gt; WB(wrap(addr, addr+d), X &amp; ((addr+d) &gt;&gt; 8));<br />)<br /><br />// 9C: // shy  $1234,x<br />Array<br />(<br />    [1005] =&gt; addr = PB();   <br />    [1010] =&gt; d = X;<br />    [1050] =&gt; addr = u8(addr) + 256 * PB();<br />    [1080] =&gt; RB(wrap(addr, addr+d));<br />    [1263] =&gt; WB(wrap(addr, addr+d), Y &amp; ((addr+d) &gt;&gt; 8));<br />)<br /><br />Where PB() is equal to RB(PC++),<br />RB(addr) reads a byte from given address,<br />and WB(addr, value) writes a byte into the given address;<br />and wrap(addr, addr2) is equal to (addr &amp; 0xFF00) + (addr2 &amp; 0xFF).<br /><br />This passes Blargg's test. Note that changing "X &amp; ((addr+d) &gt;&gt; 8)" into "X &amp; (((addr+d) &gt;&gt; 8) + 1)" or  "X &amp; ((addr) &gt;&gt; 8)" or into a combination thereof made no difference to the fact.<br /><br />Is this still wrong, though?<br />At least if I apply this to the SHA opcode 93, I seem to damage the internal logic of Blargg's cpu_timing_test6. SHA opcode 9F and SHS opcode 9B implemented this way do not damage the timing test, but there is no functional test for them.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5043">Bisqwit</a> — Fri Oct 14, 2011 1:15 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[beannaich]]></name></author>
<updated>2011-09-16T14:22:21-07:00</updated>
<published>2011-09-16T14:22:21-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8107&amp;p=84022#p84022</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8107&amp;p=84022#p84022"/>
<title type="html"><![CDATA[SHX/SHY]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8107&amp;p=84022#p84022"><![CDATA[
Wow, now I feel like a tard. I actually had this site open for a day or two and never got around to checking out the links :l<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4320">beannaich</a> — Fri Sep 16, 2011 2:22 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[lidnariq]]></name></author>
<updated>2011-09-16T12:52:48-07:00</updated>
<published>2011-09-16T12:52:48-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8107&amp;p=84013#p84013</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8107&amp;p=84013#p84013"/>
<title type="html"><![CDATA[SHX/SHY]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8107&amp;p=84013#p84013"><![CDATA[
Just start here: <!-- m --><a class="postlink" href="http://www.visual6502.org/wiki/index.php?title=MOS_6502">http://www.visual6502.org/wiki/index.php?title=MOS_6502</a><!-- m --><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3512">lidnariq</a> — Fri Sep 16, 2011 12:52 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[beannaich]]></name></author>
<updated>2011-09-16T01:08:07-07:00</updated>
<published>2011-09-16T01:08:07-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8107&amp;p=83970#p83970</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8107&amp;p=83970#p83970"/>
<title type="html"><![CDATA[SHX/SHY]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8107&amp;p=83970#p83970"><![CDATA[
@lidnariq that is freaking awesome! Did you come up with that yourself? It would be nice to have each line of the PLA decoded, I've been looking and to the best of my knowledge, a ready list isn't available. At least, not on Google. Do you know of any?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4320">beannaich</a> — Fri Sep 16, 2011 1:08 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[lidnariq]]></name></author>
<updated>2011-09-16T00:12:02-07:00</updated>
<published>2011-09-16T00:12:02-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8107&amp;p=83966#p83966</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8107&amp;p=83966#p83966"/>
<title type="html"><![CDATA[SHX/SHY]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8107&amp;p=83966#p83966"><![CDATA[
<div class="quotetitle">beannaich wrote:</div><div class="quotecontent"><br />The HLT (0x02) seems to cause the processor to stop because the T-State in the CPU is never reset to 1 because the CPU can't write back to an immediate address? That would cause the CPU to not be able to fetch the next instruction and not respond to IRQ/NMI. <br />But the question remains.. Why ANC? I can't figure it out and it's driving me nuts!<br /></div><br /><br />Because the 2A03 is an NMOS CPU, it has weak (resistors) pull-ups and strong (transistor) pull-downs. If two different things pull down at the same time, you get a logical and.<br /><br /><br />p.s. you might find the following rearrangement of the instruction table informative:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">       00       04       08       0C       10        14        18        1C<br />00 BRK immed|nop zpg|PHP impl |nop abs|BPL rel  |nop zpg,X|CLC impl |nop abs,X  \<br />20 JSR abs  |BIT zpg|PLP impl |BIT abs|BMI rel  |nop zpg,X|SEC impl |nop abs,X   \ program flow<br />40 RTI impl |nop zpg|PHA impl |JMP abs|BVC rel  |nop zpg,X|CLI impl |nop abs,X   /<br />60 RTS impl |nop zpg|PLA impl |JMP ind|BVS rel  |nop zpx,X|SEI impl |nop abs,X  /<br />80 nop immed|STY zpg|DEY impl |STY abs|BCC rel  |STY zpg,X|TYA impl |sya abs,X  store Y<br />A0 LDY immed|LDY zpg|TAY impl |LDY abs|BCS rel  |LDY zpg,X|CLV impl |LDY abs,X  load Y<br />C0 CPY immed|CPY zpg|INY impl |CPY abs|BNE rel  |nop zpg,X|CLD impl |nop abs,X  compare Y<br />E0 CPX immed|CPX zpg|INX impl |CPX abs|BEQ rel  |nop zpg,X|SED impl |nop abs,X  compare X<br />02 kil      |ASL zpg|ASL A    |ASL abs|kil      |ASL zpg,X|nop impl |ASL abs,X  arithmetic shift left<br />22 kil      |ROL zpg|ROL A    |ROL abs|kil      |ROL zpg,X|nop impl |ROL abs,X  rotate left through carry<br />42 kil      |LSR zpg|LSR A    |LSR abs|kil      |LSR zpg,X|nop impl |LSR abs,X  logical shirt right<br />62 kil      |ROR zpg|ROR A    |ROR abs|kil      |ROR zpg,X|nop impl |ROR abs,X  rotate right through carry<br />82 nop imm  |STX zpg|TXA impl |STX abs|kil      |STX zpg,Y|TXS impl |sxa abs,Y  store X<br />A2 LDX imm  |LDX zpg|TAX impl |LDX abs|kil      |LDX zpg,Y|TSX impl |LDX abs,Y  load X<br />C2 nop imm  |DEC zpg|DEX impl |DEC abs|kil      |DEC zpg,X|nop impl |DEC abs,X  decrement<br />E2 nop imm  |INC zpg|NOP impl |INC abs|kil      |INC zpg,X|nop impl |INC abs,X  increment<br />01 ORA X,ind|ORA zpg|ORA immed|ORA abs|ORA ind,Y|ORA zpg,X|ORA abs,Y|ORA abs,X  bitwise inclusive OR<br />21 AND X,ind|AND zpg|AND immed|AND abs|AND ind,Y|AND zpg,X|AND abs,Y|AND abs,X  bitwise and<br />41 EOR X,ind|EOR zpg|EOR immed|EOR abs|EOR ind,Y|EOR zpg,X|EOR abs,Y|EOR abs,X  bitwise exclusive or<br />61 ADC X,ind|ADC zpg|ADC immed|ADC abs|ADC ind,Y|ADC zpg,X|ADC abs,Y|ADC abs,X  add with carry<br />81 STA X,ind|STA zpg|nop immed|STA abs|STA ind,Y|STA zpg,X|STA abs,Y|STA abs,X  store A<br />A1 LDA X,ind|LDA zpg|LDA immed|LDA abs|LDA ind,Y|LDA zpg,X|LDA abs,Y|LDA abs,X  load A<br />C1 CMP X,ind|CMP zpg|CMP immed|CMP abs|CMP ind,Y|CMP zpg,X|CMP abs,Y|CMP abs,X  compare<br />E1 SBC X,ind|SBC zpg|SBC immed|SBC abs|SBC ind,Y|SBC zpg,X|SBC abs,Y|SBC abs,X  subtract with borrow<br />03 slo X,ind|slo zpg|aac immed|slo abs|slo ind,Y|slo zpg,X|slo abs,Y|slo abs,X  01+02 = ORA+ASL = 'slo'<br />23 rla X,ind|rla zpg|aac immed|rla abs|rla ind,Y|rla zpg,X|rla abs,Y|rla abs,X  21+22 = AND+ROL = 'rla'<br />43 sre X,ind|sre zpg|asr immed|sre abs|sre ind,Y|sre zpg,X|sre abs,Y|sre abs,X  41+42 = EOR+LSR = 'sre'<br />63 rra X,ind|rra zpg|arr immed|rra abs|rra ind,Y|rra zpg,X|rra abs,Y|rra abs,X  61+62 = ADC+ROR = 'rra'<br />83 sax X,ind|sax zpg|xaa immed|sax abs|axa ind,Y|sax zpg,Y|tas abs,Y|axa abs,Y  81+82 = STA+STX = 'sax'<br />A3 lax X,ind|lax zpg|atx immed|lax abs|lax ind,Y|lax zpg,Y|lar abs,Y|lax abs,Y  A1+A2 = LDA+LDX = 'lax'<br />C3 dcp X,ind|dcp zpg|axs immed|dcp abs|dcp ind,Y|dcp zpg,X|dcp abs,Y|dcp abs,X  C1+C2 = CMP+DEC = 'dcp'<br />E3 isc X,ind|isc zpg|sbc immed|isc abs|isc ind,Y|isc zpg,X|isc abs,Y|isc abs,X  E1+E2 = SBC+INC = 'isc'</div><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3512">lidnariq</a> — Fri Sep 16, 2011 12:12 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[beannaich]]></name></author>
<updated>2011-09-15T21:36:36-07:00</updated>
<published>2011-09-15T21:36:36-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8107&amp;p=83959#p83959</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8107&amp;p=83959#p83959"/>
<title type="html"><![CDATA[SHX/SHY]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8107&amp;p=83959#p83959"><![CDATA[
I've been doing some digging around with these unofficial codes, and have noticed some pretty interesting stuff! I'm sure it's been discussed elsewhere but I want to bring this up again because there are a few exceptions I can't figure out.<br /><br />Take ASL and ORA for example. ASL has a 'code' of $02 and a mask of $E2. where (mem[pc] &amp; mask) == code. This also results in some extra codes that don't seem to belong at first glance. But when you consider the 'unofficial' code ASO/SLO, these start to make sense.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">ASL Code = $02 Mask = $E2 // %000. ..1.<br />ORA Code = $01 Mask = $E1 // %000. ...1<br /><br />0x01, // ORA<br />0x03, // ASL + ORA = ASO<br />0x05, // ORA<br />0x06, // ASL<br />0x07, // ASL + ORA = ASO<br />0x09, // ORA<br />0x0A, // ASL<br />0x0D, // ORA<br />0x0E, // ASL<br />0x0F, // ASL + ORA = ASO<br />0x11, // ORA<br />0x13, // ASL + ORA = ASO<br />0x15, // ORA<br />0x16, // ASL<br />0x17, // ASL + ORA = ASO<br />0x19, // ORA<br />0x1B, // ASL + ORA = ASO<br />0x1D, // ORA<br />0x1E, // ASL<br />0x1F, // ASL + ORA = ASO</div><br /><br />Some codes decode as both ASL and ORA, and the PLA fires off both lines where these codes are decoded. But there are a few exceptions, some I have tried to come up with explanations for, one I definitely can't for the moment being:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">Exceptions:<br />0x02, // HLT<br />0x12, // HLT<br />0x1A, // NOP -&gt; ASL &#40;implied&#41;?<br />0x0B, // ANC</div><br /><br />The exception I can't seem to work out is the 'ANC' instruction. Neither ASL or ORA performs a logical AND? The HLT (0x02) seems to cause the processor to stop because the T-State in the CPU is never reset to 1 because the CPU can't write back to an immediate address? That would cause the CPU to not be able to fetch the next instruction and not respond to IRQ/NMI. The 'NOP' (0x1A) Would appear to just be an ASL instruction in implied mode, I figured this because it's size is only 1 byte, but it fits in the scheme defined <a href="http://www.llx.com/~nparker/a2/opcodes.html" class="postlink">http://www.llx.com/~nparker/a2/opcodes.html</a>. The 1 byte size seems to suggest it's in implied mode and therefor CAN'T do anything, so it appears to behave like a NOP.<br /><br />But the question remains.. Why ANC? I can't figure it out and it's driving me nuts!<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4320">beannaich</a> — Thu Sep 15, 2011 9:36 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[thefox]]></name></author>
<updated>2011-09-10T21:31:04-07:00</updated>
<published>2011-09-10T21:31:04-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8107&amp;p=83718#p83718</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8107&amp;p=83718#p83718"/>
<title type="html"><![CDATA[SHX/SHY]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8107&amp;p=83718#p83718"><![CDATA[
<div class="quotetitle">Dwedit wrote:</div><div class="quotecontent"><br />Super Cars uses SLO.<br /></div><br />Seems to be using LAX as well (being the usual curious me, checked in Nintendulator). I also checked that it seems to be actually using the value loaded into X by LAX, so I doubt it's a bad dump.<br /><br />I didn't notice SLO being used anywhere, though, but it was hard to test very far with Nintendulator flooding the Debug Information window with "Invalid opcode $B3 (LAX) encountered at $F872" when the invalid opcode logging was turned on...<br /><br />Puzznic's two byte NOP doesn't seem to be serving any purpose as it isn't in the middle of timed code or anything (besides, it's a NOP with an immediate parameter, so it takes the same amount of cycles as a normal NOP). My money is on programming error that went unnoticed as it didn't cause any real harm.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=80">thefox</a> — Sat Sep 10, 2011 9:31 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2011-09-10T08:29:46-07:00</updated>
<published>2011-09-10T08:29:46-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8107&amp;p=83705#p83705</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8107&amp;p=83705#p83705"/>
<title type="html"><![CDATA[SHX/SHY]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8107&amp;p=83705#p83705"><![CDATA[
What is the CRC32 of Puzznic and Super Cars versions with the unofficial opcode?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Sat Sep 10, 2011 8:29 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Zepper]]></name></author>
<updated>2011-09-10T08:13:01-07:00</updated>
<published>2011-09-10T08:13:01-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8107&amp;p=83704#p83704</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8107&amp;p=83704#p83704"/>
<title type="html"><![CDATA[SHX/SHY]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8107&amp;p=83704#p83704"><![CDATA[
<div class="quotetitle">Dwedit wrote:</div><div class="quotecontent"><br />Super Cars uses SLO.  Puzznic uses a two-byte nop.<br /></div><br /><br />Sorry to ask, but are you sure it's not a bad dump? I've found a case in a game (from those XXXX-in-1 carts) that <em>should be</em> an unofficial opcode; the original version <strong>never used it</strong>.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=39">Zepper</a> — Sat Sep 10, 2011 8:13 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Dwedit]]></name></author>
<updated>2011-09-09T15:10:19-07:00</updated>
<published>2011-09-09T15:10:19-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8107&amp;p=83675#p83675</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8107&amp;p=83675#p83675"/>
<title type="html"><![CDATA[SHX/SHY]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8107&amp;p=83675#p83675"><![CDATA[
Super Cars uses SLO.  Puzznic uses a two-byte nop.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=53">Dwedit</a> — Fri Sep 09, 2011 3:10 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Zepper]]></name></author>
<updated>2011-09-09T14:27:57-07:00</updated>
<published>2011-09-09T14:27:57-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8107&amp;p=83671#p83671</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8107&amp;p=83671#p83671"/>
<title type="html"><![CDATA[SHX/SHY]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8107&amp;p=83671#p83671"><![CDATA[
Is there <em>even</em> a game that uses unofficial opcodes? I'm not counting NOPs.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=39">Zepper</a> — Fri Sep 09, 2011 2:27 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[beannaich]]></name></author>
<updated>2011-09-09T10:13:32-07:00</updated>
<published>2011-09-09T10:13:32-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8107&amp;p=83666#p83666</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8107&amp;p=83666#p83666"/>
<title type="html"><![CDATA[SHX/SHY]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8107&amp;p=83666#p83666"><![CDATA[
<div class="quotetitle">Dwedit wrote:</div><div class="quotecontent"><br />So are all the unofficial Read-Modify-Write instructions safe?  Referring to the instructions which combine the effects of the Read-Modify-Write instruction with the other ALU instruction that appears in the same 32 byte area.<br /></div><br /><br />Just glancing over my CPU code, I can't seem to find any RMW instructions that have been stigmatized as 'unsafe', I could obviously be wrong though!<br /><br />I'm just going to go ahead and not emulate these instructions until their precise behavior is reverse-engineered. I don't see many games using these instructions anyway, given their unpredictable nature.<br /><br />Thanks anyways guys! <img src="http://forums.nesdev.com/images/smilies/icon_razz.gif" alt=":P" title="Razz" /><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4320">beannaich</a> — Fri Sep 09, 2011 10:13 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Dwedit]]></name></author>
<updated>2011-09-09T09:21:46-07:00</updated>
<published>2011-09-09T09:21:46-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8107&amp;p=83665#p83665</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8107&amp;p=83665#p83665"/>
<title type="html"><![CDATA[SHX/SHY]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8107&amp;p=83665#p83665"><![CDATA[
So are all the unofficial Read-Modify-Write instructions safe?  Referring to the instructions which combine the effects of the Read-Modify-Write instruction with the other ALU instruction that appears in the same 32 byte area.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=53">Dwedit</a> — Fri Sep 09, 2011 9:21 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2011-09-09T04:23:49-07:00</updated>
<published>2011-09-09T04:23:49-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8107&amp;p=83657#p83657</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8107&amp;p=83657#p83657"/>
<title type="html"><![CDATA[SHX/SHY]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8107&amp;p=83657#p83657"><![CDATA[
Yeah, if an unofficial opcode's not on <a href="http://wiki.nesdev.com/w/index.php/Programming_with_unofficial_opcodes" class="postlink">this list</a>, then it's either A. unstable due to reading and writing the 6502's internal "special bus" in the same cycle, B. one of the numerous SKB/SKWs that I neglected to mention, or C. otherwise of extremely limited applicability.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Fri Sep 09, 2011 4:23 am</p><hr />
]]></content>
</entry>
</feed>