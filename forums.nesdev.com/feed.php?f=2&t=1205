<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=2&amp;t=1205" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2006-04-25T14:47:40-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=2&amp;t=1205</id>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2006-04-25T14:47:40-07:00</updated>
<published>2006-04-25T14:47:40-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1205&amp;p=12231#p12231</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1205&amp;p=12231#p12231"/>
<title type="html"><![CDATA[Efficient compression for NES graphics]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1205&amp;p=12231#p12231"><![CDATA[
<div class="quotetitle">tokumaru wrote:</div><div class="quotecontent"><br />If you have little space, that means you need compression. To better compress the data, the compression scheme becomes more complex. As it becomes complex, the decompression code gets bigger and starts eating ROM space. So, as the data shrinks, the decompressor gets bigger, so we have to find a healthy balance between the two. And that's not always so simple.<br /></div><br />In fact, it's not even computable. See <a href="http://en.wikipedia.org/wiki/Kolmogorov_complexity" class="postlink">Kolmogorov complexity</a>.<br /><br /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent"><br />Forgive me, but GFX compression IS very important.<br /></div><br />If so, why are there only three North American NES games using TGROM (MMC3 + CHR RAM), two using TQROM (MMC3 + CHR ROM + CHR RAM), and no other MMC3 boards that have CHR RAM?<br /><br /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent"><br />The graphics used by a level can eat as much space as it's map, depending on the game. I'm designing a game where all (about 12) level maps TOGETHER use only 8KB (they are somewhat compressed). That's the same as 1 full tileset (512 tiles).<br /></div><br /><em>Super Mario Bros.</em> used about 8 KB for maps, but it shared the tileset among all maps.<br /><br /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent"><br />You'll most likely decompress [tiles] only once, before the level starts, while levels must be partially decoded all the time, as the player moves, due to memory restrictions.<br /></div><br />Not if half the tiles on the screen are animating, as is the case in <em>Super Mario Bros. 2</em> or <em>Super Mario Bros. 3</em>, as Bregalad points out. And not if you have one continuous map for the whole overworld, as is the case in a few notable RPGs.<br /><br /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent"><br />So, the space taken by SNES graphics is much larger<br /></div><br />But the cost in dollars per megabit of replicating a program was greater in the NES era.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Tue Apr 25, 2006 2:47 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2006-04-25T10:11:49-07:00</updated>
<published>2006-04-25T10:11:49-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1205&amp;p=12223#p12223</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1205&amp;p=12223#p12223"/>
<title type="html"><![CDATA[Efficient compression for NES graphics]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1205&amp;p=12223#p12223"><![CDATA[
The SNES and Megadrive/Genesis have 4BPP tiles, while the NES have 2BPP tiles. The SNES hold up to 1024 BG tiles and 1024 sprites tiles in one single tileset, while the NES have only 256 of each. The space of tiles loaded in a single BG or sprite tileset is 4kb for the NES, and 32kb for the SNES, so 8 times larger.<br />So, the space taken by SNES graphics is much larger, so compress them becomes more significant.<br />If you have large, large amount of tiles in a game, yeah, it's meningfull to compress them, but not for a small game where you only have a few tilesets.<br />You often have more maps than tilesets (sound logical, right ?), so you'd normally compress maps over tilesets.<br /><br />Tough, one big advantage of compressing tilesets over maps is that you don't have to buffer the whole chunk to ram, just write it to $2007 directly in the decompression routine. This of course go hell if you want to animate tiles.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Tue Apr 25, 2006 10:11 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2006-04-25T09:43:03-07:00</updated>
<published>2006-04-25T09:43:03-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1205&amp;p=12221#p12221</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1205&amp;p=12221#p12221"/>
<title type="html"><![CDATA[Efficient compression for NES graphics]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1205&amp;p=12221#p12221"><![CDATA[
Forgive me, but GFX compression IS very important. The graphics used by a level can eat as much space as it's map, depending on the game. I'm designing a game where all (about 12) level maps TOGETHER use only 8KB (they are somewhat compressed). That's the same as 1 full tileset (512 tiles).<br /><br />If you are using CHR-ROM of course that is not even a discussion, you'll not be using compression for the tiles. But if you were to use CHR-RAM, you woudn't want all those tiles stealing huge chunks of your PRG/DATA space.<br /><br />On other gaming systems, such as the SNES or the Megadrive/Genesis, that must use RAM for tilesets, games almost always compress their tiles.<br /><br />I some times consider GFX compression more important than level map compression, as it has less impact on performance. You'll most likely decompress only once, before the level starts, while levels must be partially decoded all the time, as the player moves, due to memory restrictions.<br /><br />I'm in favour of encoding the levels in more compact ways, yes, but not with general compression, 'cause that makes it harder to have random access to parts of the map without huge tables of pointers, that kinda go against the purpose of compression.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Tue Apr 25, 2006 9:43 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2006-04-25T08:59:06-07:00</updated>
<published>2006-04-25T08:59:06-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1205&amp;p=12217#p12217</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1205&amp;p=12217#p12217"/>
<title type="html"><![CDATA[Efficient compression for NES graphics]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1205&amp;p=12217#p12217"><![CDATA[
Compression should be only used for with big, big chunks of data, like levels maps or text in a RPG. Small things (such like a standard tileset) doesn't need to be compressed, because it slows the process time, the game developpement time and doesn't spare that much space.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Tue Apr 25, 2006 8:59 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2006-04-24T14:28:03-07:00</updated>
<published>2006-04-24T14:28:03-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1205&amp;p=12198#p12198</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1205&amp;p=12198#p12198"/>
<title type="html"><![CDATA[Efficient compression for NES graphics]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1205&amp;p=12198#p12198"><![CDATA[
The idea was OK, but it was not optimum. The size of the decompression code was around a full page (256 bytes), if I remember correctly. And 18 bits per colored rectangle (2 for color, 8 for position and 8 for dimensions) also wasn't that good.<br /><br />It is a strangle battle to fight: If you have little space, that means you need compression. To better compress the data, the compression scheme becomes more complex. As it becomes complex, the decompression code gets bigger and starts eating ROM space. So, as the data shrinks, the decompressor gets bigger, so we have to find a healthy balance between the two. And that's not always so simple.<br /><br />I plan on doing more work on compression schemes, specially for graphics, but for now this is all I have, and it will remain like this since I'm not using it for my current project. If anyone wants to see the code as is, let me now and I'll look for it.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Mon Apr 24, 2006 2:28 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2006-04-24T13:52:05-07:00</updated>
<published>2006-04-24T13:52:05-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1205&amp;p=12195#p12195</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1205&amp;p=12195#p12195"/>
<title type="html"><![CDATA[Efficient compression for NES graphics]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1205&amp;p=12195#p12195"><![CDATA[
<div class="quotetitle">Bregalad wrote:</div><div class="quotecontent"><br />this isn't real NES developpement since your size is limited to ridiculous amount of data.<br /></div><br />Unless you want to clone WarioWare on the NES. Imagine putting two hundred minigames into a 512 KB Game Pak.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Mon Apr 24, 2006 1:52 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2006-04-24T12:50:24-07:00</updated>
<published>2006-04-24T12:50:24-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1205&amp;p=12193#p12193</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1205&amp;p=12193#p12193"/>
<title type="html"><![CDATA[Efficient compression for NES graphics]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1205&amp;p=12193#p12193"><![CDATA[
In the case of the contest, maybe, but this isn't real NES developpement since your size is limited to ridiculous amount of data.<br />In a normal NES game, having lossy compression would be a real shame, since the graphics themselves are already made a "compact" way, with 2x2 tiles attributes and 2 planes 8x8 tiles.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Mon Apr 24, 2006 12:50 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2006-04-24T11:10:52-07:00</updated>
<published>2006-04-24T11:10:52-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1205&amp;p=12186#p12186</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1205&amp;p=12186#p12186"/>
<title type="html"><![CDATA[Efficient compression for NES graphics]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1205&amp;p=12186#p12186"><![CDATA[
<div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />I'm not good at making decisions. And when I do make them, I seem to pick the wrong ones... =)<br /></div><br /><br />Hey, I think your scheming were perfectly suited for one of those contests. It'd be cool to have a game's graphics fit just right with a compact decompressor.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Mon Apr 24, 2006 11:10 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2006-04-24T10:01:18-07:00</updated>
<published>2006-04-24T10:01:18-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1205&amp;p=12180#p12180</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1205&amp;p=12180#p12180"/>
<title type="html"><![CDATA[Efficient compression for NES graphics]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1205&amp;p=12180#p12180"><![CDATA[
You are 100% right. In the past few days I figured, what good would it be limiting myself even more... for a silly contest? So I decided I'd not lower the quality of a game so that it would fit in a smaller area.<br /><br />I'm not good at making decisions. And when I do make them, I seem to pick the wrong ones... =)<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Mon Apr 24, 2006 10:01 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2006-04-24T09:21:05-07:00</updated>
<published>2006-04-24T09:21:05-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1205&amp;p=12176#p12176</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1205&amp;p=12176#p12176"/>
<title type="html"><![CDATA[Efficient compression for NES graphics]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1205&amp;p=12176#p12176"><![CDATA[
Heh, I didn't follow all the post, but do you really think that a *LOSSY* graphics compression could be good on a system with such low resolution like the NES ? If you're talking for a 1kb constest or something, okay, but for a 'real' NES game, wouldn't that just even limit more the NES graphics that what they are already limited ?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Mon Apr 24, 2006 9:21 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2006-04-12T20:52:10-07:00</updated>
<published>2006-04-12T20:52:10-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1205&amp;p=11861#p11861</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1205&amp;p=11861#p11861"/>
<title type="html"><![CDATA[Efficient compression for NES graphics]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1205&amp;p=11861#p11861"><![CDATA[
<div class="quotetitle">Disch wrote:</div><div class="quotecontent"><br />Probably be better off using the monochrome mode bit.  Turns 0F black into 00 grey -- very noticalbe difference visually.<br /></div><br />hum... but then I'd be flashing 2 colors only... kinda boring! =)<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />The emphasis bits are much more subtle.<br /></div><br />I wish I could do some sort of smoother effect, like cycling the emphasis bits, giving an idea of animation, rather than flashing. But I guess you are right, it will be much too subtle.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Wed Apr 12, 2006 8:52 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Disch]]></name></author>
<updated>2006-04-12T15:33:33-07:00</updated>
<published>2006-04-12T15:33:33-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1205&amp;p=11851#p11851</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1205&amp;p=11851#p11851"/>
<title type="html"><![CDATA[Efficient compression for NES graphics]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1205&amp;p=11851#p11851"><![CDATA[
<div class="quotetitle">tokumaru wrote:</div><div class="quotecontent"><br />Maybe the color (de)emphasis bits? Anyway, I'll think of a simple effect to let the player know the game is alive.<br /></div><br /><br />Probably be better off using the monochrome mode bit.  Turns 0F black into 00 grey -- very noticalbe difference visually.  The emphasis bits are much more subtle.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=33">Disch</a> — Wed Apr 12, 2006 3:33 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2006-04-12T14:42:20-07:00</updated>
<published>2006-04-12T14:42:20-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1205&amp;p=11848#p11848</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1205&amp;p=11848#p11848"/>
<title type="html"><![CDATA[Efficient compression for NES graphics]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1205&amp;p=11848#p11848"><![CDATA[
I haven't had much time to work on this, so it took me a while. I came up with a scheme to hold all the graphics in only 2432 (2048 + 256 + 128) bytes. It is kind of a crazy idea, but it seems very promising.<br /><br />If anyone is interested, it goes something like this:<br /><br />Blocks of 16x16 pixels are individually encoded, wich means there are 128 of them to fill the whole 512 tiles of the pattern tables. All graphics are drawn with rectangles (from 1x1 to 16x16 pixels in size, with any possible combination in between). Each block has a background color, wich is used to clear it. Each block also has a rectangle count, that tells how many rectangles are used in that block. Each rectangle has a starting position in the block, and it's width and height.<br /><br />2048 bytes are used to hold the positions and sizes of 1024 rectangles, to be used on all 128 blocks. Wich means the rectangles/block ratio is 8. That may seem little at first, but with the simple graphics this game requires it will be OK. Most background blocks can easily stay within this average, but most sprites will go a bit over that. The main character uses twice the average. Diagonal detail is practically forbidden, as they are hard to represent with rectangles. Maybe a future version will incorporate other shapes? The algorithm can't get too complicated though, as the goal here is to save space.<br /><br />128 bytes hold the background color and the rectangle count for each block. 256 bytes hold the colors of each of the 1024 rectangles. These bytes are interleaved with level map data (wich doesn't use the top bit), so they aren't of much impact.<br /><br />A preliminary version of the decoding algorithm is ready and working (although I should prepare some more meaningful test data, I'm using just a couple of random rectangles for now), and it takes between 2 to 3 seconds to decode all blocks. Wich means that is the time to wait before anything shows on the screen. I'll try to improve the algorithm a bit, but I don't think I'll be getting much of a speed increase. Do you think this is too much time? Are 3 seconds enough for people to think something is not right?<br /><br />I though about flashing the screen or something, but I'd rather use something that doesn't mess with $2006 (no palette changes), since I want to render all tiles at once, setting $2006 only once, in the beginning. I don't want to interrupt that. Maybe the color (de)emphasis bits? Anyway, I'll think of a simple effect to let the player know the game is alive.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Wed Apr 12, 2006 2:42 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2006-03-10T23:00:09-07:00</updated>
<published>2006-03-10T23:00:09-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1205&amp;p=10628#p10628</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1205&amp;p=10628#p10628"/>
<title type="html"><![CDATA[Efficient compression for NES graphics]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1205&amp;p=10628#p10628"><![CDATA[
<div class="quotetitle">tepples wrote:</div><div class="quotecontent"><br />How much space might the scale2x unpacker take in PRG?<br /></div><br />Did you check the page explaining it? It seems pretty simple, there are only a few simple rules to follow. Accessing individual pixels would be the real pain, in my opinion. Maybe the scaling should be handled in 8bpp, and then converted back to the NES format when uploading to CHR RAM. If done on small objects at once, it woudn't be a memory (RAM) problem.<br /><br />Also, checking the pixels near the borders may complicate it a bit, since there are some inexistent pixels the normal routine would be trying to check, and you must trap that.<br /><br />Can't say how much it would take, but I don't think it is minigame compo material. Dwedit's 1bpp implementation of it in Z80 assembly took 271 bytes (without the boundary checks?)...<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Fri Mar 10, 2006 11:00 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2006-03-10T22:49:47-07:00</updated>
<published>2006-03-10T22:49:47-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1205&amp;p=10627#p10627</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1205&amp;p=10627#p10627"/>
<title type="html"><![CDATA[Efficient compression for NES graphics]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1205&amp;p=10627#p10627"><![CDATA[
<div class="quotetitle">blargg wrote:</div><div class="quotecontent"><br />Your image above is trying to fake more colors by using the alternating vertical line pattern.<br /></div><br />But that was an isolated example. I doubt that there will be many of these in the game. The top part are grass tiles (just doesn't have the correct palette yet), and grass is usually drawn with vertical stripes, but I won't be using many "patterns to simulate colors" through the game.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />It'd be more easily RLE compressible if you used <em>more</em> bits per pixel, representing patterns as another color. For example, you could use 4 bits per pixel to represent the even and odd column colors. 0000 would mean even and odd columns use color 0, 1001 would mean that even columns use color 10 and odd columns use color 01. Combine this with doing things at half resolution and it should compare to your wavelet example, but be simpler to implement.<br /></div><br />Yes, but I don't want to actually use lower resolution. I've been thinking <strong>A LOT</strong> about this lately. The wavelet way is the best I came up with so far, it is very adaptative, so that you can combine high and low resolution together. And it succeeded in removing the patterns. They were in fact turned into flat areas, wich will highly increase compression performance.<br /><br />I don't think the pattern thing will help me in this case, but I did like the idea. The fact that you could represent the tiles with lower resolution if you could also define patterns as colors, so that the resolution does not look so crappy. I liked it.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />This shows how it's important to avoid introducing any artifacts into the data that aren't in the original. Represent as close as possible the essence of the source graphics. If you can whittle down the mental idea of what your source graphics really are, you can find a compact representation.<br /></div><br />But these lines were supposed to be in the original, it's grass. =)<br />I know the graphics are rushed but... it's still grass.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Fri Mar 10, 2006 10:49 pm</p><hr />
]]></content>
</entry>
</feed>