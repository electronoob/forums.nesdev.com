<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=5&amp;t=7035" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2010-10-12T15:58:42-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=5&amp;t=7035</id>
<entry>
<author><name><![CDATA[Memblers]]></name></author>
<updated>2010-10-12T15:58:42-07:00</updated>
<published>2010-10-12T15:58:42-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7035&amp;p=68546#p68546</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7035&amp;p=68546#p68546"/>
<title type="html"><![CDATA[Reading a serial stream using an AVR - advice requested]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7035&amp;p=68546#p68546"><![CDATA[
Ah, this type of serial is new to me, that's pretty interesting, thanks for the correction.  Yeah the PIC's input capture peripheral sounds good for that, I don't know what the ATMega8 has though (of course it can be polled and timed too if need be).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=10">Memblers</a> — Tue Oct 12, 2010 3:58 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[lidnariq]]></name></author>
<updated>2010-10-11T23:53:00-07:00</updated>
<published>2010-10-11T23:53:00-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7035&amp;p=68516#p68516</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7035&amp;p=68516#p68516"/>
<title type="html"><![CDATA[Reading a serial stream using an AVR - advice requested]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7035&amp;p=68516#p68516"><![CDATA[
No, that's a combined synchronous serial, much like the 1wire protocol. Measure the time of each falling edge, then measure the time to the next rising edge -- the 1/0 state is when the edge spacing is more/less than ~380us. Very easy using something like the PIC's capture function.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3512">lidnariq</a> — Mon Oct 11, 2010 11:53 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Memblers]]></name></author>
<updated>2010-10-11T20:54:31-07:00</updated>
<published>2010-10-11T20:54:31-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7035&amp;p=68511#p68511</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7035&amp;p=68511#p68511"/>
<title type="html"><![CDATA[Reading a serial stream using an AVR - advice requested]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7035&amp;p=68511#p68511"><![CDATA[
It sounds like normal async serial, but with a lot more databits than 8.  I've never used AVR, but if there is an interrupt on level change (and poll it at first so you can syncronize it with the idle part), you could use that to handle all the receiving before returning.<br /><br />With that many bits there isn't any room to drift out of sync.  Writing the timed code loop should be simpler if the CPU oscillator/timer is matched exactly to the bit rate.  Otherwise seems like there'd be a lot of fractional CPU cycles to account for..<br /><br />I'm assuming you even need to read all the bits though, worst case.<br /><br />I wouldn't use the interrupts much like this, except to start it would be nice (if possible), unless you really need to have it interrupt something.  Could be error-prone also if that was able to affect the interrupt timing.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=10">Memblers</a> — Mon Oct 11, 2010 8:54 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[drk421]]></name></author>
<updated>2010-10-11T20:01:46-07:00</updated>
<published>2010-10-11T20:01:46-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7035&amp;p=68510#p68510</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7035&amp;p=68510#p68510"/>
<title type="html"><![CDATA[Reading a serial stream using an AVR - advice requested]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7035&amp;p=68510#p68510"><![CDATA[
So here's what I want to do:<br /><br />Read a serial stream using an AVR (ATMega8) (serial stream protocol details here):<br /><br /><!-- m --><a class="postlink" href="http://www.guysoflidar.com/files/v1_protocol.pdf">http://www.guysoflidar.com/files/v1_protocol.pdf</a><!-- m --><br /><br />I'm quite familiar with the AVR, just never had to write a software serial decoder before...<br /><br />Would you suggest I use the device's hardware timers and trigger an interrupt when it reaches a certain count?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=45">drk421</a> — Mon Oct 11, 2010 8:01 pm</p><hr />
]]></content>
</entry>
</feed>