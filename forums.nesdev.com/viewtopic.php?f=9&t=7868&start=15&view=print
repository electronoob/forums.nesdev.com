<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Simple/cheap EEPROM-style NES cartridge interface.</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Simple/cheap EEPROM-style NES cartridge interface.</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=9&amp;t=7868">http://forums.nesdev.com/viewtopic.php?f=9&amp;t=7868</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>2</strong> of <strong>2</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>kyuusaku</b> [ Sun Jun 19, 2011 3:34 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />If the bus is strobed for two cycles (419 ns) it's still might not work since I forgot some things: 
<br />
<br />-the bus itself has decoding to make the strobes. They are probably implemented by a 74LS32 (~20 ns)
<br />
<br />-the '245 and '154 adds 40+ ns to the "setup" requirements

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>person</b> [ Sun Jun 19, 2011 3:55 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">kyuusaku wrote:</div><div class="quotecontent">If the bus is strobed for two cycles (419 ns) it's still might not work since I forgot some things: <br /><br />-the bus itself has decoding to make the strobes. They are probably implemented by a 74LS32 (~20 ns)<br /><br />-the '245 and '154 adds 40+ ns to the "setup" requirements</div>
<br />
<br />In the XT, the controll-signals for the bus comes directly out of the Intel 8288 Bus-controller, where the address is latched by a set of 74LS373 latches. The 4-clock bus-cycle is controlled by the CPU itself, causing minimal intermission between the clocks.
<br />
<br />The latching of the address is done during the first clock. Then the control signals are set and the bus is allowed half a clock of setting time (tristating), then any device has an additional one and a half clock + waitstates to provide data. Data is read by the CPU on the initial falling edge of the final clock. The rest of the final clock is used to reset the control signals for a new bus-cycle.
<br />
<br />There is absolutely no custom logic between the 8288 bus controller and the bus.
<br />
<br />All in all, if it still doesn't work in a worst-case scenario, then up to 10 waitstates may be added. That's more than 2uS. You'll have to go back to the 60's or early 70's to find <strong><em>that</em></strong> slow memory.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>kyuusaku</b> [ Sun Jun 19, 2011 5:20 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I know that under normal conditions there wouldn't be any issues due to ample address decoding time, but since the 2 cycle read strobe is being used for NES address decoding via /ROMSEL it counts.
<br />
<br />The PC doesn't have a built-in programmable wait-state controller does it? I didn't say ISA wasn't possible, just that the design probably wouldn't work. Hell you could make a PCI-E x16 card with wait states :P
<br />
<br />I'd argue that a ISA card to begin with isn't simple or cheap for most people due to materials and availability, but I think you'd have to agree that adding wait state logic pushes it from being practical for even a retro computer collector to a novelty design when instead you could just use a couple i8255 + address decoder and end up with a more capable device*. Something like this: <!-- m --><a class="postlink" href="http://enes.emunova.net/en/infos/dumper.htm">http://enes.emunova.net/en/infos/dumper.htm</a><!-- m -->
<br />
<br />*with every I/O fully programmable you could reverse engineer carts, handle PPU /A13 and detect mirroring

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Sun Jun 19, 2011 7:40 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">kyuusaku wrote:</div><div class="quotecontent">If the bus is strobed for two cycles (419 ns) it still might not work since I forgot some things: </div>That doesn't make sense... the NES itself supports no waitstates. From nROMSEL to data valid must be less than 279ns; from PPU nRD to data valid similarly must be less than 186ns.
<br />
<br />The absolutely most paranoid interpretation of timing would require the cpu address bus to be stable for the entirety of φ1 and φ2 to load prgrom (558ns), and for the ppu address bus to be stable for the entire ALE and nRD cycles (372ns minus the latching time of 74x373). But I can say confidently that I've never seen anything so braindead that it requires a setup time as slow as its access time.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>kyuusaku</b> [ Sun Jun 19, 2011 11:26 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />It makes sense because there is a lot more decoding in this design than on the NES (single '139). After the '139 there is ~250 ns before Phi2 ends. Carts can get away with even slower ROMs since A0-A14 may be decoded way before Phi2 even starts. Maybe there aren't NES carts out there with ROMs that slow, but there are FC carts that are.
<br />
<br />Also the PPU has a lot longer than 186 ns to decode because it uses a transparent latch. It may have up to ((1/5.37 MHz) * 2) - 30 ns == ~340 ns.
<br />
<br />
<br />419 ns could be an issue with
<br />
<br />250 ns  propagation (boards that /CE with /ROMSEL)
<br />80 ns for 4x gate propagation (to make /ROMSEL in the design)
<br />20 ns for '154
<br />20 ns for '245
<br />??? for the ISA bus state decoder
<br />??? for 8086 hold times
<br />
<br />--
<br />
<br />The address bus *is* stable the entirety of Phi2, and most of Phi1. It's not an interpretation. The are carts with at least 250 ns ROMs so it's not far fetched.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Mon Jun 20, 2011 12:39 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">kyuusaku wrote:</div><div class="quotecontent">It makes sense because there is a lot more decoding in this design than on the NES (single '139). After the '139 there is ~250 ns before Phi2 ends. Carts can get away with even slower ROMs since A0-A14 may be decoded way before Phi2 even starts. Maybe there aren't NES carts out there with ROMs that slow, but there are FC carts that are.</div>BootGod's DB only knows of <a href="http://bootgod.dyndns.org:7777/profile.php?id=3284" class="postlink">one</a>.<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">80 ns for 4x gate propagation (to make /ROMSEL in the design)<br />20 ns for '154 + 20 ns for '245</div> The latter happens in parallel with the former, irrelevant<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">??? for the ISA bus state decoder</div> 35ns. Except that it's stable a whole cycle before the read happens anyway. Looking at a pdf for the 82c88 it looks like the 8086 also has  a substantial address stable time before nRD. (address valid starting at second half of T1, nRD asserted at start of T2, data valid by end of T3)<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">??? for 8086 hold times</div> 10ns. Which is the same as the 2MHz R6502<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">The address bus *is* stable the entirety of Phi2, and most of Phi1. It's not an interpretation. The are carts with at least 250 ns ROMs so it's not far fetched.</div> The <strong>interpretation</strong> is only a question of how long of a setup time the ROM needs. But NES ROMs don't have latches, so they don't have a setup time. Looking at a 300ns (m27128a) rom datasheet it only has a nCE-or-address→data time of 300ns and a nOE→data time of 120ns
<br />
<br />But all of this is irrelevant, because if it doesn't work because it's too fast, all he has to do is had a little more logic to add wait states.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>2</strong> of <strong>2</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>