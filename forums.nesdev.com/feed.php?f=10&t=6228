<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=10&amp;t=6228" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2010-03-31T07:21:56-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=10&amp;t=6228</id>
<entry>
<author><name><![CDATA[NES virus]]></name></author>
<updated>2010-03-31T07:21:56-07:00</updated>
<published>2010-03-31T07:21:56-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6228&amp;p=59361#p59361</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6228&amp;p=59361#p59361"/>
<title type="html"><![CDATA[First accomplishment, critique!]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6228&amp;p=59361#p59361"><![CDATA[
Yes, I was talking about a faster sprite, not an in-game velocity increase/decrease feature.<br /><br />I'll need something like that on a game I'm planning. But it's far future, by now.<br /><br /><br />EDIT: I tested the code and it's really faster! Thanks for explain!<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=136">NES virus</a> — Wed Mar 31, 2010 7:21 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Denine]]></name></author>
<updated>2010-03-31T06:01:20-07:00</updated>
<published>2010-03-31T06:01:20-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6228&amp;p=59357#p59357</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6228&amp;p=59357#p59357"/>
<title type="html"><![CDATA[First accomplishment, critique!]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6228&amp;p=59357#p59357"><![CDATA[
If you mean to move sprite faster...i have 2 options in mind.<br />First is to make a variable where you can store speed.Then just decaresing it(or increasing..)it you can change moving speed.<br />But if you plan to make fixed speed then just add more(or dec more...)to move.<br />For example:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">RightButton:<br />   LDA $00   <br />   AND #$80            ;Test for Right<br />   BEQ Return            ;Jump to Return if not pressed<br />   LDX $0203<br />   INX<br />   STX $0203<br /></div><br />(I assume that $203 is Sprite position...)<br />So if Right is pressed then it will move only 1 pixel per frame(?)<br />But if you use this code:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">RightButton:<br />   LDA $00   <br />   AND #$80            ;Test for Right<br />   BEQ Return            ;Jump to Return if not pressed<br />   LDX $0203<br />   INX<br />        INX<br />   STX $0203<br /></div><br />It will move with double speed now.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4239">Denine</a> — Wed Mar 31, 2010 6:01 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[NES virus]]></name></author>
<updated>2010-03-30T17:05:31-07:00</updated>
<published>2010-03-30T17:05:31-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6228&amp;p=59323#p59323</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6228&amp;p=59323#p59323"/>
<title type="html"><![CDATA[First accomplishment, critique!]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6228&amp;p=59323#p59323"><![CDATA[
NOOB QUESTION ALERT:<br /><br />1 - Would it be possible to have this sprite moving faster changing something on this source?<br /><br />2 - Could someone post the code with the "corrections" suggested above?<br /><br /><br />Thanks in advance!<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=136">NES virus</a> — Tue Mar 30, 2010 5:05 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2010-03-28T13:12:25-07:00</updated>
<published>2010-03-28T13:12:25-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6228&amp;p=59181#p59181</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6228&amp;p=59181#p59181"/>
<title type="html"><![CDATA[First accomplishment, critique!]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6228&amp;p=59181#p59181"><![CDATA[
<div class="quotetitle">Orsi wrote:</div><div class="quotecontent"><br />I attempted putting the logic (JSR DoInput) in the main loop before, but that caused my sprite to be moved at a ridiculous speed. I assume this is because the main loop runs many more times than the NMI since it cycles when the screen is being written.<br /></div><br />Bingo!<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />If I were to put my logic in the main loop, how would I control the speed in which my sprite moved?<br /></div><br />You just have to limit the execution of your main loop to once per frame. Typically this is done by setting a flag, like I suggested in <a href="http://nesdev.com/bbs/viewtopic.php?p=59122#59122" class="postlink">this post</a>.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Sun Mar 28, 2010 1:12 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Orsi]]></name></author>
<updated>2010-03-28T12:52:02-07:00</updated>
<published>2010-03-28T12:52:02-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6228&amp;p=59178#p59178</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6228&amp;p=59178#p59178"/>
<title type="html"><![CDATA[First accomplishment, critique!]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6228&amp;p=59178#p59178"><![CDATA[
Thanks for the quick responses and advice guys. <br /><br />I attempted putting the logic (JSR DoInput) in the main loop before, but that caused my sprite to be moved at a ridiculous speed. I assume this is because the main loop runs many more times than the NMI since it cycles when the screen is being written. If I were to put my logic in the main loop, how would I control the speed in which my sprite moved?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4297">Orsi</a> — Sun Mar 28, 2010 12:52 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2010-03-28T12:38:38-07:00</updated>
<published>2010-03-28T12:38:38-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6228&amp;p=59173#p59173</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6228&amp;p=59173#p59173"/>
<title type="html"><![CDATA[First accomplishment, critique!]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6228&amp;p=59173#p59173"><![CDATA[
I took a quick look and didn't see anything game-breaking. You are doing a bad thing though, which is wasting time with game logic during VBlank, while your game loop is empty.<br /><br />Vblank doesn't last long, so you don't want to waste time doing things like reading input and moving sprites. All the logic should go in your game loop, and VBlank time should be used exclusively to update VRAM (which in your case is just performing a sprite DMA). This problem is not breaking your program so far because you have little logic, but once you do a little more than moving sprites around you'll run out of VBlank time and the sprite DMA will happen during rendering, which will cause lots and lots of visual glitches.<br /><br />Another important thing is that you should reset the scroll at the end of your NMI routine, with one write to $2000 and two to $2005. You seem to only be using sprites so far, but when you use backgrounds that step is extremely important.<br /><br />EDIT: You can do it like MottZilla said too, it will leave VBlank free for VRAM updates just like my solution. I find the solution of putting everything in the NMI and leaving the main loop empty kind of weird though, specially since the NMI <strong>first</strong> updates VRAM and <strong>then</strong> handles game logic, because the first time the NMI executes there is no data to update VRAM with (you haven't run the game logic yet), so you'd have to add a special check to skip the updates if there is no data ready.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Sun Mar 28, 2010 12:38 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[MottZilla]]></name></author>
<updated>2010-03-28T12:32:24-07:00</updated>
<published>2010-03-28T12:32:24-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6228&amp;p=59172#p59172</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6228&amp;p=59172#p59172"/>
<title type="html"><![CDATA[First accomplishment, critique!]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6228&amp;p=59172#p59172"><![CDATA[
Yes, AND works as you said. I.E. if CPU Register A is 3, binary being 11, ANDed with 1 will result in the register A being 1. <br /><br />One suggestion, I would do the Joypad input routine after the graphical updates in your NMI in bigger programs. The reason being that you are losing VBLANK time doing non critical tasks. Anything that doesn't need to be done in VBLANK should happen later in NMI unless you know you have more than enough time to get it all done.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=1726">MottZilla</a> — Sun Mar 28, 2010 12:32 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Orsi]]></name></author>
<updated>2010-03-28T12:22:15-07:00</updated>
<published>2010-03-28T12:22:15-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6228&amp;p=59170#p59170</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6228&amp;p=59170#p59170"/>
<title type="html"><![CDATA[First accomplishment, critique!]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6228&amp;p=59170#p59170"><![CDATA[
So I've finally finished my first goal: Make something that moves in all directions. I would like to know if any of my code would be deemed wrong or unsafe to work on a proper NES, or if anything is working improperly. I've tested it on FCEUX and it runs super smooth, but Nintendulator seems to be a bit choppy. <br /><br />Question:<br />   Does the AND command change the contents of the accumulator? I had to put a LDA command for every button because it wouldn't read anything past A when I didn't.<br /><br />Any advice would be appreciated, thanks!<br /><br /><a href="http://docs.google.com/leaf?id=0BxkggOVIbVtxZmU0NjI2ZTgtOGNiYy00YTdjLWI3NDAtYjE4YzkzNzIwNjRl&amp;hl=en" class="postlink">http://docs.google.com/leaf?id=0BxkggOVIbVtxZmU0NjI2ZTgtOGNiYy00YTdjLWI3NDAtYjE4YzkzNzIwNjRl&amp;hl=en</a><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4297">Orsi</a> — Sun Mar 28, 2010 12:22 pm</p><hr />
]]></content>
</entry>
</feed>