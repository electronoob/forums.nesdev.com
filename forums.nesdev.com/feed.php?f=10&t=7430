<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=10&amp;t=7430" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2011-01-28T03:52:26-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=10&amp;t=7430</id>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2011-01-28T03:52:26-07:00</updated>
<published>2011-01-28T03:52:26-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7430&amp;p=73229#p73229</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7430&amp;p=73229#p73229"/>
<title type="html"><![CDATA[Copying data from a file larger than 256 bytes]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7430&amp;p=73229#p73229"><![CDATA[
<div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Because it's only one name table, I will probably go with the method like WJYkK described, but the information you've provided will be of great use to me for other things.<br /></div><br />Trust me, there is no reason NOT to use indirect adressing if you're copying more than 256 bytes. Using multiple loops that copies 256 or less bytes will just waste program size for nothing.<br />Unless you want to do something that executes very fast with unrolled loops or something but you probably don't want to worry about that before doing something pretty advanced.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Fri Jan 28, 2011 3:52 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2011-01-27T23:45:45-07:00</updated>
<published>2011-01-27T23:45:45-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7430&amp;p=73221#p73221</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7430&amp;p=73221#p73221"/>
<title type="html"><![CDATA[Copying data from a file larger than 256 bytes]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7430&amp;p=73221#p73221"><![CDATA[
<div class="quotetitle">devmas wrote:</div><div class="quotecontent"><br />Because it's only one name table, I will probably go with the method like WJYkK described<br /></div><br />So be sure to use titlescreengfx+256, titlescreengfx+512, etc., that he forgot to. Also, you don't have to write the address to $2006 for each loop, the PPU will continue from where it stopped.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />but the information you've provided will be of great use to me for other things.<br /></div><br />Yeah, that addressing mode is used A LOT. You probably won't find a single serious 6502 program that doesn't use it, as it makes accessing data much easier.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />I didn't know about adding to labels like +256<br /></div><br />A label is just an easy way for us silly humans to refer to a memory location, because we're better with words than with numbers, but in the end, your assembled program will access all memory locations by number only. Since the label is just a "nickname" for a number, you can do math with it. So if you do LDA Label+256 you will be reading from the location 256 bytes ahead of wherever Label points to.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />nor did I know about indexed addressing...<br /></div><br />Yes you did, because you were using X (an index register) to read the data! <img src="http://forums.nesdev.com/images/smilies/icon_lol.gif" alt=":lol:" title="Laughing" /> You didn't know about INDIRECT addressing, which is when instead of using an address directly, we point to the memory location where the address is.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Thu Jan 27, 2011 11:45 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[devmas]]></name></author>
<updated>2011-01-27T23:29:34-07:00</updated>
<published>2011-01-27T23:29:34-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7430&amp;p=73219#p73219</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7430&amp;p=73219#p73219"/>
<title type="html"><![CDATA[Copying data from a file larger than 256 bytes]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7430&amp;p=73219#p73219"><![CDATA[
Oh, that's very helpful, thanks.<br /><br />Because it's only one name table, I will probably go with the method like WJYkK described, but the information you've provided will be of great use to me for other things.<br /><br />I didn't know about adding to labels like +256, nor did I know about indexed addressing...<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3912">devmas</a> — Thu Jan 27, 2011 11:29 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2011-01-27T22:47:27-07:00</updated>
<published>2011-01-27T22:47:27-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7430&amp;p=73213#p73213</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7430&amp;p=73213#p73213"/>
<title type="html"><![CDATA[Copying data from a file larger than 256 bytes]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7430&amp;p=73213#p73213"><![CDATA[
Use indirect indexed addressing (LDA ($XX), Y). Instead of using a hardcoded address (i.e. the label) when reading the data, you use a 16-bit zero page variable to point to the data. Since this is a variable, you can manipulate the address you are reading from.<br /><br />This addressing mode only works with the Y register, so the copying code will look something like this (this will copy 256 * X bytes):<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">   ;setup the pointer<br />   lda #&lt;OneKByteOfData<br />   sta ZPVariable+0<br />   lda #&gt;OneKByteOfData<br />   sta ZPVariable+1<br /><br />   ;set the number of times to copy 256 bytes<br />   ldx #$04<br /><br />   ;clear the index<br />   ldy #$00<br /><br />CopyByte:<br /><br />   ;copy a byte<br />   lda &#40;ZPVariable&#41;, y<br />   sta $2007<br /><br />   ;move on to the next byte<br />   iny<br />   bne CopyByte<br /><br />   ;skip to the end if there's no more data<br />   dex<br />   beq Done<br /><br />   ;move the pointer 256 bytes ahead<br />   inc ZPVariable+1<br />   jmp CopyByte<br /><br />Done:</div><br /><br />If the amount of data to copy is not a multiple of 256, you have to find other ways to detect the end of the data, like counting bytes or using a flag (a value that marks the end of the data, like a tile index never used in the image), but this is the basic idea.<br /><br />Also, this is standard 6502 syntax, which NESASM doesn't seem to follow. To load the individual bytes of an address you might have to use LOW() and HIGH() instead of &lt; and &gt;, and [] for indirection, rather than ().<br /><br />EDIT: You can make a lot of loops like WJYkK suggested (I'm assuming he forgot to put +256 after the label in the second loop), but that solution is far from optimal, since for each name table in your program you will need 4 loops. Soon that can add up to a lot of code, not only taking a lot of space but also making maintenance harder. If you use pointers, you can have a single routine do all the copying you need, you only have to provide it with the source and destination addresses (source goes into the pointer and destination goes to $2006), along with the number of bytes to copy. This could also be stored before the data itself, like this:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">SomeData:<br /><br />   .dw SomeDataEnd - SomeDataStart<br /><br />SomeDataStart:<br /><br />   .incbin &quot;somedata.bin&quot;<br /><br />SomeDataEnd:</div><br />Then when you ask your copying routine to copy SomeData, it will first copy that 16-bit value to RAM and decrement it as the data is transferred, in order to know when to stop.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Thu Jan 27, 2011 10:47 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[devmas]]></name></author>
<updated>2011-01-27T22:39:49-07:00</updated>
<published>2011-01-27T22:39:49-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7430&amp;p=73212#p73212</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7430&amp;p=73212#p73212"/>
<title type="html"><![CDATA[Copying data from a file larger than 256 bytes]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7430&amp;p=73212#p73212"><![CDATA[
I see... Thanks for your help.<br /><br />I see that loop1 copies the first 256 bytes from the file to the PPU.<br /><br />But won't loop2 just go back to reading from titlescreengfx + 0, the beginning of the .incbin file? So it would just copy the first 256 bytes of the file to the PPU again?<br /><br />Or is there something I'm missing?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3912">devmas</a> — Thu Jan 27, 2011 10:39 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[WJYkK]]></name></author>
<updated>2011-01-27T22:28:51-07:00</updated>
<published>2011-01-27T22:28:51-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7430&amp;p=73211#p73211</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7430&amp;p=73211#p73211"/>
<title type="html"><![CDATA[Copying data from a file larger than 256 bytes]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7430&amp;p=73211#p73211"><![CDATA[
Assuming that before that you wrote to $20 and $00 to $2006 and then you wrote the loop, after that you could write $21 and $00 to $2006 and repeat the loop, e.g.:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent"> lda #$20 ;Here we're writing to $2000<br /> sta $2006<br /> lda #$00<br /> sta $2006<br /><br /> ldx #$00<br /><br />loop1:<br /> lda titlescreengfx,x<br /> sta $2007<br /> inx<br /> cpx #$00<br /> bne loop1<br /><br /> lda #$21 ;And here - to $2100 - $100 bytes later<br /> sta $2006<br /> lda #$00<br /> sta $2006<br /><br />loop2:<br /> lda titlescreengfx,x<br /> sta $2007<br /> inx<br /> cpx #$00<br /> bne loop2</div>Etc.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4164">WJYkK</a> — Thu Jan 27, 2011 10:28 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[devmas]]></name></author>
<updated>2011-01-27T22:18:34-07:00</updated>
<published>2011-01-27T22:18:34-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7430&amp;p=73210#p73210</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7430&amp;p=73210#p73210"/>
<title type="html"><![CDATA[Copying data from a file larger than 256 bytes]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7430&amp;p=73210#p73210"><![CDATA[
So I started doing some NES coding.<br /><br />I have a question. It's probably fairly newbie-ish...<br /><br />I have incbin'd a file from YY-CHR. Basically, it's nametable and attribute table data I made for a title screen. I used a hex editor to look at the binary data of the YY-CHR file, and the format is like this:<br />0000 - 03BF: Name table<br />03C0 - 03FF: Attribute table<br /><br />I want to copy all of it to the PPU with an incrementing register. However, I'm not sure how to...<br /><br />Normally, I would do a simple loop containing:<br /><strong>LDA</strong> titlescreengfx, x<br /><strong>STA</strong> $2007<br /><strong>INX</strong><br /><br />However, since the data's more than 256 bytes big, x won't increment that big.<br /><br />Of course, instead of .incbinning the data I have the following options:<br />- split the 1 kb file up into 4 parts<br />- .db the data and create labels every 256 bytes<br /><br />...but for ease of use, I'd rather just .incbin the file. What method should I use to copy the file to the PPU?<br /><br />Note: I'm using NESASM, but wouldn't be opposed to knowing about it in ASM6.<br /><br />Another note: I know it's horrible inefficient to have a 1 kb file like that. If I need to, I'll compress the data with a simple compression, either RLE or LZ.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3912">devmas</a> — Thu Jan 27, 2011 10:18 pm</p><hr />
]]></content>
</entry>
</feed>