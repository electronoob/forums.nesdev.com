<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Serial bootloader: which input bits?</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Serial bootloader: which input bits?</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=9&amp;t=10944">http://forums.nesdev.com/viewtopic.php?f=9&amp;t=10944</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Sun Jan 26, 2014 8:29 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Serial bootloader: which input bits?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />What bits should the serial bootloader read from? The candidates for input are D0, D1, D2, D3, and D4 of the second controller port (we keep the first controller port free for a normal controller).<br /><br />Supporting anything different than just D0 in the serial receive routine only adds a couple of extra instructions and isn't a problem. This allows it to receive serial on any one of the inputs, *as long as the other inputs stay idle (high)*. This is the case for D1-D4 when nothing is connected. For D0, if we set the controller latch to 1 (LDA #1; STA $4016), and nothing is pressing the A button, it will output high and not interfere.<br /><br />Ideally we'd just connect to an unused data line (D2?), but this would require modification of the NES and an extra plug/cord coming out since it's not on the controller port. So we allow connection through the controller port. Some information about what pins are available and limitations:<br /><br /><ul><li> The NES controller port exposes D0, D3, and D4.</li><li> The expansion ports of the NES and Famicom expose D0, D1, D2, D3, and D4.</li><li> The second Famicom controller is hardwired to D0.</li><li> Many NES controller/extension cables only connect to D0, not D3 or D4.</li><li> NES expansion port connectors aren't very available AFAIK.</li><li> External Famicom controllers use D1.</li></ul><br />* D0 seems like a must, to allow normal NES controller cables to be modified for this.<br /><br />* D1 would be useful to allow modification of an external Famicom controller cable, which definitely connects D1 but may not connect to others (as with D0 on NES controller cables).<br /><br />* D2 is nice because no controllers use it.<br /><br />* D4 allows modification of a NES extension cable to pass through D0 to a second controller, and route D4 to serial, so you can have two controllers while doing PC communication. And it's available on expansion ports. Since I believe only the Zapper uses this, it would be a minor conflict. It should be solvable, as the Zapper just uses this for the trigger, so as long as the trigger isn't pressed while the PC is sending data, they wouldn't conflict.<br /><br />Currently I have D0, D1, D2, and D4 specified, but this seems like an overkill. Having this many also seems risky because each one opens the opportunity for possible conflict; if anything is connected that generates a signal, it will confuse the bootloader so that it doesn't work.<br /><br />At this point D0 and D4 seem like a good set. This allows using a normal NES controller cable, working on the Famicom with its built-in controllers, making a pass-through cable for a second controller on the NES, and connecting to the NES/Famicom expansion ports.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>zzo38</b> [ Mon Jan 27, 2014 1:13 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Serial bootloader: which input bits?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I recommend either D3 or D4, on the second port, since those are available in both NES and Famicom systems (and you can then connect a standard controller on the first port without having to rewire anything). Furthermore, you can use the standard controller at the same time, without interference. I also recommend to clear bit2 of the output port so that the keyboard doesn't interfere (hardware could be designed to automatically switch between the serial bootloader and keyboard based on this signal).<br /><br />If you need to, due to &quot;Many NES controller/extension cables only connect to D0&quot;, you could provide support for D0 as well as D4 (maybe do something in the program to check which one of D0 or D4 works, before actually loading, if this is possible and/or useful).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Wed Jan 29, 2014 2:00 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Serial bootloader: which input bits?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />zzo38, I agree with everything you said. Thanks for the input.<br /><br />I've thought more about the context, because these decisions depend on the purpose of the bootloader. I also realized that it might not be clear what its purpose and scope is. So...<br /><br />* Bootloader's *only* purpose is to give PC control of NES by allowing it to upload a control program. Then PC can upload more code, send commands to control program, whatever. It's the minimal wedge the PC needs to &quot;get into&quot; the NES. It's the intentional remote-execution exploit so the PC can own the NES.<br /><br />* Many different PC-to-NES connections are possible: bit-banged asynchronous serial, synchronous serial, parallel using multiple controller data bits (D0-D4), parallel over expansion port, parallel via I/O port on cartridge. Each connection type generally needs its own bootloader, because the protocol differs for each.<br /><br />* Serial bootloader *only* addresses giving PC control using bit-banged serial over $4017.<br /><br />I see the serial bootloader as being useful for entry-level program running on the NES. Getting it on a cartridge and running on the NES is the biggest hurdle, since it requires some kind of development cartridge, EPROM/flash programmer, and all the debugging. It's small, so it can be included as an extra feature in homebrew cartridges. Someone who wants to run small programs out of NES RAM can then build a simple serial interface and use the bootloader. The simplest cables just involve splicing a few wires from a few-dollar USB-TTL serial adapter to a NES controller/extension cable, something requiring just a pair of scissors and tape.<br /><br />For people getting more capable interfaces, like parallel in a cartridge, the interface will come with a bootloader or they will already be able to program a cartridge with an appropriate bootloader. So the serial bootloader doesn't need to accommodate these people.<br /><br />The main question is how much we want the bootloader in a homebrew cart to support. Would someone wiring serial up inside the NES (to say D2, to avoid conflict with anything else) not have already upgraded to a dedicated bootloader cartridge, and still just be using the one built into some homebrew cart they got? What about building a pass-through controller cable that allows connecting a second controller and serial at the same time?<br /><br />If there were a risk-free way to have the serial bootloader support connection to <em>any</em> controller input pin, that'd be great. Perhaps it could first run in a loop that ORs repeated $4017 reads together for a while and ignores any bits that had a 1 on them (and of course ignores bits we know aren't reliable on a stock NES: D5-D7); this would leave only those that were 0 the whole time, either unconnected or serial (which is 0 in the idle state). This is still potentially more risky than deciding on one or two pins for serial and verifying through manual testing/research that these will be 0 if not being used for serial.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>nitro2k01</b> [ Thu Jan 30, 2014 1:07 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Serial bootloader: which input bits?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I don't know how critical the size of the bootloader is, but how about using a knock sequence of 55 or AA to detect and initiate the transfer on any of the lines? The alternating bit pattern should be easy enough to detect, and will tell you which line to receive data from.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>infiniteneslives</b> [ Thu Jan 30, 2014 11:50 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Serial bootloader: which input bits?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">blargg wrote:</div><div class="quotecontent">The main question is how much we want the bootloader in a homebrew cart to support. Would someone wiring serial up inside the NES (to say D2, to avoid conflict with anything else) not have already upgraded to a dedicated bootloader cartridge, and still just be using the one built into some homebrew cart they got? What about building a pass-through controller cable that allows connecting a second controller and serial at the same time?</div><br /><br />So I'm still a little cloudy on what the issue is here.  But my response to this main question would be to make it as *SIMPLE* as possible.  Even if it comes at the cost of not working with every version of the console.  A part of me thinks that relying on the controller port would actually deter people from getting started.  While cords are available, to many, the idea of splicing up wires with scissors and taping some wires together is a deal breaker.  Personally the idea makes me cringe...  You need a better connection method to have a durable splice.<br /><br />That said, I do have a small collection of controller plugs from controllers which had bad cords.  I've been saving them over the years and would love to offload them for this use.  I'd entertain the idea of assembling and making cables available for people at a low cost if there was a desire for them from the community.  I bought a couple of those few dollar USB-TTL adapters you suggested in the other post and they just showed up.  Tepples was asking for one for testing, and I was thinking about sending you one as well Blargg if it helped the cause.  I just need to know how you'd like them wired up.<br /><br />In my opinion, if the whole thing requires a cartridge anyways, utilizing a method of connection through the cartridge seems like the best route.  If a female header were installed into the cart and made accessible, the connection issue would be resolved.  You could just plug in the few dollar USB-TTL as-is from ebay.  And would also be universally compatible aside from 60/72 pin conversions possibly.  But for something like that, wouldn't you need mapper involvement as well?  However this idea is a trade off between simplicity for the end user and simplicity for the hardware design.  I'm not sure it's really worth the effort on the hardware side.  If fully assembled controller cables were made available, then that would keep things simple for the user, but only require the effort on an as needed basis.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Thu Jan 30, 2014 5:20 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Serial bootloader: which input bits?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I guess my angle is this: I've benefited greatly by a serial connection to the NES for running code on it and reverse-engineering the NES and cartridge mappers. A bootloader is the biggest hurdle and I've got small ones (down to 32 bytes). This could be put on some homebrew carts so others could benefit from a serial cable more easily.<br /><br />The CopyNES is the only system I know of where you can upload and run new code just by pressing a key on the host. Aside from a controller cable, there's an expansion port interface or cartridge-based interface. I don't have the means to develop those, and they are more expensive and &quot;pre-packaged&quot; as compared to a DIY serial cable. Maybe I've been tilting at windmills and there's no problem to be solved, no demand for this in the first place.<br /><br />I appreciate your input, especially the advice to keep it as simple as possible, as I've tried to meet a vague, imaginary audience's requirements and ended up with something overly-complex. Maybe we could treat this first round as experimental and go with a dead-simple one that just receives on D0 only, does no checksumming or anything and just runs it.<br /><br />I especially appreciate your offer to help with the serial cables, and gladly accept whatever help you can give. I'll contact you about getting a cable built so you can send it to Tepples.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">In my opinion, if the whole thing requires a cartridge anyways, utilizing a method of connection through the cartridge seems like the best route.</div><br />A big benefit of this setup is that the cable can be used on anything that has the bootloader, e.g. a PowerPak, or a hotswapped cartridge on a NES with the CIC disabled. In the latter case one can try code on the cartridge to see how the mapper behaves. I believe thefox made a module so that a ROM can be uploaded to the PowerPak through the cable at the touch of a key on the host.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">If a female header were installed into the cart and made accessible, the connection issue would be resolved. You could just plug in the few dollar USB-TTL as-is from ebay. And would also be universally compatible aside from 60/72 pin conversions possibly. But for something like that, wouldn't you need mapper involvement as well?</div><br />That's an interesting next-level appproach, since the header is cheap to add. It probably would need mapper involvement, unless one wanted to be really tacky and connect the PC-&gt;NES line via a resistor to the data bus, and read from any open-bus address to access it (this would preclude NES-&gt;PC of course).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Fri Jan 31, 2014 12:39 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Serial bootloader: which input bits?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">blargg wrote:</div><div class="quotecontent">I guess my angle is this: I've benefited greatly by a serial connection to the NES for running code on it and reverse-engineering the NES and cartridge mappers. A bootloader is the biggest hurdle and I've got small ones (down to 32 bytes). This could be put on some homebrew carts so others could benefit from a serial cable more easily.</div><br />I've also benefited big time from it, particularly it has made it a lot easier for me to test new versions of my custom PowerPak mappers on the hardware.<br /><br />It does seem like a lot of people are either not seeing the benefits, or don't consider it beneficial enough for most of their use cases. And granted, the actual use cases are quite limited when the bootloader is on a homebrew cart with limited resources (e.g. no extra RAM). Reverse engineering is the main thing that comes to mind. For development I think many people find it too limited, especially because nowadays it makes sense to do most of the development on emulators anyways.<br /><br />I guess it could enable some fun toys for the owners of homebrew cartridges, such as being able to use it to transfer sound register writes (NSF player, MIDI playback, etc). Maybe it could enable extra content in the game or upload entirely new content. But I don't think a lot of people would be using it for development, without a specialized cartridge.<br /><br />That's my $3,50.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Fri Jan 31, 2014 3:23 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Serial bootloader: which input bits?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Well, if nothing else, it would allow arbitrary MIDI-NES like things, which won't need that much support.<br /><br />I'd find it useful, even though I have a random flashcart I could use right now, to have it baked into something a little more versatile.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>