<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - WUDSN IDE: Free integrated 6502 IDE - Request for interest</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">WUDSN IDE: Free integrated 6502 IDE - Request for interest</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=8893">http://forums.nesdev.com/viewtopic.php?f=2&amp;t=8893</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>JAC!</b> [ Mon May 14, 2012 1:45 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>WUDSN IDE: Free integrated 6502 IDE - Request for interest</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Hello,
<br />
<br />My name is Peter Dell (JAC!) and I'm the author of <a href="http://www.wudsn.com" class="postlink">WUDSN IDE</a>, a free integrated 6502 development plugin for Eclipse. It started for Atari Xl, and meanwhile (after 3 years of development) also supports other platforms like C64 both in terms of assemblers and graphics converters, etc. Last week I was approached to see if the NES community also has an interest here.
<br />
<br />For those who don't know the IDE yet, I recommend the features and FAQ on my <a href="http://www.wudsn.com" class="postlink">web site</a> and the <a href="http://www.youtube.com/playlist?list=PLD57AEE018938BA5E" class="postlink">video tutorials</a> in youtube.
<br />
<br />Have fun, Peter/JAC!
<br />
<br /><img src="http://www.wudsn.com/ide/features/images/ide-example-source-small-outline.png" alt="Image" />
<br /><img src="http://www.wudsn.com/ide/features/images/ide-hyperlink-navigation-binary.png" alt="Image" />
<br /><img src="http://www.wudsn.com/ide/features/images/ide-hyperlink-navigation-source.png" alt="Image" />
<br /><img src="http://www.wudsn.com/ide/features/images/ide-hyperlink-navigation-identifier.png" alt="Image" />
<br /><img src="http://www.wudsn.com/ide/features/images/ide-graphics-editor-files-to-image.gif" alt="Image" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Hamtaro126</b> [ Mon May 14, 2012 5:57 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: WUDSN IDE: Free integrated 6502 IDE - Request for intere</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />My favorite is CA65, The assembler of choice from the CC65 package, It has ASM6 compatibility. but hard to use with no useful IDE.
<br />
<br />NESICIDE had similar features and a IDE, but lacks external emulator support and SNES support, and is slow!
<br />
<br />Can it also use C64 and SNES's 65816 features using CA65's 65816 set? I would love it.
<br />
<br />Tepples also uses this assembler even without a IDE!
<br />
<br />I Recommend FCEUX and BSNES (Byuu's emulator) for emulation
<br />
<br />EDIT: Unless it supports mappers, You may want a rewrite of your IDE to support them...

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>jayminer</b> [ Mon May 14, 2012 6:20 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I haven't tried NESICIDE yet (I have been meaning to for quite some time, but never gotten around to it), so I'm not sure if I'm the right person to answer here. 
<br />
<br />Anyways, my assembler of choice is also ca65 (from the cc65-package).
<br />
<br />Since I have been thinking about doing C64 development aswell some time in the future, it would be awesome to be able to use an IDE that you already know and are comfortable with.
<br />
<br />So I would say, if it isn't too much work to adapt it for the NES, I would love to try this and hopefully start using it for the game I'm working on currently.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>slobu</b> [ Mon May 14, 2012 6:24 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I think it's important to note if this is an IDE for C or ASM.
<br />
<br />I personally come from a high-level language background so I'd stick with NESICIDE which is an IDE for C.
<br />
<br />@Hamtaro126:  It sounds like yu have some valuable feedback for cpow regarding NESICIDE.  If you have anything to contribute I'm sure he'd listen.  Especially when it comes to details on what is "slow".

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Mon May 14, 2012 7:02 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I currently use WLA-DX because it has a lot of features, but I'm pretty sure CA65 is even better in terms of features.
<br />
<br />I like Eclipse so it'd be nice to develop 6502 code in it. However I'd prefer have it focused on C, even if it's not common yet to program the NES in C.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>JAC!</b> [ Mon May 14, 2012 7:06 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />&gt;CA65
<br />This has been also requested from other platforms and is the the list already. But since it works a bit different then the usual compilers (has linker etc.), it'll take a while because I personally have not used it yet.
<br />
<br />&gt;65816
<br />I guess you refer to the 16 bit instructions. The supported instruction sets are defined per compiler. And currently there are sets for 6502/6502 with Illegal Opcodes/65816/DTV. Their names are depenent on the compiler also, only the core 6502 opcodes are always named the same.
<br />
<br />&gt;FCEUX and BSNES (Byuu's emulator) for emulation 
<br />Thanks, that#s valueable hint. For every platform there is a set of predefined emulators (i.e. mappings) plus "user defined" one.
<br />
<br />&gt;I think it's important to note if this is an IDE for C or ASM.
<br />Sure, of course. Before I posted I was not even aware people use C for NES. I've been coding ASM for 25 years now, so I hardly think about other languages  <img src="./images/smilies/icon_smile.gif" alt=":-)" title="Smile" /> And to give the answer: This is a pure ASM IDE.
<br />
<br /><img src="http://www.wudsn.com/home/news/images/2012-05-12-ide-preferences.png" alt="Image" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Jeroen</b> [ Mon May 14, 2012 10:50 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I personally use asm6, but if you were implementing something specificly into your ide i'd suggest CA65 simply cause asm6 was never really meant to be anything but a "lets do this quick and dirty" kind of assembler.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Mon May 14, 2012 12:47 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Same as Jeroen. Regarding emulators, I just want to point out that FCEUX is a great development tool because of its debugging capabilities, but it's fairly inaccurate as an emulator.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Shiru</b> [ Mon May 14, 2012 12:47 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />There was a poll I started that shown that the most popular NES assemblers are CA65 and Asm6, then NESASM follows (but it is blamed a lot for being too old). Any other assemblers including DASM are pretty rare, although there are some users of each. So I guess these two, CA65 and Asm6, could be considered as a priority.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>dbozan99</b> [ Mon May 14, 2012 1:01 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Hello, I was actually the person who approached Peter about NES development.
<br />
<br />I have been learning NES programming lately and I have been using ASM6 for assembly. Notepad++ syntax highlighting just wasn't cutting it for me and I stumbled onto WUDSN while looking for 6502 IDE's. I tried it out and immediately fell in love with all of the cool features but it didn't support any of the common NES assemblers so I sent some emails.
<br />
<br />I've since been tweaking one of the existing XML files from inside the .jar file and have made a fairly capable ASM6 xml file. The XML file controls stuff like which directives do what and so on.
<br />
<br />
<br />Here is the XML file if you are interested. I've just been overwriting (open file as archive with winrar or 7zip or whatever) the eclipse/plugins/com.wudsn.ide.asm.compilers_1.6.1.jar/com/wudsn/ide/asm/compiler/DASM/DasmCompiler.xml file and selecting DASM/2600 as my compiler for now.
<br />
<br />This XML isn't perfect for ASM6 but it gets the job done; perhaps a CA65 compatible file is in order?
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&lt;?xml version=&quot;1.0&quot; encoding=&quot;iso-8859-1&quot;?&gt;&nbsp; &nbsp;<br />&lt;instructionset<br />&nbsp; &nbsp;completionProposalAutoActivationCharacters=&quot;.&quot;<br />&nbsp; &nbsp;singleLineCommentDelimiters=&quot;;&quot;<br />&nbsp; &nbsp;multipleLinesCommentDelimiters=&quot;&quot;<br />&nbsp; &nbsp;stringDelimiterCharacters=&quot;'&amp;quot;&quot;<br />&nbsp; &nbsp;blockDefinitionCharacters=&quot;&quot;<br />&nbsp; &nbsp;identifiersCaseSensitive=&quot;false&quot;<br />&nbsp; &nbsp;identifierStartCharacters=&quot;?@_ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz&quot;<br />&nbsp; &nbsp;identifierPartCharacters=&quot;_ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789&quot;<br />&nbsp; &nbsp;identifierSeparatorCharacter=&quot;&quot;<br />&nbsp; &nbsp;labelDefinitionSuffixCharacter=&quot;:&quot;<br />&nbsp; &nbsp;macroUsagePrefixCharacter=&quot;&quot;<br />&nbsp; &nbsp;instructionsCaseSensitive=&quot;false&quot;<br />&nbsp; &nbsp;sourceIncludeDefaultExtension=&quot;&quot;&gt;<br /><br />&nbsp; &nbsp;&lt;directive cpu=&quot;ALL&quot; name=&quot;ALIGN&quot; title=&quot;_A_l_i_g_n program counter&quot; type=&quot;DIRECTIVE&quot; proposal=&quot;ALIGN _&quot;/&gt;<br />&nbsp; &nbsp;&lt;directive cpu=&quot;ALL&quot; name=&quot;BASE&quot; title=&quot;Set the _B_a_s_e program address&quot; type=&quot;DIRECTIVE&quot; proposal=&quot;BASE _&quot;/&gt;<br />&nbsp; &nbsp;&lt;directive cpu=&quot;ALL&quot; name=&quot;BIN&quot; title=&quot;Include _b_i_nary file&quot; type=&quot;BINARY_INCLUDE_DIRECTIVE&quot; proposal=&quot;BIN &amp;quot;_&amp;quot;&quot;/&gt;<br />&nbsp; &nbsp;&lt;directive cpu=&quot;ALL&quot; name=&quot;BYTE&quot; title=&quot;Declare constant as _b_y_t_e&quot; type=&quot;DIRECTIVE&quot; proposal=&quot;BYTE _&quot;/&gt;<br />&nbsp; &nbsp;&lt;directive cpu=&quot;ALL&quot; name=&quot;DC.B&quot; title=&quot;_Declare _constant as _byte&quot; type=&quot;DIRECTIVE&quot; proposal=&quot;DC.B _&quot;/&gt;<br />&nbsp; &nbsp;&lt;directive cpu=&quot;ALL&quot; name=&quot;DC.W&quot; title=&quot;_Declare _constant as _word&quot; type=&quot;DIRECTIVE&quot; proposal=&quot;DC.W _&quot;/&gt;<br />&nbsp; &nbsp;&lt;directive cpu=&quot;ALL&quot; name=&quot;DB&quot; title=&quot;_Declare constant as _byte&quot; type=&quot;DIRECTIVE&quot; proposal=&quot;DB _&quot;/&gt;<br />&nbsp; &nbsp;&lt;directive cpu=&quot;ALL&quot; name=&quot;DW&quot; title=&quot;_Declare constant as _word&quot; type=&quot;DIRECTIVE&quot; proposal=&quot;DW _&quot;/&gt;<br />&nbsp; &nbsp;&lt;directive cpu=&quot;ALL&quot; name=&quot;DL&quot; title=&quot;_Declare only _lower byte of a 16-bit word&quot; type=&quot;DIRECTIVE&quot; proposal=&quot;DL _&quot;/&gt;<br />&nbsp; &nbsp;&lt;directive cpu=&quot;ALL&quot; name=&quot;DH&quot; title=&quot;_Declare only _higher byte of a 16-bit word&quot; type=&quot;DIRECTIVE&quot; proposal=&quot;DH _&quot;/&gt;<br />&nbsp; &nbsp;&lt;directive cpu=&quot;ALL&quot; name=&quot;DS.B&quot; title=&quot;_Declare _space in _bytes&quot; type=&quot;DIRECTIVE&quot; proposal=&quot;DS.B _&quot;/&gt;<br />&nbsp; &nbsp;&lt;directive cpu=&quot;ALL&quot; name=&quot;DSB&quot; title=&quot;_Declare _space in _bytes&quot; type=&quot;DIRECTIVE&quot; proposal=&quot;DSB _&quot;/&gt;<br />&nbsp; &nbsp;&lt;directive cpu=&quot;ALL&quot; name=&quot;DS.W&quot; title=&quot;_Declare _space in _words&quot; type=&quot;DIRECTIVE&quot; proposal=&quot;DS.W _&quot;/&gt;<br />&nbsp; &nbsp;&lt;directive cpu=&quot;ALL&quot; name=&quot;DSW&quot; title=&quot;_Declare _space in _words&quot; type=&quot;DIRECTIVE&quot; proposal=&quot;DSW _&quot;/&gt;<br />&nbsp; &nbsp;&lt;directive cpu=&quot;ALL&quot; name=&quot;ELSE&quot; title=&quot;_E_l_s_e&quot; type=&quot;DIRECTIVE&quot; proposal=&quot;ELSE_&quot;/&gt;<br />&nbsp; &nbsp;&lt;directive cpu=&quot;ALL&quot; name=&quot;ELSEIF&quot; title=&quot;_E_l_s_e _I_f&quot; type=&quot;DIRECTIVE&quot; proposal=&quot;ELSEIF _&quot;/&gt;<br />&nbsp; &nbsp;&lt;directive cpu=&quot;ALL&quot; name=&quot;ENDIF&quot; title=&quot;_E_n_d of _I_F&quot; type=&quot;END_FOLDING_BLOCK_DIRECTIVE&quot; proposal=&quot;ENDIF_&quot;/&gt;<br />&nbsp; &nbsp;&lt;directive cpu=&quot;ALL&quot; name=&quot;ENDM&quot; title=&quot;_E_n_d of _macro&quot; type=&quot;END_SECTION_DIRECTIVE&quot; proposal=&quot;ENDM_&quot;/&gt;<br />&nbsp; &nbsp;&lt;directive cpu=&quot;ALL&quot; name=&quot;ENDE&quot; title=&quot;_E_n_d _enumeration definition&quot; type=&quot;END_SECTION_DIRECTIVE&quot; proposal=&quot;ENDE_&quot;/&gt;<br />&nbsp; &nbsp;&lt;directive cpu=&quot;ALL&quot; name=&quot;ENUM&quot; title=&quot;Define _e_n_u_meration&quot; type=&quot;BEGIN_ENUM_DEFINITION_SECTION_DIRECTIVE&quot; proposal=&quot;ENUM _\nENDE&quot;/&gt;<br />&nbsp; &nbsp;&lt;directive cpu=&quot;ALL&quot; name=&quot;EQU&quot; title=&quot;Set _e_q_uate&quot; type=&quot;DIRECTIVE&quot; proposal=&quot;EQU _&quot;/&gt;<br />&nbsp; &nbsp;&lt;directive cpu=&quot;ALL&quot; name=&quot;ERROR&quot; title=&quot;End assmbly with _e_r_r_o_r&quot; type=&quot;DIRECTIVE&quot; proposal=&quot;ERROR _&quot;/&gt;<br />&nbsp; &nbsp;&lt;directive cpu=&quot;ALL&quot; name=&quot;FILLVALUE&quot; title=&quot;Change the default _f_i_l_l _v_a_l_u_e for PAD and ALIGN&quot; type=&quot;DIRECTIVE&quot; proposal=&quot;FILLVALUE _&quot;/&gt;<br />&nbsp; &nbsp;&lt;directive cpu=&quot;ALL&quot; name=&quot;HEX&quot; title=&quot;Declare raw _h_e_x data&quot; type=&quot;DIRECTIVE&quot; proposal=&quot;HEX _&quot;/&gt;<br />&nbsp; &nbsp;&lt;directive cpu=&quot;ALL&quot; name=&quot;IF&quot; title=&quot;_I_f&quot; type=&quot;BEGIN_FOLDING_BLOCK_DIRECTIVE&quot; proposal=&quot;IF _\nENDIF&quot;/&gt;<br />&nbsp; &nbsp;&lt;directive cpu=&quot;ALL&quot; name=&quot;IFDEF&quot; title=&quot;_I_f _d_e_fined&quot; type=&quot;BEGIN_FOLDING_BLOCK_DIRECTIVE&quot; proposal=&quot;IFDEF _\nENDIF&quot;/&gt;<br />&nbsp; &nbsp;&lt;directive cpu=&quot;ALL&quot; name=&quot;IFNDEF&quot; title=&quot;_I_f _not _d_e_fined&quot; type=&quot;BEGIN_FOLDING_BLOCK_DIRECTIVE&quot; proposal=&quot;IFNDEF _\nENDIF&quot;/&gt;<br />&nbsp; &nbsp;&lt;directive cpu=&quot;ALL&quot; name=&quot;INCBIN&quot; title=&quot;_I_n_clude _b_i_nary file&quot; type=&quot;BINARY_INCLUDE_DIRECTIVE&quot; proposal=&quot;INCBIN &amp;quot;_&amp;quot;&quot;/&gt;<br />&nbsp; &nbsp;&lt;directive cpu=&quot;ALL&quot; name=&quot;INCLUDE&quot; title=&quot;_I_n_c_l_u_d_e source file&quot; type=&quot;SOURCE_INCLUDE_DIRECTIVE&quot; proposal=&quot;INCLUDE &amp;quot;_&amp;quot;&quot;/&gt;<br />&nbsp; &nbsp;&lt;directive cpu=&quot;ALL&quot; name=&quot;INCSRC&quot; title=&quot;_I_n_clude _sou_r_ce file&quot; type=&quot;SOURCE_INCLUDE_DIRECTIVE&quot; proposal=&quot;INCSRC &amp;quot;_&amp;quot;&quot;/&gt;<br />&nbsp; &nbsp;&lt;directive cpu=&quot;ALL&quot; name=&quot;MACRO&quot; title=&quot;Define _m_a_c_r_o&quot; type=&quot;BEGIN_MACRO_DEFINITION_SECTION_DIRECTIVE&quot;&nbsp; proposal=&quot;MACRO _\nENDM _&quot;/&gt;<br />&nbsp; &nbsp;&lt;directive cpu=&quot;ALL&quot; name=&quot;ORG&quot; title=&quot;Set _o_ri_gin if it hasn't been assigned yet, otherwise will function like PAD&quot; type=&quot;BEGIN_IMPLEMENTATION_SECTION_DIRECTIVE&quot; proposal=&quot;ORG _&quot;/&gt;<br />&nbsp; &nbsp;&lt;directive cpu=&quot;ALL&quot; name=&quot;PAD&quot; title=&quot;_P_a_d memory from current address to the specified address with FILLVALUE&quot; type=&quot;BEGIN_IMPLEMENTATION_SECTION_DIRECTIVE&quot; proposal=&quot;PAD _&quot;/&gt;<br />&nbsp; &nbsp;&lt;directive cpu=&quot;ALL&quot; name=&quot;REPT&quot; title=&quot;Begin _r_e_pea_t block&quot; type=&quot;BEGIN_REPEAT_SECTION_DIRECTIVE&quot; proposal=&quot;REPT _\nENDR&quot;/&gt;<br />&nbsp; &nbsp;&lt;directive cpu=&quot;ALL&quot; name=&quot;ENDR&quot; title=&quot;_E_n_d _repeat block&quot; type=&quot;END_SECTION_DIRECTIVE&quot; proposal=&quot;ENDR_&quot;/&gt;<br />&nbsp; &nbsp;&lt;directive cpu=&quot;ALL&quot; name=&quot;WORD&quot; title=&quot;Declare constant as _w_o_r_d&quot; type=&quot;DIRECTIVE&quot; proposal=&quot;WORD _&quot;/&gt;<br /><br />&nbsp; &nbsp;&lt;illegalopcode cpu=&quot;MOS6502_ILLEGAL&quot; name=&quot;ANC&quot; title=&quot;_A_nd byte with accumulator and set _carry&quot; proposal=&quot;ANC _&quot; flags=&quot;N,Z,C&quot; addressing=&quot;Immediate&quot; /&gt;<br />&nbsp; &nbsp;&lt;illegalopcode cpu=&quot;MOS6502_ILLEGAL&quot; name=&quot;ANE&quot; title=&quot;_A_nd X register with accumulator but _exact operation unknown&quot; proposal=&quot;ANE _&quot; addressing=&quot;Immediate&quot; /&gt;<br />&nbsp; &nbsp;&lt;illegalopcode cpu=&quot;MOS6502_ILLEGAL&quot; name=&quot;ARR&quot; title=&quot;_And byte with accumulator then _rotate one bit _right in accumulator&quot; proposal=&quot;ARR _&quot; flags=&quot;N,V,Z,C&quot; addressing=&quot;Immediate&quot; /&gt;<br />&nbsp; &nbsp;&lt;illegalopcode cpu=&quot;MOS6502_ILLEGAL&quot; name=&quot;DCP&quot; title=&quot;_De_crement memory by one and com_pare with memory&quot; proposal=&quot;DCP _&quot; flags=&quot;C&quot; addressing=&quot;Zero Page; Zero Page,X; Absolute; Absolute,X; Absolute,Y;&#40;Indirect,X&#41;; &#40;Indirect&#41;,Y&quot; /&gt;<br />&nbsp; &nbsp;&lt;illegalopcode cpu=&quot;MOS6502_ILLEGAL&quot; name=&quot;ISB&quot; title=&quot;_Increase memory by one, then _subtract memory from accumulator &#40;with _borrow&#41;&quot; proposal=&quot;ISB _&quot; flags=&quot;N,V,Z,C&quot; addressing=&quot;Zero Page; Zero Page,X; Absolute; Absolute,X; Absolute,Y;&#40;Indirect,X&#41;; &#40;Indirect&#41;,Y&quot; /&gt;<br />&nbsp; &nbsp;&lt;illegalopcode cpu=&quot;MOS6502_ILLEGAL&quot; name=&quot;LAS&quot; title=&quot;_Load _accumulator, X register and _stack pointer with with memory anded stack pointer&quot; proposal=&quot;LAS _&quot; flags=&quot;N,Z&quot; addressing=&quot;Absolute,Y&quot; /&gt;<br />&nbsp; &nbsp;&lt;illegalopcode cpu=&quot;MOS6502_ILLEGAL&quot; name=&quot;LAX&quot; title=&quot;_Load _accumulator and _X register with memory&quot; proposal=&quot;LAX _&quot; flags=&quot;N,Z&quot; addressing=&quot;Zero Page; Zero Page,Y; Absolute; Absolute,Y;&#40;Indirect,X&#41;;&#40;Indirect&#41;,Y&quot; /&gt;<br />&nbsp; &nbsp;&lt;illegalopcode cpu=&quot;MOS6502_ILLEGAL&quot; name=&quot;LXA&quot; title=&quot;And byte with accumulator, then _load value into _X register and _accumulator&quot; proposal=&quot;LXA _&quot; flags=&quot;N,Z&quot; addressing=&quot;Immediate&quot; /&gt;<br />&nbsp; &nbsp;&lt;illegalopcode cpu=&quot;MOS6502_ILLEGAL&quot; name=&quot;RLA&quot; title=&quot;_Rotate one bit _left in memory, then and _accumulator with memory&quot; proposal=&quot;RLA _&quot; flags=&quot;N,Z,C&quot; addressing=&quot;Zero Page; Zero Page,X; Absolute; Absolute,X; Absolute,Y;&#40;Indirect,X&#41;; &#40;Indirect&#41;,Y&quot; /&gt;<br />&nbsp; &nbsp;&lt;illegalopcode cpu=&quot;MOS6502_ILLEGAL&quot; name=&quot;RRA&quot; title=&quot;_Rotate one bit _right in memory, then add memory to _accumulator &#40;with carry&#41;&quot; proposal=&quot;RRA _&quot; flags=&quot;N,V,Z,C&quot; addressing=&quot;Zero Page; Zero Page,X; Absolute; Absolute,X; Absolute,Y;&#40;Indirect,X&#41;; &#40;Indirect&#41;,Y&quot; /&gt;<br />&nbsp; &nbsp;&lt;illegalopcode cpu=&quot;MOS6502_ILLEGAL&quot; name=&quot;SAX&quot; title=&quot;_Store _accumulator anded with _X register&quot; proposal=&quot;SAX _&quot; flags=&quot;N,Z&quot; addressing=&quot;Zero Page;Zero Page,Y;&#40;Indirect,X&#41;;Absolute&quot; /&gt;<br />&nbsp; &nbsp;&lt;illegalopcode cpu=&quot;MOS6502_ILLEGAL&quot; name=&quot;SBX&quot; title=&quot;_Subtract _byte from _X register &#40;without borrow&#41; after X register anded with the accumulator and store result in X register&quot; proposal=&quot;SBX _&quot; flags=&quot;N,Z,C&quot; addressing=&quot;Immediate&quot; /&gt;<br />&nbsp; &nbsp;&lt;illegalopcode cpu=&quot;MOS6502_ILLEGAL&quot; name=&quot;SHA&quot; title=&quot;_Store &#40;don't know what _H is for&#41; X register anded with _accumulator anded with 7&quot; proposal=&quot;SHA _&quot; flags=&quot;-&quot; addressing=&quot;Absolute,Y ;&#40;Indirect&#41;,Y&quot; /&gt;<br />&nbsp; &nbsp;&lt;illegalopcode cpu=&quot;MOS6502_ILLEGAL&quot; name=&quot;SHS&quot; title=&quot;And X register with accumulator and move to stack pointer. _Store _high byte of the target address of the argument +1 anded with _stack pointer&quot; proposal=&quot;SHS _&quot; flags=&quot;-&quot; addressing=&quot;Absolute,Y&quot; /&gt;<br />&nbsp; &nbsp;&lt;illegalopcode cpu=&quot;MOS6502_ILLEGAL&quot; name=&quot;SHX&quot; title=&quot;_Store _high byte of the target address of the argument +1 anded with _X register&quot; proposal=&quot;SHX _&quot; flags=&quot;-&quot; addressing=&quot;Absolute,Y&quot; /&gt;<br />&nbsp; &nbsp;&lt;illegalopcode cpu=&quot;MOS6502_ILLEGAL&quot; name=&quot;SHY&quot; title=&quot;_Store _high byte of the target address of the argument +1 anded with _Y register&quot; proposal=&quot;SHY _&quot; flags=&quot;-&quot; addressing=&quot;Absolute,x&quot; /&gt;<br />&nbsp; &nbsp;&lt;illegalopcode cpu=&quot;MOS6502_ILLEGAL&quot; name=&quot;SLO&quot; title=&quot;_Shift _left one bit in memory, then _or accumulator with memory&quot; proposal=&quot;SLO _&quot; flags=&quot;N,Z,C&quot; addressing=&quot;Zero Page; Zero Page,X; Absolute; Absolute,X; Absolute,Y; &#40;Indirect,X&#41;; &#40;Indirect&#41;,Y&quot; /&gt;<br />&nbsp; &nbsp;&lt;illegalopcode cpu=&quot;MOS6502_ILLEGAL&quot; name=&quot;SRE&quot; title=&quot;_Shift _right one bit in memory, then _eor accumulator with memory&quot; proposal=&quot;SRE _&quot; flags=&quot;N,Z,C&quot; addressing=&quot;Zero Page; Zero Page,X; Absolute; Absolute,X; Absolute,Y;&#40;Indirect,X&#41;;&#40;Indirect&#41;,Y&quot; /&gt;<br /><br />&lt;/instructionset&gt;</div>
<br />
<br />P.S. If you haven't yet tried out WUDSN, do it! It rocks! Just follow along with the installation instructions on the website and you'll be up and running in no time!

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>JAC!</b> [ Mon May 14, 2012 1:07 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I see you <em>really </em>like it James <img src="./images/smilies/icon_smile.gif" alt=":-)" title="Smile" />. And before everybody is going to modify and compiler themselves, I'll provide a small 1.6.2 with ASM6 and the related EMUs soon. If you have good sample source, please send them via PM.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Mon May 14, 2012 4:01 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />There's plenty of sample ca65 source on <a href="http://pineight.com/nes/" class="postlink">my NES page</a>.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>cpow</b> [ Mon May 14, 2012 7:06 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">There's plenty of sample ca65 source on <a href="http://pineight.com/nes/" class="postlink">my NES page</a>.</div>
<br />Oh that reminds me...I should try Thwaite in NESICIDE.   <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Mon May 14, 2012 10:33 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />It's a good idea to build the IDE on top of Eclipse, the project looks promising. Maybe some day we'll see debugging support through sockets? (At the moment there are no emulators that expose debugging through sockets, but that could change.)
<br />
<br />As far as assemblers go, I prefer CA65.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>JAC!</b> [ Mon May 14, 2012 11:15 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">thefox wrote:</div><div class="quotecontent">Maybe some day we'll see debugging support through sockets? (At the moment there are no emulators that expose debugging through sockets, but that could change.)</div>
<br />Actually there are some (e.g. VICE) but the approach behind WUDSN IDE is the focus in the "I" (Integrated) of multiple platforms &amp; compilers. With a total of 6 platforms with 2-5 emulators each and 7 compilers, all developed by different people (languages, OS...)  I found it an impossible job to align with all of them on this level (wire protocol &amp; features like in Java). Instead I try to align on loose Interfaces like for MADS &amp; Altirria and put the IDE in between.
<br />
<br />This screen below show what tebe and phaeron and I achieved in terms of  source level debugging where the IDE is the editor (also for the breakpoints) and the emulator is the debugger. In this sense the emulator is nothing but the "Debug perspective" modern IDEs offer. An because I also use the IDE for <em>real</em> coding I can say that with compile &amp; startup  times of about 1s, you don't really miss remote debugging (as opposed in J2EE for example).
<br />
<br /><img src="http://www.wudsn.com/home/news/images/2012-05-12-ide-bp-source.png" alt="Image" />
<br /><img src="http://www.wudsn.com/home/news/images/2012-05-12-ide-bp-emulator.png" alt="Image" />

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>