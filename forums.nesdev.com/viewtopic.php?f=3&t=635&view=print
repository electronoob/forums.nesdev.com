<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - APU Frame IRQ Flag and IRQ Timing</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">APU Frame IRQ Flag and IRQ Timing</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=3&amp;t=635">http://forums.nesdev.com/viewtopic.php?f=3&amp;t=635</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Sat Oct 08, 2005 8:48 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>APU Frame IRQ Flag and IRQ Timing</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />This thread is regarding when the APU's frame IRQ flag is set and when the IRQ occurs. I started a new thread since I thought it might have some long posts and didn't want to be bogged down with an already-long thread.
<br />
<br />The best I can do is show several code sequences and the result they produce, and leave it to you to come up with a simple model to explain it. This is the same raw data I have to work with.
<br />
<br />The comments in the following code show what is printed when it is run on my NES. The calls to sync_apu synchronize with the APU even/odd "jitter" so that the write to $4017 will be on an even internal cycle, such that there is no extra clock delay before the new mode begins. The times of some events are commented, relative to the write to $4017.
<br />
<br />Delays are made with delay_yaN, with a comment indicating the total clocks taken by the ldy, lda, jsr, delay routine, and rts. In other words, deleting the three instructions that invoke the delay would cause the following instructions to execute that many clocks earlier.
<br />
<br />These demonstrate when the set IRQ flag becomes visible via a $4015 read, and the way the IRQ flag is apparently set multiple times (or not cleared when reads are at particular times):
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">print_a_x:<br />jsr&nbsp; &nbsp;debug_byte<br />txa<br />jsr&nbsp; &nbsp;debug_byte<br />rts<br /><br />reset:<br />jsr&nbsp; &nbsp;setup_apu<br /><br />jsr&nbsp; &nbsp;sync_apu<br />lda&nbsp; &nbsp;#$00&nbsp; &nbsp; &nbsp; &nbsp; ; start mode<br />sta&nbsp; &nbsp;$4017&nbsp; &nbsp; &nbsp; &nbsp;; write at 0<br />ldy&nbsp; &nbsp;#48&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; 29826 delay<br />lda&nbsp; &nbsp;#123&nbsp; &nbsp; &nbsp; &nbsp; <br />jsr&nbsp; &nbsp;delay_ya1<br />lda&nbsp; &nbsp;$4015&nbsp; &nbsp; &nbsp; &nbsp;; read at 29830<br />ldx&nbsp; &nbsp;$4015&nbsp; &nbsp; &nbsp; &nbsp;; read at 29834<br />jsr&nbsp; &nbsp;print_a_x&nbsp; &nbsp;; prints $00 $40<br /><br />jsr&nbsp; &nbsp;sync_apu<br />lda&nbsp; &nbsp;#$00&nbsp; &nbsp; &nbsp; &nbsp; ; start mode<br />sta&nbsp; &nbsp;$4017<br />ldy&nbsp; &nbsp;#48&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; 29827 delay<br />lda&nbsp; &nbsp;#123&nbsp; &nbsp; &nbsp; &nbsp; <br />jsr&nbsp; &nbsp;delay_ya2<br />lda&nbsp; &nbsp;$4015&nbsp; &nbsp; &nbsp; &nbsp;; read at 29831<br />ldx&nbsp; &nbsp;$4015<br />jsr&nbsp; &nbsp;print_a_x&nbsp; &nbsp;; prints $40 $40<br /><br />jsr&nbsp; &nbsp;sync_apu<br />lda&nbsp; &nbsp;#$00&nbsp; &nbsp; &nbsp; &nbsp; ; start mode<br />sta&nbsp; &nbsp;$4017<br />ldy&nbsp; &nbsp;#48&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; 29828 delay<br />lda&nbsp; &nbsp;#123&nbsp; &nbsp; &nbsp; &nbsp; <br />jsr&nbsp; &nbsp;delay_ya3<br />lda&nbsp; &nbsp;$4015&nbsp; &nbsp; &nbsp; &nbsp;; read at 29832<br />ldx&nbsp; &nbsp;$4015<br />jsr&nbsp; &nbsp;print_a_x&nbsp; &nbsp;; prints $40 $40<br /><br />jsr&nbsp; &nbsp;sync_apu<br />lda&nbsp; &nbsp;#$00&nbsp; &nbsp; &nbsp; &nbsp; ; start mode<br />sta&nbsp; &nbsp;$4017<br />ldy&nbsp; &nbsp;#48&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; 29829 delay<br />lda&nbsp; &nbsp;#123&nbsp; &nbsp; &nbsp; &nbsp; <br />jsr&nbsp; &nbsp;delay_ya4<br />lda&nbsp; &nbsp;$4015&nbsp; &nbsp; &nbsp; &nbsp;; read at 29833<br />ldx&nbsp; &nbsp;$4015<br />jsr&nbsp; &nbsp;print_a_x&nbsp; &nbsp;; prints $40 $00<br /></div><br /><br />These demonstrate the time when the IRQ occurs:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">irq:<br />bit&nbsp; &nbsp;$4015&nbsp; &nbsp; &nbsp; &nbsp;; clear IRQ flag<br />txa&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; save current value of X<br />rti<br /><br />reset:<br />jsr&nbsp; &nbsp;setup_apu<br /><br />jsr&nbsp; &nbsp;sync_apu<br />lda&nbsp; &nbsp;#$40&nbsp; &nbsp; &nbsp; &nbsp; ; clear frame IRQ flag first<br />sta&nbsp; &nbsp;$4017<br />cli<br />lda&nbsp; &nbsp;#$00&nbsp; &nbsp; &nbsp; &nbsp; ; start mode<br />sta&nbsp; &nbsp;$4017&nbsp; &nbsp; &nbsp; &nbsp;; write at 0<br />ldy&nbsp; &nbsp;#48&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; 29828 delay<br />lda&nbsp; &nbsp;#123&nbsp; &nbsp; &nbsp; &nbsp; <br />jsr&nbsp; &nbsp;delay_ya3<br />ldx&nbsp; &nbsp;#0<br />ldx&nbsp; &nbsp;#1&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ; first clock at 29831<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ; IRQ occurs at 29833<br />ldx&nbsp; &nbsp;#2<br />ldx&nbsp; &nbsp;#3<br />sei<br />jsr&nbsp; &nbsp;debug_byte&nbsp; ; prints $01<br /><br />jsr&nbsp; &nbsp;sync_apu<br />lda&nbsp; &nbsp;#$40&nbsp; &nbsp; &nbsp; &nbsp; ; clear frame IRQ flag first<br />sta&nbsp; &nbsp;$4017<br />cli<br />lda&nbsp; &nbsp;#$00&nbsp; &nbsp; &nbsp; &nbsp; ; start mode<br />sta&nbsp; &nbsp;$4017&nbsp; &nbsp; &nbsp; &nbsp;; write at 0<br />ldy&nbsp; &nbsp;#48&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; 29827 delay<br />lda&nbsp; &nbsp;#123&nbsp; &nbsp; &nbsp; &nbsp; <br />jsr&nbsp; &nbsp;delay_ya2<br />ldx&nbsp; &nbsp;#0<br />ldx&nbsp; &nbsp;#1<br />ldx&nbsp; &nbsp;#2&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ; first clock at 29832<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ; IRQ occurs at 29834<br />ldx&nbsp; &nbsp;#3<br />sei<br />jsr&nbsp; &nbsp;debug_byte&nbsp; ; prints $02<br /></div>
<br />
<br />EDIT: Clarified delay_yaN and added the time when the IRQ occurs.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Disch</b> [ Sat Oct 08, 2005 9:41 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I'm a little unclear on the delay_ya2 bit in the second code snippit.  The comment says it will delay 29827... but from when to when?  does the delay include the LDY/LDA/JSR lines?  what about the RTS?
<br />
<br />or basically... when is that LDX #0   happening in relationship to the $4017 write?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Sat Oct 08, 2005 10:16 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The original post has been edited to clarify the delays and time of IRQ. The comment in the delay is the most useful value, i.e. it includes everything: the setup code, delay routine, and RTS. I wrote a little command-line tool that takes an arbitrary delay and generates the code to call the delay routine. It's very useful for writing test code.
<br />
<br />I could use this format for posting future reverse-engineering results. It's good in that it's unambiguous and not subject to any interpretation error on my part, and can be directly tested for any errors. It would make it easier for me to post all the (possibly) new things I've found about the APU and PPU. Ideas for improving readability would be appreciated.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Disch</b> [ Sat Oct 08, 2005 10:59 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="codetitle"><b>Code:</b></div><div class="codecontent">lda&nbsp; &nbsp;$4015&nbsp; &nbsp; &nbsp; &nbsp;; read at 29831<br />ldx&nbsp; &nbsp;$4015<br />jsr&nbsp; &nbsp;print_a_x&nbsp; &nbsp;; prints $40 $40<br /></div>
<br />
<br />Could that read be affected by the last read from $4015?  I mean... could the last read not have cleared the IRQ flag and it's just giving you a dud value for that one?
<br />
<br />If that's the case, then it looks like 29832 might be the first cycle where the IRQ flag is raised.  It's far enough back to match your IRQ example, but enough ahead to match most of your $4015 reads (except for the above mentioned)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Sun Oct 09, 2005 6:19 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Could that read be affected by the last read from $4015? I mean... could the last read not have cleared the IRQ flag and it's just giving you a dud value for that one?</div><br /><br />I don't follow. I modified the test to read three times in a row (and starting four clocks earlier than before) and print those values; maybe that will answer this question.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">If that's the case, then it looks like 29832 might be the first cycle where the IRQ flag is raised. It's far enough back to match your IRQ example, but enough ahead to match most of your $4015 reads (except for the above mentioned)</div>
<br />
<br />I think the IRQ line needs to be asserted before the beginning of the last cycle of an instruction for an IRQ to occur (in place of the next instruction). When I get around to posting the exact PPU's VBL flag timing and NMI timing, you can compare behaviors.
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">jsr&nbsp; &nbsp;sync_apu<br />lda&nbsp; &nbsp;#$00&nbsp; &nbsp; &nbsp; &nbsp; ; start mode<br />sta&nbsp; &nbsp;$4017&nbsp; &nbsp; &nbsp; &nbsp;; write at 0<br />ldy&nbsp; &nbsp;#50&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; 29822 delay<br />lda&nbsp; &nbsp;#118&nbsp; &nbsp; &nbsp; &nbsp; <br />jsr&nbsp; &nbsp;delay_ya5<br />lda&nbsp; &nbsp;$4015&nbsp; &nbsp; &nbsp; &nbsp;; read at 29826<br />ldx&nbsp; &nbsp;$4015&nbsp; &nbsp; &nbsp; &nbsp;; read at 29830<br />ldy&nbsp; &nbsp;$4015&nbsp; &nbsp; &nbsp; &nbsp;; read at 29834<br />jsr&nbsp; &nbsp;print_a&nbsp; &nbsp; &nbsp;; prints $00<br />jsr&nbsp; &nbsp;print_x&nbsp; &nbsp; &nbsp;; prints $00<br />jsr&nbsp; &nbsp;print_y&nbsp; &nbsp; &nbsp;; prints $40<br /><br />jsr&nbsp; &nbsp;sync_apu<br />lda&nbsp; &nbsp;#$00&nbsp; &nbsp; &nbsp; &nbsp; ; start mode<br />sta&nbsp; &nbsp;$4017<br />ldy&nbsp; &nbsp;#50&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; 29823 delay<br />lda&nbsp; &nbsp;#118&nbsp; &nbsp; &nbsp; &nbsp; <br />jsr&nbsp; &nbsp;delay_ya6<br />lda&nbsp; &nbsp;$4015&nbsp; &nbsp; &nbsp; &nbsp;; read at 29827<br />ldx&nbsp; &nbsp;$4015&nbsp; &nbsp; &nbsp; &nbsp;; read at 29831<br />ldy&nbsp; &nbsp;$4015&nbsp; &nbsp; &nbsp; &nbsp;; read at 29835<br />jsr&nbsp; &nbsp;print_a&nbsp; &nbsp; &nbsp;; prints $00<br />jsr&nbsp; &nbsp;print_x&nbsp; &nbsp; &nbsp;; prints $40<br />jsr&nbsp; &nbsp;print_y&nbsp; &nbsp; &nbsp;; prints $40<br /><br />jsr&nbsp; &nbsp;sync_apu<br />lda&nbsp; &nbsp;#$00&nbsp; &nbsp; &nbsp; &nbsp; ; start mode<br />sta&nbsp; &nbsp;$4017<br />ldy&nbsp; &nbsp;#50&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; 29824 delay<br />lda&nbsp; &nbsp;#118&nbsp; &nbsp; &nbsp; &nbsp; <br />jsr&nbsp; &nbsp;delay_ya7<br />lda&nbsp; &nbsp;$4015&nbsp; &nbsp; &nbsp; &nbsp;; read at 29828<br />ldx&nbsp; &nbsp;$4015&nbsp; &nbsp; &nbsp; &nbsp;; read at 29832<br />ldy&nbsp; &nbsp;$4015&nbsp; &nbsp; &nbsp; &nbsp;; read at 29836<br />jsr&nbsp; &nbsp;print_a&nbsp; &nbsp; &nbsp;; prints $00<br />jsr&nbsp; &nbsp;print_x&nbsp; &nbsp; &nbsp;; prints $40<br />jsr&nbsp; &nbsp;print_y&nbsp; &nbsp; &nbsp;; prints $40<br /><br />jsr&nbsp; &nbsp;sync_apu<br />lda&nbsp; &nbsp;#$00&nbsp; &nbsp; &nbsp; &nbsp; ; start mode<br />sta&nbsp; &nbsp;$4017<br />ldy&nbsp; &nbsp;#50&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; 29825 delay<br />lda&nbsp; &nbsp;#118&nbsp; &nbsp; &nbsp; &nbsp; <br />jsr&nbsp; &nbsp;delay_ya8<br />lda&nbsp; &nbsp;$4015&nbsp; &nbsp; &nbsp; &nbsp;; read at 29829<br />ldx&nbsp; &nbsp;$4015&nbsp; &nbsp; &nbsp; &nbsp;; read at 29833<br />ldy&nbsp; &nbsp;$4015&nbsp; &nbsp; &nbsp; &nbsp;; read at 29837<br />jsr&nbsp; &nbsp;print_a&nbsp; &nbsp; &nbsp;; prints $00<br />jsr&nbsp; &nbsp;print_x&nbsp; &nbsp; &nbsp;; prints $40<br />jsr&nbsp; &nbsp;print_y&nbsp; &nbsp; &nbsp;; prints $00<br /></div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Disch</b> [ Wed Oct 12, 2005 10:49 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />So the flag is set on 29831... but the IRQ doesn't happen until 29833?
<br />
<br />what happens if IRQs are disabled on 29832... does an IRQ still fire on 29833?   Why does this behavior have to be so goofy!  I'm like astounded that so many emu authors said they got their emu to pass all the tests and I'm just having the hardest time with it.  ;_;
<br />
<br />Guess I'll go back to tinkering

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Wed Oct 12, 2005 1:59 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Your questions are providing good ideas of things to test and document here, and who says other people have implemented this behavior properly? This discussion leads to better understanding and further tests; it's quite subtle (and this is only the beginning...). This is finally prompting me to speculate on what's actually going on in the hardware.
<br />
<br />The 6502 uses a two-phase clock, so some events on clock X actually occur one half clock later. My theory is that memory reads occur a half clock later, so the IRQ flag is set at the beginning of clock 29831.
<br />
<br />My theory is also that the IRQ flag is sampled just before the beginning of the final clock of an instruction, so the earliest it can be seen is 29832, and if that is the last clock of an instruction, the earliest it can occur is 29833.
<br />
<br />Further, my theory is that SEI doesn't set the IRQ inhibit flag until its second clock (or maybe after). Since the IRQ flag is sampled just before that, SEI won't take effect until the beginning of the next instruction. If an IRQ was already scheduled on the last clock of SEI, it will still occur. Thus you can have the situation of setting the I flag, having the IRQ taken, and having the saved status on the stack with the I flag set!
<br />
<br />Currently in my emulator I'm handling this "delayed" interrupt behavior by keeping track of the *time* the interrupt should occur, rather than just a flag saying "it will occur". The time the interrupt should occur is basically at soonest 2 clocks after when the flag is set. I haven't done much work on this so it would be productive to start a thread to discuss effective strategies for handling interrupts (since I imagine this will lead to insight into NMI handling too).
<br />
<br />I'll definitely write some test ROMs for all the cases covered here.
<br />
<br />Here is the test you suggested:
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">reset:<br /><br />jsr&nbsp; &nbsp;setup_apu<br /><br />jsr&nbsp; &nbsp;begin_test<br />lda&nbsp; &nbsp;#$00&nbsp; &nbsp; &nbsp; &nbsp; ; start mode<br />sta&nbsp; &nbsp;$4017&nbsp; &nbsp; &nbsp; &nbsp;; write at 0<br />ldy&nbsp; &nbsp;#48&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; 29825 delay<br />lda&nbsp; &nbsp;#123&nbsp; &nbsp; &nbsp; &nbsp; <br />jsr&nbsp; &nbsp;delay_ya0<br />lda&nbsp; &nbsp;#$ff<br />ldx&nbsp; &nbsp;#0&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ; 29828<br />sei&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; 29830<br />ldx&nbsp; &nbsp;#1<br />ldx&nbsp; &nbsp;#2<br />ldx&nbsp; &nbsp;#3<br />jsr&nbsp; &nbsp;print_a&nbsp; &nbsp; &nbsp;; prints $ff &#40;IRQ not taken&#41;<br /><br />jsr&nbsp; &nbsp;begin_test<br />lda&nbsp; &nbsp;#$00&nbsp; &nbsp; &nbsp; &nbsp; ; start mode<br />sta&nbsp; &nbsp;$4017&nbsp; &nbsp; &nbsp; &nbsp;; write at 0<br />ldy&nbsp; &nbsp;#48&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; 29826 delay<br />lda&nbsp; &nbsp;#123&nbsp; &nbsp; &nbsp; &nbsp; <br />jsr&nbsp; &nbsp;delay_ya1<br />lda&nbsp; &nbsp;#$ff<br />ldx&nbsp; &nbsp;#0&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ; 29829<br />sei&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; 29831<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ; IRQ occurs at 29833<br />ldx&nbsp; &nbsp;#1<br />jsr&nbsp; &nbsp;print_a&nbsp; &nbsp; &nbsp;; prints $00<br />jsr&nbsp; &nbsp;print_y&nbsp; &nbsp; &nbsp;; prints $04 &#40;I flag set before IRQ&#41;<br /><br />jsr&nbsp; &nbsp;begin_test<br />lda&nbsp; &nbsp;#$00&nbsp; &nbsp; &nbsp; &nbsp; ; start mode<br />sta&nbsp; &nbsp;$4017&nbsp; &nbsp; &nbsp; &nbsp;; write at 0<br />ldy&nbsp; &nbsp;#48&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; 29827 delay<br />lda&nbsp; &nbsp;#123&nbsp; &nbsp; &nbsp; &nbsp; <br />jsr&nbsp; &nbsp;delay_ya2<br />lda&nbsp; &nbsp;#$ff<br />ldx&nbsp; &nbsp;#0&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ; 29830<br />sei&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; 29832<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ; IRQ occurs at 29834<br />ldx&nbsp; &nbsp;#1<br />jsr&nbsp; &nbsp;print_a&nbsp; &nbsp; &nbsp;; prints $00<br />jsr&nbsp; &nbsp;print_y&nbsp; &nbsp; &nbsp;; prints $04 &#40;I flag set before IRQ&#41;<br /><br />jsr&nbsp; &nbsp;begin_test<br />lda&nbsp; &nbsp;#$00&nbsp; &nbsp; &nbsp; &nbsp; ; start mode<br />sta&nbsp; &nbsp;$4017&nbsp; &nbsp; &nbsp; &nbsp;; write at 0<br />ldy&nbsp; &nbsp;#48&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; 29828 delay<br />lda&nbsp; &nbsp;#123&nbsp; &nbsp; &nbsp; &nbsp; <br />jsr&nbsp; &nbsp;delay_ya3<br />lda&nbsp; &nbsp;#$ff<br />ldx&nbsp; &nbsp;#0&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ; 29831<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ; IRQ occurs at 29833<br />sei<br />ldx&nbsp; &nbsp;#1<br />jsr&nbsp; &nbsp;print_a&nbsp; &nbsp; &nbsp;; prints $00<br />jsr&nbsp; &nbsp;print_y&nbsp; &nbsp; &nbsp;; prints $00<br /><br />jmp&nbsp; &nbsp;forever<br /><br />begin_test:<br /><br />jsr&nbsp; &nbsp;sync_apu<br />lda&nbsp; &nbsp;#$40<br />sta&nbsp; &nbsp;$4017<br />cli<br />rts<br /><br />irq:<br /><br />bit&nbsp; &nbsp;$4015&nbsp; &nbsp; &nbsp; &nbsp;; clear IRQ flag<br />pla&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; y = I flag *before* IRQ occurred<br />pha<br />and&nbsp; &nbsp;#$04<br />tay<br />txa&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; save current value of X<br />rti<br /></div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Disch</b> [ Wed Oct 12, 2005 4:11 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Thanks.  I'll have to review that later when I have a clearer head (suffering from a cold today ;_;).
<br />
<br />Anyway, I changed my emus behavior so that the bit returned from $4015.6 and the actual IRQ pending flag are two seperate things and I was able to iron out my problems (even though that seemed rather hackish...  sad to say I think I'm tiring and getting to the point of just saying "screw it, that's close enough").
<br />
<br />Anyway all tests give me a pass now!  ^^
<br />
<br />(edit3 - posted a Q here before but found my problem so I took it out)
<br />
<br />
<br />EDIT -- another thing I noticed that's sort of on the same subject as frame IRQs.  It seems Cobra Triangle does some very sloppy coding where it writes $80 to $4017 after it waits the 2 frames on startup.  I was having problems with this since a frame IRQ was happening before the mode change, and Cobra Triangle would deadlock when starting the game (on it's CLI). --- since the game NEVER acknowledges or disables frame interrupts.
<br />
<br />I was able to correct the problem by starting system emulation at the very start of VBlank (before, my HardReset would start emulation at the start of the dummy scanline before VBlank).  This makes the first LDA $2002 BPL check instantaneous, and allows the second one to finish allowing the game to switch frame modes <em>just barely</em> before the frame IRQ is tripped.
<br />
<br />Is there any information on when in the frame the system starts on powerup/reset?  Is $2002.7 high immediately after flipping the power on?
<br />
<br />Just some things I was thinking about.  I thought it would be useful to bring up for other emu authors... in case any of you guys are having the same problem with Cobra Triangle.
<br />
<br />
<br />
<br />edit4  -  grah... now that all sound tests are passing, Time Lord is broken.  Must be the frame IRQ hackish thing I did   *sigh*
<br />
<br />
<br />hrm....  Apparently Time Lord has the exact opposite problem as Cobra Triangle.  It acknowledges the Frame IRQ several cycles before it's tripped.  Must've worked before when I started emulation on the dummy scanline rather than at the start of VBlank.
<br />
<br />
<br />last edit I swear -- Was able to get both Cobra Triangle and Time Lord working (had nothing to do with the APU tests).  What I do now is I start emulation 10 scanlines into VBlank on reset/powerup (with $2002.7 high immediately).  This gives both games lots of buffer time to switch frame modes... so that their Frame IRQs never trip.  If anyone has had similar problems with these games and has come up with a different solution I'd be very interested in hearing it.
<br />
<br />So yay... now Cobra Triangle, Time Lord, <strong>AND</strong> and APU tests are all working.  It's miller time.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Marty</b> [ Thu Oct 13, 2005 4:00 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Disch wrote:</div><div class="quotecontent">last edit I swear -- Was able to get both Cobra Triangle and Time Lord working (had nothing to do with the APU tests).  What I do now is I start emulation 10 scanlines into VBlank on reset/powerup (with $2002.7 high immediately).  This gives both games lots of buffer time to switch frame modes... so that their Frame IRQs never trip.  If anyone has had similar problems with these games and has come up with a different solution I'd be very interested in hearing it.<br /><br />So yay... now Cobra Triangle, Time Lord, <strong>AND</strong> and APU tests are all working.  It's miller time.</div>
<br />
<br />Good find Disch. I had similiar problem getting Time Lord to run properly without changing the reset value of the frame counter, which would then break test #9.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Zepper</b> [ Thu Oct 13, 2005 10:52 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Disch, what do you mean "10 scanlines into VBlank"??? Do you mean at line 10~19, then 20, then 21-260...?
<br />
<br />My problem is with Wizard &amp; Warriors 2 - unknown instruction at title screen. I know my VBlank flag fails on blargg's sprite timing tests, but no visible solution right now.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Disch</b> [ Thu Oct 13, 2005 11:59 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I just tried W&amp;W2 in my emu and the NTSC (U) version played fine, but the game hung on the PAL (E) [!] version (the sword on the title screen wasn't being drawn, and neither was the 'D' in "IRONSWORD")... however I wasn't getting any bad opcodes.. so I don't know what could be your problem there.
<br />
<br />I fixed Ironsword by pushing the reset start time even further forward for PAL mode.  Now, rather than having it start 10 scanlines into VBlank, it starts 10 scanlines before the end of VBlank.
<br />
<br />To clarify this:
<br />
<br />
<br />NTSC:
<br />
<br />** Frame Start **
<br />10 scanlines of VBlank
<br />** -- start emulation here on Powerup/reset -- **
<br />10 more scanlines of VBlank
<br />1 pre-render scanline
<br />240 rendered scanlines
<br />1 dummy scanline
<br />** Frame End **
<br />
<br />
<br />PAL:
<br />** Frame Start **
<br />60 scanlines of VBlank
<br />** -- start emulation here on Powerup/reset -- **
<br />10 more scanlines of VBlank
<br />1 pre-render scanline
<br />240 rendered scanlines
<br />1 dummy scanline
<br />** Frame End **
<br />
<br />
<br />$2002.7 should be SET IMMEDIATELY on powerup/reset.. or these games in question (Cobra Triangle, Time Lord, and probably Ironsword but I haven't checked) will hang.
<br />
<br />Anyway that's what I'm currently doing and all these games are working for me.  I don't know about that bad opcode you're getting, Fx3... maybe your problem lies elsewhere?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Thu Oct 13, 2005 1:41 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Argh. This thread is about the APU frame counter. New threads don't cost anything. :)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Guest</b> [ Thu Oct 13, 2005 2:02 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">blargg wrote:</div><div class="quotecontent">Argh. This thread is about the APU frame counter. New threads don't cost anything. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /></div>
<br />
<br />Yes. I'm not offtopic as you might think. ^_^;;
<br />There are 10 cycles on reset timing (APU frame counter), but it seems the latency could be a bit higher? -_-;; Plus, the frameIRQ seems to be the problem... even if ALL eleven tests shows OK (1).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Thu Oct 13, 2005 3:44 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The APU frame counter is basically reset when the NES is, but the PPU acts as if it were reset hundreds of clocks earlier. As for passing the APU test ROMs, that is no guarantee that everything is correct, as you point out. The RE test code in this thread is about as solid as you can get, so any problems must be due to something else. I'm going to be working more on power-up state soon.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Nessie</b> [ Thu Oct 13, 2005 4:23 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I believe I read somewhere (might have been BT's APU doc) that the APU does nothing during the first 2048 cycles after startup. Perhaps that's related?

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>