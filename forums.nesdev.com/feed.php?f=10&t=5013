<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=10&amp;t=5013" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2009-04-02T06:33:03-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=10&amp;t=5013</id>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2009-04-02T06:33:03-07:00</updated>
<published>2009-04-02T06:33:03-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5013&amp;p=45061#p45061</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5013&amp;p=45061#p45061"/>
<title type="html"><![CDATA[Questions about CA65 segments]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5013&amp;p=45061#p45061"><![CDATA[
I'd try something like your "and add lines like this to the .cfg" suggestion. Because it appears ld65 won't let you specify the size of a SEGMENT, you have to do it with MEMORY. Change M_PRGBANK0 through M_PRGBANK6 to size = $3FFF, then after each one of those, make a MEMORY area M_PRGBANK0_ID through M_PRGBANK6_ID with start = $BFFF, size = $0001, type = ro, fill = yes, fillval = $00 through fillval = $06.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Thu Apr 02, 2009 6:33 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[MetalSlime]]></name></author>
<updated>2009-04-01T23:24:27-07:00</updated>
<published>2009-04-01T23:24:27-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5013&amp;p=45053#p45053</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5013&amp;p=45053#p45053"/>
<title type="html"><![CDATA[Questions about CA65 segments]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5013&amp;p=45053#p45053"><![CDATA[
Howdy.  I started messing with CA65 the other day and I got a little test rom to assemble.  I had a few questions about segments and how best to use them.  <br /><br />Question 1:  First, let's assume I have a UNROM .cfg layout like this (compliments of <a href="http://nesdev.com/bbs/viewtopic.php?p=39883#39883" class="postlink">SecretServiceDude</a>. Thanks man!):<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">MEMORY &#123;<br />   M_ZEROPAGE:     start =   $00, size =  $100, type = rw;<br />   M_RAM:          start =  $200, size =  $600, type = rw;<br />   M_HEADER:       start =    $0, size =   $10, type = ro, fill = yes, file = &quot;build\ld65\header.bin&quot;;<br />   M_WORKRAM:      start = $6000, size = $2000, type = rw;<br /><br />   # PRG ROM banks &#40;16 KB each, bank 7 is fixed&#41;<br />   M_PRGBANK0:     start = $8000, size = $4000, type = ro, fill = yes, file = &quot;build\ld65\bank0.prg&quot;;<br />   M_PRGBANK1:     start = $8000, size = $4000, type = ro, fill = yes, file = &quot;build\ld65\bank1.prg&quot;;<br />   M_PRGBANK2:     start = $8000, size = $4000, type = ro, fill = yes, file = &quot;build\ld65\bank2.prg&quot;;<br />   M_PRGBANK3:     start = $8000, size = $4000, type = ro, fill = yes, file = &quot;build\ld65\bank3.prg&quot;;<br />   M_PRGBANK4:     start = $8000, size = $4000, type = ro, fill = yes, file = &quot;build\ld65\bank4.prg&quot;;<br />   M_PRGBANK5:     start = $8000, size = $4000, type = ro, fill = yes, file = &quot;build\ld65\bank5.prg&quot;;<br />   M_PRGBANK6:     start = $8000, size = $4000, type = ro, fill = yes, file = &quot;build\ld65\bank6.prg&quot;;<br />   M_PRGFIXED:     start = $C000, size = $4000, type = ro, fill = yes, file = &quot;build\ld65\fixed.prg&quot;;<br />&#125;<br /><br />SEGMENTS &#123;<br />   HEADER:         load = M_HEADER,   type = ro;<br />   CODE:           load = M_PRGFIXED, type = ro, start = $C000;<br />   RODATA:         load = M_PRGFIXED, type = ro;<br />   VECTORS:        load = M_PRGFIXED, type = ro, start = $FFF0;<br />   ZEROPAGE:       load = M_ZEROPAGE, type = zp;<br />   BSS:            load = M_RAM,      type = bss, align = $100;<br />   PRGBANK0:       load = M_PRGBANK0, type = ro, start = $8000;<br />   PRGBANK1:       load = M_PRGBANK1, type = ro, start = $8000;<br />   PRGBANK2:       load = M_PRGBANK2, type = ro, start = $8000;<br />   PRGBANK3:       load = M_PRGBANK3, type = ro, start = $8000;<br />   PRGBANK4:       load = M_PRGBANK4, type = ro, start = $8000;<br />   PRGBANK5:       load = M_PRGBANK5, type = ro, start = $8000;<br />   PRGBANK6:       load = M_PRGBANK6, type = ro, start = $8000;<br />&#125; </div><br /><br />Now for example's sake, let's say that for some reason or another I want the last byte in each swappable bank (last byte will be at $BFFF) to identify the bank.  Bank0 will have a "00" at $BFFF, Bank1 will have "01" at $BFFF, Bank2 will have "02" at BFFF, etc.   Should I do something like this:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">.segment &quot;PRGBANK0_ID&quot;<br />.byte $00<br /><br />.segment &quot;PRGBANK1_ID&quot;<br />.byte $01<br /><br />....<br /><br />.segment &quot;PRGBANK6_ID&quot;<br />.byte $06<br /></div><br /><br />and add lines like this to the .cfg<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">PRGBANK0_ID:       load = M_PRGBANK0, type = ro, start = $BFFF;<br />PRGBANK1_ID:       load = M_PRGBANK1, type = ro, start = $BFFF;<br />...<br />PRGBANK6_ID:       load = M_PRGBANK6, type = ro, start = $BFFF;</div><br /><br />or should I do something like this instead:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">.segment &quot;PRGBANK0&quot;<br />.org $BFFF<br />.byte $00<br /><br />.segment &quot;PRGBANK1&quot;<br />.org $BFFF<br />.byte $01<br /><br />etc</div><br /><br />or something else completely?<br /><br /><br />Question 2:  It seems like they want you to separate CODE and RODATA.  Should I do this separation for each bank/module I make?  For example, say I'm writing a sound engine.  Obviously it needs code and lookup tables.  Is it the best practice to make two segments:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">.segment &quot;SOUND_ENGINE_CODE&quot;<br />;<br />;code here<br /><br />.segment &quot;SOUND_ENGINE_RODATA&quot;<br /><br />;<br />;table here<br /><br />.segment &quot;SOUND_ENGINE_CODE&quot;<br />;<br />;more code<br /></div><br /><br />or is it more common to just lump it all together:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">.segment &quot;SOUND_ENGINE&quot;<br />;<br />;code here<br />;<br />;table here<br />;<br />;more code<br /></div><br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">#this is the SEGMENT section of the linker .cfg file<br />SOUND_ENGINE:       load = M_PRGBANK0, type = ro, start = $8000;<br /></div><br /><br />Just want to know the best way to organize things before I start <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" /><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3632">MetalSlime</a> — Wed Apr 01, 2009 11:24 pm</p><hr />
]]></content>
</entry>
</feed>