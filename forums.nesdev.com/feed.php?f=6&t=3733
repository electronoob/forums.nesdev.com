<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=6&amp;t=3733" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2007-11-28T13:25:45-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=6&amp;t=3733</id>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2007-11-28T13:25:45-07:00</updated>
<published>2007-11-28T13:25:45-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3733&amp;p=28862#p28862</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3733&amp;p=28862#p28862"/>
<title type="html"><![CDATA[Music Engine]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3733&amp;p=28862#p28862"><![CDATA[
Oh yeah. That's two different things, the fact that the echoed sound isn't in phase with the original one should be right. This doesn't proof that they are dephased of 90° trough, but I guess that's the best approximation one can do.<br /><br />What I was talking about it that the NES volume control is linear, but the human perception of sound is exponential (if you hear a song that is 4 times louder, you will think it's 2 times louder). That means that volume 8 seems barely less than volume 15, but volume 4 seems a lot less than volume 8 in comparaison. (btw the SNES has linear volume control too, but (optionnal) exponential enveloppe control).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Wed Nov 28, 2007 1:25 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2007-11-28T11:12:27-07:00</updated>
<published>2007-11-28T11:12:27-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3733&amp;p=28854#p28854</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3733&amp;p=28854#p28854"/>
<title type="html"><![CDATA[Music Engine]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3733&amp;p=28854#p28854"><![CDATA[
NES, Game Boy, GBA, and DS audio use a nearly linear function from volume to amplitude. It's SMS/Game Gear that uses an exponential function.<br /><br />A signal with amplitude 4 and a signal with a different frequency and amplitude 3 will sound as loud as a single signal of amplitude 5. This is easier to see with uncorrelated signals such as two sources of noise than with periodic signals: if the frequencies are close (e.g. C and C#), you'll get beating as constructive interference goes to 7 and then destructive interference goes to 1, but it'll still sound like 5 overall. Adding 4+3 to get 7 assumes that the phases are always set up for constructive interference, which is not true of actual echo.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Wed Nov 28, 2007 11:12 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2007-11-28T10:58:22-07:00</updated>
<published>2007-11-28T10:58:22-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3733&amp;p=28852#p28852</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3733&amp;p=28852#p28852"/>
<title type="html"><![CDATA[Music Engine]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3733&amp;p=28852#p28852"><![CDATA[
Does that means that volume 5 is the equivalent to 3+4 ? This would make it a lot louder than 4 then. I trought the volume would be logarithmic instead (but I'm unsure how to copute this).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Wed Nov 28, 2007 10:58 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2007-11-28T10:51:26-07:00</updated>
<published>2007-11-28T10:51:26-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3733&amp;p=28851#p28851</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3733&amp;p=28851#p28851"/>
<title type="html"><![CDATA[Music Engine]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3733&amp;p=28851#p28851"><![CDATA[
Plus, audio volumes don't really add that way. Instead, they add in root-mean-square space: 11 + 11 = sqrt(11^2 + 11^2) = 15.55.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Wed Nov 28, 2007 10:51 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2007-11-28T10:44:23-07:00</updated>
<published>2007-11-28T10:44:23-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3733&amp;p=28849#p28849</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3733&amp;p=28849#p28849"/>
<title type="html"><![CDATA[Music Engine]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3733&amp;p=28849#p28849"><![CDATA[
Definitely.<br />I also one trought about automatic echo (but on a single channel). When a note is played, even if the user defines the maximum volume and all, the actuall volume would never be above 8 or so, and then after a while if the key is still on the volume would suddentely increase to 12, then 14, finally 15 to simulate echo. When the key is off then the volume would become something like 15 -&gt; 4 -&gt; 2 -&gt; 1 -&gt; 0. That is assuming the volume is constant, but if an enveloppe is added (such as fast decaying), you would hear light decays on the main one, etc... This would require playing the channel so many times internally, and have a mixer that would take the volume of each delay of the channel, take the stronger one, and add it's volume to all the other who are playing the same note (each one shifted right the number of times it should do). However, this is insane and probalby wouldn't sound that good. It would waste ENORMOUS ammount of RAM however.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Wed Nov 28, 2007 10:44 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2007-11-27T19:07:33-07:00</updated>
<published>2007-11-27T19:07:33-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3733&amp;p=28829#p28829</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3733&amp;p=28829#p28829"/>
<title type="html"><![CDATA[Music Engine]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3733&amp;p=28829#p28829"><![CDATA[
But managing 8 virtual channels and mapping those onto the 4 built-in channels might take a lot of the 2 KB of RAM that could be better used for gameplay.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Tue Nov 27, 2007 7:07 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Memblers]]></name></author>
<updated>2007-11-27T18:54:00-07:00</updated>
<published>2007-11-27T18:54:00-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3733&amp;p=28828#p28828</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3733&amp;p=28828#p28828"/>
<title type="html"><![CDATA[Music Engine]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3733&amp;p=28828#p28828"><![CDATA[
All this talk reminds me of things I was thinking of when I was writing my own music engine (about 4 years ago maybe?  BTW I never really used it, so it only ever supported the first pulse channel.)<br /><br />It was set up so all the music tracks were relative notes, but the actual pattern of the song is normal notes (which triggers the relative notes).  It lends itself to transposing short phrases (even 2 notes) or larger parts of a song.  More music for less space, but it depends entirely on the song.<br /><br />Other main features I wanted:<br />1. Automatic echo (just echoing a channel in another, but with configurable priority thresholds so you can play on top of the echo).<br />2. Multiple channel instruments (configurable priority for each channel).<br /><br />1. is annoying to do in MML, 2. is annoying to do in trackers!  As we all know here, it's kind of a case where if I want it, I have to make it myself.  But I get by just fine using trackers, so I never really used my engine for anything.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=10">Memblers</a> — Tue Nov 27, 2007 6:54 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2007-11-27T13:22:04-07:00</updated>
<published>2007-11-27T13:22:04-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3733&amp;p=28816#p28816</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3733&amp;p=28816#p28816"/>
<title type="html"><![CDATA[Music Engine]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3733&amp;p=28816#p28816"><![CDATA[
Before this gets too wacky: <a href="http://en.wikipedia.org/wiki/Kolmogorov_complexity" class="postlink">Kolmogorov complexity</a><br /><br />It might be wise to build one to throw away. Just do it, and if you can reproduce my Covers vol. 1 in half the space, good for you.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Tue Nov 27, 2007 1:22 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Celius]]></name></author>
<updated>2007-11-27T11:48:41-07:00</updated>
<published>2007-11-27T11:48:41-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3733&amp;p=28810#p28810</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3733&amp;p=28810#p28810"/>
<title type="html"><![CDATA[Music Engine]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3733&amp;p=28810#p28810"><![CDATA[
Oh wow, are you suggesting having a key signature for your music code, so one bit could represent a note's value? If not, that's what I'm suggesting, because that would be awesome. So you could have this:<br /><br />#$FF<br /><br />Since all 8 bits are set, it would play notes 0 - 7, or Bb to Bb. The problem is you'd need to have a control byte that says what dynamic changes are needed, and you'd also have to switch octaves and stuff. But, you could use bit 7 to check for dynamic changes, and just forget about the high note of the scale, since it's the same as the lower one, just an octave higher.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=138">Celius</a> — Tue Nov 27, 2007 11:48 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2007-11-27T11:03:52-07:00</updated>
<published>2007-11-27T11:03:52-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3733&amp;p=28806#p28806</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3733&amp;p=28806#p28806"/>
<title type="html"><![CDATA[Music Engine]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3733&amp;p=28806#p28806"><![CDATA[
I just had an idea to slightly reduce the note encoding thing. When a real musician is playing a music tune, he will be told in wich scale he should play it, and wich flat/sharps this implies. Then, he plays note in the said scale until he's especialy told to, with additional flat/sharp symbols before notes. The computer thing would to the same thing, it'd say the computer "play in the Bb scale", then automatically 0 becomes Bb, 1 becomes C, 2 becomes D, then Eb, F, G, and A. This will be 7 bits for the note tone, and since the scale matches the melody, there would be fewer octave change commands needed. If the melody should play another note than the ones told above, a special command could be done in order to tell the computer so. With the same way, you could have a few programmable lenght for the channel, and when notes aren't in the normal ~4 more common note lenght of the track, a special command could told it to do another note.<br />This could be more efficiant (6 bits per note) but what could you do with the 2 bits left ? Of course you could do a system where 4 notes holds in 3 bytes (4*6 = 3*8 = 24 bits) but this would be somewhat unpratical to encode and decode. The best thing would be to define silences and note prolongation as well as other command with those 2 bits left, but that's still 8 bit per note, only a different (and more annoying) usage of it. I really cannot think of anything with 4-bit per note, unless you want to always give the programm special commands to play nonstandards notes, wich would in fact almost increase the size of the final file.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Tue Nov 27, 2007 11:03 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2007-11-26T16:46:06-07:00</updated>
<published>2007-11-26T16:46:06-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3733&amp;p=28784#p28784</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3733&amp;p=28784#p28784"/>
<title type="html"><![CDATA[Music Engine]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3733&amp;p=28784#p28784"><![CDATA[
Here's a scheme that I just came up with:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">76543210  Musical phrase bytecode values $00-$BF<br />||||||||<br />|||+++++- 0-29: Offset in semitones from current base note<br />|||       30: Don't play a note<br />|||       31: Release current note<br />+++------ Wait time after note<br />          000: 1 row; 001: 2 rows; 010: 3 rows; 011: 4 rows;<br />          100: 6 rows; 101: 8 rows; 11x: escape for other commands<br /></div><br />"Other commands" ($C0-$FF) might include ending a pattern, changing instrument, setting the base note (e.g. octave changes), setting vibrato depth, turning retrigger per row (mandolin tremolo) on or off, etc.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Mon Nov 26, 2007 4:46 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2007-11-26T16:08:08-07:00</updated>
<published>2007-11-26T16:08:08-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3733&amp;p=28782#p28782</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3733&amp;p=28782#p28782"/>
<title type="html"><![CDATA[Music Engine]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3733&amp;p=28782#p28782"><![CDATA[
Regarding using a small number of bits to encode things, music playback is good for variable-length compression schemes, since you don't need much random access and the encoding doesn't have to be super-efficient (since much of the time is spent actually applying commands). The only random access is for groups of commands, and these can be separate blocks where the decoding state is reinitialized when starting one. So for example Memblers mentioned encoding notes as only 4 bits. Much of the time the next note is near the current one. When it's farther than +/-7 semitones, you can encode it as -8 along with a second byte indicating the absolute note. Similar could be done for note length, encoding the common values more compactly.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Mon Nov 26, 2007 4:08 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Celius]]></name></author>
<updated>2007-11-26T15:09:56-07:00</updated>
<published>2007-11-26T15:09:56-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3733&amp;p=28779#p28779</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3733&amp;p=28779#p28779"/>
<title type="html"><![CDATA[Music Engine]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3733&amp;p=28779#p28779"><![CDATA[
I don't think I'll ever use NT2. It seems to take up a lot of RAM space. I was thinking about compressing note lengths so I could use 4 bits per length instead of a whole byte. In the bytes that define notes, I only have bit 7 open (There are less than 128 notes in the table), but I can still use that to indicate dynamic changes. I want to refrain from defining things more than once as much as I can. I want to be able to make the Bb scale take up VERY little over 15 bytes (The Bb scale consists of 15 note changes). I'll come back once I have everything planned out.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=138">Celius</a> — Mon Nov 26, 2007 3:09 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2007-11-26T12:20:38-07:00</updated>
<published>2007-11-26T12:20:38-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3733&amp;p=28763#p28763</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3733&amp;p=28763#p28763"/>
<title type="html"><![CDATA[Music Engine]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3733&amp;p=28763#p28763"><![CDATA[
The holy water sound effect in Castlevania II is exactly the same as in Castlevania I and Castlevania III. It uses both Square and noise, the square just play a few random very-high notes.<br />It's true that Konami's sound effects often rock, due to their usage of hardware seeps for Square channels. Capcom sound effect are often great too.<br />I once reverse-enginereed the sound code of Dragon Quest I (it was incredibly simple), and Just Breed (this one was really insanely complicated). I think I lost my notes about them, I'm not completely sure. They also used the note/command thing.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Mon Nov 26, 2007 12:20 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Memblers]]></name></author>
<updated>2007-11-25T20:37:18-07:00</updated>
<published>2007-11-25T20:37:18-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3733&amp;p=28746#p28746</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3733&amp;p=28746#p28746"/>
<title type="html"><![CDATA[Music Engine]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3733&amp;p=28746#p28746"><![CDATA[
<div class="quotetitle">tepples wrote:</div><div class="quotecontent"><br />For one thing, you'll need some sort of hook for sound effects. Do the latest Famitracker and NT2 replay code allow for doing this easily?<br /></div><br /><br />Unfortunately no (AFAIK, I haven't worked with the lastest Famitracker engine).<br /><br />What works though is to change all sound register writes in the music engine so they write to a buffer in RAM, then you can easily interrupt any channels for a sound effect.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=10">Memblers</a> — Sun Nov 25, 2007 8:37 pm</p><hr />
]]></content>
</entry>
</feed>