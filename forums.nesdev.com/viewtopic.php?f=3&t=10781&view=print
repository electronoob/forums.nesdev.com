<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Need next steps for NES emulator</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Need next steps for NES emulator</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=3&amp;t=10781">http://forums.nesdev.com/viewtopic.php?f=3&amp;t=10781</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>5</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>codeblox</b> [ Wed Dec 11, 2013 9:57 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Need next steps for NES emulator</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Greetings,<br /><br />I have written a barebones 6502 emulator. The ultimate goal is to write an NES emulator. My 6502 emulator follows the basic fetch execute cycle and all of the opcodes have been implemented. What should my next focus be for working towards creating this emulator?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Wed Dec 11, 2013 10:24 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Need next steps for NES emulator</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Does your emulator's CPU match the known-good log of nestest cycle-for-cycle? (See <a href="http://wiki.nesdev.com/w/index.php/Emulator_tests#CPU" class="postlink">Emulator tests</a> on the wiki.) Make sure each instruction takes the same number of cycles (on NTSC there are three PPU cycles in a CPU cycle, 341 PPU cycles in a scanline, and 262 scanlines in a frame) and produces the same stream of program counter values, and find the first instruction at which they diverge.<br /><br />Once it does, the next thing to emulate is vertical blank timing. At the start of line 241, bit 7 of $2002 (Vblank flag) becomes 1. It becomes 0 at the start of line 261 or when $2002 is read, whichever comes first. If bit 7 of $2002 rises (goes from 0 to 1) while bit 7 of $2000 (NMI) is turned on, call the NMI handler. Once your CPU is correct, emulating bit 7 of $2000, bit 7 of $2002, and NMI should be enough to get games like Donkey Kong and Mario Bros. to start trying to boot.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Wed Dec 11, 2013 10:26 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Need next steps for NES emulator</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Be sure it passes the available <a href="http://wiki.nesdev.com/w/index.php/Emulator_tests#CPU" class="postlink">CPU tests for official instructions</a>.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Zelex</b> [ Wed Dec 11, 2013 11:23 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Need next steps for NES emulator</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Yeah, CPU tests and probably start on a PPU implementation. You don't have to get every detail implemented for many games to start working. Should be fun <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /> Start with mapper 0 games.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>codeblox</b> [ Thu Dec 12, 2013 6:00 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Need next steps for NES emulator</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The emulator hasn't been tested against the official instructions so I'll probably start working on that next. I see that the files to test with come in .nes format. I'm assuming I just read this file into my emulators memory at the beginning and let her run, correct?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dwedit</b> [ Thu Dec 12, 2013 8:35 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Need next steps for NES emulator</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Throwing the entire contents of a NES file at memory address 0000 will never work.<br /><br />You need to get the NES memory map correct, and understand the very basics of the iNES file format.<br />16 byte header, then PRG data, then CHR data.<br />Throwing the PRG data into address 8000 (for 32K PRG) or C000 (for 16K PRG) might work here.<br /><br />Also, you do have the reset vector implemented, right?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>miker00lz</b> [ Fri Dec 13, 2013 10:59 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Need next steps for NES emulator</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Have you tried running any code at all yet in your 6502 emulator?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>codeblox</b> [ Thu Dec 26, 2013 11:39 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Need next steps for NES emulator</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I have not tested it against any code. It sounds like my next steps are to test this against the suite provided in this thread. Thanks guys, I'll see how that works out and come back with results. What I have done however is create a test function of sorts which validates addressing modes and mnemonic &lt;-&gt; opcode resolution. Basically as a test I fed 0 - 255 as data to the emulator. Could you guys kindly tell me if it looks correct?<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent"><br />Opcode 00(brk) has address mode Implied<br />Opcode 01(ora) has address mode Indirect X<br />Opcode 02(trp) is a trap<br />Opcode 03(trp) is a trap<br />Opcode 04(trp) is a trap<br />Opcode 05(ora) has address mode Zero Page<br />Opcode 06(asl) has address mode Zero Page<br />Opcode 07(trp) is a trap<br />Opcode 08(php) has address mode Implied<br />Opcode 09(ora) has address mode Immediate<br />Opcode 0A(asl) has address mode Accumulator<br />Opcode 0B(trp) is a trap<br />Opcode 0C(trp) is a trap<br />Opcode 0D(ora) has address mode Absolute<br />Opcode 0E(asl) has address mode Absolute<br />Opcode 0F(trp) is a trap<br />Opcode 10(bpl) has address mode Relative<br />Opcode 11(ora) has address mode Indirect Y<br />Opcode 12(trp) is a trap<br />Opcode 13(trp) is a trap<br />Opcode 14(trp) is a trap<br />Opcode 15(ora) has address mode Zero Page X<br />Opcode 16(asl) has address mode Zero Page X<br />Opcode 17(trp) is a trap<br />Opcode 18(clc) has address mode Implied<br />Opcode 19(ora) has address mode Absolute Y<br />Opcode 1A(trp) is a trap<br />Opcode 1B(trp) is a trap<br />Opcode 1C(trp) is a trap<br />Opcode 1D(ora) has address mode Absolute X<br />Opcode 1E(asl) has address mode Absolute X<br />Opcode 1F(trp) is a trap<br />Opcode 20(jsr) has address mode Absolute<br />Opcode 21(and) has address mode Indirect X<br />Opcode 22(trp) is a trap<br />Opcode 23(trp) is a trap<br />Opcode 24(bit) has address mode Zero Page<br />Opcode 25(and) has address mode Zero Page<br />Opcode 26(rol) has address mode Zero Page<br />Opcode 27(trp) is a trap<br />Opcode 28(plp) has address mode Implied<br />Opcode 29(and) has address mode Immediate<br />Opcode 2A(rol) has address mode Accumulator<br />Opcode 2B(trp) is a trap<br />Opcode 2C(bit) has address mode Absolute<br />Opcode 2D(and) has address mode Absolute<br />Opcode 2E(rol) has address mode Absolute<br />Opcode 2F(trp) is a trap<br />Opcode 30(bmi) has address mode Relative<br />Opcode 31(and) has address mode Indirect Y<br />Opcode 32(trp) is a trap<br />Opcode 33(trp) is a trap<br />Opcode 34(trp) is a trap<br />Opcode 35(and) has address mode Zero Page X<br />Opcode 36(rol) has address mode Zero Page X<br />Opcode 37(trp) is a trap<br />Opcode 38(sec) has address mode Implied<br />Opcode 39(and) has address mode Absolute Y<br />Opcode 3A(trp) is a trap<br />Opcode 3B(trp) is a trap<br />Opcode 3C(trp) is a trap<br />Opcode 3D(and) has address mode Absolute X<br />Opcode 3E(rol) has address mode Absolute X<br />Opcode 3F(trp) is a trap<br />Opcode 40(rti) has address mode Implied<br />Opcode 41(eor) has address mode Indirect X<br />Opcode 42(trp) is a trap<br />Opcode 43(trp) is a trap<br />Opcode 44(trp) is a trap<br />Opcode 45(eor) has address mode Zero Page<br />Opcode 46(lsr) has address mode Zero Page<br />Opcode 47(trp) is a trap<br />Opcode 48(pha) has address mode Implied<br />Opcode 49(eor) has address mode Immediate<br />Opcode 4A(lsr) has address mode Accumulator<br />Opcode 4B(trp) is a trap<br />Opcode 4C(jmp) has address mode Absolute<br />Opcode 4D(eor) has address mode Absolute<br />Opcode 4E(lsr) has address mode Absolute<br />Opcode 4F(trp) is a trap<br />Opcode 50(bvc) has address mode Relative<br />Opcode 51(eor) has address mode Indirect Y<br />Opcode 52(trp) is a trap<br />Opcode 53(trp) is a trap<br />Opcode 54(trp) is a trap<br />Opcode 55(eor) has address mode Zero Page X<br />Opcode 56(lsr) has address mode Zero Page X<br />Opcode 57(trp) is a trap<br />Opcode 58(cli) has address mode Implied<br />Opcode 59(eor) has address mode Absolute Y<br />Opcode 5A(trp) is a trap<br />Opcode 5B(trp) is a trap<br />Opcode 5C(trp) is a trap<br />Opcode 5D(eor) has address mode Absolute X<br />Opcode 5E(lsr) has address mode Absolute X<br />Opcode 5F(trp) is a trap<br />Opcode 60(rts) has address mode Implied<br />Opcode 61(adc) has address mode Indirect X<br />Opcode 62(trp) is a trap<br />Opcode 63(trp) is a trap<br />Opcode 64(trp) is a trap<br />Opcode 65(adc) has address mode Zero Page<br />Opcode 66(ror) has address mode Zero Page<br />Opcode 67(trp) is a trap<br />Opcode 68(pla) has address mode Implied<br />Opcode 69(adc) has address mode Immediate<br />Opcode 6A(ror) has address mode Accumulator<br />Opcode 6B(trp) is a trap<br />Opcode 6C(jmp) has address mode Absolute<br />Opcode 6D(adc) has address mode Absolute<br />Opcode 6E(ror) has address mode Absolute<br />Opcode 6F(trp) is a trap<br />Opcode 70(bvs) has address mode Relative<br />Opcode 71(adc) has address mode Indirect Y<br />Opcode 72(trp) is a trap<br />Opcode 73(trp) is a trap<br />Opcode 74(trp) is a trap<br />Opcode 75(adc) has address mode Zero Page X<br />Opcode 76(ror) has address mode Zero Page X<br />Opcode 77(trp) is a trap<br />Opcode 78(sei) has address mode Implied<br />Opcode 79(adc) has address mode Absolute Y<br />Opcode 7A(trp) is a trap<br />Opcode 7B(trp) is a trap<br />Opcode 7C(trp) is a trap<br />Opcode 7D(adc) has address mode Absolute X<br />Opcode 7E(ror) has address mode Absolute X<br />Opcode 7F(trp) is a trap<br />Opcode 80(trp) is a trap<br />Opcode 81(sta) has address mode Indirect X<br />Opcode 82(trp) is a trap<br />Opcode 83(trp) is a trap<br />Opcode 84(sty) has address mode Zero Page<br />Opcode 85(sta) has address mode Zero Page<br />Opcode 86(stx) has address mode Zero Page<br />Opcode 87(trp) is a trap<br />Opcode 88(dey) has address mode Implied<br />Opcode 89(trp) is a trap<br />Opcode 8A(txa) has address mode Implied<br />Opcode 8B(trp) is a trap<br />Opcode 8C(sty) has address mode Absolute<br />Opcode 8D(sta) has address mode Absolute<br />Opcode 8E(stx) has address mode Absolute<br />Opcode 8F(trp) is a trap<br />Opcode 90(bcc) has address mode Relative<br />Opcode 91(sta) has address mode Indirect Y<br />Opcode 92(trp) is a trap<br />Opcode 93(trp) is a trap<br />Opcode 94(sty) has address mode Zero Page X<br />Opcode 95(sta) has address mode Zero Page X<br />Opcode 96(stx) has address mode Zero Page X<br />Opcode 97(trp) is a trap<br />Opcode 98(tya) has address mode Implied<br />Opcode 99(sta) has address mode Absolute Y<br />Opcode 9A(txs) has address mode Implied<br />Opcode 9B(trp) is a trap<br />Opcode 9C(trp) is a trap<br />Opcode 9D(sta) has address mode Absolute X<br />Opcode 9E(trp) is a trap<br />Opcode 9F(trp) is a trap<br />Opcode A0(ldy) has address mode Immediate<br />Opcode A1(lda) has address mode Indirect X<br />Opcode A2(ldx) has address mode Immediate<br />Opcode A3(trp) is a trap<br />Opcode A4(ldy) has address mode Zero Page<br />Opcode A5(lda) has address mode Zero Page<br />Opcode A6(ldx) has address mode Zero Page<br />Opcode A7(trp) is a trap<br />Opcode A8(tay) has address mode Implied<br />Opcode A9(lda) has address mode Immediate<br />Opcode AA(tax) has address mode Implied<br />Opcode AB(trp) is a trap<br />Opcode AC(ldy) has address mode Absolute<br />Opcode AD(lda) has address mode Absolute<br />Opcode AE(ldx) has address mode Absolute<br />Opcode AF(trp) is a trap<br />Opcode B0(bcs) has address mode Relative<br />Opcode B1(lda) has address mode Indirect Y<br />Opcode B2(trp) is a trap<br />Opcode B3(trp) is a trap<br />Opcode B4(ldy) has address mode Zero Page X<br />Opcode B5(lda) has address mode Zero Page X<br />Opcode B6(ldx) has address mode Zero Page X<br />Opcode B7(trp) is a trap<br />Opcode B8(clv) has address mode Implied<br />Opcode B9(lda) has address mode Absolute Y<br />Opcode BA(tsx) has address mode Implied<br />Opcode BB(trp) is a trap<br />Opcode BC(ldy) has address mode Absolute X<br />Opcode BD(lda) has address mode Absolute X<br />Opcode BE(ldx) has address mode Absolute X<br />Opcode BF(trp) is a trap<br />Opcode C0(cpy) has address mode Immediate<br />Opcode C1(cmp) has address mode Indirect X<br />Opcode C2(trp) is a trap<br />Opcode C3(trp) is a trap<br />Opcode C4(cpy) has address mode Zero Page<br />Opcode C5(cmp) has address mode Zero Page<br />Opcode C6(dec) has address mode Zero Page<br />Opcode C7(trp) is a trap<br />Opcode C8(iny) has address mode Implied<br />Opcode C9(cmp) has address mode Immediate<br />Opcode CA(dex) has address mode Implied<br />Opcode CB(trp) is a trap<br />Opcode CC(cpy) has address mode Absolute<br />Opcode CD(cmp) has address mode Absolute<br />Opcode CE(dec) has address mode Absolute<br />Opcode CF(trp) is a trap<br />Opcode D0(bne) has address mode Relative<br />Opcode D1(cmp) has address mode Indirect Y<br />Opcode D2(trp) is a trap<br />Opcode D3(trp) is a trap<br />Opcode D4(trp) is a trap<br />Opcode D5(cmp) has address mode Zero Page X<br />Opcode D6(dec) has address mode Zero Page X<br />Opcode D7(trp) is a trap<br />Opcode D8(cld) has address mode Zero Page X<br />Opcode D9(cmp) has address mode Absolute Y<br />Opcode DA(trp) is a trap<br />Opcode DB(trp) is a trap<br />Opcode DC(trp) is a trap<br />Opcode DD(cmp) has address mode Absolute X<br />Opcode DE(dec) has address mode Absolute X<br />Opcode DF(trp) is a trap<br />Opcode E0(cpx) has address mode Immediate<br />Opcode E1(sbc) has address mode Indirect X<br />Opcode E2(trp) is a trap<br />Opcode E3(trp) is a trap<br />Opcode E4(cpx) has address mode Zero Page<br />Opcode E5(sbc) has address mode Zero Page<br />Opcode E6(inc) has address mode Zero Page<br />Opcode E7(trp) is a trap<br />Opcode E8(inx) has address mode Implied<br />Opcode E9(sbc) has address mode Immediate<br />Opcode EA(nop) has address mode Implied<br />Opcode EB(trp) is a trap<br />Opcode EC(cpx) has address mode Absolute<br />Opcode ED(sbc) has address mode Absolute<br />Opcode EE(inc) has address mode Absolute<br />Opcode EF(trp) is a trap<br />Opcode F0(beq) has address mode Relative<br />Opcode F1(sbc) has address mode Indirect Y<br />Opcode F2(trp) is a trap<br />Opcode F3(trp) is a trap<br />Opcode F4(trp) is a trap<br />Opcode F5(sbc) has address mode Zero Page X<br />Opcode F6(inc) has address mode Zero Page X<br />Opcode F7(trp) is a trap<br />Opcode F8(sed) has address mode Implied<br />Opcode F9(sbc) has address mode Absolute Y<br />Opcode FA(trp) is a trap<br />Opcode FB(trp) is a trap<br />Opcode FC(trp) is a trap<br />Opcode FD(sbc) has address mode Absolute X<br />Opcode FE(inc) has address mode Absolute X<br />Opcode FF(trp) is a trap<br /><br /></div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Thu Dec 26, 2013 2:14 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Need next steps for NES emulator</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><img src="https://gs1.wac.edgecastcdn.net/8019B6/data.tumblr.com/tumblr_ljmvkoG2IE1qbe7jeo1_r1_500.gif" alt="Image" /><br /><br />Why are $80 and $89 traps? They're 2-byte no-ops, and if you don't emulate them as 2-byte no-ops, you'll break <em>Puzznic</em> and <em>Beauty and the Beast</em>. A lot of the instructions you've listed as &quot;traps&quot; are <a href="http://wiki.nesdev.com/w/index.php/Programming_with_unofficial_opcodes" class="postlink">actually rawther useful</a>. So much so that if you fail to emulate other <a href="http://wiki.nesdev.com/w/index.php/CPU_unofficial_opcodes" class="postlink">unofficial instructions</a>, you might break <em>STREEMERZ: Super Strength Emergency Squad Zeta</em> and <em>Driar</em>.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>WedNESday</b> [ Thu Dec 26, 2013 4:04 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Need next steps for NES emulator</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />tepples has just made my day. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /><br />I'm pretty sure tepples that his 6502 emulator at this point is pretty basic and he's not bothering with the illegal ops right now. However, not many of us are prepared to read through 256 lines of that green text to help you out. Hook your CPU up to some basic PPU code and run nestest.nes if you really wanna try it.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>codeblox</b> [ Thu Dec 26, 2013 7:23 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Need next steps for NES emulator</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I'll go ahead and implement these unofficial opcodes now. They appear to simply be a combination of other opcodes (the items in gray at the link provided by tepples). Is that correct? As for the name &quot;trap&quot;... I just picked something that I thought would describe &quot;illegal opcode&quot; haha. I just pulled it out of the air. What should the proper name be for opcodes that do not exist (Where I have the traps)?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>koitsu</b> [ Thu Dec 26, 2013 7:36 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Need next steps for NES emulator</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />There is no &quot;proper&quot; (official) naming convention for them, and don't let anyone here tell you or make you think otherwise.  :-)<br /><br />I strongly suggest you avoid implementing unofficial opcodes at this time.  They should be one of the last things you implement, since your goal as admitted in your first post is to make a NES emulator.  You have a lot bigger fish to worry about in the future, trust me -- illegal opcodes are the least of your worries, since only 1 game is known at this time to use them.  They should act as &quot;traps&quot; or &quot;suspend emulation&quot; situations, since they indicate broken emulation on your part.  Handling them now will do nothing but cause massive confusion when trying to troubleshoot your emulator.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Thu Dec 26, 2013 8:27 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Need next steps for NES emulator</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Actually there are about half a dozen games that use unofficial opcodes, listed at the bottom of <a href="http://wiki.nesdev.com/w/index.php/CPU_unofficial_opcodes#Games_using_unofficial_opcodes" class="postlink">this page</a>. But otherwise, koitsu is right that unless you're running a test ROM or one of these games, hitting an unofficial opcode means your CPU or mapper emulation is misbehaving.<br /><br />But there does exist a compromise that does what the user expects. I'd recommend making a switch for pausing on unofficial opcode with these positions:<br /><ul><li>Always </li><li>Once after power cycle </li><li>Only on new mappers </li><li>Only HLT </li></ul>For &quot;Only on new mappers&quot;, you'd keep track of how stable you think your implementation of each mapper is. It'd act like &quot;Once after each power cycle&quot; until you're certain that a mapper is working correctly. For example, once you think you have most CNROM (#3) games working, you could switch CNROM to &quot;Only HLT&quot; and <em>Puzznic</em> would stop bugging the user.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>codeblox</b> [ Fri Dec 27, 2013 7:13 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Need next steps for NES emulator</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />So aside from working on unofficial opcodees, would you guys say the next step is to run my emu against the nestest suite or begin work on the PPU? I'm not sure if the nestest suite depends on the PPU.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Fri Dec 27, 2013 8:49 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Need next steps for NES emulator</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />There's part of nestest that requires only a working CPU that can JSR $C000, and part of nestest that also requires a working PPU and controller. The <a href="http://wiki.nesdev.com/w/index.php/Emulator_tests#CPU" class="postlink">emulator tests page</a> links to a log of the first part running in Nintendulator; if you log A, X, Y, P, S, PC, and elapsed cycles after each instruction, you can compare the value at each instruction to Nintendulator's value and make sure they match. (Hint: 3 CYC units = 1 CPU cycle because CYC counts PPU dots, and CYC is measured mod 341 because that's how long a scanline is.)

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>5</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>