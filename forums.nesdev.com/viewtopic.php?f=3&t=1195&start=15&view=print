<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Nes_ntsc NTSC Video Filter Library</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Nes_ntsc NTSC Video Filter Library</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=3&amp;t=1195">http://forums.nesdev.com/viewtopic.php?f=3&amp;t=1195</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>2</strong> of <strong>4</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Thu Apr 13, 2006 4:22 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I'm getting ready to release a nice update to nes_ntsc. The main addition is several more image parameters that should make it the ultimate filter. I put up a page showing the effects of the new parameters, with some useful combinations:
<br />
<br /><a href="http://www.io.com/~greens/ntsc-parameters/" class="postlink">NES NTSC Filter Parameter Examples</a>
<br />
<br />You can reduce pixel artifacts and crank the sharpness way up so that it looks like a regular pixellated emulator image, or make it anywhere inbetween. You can also have a pixellated image that's somewhat blurred, but without artifacts.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Jagasian</b> [ Fri Apr 14, 2006 6:03 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I'd love to see filter profiles for the NTSC filter.  Something like RF, Composite, S-video, RGB, and Custom.  RF, Composite, and S-video would be presets that try to match a real NES (RF and Composite), Famicom Titler (S-video), and arcade (RGB) as closely as possible.  "Custom" would just let the user hand tweak every individual parameter.  
<br />
<br />The GUI stuff would of course be a concern for Nestopia, but lots of experimentation would be required to get the parameter values for RF, S-video, and RGB correct.
<br />RF might even require more kinds of noise than your filter is capable of, or at least top loader RF would require some additional noise.  S-video and RGB would technically require different palletes too, as the Titler and Nintendo arcade systems used different palletes.  They may also have their own noise patterns that slightly vary from the rest.
<br />
<br />Still, with all of the great work you have done, many of which has been scientific experimentation with a real NES... it is worth taking it all the way to get a complete preservation of all of the dying original hardware, as well as the original game designer's creation, which was designed, most likely, for viewing via RF, since most games were developed for and play tested on the Famicom, which is RF only.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Fri Apr 14, 2006 6:09 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Jagasian wrote:</div><div class="quotecontent">the Famicom, which is RF only</div>
<br /><a href="http://search.ebay.com/search/search.dll?from=R40&amp;satitle=av+famicom" class="postlink">O rly?</a>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Jagasian</b> [ Fri Apr 14, 2006 10:17 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent"><div class="quotetitle">Jagasian wrote:</div><div class="quotecontent">the Famicom, which is RF only</div><br /><a href="http://search.ebay.com/search/search.dll?from=R40&amp;satitle=av+famicom" class="postlink">O rly?</a></div>
<br />
<br />I meant the original, unmodded Famicom.  AFAIK, the bulk of the Famicom era saw an RF-only Famicom.  I might have my dates incorrect though.  Since games were designed and tested on the system of the day, they were most likely designed and tested on an RF system.  Artists would choose pixel patterns and colors that when put through the Famicom's RF distortion, looked the way they intended.
<br />
<br />I'd figure that blargg's filter could have the parameters tweaked to resemble either RF or composite.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Fri Apr 14, 2006 10:36 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Cool, I just found that even when you set the sharpness up and artifacts down (to approximate a regular pixellated image), you still get the important color changes. So you can now have your cake and eat it too (RGB image on right):
<br />
<br /><img src="http://www.io.com/~greens/ntsc-vs-palette/ghosts_and_goblins_crisp.png" alt="Image" />
<br />
<br />See how the dithered gray wall turns yellow, due to the dark brown dots in it. In the shadows below the floors, the gray dots are within black, so they stay gray. The gray columns are (mostly) unaffected.
<br />
<br />Now that you mention S-Video, I realize the new algorithm is similar in that it processes the chroma separately from the luma, with the "artifacts" parameter adjusting how much to mix to some of each into the other. For pure RGB you'd need to use a standard blitter, as the above image shows. I was surprised to see very little difference between RF and composite video on a generic 12" or so TV I've been using for testing. I'll have to try on a larger set sometime.
<br />
<br /><strong>UPDATE</strong>: I connected my NES to a 20-inch Sony KV-20TR22 manufactured in 1992 and saw virtually no difference between composite and RF when I switched between them with the TV/video button. The same held for a dinky 12-inch Orion manufactured in 2001.
<br />
<br />I also just adjusted the NTSC filter so you <em>can</em> get as close to RGB as you want (i.e. reduce the chroma mixing). In the Ghosts &amp; Goblins example above, you can now smoothly adjust between the left and right images. I guess I'll have to remove "composite" from the library description, since it does them all now.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Jagasian</b> [ Mon Apr 17, 2006 1:32 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />So can we get Nestopia to have "NTSC RGB" enabled by default?  Your filter now has the sharpness that video-philes want, as well as the accuracy that NES-philes want.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Mon Apr 17, 2006 2:08 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">So can we get Nestopia to have "NTSC RGB" enabled by default?</div>
<br />
<br />Exactly my thinking; the only reason left for using standard pixellated display is if the machine is too slow to use the NTSC filter. Otherwise, the NTSC filter should be enabled at all times, since at worst an artifact-free crisp image is just a couple of sliders away. I'll pass this along to Marty in case he's not reading this thread. In the screenshot he sent me, he's got buttons that move the sliders to the presets for composite, S-video, and RGB, after which you can adjust them as you please.
<br />
<br />I've just updated my <a href="http://www.io.com/~greens/ntsc-parameters/" class="postlink">NTSC example images pages</a>, in preparation for several NTSC filter library releases. I included some <a href="http://www.io.com/~greens/ntsc-presets/" class="postlink">examples of useful setups</a>, including a few wacky ones for fun.
<br />
<br /><strong>UPDATE</strong>: Here's the new version, on a <a href="http://www.slack.net/~ant/libs/ntsc.html" class="postlink">new page I made</a> for my NTSC video filter libraries:
<br />
<br /><a href="http://www.slack.net/~ant/libs/nes_ntsc-0.2.0.zip" class="postlink">nes_ntsc-0.2.0.zip</a>
<br />
<br />* Significantly improved NTSC signal processing to give clearer image and better sharpness control
<br />* Added parameters for gamma, resolution, color bleed, artifacts, and color fringing
<br />* Added presets for composite video, S-video, RGB, and monochrome
<br />* Added NES_NTSC_OUT_WIDTH() and NES_NTSC_IN_WIDTH() for calculating input/output widths
<br />* Improved default blitter to support emphasis and allow specification of RGB output bit depth
<br />* Improved demo with more controls and interpolation and darkening of scanlines rather than duplicating them
<br />* Improved documentation

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>pragma</b> [ Mon Apr 17, 2006 7:31 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Blaarg, I just have to say that I'm very impressed with the work you've done with NTSC emulation.  I downloaded the latest nestopia and booted up Castlevania both on the computer in fullscreen mode and on my real NES using a old 1702 monitor; side by side.  The similarities were just striking.  You wouldn't know just by looking at screenshots, but the little imperfections really take emulation to a whole new level.  Thank you. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />
<br />
<br />A critique if I may:
<br />
<br />I think the only thing that I really noticed that felt missing, is that on my good 'ol 1702, the actual screen (the black in-between the phosphors) on that tube puts black space in between pixels as well as scanlines.  I was so used to seeing it that I didn't notice until I fired up the emulator and noticed that all the pixels "touched" one another.  It really stood out when the moss in the outdoor levels of Castlevania would "strobe" during scrolling as the dot-crawl interacted with the screen - Nestopia doesn't do it to the same extent.
<br />
<br />But other than that: its pure perfection.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Josh</b> [ Mon Apr 17, 2006 9:01 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The new NTSC filters are very impressive, and it's becoming increasingly harder to tell the difference between good-quality NES emulation and the real thing. Thanks for both the filters and the great test ROMs!
<br />
<br />BTW... I've looked over the code, but I'm still trying to wrap my head around it. Does it rely heavily upon integer math operations that could be parallelized? In other words, would it be possible for someone to get a significant boost in speed by rewriting it in MMX assembly, as was done with the 2xSaI filters, HQX, and other such algorithms?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>randilyn</b> [ Tue Apr 18, 2006 6:27 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />It looks very nice, although I had a bit of trouble compiling it on gcc (nes_ntsc v0.2.0).  It seems that a few of your remaining <strong>const int</strong>s need to be <strong>enum</strong>s instead to make it count as a constant initializer in the math that follows the declarations.  I am using GCC v3.4.5 (Mingw candidate), and it <em>might</em> just be me. ;b
<br />
<br />- randi

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Jagasian</b> [ Tue Apr 18, 2006 8:09 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />blargg, <a href="http://www.io.com/~greens/ntsc-presets/" class="postlink">your presets page is great</a>.  However, the differences between "Normal S-video" and "Normal RGB" are very subtle.  I haven't been able to dig up screen captures of s-video on real Famicom hardware, but <a href="http://www.digitpress.com/forum/viewtopic.php?t=75116" class="postlink">here is a picture</a> of somebody's RGB PPU modded NES.  I am not sure how much you should judge things based on this kind of a PPU mod though, because it is notorious for having color issues, hue issues, and other graphical inaccuracies.
<br />
<br />However, the sharpness should be accurate for what a real RGB NES would look like.  Hence I think that your "Sharper RGB" is a more accurate RGB, than your "Normal RGB".  That is just my subjective take.  Objective measurements of real hardware will have to be done at some point, I guess.
<br />
<br />My favorite is still "Normal Composite", and I still think that it is only a matter of time before somebody makes a "Toploader RF", wavey noisey white lines and all.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Tue Apr 18, 2006 1:47 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">pragma wrote:</div><div class="quotecontent">I think the only thing that I really noticed that felt missing, is that on my good 'ol 1702, the actual screen (the black in-between the phosphors) on that tube puts black space in between pixels as well as scanlines. I was so used to seeing it that I didn't notice until I fired up the emulator and noticed that all the pixels "touched" one another. It really stood out when the moss in the outdoor levels of Castlevania would "strobe" during scrolling as the dot-crawl interacted with the screen - Nestopia doesn't do it to the same extent.</div><br /><br />Thanks for this critique; I've actually worked a bit on this, so I'll work a bit more and post some screenshots. The main thing is that it works best on LCD monitors where you have precise control over RGB "slivers". If it works out I'm sure Marty would add it to the next release of Nestopia.<br /><br /><div class="quotetitle">Josh wrote:</div><div class="quotecontent">I've looked over the code, but I'm still trying to wrap my head around it. Does it rely heavily upon integer math operations that could be parallelized? In other words, would it be possible for someone to get a significant boost in speed by rewriting it in MMX assembly [...]?</div><br /><br />I guess I need to document the algorithms more. In a nutshell, it does all the heavy signal processing for each possible palette color at the three possible column alignments and captures the most important 14 output pixels as <em>signed</em> RGB using 10 bits per component. This results in a table of <em>kernels</em>. During blitting, the appropriate kernels for each input pixel are added together (they overlap quite a bit) and clamped to get output pixels. An MMX-based blitter should be fairly straightforward to implement. I'd love to work with someone on an MMX-based blitter; contact me if you can help.<br /><br /><div class="quotetitle">Siloh wrote:</div><div class="quotecontent">I had a bit of trouble compiling it on gcc (nes_ntsc v0.2.0). It seems that a few of your remaining const ints need to be enums instead to make it count as a constant initializer in the math that follows the declarations.</div><br /><br />Thanks for this report; whatever the cause, I just switched some things to enum/#define where they might cause problems like this, since I want to work with as many compilers as possible.<br /><br /><div class="quotetitle">Jagasian wrote:</div><div class="quotecontent">However, the differences between "Normal S-video" and "Normal RGB" are very subtle.</div><br /><br />The only difference is color bleed, which affects some games more than others. Color bleed makes quite a difference in some games, and doesn't degrade the image much at all, so it's generally a win. Of course technically all the NES outputs is composite video, since that's all the PPU generates; any other format is just a conversion, so it can't add any new information or remove artifacts. I named the presets "S-Video" and "RGB" since they match what you'd get <em>if</em> the NES could output them.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">My favorite is still "Normal Composite", and I still think that it is only a matter of time before somebody makes a "Toploader RF", wavey noisey white lines and all.</div>
<br />
<br />It shouldn't be hard to add various kinds of noise/interference in the blitter. A summary of the general aspects of RF would help the process along, as in, wavy lines, muddy color etc. I don't currently have the motivation to check these myself.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Tue Apr 18, 2006 3:09 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">blargg wrote:</div><div class="quotecontent">Of course technically all the NES outputs is composite video, since that's all the PPU generates; any other format is just a conversion, so it can't add any new information or remove artifacts. I named the presets "S-Video" and "RGB" since they match what you'd get <em>if</em> the NES could output them.</div><br />Famicom Titler?<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">It shouldn't be hard to add various kinds of noise/interference in the blitter. A summary of the general aspects of RF would help the process along, as in, wavy lines, muddy color etc. I don't currently have the motivation to check these myself.</div>
<br />It wouldn't be a good idea to add support for effects like those of <a href="http://www.pineight.com/gba/#tod" class="postlink">Tetanus On Drugs</a>, would it?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Tue Apr 18, 2006 5:18 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">Famicom Titler?</div><br /><br />I'm guessing this is some kind of video titler built around a Famicom. Are you suggesting I name one of them "Famicom Titler"? Seems kind of obscure.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">It wouldn't be a good idea to add support for effects like those of <a href="http://www.pineight.com/gba/#tod" class="postlink">Tetanus On Drugs</a>, would it?</div>
<br />
<br />Some of the effects like per-scanline horizontal offset (to approximate a TV losing horizontal sync) can be done in the blitter, which anyone can modify fairly easily. Simulating bad vertical hold would also be easy. I <em>still</em> haven't even looked at <a href="http://www.jwz.org/xscreensaver/" class="postlink">XScreenSaver's xteevee</a>, but I doubt I'll ever support things like shadow mask warping and horizontal shrinking due to high brightness levels that cause power supply droop. Too much novelty items.
<br />
<br />Unrelated, I forgot to mention that if your emulator can only output RGB color pixels (rather than raw NES palette indicies), you can still get NTSC filtering by using <a href="http://www.slack.net/~ant/libs/ntsc.html#snes_ntsc" class="postlink">snes_ntsc</a>. The SNES version has the same artifacts and accepts normal 16-bit RGB pixels.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>laughy</b> [ Tue Apr 18, 2006 6:58 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">blargg wrote:</div><div class="quotecontent">I guess I need to document the algorithms more. In a nutshell, it does all the heavy signal processing for each possible palette color at the three possible column alignments and captures the most important 14 output pixels as <em>signed</em> RGB using 10 bits per component. This results in a table of <em>kernels</em>. During blitting, the appropriate kernels for each input pixel are added together (they overlap quite a bit) and clamped to get output pixels. An MMX-based blitter should be fairly straightforward to implement. I'd love to work with someone on an MMX-based blitter; contact me if you can help.<br /></div>
<br />
<br />Judging by your previous work, I don't think you'd need much help. =] I used your (slightly modified) mmx implementation for nes pixel processing remember!?
<br />
<br />This looks good blargg, as are a lot of your ideas on nes emulation. I'll definately use this if I ever take my translator and build an emulator on it. I know NES doesn't need a binary translator...but it was for a senior project <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /> (and it was fun).

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>2</strong> of <strong>4</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>