<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=10&amp;t=8020" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2011-08-06T16:06:05-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=10&amp;t=8020</id>
<entry>
<author><name><![CDATA[Memblers]]></name></author>
<updated>2011-08-06T16:06:05-07:00</updated>
<published>2011-08-06T16:06:05-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8020&amp;p=82540#p82540</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8020&amp;p=82540#p82540"/>
<title type="html"><![CDATA[Disabling MMC3 IRQs]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8020&amp;p=82540#p82540"><![CDATA[
If you're using CA65 you can use this, or maybe a macro like this can be adapted to another assembler:<br /><a href="http://www.cc65.org/doc/ca65-13.html#ss13.2" class="postlink">http://www.cc65.org/doc/ca65-13.html#ss13.2</a><br />Then it will automatically jump or branch depending on how far it is.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=10">Memblers</a> — Sat Aug 06, 2011 4:06 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2011-08-06T07:48:32-07:00</updated>
<published>2011-08-06T07:48:32-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8020&amp;p=82521#p82521</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8020&amp;p=82521#p82521"/>
<title type="html"><![CDATA[Disabling MMC3 IRQs]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8020&amp;p=82521#p82521"><![CDATA[
Branch over a JMP instruction. Replace this:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">  bcc faraway</div><br />with this (assuming ca65 syntax):<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">  bcs :+<br />    jmp faraway<br />  :</div><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Sat Aug 06, 2011 7:48 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[scrimpeh]]></name></author>
<updated>2011-08-06T07:12:05-07:00</updated>
<published>2011-08-06T07:12:05-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8020&amp;p=82520#p82520</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8020&amp;p=82520#p82520"/>
<title type="html"><![CDATA[Disabling MMC3 IRQs]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8020&amp;p=82520#p82520"><![CDATA[
Welp, might as well use my thread for all my beginner problems.<br /><br />Namely, I have a question:<br />As my code gets larger and more complex, I find myself dealing with a "branch address out of range" error. <br />Now, this can be solved pretty simple through a series of linked JMP instructions functioning as a bridge, but I can't really imagine that is good programming practice. Is there a way around that? I'd love to know.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4960">scrimpeh</a> — Sat Aug 06, 2011 7:12 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2011-08-02T11:59:26-07:00</updated>
<published>2011-08-02T11:59:26-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8020&amp;p=82380#p82380</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8020&amp;p=82380#p82380"/>
<title type="html"><![CDATA[Disabling MMC3 IRQs]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8020&amp;p=82380#p82380"><![CDATA[
If the I flag is set, it will disable all sources of IRQs exept BRK instructions. So if you don't plan on executing any BRK instructions, you can be sure that if an IRQ happens a crash happened, so it really doesn't matter where the IRQ points.<br /><br />If you actually use IRQs, it's best to leave the I flag clear all the time and to disable all sources of IRQs properly when you don't want them to trigger. Only use SEI when you want to prevent IRQs for a very urgent reason, when it would be disasterful if a IRQ happened, such as during MMC1 mapper writes, etc...<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Tue Aug 02, 2011 11:59 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[thefox]]></name></author>
<updated>2011-08-02T11:24:55-07:00</updated>
<published>2011-08-02T11:24:55-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8020&amp;p=82379#p82379</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8020&amp;p=82379#p82379"/>
<title type="html"><![CDATA[Disabling MMC3 IRQs]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8020&amp;p=82379#p82379"><![CDATA[
<div class="quotetitle">Dwedit wrote:</div><div class="quotecontent"><br />RTI pops the interrupt enable flag, so that won't do you any good.<br /></div><br />If this was to me, I said to modify the processor status on the stack rather than using SEI.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=80">thefox</a> — Tue Aug 02, 2011 11:24 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Dwedit]]></name></author>
<updated>2011-08-02T10:32:27-07:00</updated>
<published>2011-08-02T10:32:27-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8020&amp;p=82378#p82378</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8020&amp;p=82378#p82378"/>
<title type="html"><![CDATA[Disabling MMC3 IRQs]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8020&amp;p=82378#p82378"><![CDATA[
RTI pops the interrupt enable flag, so that won't do you any good.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=53">Dwedit</a> — Tue Aug 02, 2011 10:32 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[thefox]]></name></author>
<updated>2011-08-02T10:31:28-07:00</updated>
<published>2011-08-02T10:31:28-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8020&amp;p=82377#p82377</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8020&amp;p=82377#p82377"/>
<title type="html"><![CDATA[Disabling MMC3 IRQs]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8020&amp;p=82377#p82377"><![CDATA[
<div class="quotetitle">tokumaru wrote:</div><div class="quotecontent"><br />It also doesn't hurt to make your IRQ vector point to the same RTI instruction used by the NMI handler. That should prevent crashes from happening, but ideally you should disable IRQs altogether (use SEI and whatever the mapper requires).<br /></div><br />It's worth noting that unless the IRQ is automatically acknowledged in some way, which may or may not be the case (most often isn't), the program will get stuck in an infinite loop, as a new IRQ will be triggered right after RTI.<br /><br />I really think it's the best to have some kind of error handler in the IRQ handler in debug builds if they shouldn't happen. In release builds it may be best to do some damage control instead of showing an error, for example modify the processor status on the stack to disable interrupts, then RTI.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=80">thefox</a> — Tue Aug 02, 2011 10:31 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2011-08-02T13:19:27-07:00</updated>
<published>2011-08-02T10:18:58-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8020&amp;p=82375#p82375</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8020&amp;p=82375#p82375"/>
<title type="html"><![CDATA[Disabling MMC3 IRQs]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8020&amp;p=82375#p82375"><![CDATA[
It also doesn't hurt to make your IRQ vector point to the same RTI instruction used by the NMI handler. That should prevent crashes from happening, but ideally you should disable IRQs altogether (use SEI and whatever the mapper requires).<br /><br />EDIT: Like it's been pointed, if you don't acknowledge the IRQ you might actually get stuck in the IRQ handler, so simply pointing to an RTI will not prevent crashes. So yeah, what I wrote above is wrong.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Tue Aug 02, 2011 10:18 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Dwedit]]></name></author>
<updated>2011-08-02T09:47:51-07:00</updated>
<published>2011-08-02T09:47:51-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8020&amp;p=82373#p82373</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8020&amp;p=82373#p82373"/>
<title type="html"><![CDATA[Disabling MMC3 IRQs]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8020&amp;p=82373#p82373"><![CDATA[
Empty IRQ handler talk?<br />Make your IRQ handler do nothing except disable any known sources of IRQs.  So your IRQ handler simply acknowledges and disables APU Frame IRQs, or mapper IRQs if they exist, then returns.<br /><br />I'm only mentioning this because Stars SE assumed that there would never be any interrupts, and disabled them.  But the Music Code included enabled Frame IRQ interrupts due to a programming mistake, so the program crashes.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=53">Dwedit</a> — Tue Aug 02, 2011 9:47 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[thefox]]></name></author>
<updated>2011-08-02T05:56:24-07:00</updated>
<published>2011-08-02T05:56:24-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8020&amp;p=82363#p82363</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8020&amp;p=82363#p82363"/>
<title type="html"><![CDATA[Re: Disabling MMC3 IRQs]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8020&amp;p=82363#p82363"><![CDATA[
<div class="quotetitle">Denine wrote:</div><div class="quotecontent"><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">If I include an IRQ handler, it executes that code, which I obviously don't want.<br /></div><br />Then don't include IRQ.<br />Simply fill IRQ vector addres as 00.</div><br />Not a good solution by itself. The correct solution is to disable IRQs with SEI, and keep them disabled. It's also good practice to disable it using mapper registers.<br /><br />If you do have IRQs disabled, technically the IRQ vector can be 0, but I'd suggest placing some "fatal error handler" in there, maybe something that displays an error message. So if an IRQ happens to trigger anyways due to programming error, at least you'll know instead of CPU executing random crap.<br /><br />EDIT: ninja'd =)<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=80">thefox</a> — Tue Aug 02, 2011 5:56 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2011-08-02T05:55:58-07:00</updated>
<published>2011-08-02T05:55:58-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8020&amp;p=82362#p82362</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8020&amp;p=82362#p82362"/>
<title type="html"><![CDATA[Re: Disabling MMC3 IRQs]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8020&amp;p=82362#p82362"><![CDATA[
<div class="quotetitle">Denine wrote:</div><div class="quotecontent"><br />Then don't include IRQ.<br />Simply fill IRQ vector addres as 00.<br /></div><br />This is actually a very bad idea. $0000 is a perfectly valid IRQ address, which will cause the CPU to jump to $0000 (which is RAM) when IRQs fire. This will likely crash the program, because you probably have variables there, not code.<br /><br />The quickest fix is actually to execute a SEI instruction at the start of the program. As long as that flag is set no IRQs will happen, even if the cart tries to fire one. You can even put any value you want for the IRQ vector, as it will never be used.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Tue Aug 02, 2011 5:55 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[scrimpeh]]></name></author>
<updated>2011-08-02T04:36:06-07:00</updated>
<published>2011-08-02T04:36:06-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8020&amp;p=82361#p82361</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8020&amp;p=82361#p82361"/>
<title type="html"><![CDATA[Disabling MMC3 IRQs]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8020&amp;p=82361#p82361"><![CDATA[
Actually I figured the problem out to be a different one, related to more or less having a coding hole in the game. The $5000 was a typo, but as it turns out, it doesn't have any relevance. So, thank you for your time anyway<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4960">scrimpeh</a> — Tue Aug 02, 2011 4:36 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Denine]]></name></author>
<updated>2011-08-02T03:51:43-07:00</updated>
<published>2011-08-02T03:51:43-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8020&amp;p=82358#p82358</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8020&amp;p=82358#p82358"/>
<title type="html"><![CDATA[Re: Disabling MMC3 IRQs]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8020&amp;p=82358#p82358"><![CDATA[
<div class="quotetitle">scrimpeh wrote:</div><div class="quotecontent"><br />Anyway, since I wasn't planning to utilize IRQs in my little project in any way.<br /></div><br />If it's small project, then why don't try NROM instead of MMC3?<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />I tried writing to $5000 somewhere in the RESET code but that doesn't seem to work.<br /></div><br />I can't find about $5000 register for MMC3 either in Nesdevwiki and <a href="http://www.romhacking.net/docs/362/" class="postlink">Dish's mapper list</a><br />So I assume writing to $5000 do anything(?).<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />If I include an IRQ handler, it executes that code, which I obviously don't want.<br /></div><br />Then don't include IRQ.<br />Simply fill IRQ vector addres as 00.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4239">Denine</a> — Tue Aug 02, 2011 3:51 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[scrimpeh]]></name></author>
<updated>2011-08-02T03:18:29-07:00</updated>
<published>2011-08-02T03:18:29-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8020&amp;p=82357#p82357</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8020&amp;p=82357#p82357"/>
<title type="html"><![CDATA[Disabling MMC3 IRQs]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8020&amp;p=82357#p82357"><![CDATA[
Or rather: I am an absolute cretin who has no clue on how to work this bloody thing. <br />Also I apologize should a topic like that already exist, if so, I didn't find it. Anyway, since I wasn't planning to utilize IRQs in my little project in any way.<br />I tried writing to $5000 somewhere in the RESET code but that doesn't seem to work. If I include an IRQ handler, it executes that code, which I obviously don't want.<br />All code is contained in fixed banks, so I really don't know what to do now. Am I missing something?<br />Anyway, I'd greatly appreciate any help.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4960">scrimpeh</a> — Tue Aug 02, 2011 3:18 am</p><hr />
]]></content>
</entry>
</feed>