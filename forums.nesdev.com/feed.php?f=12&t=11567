<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=12&amp;t=11567" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2014-09-11T20:57:20-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=12&amp;t=11567</id>
<entry>
<author><name><![CDATA[93143]]></name></author>
<updated>2014-09-04T01:39:52-07:00</updated>
<published>2014-09-04T01:39:52-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11567&amp;p=133492#p133492</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11567&amp;p=133492#p133492"/>
<title type="html"><![CDATA[Re: What kind of 3D calculations were used in SuperFX games?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11567&amp;p=133492#p133492"><![CDATA[
<div class="quotetitle">ARM9 wrote:</div><div class="quotecontent"><br /><div class="quotetitle">93143 wrote:</div><div class="quotecontent">2) Apparently ROM access in high speed mode (21 MHz) is 5 cycles instead of 3. Is the same true of RAM access?  For both reading and writing? And does this impact the answer(s) for (1)?  Did this change at all between chip/board revisions?<br /></div><br />Since the RAM access is documented to be similar to ROM in most cases (other than where executing in RAM would impact RAM access) I'd think fullsnes is correct on this point.</div><br />I'd think so too, but it doesn't seem to be too definite on the subject, what with all the question marks and the caveat about poor documentation...<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Storing to ram (sm,st,sbk) uses a buffer so the cpu can continue executing opcodes without having to wait (except when running code in ram). If you execute other code while ram is being written you can perform 1-2 cycle writes (when running in cache).<br /></div><br />Yeah, but that doesn't change the fundamental fact that the throughput to RAM is one byte every X cycles, which would bottleneck a sufficiently lean continuous write loop.<br /><br />According to my calculations, the application I have in mind (a port of a bullet hell shooter) is pretty much right on the edge of the chip's capabilities.  The difference between 24 and 40 cycles for a 4bpp cache flush with unset bit-pend flags could be the difference between being able to exactly duplicate the original bullet patterns and having to simplify them.<br /><br />I do <em>not</em> want to have to simplify the patterns, because that probably means rebalancing the game, which I don't trust myself to do.<br /><br />I suppose I could leave the chip in low-speed mode and overclock it, but that's cheating (good luck getting Nintendo to agree to let you do that for a commercial release), and might result in errors with the memory used in the original games...<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br /><div class="quotetitle">93143 wrote:</div><div class="quotecontent">3) Is the instruction cache on the latest version(s) of the GSU 256 bytes or 512 bytes? I'd like to be sure.<br /></div><br />512 bytes, all revisions, it's in the manual, fullsnes and bsnes. And you can test it yourself with $3100-$32FF. Where'd you read that it's 256 bytes?</div><br />Well, byuu has used the number <a href="http://board.zsnes.com/phpBB3/viewtopic.php?p=196559#p196559" class="postlink">a</a> <a href="http://forums.nesdev.com/viewtopic.php?f=12&amp;t=9446&amp;start=15#p102025" class="postlink">few</a> <a href="http://forums.nesdev.com/viewtopic.php?f=12&amp;t=5964&amp;p=103496#p103496" class="postlink">times</a>.  I figured there had to be a reason...<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />If you want exact timings, consider profiling on hardware.<br /></div><br />I guess that would be ideal, but I don't really have the resources (or skills) to do that right now.  Ultimately I may well end up running on a real GSU, but I'd rather not have to choose between doing that up front (stalling the whole project until I can get the time and resources together) and potentially getting a nasty surprise after writing a ton of code...<br /><br />I suppose I could just assume higan is close enough and test it there, but byuu has complained about Super FX timing in the past and I don't know if the current GSU code is as accurate as the core system emulation...<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6595">93143</a> — Thu Sep 04, 2014 1:39 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[ARM9]]></name></author>
<updated>2014-09-03T03:42:36-07:00</updated>
<published>2014-09-03T03:42:36-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11567&amp;p=133450#p133450</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11567&amp;p=133450#p133450"/>
<title type="html"><![CDATA[Re: What kind of 3D calculations were used in SuperFX games?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11567&amp;p=133450#p133450"><![CDATA[
<div class="quotetitle">93143 wrote:</div><div class="quotecontent"><br />2) Apparently ROM access in high speed mode (21 MHz) is 5 cycles instead of 3. Is the same true of RAM access?  For both reading and writing? And does this impact the answer(s) for (1)?  Did this change at all between chip/board revisions?<br /></div><br />Since the RAM access is documented to be similar to ROM in most cases (other than where executing in RAM would impact RAM access) I'd think fullsnes is correct on this point.<br />Storing to ram (sm,st,sbk) uses a buffer so the cpu can continue executing opcodes without having to wait (except when running code in ram). If you execute other code while ram is being written you can perform 1-2 cycle writes (when running in cache). This is all documented in the pdf that I'll assume you have, you should read through the gsu chapter.<br />It's a bit inconsistent and just plain wrong at times, but it's the best we have at this point until somebody finds argonaut documents.<br />&gt;According to cache description (page 132), Cache-Code is 6 times faster than ROM/RAM. However, according to opcode descriptions (page 160 and up), cache is only 3 times faster than ROM/RAM. Whereas, maybe 6 times refers to 21MHz mode, and 3 times to 10MHz mode?<br /><div class="quotetitle">93143 wrote:</div><div class="quotecontent"><br />3) Is the instruction cache on the latest version(s) of the GSU 256 bytes or 512 bytes? I'd like to be sure.<br /></div><br />512 bytes, all revisions, it's in the manual, fullsnes and bsnes. And you can test it yourself with $3100-$32FF. Where'd you read that it's 256 bytes?<br /><br />As for question 1, I'm curious about this as well, it's not documented in the manual other than plot having a worst case of 48 cycles. Generally you want to put as much general processing as possible between plot and load/store instructions. Considering the worst case it might be wise to try and put more code after a plot until you access ram.<br />If you want exact timings, consider profiling on hardware.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6115">ARM9</a> — Wed Sep 03, 2014 3:42 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[93143]]></name></author>
<updated>2014-09-01T13:44:12-07:00</updated>
<published>2014-09-01T13:44:12-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11567&amp;p=133396#p133396</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11567&amp;p=133396#p133396"/>
<title type="html"><![CDATA[Re: What kind of 3D calculations were used in SuperFX games?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11567&amp;p=133396#p133396"><![CDATA[
If it's not too late, I'd just like to reiterate that if anyone on here knows the answers to my questions, I do not want them put to an original Star Fox programmer who is reportedly very busy and might, given the time elapsed, have to look up detailed chip information like anyone else.  For instance, in light of nocash's old post and byuu's newer one, I consider my question #4 answered.<br /><br />Also, it turns out nocash has enough data in his fullsnes document that I don't need to reference the manual for my questions.<br /><br />Revised list:<br /><br />1) What are the absolute hardware bottlenecks on blitting (using PLOT with color #0 not written, or only PLOTting part of a pixel cache, so it has to read the old data from RAM before writing the new data back)?<br />1b) How many cycles does it take to empty the secondary pixel cache under those circumstances?<br />1c) How about transferring the primary cache to the secondary, once the secondary is free?<br /><br />2) Apparently ROM access in high speed mode (21 MHz) is 5 cycles instead of 3. Is the same true of RAM access?  For both reading and writing? And does this impact the answer(s) for (1)?  Did this change at all between chip/board revisions?<br /><br />3) Is the instruction cache on the latest version(s) of the GSU 256 bytes or 512 bytes? I'd like to be sure.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6595">93143</a> — Mon Sep 01, 2014 1:44 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[93143]]></name></author>
<updated>2014-08-28T23:43:05-07:00</updated>
<published>2014-08-28T23:43:05-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11567&amp;p=133231#p133231</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11567&amp;p=133231#p133231"/>
<title type="html"><![CDATA[Re: What kind of 3D calculations were used in SuperFX games?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11567&amp;p=133231#p133231"><![CDATA[
Okay, found a reference that isn't the dev manual (not as explicit about the circuit layout, unfortunately):<br /><br /><!-- l --><a class="postlink-local" href="http://forums.nesdev.com/viewtopic.php?f=12&amp;t=5964&amp;hilit=Additional&amp;start=45#p103957">viewtopic.php?f=12&amp;t=5964&amp;hilit=Additional&amp;start=45#p103957</a><!-- l --><br /><br /><div class="quotetitle">nocash wrote:</div><div class="quotecontent"><br /><strong>GSU Memory Map (at SNES Side)</strong><br />This is more or less as already known. The 8K at xx:6000h-xx:7FFFh is always mirroring to 700000h-701FFFh (no matter if the &quot;xx&quot; bank is 00h..3Fh or 80h..BFh).<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">  00-3F:3000-34FF  GSU I/O Ports<br />  00-3F:6000-7FFF  Mirror of 70:0000-1FFF (ie. FIRST 8K of Game Pak RAM)<br />  00-3F:8000-FFFF  Game Pak ROM in LoRom mapping (2Mbyte max)<br />  40-5F:0000-FFFF  Game Pak ROM in HiRom mapping (mirror of above 2Mbyte)<br />  70-71:0000-FFFF  Game Pak RAM       (128Kbyte max, usually 32K or 64K)<br />  78-79:0000-FFFF  Additional &quot;Backup&quot; RAM  (128Kbyte max, usually none)<br />  80-BF:3000-32FF  Mirror of GSU I/O Ports<br />  80-BF:6000-7FFF  Mirror of 70:0000-1FFF (ie. FIRST 8K of Game Pak RAM)<br />  80-BF:8000-FFFF  Additional &quot;CPU&quot; ROM LoROM (2Mbyte max, usually none)<br />  C0-FF:0000-FFFF  Additional &quot;CPU&quot; ROM HiROM (4Mbyte max, usually none)<br />  Other Addresses  Open Bus<br /></div><br />The above &quot;Additional&quot; areas aren't installed on existing boards (=are seen as open bus).<br /></div><br /><br /><div class="quotetitle">tepples wrote:</div><div class="quotecontent"><br /><div class="quotetitle">byuu wrote:</div><div class="quotecontent">I don't care what the manual says, the layout is:<br /><br />[SNES cartridge connector] &lt;-&gt; [GSU] &lt;-&gt; [ROM]<br />[...]<br />Now ... if you wire up your own cart, you can easily have:<br /><br />[SNES cartridge connector] &lt;-&gt; [GSU] &lt;-&gt; [ROM1]<br />[SNES cartridge connector] &lt;-&gt; [ROM2]<br /></div><br />I have avoided seeing the manual. But based on what's been said so far in this topic, it appears the manual mentions the latter configuration, which never ended up used in a commercial game due to cost.</div><br />As far as I can tell, that's exactly right.  The SNES is supposed to be wired straight into the &quot;additional&quot; ROM and RAM, parallel to the GSU and the memory behind it.  But no games actually did this...<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6595">93143</a> — Thu Aug 28, 2014 11:43 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[koitsu]]></name></author>
<updated>2014-08-28T22:42:09-07:00</updated>
<published>2014-08-28T22:42:09-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11567&amp;p=133230#p133230</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11567&amp;p=133230#p133230"/>
<title type="html"><![CDATA[Re: What kind of 3D calculations were used in SuperFX games?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11567&amp;p=133230#p133230"><![CDATA[
<div class="quotetitle">93143 wrote:</div><div class="quotecontent"><br /><div class="quotetitle">koitsu wrote:</div><div class="quotecontent">Re: 8bpp available in mode 3, mode 4, and mode 7: this is correct.<br /></div><br />For the SNES, or for the Super FX?</div><br />SNES.  I know absolutely *jack squat* about the Super FX or any extension chips.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3">koitsu</a> — Thu Aug 28, 2014 10:42 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[93143]]></name></author>
<updated>2014-08-28T22:26:33-07:00</updated>
<published>2014-08-28T22:26:33-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11567&amp;p=133229#p133229</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11567&amp;p=133229#p133229"/>
<title type="html"><![CDATA[Re: What kind of 3D calculations were used in SuperFX games?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11567&amp;p=133229#p133229"><![CDATA[
<div class="quotetitle">koitsu wrote:</div><div class="quotecontent"><br />Re: 8bpp available in mode 3, mode 4, and mode 7: this is correct.<br /></div><br />For the SNES, or for the Super FX?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6595">93143</a> — Thu Aug 28, 2014 10:26 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2014-08-28T19:14:02-07:00</updated>
<published>2014-08-28T19:14:02-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11567&amp;p=133223#p133223</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11567&amp;p=133223#p133223"/>
<title type="html"><![CDATA[Re: What kind of 3D calculations were used in SuperFX games?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11567&amp;p=133223#p133223"><![CDATA[
<div class="quotetitle">byuu wrote:</div><div class="quotecontent"><br />I don't care what the manual says, the layout is:<br /><br />[SNES cartridge connector] &lt;-&gt; [GSU] &lt;-&gt; [ROM]<br />[...]<br />Now ... if you wire up your own cart, you can easily have:<br /><br />[SNES cartridge connector] &lt;-&gt; [GSU] &lt;-&gt; [ROM1]<br />[SNES cartridge connector] &lt;-&gt; [ROM2]<br /></div><br />I have avoided seeing the manual. But based on what's been said so far in this topic, it appears the manual mentions the latter configuration, which never ended up used in a commercial game due to cost.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Thu Aug 28, 2014 7:14 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[byuu]]></name></author>
<updated>2014-09-11T20:57:20-07:00</updated>
<published>2014-08-28T16:46:22-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11567&amp;p=133217#p133217</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11567&amp;p=133217#p133217"/>
<title type="html"><![CDATA[Re: What kind of 3D calculations were used in SuperFX games?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11567&amp;p=133217#p133217"><![CDATA[
I don't care what the manual says, the layout is:<br /><br />[SNES cartridge connector] &lt;-&gt; [GSU] &lt;-&gt; [ROM]<br /><br />Only one of them can actually read back valid ROM contents at a time, because you can't have two chips reading the same chip at different locations at the exact same time. It's not physically possible.<br /><br />The SA-1 is the only coprocessor that <em>appears</em> to do it, but in fact it uses another logic block that controls memory accesses. It will actually stall the SA-1 CPU when the host SNES CPU is accessing the same chip at the same time. Which as you can imagine, results in the code taking longer to execute. The GSU does not have this logic, and neither does the Cx4.<br /><br />Now ... if you wire up your own cart, you can easily have:<br /><br />[SNES cartridge connector] &lt;-&gt; [GSU] &lt;-&gt; [ROM1]<br />[SNES cartridge connector] &lt;-&gt; [ROM2]<br /><br />Where obviously the GSU won't be able to access ROM2, but the SNES CPU can continue to use ROM2 while the GSU is using ROM1.<br /><br />Now, what is the max ROM the GSU can address? I'd probably go with what the docs say, depending on each revision. But that's strictly a matter of how many ROM address pins there are on the GSU chip itself.<br /><br />Cheating this with the sd2snes won't do you much good, since unfortunately that chip's not emulated there (yet? may prove too demanding for the FPGA used.)<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=375">byuu</a> — Thu Aug 28, 2014 4:46 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[koitsu]]></name></author>
<updated>2014-08-27T14:05:27-07:00</updated>
<published>2014-08-27T14:05:27-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11567&amp;p=133175#p133175</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11567&amp;p=133175#p133175"/>
<title type="html"><![CDATA[Re: What kind of 3D calculations were used in SuperFX games?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11567&amp;p=133175#p133175"><![CDATA[
Re: 8bpp available in mode 3, mode 4, and mode 7: this is correct.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3">koitsu</a> — Wed Aug 27, 2014 2:05 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[93143]]></name></author>
<updated>2014-08-27T13:18:03-07:00</updated>
<published>2014-08-27T13:18:03-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11567&amp;p=133173#p133173</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11567&amp;p=133173#p133173"/>
<title type="html"><![CDATA[Re: What kind of 3D calculations were used in SuperFX games?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11567&amp;p=133173#p133173"><![CDATA[
<div class="quotetitle">ARM9 wrote:</div><div class="quotecontent"><br />8bpp can be used for both mode7 and mode3/4, it depends on how you upload it to vram (port $2118 byte transfers interleaved or word to 2118/2119) and how you build your map.<br /></div><br />You sure?  How would you account for packed-pixel vs. bitplane?<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Well, technically the GSU is wired directly to the cartridge (it could even be wired to access parts not accessible to the 65816), so in the worst case they could just wire the banks to the relevant portions... The only limitation here would be Nintendo's policies =P<br /></div>The gsu sits between the cartridge rom/ram and the scpu so the address bus on the gsu is the limit here, which can only address 2MiB on all but the first version. Shouldn't be too much of a hassle to increase that on something like the sd2snes.</div><br />I'm referring to the memory maps in the manual.  The GSU doesn't see anything above bank 71, but the S-CPU can access a bunch of stuff past that point, including 2 MB of LoROM from 80 to BF and 4 MB of HiROM from C0 to FF.  This 6 MB ROM region is in addition to what the GSU can access, and according to the diagrams in sections 1.3 and 1.4, the CPU can access this ROM irrespective of what the GSU is doing or the status of the access control switch.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6595">93143</a> — Wed Aug 27, 2014 1:18 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[ARM9]]></name></author>
<updated>2014-08-27T08:51:51-07:00</updated>
<published>2014-08-27T08:51:51-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11567&amp;p=133157#p133157</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11567&amp;p=133157#p133157"/>
<title type="html"><![CDATA[Re: What kind of 3D calculations were used in SuperFX games?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11567&amp;p=133157#p133157"><![CDATA[
<div class="quotetitle">Sik wrote:</div><div class="quotecontent"><br /><div class="quotetitle">93143 wrote:</div><div class="quotecontent">I can't find that data in the manual.  Did Doom use Mode 7?  I saw a reference that said it didn't.  The SNES has two other modes with 8bpp layers, and they're planar.  Plus I don't see anything in the manual that indicates radically different behaviour when plotting 8bpp.<br /></div><br />What modes are actually supported by PLOT?</div><br />2bpp, 4bpp (tile and sprite, the latter behaving differently iirc) and 8bpp. You also have some settings in the plot option register for dithering and &quot;transparency&quot; (skipping on color 0) etc.. 8bpp can be used for both mode7 and mode3/4, it depends on how you upload it to vram (port $2118 byte transfers interleaved or word to 2118/2119) and how you build your map.<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Well, technically the GSU is wired directly to the cartridge (it could even be wired to access parts not accessible to the 65816), so in the worst case they could just wire the banks to the relevant portions... The only limitation here would be Nintendo's policies =P<br /></div><br />The gsu sits between the cartridge rom/ram and the scpu so the address bus on the gsu is the limit here, which can only address 2MiB on all but the first version. Shouldn't be too much of a hassle to increase that on something like the sd2snes.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6115">ARM9</a> — Wed Aug 27, 2014 8:51 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Sik]]></name></author>
<updated>2014-08-27T02:36:54-07:00</updated>
<published>2014-08-27T02:36:54-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11567&amp;p=133146#p133146</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11567&amp;p=133146#p133146"/>
<title type="html"><![CDATA[Re: What kind of 3D calculations were used in SuperFX games?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11567&amp;p=133146#p133146"><![CDATA[
<div class="quotetitle">93143 wrote:</div><div class="quotecontent"><br />I can't find that data in the manual.  Did Doom use Mode 7?  I saw a reference that said it didn't.  The SNES has two other modes with 8bpp layers, and they're planar.  Plus I don't see anything in the manual that indicates radically different behaviour when plotting 8bpp.<br /></div><br />What modes are actually supported by PLOT?<br /><br /><div class="quotetitle">93143 wrote:</div><div class="quotecontent"><br />Do you even need the PLOT functionality if you're using packed-pixel?<br /></div><br />Yes, because the main advantage of the PLOT instruction is that it converts screen coordinates into tilemapped coordinates.<br /><br />Note that it's possible to draw without that instruction (by writing to RAM directly). It's perfectly possible Doom isn't even using the PLOT instruction, when drawing vertical spans there isn't much of a problem (every consecutive pixel is always at the same distance in bytes).<br /><br /><div class="quotetitle">93143 wrote:</div><div class="quotecontent"><br />Page 2-7-2, right before section 7.1.2 begins.  There may be multiple versions out there...<br /></div><br />Looks like I skipped it =/ Odd that they didn't mention it in the opcode details though.<br /><br /><div class="quotetitle">93143 wrote:</div><div class="quotecontent"><br />The ROM area I'm talking about is outside the GSU's jurisdiction.  It outright can't see it, nor can it cut off the S-CPU's access to it.  I thought the GSU was limited to 2 MB of ROM (or possibly 4 MB if you fiddled with the memory map?), but this is a totally separate block and that limit doesn't apply.<br /><br />I don't see any real reason why an actual game couldn't have used it (except that a GSU was expensive, ROM was expensive, FastROM was expensive, add 'em all up and...).  I'm mostly worried about unemulated behaviour, either in an emulator or on the SD2SNES when/if it supports Super FX, but I don't understand SNES memory mapping well enough to be confident that there isn't a gotcha hiding in there even in terms of real/original hardware...<br /></div><br />Well, technically the GSU is wired directly to the cartridge (it could even be wired to access parts not accessible to the 65816), so in the worst case they could just wire the banks to the relevant portions... The only limitation here would be Nintendo's policies =P<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4526">Sik</a> — Wed Aug 27, 2014 2:36 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[93143]]></name></author>
<updated>2014-08-26T16:50:32-07:00</updated>
<published>2014-08-26T16:50:32-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11567&amp;p=133120#p133120</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11567&amp;p=133120#p133120"/>
<title type="html"><![CDATA[Re: What kind of 3D calculations were used in SuperFX games?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11567&amp;p=133120#p133120"><![CDATA[
<div class="quotetitle">Sik wrote:</div><div class="quotecontent"><br />Isn't 8bpp (mode 7) packed instead of planar?<br /></div><br />I can't find that data in the manual.  Did Doom use Mode 7?  I saw a reference that said it didn't.  The SNES has two other modes with 8bpp layers, and they're planar.  Plus I don't see anything in the manual that indicates radically different behaviour when plotting 8bpp.<br /><br />Do you even need the PLOT functionality if you're using packed-pixel?<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br /><div class="quotetitle">93143 wrote:</div><div class="quotecontent">2) Per the manual, ROM access in high speed mode (21 MHz) is 5 cycles instead of 3.  Is the same true of RAM access?  And does this impact the answer for (1)?<br /></div><br />Where is this mentioned?</div><br />Page 2-7-2, right before section 7.1.2 begins.  There may be multiple versions out there...<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br /><div class="quotetitle">93143 wrote:</div><div class="quotecontent">4) Is there anything special that a developer using a GSU2 would need to do in order to use those 6 MB of extra ROM at the top of the CPU's memory map?  (Preferably in FastROM mode?)  As far as I know no games ever did...<br /></div><br />Doesn't it use the same bank numbers the 65816 uses?</div><br />The ROM area I'm talking about is outside the GSU's jurisdiction.  It outright can't see it, nor can it cut off the S-CPU's access to it.  I thought the GSU was limited to 2 MB of ROM (or possibly 4 MB if you fiddled with the memory map?), but this is a totally separate block and that limit doesn't apply.<br /><br />I don't see any real reason why an actual game couldn't have used it (except that a GSU was expensive, ROM was expensive, FastROM was expensive, add 'em all up and...).  I'm mostly worried about unemulated behaviour, either in an emulator or on the SD2SNES when/if it supports Super FX, but I don't understand SNES memory mapping well enough to be confident that there isn't a gotcha hiding in there even in terms of real/original hardware...<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6595">93143</a> — Tue Aug 26, 2014 4:50 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Sik]]></name></author>
<updated>2014-08-26T16:13:33-07:00</updated>
<published>2014-08-26T16:13:33-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11567&amp;p=133119#p133119</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11567&amp;p=133119#p133119"/>
<title type="html"><![CDATA[Re: What kind of 3D calculations were used in SuperFX games?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11567&amp;p=133119#p133119"><![CDATA[
<div class="quotetitle">93143 wrote:</div><div class="quotecontent"><br />1) What are the absolute hardware bottlenecks on blitting (using PLOT with color #0 not written, so it has to read the old data from RAM before writing the new data back, if I understand correctly)?  How many cycles does it take to empty the secondary pixel cache under those circumstances (I'm thinking not less than 48 cycles for 8bpp, or less for lower bit depth)?  How about transferring the primary cache to the secondary, once the secondary is free?<br /></div><br />Isn't 8bpp (mode 7) packed instead of planar? That'd make it much faster than 2bpp and 4bpp since one pixel would need only one byte access (also, the documentation says that 48 cycles is the maximum for PLOT if I recall correctly)<br /><br /><div class="quotetitle">93143 wrote:</div><div class="quotecontent"><br />2) Per the manual, ROM access in high speed mode (21 MHz) is 5 cycles instead of 3.  Is the same true of RAM access?  And does this impact the answer for (1)?<br /></div><br />Where is this mentioned? The opcode documentation seems to assume the clock doesn't affect the speed (it mentions three different speeds depending on whether it's running from ROM, RAM or the cache, but nothing else except for opcodes that may be affected by the GSU status)<br /><br /><div class="quotetitle">93143 wrote:</div><div class="quotecontent"><br />4) Is there anything special that a developer using a GSU2 would need to do in order to use those 6 MB of extra ROM at the top of the CPU's memory map?  (Preferably in FastROM mode?)  As far as I know no games ever did...<br /></div><br />Doesn't it use the same bank numbers the 65816 uses?<br /><br /><div class="quotetitle">Myask wrote:</div><div class="quotecontent"><br />Y'know, it'd be useful for both the SNESDev and GBDev subfora to have stickies with links to reference documents/knowledge bases.<br /></div><br />You'd have some people here complain about copyright infringement then. It's in chapter 2-9 of book II if you get the SNES documentation though (it describes every opcode of the SuperFX).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4526">Sik</a> — Tue Aug 26, 2014 4:13 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Myask]]></name></author>
<updated>2014-08-26T15:47:07-07:00</updated>
<published>2014-08-26T15:47:07-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11567&amp;p=133116#p133116</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11567&amp;p=133116#p133116"/>
<title type="html"><![CDATA[Re: What kind of 3D calculations were used in SuperFX games?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11567&amp;p=133116#p133116"><![CDATA[
<div class="quotetitle">93143 wrote:</div><div class="quotecontent"><br />2) Per the manual<br /></div>Where is this?<br /><br />Y'know, it'd be useful for both the SNESDev and GBDev subfora to have stickies with links to reference documents/knowledge bases.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6603">Myask</a> — Tue Aug 26, 2014 3:47 pm</p><hr />
]]></content>
</entry>
</feed>