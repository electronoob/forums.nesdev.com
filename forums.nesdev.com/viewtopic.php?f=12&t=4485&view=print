<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - flash cart development</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">flash cart development</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=12&amp;t=4485">http://forums.nesdev.com/viewtopic.php?f=12&amp;t=4485</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>gilligan</b> [ Wed Oct 22, 2008 12:04 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>flash cart development</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />hi everyone..
<br />
<br />a short preface ...
<br />
<br />for years I've been interested in console programming. Poked around
<br />here and there on different platforms sometimes I didn't go much
<br />further than just some silly text scrolly and sometimes i spent some more
<br />time. The SNES however remains close to my heart hehe ;--)
<br />
<br />Now while I can get along on the software side of things I just suck
<br />with hardware and electronics. Nevertheless I've always wanted to 
<br />build my own snes devcart. Apparently a lot of people have gained
<br />a lot of knowledge and understanding on this topic and I was hoping
<br />to pick your guys brains for a bit on this matter ..
<br />
<br /><strong> Warning </strong> : This posting could get pretty long :)
<br />
<br /><strong>What I wish for ..</strong>
<br />
<br />... is a snes flash cart that allows for quick test cycles and ..
<br />
<br /> 1. does NOT use the parallel port but serial or ethernet or..
<br /> 2. allows for communication with the PC at runtime (small overhead)
<br /> 3. lets me reset the SNES from the PC 
<br />
<br /><strong>What I don't care about ..</strong>
<br />
<br />1. I don't care about commercial game compatibility
<br />2. It doesn't have to be massive in ROM size (no need for 64mbit)
<br />3. I don't really care if it is LoROM or HiROM
<br />
<br />
<br /><strong> My limited perspective ... </strong>
<br />
<br />So as I said before I am not into hardware/electronics stuff, still
<br />I am hoping to get a somewhat clearer understanding of how
<br />a hardware solution with the aims I laid out above would/should be
<br />approached/implemented.
<br />
<br />First things first.. downloaded code needs to be stored somewhere.
<br />So instead of the ROMs used on SNES carts one needs to use
<br />EEPROMs. Furthermore I assume these have to be pin-compatible
<br />in order to remain compatible to the snes addressing logic - right? OK.
<br />As I understand it various such EEPROMs are available which are
<br />suited for this.
<br />
<br />So the code will be stored on and run from those EEPROMs but it
<br />needs to get there somehow. As I mentioned in my wish list I really
<br />want to stay away from using a parallel-port. Nowadays computers
<br />just don't come with 'em anymore and especially my laptop which I
<br />use most of the time lacks one. I would not mind serial because
<br />serial&lt;-&gt;USB adapters work just fine. (Considering that nowadays 
<br />there are chips doing all the TCP-mambo-jumbo in hardware for you
<br />I wouldn't mind ethernet either... ;])
<br />
<br />Through my job i've gathered some experience in programming
<br />AVR micro-controllers from ATMEL. So I thought one of those 8bit
<br />AVRs would be just fine to handle communication with the PC side
<br />and writing of EEPROM data. Does that make any sense ?
<br />
<br />So the dev-cart would have a serial port which is connected to the PC
<br />and the on-board UART of the AVR. The AVR is connected to the 
<br />EEPROM -- I don't know how the EEPROMs in question would
<br />be accessed from an AVR. Certainly not as comfortable as accessing
<br />some i2C-interfacable-EEPROM but I am sure it can be managed (?).
<br />
<br />Now as for communication between SNES and PC at runtime.. That's
<br />somewhat beyond me. I think I'd have to fiddle with the snes memory
<br />addressing scheme and map some memory area to .. say pins
<br />on my AVR. How exactly would this be achieved? I have no idea...
<br />Someone please enlighten me!
<br />
<br />Being able to reset the SNES from PC prett much falls under the same
<br />category and is just a matter of connecting an output pin of the AVR
<br />to the RES signal of the cart I assume. 
<br />
<br />So that's it for now. It would be very nice to get some feedback
<br />and help. Maybe there are others that are interested in building
<br />a dev cart but don't quite know how. Maybe they could profit from
<br />this thread as well. I wish there was something like "Everything
<br />you always wanted to know about building a snes dev cart but
<br />where afraid to ask" .. or "snes dev cart building for dummies" :)
<br />
<br />thanks for reading this far..
<br />-gilligan

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>cybertron</b> [ Fri Oct 24, 2008 7:02 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Well you arn't going to get very far without any electronics experience <img src="./images/smilies/icon_sad.gif" alt=":(" title="Sad" />
<br />
<br />For rapid development, SRAM would be the best. A single 1MB chip would work perfectly
<br />
<br />Since it needs to be powered to hold data, leaving it in the SNES would be perfect. You can hold the system in reset while it is programming using a pin on the cart, and you can insert a buffer so  you can isolate the RAM from the SNES bus
<br />
<br />Now to get the data to the cart  you don't even need a micro, and serial ports are a pain in the arse. Using a FT245R chip and a CPLD you just need a state machine to read from the USB chip and it should have enough pins to access the RAM.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>gilligan</b> [ Fri Oct 24, 2008 2:59 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">cybertron wrote:</div><div class="quotecontent">Well you arn't going to get very far without any electronics experience :(<br /><br />For rapid development, SRAM would be the best. A single 1MB chip would work perfectly<br /><br />Since it needs to be powered to hold data, leaving it in the SNES would be perfect. You can hold the system in reset while it is programming using a pin on the cart, and you can insert a buffer so  you can isolate the RAM from the SNES bus<br /><br />Now to get the data to the cart  you don't even need a micro, and serial ports are a pain in the arse. Using a FT245R chip and a CPLD you just need a state machine to read from the USB chip and it should have enough pins to access the RAM.</div>
<br />
<br />I see. 
<br />
<br />Indeed SRAM would suite me just fine. 
<br />
<br />And i've had a look at the datasheet of the FT245R - quite 
<br />nice. As for a micro I guess I really would not need it, but 
<br />on the other hand I at least know how to use that one hehe. 
<br />
<br />Of course i'd be totally lost will all of this if I attempted doing
<br />this on my own. I do know some people that know about
<br />electronics, they know nothing about snes/videogames tho hehe.
<br />
<br />Maybe I shouldn't even get into this as it might be beyond me
<br />anyhow but.. how could I go about say mapping some pins of
<br />a micro (if I was indeed using one) to some unused address range
<br /> (around $21c0 or so) on the B-bus ? (or CPLD pins if not micro ..)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Memblers</b> [ Fri Oct 24, 2008 4:05 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Hey gilligan, it's been a while. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />
<br />
<br />Sounds like what you want is much like my Squeedo, but for SNES.  I didn't care about compatibility with existing stuff, just a nice dev system with no plugs or sockets to mess with.
<br />
<br />I'll tell you right off though, the best way (unless the hardware is what you're wanting to do) is just to plop down maybe $200-$400 for an 8-bit EPROM emulator.  That will take care of points 1 and 3.  It may be a big purchase, but you could very easily spend more than that by developing a devcart.  Usually (at least mine does), there will be a reset line you could wire up to the CPU.
<br />
<br />Point 2 could be accomplished with the controller port to RS232 (or a USB one).  I remember it being a huge pain in the ass to get the timing to work for that, but I can almost swear that I've heard of someone else (blargg?) managing to make it work.  If not, I'm sure it wouldn't be too hard to make an synchronous-to-async adapter with a microcontroller on the controller port.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>gilligan</b> [ Fri Oct 24, 2008 4:32 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Memblers wrote:</div><div class="quotecontent">Hey gilligan, it's been a while. :)<br /><br />Sounds like what you want is much like my Squeedo, but for SNES.  I didn't care about compatibility with existing stuff, just a nice dev system with no plugs or sockets to mess with.<br /><br />I'll tell you right off though, the best way (unless the hardware is what you're wanting to do) is just to plop down maybe $200-$400 for an 8-bit EPROM emulator.  That will take care of points 1 and 3.  It may be a big purchase, but you could very easily spend more than that by developing a devcart.  Usually (at least mine does), there will be a reset line you could wire up to the CPU.<br /><br />Point 2 could be accomplished with the controller port to RS232 (or a USB one).  I remember it being a huge pain in the ass to get the timing to work for that, but I can almost swear that I've heard of someone else (blargg?) managing to make it work.  If not, I'm sure it wouldn't be too hard to make an synchronous-to-async adapter with a microcontroller on the controller port.</div>
<br />
<br />Hey memblers! I was hoping to hear from you in this thread sooner
<br />or later :)
<br />
<br />I still have that joypad-to-serial adapter cable from you here somewhere.
<br />For some reason I never got that to work.. maybe I was just too dull or
<br />.. I dunno :) at least on the paper my timing seemed to be alright hehe
<br />
<br />EEPROM emulator.. Hm.. valid point I guess. Could you make any
<br />suggestions for a specific item ? Then I can check what the price
<br />is like and if I can maybe spot something on ebay.. Which one do you
<br />have ?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Memblers</b> [ Fri Oct 24, 2008 7:21 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Yeah, the timing I had working on NES and an SNES clone, but it wouldn't work on a real SNES no matter what I tried.
<br />
<br />My ROM emulator is a "TurboROM" from 1993 or so, made by Parallax.  Long out of production.  I did a google search just now and found this one: <a href="http://www.eetools.com/index.cfm?fuseaction=product.display&amp;Product_ID=9" class="postlink">http://www.eetools.com/index.cfm?fuseaction=product.display&amp;Product_ID=9</a>, which looked pretty decent (it's $300).  It does up to 1024kB.
<br />
<br />For NES it seems like you  <em>might</em> need to add resistors on the datalines, but my ROM emu worked OK when I borrowed an SNES dev cart (as far as I could tell).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>gilligan</b> [ Sat Oct 25, 2008 3:46 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Memblers wrote:</div><div class="quotecontent">Yeah, the timing I had working on NES and an SNES clone, but it wouldn't work on a real SNES no matter what I tried.<br /><br />My ROM emulator is a "TurboROM" from 1993 or so, made by Parallax.  Long out of production.  I did a google search just now and found this one: <a href="http://www.eetools.com/index.cfm?fuseaction=product.display&amp;Product_ID=9" class="postlink">http://www.eetools.com/index.cfm?fuseaction=product.display&amp;Product_ID=9</a>, which looked pretty decent (it's $300).  It does up to 1024kB.<br /><br />For NES it seems like you  <em>might</em> need to add resistors on the datalines, but my ROM emu worked OK when I borrowed an SNES dev cart (as far as I could tell).</div>
<br />
<br />I came across that eetools website as well. $300 ain't exactly cheap x_X
<br />and no mention of linux support which is a must-have in my case.
<br />
<br />Weird also that I cannot find a single EEPROM Emulator on ebay. Is that
<br />so obscure an item nowadays? :)
<br />
<br />Hm.. I wish there was some electronics nerd like kevtris working
<br />on something like CopySNES .. *sigh* ;)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>kyuusaku</b> [ Sat Oct 25, 2008 1:40 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />ROM emulators always were obscure items. Really to make your own wouldn't cost you very much, the only significant cost would be the PCB. But if you do make your own, you can tailor it to the SNES, or generic ROM, or both. I have designed some (not built) as exercises in the past, and for a simple single 8-bit ROM emulator you could get by on $3 of logic, paired with a &lt;=$40 PCB, and &lt;=$3 parallel port connector, &lt;=$2 CR2032 cell, &lt;$1 analog to build one from $50 of parts before the SRAM.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Memblers</b> [ Sat Oct 25, 2008 4:25 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Yeah, I got my EPROM emulator off of ebay and they very rarely turn up on there (I had a saved search on there for a long time).  I didn't know how to design/build stuff at the time, all the info available was for a 32kB one and the ones for sale were generally overly complex ones at way higher cost.  I paid $200, but was able to just get it and go.
<br />
<br />I doubt you'll find any of them with linux support.  I'd bet a USB one uses an FT2xx chip, which I'd imagine has linux drivers if the protocol could be figured out.
<br />
<br />kyuusaku: Good point, but for someone who isn't familiar with PCB design, there is a learning curve to overcome with whatever software is used.  Depending on goals and value of time, you could also wire one up by hand.  I forgot that there are places where you can order 1 PCB, I'm more used to the ~$100 setup/shipping fee for production - I never made a one-off.
<br />
<br />Another little annoyance is the lack of available IDC-to-DIP32 adapters.  Anyone found any?  I can find DIP28 and DIP40 adapters all day long.  So that requires some cutting and gluing.
<br />
<br />Then not wanting to do parallel port (which I've had so much trouble with myself, I've grown to loathe it), means doing serial, a MAX202 will do the trick.  USB will need surface-mount parts, might not want that.  With manual control of enough output lines from the PC, maybe one can get by without a microcontroller.
<br />
<br />I think 512kB is the biggest SRAM you can get in through-hole.  So if you don't want SMT you can use as many of those as you want, saving on wiring/board-space you could even stack them and wire up the extra address line(s).

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>