<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=3&amp;t=7142" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2010-11-12T12:43:18-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=3&amp;t=7142</id>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2010-11-12T12:43:18-07:00</updated>
<published>2010-11-12T12:43:18-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7142&amp;p=69922#p69922</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7142&amp;p=69922#p69922"/>
<title type="html"><![CDATA[Math/array question - emulation related]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7142&amp;p=69922#p69922"><![CDATA[
<div class="quotetitle">tepples wrote:</div><div class="quotecontent"><br />Profiling every function call in the entire program will just tell you that 50% of the time is spent in the profiler.<br /></div><br />Then you're using the wrong profiling tool. A good one shouldn't impact program performance much at all. There are two basic types I know about. One hooks into every function call, giving information about number of calls, average time spent, call graph. The other doesn't modify the code at all, instead sampling the program counter hundreds of times a second, seeing where it falls. From this it determines which functions it spends the most time in. Even for the one that hooks into functions, it should have a way to avoid doing so for inline functions, lessening the impact.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Fri Nov 12, 2010 12:43 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2010-11-12T11:46:46-07:00</updated>
<published>2010-11-12T11:46:46-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7142&amp;p=69916#p69916</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7142&amp;p=69916#p69916"/>
<title type="html"><![CDATA[Math/array question - emulation related]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7142&amp;p=69916#p69916"><![CDATA[
Profiling every function call in the entire program will just tell you that 50% of the time is spent in the profiler.<br /><br />Relying on division, floating-point operations, etc. on platforms where they are slow will result in <a href="http://c2.com/cgi/wiki?UniformlySlowCode" class="postlink">uniformly slow code</a>.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Fri Nov 12, 2010 11:46 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2010-11-12T11:14:23-07:00</updated>
<published>2010-11-12T11:14:23-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7142&amp;p=69913#p69913</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7142&amp;p=69913#p69913"/>
<title type="html"><![CDATA[Math/array question - emulation related]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7142&amp;p=69913#p69913"><![CDATA[
The target of your profiling should be the entire program, because you shouldn't make assumptions as to what the hotspots are. Profiling then tells you where to focus your optimization efforts. If a loop has a division but isn't a hotspot, then you ignore it.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Fri Nov 12, 2010 11:14 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2010-11-12T10:24:58-07:00</updated>
<published>2010-11-12T10:24:58-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7142&amp;p=69907#p69907</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7142&amp;p=69907#p69907"/>
<title type="html"><![CDATA[Math/array question - emulation related]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7142&amp;p=69907#p69907"><![CDATA[
True, but as a rule, division by a variable is hard to pipeline in modern CPU hardware. So any inner loop with a division in it should be one of the first targets of your profiling instrumentation.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Fri Nov 12, 2010 10:24 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2010-11-12T10:07:18-07:00</updated>
<published>2010-11-12T10:07:18-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7142&amp;p=69906#p69906</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7142&amp;p=69906#p69906"/>
<title type="html"><![CDATA[Math/array question - emulation related]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7142&amp;p=69906#p69906"><![CDATA[
You should still code as a multiply/divide if that better expresses the intent, and leave optimization to those sections of code that you've identified as hotspots.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Fri Nov 12, 2010 10:07 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Dwedit]]></name></author>
<updated>2010-11-11T19:46:53-07:00</updated>
<published>2010-11-11T19:46:53-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7142&amp;p=69878#p69878</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7142&amp;p=69878#p69878"/>
<title type="html"><![CDATA[Math/array question - emulation related]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7142&amp;p=69878#p69878"><![CDATA[
You also sometimes have the other scenario, where your shifts aren't constant.  Then you can't simply use division or multiplication and rely on magic that makes the compiler turn them into shifts.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=53">Dwedit</a> — Thu Nov 11, 2010 7:46 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2010-11-11T18:39:11-07:00</updated>
<published>2010-11-11T18:39:11-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7142&amp;p=69877#p69877</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7142&amp;p=69877#p69877"/>
<title type="html"><![CDATA[Math/array question - emulation related]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7142&amp;p=69877#p69877"><![CDATA[
So you're talking about optimization by the compiler? I'm just not clear of your point, and where it fits in with things. I'd like to understand, but your terseness is making that difficult.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Thu Nov 11, 2010 6:39 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Zepper]]></name></author>
<updated>2010-11-11T18:09:15-07:00</updated>
<published>2010-11-11T18:09:15-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7142&amp;p=69876#p69876</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7142&amp;p=69876#p69876"/>
<title type="html"><![CDATA[Math/array question - emulation related]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7142&amp;p=69876#p69876"><![CDATA[
- addr/4096 -&gt; 4096 is 2^12.<br />- addr/8 -&gt; 8 is 2^3.<br /><br />- This is easily translated with shifts. What about addr/7 ? Got it?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=39">Zepper</a> — Thu Nov 11, 2010 6:09 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2010-11-11T17:24:21-07:00</updated>
<published>2010-11-11T17:24:21-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7142&amp;p=69875#p69875</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7142&amp;p=69875#p69875"/>
<title type="html"><![CDATA[Math/array question - emulation related]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7142&amp;p=69875#p69875"><![CDATA[
Only C99 specifies rounding towards zero; C89 and C++ leave it up to the implementation. It's unfortunate that algebraic rounding was chosen for C99, as it's the less-useful of the two possible approaches. From the respective language standards, in order of publication:<br /><div class="quotetitle">C89 wrote:</div><div class="quotecontent"><br />When integers are divided and the division is inexact, if both operands are positive the result of the / operator is the largest integer less than the algebraic quotient and the result of the % operator is positive.  If either operand is negative, whether the result of the / operator is the largest integer less than the algebraic quotient or the smallest integer greater than the algebraic quotient is implementation-defined, as is the sign of the result of the % operator.  If the quotient a/b is representable, the expression (a/b)*b + a%b shall equal a.<br /></div><br /><div class="quotetitle">C++98 wrote:</div><div class="quotecontent"><br />The binary / operator yields the quotient, and the binary % operator yields the remainder from the division of the first expression by the second. If the second operand of / or % is zero the behavior is undefined; otherwise (a/b)*b + a%b is equal to a. If both operands are nonnegative then the remainder is nonnegative; if not, the sign of the remainder is implementation-defined*.<br />* According to work underway toward the revision of ISO C, the preferred algorithm for integer division follows the rules defined in the ISO Fortran standard, ISO/IEC 1539:1991, in which the quotient is always rounded toward zero.<br /></div><br /><div class="quotetitle">C99 wrote:</div><div class="quotecontent"><br />When integers are divided, the result of the / operator is the algebraic quotient with any fractional part discarded*. If the quotient a/b is representable, the expression (a/b)*b + a%b shall equal a.<br /><br />* This is often called "truncation toward zero".<br /></div><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Thu Nov 11, 2010 5:24 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2010-11-11T15:32:26-07:00</updated>
<published>2010-11-11T15:32:26-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7142&amp;p=69866#p69866</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7142&amp;p=69866#p69866"/>
<title type="html"><![CDATA[Math/array question - emulation related]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7142&amp;p=69866#p69866"><![CDATA[
<div class="quotetitle">blargg wrote:</div><div class="quotecontent"><br />If you're dividing the address space into 4096-byte banks, and you want the bank index and offset, you should use addr/4096 and addr%4096, not addr&gt;&gt;12 and addr&amp;0xFFF.<br /></div><br />Unless you're thinking of it as separating the address bus into A15-A12 and A11-A0, and then treating A15-A12 as the input to a decoder and/or a register file.<br /><br /><div class="quotetitle">Zepper wrote:</div><div class="quotecontent"><br />I don't know if the compiler rounds a division or takes the integer part only.<br /></div><br />In C, integer / integer rounds toward 0. This is true of both signed and unsigned integer arithmetic.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Thu Nov 11, 2010 3:32 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2010-11-11T15:07:10-07:00</updated>
<published>2010-11-11T15:07:10-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7142&amp;p=69863#p69863</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7142&amp;p=69863#p69863"/>
<title type="html"><![CDATA[Math/array question - emulation related]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7142&amp;p=69863#p69863"><![CDATA[
I don't understand your comment about a power of 2. / and % work regardless of the divisor, with / yielding the quotient and % the remainder. For positive values, this works as expected, for example 15/8=1 and 15%8=7.<br /><br />Right shifting is fine on positive signed values, it's just negative values which yield an implementation-defined result. If you're reserving right shift for bit operations only, you'll never have to worry about a negative value in the first place.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Thu Nov 11, 2010 3:07 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Zepper]]></name></author>
<updated>2010-11-11T14:20:28-07:00</updated>
<published>2010-11-11T14:20:28-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7142&amp;p=69860#p69860</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7142&amp;p=69860#p69860"/>
<title type="html"><![CDATA[Math/array question - emulation related]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7142&amp;p=69860#p69860"><![CDATA[
<div class="quotetitle">blargg wrote:</div><div class="quotecontent"><br />Good point about intention; code should reflect that, and any optimization should avoid disturbing that, if possible. If you've got some hardware that's specified to use the upper 4 bits of a byte, you should write b&gt;&gt;4, not b/16. If you're dividing the address space into 4096-byte banks, and you want the bank index and offset, you should use addr/4096 and addr%4096, not addr&gt;&gt;12 and addr&amp;0xFFF.<br /></div><br /><br />- Yes, but I bet you suppose a value that's power of 2..? I don't know if the compiler rounds a division or takes the integer part only. Anyway, an obvious thing: do not use shifts with signed numbers.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=39">Zepper</a> — Thu Nov 11, 2010 2:20 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2010-11-11T10:13:00-07:00</updated>
<published>2010-11-11T10:13:00-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7142&amp;p=69851#p69851</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7142&amp;p=69851#p69851"/>
<title type="html"><![CDATA[Math/array question - emulation related]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7142&amp;p=69851#p69851"><![CDATA[
Good point about intention; code should reflect that, and any optimization should avoid disturbing that, if possible. If you've got some hardware that's specified to use the upper 4 bits of a byte, you should write b&gt;&gt;4, not b/16. If you're dividing the address space into 4096-byte banks, and you want the bank index and offset, you should use addr/4096 and addr%4096, not addr&gt;&gt;12 and addr&amp;0xFFF.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Thu Nov 11, 2010 10:13 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Jarhmander]]></name></author>
<updated>2010-11-10T18:20:20-07:00</updated>
<published>2010-11-10T18:20:20-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7142&amp;p=69822#p69822</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7142&amp;p=69822#p69822"/>
<title type="html"><![CDATA[Math/array question - emulation related]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7142&amp;p=69822#p69822"><![CDATA[
<div class="quotetitle">blargg wrote:</div><div class="quotecontent"><br />Yeah, as kyuusaku says, get it working before you try to optimize it. Bit shifting and page pointers is optimization. Actually, you don't need any bit shifting; just use / and %. If having a divide is unbearable, make addr an unsigned int and the compiler will convert the / and % into a right shift and mask.<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">#define BANK_SIZE 4096<br />uint8_t* banks &#91;65536 / BANK_SIZE&#93;;<br /><br />uint8_t* memory&#40; int addr &#41;<br />&#123;<br />    return &amp;banks &#91;addr / BANK_SIZE&#93; &#91;addr % BANK_SIZE&#93;;<br />&#125;</div><br /></div><br />I don't agree with your point here. Bit shifting isn't that much of an optimisation, it is just the proper way of manipuling bits because it is its purpose, and using those bitwise operators makes code clearer when it's used right. For example, [var = val / 16;] makes me think the programmer wanted to do some arithmetics with a variable, while [var = val&gt;&gt;4;] clearly makes me thinks the programmer wanted to get the upper part of the integer, above the first 4 bits. If val and var are [unsigned int], my two examples yields the same results, but there is a difference in the intend in the code.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=336">Jarhmander</a> — Wed Nov 10, 2010 6:20 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[thebigkahuna]]></name></author>
<updated>2010-11-10T05:33:02-07:00</updated>
<published>2010-11-10T05:33:02-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7142&amp;p=69765#p69765</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7142&amp;p=69765#p69765"/>
<title type="html"><![CDATA[Math/array question - emulation related]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7142&amp;p=69765#p69765"><![CDATA[
That's great, thanks guys, I understand it now.  And blargg, you're right, premature optimization on my part wasn't doing me any favours, I'll take that on board <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /><br />Thanks again.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4620">thebigkahuna</a> — Wed Nov 10, 2010 5:33 am</p><hr />
]]></content>
</entry>
</feed>