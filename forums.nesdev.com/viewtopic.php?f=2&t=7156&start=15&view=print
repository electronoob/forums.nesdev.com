<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - &quot;Mapper 1&quot; emulation &amp; extension</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">&quot;Mapper 1&quot; emulation &amp; extension</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=7156">http://forums.nesdev.com/viewtopic.php?f=2&amp;t=7156</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>2</strong> of <strong>5</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Mon Nov 15, 2010 11:28 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">65024U wrote:</div><div class="quotecontent">And also, the game I want to do is the pokemon game with 256 pokemon with two 32x32 images for each, so CHR-ROM is out of question</div>
<br />Can you mock up a screenshot of your Pokemon clone so that I can see how things would look? If it's an over-the-shoulder view like that in Pokemon for Game Boy, it could use CHR ROM and bankswitch CHR on a scanline between the opponent's gamecock and your gamecock.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>MottZilla</b> [ Mon Nov 15, 2010 11:47 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">EDIT : Oh an my algorithm still won't work for FF1+2... as the multicart uses bank 0 for FF1 and bank 2 for FF2, it will "think" the cart is SOROM and will save only bank 2. I'm short of ideas here... realying on the PRG size for this (if it's 512k it can't be SOROM) is NOT a good idea.... yet the only way to tell FF1+2 apart from SOROM games in the iNES 1.0 header.</div>
<br />
<br />Why not just save all of PRG-RAM? Sure the real cart only keeps one chip's contents alive, but the emulation can just keep all of it intact and the game shouldn't be negatively impacted. It's not like harddrive space is an issue.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>3gengames</b> [ Mon Nov 15, 2010 1:27 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Scanline changing might be okay to do but I really don't want to use any tricks like that to add to the confusion of making a game of this size. The program won't be hard, it's just gotta handle a huge chunk of data in images and other stuff later on. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />
<br />
<br />
<br />My mockup on the NES emulator is basically a recreated gameboy R/Y/B version battle screen. Pretty much the same thing. I guess interrupts might work but....eh...It's not needed, and I have 8K SRAM's, but not anything over a 256K ROM so just to stick a single 1MB rom on there instead of two 512K's is cheaper, also.
<br />
<br />
<br />Anyone else think that solution for the PRG-ROM will be good to have added to the standard?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Mon Nov 15, 2010 2:25 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">65024U wrote:</div><div class="quotecontent">I want to do is the pokemon game with 256 pokemon with two 32x32 images for each</div><br />OK, that's 32 tiles per Pokemon, with 256 of them that's a total of 8192 tiles. Each tile is 16 bytes, which means you need 131072 bytes, or 128KB, for the Pokemon graphics. Saying you need 1MB just because of that is a bit of a stretch. Even if you used 128KB for the rest of the graphics, a 512KB ROM would have plenty of room left for code and data. Also, CHR data can be easily compressed to about 70% of its size if you are using CHR-RAM.<br /><br /><div class="quotetitle">65024U wrote:</div><div class="quotecontent">the pokemon change every time and you just can't use CHR-ROM at all</div>
<br />But you always have only 2 of them in the same screen, right? The MMC3 allows you to bankswitch CHR-RAM in 1KB or 2KB pieces, so you can easily combine different Pokemons at will without needing any extra space.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Memblers</b> [ Mon Nov 15, 2010 3:56 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent"><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Unless Memblers is about to make some IRQ circuitry that can be added to any MMC1 + CHR RAM board, and it wants a bit to control IRQ generation and acknowledgment.</div><br />Cool but then it probably shouldn't be assigned to mapper 1 anymore, as it's definitely more than just a simple extension.<br /></div>
<br />
<br />Yeah that's true, at first I looked at a sorta stand-alone IRQ add-on, but the most effective way I came up has the most interesting parts being done inside the CPLD (with a cheap single NAND gate outside to do the boring stuff).  The rest of the mapper outclasses MMC1, IMHO (and perhaps MMC2 as well).  So far my mapper seems almost too good to be true (for it's low cost), but it does compile, synthesize, and fit.  I'll know for sure pretty soon.  I still have a couple ideas to make it more flexible, that I'll check into before prototyping the board.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Tue Nov 16, 2010 4:59 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">How about we make a standard where if the PRG size is bigger then what is supported via the PRG-ROM bank switching bits, the CHR-ROM bank switching character bits are used from MSB to LSB on the PRG-ROM. So the 512K ROM would be used with the most significant CHR line, while the 1MB bit would be the 2nd most significant CHR-ROM bit available, and so on. I think thats something we should consider maybe getting added to emulators for support of 1MB and bigger ROM's automatically without hacking.</div>Why not just save all of PRG-RAM? Sure the real cart only keeps one chip's contents alive, but the emulation can just keep all of it intact and the game shouldn't be negatively impacted. It's not like harddrive space is an issue.<br />That's a good idea but it will conflict about SRAM selection bits.<br />Then, a table for all SRAM size and ROM sizes available on iNES 2.0 and what bits select what should be created.<br /><br />About 65024U's game, I can't juge whenever it's true the CHR-RAM is absolute need or not. CHR-RAM is an absolute need if<br />1) You want to modify graphics manually in real time by a program<br />2) The tileset should be highly customizable and can't be made with sets of 1KB (4KB in MMC1's case)<br /><br />2) isn't even true in MMC5's case, as when you use EXRAM you can acess a whole 256KB set for your background.<br /><br />I don't think any of those is an absolute need for a Pokemon game so I might be wrong (also Pokemon is a copyrighted product BTW).<br />I guess a "forward" and "backwards" pic should be made for each pokemon, so in regard to what Tokumaru said it would end up 256KB. However, if you use CHR-RAM, once compressed it could end up much smaller. If you use CHR-ROM, you'd effectively need MMC5 to get 512 KB of CHR.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Why not just save all of PRG-RAM? Sure the real cart only keeps one chip's contents alive, but the emulation can just keep all of it intact and the game shouldn't be negatively impacted. It's not like harddrive space is an issue.</div>
<br />That's a good point. Just that you want to keep compatibility with 8kb .sav files from older emulators. So I'll change the algorithm on the wiki, that will save useless data for SOROM but work fine in all cases.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>3gengames</b> [ Tue Nov 16, 2010 9:06 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent"><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">How about we make a standard where if the PRG size is bigger then what is supported via the PRG-ROM bank switching bits, the CHR-ROM bank switching character bits are used from MSB to LSB on the PRG-ROM. So the 512K ROM would be used with the most significant CHR line, while the 1MB bit would be the 2nd most significant CHR-ROM bit available, and so on. I think thats something we should consider maybe getting added to emulators for support of 1MB and bigger ROM's automatically without hacking.</div>Why not just save all of PRG-RAM? Sure the real cart only keeps one chip's contents alive, but the emulation can just keep all of it intact and the game shouldn't be negatively impacted. It's not like harddrive space is an issue.<br />That's a good idea but it will conflict about SRAM selection bits.<br />Then, a table for all SRAM size and ROM sizes available on iNES 2.0 and what bits select what should be created.<br /></div>
<br />
<br />You could always extend the 5-bit register then the MMC1 supports on the MMC1 board so after 5 writes to a port, if any more writes are taken to that port after that (Which would be unnecessary), make it go to a new 8-bit mode that homebrew developers could use as with standard MMC1 cart and add 3 more PRG-ROM select lines to the cart. Sure you'd have to get Bunnyboy to agree and sell it, but this could be made in small batches by the community if more people would be interested in such a cart.
<br />
<br />
<br />And those 256K of graphics are JUST the pokemon. (Not going to call the game or them that, BTW) I'd need probably 32K more for the other graphics I would use, characters, backgrounds, etc.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Tue Nov 16, 2010 9:20 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">Sure the real cart only keeps one chip's contents alive, but the emulation can just keep all of it intact and the game shouldn't be negatively impacted.</div><br />The emulator should behave like the hardware wherever feasible. Otherwise, you get into the early NES scene, where games depended on the quirks of Nesticle because they had been tested only on the emulator. Even nowadays, games might start depending on PowerPak mapper quirks, such as MMC3 bankswitching the PRG RAM whenever it bankswitches the PRG ROM, causing problems when someone tries to make a repro of a homebrew game. (Versions of PowerPak MMC3 with this problem already cause visual artifacts in M.C. Kids and Crystalis.)<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">(also Pokemon is a copyrighted product BTW)</div>
<br />But Nintendo's copyright appears to be narrow enough that Digimon, Dragon Quest/Warrior Monsters, Telefang, and Robopon don't infringe. Any similarity among them likely qualifies as <a href="http://en.wikipedia.org/wiki/Sc%C3%A8nes_%C3%A0_faire" class="postlink">scenes a faire</a> in the genre of cockfighting RPGs.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Tue Nov 16, 2010 9:25 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">65024U wrote:</div><div class="quotecontent">And those 256K of graphics are JUST the pokemon. (Not going to call the game or them that, BTW) I'd need probably 32K more for the other graphics I would use, characters, backgrounds, etc.</div>
<br />So that'd be about 288KB, with the simplest compression schemes you can get that down to at least 80%, or 230KB (but there are better schemes that can compress up to 65%). In a 512KB ROM you'd still have 282KB left for all the code and data. Is that really not enough?
<br />
<br />In a Pokemon game, I imagine that the next big thing after Pokemon graphics are the maps, But I believe that if you use metatiles slightly larger than usual (say, 32x32 pixels) and a decent compression scheme, you could put a lot of maps in there.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Memblers</b> [ Tue Nov 16, 2010 10:49 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">65024U wrote:</div><div class="quotecontent">You could always extend the 5-bit register then the MMC1 supports on the MMC1 board so after 5 writes to a port, if any more writes are taken to that port after that (Which would be unnecessary), make it go to a new 8-bit mode that homebrew developers could use as with standard MMC1 cart and add 3 more PRG-ROM select lines to the cart.<br /></div>
<br />
<br />Interesting idea, but why still call it the MMC1?  Personally, I don't see a use for MMC1 compatibility unless it's for making repro/bootleg/pirate carts (which is not something I'm interested in selling..).  It's the only mapper (AFAIK) that takes serial input, and probably for a good reason - it's a kinda crappy way to do it (and on a CPLD, inputs are "free", they don't use up any internal resources, just the physical pin itself).
<br />
<br />The mapper that I'm working on, that I mentioned in my previous post could use a 1MB ROM.  But the version of the board that I'm planning is 512kB max.  I'm still skeptical that anyone will <em>need</em> that much ROM so soon.  That would be the biggest single (not multicart) NES game ever made.
<br />
<br />If I end up using a DIP ROM package on the prototype board, I suppose I could look into make a switch to allow a 1MB EPROM to be used (my first Squeedo board could take a 1MB EPROM, BTW).  But you'd have to sacrifice a feature.  What would you rather have, less CHR-RAM banks or less WRAM banks?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Tue Nov 16, 2010 10:57 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">You could always extend the 5-bit register then the MMC1 supports on the MMC1 board so after 5 writes to a port, if any more writes are taken to that port after that (Which would be unnecessary), make it go to a new 8-bit mode that homebrew developers could use as with standard MMC1 cart and add 3 more PRG-ROM select lines to the cart. Sure you'd have to get Bunnyboy to agree and sell it, but this could be made in small batches by the community if more people would be interested in such a cart.</div>
<br />Then it will not be MMC1 any longer. What I had in mind is extensions of carts that <em>could</em> have been made with a true MMC1, but haven't.
<br />
<br />DW4 was ovedrumped with the assumption that D5 of Reg1 is the 256kb switch (which is true) and that D5 of Reg2 is the 512kb swich (which is false). That idea is interesting, but not feasible with a real MMC1 (at least not without a second circuit that'd monitor writes), so it's out of the way.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Tue Nov 16, 2010 11:06 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">65024U wrote:</div><div class="quotecontent">Yeah thats true, but it's 1MB ROM, 8K CHR-RAM :/ And I could cut it down to 512K, but that will only support it upto halfway into development IMO. :/ Could Luascripts be used to increase the bank switching to what I need? I've never used them or used them but I've heard of them alot.....</div>
<br />Why does it need to be MMC1? For the time being, increase the amount of UxROM banking bits in an emulator, make your game and come back when it's ready. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /> It could very well be that some emulators already support all 8 bits (for 4MB of PRG-ROM).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>MottZilla</b> [ Tue Nov 16, 2010 1:03 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Memblers wrote:</div><div class="quotecontent">Interesting idea, but why still call it the MMC1?  Personally, I don't see a use for MMC1 compatibility unless it's for making repro/bootleg/pirate carts (which is not something I'm interested in selling..).  It's the only mapper (AFAIK) that takes serial input, and probably for a good reason - it's a kinda crappy way to do it (and on a CPLD, inputs are "free", they don't use up any internal resources, just the physical pin itself).<br /></div>
<br />
<br />I agree with you that if you make changes that essentially make it not an MMC1 anymore, you shouldn't call it that. And if you do make those changes, it's silly not to go the extra distance to dump the slow serial access all together. MMC1's serial access was some cost saving measure from what I heard and while it works it's somewhat annoying and very slow. 
<br />
<br />It's much nicer when mappers either use a 2 register setup like FME7 with a Register Select and Data Port, or have each register right on the bus so just writes to say $8000 would switch an 8K section beginning at $8000. It's alot faster and much more simple to use that way. But the Select and Data port can work too. MMC1's serial is by far the worst for speed and code size/simplicity. 
<br />
<br />If someone were to create a new general purpose mapper today I would hope they wouldn't do any silly serial stuff. I'd hope they'd make it to more or less match the MMC3 in features for PRG and CHR banking and have an IRQ for raster effects.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Tue Nov 16, 2010 1:24 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">I imagine that the next big thing after Pokemon graphics are the maps, But I believe that if you use metatiles slightly larger than usual (say, 32x32 pixels)</div><br />Pokemon uses 32x32 pixel MTs.<br /><br /><div class="quotetitle">Memblers wrote:</div><div class="quotecontent">I don't see a use for MMC1 compatibility unless it's for making repro/bootleg/pirate carts</div><br />Other than that 1. it's emulated, which makes starting a test run as easy as Ctrl+R in my editor, and 2. it's available on boards for sale now, unlike the mapper you're working on.<br /><br /><div class="quotetitle">Memblers wrote:</div><div class="quotecontent">It's the only mapper (AFAIK) that takes serial input, and probably for a good reason - it's a kinda crappy way to do it (and on a CPLD, inputs are "free", they don't use up any internal resources, just the physical pin itself). </div><br />I imagine that saving three physical pins was a big thing back then. The PPU uses a multiplexed address and data bus (in much the same manner as the GBA cart bus), and Nintendo went to custom 28-pin pinouts for certain ROM sizes instead of using 32-pin JEDEC pinouts for probably the same reason.<br /><br /><div class="quotetitle">thefox wrote:</div><div class="quotecontent">For the time being, increase the amount of UxROM banking bits in an emulator, make your game and come back when it's ready.</div>
<br />I chose SNROM (mapper 1) instead of UxROM (mapper 2) for a game whose state won't fit in the 32 bits of a password because bunnyboy's UxROM clone board has no PRG RAM.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Tue Nov 16, 2010 1:44 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />In fact I heard that Nintendo originally planned the MMC1 to be entierely serial, where the 2 register bits would be after (or before ?) the 5 data bits.
<br />But since A13 and A14 had to be present on the MMC1 to enable SRAM anyways, they might as well use them to decode writes too (which is what they did).
<br />
<br />It's fun all the possibilities there is for mapper writes, and all of them were used at some point :
<br />- The data written to is the data written to the mapper, the adress writeen is the adress in the mapper (most common)
<br />- Part of the adress written to is mapper's registers, other part of it is data written to it (common on pirate carts)
<br />- Part of the data written is the mapper register, other part is the data (was planned for MMC1)
<br />
<br />One could even go insane and make a system where the adress written to is the data loded into the mapper while the data you write correspond to a register in the mapper.
<br />
<br />As tepples said, pin save might have been important, but On the SL1ROM board they used CHR-ROM with 4 less pins, only to add a 74HC32 with 14 pins on the board, that's an overall +10 pins..
<br />Also everyone has to agree that the MMC1 is amazing seeing how small of a chip it is. Most other mappers with comparable features are either much larger chips, or surface mounted stuff.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>2</strong> of <strong>5</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>