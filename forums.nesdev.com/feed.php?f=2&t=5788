<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=2&amp;t=5788" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2009-12-03T20:27:39-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=2&amp;t=5788</id>
<entry>
<author><name><![CDATA[essial]]></name></author>
<updated>2009-12-03T20:27:39-07:00</updated>
<published>2009-12-03T20:27:39-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5788&amp;p=53446#p53446</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5788&amp;p=53446#p53446"/>
<title type="html"><![CDATA[New here, and a question about CPU/PPU timing]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5788&amp;p=53446#p53446"><![CDATA[
Have you tried threading your application? Most PCs now have multiple cores, and I'm pretty sure your emulator is running on a single core. Believe it or not my emulator is designed from the get-go to support dual-core processing. Obviously certain operations require a lock that bottlenecks performance, but if 50% of the time, things are going 200% as fast, that's still a 150% improvement in engine speed, and that's nothing to shake a stick at.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4132">essial</a> — Thu Dec 03, 2009 8:27 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[cpow]]></name></author>
<updated>2009-12-03T20:10:22-07:00</updated>
<published>2009-12-03T20:10:22-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5788&amp;p=53444#p53444</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5788&amp;p=53444#p53444"/>
<title type="html"><![CDATA[Re: New here, and a question about CPU/PPU timing]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5788&amp;p=53444#p53444"><![CDATA[
<div class="quotetitle">essial wrote:</div><div class="quotecontent"><br />For this would require writing an assembler/compiler. I have not looked at the source of any 6502 compilers yet so I don't know how easy it would be to slip in code breaks and stepping yet. I already plan on an inline disassembler for the CPU debugger in the actual emulator though.<br /></div><br />First, koitsu, thanks for the honesty!  [seriously]  I realize that the currently available NESICIDE is not very useable.  I continue to strive to make it more so.  There's just too much users want...  <br /><br />Hello essial, you seem to be in the same line of thought as me.  The version of NESICIDE that is available online is from a year ago now and, at the time, I had built my own assembler into it.  I quickly realized after releasing it and getting honest and helpful feedback from the users here and elsewhere, that one man's assembler isn't every man's assembler.  Thus, one of the changes-in-direction I have taken is to allow use of external assemblers, and hopefully eventually compilers and linkers [though I sense less of a need/desire for that].<br /><br />I also struggled with whether or not to embed an available assembler into the tool.  I tried it with ASM6 and CA65.  But that poses other problems like having to release new versions of the IDE when new versions of the assembler are available [and there was just an update to ASM6 a month or so ago], having to re-do whatever work was necessary to rig the assembler so it could be embedded in the tool, etc.  After that, I concluded: not worth it.<br /><br />With regard to emulator accuracy, I went through the same growing pain.  The emulator in the available version is scanline based.  The one I have now is pixel-based, and passes quite a few of the test ROMs.  Like you, I have a class for the CPU, APU, and PPU, but have been stripping away much of the ++ of the C++ to gain performance.  It turns out that once you add things like: <a href="http://nesdev.com/bbs/viewtopic.php?t=5229&amp;highlight=" class="postlink">inline disassembler, execution tracer</a>, <a href="http://www.nesicide.com/images/codedatalogger2.JPG" class="postlink">Code/Data logger</a>, PPU viewer, NameTable viewer, <a href="http://nesdev.com/bbs/viewtopic.php?t=5686&amp;highlight=" class="postlink">OAM viewer</a>, and joypad logger/editor, that you screen-update at 60Hz [data updating at CPU or PPU clocks as in execution tracer] along with your emulation engine, time is of the essence.  <img src="http://forums.nesdev.com/images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3705">cpow</a> — Thu Dec 03, 2009 8:10 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[essial]]></name></author>
<updated>2009-12-03T19:26:18-07:00</updated>
<published>2009-12-03T19:26:18-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5788&amp;p=53437#p53437</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5788&amp;p=53437#p53437"/>
<title type="html"><![CDATA[New here, and a question about CPU/PPU timing]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5788&amp;p=53437#p53437"><![CDATA[
They have the source. Perfect, looks like that's one thing I can strike off my list!<br /><br />Also, I completely ripped out the PPU rendering engine (ouch) and put in the NTSC filtering library. I had a lot of problems that needed to be fixed, plus the fundamental flaw of it rendering per-scanline. Anyway, we'll see how far I can get tonight, hopefully I'll have a nice screen showing tomorrow (doubtful though :p).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4132">essial</a> — Thu Dec 03, 2009 7:26 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2009-12-03T17:36:24-07:00</updated>
<published>2009-12-03T17:36:24-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5788&amp;p=53429#p53429</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5788&amp;p=53429#p53429"/>
<title type="html"><![CDATA[New here, and a question about CPU/PPU timing]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5788&amp;p=53429#p53429"><![CDATA[
<!-- m --><a class="postlink" href="http://www.cc65.org/">http://www.cc65.org/</a><!-- m --><br /><br />All components except the C compiler are under the same permissive license as zlib and libpng.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Thu Dec 03, 2009 5:36 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[essial]]></name></author>
<updated>2009-12-03T16:25:52-07:00</updated>
<published>2009-12-03T16:25:52-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5788&amp;p=53421#p53421</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5788&amp;p=53421#p53421"/>
<title type="html"><![CDATA[New here, and a question about CPU/PPU timing]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5788&amp;p=53421#p53421"><![CDATA[
<div class="quotetitle">Banshaku wrote:</div><div class="quotecontent"><br />The idea of an IDE would be interesting since I mentioned it a few time.  But one thing for sure, it would be better to support an existing assembler like ca65 than to build another one, unless there is no way to integrate ca65 in some way. Building your own assembler means more work too.<br /></div><br /><br />I'll look into it. If it's open source I'll be in business. If not, I'll see if I can still use it, there's a few tricks you can use provided it supports certain output file types.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4132">essial</a> — Thu Dec 03, 2009 4:25 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Banshaku]]></name></author>
<updated>2009-12-03T16:23:07-07:00</updated>
<published>2009-12-03T16:23:07-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5788&amp;p=53420#p53420</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5788&amp;p=53420#p53420"/>
<title type="html"><![CDATA[New here, and a question about CPU/PPU timing]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5788&amp;p=53420#p53420"><![CDATA[
The idea of an IDE would be interesting since I mentioned it a few time.  But one thing for sure, it would be better to support an existing assembler like ca65 than to build another one, unless there is no way to integrate ca65 in some way. Building your own assembler means more work too.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3559">Banshaku</a> — Thu Dec 03, 2009 4:23 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[essial]]></name></author>
<updated>2009-12-03T11:43:45-07:00</updated>
<published>2009-12-03T11:43:45-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5788&amp;p=53403#p53403</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5788&amp;p=53403#p53403"/>
<title type="html"><![CDATA[Re: New here, and a question about CPU/PPU timing]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5788&amp;p=53403#p53403"><![CDATA[
<div class="quotetitle">thefox wrote:</div><div class="quotecontent"><br />Just a word of warning.. we still don't know everything about how the NES operates on hardware level. We've come a long way from Marat's NES.DOC but there are still a lot of small details that remain unknown. So writing an accurate emulator isn't as simple as reading one or two documents.<br /></div><br />Good thing I'm in the process of breaking down my NES to analyze the circuits and test things. Eventually I hope to write a few test roms, run it through with the monitoring tools, and see the results to test accuracy.<br /><br /><div class="quotetitle">thefox wrote:</div><div class="quotecontent"><br />I think this would be great, there  was some discussion about this on some other thread a month or two ago. If you do end up making one, I think it would be best to make the debugger use a custom API so it could be used with other emulators too.<br /></div><br />There are several methods I was thinking of. The least invasive is to simply establish a local socket connection (to keep it cross platformy), and send it PC addresses to halt out, as well as commands to set, and to query regs and memory values and such.<br /><br /><div class="quotetitle">thefox wrote:</div><div class="quotecontent"><br />Nintendulator already has a built-in debugger. FCEUX does too, but it doesn't have quite as accurate emulation as Nintendulator. They're both pretty good but not perfect. I want to see the original source code when debugging! <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" /> (This would of course need to be supported by the assembler/compiler.)<br /></div><br />For this would require writing an assembler/compiler. I have not looked at the source of any 6502 compilers yet so I don't know how easy it would be to slip in code breaks and stepping yet. I already plan on an inline disassembler for the CPU debugger in the actual emulator though.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4132">essial</a> — Thu Dec 03, 2009 11:43 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[thefox]]></name></author>
<updated>2009-12-03T11:30:34-07:00</updated>
<published>2009-12-03T11:30:34-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5788&amp;p=53401#p53401</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5788&amp;p=53401#p53401"/>
<title type="html"><![CDATA[Re: New here, and a question about CPU/PPU timing]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5788&amp;p=53401#p53401"><![CDATA[
<div class="quotetitle">essial wrote:</div><div class="quotecontent"><br />Of course when I'm done I'm releasing it open source and free. My goal is to code my system in such a way that it passes all of those timing and compatibility tests. It seems most emulators fail these tests due to inherit flaws (or shortcuts) in the way it emulates things. I am trying to code it to be as close to the real thing as possible, and plan on passing all of the test ROMs.<br /></div><br />Just a word of warning.. we still don't know everything about how the NES operates on hardware level. We've come a long way from Marat's NES.DOC but there are still a lot of small details that remain unknown. So writing an accurate emulator isn't as simple as reading one or two documents.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Oh and also, would an IDE and compiler with debugging/tracing/stepping support be welcomed here for NES programming or are there already things for that? I was considering doing something like that once I get the emulator running smoothly.<br /></div><br />I think this would be great, there  was some discussion about this on some other thread a month or two ago. If you do end up making one, I think it would be best to make the debugger use a custom API so it could be used with other emulators too.<br /><br />Nintendulator already has a built-in debugger. FCEUX does too, but it doesn't have quite as accurate emulation as Nintendulator. They're both pretty good but not perfect. I want to see the original source code when debugging! <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" /> (This would of course need to be supported by the assembler/compiler.)<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=80">thefox</a> — Thu Dec 03, 2009 11:30 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[essial]]></name></author>
<updated>2009-12-03T11:10:42-07:00</updated>
<published>2009-12-03T11:10:42-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5788&amp;p=53399#p53399</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5788&amp;p=53399#p53399"/>
<title type="html"><![CDATA[New here, and a question about CPU/PPU timing]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5788&amp;p=53399#p53399"><![CDATA[
<div class="quotetitle">kyuusaku wrote:</div><div class="quotecontent"><br /><div class="quotetitle">essial wrote:</div><div class="quotecontent"> But the decimal points tell me that I need to add timing logic for the PPU instead of simply running it once per loop.<br /></div><br />If you think about it the CPU is divided by 12, the PPU by 4, exactly. That makes exactly 3 PPU cycles for every CPU, you're looking at round-off error.</div><br /><br />*facepalm*<br /><br />I can write an 2A03 CPU emulator but I couldn't immediately see that 12/4 ratio. Wow.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4132">essial</a> — Thu Dec 03, 2009 11:10 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[kyuusaku]]></name></author>
<updated>2009-12-03T11:13:03-07:00</updated>
<published>2009-12-03T11:04:12-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5788&amp;p=53398#p53398</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5788&amp;p=53398#p53398"/>
<title type="html"><![CDATA[New here, and a question about CPU/PPU timing]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5788&amp;p=53398#p53398"><![CDATA[
<div class="quotetitle">essial wrote:</div><div class="quotecontent"><br />But the decimal points tell me that I need to add timing logic for the PPU instead of simply running it once per loop.<br /></div><br />If you think about it the CPU is divided by 12, the PPU by 4, exactly. That makes exactly 3 PPU cycles for every CPU, you're looking at round-off error. When I tinkered with emulation I synced everything to the CPU and only caught up the PPU on any PPU actions. The CPU was then synced to the screen update, pretty easy solution.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=20">kyuusaku</a> — Thu Dec 03, 2009 11:04 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[essial]]></name></author>
<updated>2009-12-03T10:58:43-07:00</updated>
<published>2009-12-03T10:58:43-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5788&amp;p=53397#p53397</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5788&amp;p=53397#p53397"/>
<title type="html"><![CDATA[New here, and a question about CPU/PPU timing]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5788&amp;p=53397#p53397"><![CDATA[
<div class="quotetitle">tepples wrote:</div><div class="quotecontent"><br /><div class="quotetitle">essial wrote:</div><div class="quotecontent">Nevermind, I'll answer myself. I found another doc that goes into much better detail about the PPU. It's 3 CPU cycles per PPU cycle<br /></div><br />Backwards?</div><br /><br />OK, I'll try to do the math, and correct me if I'm wrong about any of this.<br /><br />The NES as a master clock that runs at 21.477272mhz. The CPU divisor is 12, which results in a CPU clock of roughly 1.7897727mhz. The PPU runs with a divisor of 4, which results in a PPU clock of roughly 5.369318mhz<br /><br />So yeah, since the CPU seems to runs slower than the PPU, the ratio of CPU:PPU would be<br />5.369318(ppu) / 1.7897727(cpu) = 2.999999944126983x<br /><br />So from the math above, I was wrong and you are right, ~3 PPU cycles per CPU cycle. But the decimal points tell me that I need to add timing logic for the PPU instead of simply running it once per loop.<br /><br />Let me know if this looks right/wrong to you.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4132">essial</a> — Thu Dec 03, 2009 10:58 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[essial]]></name></author>
<updated>2009-12-03T10:45:26-07:00</updated>
<published>2009-12-03T10:45:26-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5788&amp;p=53395#p53395</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5788&amp;p=53395#p53395"/>
<title type="html"><![CDATA[Re: New here, and a question about CPU/PPU timing]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5788&amp;p=53395#p53395"><![CDATA[
<div class="quotetitle">koitsu wrote:</div><div class="quotecontent"><br />Can you explain what this means?  I can't speak for others, but programming for a console doesn't require (or even justify) an IDE; and compile what?  Are you using cc65 (and not the ca65 part) to write C on the NES?<br /></div><br />Well would it not be helpful to trace through lines of code step by step, and evaluate registers on each line during execution? Also although I haven't done any NES dev yet, from writing this emulator I can tell that you need editors for creating SPR data, as well as sound.<br /><br />As far as the IDE goes, it would just be a central place for all NES editing. You can simply file-&gt;new project, and do all of your code, graphics, and sound through the IDE, and when you run the game in debug mode, it can break on lines and let you trace through and inspect certain values, as well as registers. Maybe other helpful info like current scanline and current scanline position and such as well.<br /><br /><div class="quotetitle">koitsu wrote:</div><div class="quotecontent"><br />If you're saying "Does anyone want a NES emulator with nametable viewing, a real-time debugger with breakpoints, stepping, conditionals, etc., as well as something that lets you view register status, PPU internal details, a CHR viewer/editor, etc.?" then the answer is more or less yes.<br /><br />I'd like to see the debugging capabilities of numerous emulators (FCEUXD, Nintendulator, NESICIDE (so far the usability of the last one is basically nil)) combined into one, using the PPU accuracy portion of Nintendulator, but with the UI and overall usability ease + feature base of Nestopia.<br /></div><br /><br />Well without over complicating things, I figure if I get the emulator emulating as accurately as possible, then provide tools for tracing into the code, as well as SPR RAM viewing and other things, that would be of help to developers. Obviously once I get to this point I'll post back for suggestions.<br /><br />As for UI, I'm not currently settled on an API for this. Since I use libSDL for the drawing, my knee-jerk reaction is to create a UI in it directly, but I do not think this is a good idea. I think I will end up using either gtk or wxWidgets for the UI interface, I prefer native UIs over custom ones.<br /><br /><div class="quotetitle">koitsu wrote:</div><div class="quotecontent"><br />A simpler version of what I said: Nestopia with all of the debugging features of the above 3 emulators combined, without losing the decently-written UI.<br /></div><br /><br />I'm not sure which "features" each individual emulator has. But if I make my emulator pass as many compatibility tests as possible, and emulate all of the major mappers as well, I'm assuming it will be fine to come back here and ask you guys what debugging/editing features you'd like to see.<br /><br /><div class="quotetitle">koitsu wrote:</div><div class="quotecontent"><br />Oh, and if someone would get around to implementing blargg's APU core into a NES emulator, that'd be preferred as well.<br /></div><br /><br />APU core? I know of Blarggs NTSC filtering and I have sent him an email directly already. I plan on using his NTSC filtering exclusively to produce as true-to-form of a display output as possible.<br /><br /><div class="quotetitle">koitsu wrote:</div><div class="quotecontent"><br />Damn, I'm just asking for everything under the Christmas tree aren't I?<br /></div><br />Well, it is December <img src="http://forums.nesdev.com/images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /> But I doubt I'll be finished anytime close to christmas.. I've been working on it for 2 months in my free time already.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4132">essial</a> — Thu Dec 03, 2009 10:45 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2009-12-03T10:31:02-07:00</updated>
<published>2009-12-03T10:31:02-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5788&amp;p=53392#p53392</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5788&amp;p=53392#p53392"/>
<title type="html"><![CDATA[New here, and a question about CPU/PPU timing]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5788&amp;p=53392#p53392"><![CDATA[
<div class="quotetitle">essial wrote:</div><div class="quotecontent"><br />Nevermind, I'll answer myself. I found another doc that goes into much better detail about the PPU. It's 3 CPU cycles per PPU cycle<br /></div><br />Backwards?<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />but it looks like I need to re-write my PPU logic to work on a per-cycle basis instead of a per-scanline one.<br /></div><br />True, in part because a couple games use mid-scanline raster effects. But you can still run the PPU for an entire scanline at a time as long as the CPU "timestamps" all writes to the PPU. Special handling is needed for reads from PPU register $2002 in lines close to sprite 0 and cases where a mapper watching the PPU can interrupt the CPU, like MMC3.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Although I do wonder if emulators properly drop the odd cycle on scanline 20 of every odd frame (NTSC color burst stuff)..<br /></div><br />Blargg probably has a test for it.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Thu Dec 03, 2009 10:31 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[koitsu]]></name></author>
<updated>2009-12-03T10:25:40-07:00</updated>
<published>2009-12-03T10:25:40-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5788&amp;p=53391#p53391</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5788&amp;p=53391#p53391"/>
<title type="html"><![CDATA[Re: New here, and a question about CPU/PPU timing]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5788&amp;p=53391#p53391"><![CDATA[
<div class="quotetitle">essial wrote:</div><div class="quotecontent"><br />Oh and also, would an IDE and compiler with debugging/tracing/stepping support be welcomed here for NES programming or are there already things for that?<br /></div><br /><br />Can you explain what this means?  I can't speak for others, but programming for a console doesn't require (or even justify) an IDE; and compile what?  Are you using cc65 (and not the ca65 part) to write C on the NES?<br /><br />If you're saying "Does anyone want a NES emulator with nametable viewing, a real-time debugger with breakpoints, stepping, conditionals, etc., as well as something that lets you view register status, PPU internal details, a CHR viewer/editor, etc.?" then the answer is more or less yes.<br /><br />I'd like to see the debugging capabilities of numerous emulators (FCEUXD, Nintendulator, NESICIDE (so far the usability of the last one is basically nil)) combined into one, using the PPU accuracy portion of Nintendulator, but with the UI and overall usability ease + feature base of Nestopia.<br /><br />A simpler version of what I said: Nestopia with all of the debugging features of the above 3 emulators combined, without losing the decently-written UI.<br /><br />Oh, and if someone would get around to implementing blargg's APU core into a NES emulator, that'd be preferred as well.  Damn, I'm just asking for everything under the Christmas tree aren't I?<br /><br />At present, at least if you're using emulators for debugging/development, you end up having to use 3 or 4 separate emulators to achieve a development environment.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3">koitsu</a> — Thu Dec 03, 2009 10:25 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[essial]]></name></author>
<updated>2009-12-03T09:23:22-07:00</updated>
<published>2009-12-03T09:23:22-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5788&amp;p=53387#p53387</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5788&amp;p=53387#p53387"/>
<title type="html"><![CDATA[New here, and a question about CPU/PPU timing]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5788&amp;p=53387#p53387"><![CDATA[
Nevermind, I'll answer myself. I found another doc that goes into much better detail about the PPU. It's 3 CPU cycles per PPU cycle, but it looks like I need to re-write my PPU logic to work on a per-cycle basis instead of a per-scanline one.<br /><br />Although I do wonder if emulators properly drop the odd cycle on scanline 20 of every odd frame (NTSC color burst stuff)..<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4132">essial</a> — Thu Dec 03, 2009 9:23 am</p><hr />
]]></content>
</entry>
</feed>