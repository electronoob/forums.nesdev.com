<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Is this a feasible means of eliminating slowdown?</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Is this a feasible means of eliminating slowdown?</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=9809">http://forums.nesdev.com/viewtopic.php?f=2&amp;t=9809</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Heavy</b> [ Thu Feb 14, 2013 6:41 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Is this a feasible means of eliminating slowdown?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />In Contra, just to have an example, the game slows down when there's a lot of action happening.  What if invisible sprites (or whatever) were added in whenever a lot of action <em>isn't</em> happening in order to keep the game constantly running at &quot;slowdown&quot; speed, and then the overall speed of the game was just &quot;turned up&quot;?  By that, I mean like each moving object in the game is modified to move faster.  As in, every single velocity (or is it just speed?) setting is recalculated.  Also, the music would be resequenced to play at a faster tempo.  Okay, this may not be <em>feasible</em>, but is this at least possible?  Or am I missing something?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Thu Feb 14, 2013 6:49 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Is this a feasible means of eliminating slowdown?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />What you describe is slowing the entire game to less than 60 fps. A few games did this, such as anything developed by Micronics, Bugs Bunny Birthday Blowout, every Super FX game that isn't Yoshi's Island, and almost all PlayStation and Nintendo 64 games. Some Game Boy games ran at a low frame rate to compensate for the original Game Boy's slow LCD, such as Balloon Kid (and its NES port Hello Kitty World).<br /><br />Other games update only half the objects each frame, such as enemies in Mega Man or explosions and smoke particles in Thwaite. Or they will run certain tasks only every few frames, such as the 21-frame IntervalTimerControl cycle of Super Mario Bros. or the 6-frame tenths cycle of Thwaite.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dwedit</b> [ Thu Feb 14, 2013 8:29 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Is this a feasible means of eliminating slowdown?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />You don't need to go through all that to make more slowdown.<br /><br />Just count frames.  If you want the game to run at 30FPS, and the game has finished all its calculations within 1 frame, wait another frame before running the game logic.<br /><br />And you should never need to sabotage the music.  You have interrupts, music code can always be run every frame with no problems, if you do it correctly.  If a game slows down the music during heavy action, it isn't programmed correctly.  If the music pauses while the game switches screens (I'm looking at you, Bases Loaded), it's also programmed incorrectly.<br /><br />Also, Wizards and Warriors 3 ran at half speed, but interpolated all the motion so you couldn't tell that it wasn't full speed.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>MottZilla</b> [ Thu Feb 14, 2013 10:53 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Is this a feasible means of eliminating slowdown?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Ignoring the possible sound issues, you could overclock the system to eliminate slowdown. The main games I remember having alot of slowdown at times were TMNT1 and Kirby's Adventure when using certain powers. It was annoying in TMNT1, but in Kirby not so much. <br /><br />If you're emulating, or if you can engineer some sound solution, you could offload the entire sound driver to free up CPU time. Instead of having the NES CPU handling all of that it could just write sound commands to a register that would play the appropriate effects or musical arrangements. <br /><br />Finally, you could investigate what exactly is happening when the game slows down and see if there isn't something that could by optimized somehow. When many games were programmed they didn't have time to truly optimize performance. And the #1 priority was that the game works, slowdowns were acceptable. Glitches not so much.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Shiru</b> [ Fri Feb 15, 2013 1:00 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Is this a feasible means of eliminating slowdown?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />30 fps in 2D scrolling games looks pretty bad, actually. It is better to design the game and optimize the ccode in a way that will prevent any slowdowns.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Fri Feb 15, 2013 4:47 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Is this a feasible means of eliminating slowdown?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Shiru wrote:</div><div class="quotecontent">30 fps in 2D scrolling games looks pretty bad, actually.</div><br />I agree, the scrolling makes it really noticeable. One option would be to slowdown other things but not the scrolling itself. I don't think it would be too annoying if only the enemies (which are often the biggest cause of slowdowns) slowed down.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Fri Feb 15, 2013 11:17 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Is this a feasible means of eliminating slowdown?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />30fps generated by showing a frame twice isn't merely more choppy than 60fps; since it involves each image being shown for two frames, it greatly increases sample-and-hold motion blur when your eyes follow moving objects. That is, if the flicker weren't so awful, it would actually look smoother if the game put up a black screen every other frame in order to achieve 30 fps. Note that this all applies to a CRT or other display that only displays the image for a tiny fraction of the frame duration.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Fri Feb 15, 2013 11:41 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Is this a feasible means of eliminating slowdown?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Any YouTube video of an NES game will show you what it would look like at 30hz. I love the smoothness of 60hz, but I don't think it looks unacceptable to run at 30hz. Outside of the car racing genre, most modern 3D console games target 30hz to give the renderer more time.<br /><br />Anyhow, for some games you can probably eliminate slowdown just by having the emulator overclock the CPU. Make sure that the PPU, IRQs, and the APU still run at the regular speed, and just have the CPU execute twice as fast maybe.<br /><br />There are many games that rely heavily on CPU timing that this won't work at all for (e.g. Battletoads or Rad Racer would require code hacks to compensate for the timing difference) though these games might not have slowdown at all, since timing is critical in these situations they may have been careful not to let it happen. A lot of games will rely on a little bit of CPU timing, especially where split-scrolling is involved, and these may be made slightly-to-very buggy by overclocking.<br /><br />I guess a rule of thumb is if you can run an NTSC game in PAL mode or vice versa without problems, overclocking the CPU will likely be okay for the game.<br /><br />Another thing you might try is only overclocking when not inside NMI, if you find a game where the NMI code's timing is critical (e.g. rendering, status bar), but the non-critical update (e.g. characters/gameplay) is outside the NMI.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>MottZilla</b> [ Fri Feb 15, 2013 12:33 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Is this a feasible means of eliminating slowdown?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />My emulator has an overclocking feature that just adjusts the ratio of PPU clocks to CPU clocks. Most games work just fine, but it depends obviously how other components in your emulator work. TMNT1 gets a very nice improvement. <br /><br />Another way to reduce slowdown that has been mentioned in emulation is to add fake lines. After the last rendered line before NMI you could run the CPU for many extra scanlines worth of time to allow game logic to finish up this frame's processing. Although for TMNT1, you'd want extra scanlines of processing to be available towards the beginning of drawing and not the end since it needs to complete processing before the status bar at the bottom is to be rendered. Other games obviously that would be bad like Zelda or SMB1 would waste all that extra time waiting for sprite zero. <br /><br />I guess one thing you could do that might be fairly compatible would be at line 120 stop rendering or updating sound and just run the CPU for some extra lines worth of time. If you added around 38 dummy scanlines at 120 it would be something like having the CPU running at a bit over 2mhz. Maybe your emulator could let the user adjust how many dummy scanlines to give the CPU, and at what scanline position.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dwedit</b> [ Fri Feb 15, 2013 1:06 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Is this a feasible means of eliminating slowdown?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Overclocking?<br />I just reused Dendy Mode, and set the frame rate to 60FPS.  Only issue is that the APU frame counter runs a little faster than normal, so sweeps and envelopes are too fast.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Fri Feb 15, 2013 1:55 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Is this a feasible means of eliminating slowdown?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />You can &quot;overclock&quot; emulators by adding a bunch of scanlines (maybe 240, 480 or even more) between the end of the display and the start of VBlank. Most timed effects use the start of VBlank or the start of the visible frame as reference, so this modification will give more time for the game engines without breaking timed code in most cases. It will probably still break some games that rely on the time between frames, but I imagine those are very few.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Fri Feb 15, 2013 2:33 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Is this a feasible means of eliminating slowdown?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Say you have developed a game for NES emulators, and it turns out to be overclock-dependent and won't run well on the NES. If you don't want to take it down to 30 fps, there's always the option to port it to the Super NES, which gives you several ways to speed up the game engine. You get a 70% faster CPU (on average, assuming fast ROM and slow RAM), 16-bit adds for faster game physics calculations, a bunch of RAM to decompress entire maps instead of having to unpack a row or column at a time, a sane map format instead of bit-packed attributes in a separate part of the nametable, sound engine offloading, a second layer for the status bar so that you don't have to spin on sprite 0, and even the equivalent of Blast Processing to fill the CHR RAM quickly and to push nametable rows and columns into VRAM more quickly.<br /><br />Tokumaru: That's what Dendy does. To make 60 Hz games run on a 50 Hz console, it inserts 50 extra post-render lines before NMI.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>psycopathicteen</b> [ Sun Feb 17, 2013 5:24 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Is this a feasible means of eliminating slowdown?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />If you still want to do the &quot;always in 30fps slowdown mode&quot; method, you don't need to display extra sprites.  You can cause slowdown by adding a &quot;waste time&quot; routine, like this:<br /><br />lda #$ff<br />waste_time:<br />dec<br />bne waste_time

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Sun Feb 17, 2013 5:46 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Is this a feasible means of eliminating slowdown?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">psycopathicteen wrote:</div><div class="quotecontent">lda #$ff<br />waste_time:<br />dec<br />bne waste_time</div><br />Just like I said in <a href="http://forums.nesdev.com/viewtopic.php?p=107830#p107830" class="postlink">another thread</a> earlier today: why guess arbitrary delays when the system gives you all the information you need? Think about it: you have a dummy loop that wastes 10,000 cycles hoping that this will make frames with few enemies take longer, but what happens on busy frames? You'll most likely get 3 repeated frames, instead of 2. Not so &quot;always in 30fps slowdown mode&quot; now is it?<br /><br />The PPU tells you when each frame is rendered, so just count the freaking VBlanks. Every other VBlank you update the PPU so it can draw a new frame, otherwise just return from the interrupt and let the game logic continue. This will get you a steady 30fps (unless things get insanely busy to the point where 2 frames aren't enough to process a single game frame).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>MottZilla</b> [ Sun Feb 17, 2013 10:06 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Is this a feasible means of eliminating slowdown?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">You can &quot;overclock&quot; emulators by adding a bunch of scanlines (maybe 240, 480 or even more) between the end of the display and the start of VBlank. Most timed effects use the start of VBlank or the start of the visible frame as reference, so this modification will give more time for the game engines without breaking timed code in most cases. It will probably still break some games that rely on the time between frames, but I imagine those are very few.</div><br /><br />Indeed, for emulators it would seem extending the rendering peroid by some crazy amount of scanlines would be the most compatible way of reducing slowdown. Most timed raster effects would not be impacted and you would be far more likely to never miss a frame update. I don't think 480 extra lines are needed in most cases. Something like 394 total scanlines (132 extra) would be close to SNES SlowROM speed. If you added 480 extra lines that would be similar to having the NES CPU running at over 5mhz I believe.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>