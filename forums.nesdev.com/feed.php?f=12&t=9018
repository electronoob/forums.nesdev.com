<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=12&amp;t=9018" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2012-06-17T23:16:58-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=12&amp;t=9018</id>
<entry>
<author><name><![CDATA[kyuusaku]]></name></author>
<updated>2012-06-17T23:16:58-07:00</updated>
<published>2012-06-17T23:16:58-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9018&amp;p=95593#p95593</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9018&amp;p=95593#p95593"/>
<title type="html"><![CDATA[Adding RAM retention to Game Doctor]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9018&amp;p=95593#p95593"><![CDATA[
What??? You know that's what the AC adapter input is for?<br /><br />Insert it and the DRAM &amp; SRAM is retained... That's actually the GD's most famous selling point!<br /><br />Or get a 9V battery pack if for some reason you require it to be battery backed. Get a big one because it must keep the oscillator, ASIC and DRAM powered, a rather large current draw.<br /><br />---<br /><br />The idea to replace the DRAM with 32M of SRAM is ridiculous, the RAM will cost more than a GDSFIII is worth and honestly doesn't make any sense. Don't waste your money or capable parts building this.<br /><br />If you are just curious about adapting DRAM to SRAM in your design I don't understand why you need two CR2032s. LP SRAM as typical in battery backup applications retains state at well under 3V since their point is to be powered by a 3V battery and holdout to the knee voltage. Also using a linear regulator in a battery circuit is a quick way to drain your battery. Diodes are only needed if you're going to do an OR-wired supply where current is diverted from the battery to the console's rail when active. In that case just put a 1K resistor in series with the battery, use fast switching diodes and decouple VDD well.<br /><br />As for the logic, you don't need "demultiplexers" (usually referred to as decoders) to demultiplex the address bus*, you would need negative-edge-triggered registers to hold row and column address bits for the SRAM. Latches as mentioned will not work since in DRAM systems /RAS is asserted *through* the /CAS strobe and thus the row latch will be corrupted by the column address.<br /><br />*you would need a '138 or similar because you must decode the most significant address lines to select your 4M or 16M chips<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=20">kyuusaku</a> — Sun Jun 17, 2012 11:16 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[petik1]]></name></author>
<updated>2012-06-17T18:35:01-07:00</updated>
<published>2012-06-17T18:35:01-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9018&amp;p=95588#p95588</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9018&amp;p=95588#p95588"/>
<title type="html"><![CDATA[Adding RAM retention to Game Doctor]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9018&amp;p=95588#p95588"><![CDATA[
I've been wondering how I could add a backup battery to my Game Doctor, since its RAM is wiped every time you unplug the device. In this thread (<!-- m --><a class="postlink" href="http://www.famicomworld.com/forum/index.php?topic=7955.0">http://www.famicomworld.com/forum/index ... pic=7955.0</a><!-- m -->) we've already established that the GD uses DRAM, which will need to be replaced with SRAM. I come to you guys for a little extra technical advice on how to do so. Thanks!<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5173">petik1</a> — Sun Jun 17, 2012 6:35 pm</p><hr />
]]></content>
</entry>
</feed>