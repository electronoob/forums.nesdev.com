<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=10&amp;t=2973" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2007-03-01T12:30:24-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=10&amp;t=2973</id>
<entry>
<author><name><![CDATA[Jeff Garneau]]></name></author>
<updated>2007-03-01T12:30:24-07:00</updated>
<published>2007-03-01T12:30:24-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=2973&amp;p=22236#p22236</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=2973&amp;p=22236#p22236"/>
<title type="html"><![CDATA[P65 vernacular]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=2973&amp;p=22236#p22236"><![CDATA[
<!-- m --><a class="postlink" href="http://hkn.berkeley.edu/~mcmartin/P65/ref.html">http://hkn.berkeley.edu/~mcmartin/P65/ref.html</a><!-- m --><br /><br />that's where the p65 documentation for directives is.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">.space dx 1</div><br /><br />this sort of sets aside one byte of space that you can refer to as "dx" later on.  in nes101 it's used to basically declare dx as a variable.  you can use higher numbers if you need more bytes.  in nes101 the author uses "FF" in that space to mean the diamond moves to the left and "01" to mean the diamond moves to the right.<br /><br />.word defines a 16-bit area of memory. i.e.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">.org $200<br />.word $FF00</div><br />this makes the first 16 bits of page two read 1111111100000000.<br /><br /><br />on the other hand i am a beginner so i could be totally wrong.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=2577">Jeff Garneau</a> — Thu Mar 01, 2007 12:30 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2007-02-20T07:07:38-07:00</updated>
<published>2007-02-20T07:07:38-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=2973&amp;p=22065#p22065</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=2973&amp;p=22065#p22065"/>
<title type="html"><![CDATA[P65 vernacular]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=2973&amp;p=22065#p22065"><![CDATA[
The CA65 toolchain also uses segments; see its <a href="http://www.cc65.org/doc/ld65-5.html#ss5.2" class="postlink">manual's section 5.2 on segments</a>. See also <a href="http://m68hc11.serveftp.org/doc/as_4.html" class="postlink">GNU Assembler Manual: Sections</a> to see the rationale behind "sections", the name under UNIX for segments.<br /><br />Under a typical CC65 configuration, there are a couple standard segments for variables that start at a given value: RODATA for constant data that should stay in ROM and DATA for data copied from ROM to RAM at reset. There are also a couple standard segments for variables that are simply cleared at reset: ZP for variables in $00-$FF and BSS for variables in $0200-$07FF or $6000-$7FFF depending on the board you described in the linker script.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Tue Feb 20, 2007 7:07 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[noattack]]></name></author>
<updated>2007-02-19T18:02:09-07:00</updated>
<published>2007-02-19T18:02:09-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=2973&amp;p=22058#p22058</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=2973&amp;p=22058#p22058"/>
<title type="html"><![CDATA[P65 vernacular]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=2973&amp;p=22058#p22058"><![CDATA[
I've been tooling around with P65 as an assembler (python version) and though it doesn't seem many of you use it, I thought you might be able to help me sort out some of the assembler-specific 'language' it uses.  For instance, in the NES 101 tutorial, there is the following code:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">; Allocate memory in the zero page segment<br />.segment zp<br />.org $0000<br />.space dx 1<br />.space a 1<br />.space scroll 1</div><br /><br />.org makes sense as a memory starting address, but the .segment and .space directives don't make much sense to me, and the P65 documentation isn't much help.<br /><br />I am similarly in the dark about .word and .text.  For example:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">; Actual program code.  We only have one PRG-ROM chip here, so the<br />; origin is $C000.<br />.text<br />.org $C000</div><br /><br />I understand <em>what</em> this is doing, but not <em>why</em> .text is used.<br /><br />Anyone have any input on this?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=2462">noattack</a> — Mon Feb 19, 2007 6:02 pm</p><hr />
]]></content>
</entry>
</feed>