<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Conflicting info on APU Noise Channel's RNG taps</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Conflicting info on APU Noise Channel's RNG taps</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=3&amp;t=6069">http://forums.nesdev.com/viewtopic.php?f=3&amp;t=6069</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>jwdonal</b> [ Sat Feb 20, 2010 5:14 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Conflicting info on APU Noise Channel's RNG taps</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Hello all!  It's good to be back!!  I took quite a long hiatus from my SystemVerilog-based NES-on-an-FPGA emulator development.  I was extremely busy with some job-related work trying to meet our delivery date for MISSE-8 (Materials International Space Station Experiment).  But that's all finished now.
<br />
<br />Rather than iron out bugs in the CPU and PPU (which are mostly complete and functional) I'm going to start working on the APU (I need a change of scenery!).  Then I want to implement at least a few of the most common mappers.  But right off the bat I've already met with some conflicting APU information - which is to be expected.
<br />
<br />Specifically, in Blargg's "NES APU Sound Hardware Reference" <a href="http://nesdev.com/apu_ref.txt" class="postlink">http://nesdev.com/apu_ref.txt</a> it says the RNG (Random Number Generator) taps for the Noise channel are "bits 0 and 1 (mode = 0) or bits 0 and 6 (mode = 1)".  And in this example I can't tell if Blargg is using Big/Little-Endian notation (i.e. 14-0 or 0-14).  From the posts I've seen on NesDev I would tend to trust Blargg's documentation over anyone else's since he is extremely knowledgeable about APU stuff and is very active in the forums.
<br />
<br />In Brad Taylor's "2A03 Technical Reference" it says the taps are bits 14 and 13 (mode = 0) and bits 8 and 2 (mode 1).
<br />
<br />And these are just two examples of the many documents out there with APU information.  Does anyone have the FINAL word on which are the _exact_ RNG tap bits used in the original 2A03?  And please specify how you are numbering the bits (0-14) or (14-0).
<br />
<br />Yes, maybe I'm being a little nit-picky on which bits to use, but as I've said in other posts I want my hardware emulator to be as absolutely accurate and true to the original implementation as possible.
<br />
<br />Thanks in advance! <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Sat Feb 20, 2010 9:53 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />From earlier in apu_ref.txt: "Bits are numbered from 0 to 7, corresponding with the least to most significant bits of a byte; bit n has a binary weight of 2^n."  though I suppose binary weight has no meaning in the noise LFSR...
<br />
<br />The <a href="http://wiki.nesdev.com/w/index.php/APU_Noise" class="postlink">wiki page</a> has a little diagram that seems clearer.
<br />
<br />Shift register bits: 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0
<br />
<br />1) Bit 15 of the shift register is replaced with the exclusive-OR of bit 0 and one other bit: bit 6 if loop is set, otherwise bit 1. 
<br />
<br />2) Then, the shift register is shifted one bit right (bit 0 is lost).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>jwdonal</b> [ Sat Feb 20, 2010 10:02 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Hmmm...OK, but...</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Okay, that does help.  But now I'm confused on something else. <img src="./images/smilies/icon_razz.gif" alt=":-P" title="Razz" />
<br />
<br />Is the shift register actually 16 bits (15-0) as you state above (and as said in the Wiki) or is it 15 bits (14-0) as you state in your APU Reference doc?
<br />
<br />Thanks for your help! <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Zepper</b> [ Sun Feb 21, 2010 6:16 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">blargg wrote:</div><div class="quotecontent">Shift register bits: 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0</div><br /><br />- So, 16 bits <em>unsigned short</em>.<br /><br /><div class="quotetitle">APU ref wrote:</div><div class="quotecontent">The noise channel starts at register $400C and contains the following: Length Counter, Envelope Generator, Timer, <strong>15-bit right shift register</strong> with feedback, 4-bit DAC.</div>
<br />
<br />- Hmm, got it. Should it be 16-bit..?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Jarhmander</b> [ Sun Feb 21, 2010 9:37 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />blargg was subject to <a href="http://en.wikipedia.org/wiki/Off-by-one_error" class="postlink">off-by-one error</a> when counting bits, but he actually said that there's 15 bits to the LFSR (14-0) because <a href="http://en.wikipedia.org/wiki/Linear_feedback_shift_register#Some_polynomials_for_maximal_LFSRs" class="postlink">it'd have required 2 more taps for 16 bits</a>. And anyways, with 16 bits the maximum sequence would have been 65535 bits, which would be incorrect.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>jwdonal</b> [ Sun Feb 21, 2010 10:26 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Nice catch</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">~J-@D!~ wrote:</div><div class="quotecontent">but he actually said that there's 15 bits to the LFSR (14-0) because <a href="http://en.wikipedia.org/wiki/Linear_feedback_shift_register#Some_polynomials_for_maximal_LFSRs" class="postlink">it'd have required 2 more taps for 16 bits</a>. </div>
<br />
<br />This is an excellent catch.  Yes, two more taps would be required for a 16-bit LFSR - I should've caught that one! Grrr.  Haha.
<br />
<br />I think someone should fix the Wiki page then since it says the shift register is 16 bits, and refers to bit 15 which does not even exist.  Any takers?  I don't feel I have enough seniority here yet to be messing with the NesDev wiki pages. <img src="./images/smilies/icon_razz.gif" alt=":-P" title="Razz" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sun Feb 21, 2010 10:35 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Nice catch</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">jwdonal wrote:</div><div class="quotecontent">I think someone should fix the Wiki page then since it says the shift register is 16 bits, and refers to bit 15 which does not even exist.  Any takers?  I don't feel I have enough seniority here yet to be messing with the NesDev wiki pages. <img src="./images/smilies/icon_razz.gif" alt=":-P" title="Razz" /></div>
<br />Mess all you want. If you can demonstrate that your changes are constructive, you don't need forum seniority; you can build wiki seniority.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Zepper</b> [ Sun Feb 21, 2010 10:39 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />- Done, but it's subject to un-do. -_-;;

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Zepper</b> [ Sun Feb 21, 2010 11:11 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />- For my best, the "-" means unused bits, not properly the length of a number. Anyway, for PC programming and general thinks:
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">unsigned short shift_reg; //is more usual than...<br />unsigned shift_reg : 14;</div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Sun Feb 21, 2010 1:04 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">~J-@D!~ wrote:</div><div class="quotecontent">blargg was subject to <a href="http://en.wikipedia.org/wiki/Off-by-one_error" class="postlink">off-by-one error</a> when counting bits, but he actually said that there's 15 bits to the LFSR (14-0)</div><br />I don't see any off-by-one errors <strong>[wait, now I see that the Wiki page is wrong, describing it as if it only has 14 bits... corrected now]</strong>. In apu_ref, I used what I consider a slightly more confusing description:<br /><div class="quotetitle">apu-ref.txt wrote:</div><div class="quotecontent">The noise channel starts at register $400C and contains the following: [...] 15-bit right shift register with feedback [...]<br /><br />The shift register is clocked by the timer and the vacated bit 14 is filled with the exclusive-OR of *pre-shifted* bits 0 and 1 (mode = 0) or bits 0 and 6 (mode = 1), resulting in 32767-bit and 93-bit sequences, respectively.</div>
<br />It requires the concept of the "vacated bit 14" and "pre-shifted bits". When doing the wiki, I simplified this by breaking it into two steps. In the first, you do the XOR and <em>replace</em> a bit, <em>then</em> shift right. If you run it in your mind, you will see that while it uses 16 bits between the two steps, you only need 15 bits of state for the LFSR otherwise. Replacing bit 15 (the left-most) and shifting right clearly shows it's not long-term state.
<br />
<br />As usual, drawing a picture helps a lot in understanding these things :)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>jwdonal</b> [ Sun Feb 21, 2010 1:27 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>2 different paradigms</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I think we're all talking about the same thing here but we're running into a paradigm shift (i.e. we're looking at the same problem from 2 different perspectives).  I personally am looking at the shift register from a strictly hardware (HDL) perspective, whereas others are looking at it from a software (C language) perspective.
<br />
<br />In Verilog, you would never say something like "unsigned short" since you are not limited to pre-defined data types when designing custom hardware in HDL.  In Verilog I would simply say:
<br />
<br />reg [14:0] shift_reg;
<br />
<br />This will give me an exactly 15-bit register, no more, no less.  Similarly, I could make a 3-bit register, 7-bit register, 10-bit register.  Doesn't matter.  And all those different sizes could be treated as simple shift registers, unsigned numbers, signed numbers, floating point, etc, etc.  That's the beauty of programming in HDL and creating your own custom hardware. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Sun Feb 21, 2010 2:22 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />It would be interesting to implement an emulator like that, with n-width integers. I think byuu is doing something like this in bsnes, with something like Int&lt;width&gt; in C++. For the rest of us, all that matters is the end result: the correct bit sequence out of the noise generator.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Banshaku</b> [ Sun Feb 21, 2010 4:25 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Good to see you back Blargg <img src="./images/smilies/icon_wink.gif" alt=";)" title="Wink" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Jarhmander</b> [ Sun Feb 21, 2010 7:59 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Yeah, good to see ya blargg <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /> 
<br />
<br />A little off-topic, but here's a possible implementation of a variable sized int :
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">template&lt;unsigned N&gt;<br />class UInt<br />&#123;<br />&nbsp; &nbsp; unsigned long long val : N;<br />public:<br />&nbsp; &nbsp; inline UInt&#40;&#41; &#123;&#125;<br />&nbsp; &nbsp; inline UInt&#40;unsigned long long num&#41; : val&#40;num&#41; &#123;&#125;<br />&nbsp; &nbsp; inline operator unsigned long long&#40;&#41; &#123; return val; &#125;<br />&#125;;<br /></div><br /><br />Now, it almost just looks like an ordinary int:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">...<br />&nbsp; &nbsp;UInt&lt;7&gt; a = 33, b = 14.5, c = a * b;<br />&nbsp; &nbsp;cout &lt;&lt; c; // will print 78<br /></div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Sun Feb 21, 2010 9:41 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Haha, nifty implementation of a variable-width int. I wouldn't have thought of using a bitfield in a template like that, but it's perfect.
<br />
<br />BTW, I noticed that the Wiki page was in fact in error. It described the LFSR as if it only had 14 bits (pus a 15th extra temporary bit). I've corrected it, and clarified how it only has 15 bits in actuality, even though 16 are used in the description of shifting.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>