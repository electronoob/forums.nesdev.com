<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Mapper Registers</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Mapper Registers</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=3&amp;t=7525">http://forums.nesdev.com/viewtopic.php?f=3&amp;t=7525</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>6T4</b> [ Sun Feb 27, 2011 10:43 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Mapper Registers</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I don't really understand how the mapper registers work in general. I have read several documents about the individual mappers and know that certain bits can be set to certain values, but are these registers read, write, or both then? Also, if anyone wants to give some suggestions about where and how this should be implemented in my emulator, I would appreciate that. (especially relating to mappers that can control mirroring)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Sun Feb 27, 2011 11:16 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Mapper registers are often mapped to the PRG-ROM space because you can't write to PRG-ROM, so these writes are instead routed to the mappers so you can control their functions. Most registers can't be read back, just written to. If you read from $8000-$FFFF you'll obviously get whatever the PRG-ROM contains. Some mappers have registers mapped to areas below $8000, and some of those can be read back, I think. You'll have to read each mapper's documentation, if it doesn't say anything about reading, the registers probably can't be read.
<br />
<br />As for your emulator, to me it seems that all of the registers should be implemented as variables/arrays/etc. in your mapper file. Most of the mapper functions are actually just PRG and CHR mapping, and for that there is no need to keep any internal state, you just have to set the PRG and CHR pointers like you are already doing, but for some mappers it might be necessary to keep some internal data. For example, if a mapper has configurable bank sizes, it would be a good idea to have a variable remember the setting that was last selected by the program.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>6T4</b> [ Sun Feb 27, 2011 11:24 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">As for your emulator, to me it seems that all of the registers should be implemented as variables/arrays/etc. in your mapper file. Most of the mapper functions are actually just PRG and CHR mapping, and for that there is no need to keep any internal state, you just have to set the PRG and CHR pointers like you are already doing, but for some mappers it might be necessary to keep some internal data. For example, if a mapper has configurable bank sizes, it would be a good idea to have a variable remember the setting that was last selected by the program.</div>
<br />Okay, some follow up things then. Why wouldn't this code for mapper 7 have worked?
<br />//-----------------------------------------------------------------------------
<br />// Name: OnWrite()
<br />// Desc: Called when there is a write to PRG-RAM memory ($8000-$FFFF).
<br />//-----------------------------------------------------------------------------
<br />BOOL __declspec(dllexport) OnWrite(WORD wAddress, BYTE byData)
<br />{
<br />	// When a byte is written to this area of memory we need to
<br />	// switch the first PRG-RAM pointer to (value writen*0x8000)
<br />	// if (byData &lt;= wNumPRGROMPages)
<br />	pCPU-&gt;pbyPRGROMBank1 = pabyPRGROM + ((byData % wNumPRGROMPages)*0x8000);
<br />	pCPU-&gt;pbyPRGROMBank2 = pabyPRGROM + 0x4000 + ((byData % wNumPRGROMPages)*0x8000);
<br />
<br />	// Set up the mirroring
<br />	NESPPU  PPU = {0};        // Our global PPU.
<br />	 	if (byData &amp; 0x10)
<br />			{PPU.apbyNameTables[0] = &amp;PPU.abyNameTables[0x400];
<br />			PPU.apbyNameTables[1] = &amp;PPU.abyNameTables[0x400];
<br />			PPU.apbyNameTables[2] = &amp;PPU.abyNameTables[0x400];
<br />			PPU.apbyNameTables[3] = &amp;PPU.abyNameTables[0x400];}
<br />		else
<br />			{PPU.apbyNameTables[0] = &amp;PPU.abyNameTables[0];
<br />			PPU.apbyNameTables[1] = &amp;PPU.abyNameTables[0];
<br />			PPU.apbyNameTables[2] = &amp;PPU.abyNameTables[0];
<br />			PPU.apbyNameTables[3] = &amp;PPU.abyNameTables[0];}
<br />	
<br />
<br />	return TRUE;
<br />} // end OnWrite()
<br />
<br />Also, I had a post before about a lot of games larger than 128K not working.... would that have to do with setting up the prg rom banks in the "on read" section of the mapper dlls, or possibly also the io.cpp file; does it need to account for mirrors or something?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Zepper</b> [ Mon Feb 28, 2011 7:40 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />- PRG banks are 8k (0x2000), not 32k (0x8000) for bankswitching. That's the error. Before <strong>someone</strong> replies something else, let me explain:
<br />
<br />a) <strong>usual</strong> cases will use 8k banks. Non-standard configs are out of subject.
<br />b) to switch a 32k bank, you would select a 32k page, then its 4x8k banks below...
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">bank_8 = &amp;PRG&#91; &#40;value &lt;&lt; 2&#41; * 0x2000 &#93;;<br />bank_A = &amp;bank_8&#91; 0x2000 &#93;;<br />bank_C = &amp;bank_A&#91; 0x2000 &#93;;<br />bank_E = &amp;bank_C&#91; 0x2000 &#93;;</div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dwedit</b> [ Mon Feb 28, 2011 8:47 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The "prg banks are 8k" rule is not really set in stone, it's just a common convention among emulator developers because mappers that currently exist don't switch PRG in units smaller than 8KB.  But there's nothing stopping mappers from switching in smaller units.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Mon Feb 28, 2011 9:31 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Dwedit wrote:</div><div class="quotecontent">The "prg banks are 8k" rule is not really set in stone, it's just a common convention among emulator developers because mappers that currently exist don't switch PRG in units smaller than 8KB.  But there's nothing stopping mappers from switching in smaller units.</div>
<br />Yeah, I think 4K banking is a good choice because it allows you to support NSF as well.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>kyuusaku</b> [ Mon Feb 28, 2011 9:57 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I don't even have generic bank pointers, instead memory decoding is up to the cartridge logic. What if a game comes along with readable mapper registers in $8000-FFFF? Pretty much every emulator would have to be significantly reworked. There isn't a huge performance benefit in abstracting mappers so I try to model how things really are.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>MottZilla</b> [ Mon Feb 28, 2011 10:34 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />It's important to know what you plan to support though. If you don't plan to support many mappers, you can model things differently. If you plan to support the usual suspects, 8K PRG and 1K CHR segments will do.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Mon Feb 28, 2011 2:05 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />If I was programming an emulator, I would probably try emulating the cartridge separate from the console. There would be as much communication between them as the signals on the cartridge connector permit. This would allow the mappers to monitor ROM accesses just like a real mapper would, generate IRQs, control name table mirroring, etc. without any adjustments to the console side.
<br />
<br />Since each cartridge would be responsible for managing its own contents, there would be no standard page size, and no worries that some new mapper might need an unsupported page size.
<br />
<br />I don't know if making all memory access go through the cartridge would end up being too slow... I guess it wouldn't be a problem for current desktop computers.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>kyuusaku</b> [ Mon Feb 28, 2011 3:41 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">If I was programming an emulator, I would probably try emulating the cartridge separate from the console. There would be as much communication between them as the signals on the cartridge connector permit. This would allow the mappers to monitor ROM accesses just like a real mapper would, generate IRQs, control name table mirroring, etc. without any adjustments to the console side.<br /><br />Since each cartridge would be responsible for managing its own contents, there would be no standard page size, and no worries that some new mapper might need an unsupported page size.<br /><br />I don't know if making all memory access go through the cartridge would end up being too slow... I guess it wouldn't be a problem for current desktop computers.</div>
<br />This is exactly what I do. It's not too slow for me and I'm on a single-core netbook, the performance is better than Nintendulator though sound isn't implemented yet. I call a cartridge function each and every CPU and PPU read/write so eventually MMC5 can be implemented without hacks. It also allows cartridges to spy on $0000-4017 access and overpower the bus (not sure if this is safe on the real thing). I even emulate oscillators running independently of the NES so that random synchronous logic (probably for expansion sound later) can be emulated correctly. I'm not sure if this kind of low level approach is for everyone but it's how I like to do things.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Mon Feb 28, 2011 5:46 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />That's pretty cool, kyuusaku. From your previous comment I imagined you were doing something like this, but I wasn't sure if it was the exact same thing I had in mind.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Zepper</b> [ Mon Feb 28, 2011 7:01 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">kyuusaku wrote:</div><div class="quotecontent">What if a game comes along with readable mapper registers in $8000-FFFF?</div>
<br />
<br />- That's because you barely know the <a href="http://www.consoledatabase.com/gameinfo/nes/maxi-15pack/" class="postlink">Maxi 15 cart</a>, emulated as mapper 234.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>kyuusaku</b> [ Mon Feb 28, 2011 10:01 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />You're right, though it just requires a hook to the mapper code since the registers aren't readable. Still most emulators probably don't have provisions for it.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>koitsu</b> [ Mon Feb 28, 2011 10:49 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">kyuusaku wrote:</div><div class="quotecontent">I don't even have generic bank pointers, instead memory decoding is up to the cartridge logic. What if a game comes along with readable mapper registers in $8000-FFFF? Pretty much every emulator would have to be significantly reworked.</div>
<br />
<br />I don't even know how this would effectively work; games would (effectively, not literally) be completely unable to read anything from PRG-ROM.  Oh, and let's not forget IRQ/BRK, NMI, and RESET vectors are also in that addressing space.
<br />
<br />I could see a mapper providing read access to $8000-BFFF for registers (there goes 16K of your 32K, oh well!), but really?  Come on.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>kyuusaku</b> [ Tue Mar 01, 2011 12:09 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Game Genie maps registers to $8000-FFFF.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>