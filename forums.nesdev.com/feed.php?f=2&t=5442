<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=2&amp;t=5442" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2009-07-29T23:38:58-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=2&amp;t=5442</id>
<entry>
<author><name><![CDATA[JunoMan]]></name></author>
<updated>2009-07-29T23:38:58-07:00</updated>
<published>2009-07-29T23:38:58-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5442&amp;p=49317#p49317</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5442&amp;p=49317#p49317"/>
<title type="html"><![CDATA[Grey line trick to know how much cpu is used]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5442&amp;p=49317#p49317"><![CDATA[
<div class="quotetitle">tepples wrote:</div><div class="quotecontent"><br />I don't have FCEUX in front of me, but I'd be surprised if it doesn't let you put a breakpoint on writes to $2000-$3FFF with condition "vcount &lt; 241".<br /></div><br /><br />The conditions on a breakpoint seem to only able to reference addresses. There's no way of getting the current vertical position. (at least in fceuxdsp-1_07)<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3983">JunoMan</a> — Wed Jul 29, 2009 11:38 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2009-07-29T17:07:09-07:00</updated>
<published>2009-07-29T17:07:09-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5442&amp;p=49311#p49311</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5442&amp;p=49311#p49311"/>
<title type="html"><![CDATA[Grey line trick to know how much cpu is used]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5442&amp;p=49311#p49311"><![CDATA[
<div class="quotetitle">JunoMan wrote:</div><div class="quotecontent"><br />The sound driver code can be executed at the end of the NMI as it doesnt matter if the PPU is running.<br /><br />Thinking about it, I wonder if anyone can tell the difference in the timing of the music as it might be updated at slightly different times in the frame depending on how long the PPU updates take.<br /></div><br />Nobody wll give a care if notes are occasionally 3 to 8 ms late. Humans play notes late anyway, which is why games like DDR usually have at least a 33 ms window to get a "Perfect" judgment. And music engines round key-ons up or down to the nearest 17-20 ms anyway if a song's tempo doesn't divide evenly into 900 (NTSC) or 750 (PAL). If it really matters to you, and you have a sprite 0 scroll split, try running music at a predictable time after the sprite 0 hit.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />edit: Is there any emulator which will inform you when PPU writes are done with the screen is on?<br /></div><br />I don't have FCEUX in front of me, but I'd be surprised if it doesn't let you put a breakpoint on writes to $2000-$3FFF with condition "vcount &lt; 241".<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Wed Jul 29, 2009 5:07 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[JunoMan]]></name></author>
<updated>2009-07-29T15:03:52-07:00</updated>
<published>2009-07-29T15:03:52-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5442&amp;p=49304#p49304</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5442&amp;p=49304#p49304"/>
<title type="html"><![CDATA[Grey line trick to know how much cpu is used]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5442&amp;p=49304#p49304"><![CDATA[
I set the monochrome bit at the start of my NMI routine and reset it after I've done all the PPU updates. (which are all at the start of the NMI)<br /><br />The sound driver code can be executed at the end of the NMI as it doesnt matter if the PPU is running.<br /><br />Thinking about it, I wonder if anyone can tell the difference in the timing of the music as it might be updated at slightly different times in the frame depending on how long the PPU updates take.<br /><br />edit: Is there any emulator which will inform you when PPU writes are done with the screen is on?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3983">JunoMan</a> — Wed Jul 29, 2009 3:03 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Banshaku]]></name></author>
<updated>2009-07-27T18:37:57-07:00</updated>
<published>2009-07-27T18:37:57-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5442&amp;p=49267#p49267</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5442&amp;p=49267#p49267"/>
<title type="html"><![CDATA[Grey line trick to know how much cpu is used]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5442&amp;p=49267#p49267"><![CDATA[
doh, Tepples was faster than me to write a message and I cannot really update mine with the second question <img src="http://forums.nesdev.com/images/smilies/icon_wink.gif" alt=";)" title="Wink" />  So what I understand now is the NMI is 20 scanlines only. So this mean if I use the grey line trick inside the NMI and the line seems a few times near the 20th line because of the sound driver changing frame, this mean I'm already borderline for my update then?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3559">Banshaku</a> — Mon Jul 27, 2009 6:37 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2009-07-27T18:35:24-07:00</updated>
<published>2009-07-27T18:35:24-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5442&amp;p=49265#p49265</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5442&amp;p=49265#p49265"/>
<title type="html"><![CDATA[Grey line trick to know how much cpu is used]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5442&amp;p=49265#p49265"><![CDATA[
The only thing initialized in line -1 is the first two slivers of line 0, fetched from x=320 to x=335.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Mon Jul 27, 2009 6:35 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Banshaku]]></name></author>
<updated>2009-07-27T18:35:23-07:00</updated>
<published>2009-07-27T18:35:23-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5442&amp;p=49264#p49264</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5442&amp;p=49264#p49264"/>
<title type="html"><![CDATA[Grey line trick to know how much cpu is used]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5442&amp;p=49264#p49264"><![CDATA[
So the way it would work is when you don't use the line, you set the monochrome bit after that cpu intensive phase and reset the bit in the NMI. So one part of the screen would become grey, right?<br /><br />I think that I must be doing it wrong because the screen always stay grey (or I'm quite a heck of a coder but I don't think so  <img src="http://forums.nesdev.com/images/smilies/icon_lol.gif" alt=":lol:" title="Laughing" /> ).<br /><br />I did it quite fast at 1h in the morning so I must have goofed up somewhere. Basically, the current main loop is something like:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">MainLoop:<br />  - Process input<br />  - Process view buffer<br />  - Set monochrome bit<br />  - Wait nmi<br />     + inside NMI, reset monochrome bit<br />  - read joypad input<br />jump to mainLoop<br /></div><br /><br />So this is how it would be done, right?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3559">Banshaku</a> — Mon Jul 27, 2009 6:35 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2009-07-27T16:29:52-07:00</updated>
<published>2009-07-27T16:29:52-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5442&amp;p=49260#p49260</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5442&amp;p=49260#p49260"/>
<title type="html"><![CDATA[Grey line trick to know how much cpu is used]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5442&amp;p=49260#p49260"><![CDATA[
Now you got me... I really can't say for sure... But I always read in the docs that the rendering pipeline is initialized during that scanline and that once the NMI fires there are exactly 20 scanlines (not 21) for PPU updates... This sort of thing made me believe that the pre-render scanline was off limits, but I haven't tested myself.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Mon Jul 27, 2009 4:29 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2009-07-27T15:36:31-07:00</updated>
<published>2009-07-27T15:36:31-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5442&amp;p=49257#p49257</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5442&amp;p=49257#p49257"/>
<title type="html"><![CDATA[Grey line trick to know how much cpu is used]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5442&amp;p=49257#p49257"><![CDATA[
<div class="quotetitle">tokumaru wrote:</div><div class="quotecontent"><br />Remember that $2006/$2007 operations can't be done during the pre-render scanline either, so make sure to take that scanline into consideration.<br /></div><br />Really? I thought they were OK up until the point when the hardware executes what loopy called "v=t". I seem to remember that happening sometime in the pre-render scanline's hblank, close to <a href="http://wiki.nesdev.com/w/index.php/PPU_scrolling#Use_of_Loopy_V_during_rendering" class="postlink">x=304</a>.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Mon Jul 27, 2009 3:36 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2009-07-27T14:37:10-07:00</updated>
<published>2009-07-27T14:37:10-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5442&amp;p=49251#p49251</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5442&amp;p=49251#p49251"/>
<title type="html"><![CDATA[Grey line trick to know how much cpu is used]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5442&amp;p=49251#p49251"><![CDATA[
<div class="quotetitle">Banshaku wrote:</div><div class="quotecontent"><br />The reason I used the grey line inside the NMI is because of all the talk about your writing buffer code spilling out of it.<br /></div><br />Remember that $2006/$2007 operations can't be done during the pre-render scanline either, so make sure to take that scanline into consideration.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Mon Jul 27, 2009 2:37 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[koitsu]]></name></author>
<updated>2009-07-27T11:48:04-07:00</updated>
<published>2009-07-27T11:48:04-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5442&amp;p=49245#p49245</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5442&amp;p=49245#p49245"/>
<title type="html"><![CDATA[Grey line trick to know how much cpu is used]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5442&amp;p=49245#p49245"><![CDATA[
We used to use the exact method you and others describe on the Apple IIGS as well.<br /><br />The most common method there was to set the screen border colour to a specific colour of your choice (at the start of the routine) and then set it back to whatever it was originally (at the end of the routine).  The IIGS border only supported 16 colours, but that was more than enough.  These were controlled via simple memory-mapped registers $C022 and $C034.<br /><br />Since the border on the IIGS wasn't part of the actual on-screen graphics memory area, what you'd end up with is a "section" of the left and right screen borders displaying as the colour you chose.<br /><br />You could use this in NMI or anywhere else as a cheap form of profiling.  It gave you an idea, visually, of how much time a routine took up.  I cannot count how many times I used this method when working on demos or anything else that was CPU-intensive -- you could very quickly determine what routine was responsible for what amount of CPU munching.  :-)  "That drawing routine I wrote is almost 2x slower than the audio routine?!  What the hell.  Let's try unrolling these loops..."<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3">koitsu</a> — Mon Jul 27, 2009 11:48 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[doynax]]></name></author>
<updated>2009-07-27T09:33:23-07:00</updated>
<published>2009-07-27T09:33:23-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5442&amp;p=49243#p49243</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5442&amp;p=49243#p49243"/>
<title type="html"><![CDATA[Re: Grey line trick to know how much cpu is used]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5442&amp;p=49243#p49243"><![CDATA[
Yes, this is a useful technique. We used to call it the poor-man's profiler on the C64 ;)<br />Note that you can use several different emphasis bit combinations to highlight the CPU-use of the various major subsystems of your game.<br /><br />Another crude profiling method I've found useful is to continually increase a counter in a loop when you're done with all the processing for a frame, and then read it out and display the final value from the NMI handler.<br />That way you can more accurately measure savings from optimizations (using replays to get the before and after values) and keep track of maximum/minimum/average frame times over longer spans of time.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=56">doynax</a> — Mon Jul 27, 2009 9:33 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Banshaku]]></name></author>
<updated>2009-07-27T09:20:16-07:00</updated>
<published>2009-07-27T09:20:16-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5442&amp;p=49242#p49242</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5442&amp;p=49242#p49242"/>
<title type="html"><![CDATA[Grey line trick to know how much cpu is used]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5442&amp;p=49242#p49242"><![CDATA[
ok, I see the point.  The reason I used the grey line inside the NMI is because of all the talk about your writing buffer code spilling out of it. Because of that, I understood that code segment the wrong way I used it to check if my writes where fine or not.<br /><br />I will check tomorrow how much my current buffering takes time then with that trick.  That's interesting.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3559">Banshaku</a> — Mon Jul 27, 2009 9:20 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2009-07-27T08:52:38-07:00</updated>
<published>2009-07-27T08:52:38-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5442&amp;p=49241#p49241</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5442&amp;p=49241#p49241"/>
<title type="html"><![CDATA[Grey line trick to know how much cpu is used]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5442&amp;p=49241#p49241"><![CDATA[
I guess it works as you described, I just don't think it is as useful as knowing how much free time you have left in the frame.<br /><br />Knowing how much time your NMI takes may be interesting if you are trying to reduce it through some optimization, but in the end it just counts as part of the general processing of the frame and won't tell you much.<br /><br />What I like to do is make the screen grayscale (and/or use some color emphasis) as soon as my frame calculations are done and I have nothing to do but wait for the NMI. The gray area (I don't really like to have just a line because it's not as evident) then represents how much free time I have left. It's interesting to observe how it gets smaller as more objects are processed or when there is scrolling. I only restore color back to normal in the NMI, so that the top of the screen is displayed with the correct colors.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Mon Jul 27, 2009 8:52 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Banshaku]]></name></author>
<updated>2009-07-27T08:14:46-07:00</updated>
<published>2009-07-27T08:14:46-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5442&amp;p=49239#p49239</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5442&amp;p=49239#p49239"/>
<title type="html"><![CDATA[Grey line trick to know how much cpu is used]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5442&amp;p=49239#p49239"><![CDATA[
I read a long time ago in <a href="http://nesdev.com/bbs/viewtopic.php?t=4379&amp;highlight=gray+grey+line" class="postlink">this thread</a> (or maybe another one, I cannot remember clearly) this trick to show how much CPU is used with a gray line using the monochrome bit.<br /><br />This was a nice little trick shown by Tepples BUT... I didn't read it well. Instead of using it before the vblank, I was using it during the NMI to know how much the NMI was long.<br /><br />What I want to know is does it make sense to use it that way?  When the music driver was taking more time (famitracker) while switching frame, the line was lower and I know that Jsr documented about this behavior with the driver so it seemed to work.  <br /><br />Does anybody used it that way? If it does work, then it tells me how long is my NMI code.  I just want to know if my reading error made me found a way to now more about my NMI or I'm just using unpredictable information generated from that trick used at the wrong place.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3559">Banshaku</a> — Mon Jul 27, 2009 8:14 am</p><hr />
]]></content>
</entry>
</feed>