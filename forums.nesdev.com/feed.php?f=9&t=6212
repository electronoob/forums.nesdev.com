<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=9&amp;t=6212" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2010-03-26T18:04:09-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=9&amp;t=6212</id>
<entry>
<author><name><![CDATA[2600]]></name></author>
<updated>2010-03-26T18:04:09-07:00</updated>
<published>2010-03-26T18:04:09-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6212&amp;p=59071#p59071</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6212&amp;p=59071#p59071"/>
<title type="html"><![CDATA[RAM speed, Is there too Fast for the NES?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6212&amp;p=59071#p59071"><![CDATA[
I wonder if some weak pull-ups would of worked instead of series resistors as well as a bulk decoupling cap in addition to the normal decoupling caps which I assume are present.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3385">2600</a> — Fri Mar 26, 2010 6:04 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2010-03-25T18:28:36-07:00</updated>
<published>2010-03-25T18:28:36-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6212&amp;p=59042#p59042</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6212&amp;p=59042#p59042"/>
<title type="html"><![CDATA[RAM speed, Is there too Fast for the NES?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6212&amp;p=59042#p59042"><![CDATA[
<div class="quotetitle">Memblers wrote:</div><div class="quotecontent"><br />An R/C filter might not work either<br /></div><br />My point was that you effectively get an R/C filter when you put a series resistor, as the CMOS input gate capacitance forms the C of the filter. But as elaborated above, I'm thinking it may be that the resistors reduce the slew rate and hence the current spike when changing logic levels.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Thu Mar 25, 2010 6:28 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Memblers]]></name></author>
<updated>2010-03-25T12:08:48-07:00</updated>
<published>2010-03-25T12:08:48-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6212&amp;p=59025#p59025</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6212&amp;p=59025#p59025"/>
<title type="html"><![CDATA[RAM speed, Is there too Fast for the NES?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6212&amp;p=59025#p59025"><![CDATA[
Yeah I could have worded it better, the series resistors just happened to work, everything else is just speculation.  Kevtris had built an FC-to-NES adapter with these series resistors, I believe that was to allow CopyNES to work with carts that would otherwise cause bus conflicts with the CopyNES hardware.  Luckily, that same adapter proved the fix.<br /><br />An R/C filter might not work either (on the /chip enable I mean), as it could be that the NES is starting the DMA before the previous memory access cycle is complete.  I guess the resistors then will limit the current so it doesn't become a major bus conflict.<br /><br />There's been a lot of times I wished there was a complete and accurate timing write-up and timing diagram of the full NES cart edge, much like IC datasheets have under "AC Characteristics".  2A03 must be just like the 6502, but with the Sprite-DMA, and DPCM, there's more to it.  I haven't tried (and don't know if I can except experimentally) derive the exact PPU timing, because currently and for a while previously I had been curious about exploiting the PPU's multiplexed address/data bus (yeah, so what if the ALE signal isn't brought out <img src="http://forums.nesdev.com/images/smilies/icon_razz.gif" alt=":P" title="Razz" />).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=10">Memblers</a> — Thu Mar 25, 2010 12:08 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2010-03-25T11:49:59-07:00</updated>
<published>2010-03-25T11:49:59-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6212&amp;p=59024#p59024</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6212&amp;p=59024#p59024"/>
<title type="html"><![CDATA[RAM speed, Is there too Fast for the NES?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6212&amp;p=59024#p59024"><![CDATA[
Do these glitches happen on reads or writes? I'm thinking at least reads, because for example the PowerPak would be used almost always for reads from ROM. In that case, it would be the fast RAM chip's bus buffer driving the data bus, which has the capacitance of all the other chips on it. The fast RAM chip drives with more current, so it puts more load on the power bus. If it's not sufficiently decoupled, then I believe it'll see glitches on its inputs. This is a little beyond my experience, based on recent readings.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Thu Mar 25, 2010 11:49 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[2600]]></name></author>
<updated>2010-03-25T08:59:30-07:00</updated>
<published>2010-03-25T08:59:30-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6212&amp;p=59016#p59016</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6212&amp;p=59016#p59016"/>
<title type="html"><![CDATA[RAM speed, Is there too Fast for the NES?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6212&amp;p=59016#p59016"><![CDATA[
<div class="quotetitle">blargg wrote:</div><div class="quotecontent"><br /><div class="quotetitle">2600 wrote:</div><div class="quotecontent">If I understand where the resistors are being used ie just the data lines, then the chip is still being enabled when it shouldn't be.<br /></div><br />Whoops, poor reading comprehension on my part. Didn't notice the part about data lines only. Maybe it has something to do with ground glitches caused by the data lines all changing at the same time, glitches which aren't noticed by slow RAM chips, but are noticed by fast ones? The resistors would limit current, and thus reduce the glitches.</div><br /><br />No problem, I think I misunderstood Memblers as well.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3385">2600</a> — Thu Mar 25, 2010 8:59 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2010-03-24T13:31:21-07:00</updated>
<published>2010-03-24T13:31:21-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6212&amp;p=58969#p58969</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6212&amp;p=58969#p58969"/>
<title type="html"><![CDATA[RAM speed, Is there too Fast for the NES?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6212&amp;p=58969#p58969"><![CDATA[
<div class="quotetitle">2600 wrote:</div><div class="quotecontent"><br />If I understand where the resistors are being used ie just the data lines, then the chip is still being enabled when it shouldn't be.<br /></div><br />Whoops, poor reading comprehension on my part. Didn't notice the part about data lines only. Maybe it has something to do with ground glitches caused by the data lines all changing at the same time, glitches which aren't noticed by slow RAM chips, but are noticed by fast ones? The resistors would limit current, and thus reduce the glitches.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Wed Mar 24, 2010 1:31 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Memblers]]></name></author>
<updated>2010-03-24T12:36:00-07:00</updated>
<published>2010-03-24T12:36:00-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6212&amp;p=58963#p58963</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6212&amp;p=58963#p58963"/>
<title type="html"><![CDATA[RAM speed, Is there too Fast for the NES?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6212&amp;p=58963#p58963"><![CDATA[
<div class="quotetitle">tokumaru wrote:</div><div class="quotecontent"><br /><div class="quotetitle">Memblers wrote:</div><div class="quotecontent">I still don't 100% understand what the deal was with the sprite-DMA causing problems with my EPROM emulator (causing 1 or 2 constantly corrupted sprites).  IIRC kevtris had theorized that the DMA may be allowing some brief glitches on the chip enable, and if the PRG chip is fast enough it might respond to it.<br /><br />In any event, putting resistors in series with the data bus was the only way to fix that.<br /></div><br />Isn't that the exact same thing that happened with the PowerPak?</div><br /><br />The symptoms were probably much different, but I'd bet it was the same problem.  The RAM on the emulator isn't exceptionally fast (70ns), but the bus is entirely buffered between the RAM/EPROM socket so I'd imagine it's those 74hc541 chips doing it.  It's kind of funny though, it never causes a crash, never uses sprite #0, it just semi-randomly / semi-permanently corrupts a sprite or 2 which makes me speculate that it may be a visible bus conflict, heheh.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=10">Memblers</a> — Wed Mar 24, 2010 12:36 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[2600]]></name></author>
<updated>2010-03-24T12:30:59-07:00</updated>
<published>2010-03-24T12:30:59-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6212&amp;p=58962#p58962</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6212&amp;p=58962#p58962"/>
<title type="html"><![CDATA[RAM speed, Is there too Fast for the NES?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6212&amp;p=58962#p58962"><![CDATA[
<div class="quotetitle">blargg wrote:</div><div class="quotecontent"><br /><div class="quotetitle">2600 wrote:</div><div class="quotecontent"><div class="quotetitle">Memblers wrote:</div><div class="quotecontent">putting resistors in series with the data bus was the only way to fix that.<br /></div><br />I can understand the glitches happening, but not sure I see how putting resistors in series with the data bus would help.  The RAM would still get enabled.</div><br />The resistors coupled with the capacitance of the inputs forms an <a href="http://en.wikipedia.org/wiki/Low-pass_filter#Electronic_low-pass_filters" class="postlink">RC low-pass filter</a>.</div><br /><br />If I understand where the resistors are being used ie just the data lines, then the chip is still being enabled when it shouldn't be.  If the chip is still being enabled, then it will either write to the data bus or put whatever is on the data bus into memory. Filtering the data bus itself wouldn't prevent that. <br /><br />Either we are generically using the word glitch for two different things or I'm still not following how that would prevent the corruption of memory.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3385">2600</a> — Wed Mar 24, 2010 12:30 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2010-03-24T12:14:44-07:00</updated>
<published>2010-03-24T12:14:44-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6212&amp;p=58958#p58958</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6212&amp;p=58958#p58958"/>
<title type="html"><![CDATA[RAM speed, Is there too Fast for the NES?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6212&amp;p=58958#p58958"><![CDATA[
<div class="quotetitle">2600 wrote:</div><div class="quotecontent"><br /><div class="quotetitle">Memblers wrote:</div><div class="quotecontent">putting resistors in series with the data bus was the only way to fix that.<br /></div><br />I can understand the glitches happening, but not sure I see how putting resistors in series with the data bus would help.  The RAM would still get enabled.</div><br />The resistors coupled with the capacitance of the inputs forms an <a href="http://en.wikipedia.org/wiki/Low-pass_filter#Electronic_low-pass_filters" class="postlink">RC low-pass filter</a>.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Wed Mar 24, 2010 12:14 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[2600]]></name></author>
<updated>2010-03-24T07:57:35-07:00</updated>
<published>2010-03-24T07:57:35-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6212&amp;p=58941#p58941</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6212&amp;p=58941#p58941"/>
<title type="html"><![CDATA[RAM speed, Is there too Fast for the NES?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6212&amp;p=58941#p58941"><![CDATA[
<div class="quotetitle">kyuusaku wrote:</div><div class="quotecontent"><br /><div class="quotetitle">2600 wrote:</div><div class="quotecontent">Hmm, I had forgotten about M2.  I've done a bit more stuff with other processors and you have to worry about glitches as the RAM will get trashed.<br /></div>You shouldn't have to worry, most other processors have more robust control signals than the 6502. Separate R/W strobes and synchronous internal logic is reliable.</div><br /><br />A lot of the boards use a series of cascaded logic to enable chips at different address ranges.  If you put a logic analyzer on the bus you can see the glitches.  Not really a problem with the CPU per se, just the timing of all the other logic.<br /><br />I don't expect that to happen on the NES, but everyone here has played with the HW more then me.  Plus anytime you are talking about a console like the NES you never know what tweaked out thing some manufacturer did in a game and rely upon.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3385">2600</a> — Wed Mar 24, 2010 7:57 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[kyuusaku]]></name></author>
<updated>2010-03-24T07:37:53-07:00</updated>
<published>2010-03-24T07:37:53-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6212&amp;p=58940#p58940</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6212&amp;p=58940#p58940"/>
<title type="html"><![CDATA[RAM speed, Is there too Fast for the NES?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6212&amp;p=58940#p58940"><![CDATA[
I stand corrected about the asynchronous RAM, but I sure haven't seen anything that fast offline. Every -10 I've checked thus far, even Cypress RAM, has actually been 100ns.<br /><br /><div class="quotetitle">blargg wrote:</div><div class="quotecontent"><br />That's not exactly true. The problem is when you have fast clocked logic driven by slow logic; the fast logic will see the slow logic's leisurely level changes as multiple transitions.<br /></div>Well, assuming the slow-slew output is that noisy.<br /><br /><div class="quotetitle">2600 wrote:</div><div class="quotecontent"><br />Hmm, I had forgotten about M2.  I've done a bit more stuff with other processors and you have to worry about glitches as the RAM will get trashed.<br /></div>You shouldn't have to worry, most other processors have more robust control signals than the 6502. Separate R/W strobes and synchronous internal logic is reliable.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=20">kyuusaku</a> — Wed Mar 24, 2010 7:37 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[2600]]></name></author>
<updated>2010-03-24T07:04:50-07:00</updated>
<published>2010-03-24T07:04:50-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6212&amp;p=58938#p58938</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6212&amp;p=58938#p58938"/>
<title type="html"><![CDATA[RAM speed, Is there too Fast for the NES?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6212&amp;p=58938#p58938"><![CDATA[
<div class="quotetitle">Bregalad wrote:</div><div class="quotecontent"><br />Normally the 6502 puts M2 high only when the adress lines are stable, so even if a chip responds really fast to the low-&gt;high M2 transition, the adress are already stable.<br /></div><br /><br />Hmm, I had forgotten about M2.  I've done a bit more stuff with other processors and you have to worry about glitches as the RAM will get trashed.<br /><br /><br /><div class="quotetitle">Memblers wrote:</div><div class="quotecontent"><br />I forgot to mention the Midines RAM would have been CHR only, as well.<br /><br />I still don't 100% understand what the deal was with the sprite-DMA causing problems with my EPROM emulator (causing 1 or 2 constantly corrupted sprites).  IIRC kevtris had theorized that the DMA may be allowing some brief glitches on the chip enable, and if the PRG chip is fast enough it might respond to it.<br /><br />In any event, putting resistors in series with the data bus was the only way to fix that.<br /></div><br /><br />I can understand the glitches happening, but not sure I see how putting resistors in series with the data bus would help.  The RAM would still get enabled.<br /><br />I have enough RAM that I think sticking this on the CHR RAM side only will be good enough.<br /><br />Thanks for the help everyone.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3385">2600</a> — Wed Mar 24, 2010 7:04 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2010-03-24T00:23:26-07:00</updated>
<published>2010-03-24T00:23:26-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6212&amp;p=58932#p58932</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6212&amp;p=58932#p58932"/>
<title type="html"><![CDATA[RAM speed, Is there too Fast for the NES?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6212&amp;p=58932#p58932"><![CDATA[
<div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />That's not exactly true. The problem is when you have fast clocked logic driven by slow logic; the fast logic will see the slow logic's leisurely level changes as multiple transitions. For RAM I suppose it doesn't matter, because multiple transitions don't do anything bad. But you can't in general mix really fast and slow logic together.<br /></div><br />Normally the 6502 puts M2 high only when the adress lines are stable, so even if a chip responds really fast to the low-&gt;high M2 transition, the adress are already stable.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Wed Mar 24, 2010 12:23 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2010-03-23T20:04:30-07:00</updated>
<published>2010-03-23T20:04:30-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6212&amp;p=58921#p58921</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6212&amp;p=58921#p58921"/>
<title type="html"><![CDATA[RAM speed, Is there too Fast for the NES?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6212&amp;p=58921#p58921"><![CDATA[
<div class="quotetitle">Memblers wrote:</div><div class="quotecontent"><br />I still don't 100% understand what the deal was with the sprite-DMA causing problems with my EPROM emulator (causing 1 or 2 constantly corrupted sprites).  IIRC kevtris had theorized that the DMA may be allowing some brief glitches on the chip enable, and if the PRG chip is fast enough it might respond to it.<br /><br />In any event, putting resistors in series with the data bus was the only way to fix that.<br /></div><br />Isn't that the exact same thing that happened with the PowerPak?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Tue Mar 23, 2010 8:04 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Memblers]]></name></author>
<updated>2010-03-23T20:00:23-07:00</updated>
<published>2010-03-23T20:00:23-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6212&amp;p=58920#p58920</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6212&amp;p=58920#p58920"/>
<title type="html"><![CDATA[RAM speed, Is there too Fast for the NES?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6212&amp;p=58920#p58920"><![CDATA[
I forgot to mention the Midines RAM would have been CHR only, as well.<br /><br />I still don't 100% understand what the deal was with the sprite-DMA causing problems with my EPROM emulator (causing 1 or 2 constantly corrupted sprites).  IIRC kevtris had theorized that the DMA may be allowing some brief glitches on the chip enable, and if the PRG chip is fast enough it might respond to it.<br /><br />In any event, putting resistors in series with the data bus was the only way to fix that.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=10">Memblers</a> — Tue Mar 23, 2010 8:00 pm</p><hr />
]]></content>
</entry>
</feed>