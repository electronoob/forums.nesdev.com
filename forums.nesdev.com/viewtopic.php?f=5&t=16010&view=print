<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - NesDev designs a console</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">NesDev designs a console</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=5&amp;t=16010">http://forums.nesdev.com/viewtopic.php?f=5&amp;t=16010</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>9</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>pubby</b> [ Wed May 31, 2017 7:24 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>NesDev designs a console</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Recently I've been reading <a href="http://www.agner.org/optimize/blog/read.php?i=421" class="postlink">Agner Fog's message board</a> where he and others discuss creating an open source instruction set. It's interesting stuff, so if you have 30 minutes you might want to check it out.<br /><br />Anyway, this got me thinking:<br /> <br />What would it look like if NesDev designed an imaginary 8-bit video game system? We could come up with our own design for a CPU, PPU, and APU, and have fun discussing the options.<br /><br />So let's try it!<br /><br />Let's start out with some basic specs:<br /><br /><ul><li>4KB RAM</li><li>8-bit CPU</li><li>16-bit address space</li></ul><br />For the PPU, I'm thinking a window size of 256x224 with nametables of size 256x240 would be good. This gives 16 extra VBLANK scanlines vs the NES, and allows 4-way scrolling to hide tile updates in the off-screen section.<br /><br />For the CPU's instruction set, I think it's important that it be compatible with C, as that would make the system much more accessible. I don't know what the ISA should look like, however.<br /><br />What do you think?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Wed May 31, 2017 7:59 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: NesDev designs a console</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Three words:<br /><br />Turbo<br />Grafx<br />Sixteen

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>zzo38</b> [ Wed May 31, 2017 8:03 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: NesDev designs a console</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I had a design for PPU that had its own instructions that it could execute during hblank/vblank (and the program always restarts from the beginning during each vblank), and then the PPU is clock-interleaved with the CPU, so that they can share memory without conflicting.<br /><br />My ideas for another computer it had the &quot;video instruction set&quot; as follows:<ul><li>0: JMP: Jump to the operand's address. (If the operand is immediate, treats it as an instruction.)</li><li>1: WAI: Same as JMP but wait for the next hblank before continuing.</li><li>2: ROL: Rotate left operand value through carry, and store result in A.</li><li>3: ROR: Rotate right operand value through carry, and store result in A.</li><li>4: ADC: Add operand value with carry to A.</li><li>5: CMC: Complement carry flag; operand is read but ignored.</li><li>6: SBC: Subtract operand value with carry from A.</li><li>7: CMP: Subtract operand value from A (without carry); update carry flag but do not update A.</li><li>8: AND: Bitwise AND operand with A and store in A.</li><li>9: ORA: Bitwise OR operand with A and store in A.</li><li>10: EOR: Bitwise XOR operand with A and store in A.</li><li>11: SAR: Write value from A into video register specified by operand. (This includes the playfield address, palette, modes, and other stuff.)</li><li>12: LDA: Load operand value into A.</li><li>13: LDB: Load operand value into B.</li><li>14: STA: Store A into operand. (You can write to an immediate value.)</li><li>15: STB: Store B into operand.</li></ul>The video instruction set also has one flag (carry), two 8-bit accumulator registers (A and B), and each instruction also has an addressing mode (A, B, 8-bit immediate, or 16-bit absolute), and a condition code (never, if carry clear, if carry set, or always). Note also that this enables tile height to be any number, because it is programmed by software.<br /><br />Note that the CPU would have its own instruction set, not the above.<br /><br />For audio, there is some kind of ideas. You could have different channels that act differently, and maybe even some like SID, some like GameBoy, etc. One idea I had is you could have a &quot;IDFX&quot; channel. There are four 4-bit numbers, called I, D, F, X (in addition to the period, which is separate). If the phase is p, and output volume is v (0 to 15), then (as a C code): <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">v=&#40;&#40;&#40;p&amp;I&#41;^&#40;p&lt;D?15:0&#41;&#41;&amp;F&#41;^X</tt><br /><br />You could also have additional RAM in the cartridge if 4K is insufficient, like it can be on NES/Famicom.<br /><br />I also think there should be both keyboard and game controls, and possibly even Forth built-in that can be executed when no cartridge is present (you may then save the program on a tape, if you want to keep it; usually you would use ROM cartridges though; the Forth is just something extra).<br /><br />You may vary these things; all of the above are just ideas, and you can do differently if you want to do.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Wed May 31, 2017 8:10 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: NesDev designs a console</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />... Good for C? On an 8-bitter? Er.<br /><br />Just how much cheating is allowed?<br /><br />Can I choose a 16-bit machine that's contemporary? (CP1600) Can I choose an 8-ish-bit machine that's substantially later? (AVR;1996) How about a 16-bit ISA that's older than the AVR? (MSP430;1993) ... How about a 32-bit ISA that's substantially older? (MIPS or ARM; 1985, both with prototypes back to 1980)<br /><br />Honestly, if I wanted to make something &quot;Like the NES, but less bad for C&quot; I'd end up very close to the SMS.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Rahsennor</b> [ Wed May 31, 2017 8:43 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: NesDev designs a console</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I've been doing this in my head for ages. So many silly ideas, so little time. I even wrote an emulator for my APU design, the FRA1, though I'm still not convinced it would actually work in period-accurate silicon.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>pubby</b> [ Wed May 31, 2017 9:03 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: NesDev designs a console</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />@zzo38: This is an interesting idea!<br /><br /><div class="quotetitle">lidnariq wrote:</div><div class="quotecontent">Can I choose a 16-bit machine that's contemporary? (CP1600) Can I choose an 8-ish-bit machine that's substantially later? (AVR;1996) How about a 16-bit ISA that's older than the AVR? (MSP430;1993) ... How about a 32-bit ISA that's substantially older? (MIPS or ARM; 1985, both with prototypes back to 1980)</div><br /><br />The three guidelines are:<br /><br /><ul><li>Possible to be manufactured using 1985 fabrication methods</li><li>Fit what people imagine when they think &quot;1985 game console&quot;</li><li>Be decently cost effective</li></ul><br />IMO 32-bit CPUs are out of the question because that's not how gamers remember the era.<br /><br />You can use modern instruction sets if they're not <em>too</em> complicated, though honestly, when I started this thread I was hoping people would come up with their own wacky instruction sets instead of using existing ones - not because they would be better, but because I think it's fun to start from scratch <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /> <br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I've been doing this in my head for ages. So many silly ideas, so little time. I even wrote an emulator for my APU design, the FRA1, though I'm still not convinced it would actually work in period-accurate silicon.<br /></div><br />Have you published anything about it?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>madbrain</b> [ Wed May 31, 2017 10:14 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: NesDev designs a console</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Writing a C backend is not for the faint of heart. Something like LLVM is designed for 32bit machines with a bunch of identical registers, no flags, automatic sign/zero extension, flat addressing space and [register+offset] addressing and so forth.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>nicklausw</b> [ Wed May 31, 2017 10:24 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: NesDev designs a console</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Is there a limit on number of registers? That's pretty <s>detrimental to the whole C thing</s> important in terms of making the CPU C-friendly, for better wording.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>madbrain</b> [ Wed May 31, 2017 10:57 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: NesDev designs a console</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">nicklausw wrote:</div><div class="quotecontent">Is there a limit on number of registers? That's pretty detrimental to the whole C thing.</div><br />It depends on how registers are accessed. In 1985, arcade games had started using FM chips like the OPM and OPN and OPL, and those have over 200 bytes of registers which is pretty massive for the time. This is because they're all large shift registers that are always accessed in the same sequence and constantly get refreshed, which makes them very efficient to implement. (this is also why the tg16's audio chip works the way it does)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Oziphantom</b> [ Wed May 31, 2017 11:03 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: NesDev designs a console</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />50Mhz 4510 CPU<br />128K-512K RAM<br />Graphics chip with sprites, bitmap and char mode. Should be 256 colours per each, so 256 colour sprites, 256 colour chars<br />1080p graphics with modern output HDMI/DP etc<br />DMA engine<br />Blitter<br /><br />so basically just a MEGA65 <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /><!-- m --><a class="postlink" href="http://c65gs.blogspot.com.au/">http://c65gs.blogspot.com.au/</a><!-- m --><br /><!-- m --><a class="postlink" href="http://mega65.org/">http://mega65.org/</a><!-- m -->

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Rahsennor</b> [ Wed May 31, 2017 11:12 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: NesDev designs a console</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">pubby wrote:</div><div class="quotecontent">Have you published anything about it?</div><br />Not yet. It's a 4-bit wavetable chip similar to the N163 or PCE, but designed to stream samples from external memory by stealing a few bytes from each scanline of the PPU's fetch pattern. Other than what's involved in doing that, avoiding aliasing and a neat little sample compression trick, there's not really much to it.<br /><br />Here's a demo rendering, using my crappy homemade samples and a random MIDI. 6 MHz host clock, 6 channels and 128-byte samples (I think only 4 of them are actually used in this clip, so that's 512 bytes total).

		
			<br clear="all" /><br />

			<table class="tablebg" width="100%" cellspacing="1">
			<tr>
				<td><b class="genmed">Attachments: </b></td>
			</tr>
			
				<tr>
					<td>
			<span class="genmed">
				<img src="./styles/subsilver2/imageset/icon_topic_attach.gif" width="14" height="18" alt="" title="" /> 
				<a href="./download/file.php?id=9092">Kakariko Village.ogg</a> [1020.55 KiB]
			</span><br />
			<span class="gensmall">Downloaded 52 times</span>
		

		<br />
	</td>
				</tr>
			
			</table>
		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Wed May 31, 2017 11:14 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: NesDev designs a console</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I love the 6502, but if I could improve anything about it, I'd expand the support for addressing modes (indirect addressing using the X register, for example), and maybe add another index and possibly even another accumulator. I don't really care about C, coding in assembly is more fun! <img src="./images/smilies/icon_mrgreen.gif" alt=":mrgreen:" title="Mr. Green" /><br /><br /><div class="quotetitle">pubby wrote:</div><div class="quotecontent">nametables of size 256x240</div><br />Oh, come on! Why can't we go for nice power-of-2 dimensions to make scrolling easier? Getting the attribute tables out of the way already helps a lot with vertical scrolling even if name tables are 240 pixels tall, but 256 pixels would make things much cleaner overall, and even provide some extra room for the scroll seam (useful for 32x32-pixel metatiles maybe?).<br /><br />Other than that, I find the idea of 3bpp graphics really interesting, that combined with a decent number of palettes (maybe 8, shared between sprites and the background) could produce really nice graphics. A larger, more consistent master palette than what the NES has would be very welcome. Other PPU features I'd want are more sprites per scanline (16 would probably be OK, but the more the better) and a built-in scanline counter. Background attributes such as tile flipping and priority (in front or behind sprites) would be cool too.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>pubby</b> [ Wed May 31, 2017 11:35 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: NesDev designs a console</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">Other than that, I find the idea of 3bpp graphics really interesting, that combined with a decent number of palettes (maybe 8, shared between sprites and the background) could produce really nice graphics.</div><br />I was thinking about having only a single pattern table with 4bpp. This allows 15 colors per sprite, but you can also combine two 2bpp tiles into one 4bpp tile, or four 1bpp tiles into one, etc. <br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Oh, come on! Why can't we go for nice power-of-2 dimensions to make scrolling easier?</div><br />I like this idea but you need to come up with how attributes/tile colors exist in memory.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Drew Sebastino</b> [ Wed May 31, 2017 11:39 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: NesDev designs a console</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />16GB RAM<br />64-bit CPU<br />48-bit address space

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Wed May 31, 2017 11:41 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: NesDev designs a console</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent"> name tables [ that are ] 256 pixels would make things much cleaner overall, and even provide some extra room for the scroll seam<br /></div>It'd also be nice to not treat PAL consoles as second class. Supporting a 256x256 mode would be awfully close to full screen...<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Other than that, I find the idea of 3bpp graphics really interesting, that combined with a decent number of palettes (maybe 8, shared between sprites and the background) could produce really nice graphics. A larger, more consistent master palette than what the NES has would be very welcome. Other PPU features I'd want are more sprites per scanline (16 would probably be OK, but the more the better) and a built-in scanline counter. Background attributes such as tile flipping and priority (in front or behind sprites) would be cool too.<br /></div>And that's basically what I meant by &quot;I'd end up with the SMS&quot;. Fix the obvious awkwardnesses of the NES (e.g. 8.5 bits per nametable entry obviously becomes 16 bits; increase bit depth of both sprites and backgrounds from 2bpp to 4bpp, enlarge the source palette from 56 colors to 64), switch to a more-nearly-C-friendly ISA (Z80 is better than 6502 for that), <br /><br />I mean, not that the SMS is flawless. There's plenty things I'd take from the NES side of the equation, too (such as the ability to do any interesting raster effects at all, the external PPU data bus, a sound IC that doesn't hurt to listen to), but ... all things said, it'd be closer to the SMS.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>9</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>