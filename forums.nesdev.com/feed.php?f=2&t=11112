<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=2&amp;t=11112" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2014-06-14T10:04:50-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=2&amp;t=11112</id>
<entry>
<author><name><![CDATA[Jarhmander]]></name></author>
<updated>2014-06-14T10:04:50-07:00</updated>
<published>2014-06-14T10:04:50-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11112&amp;p=129850#p129850</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11112&amp;p=129850#p129850"/>
<title type="html"><![CDATA[Re: ca65 goodies]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11112&amp;p=129850#p129850"><![CDATA[
ca65 can change the charmap &quot;dynamically&quot;, so yes it is possible (or thefox' last macro wouldn't work/would have no practical use). It would even be possible to do it less verbosely using macros—which would look much like the last macro.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=336">Jarhmander</a> — Sat Jun 14, 2014 10:04 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[zzo38]]></name></author>
<updated>2014-06-14T09:48:09-07:00</updated>
<published>2014-06-14T09:48:09-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11112&amp;p=129848#p129848</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11112&amp;p=129848#p129848"/>
<title type="html"><![CDATA[Re: ca65 goodies]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11112&amp;p=129848#p129848"><![CDATA[
Is it possible in ca65 to tell some string literals to use ASCII and some to use custom character sets? My own assembler has this feature, and if you need it in ca65 too then perhaps you should add such a thing.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4734">zzo38</a> — Sat Jun 14, 2014 9:48 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[thefox]]></name></author>
<updated>2014-06-14T00:14:06-07:00</updated>
<published>2014-06-14T00:14:06-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11112&amp;p=129846#p129846</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11112&amp;p=129846#p129846"/>
<title type="html"><![CDATA[Re: ca65 goodies]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11112&amp;p=129846#p129846"><![CDATA[
On the same note, here are a couple of macros I've used to save/restore the charmap before modifying it. They save the original character map, and then set a &quot;direct&quot; mapping 1..255 =&gt; 1..255. Note that in this implementation __saveCharMap opens a new scope, so it may not be usable under all circumstances (but was fine for what I was doing).<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">.macro __saveCharMap<br />    ; In scope so that CHARMAP_xxxs are local.<br />    .scope<br />        ; Find out character mappings.<br />        .repeat 255, i<br />            ; Change mapping only if it's not already direct to avoid flooding<br />            ; the debug information with unnecessary symbols.<br />            .if i + 1 &lt;&gt; .strat( .sprintf( &quot;%c&quot;, i + 1 ), 0 )<br />                ; Save the current mapping.<br />                .ident( .sprintf (&quot;__CHARMAP_%d&quot;, i + 1 ) ) .set .strat( .sprintf( &quot;%c&quot;, i + 1 ), 0 )<br />                ; Set mapping to direct (1..255 -&gt; 1..255).<br />                .charmap i + 1, i + 1<br />            .endif<br />        .endrepeat<br />.endmacro<br /><br />.macro __restoreCharMap<br />        ; Now restore the original mapping.<br />        .repeat 255, i<br />           ; Restore only those char mappings which were modified.<br />            .ifdef .ident( .sprintf (&quot;__CHARMAP_%d&quot;, i + 1 ) )<br />                .charmap i + 1, .ident( .sprintf (&quot;__CHARMAP_%d&quot;, i + 1 ) )<br />            .endif<br />        .endrepeat<br />    .endscope<br />.endmacro<br /></div><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=80">thefox</a> — Sat Jun 14, 2014 12:14 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Jarhmander]]></name></author>
<updated>2014-06-13T12:07:31-07:00</updated>
<published>2014-06-13T12:07:31-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11112&amp;p=129841#p129841</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11112&amp;p=129841#p129841"/>
<title type="html"><![CDATA[Re: ca65 goodies]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11112&amp;p=129841#p129841"><![CDATA[
Yep, that was the first pitfall I encountered when using the cc65 suite. cl65 uses the c64 charmap by default (because the default target is c64), and that &quot;corrupted&quot; the iNES header.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=336">Jarhmander</a> — Fri Jun 13, 2014 12:07 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Movax12]]></name></author>
<updated>2014-06-13T11:41:26-07:00</updated>
<published>2014-06-13T11:41:26-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11112&amp;p=129839#p129839</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11112&amp;p=129839#p129839"/>
<title type="html"><![CDATA[Re: ca65 goodies]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11112&amp;p=129839#p129839"><![CDATA[
That's pretty nice. Just note to be careful that redefining the charset doesn't cause things like &quot;NES&quot; in the iNES header to be changed.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4680">Movax12</a> — Fri Jun 13, 2014 11:41 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[thefox]]></name></author>
<updated>2014-06-13T08:47:23-07:00</updated>
<published>2014-06-13T08:47:23-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11112&amp;p=129836#p129836</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11112&amp;p=129836#p129836"/>
<title type="html"><![CDATA[Re: ca65 goodies]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11112&amp;p=129836#p129836"><![CDATA[
Here's a fairly convenient way to create custom character mappings based on a tileset. &quot;#&quot; is used to notate unused characters.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">.define CHARSET .concat( &quot;################&quot;, \<br />                         &quot;################&quot;, \<br />                         &quot; ###############&quot;, \<br />                         &quot;################&quot;, \<br />                         &quot;#ABCDEFGHIJKLMNO&quot;, \<br />                         &quot;PQRSTUVWXYZ#####&quot;, \<br />                         &quot;0123456789######&quot;, \<br />                         &quot;#()###########-=&quot;, \<br />                         &quot;#abcdefghijklmno&quot;, \<br />                         &quot;pqrstuvwxyz#####&quot;, \<br />                         &quot;################&quot;, \<br />                         &quot;##,.##`'##,.:;!?&quot; )<br /><br />.repeat .strlen( CHARSET ), i<br />    .if .strat( CHARSET, i ) &lt;&gt; '#'<br />        .charmap .strat( CHARSET, i ), i<br />    .endif<br />.endrepeat<br /><br />.undefine CHARSET<br /></div><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=80">thefox</a> — Fri Jun 13, 2014 8:47 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Movax12]]></name></author>
<updated>2014-04-15T10:37:09-07:00</updated>
<published>2014-04-15T10:37:09-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11112&amp;p=127755#p127755</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11112&amp;p=127755#p127755"/>
<title type="html"><![CDATA[Re: ca65 goodies]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11112&amp;p=127755#p127755"><![CDATA[
How to evaluate unknown amount of parameters:<br /><br />You could probably do this with just a repeat as well, but I find recursion the easiest way. The simplest way is to just list a bunch of parameters and hope you have enough and recurse on them, but more flexible is something like:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">.macro myMacro param<br /><br />    ; quickly find next comma:<br />    .local COMMA_POSITION<br />    COMMA_POSITION .set 0<br />    <br />    .repeat .tcount({param}), I<br />        .if .not COMMA_POSITION<br />            .if .xmatch( {.mid(I, 1, {param}) } ,  {,}   )<br />                COMMA_POSITION .set I<br />            .endif<br />        .endif<br />    .endrepeat<br /><br />    .if COMMA_POSITION<br />        .define PARAM  .mid(0, COMMA_POSITION, {param})<br />    .else<br />        .define PARAM param<br />    .endif<br />    <br />    ; -----    <br />    ; Do some stuff with PARAM<br />    ; -----<br />   <br />    .undefine PARAM<br />    ; do again with next param if there was a comma:<br />    .if COMMA_POSITION<br />        myMacro { .mid ( COMMA_POSITION + 1 , .tcount({param}) - COMMA_POSITION - 1, {param} ) }<br />    .endif<br /><br />.endmacro<br /></div><br /><br />Then one would call the macro with as many parameters as they want, but the parameters must be in in curly braces &quot;{}&quot;.<br />This isn't a big deal but it allows for some flexibility where you may want other parameters passed that are not a part of the variable amount of parameters:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">call myFunctionName, {x: #34, y: foo, a: bar, p1: baz}, banked<br /></div><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4680">Movax12</a> — Tue Apr 15, 2014 10:37 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Movax12]]></name></author>
<updated>2014-04-12T00:08:42-07:00</updated>
<published>2014-04-12T00:08:42-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11112&amp;p=127674#p127674</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11112&amp;p=127674#p127674"/>
<title type="html"><![CDATA[Re: ca65 goodies]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11112&amp;p=127674#p127674"><![CDATA[
Was working on the aforementioned stuff and came up with an idea to help with .define style macros.<br />These can be very helpful in some cases: they can be used anywhere, as compared to regular macros which are required to be at the beginning of a line. As well, they are the only &quot;variable&quot; in ca65 that can be assigned a string. They are constants, but they can be undefined and redefined, so they can be treated as variables. The problem is that they can get really tricky, for example:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">.define FOO BAR<br /><br />.ifdef FOO<br />    .out &quot;YES&quot;<br />.else<br />    .out &quot;NO&quot;<br />.endif<br /></div><br /><br />This will output NO, since the .define macros always resolve to their value, which is BAR, and BAR is not defined. They only way they don't resolve to their value is when using <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">.undefine</tt><br /><br />To make things simpler I use this:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">.define inlineIsDefined(i)  ( .defined(::.ident(.sprintf(&quot;_ISDEFINED_%s&quot;, i) )) .and ::.ident(.sprintf(&quot;_ISDEFINED_%s&quot;, i) ) )<br /><br />.macro define i, v<br />    ; if defined and if defined as 1<br />    .if inlineIsDefined i<br />        .undefine .ident(i)<br />    .endif<br />    <br />    .define .ident(i) v<br />    ::.ident(.sprintf(&quot;_ISDEFINED_%s&quot;, i)) .set 1<br />    <br />.endmacro<br /><br />.macro undefine i<br />    .if inlineIsDefined i<br />        .undefine .ident(i)<br />    .endif<br />    <br />    ::.ident(.sprintf(&quot;_ISDEFINED_%s&quot;, i)) .set 0<br />.endmacro<br /></div><br /><br />With these macros you can:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">define &quot;FOO&quot;, BAR<br /><br />; output is YES<br />.if inlineIsDefined &quot;FOO&quot;<br />    .out &quot;YES&quot;<br />.else<br />    .out &quot;NO&quot;<br />.endif<br /><br />; redefine:<br />define &quot;FOO&quot;, &quot;This is a string&quot;<br /></div><br /><br />This also has the advantage that you can use define or undefine at anytime, whereaas with the original .define and .undefine, ca65 would output an error if the identifier was not defined/undefined properly first.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4680">Movax12</a> — Sat Apr 12, 2014 12:08 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Jarhmander]]></name></author>
<updated>2014-04-04T11:08:02-07:00</updated>
<published>2014-04-04T11:08:02-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11112&amp;p=127422#p127422</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11112&amp;p=127422#p127422"/>
<title type="html"><![CDATA[Re: ca65 goodies]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11112&amp;p=127422#p127422"><![CDATA[
In the spirit of the last post, here's some &quot;goodies&quot; of mine. They are pseudo-ops that just reduce the number of lines of code, however one should always be cautious because they can possibly emit alot of instructions, so they can create a false impression of program compactness. Also, one may call it heresy that those pseudo-ops are more than 3 characters, and that it may look like another cpu instruction set: no, my goal isn't to implement another processor in a 6502, it is just to save a bit of typing while having some fun with ca65's macro system.<br /><br /><strong>push/pop:</strong><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">.macro push a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15<br />    .ifnblank a0<br />        .if .xmatch({a0},p) .or .xmatch({a0},P)<br />            php<br />        .else<br />            .if .match({a0},x)<br />                txa<br />            .elseif .match({a0},y)<br />                tya<br />            .elseif .match(.left(1,{a0}),=)<br />                lda #&gt;(.right(.tcount({a0})-1,{a0}))<br />                pha<br />                lda #&lt;(.right(.tcount({a0})-1,{a0}))<br />            .elseif !(.match({a0},a))<br />                lda a0<br />            .endif<br />            pha<br />        .endif<br />        push a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15<br />    .endif<br />.endmacro<br /><br />.macro pop a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15<br />    .ifnblank a0<br />        pop a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15<br />        .if .xmatch({a0},p) .or .xmatch({a0},P)<br />            plp<br />        .else<br />            pla<br />            .if .match({a0},x)<br />                tax<br />            .elseif .match({a0},y)<br />                tay<br />            .elseif !(.match({a0},a))<br />                sta a0<br />            .endif<br />        .endif<br />    .endif<br />.endmacro</div><br />The idea here is that you specify what you want to push/pull to/from the stack; A, X, Y and P can be specified along with memory locations. <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">push</tt> pushes all the args in the order specified and <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">pop</tt> pops them in reverse order, so the following:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">    push A,X,Y,somevar<br />    pop  A,X,Y,somevar<br /></div><br />...will save and restore correctly the specified registers and the memory location. Of course, A should be first (or second, if P is first) in the list if one want to save A, or else A won't be correctly saved/restored without a warning.<br /><br />Also, <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">push</tt> accepts regular immediate (8-bit) arguments but also 'absolute' arguments with <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">=</tt>: one can push absolute addresses, and those addresses are pushed in the same order that <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">jsr</tt> and <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">brk</tt> does. So the following is a slow and convoluted way to jump at <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">somelabel</tt>:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">    ; using rts<br />    push =somelabel-1<br />    rts<br /><br />    ; using rti<br />    push =somelabel, P<br />    rti</div><br /><br /><strong>mov/movw:</strong><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">.macro mov dest, src<br />    lda src<br />    sta dest<br />.endmacro<br /><br />.macro movw dest, src<br />    .local sepd, seps<br />    sepd .set 0<br />    seps .set 0<br /><br />    .if .match({.right(2,{dest})},{,x}) .or .match({.right(2,{dest})},{,y})<br />        sepd .set 2<br />    .endif<br />    .if .match({.right(2,{src})},{,x}) .or .match({.right(2,{src})},{,y})<br />        seps .set 2<br />    .endif<br />    <br />    .if .match(.left(1, {src}),#)<br />        mov {.left(.tcount({dest})-sepd,dest)+0 .right(sepd,dest)}, #&lt;(.right(.tcount({src})-1,{src}))<br />        mov {.left(.tcount({dest})-sepd,dest)+1 .right(sepd,dest)}, #&gt;(.right(.tcount({src})-1,{src}))<br />    .else<br />        mov {.left(.tcount({dest})-sepd,dest)+0 .right(sepd,dest)}, {.left(.tcount({src})-seps,src)+0 .right(seps,src)}<br />        mov {.left(.tcount({dest})-sepd,dest)+1 .right(sepd,dest)}, {.left(.tcount({src})-seps,src)+1 .right(seps,src)}<br />    .endif<br />.endmacro</div><br /><tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">mov</tt> is trivial so won't explain, but is included here nevertheless because <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">movw</tt> uses it. The latter moves a word (which can be immediate) into some address; it assumes words are stored into consecutive byte addresses. <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">dest</tt> and <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">src</tt> can even use absolute or zeropage indexed addressing mode if you use curly braces:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">    movw {$4000,X}, {APU_virtualregs,X}<br /></div><br />Limitations: it can only use A for transfers, it does not fit well with the use of the struct-of-array &quot;idiom&quot;<s>, and if you try to use indexed indirect addressing, it will silently break because it will be converted into absolute indexed</s> (oh nevermind, it gives errors fortunately, but one should be cautious when using parens, it should not begin with an open parens, that how ca65 tells if it's absolute or indirect addressing).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=336">Jarhmander</a> — Fri Apr 04, 2014 11:08 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[thefox]]></name></author>
<updated>2014-03-27T09:54:59-07:00</updated>
<published>2014-03-27T09:54:59-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11112&amp;p=127212#p127212</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11112&amp;p=127212#p127212"/>
<title type="html"><![CDATA[Re: ca65 goodies]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11112&amp;p=127212#p127212"><![CDATA[
Here's a little something.<br /><br />I made some macros to make parameter passing just a little bit easier to manage. I call it <strong>xparam</strong>. I used this quite a lot in STREEMERZ.<br /><br />Here's how you declare a function (in a header file):<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">; Function declaration.<br />xdecl testFunc<br />    ; Function parameters.<br />    foo     .byte<br />    bar     .word<br />    ; Parameters/locals can be structs too (testStruct is declared elsewhere)<br />    xxx     .tag testStruct<br />    <br />    ; Local variables of the function.<br />    xlocals<br />        xyzzy   .dword<br />        dog     .byte<br />    endxlocals<br />endxdecl<br /></div><br />Function parameters and local variables can be accessed in the function:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">xproc testFunc<br />    lda param foo<br />    sta local dog    <br />    rts<br />endxproc<br /></div><br />Here's how you would call an xparam function:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">ldx #111<br />xinvoke testFunc, foo: x, bar: #$5566, xxx: structInMemory<br /></div><br />Inputs can be registers, immediate values or memory addresses. Everything is stored on the zero page. See README.txt in ZIP for caveats/more info. <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /><br />Also note that build.cmd in the ZIP file requires that the ZEROPAGE segment is at least 32 bytes big (it uses the &quot;none&quot; configuration, which by default for some strange reason only has $1F bytes of zero page). To fix it, modify none.cfg in your ca65 installation directory.<br /><br />Here's a commented disassembly of the binary produced by the files in the ZIP:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">        .setcpu &quot;6502&quot;<br /><br />L0226           := $0226<br />L024E           := $024E<br />        ldx     #$6F<br />        <br />        ; testFunc invocation (in test.s)<br />        ; x is directly stored at $00 (foo)<br />        stx     $00<br />        ; $5566 is loaded at $01 (bar)<br />        lda     #$66<br />        sta     $01<br />        lda     #$55<br />        sta     $02<br />        ; The struct (3 bytes) is loaded from memory<br />        lda     $0223<br />        sta     $03<br />        lda     $0224<br />        sta     $04<br />        lda     $0225<br />        sta     $05<br />        ; The actual function call to testFunc.<br />        jsr     L0226<br />        <br />        ; &quot;xparam&quot; macro demonstrations (to access parameter &quot;bar&quot;).<br />        lda     $01<br />        lda     $02<br />        .byte   111 ; byteInMemory<br />        .byte   123 ; structInMemory<br />        .word   $DEA<br />        <br />        ; testFunc (test-module.s):<br />        lda     $00<br />        lda     $01<br />        lda     $02<br />        lda     $03<br />        lda     $04<br />        lda     $05<br />        ; testFunc local variable accesses:<br />        lda     #$7B<br />        sta     $10<br />        sta     $11<br />        sta     $12<br />        sta     $13<br />        sta     $14<br />        ; testFunc invokes nestedFunc:<br />        lda     #$7B<br />        sta     $06<br />        lda     #$67<br />        sta     $07<br />        lda     #$45<br />        sta     $08<br />        jsr     L024E<br />        rts<br /><br />        ; nestedFunc (nested-module.s):<br />        lda     $06<br />        lda     $07<br />        rts<br /></div><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=80">thefox</a> — Thu Mar 27, 2014 9:54 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2014-03-24T08:09:55-07:00</updated>
<published>2014-03-24T08:09:55-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11112&amp;p=127129#p127129</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11112&amp;p=127129#p127129"/>
<title type="html"><![CDATA[Re: ca65 goodies]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11112&amp;p=127129#p127129"><![CDATA[
<div class="quotetitle">Jarhmander wrote:</div><div class="quotecontent"><br />there's no notion of &quot;project&quot; with cl65<br /></div><br />I used &quot;project&quot; to refer to a folder containing at least one source code file and at least one linker configuration file. My copy of cl65 2.14.0 cannot link with <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">-t none</tt>.<br /><br /><div class="quotetitle">thefox wrote:</div><div class="quotecontent"><br />Unfortunately there are a lot of &quot;snapshot builds&quot; of cc65 out in the wild with the same version numbers and nothing to distinguish each other.<br /></div><br />That's why I made the macro: so I could make an automatic tool to distinguish builds of my own projects by their build date.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Mon Mar 24, 2014 8:09 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[thefox]]></name></author>
<updated>2014-03-24T07:57:55-07:00</updated>
<published>2014-03-24T07:57:55-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11112&amp;p=127128#p127128</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11112&amp;p=127128#p127128"/>
<title type="html"><![CDATA[Re: ca65 goodies]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11112&amp;p=127128#p127128"><![CDATA[
<div class="quotetitle">Jarhmander wrote:</div><div class="quotecontent"><br />Besides, an important information for troubleshooting is lacking: version information of cl65.<br /></div><br />Unfortunately there are a lot of &quot;snapshot builds&quot; of cc65 out in the wild with the same version numbers and nothing to distinguish each other. It looks like the recent snapshot versions do include the first 7 characters of the Git revision hash, though, which is good.<br /><br />It also looks like some older versions included the SVN revision as well, but only for the C compiler (cc65):<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">C:\Users\f&gt;cc65 --version<br />cc65 V2.13.9<br />SVN version: 5963<br /><br />C:\Users\f&gt;ld65 --version<br />ld65 V2.13.9 - (C) Copyright 1998-2009, Ullrich von Bassewitz<br />ld65.exe: Error: No object files to link<br /><br />C:\Users\f&gt;ca65 --version<br />ca65 V2.13.9 - (C) Copyright 1998-2011 Ullrich von Bassewitz<br />ca65.exe: No input files<br /></div><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=80">thefox</a> — Mon Mar 24, 2014 7:57 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Jarhmander]]></name></author>
<updated>2014-03-24T07:01:52-07:00</updated>
<published>2014-03-24T07:01:52-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11112&amp;p=127126#p127126</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11112&amp;p=127126#p127126"/>
<title type="html"><![CDATA[Re: ca65 goodies]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11112&amp;p=127126#p127126"><![CDATA[
<div class="quotetitle">zzo38 wrote:</div><div class="quotecontent"><br /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">Oops, my bad. It's hard to test certain things without creating a new project.<br /></div>That is one reason why some people don't use ca65. (I don't use ca65 either, but I can understand some of things you write in here, some of which might help people using any system, I suppose.)</div><br />I don't know why tepples talks about creating a project: there's no notion of &quot;project&quot; with cl65, and if he's talking about NESICIDE projects, it's unnecessary to use it to test those macros, as the shell is sufficient and the simplest way to test simple things like the macros of this thread.<br /><br />Besides, an important information for troubleshooting is lacking: version information of cl65.<br /><br />Here's my full test session:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">$ cl65 --version<br />cl65 V2.13.9 - (C) Copyright 1998-2011 Ullrich von Bassewitz<br />cl65: No input files<br />$ cat foo.s<br />cat: foo.s: No such file or directory<br />$ touch foo.s<br />$ cl65 -t none foo.s<br />$ xxd foo<br />$ echo '.byte $42' &gt; foo.s<br />$ cl65 -t none foo.s<br />$ xxd foo<br />0000000: 42                                       B<br />$ cat thefox.s<br />.macro nibbleToHexAscii nibble<br />    .local x0, x1, x2, x3<br />    .local y0, y1, y2, y3, y4<br /><br />    x3 = ( nibble &gt;&gt; 3 ) &amp; 1<br />    x2 = ( nibble &gt;&gt; 2 ) &amp; 1<br />    x1 = ( nibble &gt;&gt; 1 ) &amp; 1<br />    x0 = ( nibble &gt;&gt; 0 ) &amp; 1<br /><br />    y4 = ( x3 &amp; x1 ) | ( x3 &amp; x2 )<br />    y3 = ( x3 &amp; ~x2 &amp; ~x1 )<br />    y2 = ( ~x3 &amp; x2 ) | ( x2 &amp; x0 ) | ( x2 &amp; x1 )<br />    y1 = ( ~x3 &amp; x1 ) | ( x1 &amp; x0 ) | ( x3 &amp; x2 &amp; ~x1 &amp; ~x0 )<br />    y0 = ( ~x3 &amp; x0 ) | ( ~x2 &amp; ~x1 &amp; x0 ) | ( x3 &amp; x1 &amp; ~x0 ) | ( x3 &amp; x2 &amp; ~x0 )<br /><br />    .byte &lt;( ( y4 &lt;&lt; 4 | y3 &lt;&lt; 3 | y2 &lt;&lt; 2 | y1 &lt;&lt; 1 | y0 &lt;&lt; 0 ) + '0' )<br />.endmacro<br /><br />.macro wordToHexAscii addr<br />    .repeat 4, i<br />        nibbleToHexAscii { (addr &gt;&gt; ( 4 * ( 3 - i ) ) ) &amp; $F }<br />    .endrepeat<br />.endmacro<br /><br />.byte &quot;Current address is: &quot;<br />wordToHexAscii *<br />$ cl65 -t none thefox.s<br />$ xxd thefox<br />0000000: 4375 7272 656e 7420 6164 6472 6573 7320  Current address <br />0000010: 6973 3a20 3032 3137                      is: 0217<br />$ cl65 -t none --start-addr 0x8000 thefox.s<br />$ xxd thefox<br />0000000: 4375 7272 656e 7420 6164 6472 6573 7320  Current address <br />0000010: 6973 3a20 3830 3137                      is: 8017<br /></div><br />tl;dr <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">-t none</tt> works for me too without giving a config file. Mind that the default start address is $200, that's why the first example gives <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">0217</tt>.<br /><br />I use the latest available version of the debian repo available <a href="http://www.trikaliotis.net/debian" class="postlink">here</a>. Note that the latest version available in the github repo is <a href="https://github.com/cc65/cc65/blob/master/src/common/version.c" class="postlink">~2.14</a> at the time of writing.<br /><br />Nifty macro btw.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=336">Jarhmander</a> — Mon Mar 24, 2014 7:01 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[thefox]]></name></author>
<updated>2014-03-24T04:06:48-07:00</updated>
<published>2014-03-24T04:06:48-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11112&amp;p=127119#p127119</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11112&amp;p=127119#p127119"/>
<title type="html"><![CDATA[Re: ca65 goodies]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11112&amp;p=127119#p127119"><![CDATA[
<div class="quotetitle">Movax12 wrote:</div><div class="quotecontent"><br />Guessing a bit, but if you specify a <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">-t none</tt> you should also have a <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">-C config.cfg</tt>. If cl65 is going to be assembling, it doesn't matter, but if it is going to be linking, you have to use <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">-C</tt><br /></div><br />Not sure why it works here without -C, then. I can't easily check what configuration it defaults to, either, but it doesn't seem to be the C64 config (which is otherwise the default).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=80">thefox</a> — Mon Mar 24, 2014 4:06 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Movax12]]></name></author>
<updated>2014-03-23T23:42:47-07:00</updated>
<published>2014-03-23T23:42:47-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11112&amp;p=127116#p127116</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11112&amp;p=127116#p127116"/>
<title type="html"><![CDATA[Re: ca65 goodies]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11112&amp;p=127116#p127116"><![CDATA[
<div class="quotetitle">tepples wrote:</div><div class="quotecontent"><br />Then I must have an installation problem:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">$ cl65 -t none n2ha.s<br />ld65: Error: Cannot find config file `none.cfg'</div><br /></div><br /><br />Guessing a bit, but if you specify a <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">-t none</tt> you should also have a <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">-C config.cfg</tt>. If cl65 is going to be assembling, it doesn't matter, but if it is going to be linking, you have to use <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">-C</tt><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4680">Movax12</a> — Sun Mar 23, 2014 11:42 pm</p><hr />
]]></content>
</entry>
</feed>