<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=20&amp;t=15944" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2017-05-28T00:10:28-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=20&amp;t=15944</id>
<entry>
<author><name><![CDATA[zerowalker]]></name></author>
<updated>2017-05-28T00:10:28-07:00</updated>
<published>2017-05-28T00:10:28-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=15944&amp;p=196799#p196799</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=15944&amp;p=196799#p196799"/>
<title type="html"><![CDATA[Re: GameBoy - Help With DAA instruction]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=15944&amp;p=196799#p196799"><![CDATA[
Great explanation.<br /><br />Confusing, but i think i get a better grasp at it.<br />I seem to at least be able to remember what to do so that's something;P<br /><br />Much appreciated:)<br /><br />Now i need to figure out what's wrong with me timer as some timing tests fails which i find inconsistent.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=7556">zerowalker</a> — Sun May 28, 2017 12:10 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[AWJ]]></name></author>
<updated>2017-05-26T14:08:55-07:00</updated>
<published>2017-05-26T14:08:55-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=15944&amp;p=196702#p196702</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=15944&amp;p=196702#p196702"/>
<title type="html"><![CDATA[Re: GameBoy - Help With DAA instruction]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=15944&amp;p=196702#p196702"><![CDATA[
<div class="quotetitle">zerowalker wrote:</div><div class="quotecontent"><br />Hmm, well my method was to just do precisely as the Table said, with a ton of If/Else, but there are some cases which just doesn't exist, which you might be talking about.<br /><br />I tried the code you linked and it works.<br /><br />Though i am a bit confused how.<br /><br />I have read up on BCD, and i get the principle of it, but not much else.<br />I do understand that it uses the flags to determine what has happened and how to adjust it into a decimal equivalent if you will.<br /><br />Looking at your code,  the first check is if it's above 0x99 or the carry flag is set.<br />The table usually says both must be set in some cases.<br /></div><br /><br />Let's look at a couple of examples, with only one significant digit to keep things simple.<br /><br /><tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">0x60 + 0x60 = 0xc0</tt><br /><br />Adding 0x60 + 0x60 doesn't produce a carry, but the result is not a valid BCD number; it needs to be adjusted to 0x120, and the carry flag needs to be newly set because 0x120 doesn't fit in a byte.<br /><br /><tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">0x90 + 0x90 = 0x120 &#40;0x20 + carry&#41;</tt><br /><br />This time the result is a valid BCD number, but it isn't the <em>right</em> BCD number; it should be 0x180. The carry flag indicates that a result does need to be adjusted even if it looks like a valid BCD number.<br /><br />The same logic applies to the ones digit and the half-carry flag, except that the CPU doesn't bother <em>setting</em> the half-carry flag after a DAA, because only DAA uses the half-carry flag and doing two DAAs in a row makes no sense.<br /><br />When it comes to subtraction, as long as the operands were two valid BCD numbers, the only time a hex digit &gt; 9 can appear in the result is if a borrow occurred. Think about it: if you subtract 0-9 from 0-9, the result can't be more than 9. So for subtraction the value in A doesn't matter, only the flags (note that this only applies to the GameBoy CPU. The Z80 does DAA after subtraction a bit differently)<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />And also, isn't it &quot;high nibble is above 0x09&quot; that's what i did as the table said so, which i think is equal to A &gt; 0x90.<br /></div><br /><br /><tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">A &gt; 0x90</tt> includes 0x91 to 0x99, which are perfectly good BCD numbers. On the other hand, if A is between 0x9a and 0x9f, then the high nybble <em>will</em> be greater than 9 after the lower nybble has been adjusted. Comparing A to 0x99 is equivalent to adjusting the lower nybble first and then comparing A to 0x9f. However, if you adjust the lower nybble first then you have to worry about 0xfa-0xff wrapping around to 0x00-0x05. You want the non-wrapped result when deciding whether to adjust the upper nybble (0xfa-0xff should get both nybbles adjusted) but you want the wrapped 8 bit result for the Z flag (Z should be set if the result of adjustment is 0x100) Doing the upper nybble first spares you the trouble of juggling different integer sizes or explicitly masking.<br /><br />Also, it's not relevant to the GameBoy, but on the Z80, comparing with 0x99 before adjusting either nybble is the <em>only</em> way to nail all the edge cases of subtraction of non-valid BCD operands (some online documents and Z80 emulators describe or implement excessively complicated tests which work out to be arithmetically equivalent to &quot;A &gt; 0x99&quot;)<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3737">AWJ</a> — Fri May 26, 2017 2:08 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[DParrott]]></name></author>
<updated>2017-05-26T05:49:18-07:00</updated>
<published>2017-05-26T05:49:18-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=15944&amp;p=196671#p196671</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=15944&amp;p=196671#p196671"/>
<title type="html"><![CDATA[Re: GameBoy - Help With DAA instruction]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=15944&amp;p=196671#p196671"><![CDATA[
<div class="quotetitle">zerowalker wrote:</div><div class="quotecontent"><br />And also, isn't it &quot;high nibble is above 0x09&quot; that's what i did as the table said so, which i think is equal to A &gt; 0x90.<br /></div><br /><br />That would adjust the accumulator for values 91..99 as well, you would need to mask A (A &amp; 0xF0) to use that as a comparison.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4497">DParrott</a> — Fri May 26, 2017 5:49 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[zerowalker]]></name></author>
<updated>2017-05-25T21:21:43-07:00</updated>
<published>2017-05-25T21:21:43-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=15944&amp;p=196661#p196661</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=15944&amp;p=196661#p196661"/>
<title type="html"><![CDATA[Re: GameBoy - Help With DAA instruction]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=15944&amp;p=196661#p196661"><![CDATA[
Hmm, well my method was to just do precisely as the Table said, with a ton of If/Else, but there are some cases which just doesn't exist, which you might be talking about.<br /><br />I tried the code you linked and it works.<br /><br />Though i am a bit confused how.<br /><br />I have read up on BCD, and i get the principle of it, but not much else.<br />I do understand that it uses the flags to determine what has happened and how to adjust it into a decimal equivalent if you will.<br /><br />Looking at your code,  the first check is if it's above 0x99 or the carry flag is set.<br />The table usually says both must be set in some cases.<br /><br />And also, isn't it &quot;high nibble is above 0x09&quot; that's what i did as the table said so, which i think is equal to A &gt; 0x90.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=7556">zerowalker</a> — Thu May 25, 2017 9:21 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[AWJ]]></name></author>
<updated>2017-05-21T12:49:17-07:00</updated>
<published>2017-05-21T12:49:17-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=15944&amp;p=196282#p196282</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=15944&amp;p=196282#p196282"/>
<title type="html"><![CDATA[Re: GameBoy - Help With DAA instruction]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=15944&amp;p=196282#p196282"><![CDATA[
There's a lot of confusion over DAA, due to it behaving subtly differently between the GameBoy and the Z80 with &quot;illegal&quot; input (i.e. when the accumulator and flags contain something other than the results of a valid BCD addition or subtraction). The table in the document you've linked to is incomplete, as it doesn't indicate what the results will be in those cases.<br /><br />Do you understand what BCD (binary-coded decimal) arithmetic means? Basically, it means interpreting the upper and lower nybbles (a nybble is 4 bits or 1 hex digit) of a byte as two individual decimal digits, rather than the whole byte as one binary number. There are a few different ways to do BCD arithmetic, and every CPU with BCD support (even CPUs in the same family, like the GameBoy CPU and Z80) tends to do them a bit differently. The CPU-specific implementation details matter when you try to do BCD arithmetic on operands that aren't valid BCD numbers (i.e. the upper and/or lower nybble of one or both operands was greater than 0x9)<br /><br />The DAA instruction adjusts the results of a binary addition or subtraction (as stored in the accumulator and flags) to <em>retroactively</em> turn it into a BCD addition or subtraction. It does so by adding or subtracting 6 from the result's upper nybble, lower nybble, or both. In order to work it has to know whether the last operation was an addition or a subtraction (the n flag), and whether a carry and/or a half-carry occurred (the c and h flags). Incidentally, the DAA instruction is the only thing that the n and h flags are normally ever used by, unless a program pushes the flags onto the stack and pops them into another register to explicitly inspect them.<br /><br />The following is the simplest correct implementation of DAA for the GameBoy CPU. Note that it does the upper nybble adjust first to ensure that the two adjusts are independent without anything needing to be copied into a temporary variable (adding/subtracting 0x6 can carry into the upper nybble, but adding/subtracting 0x60 can't change the lower nybble)<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">// note: assumes a is a uint8_t and wraps from 0xff to 0<br />if (!n_flag) {  // after an addition, adjust if (half-)carry occurred or if result is out of bounds<br />  if (c_flag || a &gt; 0x99) { a += 0x60; c_flag = 1; }<br />  if (h_flag || (a &amp; 0x0f) &gt; 0x09) { a += 0x6; }<br />} else {  // after a subtraction, only adjust if (half-)carry occurred<br />  if (c_flag) { a -= 0x60; }<br />  if (h_flag) { a -= 0x6; }<br />}<br />// these flags are always updated<br />z_flag = (a == 0); // the usual z flag<br />h_flag = 0; // h flag is always cleared</div><br /><br />If you're still having problems, make sure you're setting the h and n flags correctly in your other instructions--remember that many arithmetic instructions set them, but DAA is the only instruction that uses them!<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3737">AWJ</a> — Sun May 21, 2017 12:49 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[zerowalker]]></name></author>
<updated>2017-05-15T03:47:31-07:00</updated>
<published>2017-05-15T03:47:31-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=15944&amp;p=195803#p195803</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=15944&amp;p=195803#p195803"/>
<title type="html"><![CDATA[GameBoy - Help With DAA instruction]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=15944&amp;p=195803#p195803"><![CDATA[
Hi, I am working on a GameBoy Emulator, it's my first Emulator and i have learned a lot.<br /><br />So beforehand, i Don't want a copy paste answer, i want a discussion to help me understand as i am a Very Slow learner, and just looking at the answer directly doesn't yield me much,<br />and i also want to try to get there by myself as much as possible:)<br /><br /><br />So, now, i am having issues with DAA.<br />I am trying to follow a table i found here: <!-- m --><a class="postlink" href="http://www.chrisantonellis.com/files/gameboy/gb-programming-manual.pdf">http://www.chrisantonellis.com/files/ga ... manual.pdf</a><!-- m --><br />But even if i seem to do precisely as it says, it doesn't work and i get errors in the Blargg test rom.<br /><br />I don't think there is a problem with the related instructions as the other roms that test those seem to pass, so it's rather confusing.<br /><br />Thanks:)!<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=7556">zerowalker</a> — Mon May 15, 2017 3:47 am</p><hr />
]]></content>
</entry>
</feed>