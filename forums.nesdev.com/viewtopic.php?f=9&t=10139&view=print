<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Making a EPROM Burner</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Making a EPROM Burner</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=9&amp;t=10139">http://forums.nesdev.com/viewtopic.php?f=9&amp;t=10139</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>3</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>wyatt8740</b> [ Mon Jun 03, 2013 5:43 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Making a EPROM Burner</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I am on an extremely tight budget and need to have a way to develop NES games, but I cannot spend more than $30. I have an Arduino Uno and an Arduino Leonardo, some 4021 Shift Registers, and I want to know if that is enough to make an EPROM burner / programmer. I need to be able to burn 256kb EPROMS (I'm going for a total of 512kb when PRG and CHR roms are both included) and I am relatively new to EPROMs and hands-on electronics. I have a working knowledge of the 6502 and 2A03, as well as lots of documentation.<br /><br />so my question to you is if I can make an EPROM burner / programmer that can make these, a good explanation for beginners of how EPROM programming / burning is done.<br /><br />...And just in case they exist, are any $30 or less EPROM burners / programmers? I don't care if it uses an LPT, 9 pin D-SUB, USB, or, hell, even RS/232 or a beBox Geekport. As long as it works, I probably have the required hardware somewhere, or know someone else with access.<br /><br />...And no, I don't want a copyNES and a powerpak lite. The powerpak lite is cheap enough, yes, but the copyNES is $70 and I really don't want to go more than $5 or so over budget.<br /><br />Okay, so now I've ranted, and I would really appreciate a reply, even if my hopes are in vain.<br />And I'm really new here, so please correct me if I said anything incorrect, and please help me figure out which EPROMs I would use. I want to be doing MMC3 development, and I need compatible 256KB EPROMS (one CHR and one PRG).<br /><br />My neighbor used to work for Verizon, and he actually has a really great repetoire of knowledge of the 6502, the 8086, and a lot of other old stuff. He gave me my soldering irons and he's really swell, so he can help me out if possible, but I need a poke in the right direction.<br />...Fun fact: the phone redirection systems at verizon still use 8080s! Isn't that weird?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>infiniteneslives</b> [ Mon Jun 03, 2013 6:32 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Making a EPROM Burner</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />If you're really on a tight budget and only looking to develop NES games I wouldn't suggest EPROMs.  They have a pretty high initial investment with a ~$40+ burner and ~$10+ eraser.  You can actually get started with flash/EEPROMs for quite a bit cheaper due to simpler programming and erasing abilities if you're willing to put in a little effort.  If your handy with a arduino/microcontroller kit you can easily build yourself a flash/eeprom programmer/eraser.  Or you can even build yourself a <a href="http://forums.nesdev.com/viewtopic.php?f=9&amp;t=7912" class="postlink">kazzo</a> for well under $20 if you're good with an iron.  I've written new firmware/software for dumping and flashing flash/eeproms that's compadible with Nintendo's original unmodified ASIC mappers like MMC1,2,3,4 etc.  The software/firmware is kinda in the early beta release stages but I'm willing to share it as it currently is.  The original creator's software/firmware is capable of doing the same thing I believe although the documentation is challenging as it is in Japanese and sparse.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Mon Jun 03, 2013 7:50 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Making a EPROM Burner</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />If you <strong>must</strong> use preexisting microcontroller hardware, use ROMs that supports 5V-only programming, like flash or EEPROMs. I built a 28C64 programmer in ~two hours (90m wiring; 30m code) using a PIC and a C compiler.<br /><br />EPROMs require 12V+ and that requires huge obnoxious repetitive buffer circuits that will eat into your budget. Don't do it.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>nintendo8</b> [ Wed Jun 05, 2013 2:16 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Making a EPROM Burner</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I made a sst39sf040 programmer using an arduino uno and 3 74hc595.<br />The sst39sf040 (cost $2 in single quantity at digikey) is cheaper than some eproms and does not need 12v only 5v and it is still in production and it does not need uv light to erase.<br />Here is the wiring: Pin refers to the numbering on the arduino uno.<br />The D0:D4 to go A0 to A4<br />D5:D7 go to Pins digital pins 5 to 7<br />Pin 11 CE#<br />Pin 12 OE#<br />Pin 13 WE#<br />Pin 10 is the serial strobe for the shift register this must be connected to all 3 shift registers<br />Pin 9 is the storage register this also must be connected to all 3 shift registers.<br />Pins 2,3 and 4 is the serial output pins 2 is the LSB. Unlike pin 9 and 10 those are different per each shift register.<br />A0:A18 goto the output from the 3 shift registers. Make sure you have which one is LSB and MSB right. <br />I will warn you that this can get messy as there are lots of wires be careful and check your work. My program verifies every byte if you see any errors check your wiring.<br />Here is the part that runs on the arduino uno<br /><!-- m --><a class="postlink" href="https://github.com/ComputerNerd/sst39sf040-avr">https://github.com/ComputerNerd/sst39sf040-avr</a><!-- m --><br />Note that I used avr-gcc instead of the arduino IDE to compile this if you do not have avr-gcc it can be modified with ease just change int main() to void setup() and add void loop() {} at the bottom of the program and I think it will compile just fine in the arduino IDE.<br />And here is the part that runs on your computer I have only tested it on linux but I used a cross platform library so it may work on windows<br /><!-- m --><a class="postlink" href="https://github.com/ComputerNerd/sst39sf040-computerside">https://github.com/ComputerNerd/sst39sf040-computerside</a><!-- m --><br />Also my code can be easily adapted to run on the very similar lower capacity chips. The sst39sf020a and the sst39sf010a. Just change the main for loop to run for less bytes.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Wed Jun 05, 2013 2:58 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Making a EPROM Burner</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Nice, a PDIP 5V flash chip still in production.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>wyatt8740</b> [ Thu Jun 06, 2013 8:44 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Making a EPROM Burner</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">nintendo8 wrote:</div><div class="quotecontent">I made a sst39sf040 programmer using an arduino uno and 3 74hc595.<br />The sst39sf040 (cost $2 in single quantity at digikey) is cheaper than some eproms and does not need 12v only 5v and it is still in production and it does not need uv light to erase.<br />Here is the wiring: Pin refers to the numbering on the arduino uno.<br />The D0:D4 to go A0 to A4<br />D5:D7 go to Pins digital pins 5 to 7<br />Pin 11 CE#<br />Pin 12 OE#<br />Pin 13 WE#<br />Pin 10 is the serial strobe for the shift register this must be connected to all 3 shift registers<br />Pin 9 is the storage register this also must be connected to all 3 shift registers.<br />Pins 2,3 and 4 is the serial output pins 2 is the LSB. Unlike pin 9 and 10 those are different per each shift register.<br />A0:A18 goto the output from the 3 shift registers. Make sure you have which one is LSB and MSB right. <br />I will warn you that this can get messy as there are lots of wires be careful and check your work. My program verifies every byte if you see any errors check your wiring.<br />Here is the part that runs on the arduino uno<br /><!-- m --><a class="postlink" href="https://github.com/ComputerNerd/sst39sf040-avr">https://github.com/ComputerNerd/sst39sf040-avr</a><!-- m --><br />Note that I used avr-gcc instead of the arduino IDE to compile this if you do not have avr-gcc it can be modified with ease just change int main() to void setup() and add void loop() {} at the bottom of the program and I think it will compile just fine in the arduino IDE.<br />And here is the part that runs on your computer I have only tested it on linux but I used a cross platform library so it may work on windows<br /><!-- m --><a class="postlink" href="https://github.com/ComputerNerd/sst39sf040-computerside">https://github.com/ComputerNerd/sst39sf040-computerside</a><!-- m --><br />Also my code can be easily adapted to run on the very similar lower capacity chips. The sst39sf020a and the sst39sf010a. Just change the main for loop to run for less bytes.</div><br />You have just saved my life. I am horrible with the physical aspect of electronics and while I like 9t I am not going to spend lots of money for a paralell port willem when i only have a paralell port on my 1995 ibm pc. Thanks for giving directions!<br /><br />Would it need to be altered for a SST39SF020? I only need 2Mbit/256kb chips.<br />EDIT: That was stupid and a question you answered <img src="./images/smilies/icon_razz.gif" alt=":P" title="Razz" /><br /><br />And my desoldering iron is clogged; is there a way to remove the mask roms from my donor without one?<br /><br />Can one make a MMC3 board into a TKROM board without too much effort?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>infiniteneslives</b> [ Thu Jun 06, 2013 10:46 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Making a EPROM Burner</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">wyatt8740 wrote:</div><div class="quotecontent">Can one make a MMC3 board into a TKROM board without too much effort?</div><br /><br />A TKROM board is one of the many MMC3 boards, so your question doesn't make much sense...<br /><br />Perhaps you mean, can you convert a TSROM (no battery) into a TKROM (with battery)?  Both are MMC3 and identical aside from battery backing.  If you splice in the battery baacking circuit from the wiki you should be able to make something like a TSROM work as a TKROM

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>mikejmoffitt</b> [ Thu Jun 06, 2013 11:39 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Making a EPROM Burner</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">wyatt8740 wrote:</div><div class="quotecontent">And my desoldering iron is clogged; is there a way to remove the mask roms from my donor without one?</div><br /><br />You can snip the legs of the mask ROM chips with diagonal cutters or some such, and then smack out the heated leg remains of the PCB one by one until you have usable holes. Not ideal, but it's a solution.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Shiru</b> [ Thu Jun 06, 2013 11:58 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Making a EPROM Burner</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />So called <a href="http://www.robotroom.com/PCB/Desoldering/Desoldering-braid.jpg" class="postlink">desoldering braid</a> is cheap and does job pretty well. Could be even replaced with an old stranded copper wire used for power supplies, used it in the past to desolder multi pin parts.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>mikejmoffitt</b> [ Thu Jun 06, 2013 12:15 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Making a EPROM Burner</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">mikejmoffitt wrote:</div><div class="quotecontent"><div class="quotetitle">wyatt8740 wrote:</div><div class="quotecontent">And my desoldering iron is clogged; is there a way to remove the mask roms from my donor without one?</div><br /><br />You can snip the legs of the mask ROM chips with diagonal cutters or some such, and then smack out the heated leg remains of the PCB one by one until you have usable holes. Not ideal, but it's a solution.</div><br /><br />An extension of this method that I just remembered using for this exact purpose (successfully) is to, for each pin on the chip:<br /><br />-Heat the solder on the pin for the chip<br />-Whack the cartridge on the table, solder-side-down<br />-Observe the solder blob now on your table and the de-soldered pin<br />-Cackle like a maniac<br />-Do this for each pin from step 1

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>nintendo8</b> [ Thu Jun 06, 2013 1:59 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Making a EPROM Burner</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">wyatt8740 wrote:</div><div class="quotecontent">You have just saved my life. I am horrible with the physical aspect of electronics and while I like 9t I am not going to spend lots of money for a paralell port willem when i only have a paralell port on my 1995 ibm pc. Thanks for giving directions!<br /><br />Would it need to be altered for a SST39SF020? I only need 2Mbit/256kb chips.<br />EDIT: That was stupid and a question you answered <img src="./images/smilies/icon_razz.gif" alt=":P" title="Razz" /><br /><br />And my desoldering iron is clogged; is there a way to remove the mask roms from my donor without one?<br /><br />Can one make a MMC3 board into a TKROM board without too much effort?</div><br />Glad I can help anyways I forgot to mention that my program reads the device id before running you should get<br />Manufacturer’s ID 0xBF<br />Device ID (This depends on the chip)  SST39SF010A 0xB5  SST39SF020A 0xB6  SST39SF040 0xB7<br />And there is the datasheet <!-- m --><a class="postlink" href="http://www.microchip.com/wwwproducts/Devices.aspx?dDocName=en549494">http://www.microchip.com/wwwproducts/De ... e=en549494</a><!-- m -->

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>wyatt8740</b> [ Thu Jun 06, 2013 5:53 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Making a EPROM Burner</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">infiniteneslives wrote:</div><div class="quotecontent"><div class="quotetitle">wyatt8740 wrote:</div><div class="quotecontent">Can one make a MMC3 board into a TKROM board without too much effort?</div><br /><br />Perhaps you mean, can you convert a TSROM (no battery) into a TKROM (with battery)?  Both are MMC3 and identical aside from battery backing.  If you splice in the battery baacking circuit from the wiki you should be able to make something like a TSROM work as a TKROM</div><br />that is what I meant! Thank you!<br /><br /><div class="quotetitle">mikejmoffitt wrote:</div><div class="quotecontent">smack the board on a table... cackle maniacally</div><br />sounds like a plan!<br /><br />i have found two old award bioses. they are 29c020-21 chips. these are flash, right? will they work? they are the exact size i needed (2Mbit).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>nintendo8</b> [ Thu Jun 06, 2013 7:37 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Making a EPROM Burner</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">wyatt8740 wrote:</div><div class="quotecontent">i have found two old award bioses. they are 29c020-21 chips. these are flash, right? will they work? they are the exact size i needed (2Mbit).</div><br />If you mean <!-- m --><a class="postlink" href="http://soft-manual.narod.ru/chips/flash/atmel/AT29C020.pdf">http://soft-manual.narod.ru/chips/flash ... 29C020.pdf</a><!-- m --> then the answer is most likely yes however I hate to see part sacrificed. I don't think it is worth it to destroy a computer just for an NES game.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>wyatt8740</b> [ Fri Jun 07, 2013 4:44 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Making a EPROM Burner</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">nintendo8 wrote:</div><div class="quotecontent">yes however I hate to see part sacrificed. I don't think it is worth it to destroy a computer just for an NES game.</div><br />Don't worry <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /> I will dump the chips to flash images first. And I found these beauties in a pile of junk in a factory corner. I have the pentium II's and III's and in the future I may write the images to new flash chips, but right now they are just boards, no other hardware or power supply. I can try to find other chips first though.<br /><br />...anyway, I have three of the chips, so if I ever need one I can place it into the board.<br /><br />Thanks for the info and I hate to see stuff ruined too, but this already was. A stripped board.<br /><br />What is the minimum write and read speed for the flasher? One of mine is 210ns per read/write.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>nintendo8</b> [ Fri Jun 07, 2013 7:16 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Making a EPROM Burner</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">wyatt8740 wrote:</div><div class="quotecontent"><div class="quotetitle">nintendo8 wrote:</div><div class="quotecontent">yes however I hate to see part sacrificed. I don't think it is worth it to destroy a computer just for an NES game.</div><br />Don't worry <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /> I will dump the chips to flash images first. And I found these beauties in a pile of junk in a factory corner. I have the pentium II's and III's and in the future I may write the images to new flash chips, but right now they are just boards, no other hardware or power supply. I can try to find other chips first though.<br /><br />...anyway, I have three of the chips, so if I ever need one I can place it into the board.<br /><br />Thanks for the info and I hate to see stuff ruined too, but this already was. A stripped board.<br /><br />What is the minimum write and read speed for the flasher? One of mine is 210ns per read/write.</div><br />About dumping the chips... I just committed a patch to my repo for both the computer side and arduino side that allows for the dumping previously it would always go into write mode which would erase the whole chip now it will go into dump/program mode based on which program on the computer you run. Go check it out<br /><!-- m --><a class="postlink" href="https://github.com/ComputerNerd/sst39sf040-computerside">https://github.com/ComputerNerd/sst39sf040-computerside</a><!-- m --><br /><!-- m --><a class="postlink" href="https://github.com/ComputerNerd/sst39sf040-avr">https://github.com/ComputerNerd/sst39sf040-avr</a><!-- m -->

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>3</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>