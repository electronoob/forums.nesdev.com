<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Randomly placing name table tiles</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Randomly placing name table tiles</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=10&amp;t=9562">http://forums.nesdev.com/viewtopic.php?f=10&amp;t=9562</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>noattack</b> [ Mon Dec 03, 2012 12:00 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Randomly placing name table tiles</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I'm fooling around with a random-number generator (used to randomly fill the background) and I'm running into a frustrating problem. Here's the RNG subroutine, adopted from <a href="http://mycorner.no-ip.org/6502/code/prng.html" class="postlink">here</a>:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">Rand:<br />&nbsp; LDA seed&nbsp; &nbsp;&nbsp; &nbsp;; get seed<br />&nbsp; ASL A<br />&nbsp; BCC NoEOR&nbsp; &nbsp;&nbsp; &nbsp;; branch if no carry<br />&nbsp; EOR #$CF&nbsp; &nbsp;&nbsp; &nbsp;; else EOR with #$value<br />NoEOR:<br />&nbsp; STA seed&nbsp; &nbsp;&nbsp; &nbsp;; save number as next seed<br />&nbsp; RTS<br /></div><br /><br />And then I'm doing a basic nested loop to fill the background (using count1 and count2 in RAM instead of X or Y - for testing purposes, not for code elegance):<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">LoadBackground:<br />&nbsp; LDA $2002 ; read PPU status to reset the high/low latch<br />&nbsp; LDA #$20<br />&nbsp; STA $2006 ; write the high byte of $2000 address<br />&nbsp; LDA #$00<br />&nbsp; STA $2006 ; write the low byte of $2000 address<br />&nbsp; STA count1 ; reset count indices<br />&nbsp; STA count2<br />LoadBackgroundLoop:<br />&nbsp; JSR Rand&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; run RNG<br />&nbsp; STA $2007&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ; write tile to PPU<br />&nbsp; INC count1&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;;Background is 32x30 ($20 x $1E) sprites, so use nested loops to fill 960 bytes<br />&nbsp; LDA count1<br />&nbsp; CMP #$E0<br />&nbsp; BNE LoadBackgroundLoop<br />&nbsp; INC count2<br />&nbsp; LDA #$00<br />&nbsp; STA count1<br />&nbsp; LDA count2<br />&nbsp; CMP #$01<br />&nbsp; BNE LoadBackgroundLoop<br />&nbsp; RTS<br /></div><br /><br />As you might note from the comment, I was originally doing a count compare for $20 and $1E, but I was getting a noticeable pattern repeat from the RNG. When I eliminate the nested loop, all of the tiles are random. I can't figure out what's resetting the RNG when I branch back to LoadBackgroundLoop after resetting count1. It's likely I'm not understanding what's going on in the RNG code. Any suggestions?<br /><br />FYI, the seed var is set to #$01 prior to LoadBackground, which is only called once. And I'm using NESASMv3.1

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Mon Dec 03, 2012 12:31 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Randomly placing name table tiles</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />count2 is initialized to 0, then it is incremented before it is tested the first time against 1, so as far as I can tell from reading the code it isn't doing anything. You will get through the loop once with count1 and then it'll end.<br /><br />The PRNG you're using has a repeating cycle of 255 possible values. This is obviously going to have to repeat across the screen, since there are a lot more than 255 tiles. (You might consider a 16 bit version of the PRNG.)<br /><br />Also, consider doing your counting with X and Y, load the number of iterations into X then you can DEX, BNE and you won't have to access RAM to increment or load or perform a separate compare (since DEX will update the zero flag). Edit: oh, I see you mentioned it, but I would suggest you make it a habit-- efficiency aside, it will make less code to read, and is the common way to do loops when writing 6502 assembly. Just to show what I mean:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">LoadBackground:<br />&nbsp; LDA $2002 ; read PPU status to reset the high/low latch<br />&nbsp; LDA #$20<br />&nbsp; STA $2006 ; write the high byte of $2000 address<br />&nbsp; LDA #$00<br />&nbsp; STA $2006 ; write the low byte of $2000 address<br />&nbsp; LDX #(960/4) ; break 960 byte update into 4 pieces<br />&nbsp; LDY #4<br />LoadBackgroundLoop:<br />&nbsp; JSR Rand&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;; run RNG<br />&nbsp; STA $2007&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ; write tile to PPU<br />&nbsp; DEX<br />&nbsp; BNE LoadBackgroundLoop<br />&nbsp; LDX #(960/4)<br />&nbsp; DEY<br />&nbsp; BNE LoadBackgroundLoop<br />&nbsp; RTS<br /></div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Mon Dec 03, 2012 1:56 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Randomly placing name table tiles</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />If you want a 8-bit PRNG, you should use more bits for the sequence (I'd say at least 16) and only use the lower 8.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>noattack</b> [ Mon Dec 03, 2012 3:20 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Randomly placing name table tiles</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />@rainwarrior - Thanks! I should have been clearer that I knew that nested loop was doing nothing. I was only running the first count so I could see how many values the RNG was outputting. But once you mentioned that it was producing the same 255-byte series, I realized I needed to adjust the EOR value each time through the (second) loop. I had misread the RNG documentation.<br /><br />And yeah, I was previously using X and Y for the loop indices, but I took them out of the equation for debugging purposes. Silly in retrospect, but I was willing to try anything at that point.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Mon Dec 03, 2012 5:25 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Randomly placing name table tiles</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><a href="http://6502.org/source/integers/crc-more.html" class="postlink">Greg Cook's implementation of CRC16</a> is a pretty fast RNG with a period of 65535 bytes. The alternate version shown there, which is a couple cycles slower, preserves Y so that you can use it as a loop counter.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Mon Dec 03, 2012 6:01 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Randomly placing name table tiles</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I would recommend using 8 bits of a 16 or 24 bit PRNG instead of trying to change an EOR mask every 255 samples or something like that. The repeating 255-step pattern will usually show through an EOR. It's actually pretty easy to modify the PRNG you started with to do 16 bits instead of just 8.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Mon Dec 03, 2012 6:52 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Randomly placing name table tiles</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The PIClist has a 32-bit LFSR-based RNG that uses the same taps in each octet of the full word. (Also a 16-bit and 24-bit one that shares the same property). <!-- m --><a class="postlink" href="http://www.piclist.com/techref/microchip/rand8bit.htm">http://www.piclist.com/techref/microchip/rand8bit.htm</a><!-- m --><br /><br />Converting from PIC asm to 6502 asm should be easy, although PIC's RMW XOR while the 6502's is not means there's no advantage to using the same taps in each octet.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Mon Dec 03, 2012 7:54 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Randomly placing name table tiles</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Also, the Galois PRNG is one of the worst random number generators in terms of predictability. It is a very good random generator for single bits, but when you're taking a byte from it, you know a lot about what the next nuber is going to be even if you are just looking at 8 bits out of 16 or more. (Imagine playing a strategy game where you know the next result has a 50% chance of being double the previous one.) If you actually want a &quot;good&quot; random 8 bits from a Galois PRNG, you should tick it 8 times before using the result. This kinda defeats the efficiency that probably led you to select this over a LCG or something like that. Of course, each tick doubles the entropy of your result, so 1-8 ticks will give you a sliding scale of predictability/speed to trade off; for some purposes 1 tick might be a &quot;good enough&quot; random number. It really depends on what you're doing with it.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Mon Dec 03, 2012 8:29 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Randomly placing name table tiles</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">rainwarrior wrote:</div><div class="quotecontent">If you actually want a &quot;good&quot; random 8 bits from a Galois PRNG, you should tick it 8 times before using the result. </div><br />I was using a 32 bit LFSR and passing in a number of ticks in Y in Concentration Room and Thwaite. But Greg Cook's CRC-16 is equivalent to 8 ticks per iteration, which is why I've used it in everything since Zap Ruder.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>noattack</b> [ Mon Dec 03, 2012 8:38 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Randomly placing name table tiles</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">rainwarrior wrote:</div><div class="quotecontent">I would recommend using 8 bits of a 16 or 24 bit PRNG instead of trying to change an EOR mask every 255 samples or something like that. The repeating 255-step pattern will usually show through an EOR. It's actually pretty easy to modify the PRNG you started with to do 16 bits instead of just 8.</div><br /><br />Yeah, it's not perfect, but for the purposes of what I was doing - drawing a single static image - it worked fine. I only had to update the EOR four times. But you're right - patterns still showed through.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>