<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - APU DMC questions</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">APU DMC questions</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=3&amp;t=4641">http://forums.nesdev.com/viewtopic.php?f=3&amp;t=4641</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>qeed</b> [ Mon Dec 08, 2008 7:15 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>APU DMC questions</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Hello, I have some questions regarding how the DMC works before it is started. I have the APU registers all set to 0 on startup. Since it is 0, the rate index in $4010 is 428 for NTSC, 398 for PAL on startup? If you do not enable sample playing in reg $4015 bit 4, the DMC timer should still run, and output a clock when the timer is 0? What other units should also run when the DMC playback is disabled? IE, does the output unit run, sending 0 to the mixer?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Mon Dec 08, 2008 10:13 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />In general, everything runs all the time. Usually disabling, zero volume, etc. affect a minimal number of units.
<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Since it is 0, the rate index in $4010 is 428 for NTSC, 398 for PAL on startup?</div><br />If the rate index powers up with zero, yes (I don't have my power-up state notes at the moment).<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">If you do not enable sample playing in reg $4015 bit 4, the DMC timer should still run, and output a clock when the timer is 0?</div><br />Yes, the timer always runs. It never stops.<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">What other units should also run when the DMC playback is disabled? IE, does the output unit run, sending 0 to the mixer?</div>
<br />All of them continue to run. When bit 4 of the status register is cleared, the DMC's <a href="http://nesdevwiki.org/wiki/APU_Status" class="postlink">bytes remaining is set to 0</a>. That's all bit 4 affects. Since bytes remaining is zero, <a href="http://nesdevwiki.org/wiki/APU_DMC" class="postlink">the memory reader doesn't do any filling</a>. This results in the sample buffer becoming empty, which causes the output unit to set the silence flag and stop changing the DAC value. The DAC value doesn't get 0, it keeps getting whatever it was getting before. Again, you have to adopt different thinking for hardware than for software; in software, you'd logically stop doing all these things if the DMC wasn't playing a sample, but in hardware, you do the smallest thing that stops sample reading and playback (unless you're going for low-power design, of course). In this case, that means simply clearing the bytes remaining counter.
<br />
<br />The DMC is quite complex. I think all its behavior is covered on the Wiki page, but it's difficult to keep it all in mind at once, so ask further questions if necessary.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>qeed</b> [ Tue Dec 09, 2008 6:18 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Thanks for answering, I also have one small question about the tables for the timers, are they  pre decrementing or post?
<br />such as if (!--timer) //output clock, or is it if (timer) --timer; else //output clock? is the period + 1 shown in the wiki include the 1 because of the 0 cycle, so you can do pre decrement?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Tue Dec 09, 2008 11:23 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I have no idea how the timers work internally; I only know their behavior visible to the CPU and audio outputs. I don't know how to state it any clearer than is <a href="http://nesdevwiki.org/wiki/APU_Misc" class="postlink">already on the wiki</a>.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>qeed</b> [ Tue Dec 09, 2008 11:49 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Sorry if I asked the question in a manner that is giving an interpretation that I wanted to know how the hardware internally works. The pre decrementing/post decrementing was asked in a software (emulator) kind of manner. I was wondering if the tables used are pre decremented until the output of a clock, such as dmc is loaded with 428 from the table by writing $0 to $4010 does it mean that it is really 428 cycles (pre decremented) or 429 cycles (post decremented) like the example shown above. Do the other rate tables such as noise and such follow the same manner in the pre decrementing/post decrementing?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Disch</b> [ Tue Dec 09, 2008 12:08 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />-- edit --
<br />
<br />apparently I was wrong?  Or does it depend on the source you're using?
<br />
<br />Either case, nevermind what I said here before.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Tue Dec 09, 2008 12:41 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">qeed wrote:</div><div class="quotecontent">[...] I was wondering if the tables used are pre decremented until the output of a clock, such as dmc is loaded with 428 from the table by writing $0 to $4010 does it mean that it is really 428 cycles (pre decremented) or 429 cycles (post decremented) like the example shown above. Do the other rate tables such as noise and such follow the same manner in the pre decrementing/post decrementing?</div>
<br />The Wiki gives the periods. As it defines the term, that's the number of input clocks per output clock. So if the period is 10, there is one output clock for every 10 input clocks. Having to add one to all listed values would just be pointless obfuscation. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />
<br />
<br />Just to be absolutely clear, some code to implement a timer:
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">int counter;<br />int period;<br /><br />void clock_timer&#40;&#41;<br />&#123;<br />&nbsp; &nbsp; counter = counter - 1;<br />&nbsp; &nbsp; if &#40; counter == 0 &#41;<br />&nbsp; &nbsp; &#123;<br />&nbsp; &nbsp; &nbsp; &nbsp; counter = period;<br />&nbsp; &nbsp; &nbsp; &nbsp; output_clock&#40;&#41;;<br />&nbsp; &nbsp; &#125;<br />&#125;</div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>qeed</b> [ Wed Dec 10, 2008 7:01 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Thanks for answering guys! I have the timer implemented now and am facing the issue of the frame irq flag, dmc irq flag, DMC output unit, and $4011. In the wiki, it says that reading $4015 clears the frame interrupt flag but not the dmc interrupt flag, does that mean if the CPU will still execute an IRQ if there is one set by DMC when the sample reading is done? (assuming that frame interrupt flag already set too, when $4015 reading takes place). Also I didn't quite understand what "At any time, if the interrupt flag is set, the CPU's IRQ line is continuously asserted until the interrupt flag is cleared. " meant. Could you please elaborate. As for the DMC output unit, which register is the one that is playing, the 8 bit right shift register since it says the sample is 8 bit too, if that is the case, what does the delta counter do? Finally, the $4011, when does the counter sometimes fail to be loaded by $4011, should i ignore the sometimes failing case in my emulator. Sorry for the torrent of questions in one post, but I think its better than posting many times. Thanks for help so far guys! <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Disch</b> [ Wed Dec 10, 2008 7:55 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">qeed wrote:</div><div class="quotecontent">does that mean if the CPU will still execute an IRQ if there is one set by DMC when the sample reading is done? (assuming that frame interrupt flag already set too, when $4015 reading takes place). Also I didn't quite understand what "At any time, if the interrupt flag is set, the CPU's IRQ line is continuously asserted until the interrupt flag is cleared. " meant. Could you please elaborate.</div><br /><br />IRQs are "level triggered" which means that as long as hardware is asserting an IRQ, an IRQ will be "pending" and the CPU will IRQ as soon as it is able to.  "Acknowledging" an IRQ is like telling the hardware to stop asserting the IRQ.<br /><br />An easy way to abstract and visualize this is to imagine every IRQ-generating source has a "pending" flag.  When an IRQ is tripped, all that happens is the Pending flag is set.  When the IRQ is acknowledged, the Pending flag is cleared.  And if at any time, <em>any</em> Pending flag anywhere on the system is set, this indicates that the CPU should IRQ.<br /><br />To clarify further:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">void AcknowledgeFrameIRQ&#40;&#41;<br />&#123;<br />&nbsp; // called when APU Frame IRQ is acknowledged<br />&nbsp; &nbsp;frameirq_pending = false;<br />&#125;<br /><br />void TriggerFrameIRQ&#40;&#41;<br />&#123;<br />&nbsp; // called when an APU Frame IRQ has been triggered<br />&nbsp; frameirq_pending = true;<br />&#125;<br /><br />bool ShouldIRQ&#40;&#41;<br />&#123;<br />&nbsp; // called between instructions to see if the CPU should do an IRQ<br />&nbsp; if&#40;frameirq_pending&#41;&nbsp; &nbsp;return true;<br />&nbsp; if&#40;dmcirq_pending&#41;&nbsp; return true;<br />&nbsp; if&#40;mapperirq_pending&#41;&nbsp; return true;<br />&nbsp; if&#40;anyotherirq_pending&#41;&nbsp; return true;<br /><br />&nbsp; return false;<br />&#125;<br /></div><br /><br />This isn't practical code, of course.  I'm just trying to illustrate the concept.<br /><br />Note that the IRQ itself does not aknowledge any IRQs!  Therefore if a game RTIs from an IRQ without acknowledging the IRQ, another IRQ will happen immediately because the same one is still pending.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">As for the DMC output unit, which register is the one that is playing, the 8 bit right shift register since it says the sample is 8 bit too, if that is the case, what does the delta counter do?</div><br /><br />Basically... the contents of $4011 <em>is</em> the output of the DMC.  Writes to $4011 immediately change the output of the channel.<br /><br />The delta modulation reads bytes from ROM, and modifies $4011 (increasing or decreasing it by 2), which in turn changes the output, which is how samples are played.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Finally, the $4011, when does the counter sometimes fail to be loaded by $4011, should i ignore the sometimes failing case in my emulator.</div>
<br />
<br />I wouldn't worry about this.  I'd imagine there's edge cases when you try to write to $4011 when the delta modulation thing is accessing it -- but I don't think they've been completely worked out yet.
<br />
<br />So don't worry about this.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Wed Dec 10, 2008 9:38 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />IRQ summary: The CPU normally executes instructions sequentially. If the I flag in the CPU's status flags is clear, and anything is asserting IRQ, then the CPU will divert execution to the IRQ handler after the current instruction finishes. Once the IRQ handler is begin, the I flag is set so it won't get stuck infinitely re-entering the IRQ handler. The device that is asserting IRQ won't know the CPU entered the IRQ handler, so it will still be asserting it. Thus, the IRQ handler code must tell the asserting device to stop, otherwise once it clears the I flag, the IRQ handler will be re-triggered again. So, in the descriptions of the APU, it simply describes what things cause the IRQ to start being asserted (for example, the frame IRQ), and what things end assertion (for example, reading the status register to clear the frame IRQ). The APU keeps track of the various IRQ sources separately, even though they are all ORed together before being sent to the CPU.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>qeed</b> [ Thu Dec 11, 2008 6:36 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Thanks again for answering, so let me see if I understand it properly, the IRQ handler should not touch the IRQ asserting flags, only go to the IRQ vector in the memory, it is up to the programmer of the game to read $4015 and such to clear the IRQ to move on, or the else the IRQ flags will keep getting the IRQ handler to be executed. Is this a right way to look at it?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Disch</b> [ Thu Dec 11, 2008 6:47 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Correct.
<br />
<br />It's also worth noting that your emu must set the I flag in the status register on IRQ (and NMI).  After the status reg is pushed to the stack, of course.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>