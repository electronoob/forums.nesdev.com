<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - A note to all NES-emulator authors: ROM header wishlist</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">A note to all NES-emulator authors: ROM header wishlist</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=3&amp;t=10183">http://forums.nesdev.com/viewtopic.php?f=3&amp;t=10183</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>8</strong> of <strong>8</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>zzo38</b> [ Sat Jun 29, 2013 2:11 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: A note to all NES-emulator authors: ROM header wishlist</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />OK, I have read the list of what is made so far. Here is a proposal to possibly improve the situation:<ul><li>Support iNES and NES 2.0 headers.</li><li>Optionally support UNIF, and you can also optionally include whatever additional formats you find useful.</li><li>Optionally include a database of existing games with the emulator, external to the executable. The format doesn't matter; use whatever is best with the emulator.</li><li>If the header is the old iNES format, then look up the checksums in the database to correct the header.</li><li>If the header is NES 2.0 format, then ignore the database and use the actual contents of the header.</li><li>If you decide to implement .NES.INI, then you may optionally use the Bootgod number to look up in the database if it is the old iNES header. You might also use the Mapper block to disambiguate ambiguous iNES headers, although use of NES 2.0 for this purpose is recommended (the Mapper block is mainly provided in case the cartridge is less sophisticated than the NES 2.0 header implies, or if it is a homebrew designed to work on more than one kind of cartridge).</li><li>Information about input devices, overscan, etc goes in the INI although if it isn't present (or if the emulator doesn't support .NES.INI), the emulator's database can be used.</li><li>If there is more than one cartridge, use a separate file for each cartridge. An emulator might optionally support ZIP archives of multiple cartridges if they are used together.</li><li>The same should be done for disks; each side of each disk should be a separate .QDI file. However, an emulator should also support .FDS (which puts all the disks into one file), or optionally a ZIP archive of multiple .QDI files. (The disk numbers and side numbers are part of the headers, so if you have a bunch of separate .QDI you should easily be able to put them together properly into a .FDS or whatever. Also, supporting .FDS is still recommended since games are generally distributed in this format.)</li><li>I think I have read that some emulators, when loading a .FDS, will create the save files in the user's home directory. It can be extended: Upon loading a .FDS for the first time, create a directory and a manifest file and unpack the .FDS into multiple .QDI files into the directory. One thing contained in this manifest file is then macros to select a disk side.</li><li>ADPCM ROMs could be stored in a separate file to the cartridge (unless it is UNIF, in which case you might add a block for that purpose). (You may combine them into a single ZIP archive if you want to.) The emulator's database can be used to select them, the matching filename of the main ROM image can be used to select them, or the .NES.INI can be used to select them.</li></ul><br /><div class="quotetitle">MottZilla wrote:</div><div class="quotecontent">Incase you were unaware, the reason this is done is because MAME also serves to help preserve actual arcade boards. So if you have a bad ROM chip, you can get the data from the MAME rom set and repair your board. It's not *just* about emulating the games.</div>I was unaware that is was what was intended, but I did think of that, and yes it can help for that purpose too.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Sik</b> [ Sat Jun 29, 2013 9:56 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: A note to all NES-emulator authors: ROM header wishlist</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">MottZilla wrote:</div><div class="quotecontent">Incase you were unaware, the reason this is done is because MAME also serves to help preserve actual arcade boards. So if you have a bad ROM chip, you can get the data from the MAME rom set and repair your board. It's not *just* about emulating the games.</div><br />Pretty sure that if it was legal MAME would include the ROMs directly in the source code rather than require users to provide them separately.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>byuu</b> [ Sat Jun 29, 2013 10:20 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: A note to all NES-emulator authors: ROM header wishlist</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">MottZilla wrote:</div><div class="quotecontent">Incase you were unaware, the reason this is done is because MAME also serves to help preserve actual arcade boards. So if you have a bad ROM chip, you can get the data from the MAME rom set and repair your board. It's not *just* about emulating the games.</div><br /><br />I've covered this extensively elsewhere, but I guess I may as well do so here as well.<br /><br />Let's first consider how many people who play games in MAME actually own the arcade machines. Let's be <em>very generous</em>, and say one in a thousand will actually own the game. Now how many of those people do you think can actually repair those arcade machines? We'll say about one in fifty. Not as extreme here, since the people buying would be more inclined to have the skills to fix them up. Now of those instances, what are the odds that a machine breaks because a ROM chip went bad? How often do you hear of things dying because the ROM chip went bad? It's almost always capacitors, or crystals, or power surges, or voltage regulators, or ... pretty much anything but the ROM chips. So we'll say one in a hundred here. Again, <em>extremely</em> generous.<br /><br />So stack those odds, and we have about a one in five million chance that a MAME user will have their real arcade machine break, they'll be able to diagnose that the ROM chip went bad, and they'll be able to obtain a new chip to flash and install on the board.<br /><br />So for a 1:5,000,000 chance, MAME has made their format a pain in the ass for anyone else to support*. Now consider this mythical rich savant that can repair arcade board ROMs. Why can't that person just look in a MAME database, find the entry for their game, and see how the files corresponded to physical chips, and then use a split-file command like dd to make their own burnable images? Do you really think there are people out there that can program and replace ROM chips, yet can't split a file?<br /><br />* take the case of the Nintendo Super System. The SNES arcade machine. MAME/MESS made a real, well, mess, of that. Say you want to play their nss-actr.zip (Actraiser) game. This is what is inside the archive:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">spc700.rom&nbsp; &nbsp;64&nbsp; &nbsp;44bb3a40<br />dsp1data.bin&nbsp; &nbsp;2048&nbsp; &nbsp;4b02d66d<br />nss-c.dat&nbsp; &nbsp;32768&nbsp; &nbsp;a8e202b3<br />nss-ic14.02&nbsp; &nbsp;32768&nbsp; &nbsp;e06cb58f<br />act-rais.ic3&nbsp; &nbsp;524288&nbsp; &nbsp;c9f788c2<br />act-rais.ic2&nbsp; &nbsp;524288&nbsp; &nbsp;4df9cc63<br />act-rais.ic8&nbsp; &nbsp;32768&nbsp; &nbsp;08b38ce6</div><br /><br />Now say you're anyone but MAME/MESS, and you want to play that. How do you load in the game? Well obviously, you concatenate act-rais.ic3, followed by act-rais.ic2, and ignore act-rais.ic8, <em>duh.</em> /s<br /><br />As for why the DSP-1 program ROM is there? Well, MAME/MESS required that because they couldn't be bothered to fix their emulation to not require it for non-DSP games. As for spc700.rom? That's because the MAME developers have never heard of Lexmark v Static Control Components. That, and this ROM exists inside the NSS machine (and inside of a sound CPU at that, it's impossible for anyone to replace this ROM), not on the cartridge. Your guess is as good as mine as to what the other files are for. You have .bin, .rom, .ic#, .dat, .02, etc. No consistency. No logic.<br /><br />So okay, you have to load .ic3+.ic2 as the program ROM. So we do that for all games right? Well, not nss_smw. There, you load nss-mw-0_prg.ic1, obviously.<br /><br />This is stupid. To make a one in five million chance event slightly more convenient, they make the format a pain for any other emulator to load and support.<br /><br />In my system, you'd have:<br /><br />manifest.bml [description of the board, and where each ROM maps to in memory]<br />program.rom [the game itself]<br />nss.rom [the NSS boot / menu ROM]<br /><br />And it would be the same for every NSS game. Had they done this, the games would directly load in all SNES emulators, since they always pick the largest file inside archives to play. As it stands, these games only work in MAME.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>etabeta</b> [ Sat Jun 29, 2013 11:26 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: A note to all NES-emulator authors: ROM header wishlist</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">To communities centered around software distributed under DFSG-conforming free software licenses, a non-commercial clause itself is &quot;particularly odd.&quot;</div><br /><br />the problem is that many former MAME developers (and some of the current ones) work into programming companies and have strict rules in their contracts about usage of their code, even the parts written outside work hours.<br />this has always made necessary to have a non-commercial rule<br /><br />also, allowing commercial use makes a bit more legit all those people selling emu packs on e-bay: while in practice it makes no big difference if they are only breaking copyright of the games ROMs they sell or both game copyright *and* the software license, from a moral point of view I see a big difference<br /><br />that said, MAME code has been legally used in some commercial retro-packs (like Taito Legends): the involved devs were just contacted and their code was dual licensed for the purpose...<br /><br /><div class="quotetitle">tepples wrote:</div><div class="quotecontent"><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">there are a bunch with 2 PRG chips, one multiple of 8K mapped in 0x8000-0xffff and the second with 2K of data mapped separately inside the 0x6000-0x7fff area. have fun supporting this in iNES</div><br />The definition of mappers 0 and 3 was recently expanded to cover ROMs that cover $4800-$FFFF: <a href="http://wiki.nesdev.com/w/index.php/NROM-368" class="postlink">NROM-368</a></div><br /><br />I was referring to the fact that 2KB chunks of PRG are not supported by iNES headers, to my knowledge, so I'm not sure how the rom has to be loaded from an iNES file<br /><br /><div class="quotetitle">byuu wrote:</div><div class="quotecontent">&gt; also, you might want to notice that MAME/MESS transparently handle having zip content uncompressed in a folder since 1999<br /><br />Interesting, I never even knew it could do that. I require a DLL (included with my emulator) to decompress archives to a folder first, so that my core can use native filesystem APIs on each file, and can write to the folder if need be (flash ROM, SRAM, etc.) Definitely causes more drama, but it seems by making it transparent that nobody even realizes it exists :/<br /></div><br /><br />MAME is compiled with zlib in the source. this allows both to fastly access the checksum info in the zip header and to basically treat any zipfile as it was a folder. hence, storing the roms into pacman.zip or into a pacman/ folder is the same.<br />the price you pay is that the exe size grows a bit, but on a 60MB exe it's not ~100KB to make the difference...

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>etabeta</b> [ Sun Jun 30, 2013 12:05 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: A note to all NES-emulator authors: ROM header wishlist</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />premise: I'm not trying to convince byuu (I respect people having different opinions) but I'd like to clarify a few bits because they are the base reason why in MESS we pushed separate PRG/CHR files as the main format for our xml software list and why I still believe gluing together the content of all different chips is a bad idea for emulation<br /><br /><div class="quotetitle">byuu wrote:</div><div class="quotecontent">Now say you're anyone but MAME/MESS, and you want to play that. How do you load in the game? Well obviously, you concatenate act-rais.ic3, followed by act-rais.ic2, and ignore act-rais.ic8</div><br /><br />the problem is that you are too focused on consoles, so you're too used to have a specific extension identifying where a file goes. <img src="./images/smilies/icon_wink.gif" alt=";)" title="Wink" /> <br />for MAME, extensions are of no usage for end-users, they are only there to help people repairing their boards because they tell repairers where the file goes on the pcb.<br /><br />for other usages, e.g. for an emu dev, you have to never separate the ROMs from the &quot;mapping manifest&quot; (as would probably be called in byuu-ese <img src="./images/smilies/icon_wink.gif" alt=";)" title="Wink" /> ) which is built into the source itself (in nss.c, see the ROM_LOAD bits for the various games). that way you can see where the various .ic* have to be loaded/mapped<br />some devs have suggested these manifests might be made external to the exe, like the xml softlists, but there have been resistances so it's still built into the exe<br /><br />personally, I don't think end users would care that much if all the emulators tomorrow would require console ROMs to be split files inside a zip archive like MAME does, or viceversa if arcade ROMs would be glued files with .arc extension, as long as emulators would support the files and there is some automated procedure to convert the files they have in the new format. <br />and I seriously doubt that there are users who sits staring at their files (single files or archives of separate roms) and taking pleasure from the sight.<br /><br />so it mostly boils down to what is your purpose. I personally feel important to make people aware that console carts can be internally as complex as some arcade boards, and separate files help to convey this fact. but I see no big deal if other devs feel differently<br /><br /><div class="quotetitle">byuu wrote:</div><div class="quotecontent">As for why the DSP-1 program ROM is there?</div><br /><br />it's not there anymore in 0.149, just wait for rom sites to update <img src="./images/smilies/icon_wink.gif" alt=";)" title="Wink" /> <br />it's not anymore in the snes bios for MESS either. it is only required for SNES games having a DSP-1, as people would expect, and it can be either in the game zipfile, as a separate bin, or appended to the game .sfc as in higan<br /><br />similarly, if we ever get ADPCM dumps from Jaleco NES games, these dumps would go as a separate file into the zip archive containing prg and chr...<br /><br /><br /><div class="quotetitle">byuu wrote:</div><div class="quotecontent">As for spc700.rom? That's because the MAME developers have never heard of Lexmark v Static Control Components. That, and this ROM exists inside the NSS machine (and inside of a sound CPU at that, it's impossible for anyone to replace this ROM), not on the cartridge. Your guess is as good as mine as to what the other files are for. You have .bin, .rom, .ic#, .dat, .02, etc. No consistency. No logic.</div><br /><br />erm... you are quite off on this subject. spc700.rom is usually stored into nss.zip (we call it BIOS archive), not in the game zipfiles, making it quite clear that it's not into the cart.<br />as above you seem to assume that everything in the zipfile has to come from the cart, but maybe you are just ignoring the &quot;mapping manifest&quot; in nss.c... the spc700.rom is loaded into a &quot;sound_ipl&quot; rom region which is only accessed by the sound CPU, while the cart data is mapped to a different rom region which is accessed by the S-CPU. and the instruction and security data from the game zip archives are mapped to other rom regions too which are only accessed by the corresponding components which handle the instruction/security...<br /><br />the problem seems to boil down to the fact that you cannot auto-mount the files into the emulator based on extension and you claim it's due to MAME inconsistencies. but the real hardware had chips in different locations for the different carts, so if anyone should be blamed for inconsistencies is Nintendo itself when they built the original NSS carts. <br />of course real hardware had wiring prescribing what goes where from cart to the NSS CPUs (and in this aspect NSS hardware is a lot closer to NES carts than to SNES carts, where ROM mappings had just minor variations and hence generic LoROM/HiROM covered 99% of variations).<br />in emulation MAME relies on the &quot;manifest&quot; built into the source (the rom mapping code in ROM_LOAD) to do the same, and other emulators have to cope with it somehow, be it relying on an external bml manifest prescribing where the things has to be mapped or on an artificial rom format with a iNES-like header...

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>zzo38</b> [ Sun Jun 30, 2013 12:44 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: A note to all NES-emulator authors: ROM header wishlist</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">etabeta wrote:</div><div class="quotecontent">... the &quot;mapping manifest&quot; (as would probably be called in byuu-ese ;) ) which is built into the source itself (in nss.c, see the ROM_LOAD bits for the various games). that way you can see where the various .ic* have to be loaded/mapped ...</div>And it is one thing I hate about MAME... I don't like &quot;dumbed down&quot; and &quot;user friendly&quot; computer interfaces much.<br /><br />Maybe for arcade machines it is different, although I still think that for NES/Famicom and other console games at least, it makes sense to include the mapper data together with the game, and for each &quot;unit&quot; (a cartridge or a disk side) to be a file.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>byuu</b> [ Sun Jun 30, 2013 6:44 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: A note to all NES-emulator authors: ROM header wishlist</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />etabeta, so why do you feel it's appropriate to devise a layout strictly tailored to people &quot;repairing PCBs&quot;, at <em>great</em> expense to clarity/consistency/ease of use with emulators, when I've shown that the odds of that actually happening are in the millions?<br /><br />How does it make sense to split 2x16M vs 1x32M identical ROMs, yet not split DSP internal PROM/DROM simply because it's inside the same chip?<br /><br />I'd like to hear your thoughts after careful consideration, and not the MAME party line position, if possible please <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /><br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I'd like to clarify a few bits because they are the base reason why in MESS we pushed separate PRG/CHR files as the main format for our xml software list</div><br /><br />Despite my critiques of your NSS decision, I still split PRG and CHR as well.<br /><br />As I said, when you split things by their intended use, things just make sense. PRG and CHR are not connected to the same bus, so it's only natural to split them. Whereas if Nintendo somehow managed to put them both into the same ROM chip, double-clocked with a &quot;selector&quot; pin (ignore the impracticalities and just pretend that happened), MESS would have distributed them as a single file, whereas I still would not.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">(in nss.c, see the ROM_LOAD bits for the various games)</div><br /><br />If preservation is your goal, I should not have to read MAME source code to figure out how to load games.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">personally, I don't think end users would care that much if all the emulators tomorrow would require console ROMs to be split files inside a zip archive like MAME does, or viceversa if arcade ROMs would be glued files with .arc extension, as long as emulators would support the files and there is some automated procedure to convert the files they have in the new format.</div><br /><br />Oooooooooooooooh trust me. From personal experience, they would.<br /><br />MESS users might not mind, as higan users didn't. But general/casual users? You can pry their merged ROMs from their cold, dead hands.<br /><br />Search for the bsnes v091/higan v092 release threads on various other emulation news websites and see how welcome the change was. Many of the topics hit 20+ pages before being locked.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">spc700.rom is usually stored into nss.zip (we call it BIOS archive), not in the game zipfiles, making it quite clear that it's not into the cart.</div><br /><br />Oh good. So the people who made the original nss_*.zip files just screwed up then.<br /><br />Okay, it makes a lot of sense to put spc700.rom into &quot;system ZIPs.&quot; I do something similar with system folders in my emulator. All of the boot ROMs / BIOS roms / etc go in those.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">of course real hardware had wiring prescribing what goes where from cart to the NSS CPUs</div><br /><br />This is what is principally missing from MAME. How do you expect others to emulate the NSS? By cloning your nss.c and hoping you don't deem that a license violation when used in commercial software?<br /><br />My manifests allow you to specify names as well, so you are given the option to use junk for filenames and extensions (eg what's written on the ICs.) But I still go for consistency and name every similar type of file the same, so that one doesn't have to parse the manifests to be able to load the games. The filenames are there to tell the user what type of data it is, and the extensions specify the volatility.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">in emulation MAME relies on the &quot;manifest&quot; built into the source (the rom mapping code in ROM_LOAD) to do the same, and other emulators have to cope with it somehow, be it relying on an external bml manifest prescribing where the things has to be mapped or on an artificial rom format with a iNES-like header...</div><br /><br />Had you used my example, you could have included &quot;wiring.xml&quot; with 100 times the information for all zero people repairing their NSS boards. You could also have pictures of the PCBs (something I always scan in), and label each ROM chip in the photograph. It surely would have been helpful to the handful of people on eBay using nocash's info to create new forgery NSS games that are destroying real NSS boards, however. (Because isn't it so cool to play non-NSS games in your arcade cabinet?)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sun Jun 30, 2013 3:26 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: A note to all NES-emulator authors: ROM header wishlist</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">byuu wrote:</div><div class="quotecontent">PRG and CHR are not connected to the same bus, so it's only natural to split them. Whereas if Nintendo somehow managed to put them both into the same ROM chip, double-clocked with a &quot;selector&quot; pin (ignore the impracticalities and just pretend that happened), MESS would have distributed them as a single file, whereas I still would not.</div><br />You mean like multicarts that use CHR RAM (e.g. Nintendo World Championships) or like OneBus?<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">If preservation is your goal, I should not have to read MAME source code to figure out how to load games.</div><br />In terms of what I mentioned earlier, what MAME implements here is the &quot;database hardcoded into the emulator&quot; approach.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">personally, I don't think end users would care that much [...] if arcade ROMs would be glued files with .arc extension, as long as emulators would support the files and there is some automated procedure to convert the files they have in the new format.</div><br />Oooooooooooooooh trust me. From personal experience, they would.</div><br />Zip is a container, iNES is a container, and gluing is a (much less capable) container. What makes gluing less capable is that without a directory structure, it's hard to tell which version of the manifest the file is supposed to conform to. Zip's directory is labels on the ROM sockets, and iNES's directory is the PRG ROM size CHR ROM size bytes, allowing at least some measure of splitting. Ability to split and reglue becomes important when the manifest changes to add or remove things as more is discovered about a PCB's operation, such as when DSP-1 support went from high-level to low-level emulation.<br /><br />At least as a first step, I'd recommend zip files with a .mame extension so that the user can double-click one and have it start the game in MAME.<br /><br />The disagreement I see here is how the filenames relate to the function of the data. Higan prefers filenames that reflect function, while MAME prefers filenames that reflect the ROM sockets.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>MottZilla</b> [ Sun Jun 30, 2013 3:50 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: A note to all NES-emulator authors: ROM header wishlist</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I've personally used MAME romsets to verify arcade board rom chips while trying to diagnose issues. It certainly would have been annoying if the rom files didn't reflect what was on the actual board.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>zzo38</b> [ Sun Jun 30, 2013 5:37 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: A note to all NES-emulator authors: ROM header wishlist</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">In terms of what I mentioned earlier, what MAME implements here is the &quot;database hardcoded into the emulator&quot; approach.</div>And that's what I call stupid.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">At least as a first step, I'd recommend zip files with a .mame extension so that the user can double-click one and have it start the game in MAME.</div>Yes, this would help, even if the file isn't associated. Therefore you can know what the file is, if the extension is &quot;.mame&quot;. Maybe it would be better to allow (even if it isn't required) a manifest to be included in the same ZIP archive, in case you are writing your own games and/or slight variations of the arcade machines.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>byuu</b> [ Sun Jun 30, 2013 10:58 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: A note to all NES-emulator authors: ROM header wishlist</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">The disagreement I see here is how the filenames relate to the function of the data. Higan prefers filenames that reflect function, while MAME prefers filenames that reflect the ROM sockets.</div><br /><br />Filename disagreements are fairly petty, just annoying. With higan's manifests, you can give files weird names like nss_mw-prg_0.ic1 if you want.<br /><br />The real disagreement is the decision on when to split data. MAME splits out data as one file per IC's ROM contents. I prefer one file per purpose, so if data from two buses is inside one chip, it gets two files. If two ICs are supposed to appear in linear order on a bus, it gets one file.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Ability to split and reglue becomes important when the manifest changes to add or remove things as more is discovered about a PCB's operation, such as when DSP-1 support went from high-level to low-level emulation.</div><br /><br />It does add an additional complication onto loading these games, but it's not too bad. You still have to detect the presence of the coprocessor. Once you know it's there, see if the file size &amp; 0x1ffff == DSP size. All of them are weird sizes, 3KB(?), 8KB, 52KB, 160KB. All SFC games are divisible by 256KB.<br /><br />I don't like this strategy, either. I prefer the split games. This was simply an attempt to stick with what people professed to like (single file per game.) And yet given the reaction, it revealed what I've been saying all along. It's not that people have strong preferences on how things are done: they instead only have strong preferences on keeping things the way they've always been done in the past. It's not okay to split PRG and CHR or program and data ROM, but if new data arrives later on, *then* it's okay to split that off into another file.<br /><br />Still, if one insists on having a single file for a game, it's the most eloquent way to bypass the copyright issues inherent in distributing this firmware with the emulator itself. These programs exceed Lexmark v SCC's scope.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I've personally used MAME romsets to verify arcade board rom chips while trying to diagnose issues. It certainly would have been annoying if the rom files didn't reflect what was on the actual board.</div><br /><br />When I said the odds were astronomical, I didn't say they were non-existent. Do you agree that you are in the <em>extreme</em> minority in being someone who dumps arcade ROM chips and compares them to files in MAME in order to potentially reflash and resolder/resocket your own chips on the boards?<br /><br />I'm not saying it's never useful. My question is, what is more useful? Making a format that is easier to repair PCBs, or making a format that is easier to emulate? If we chose the latter, would you have been at a detriment to verify your arcade board if instead you had an HTML document complete with images and wiring diagrams instead of filenames in a ZIP archive to go by?<br /><br />Frankly, MAME's method of storing games is quite arguably the least possible useful way of documenting physical board structure. Absolutely anything would be an improvement, if that were truly such an important goal to them.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Yes, this would help, even if the file isn't associated. Therefore you can know what the file is, if the extension is &quot;.mame&quot;. Maybe it would be better to allow (even if it isn't required) a manifest to be included in the same ZIP archive, in case you are writing your own games and/or slight variations of the arcade machines.</div><br /><br />Just to let this cat out of the bag ...<br /><br />MAME has a rule that they can emulate new games the day they come out. These games get posted to a private server where MAME devs can grab them at any time. Although it's okay for MAME devs to play new releases, MAME users need to wait three(?) years before they are allowed to play games (which, is a nice idea, I'm not against helping to protect arcade makers' profits in return for more games made by them in the future.)<br /><br />Point being, the internal database also serves as a hurdle to prevent loading newly dumped and/or leaked game images into existing MAME builds. The public database gets these new game manifest markers commented out and/or removed. People attempting to play these games anyway usually create and download third-party builds that hack in the entries again. It goes without saying that these third-party builds garner much derision from the devs.<br /><br />MAME's own moralist model gives impetus to not include manifests with individual games, lest people be able to play new games with current, official MAME builds.<br /><br />But even if they did, let's be honest. They'd be <em>extremely</em> dependent upon the exact architecture of MAME, anyway. They would do others little good. Still, anything's better than nothing, so I'd support that change.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>8</strong> of <strong>8</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>