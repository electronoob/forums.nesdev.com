<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - New NTSC decoder with integer-only math (short C++ code)</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">New NTSC decoder with integer-only math (short C++ code)</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=14338">http://forums.nesdev.com/viewtopic.php?f=2&amp;t=14338</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>2</strong> of <strong>3</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>zzo38</b> [ Thu Jun 16, 2016 10:41 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: New NTSC decoder with integer-only math (short C++ code)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">Another way would involve a &quot;preview&quot; tool that works on BMP or PNG images.<br /><ol style="list-style-type: decimal"><li>Load a screenshot of an NES game </li><li>Convert RGB values to closest NES color numbers </li><li>Run filter on each line </li><li>Save filtered screenshot </li></ol></div>The <a href="http://zzo38computer.org/fossil/farbfeld.ui/home" class="postlink">Farbfeld Utilities</a> I have written can do all of these things, except for loading/saving BMP images (it does support PNG). However, there is one step you missed which is to generate the NTSC signal; that is the thing I do not have.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>HardWareMan</b> [ Mon Jun 20, 2016 8:21 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: New NTSC decoder with integer-only math (short C++ code)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I copy this posts here form <a href="http://forums.nesdev.com/viewtopic.php?f=3&amp;t=12788&amp;p=173924#p173924" class="postlink">there</a>.<br /><br />I'm trying rebuild CVBS using PPU rules. For now it first approach to NTSC. I use 9 levels DAC (8 bit R-2R DAC with 9 different level values) and CPLD.<br /><img src="http://savepic.ru/10215339.jpg" alt="Image" /><br />I set phase 8 as color burst (<a href="http://wiki.nesdev.com/w/index.php/NTSC_video" class="postlink">according this</a>) and get this:<br /><img src="http://savepic.ru/10166161.png" alt="Image" /><br />As you can see, red and green is swapped. And I don't know why. All phases are correct - I tested it with logic analyzer. Any thoughts?<br /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">If only columns 2 (+U) and 8 (-U) have the correct hue, try generating the phases backward. You'll need to add a feature to control the direction of the phases when you add PAL anyway.</div><br />First - you're right about order - it is backward.<br />Second - color burst phase is wrong at <a href="http://wiki.nesdev.com/w/index.php/NTSC_video" class="postlink">Wiki</a>. If I set 8 I've got this (first picture is composite capturing, second S-Video, there are present frequency beating - do not pay attention, phase order is 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1):<br /><img src="http://savepic.ru/10205973.png" alt="Image" /><br /><img src="http://savepic.ru/10203925.png" alt="Image" /><br />But, if I set phase 4 as color burst, I get this:<br /><img src="http://savepic.ru/10185493.png" alt="Image" /><br /><img src="http://savepic.ru/10186517.png" alt="Image" /><br />If I left phase 8 as color burst, the phase order must be 4, 3, 2, 1, 12, 11, 10, 9, 8, 7, 6, 5.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>HardWareMan</b> [ Mon Jun 20, 2016 10:42 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: New NTSC decoder with integer-only math (short C++ code)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">feos wrote:</div><div class="quotecontent">If not inside an emulator, then how did you test it?</div><br />By the way, you always can set palette to FCEUx with colors values as index from $00 to $3F in each of RGB subpixel. And then record uncompressed AVI.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bisqwit</b> [ Tue Jun 21, 2016 3:06 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: New NTSC decoder with integer-only math (short C++ code)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Make sure your blue and red are not swapped (RGB v.s. BGR).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>HardWareMan</b> [ Tue Jun 21, 2016 3:32 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: New NTSC decoder with integer-only math (short C++ code)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bisqwit wrote:</div><div class="quotecontent">Make sure your blue and red are not swapped (RGB v.s. BGR).</div><br />How can it possible? It's just a 12 square waveforms with linear phase shift.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bisqwit</b> [ Tue Jun 21, 2016 3:38 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: New NTSC decoder with integer-only math (short C++ code)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">HardWareMan wrote:</div><div class="quotecontent"><div class="quotetitle">Bisqwit wrote:</div><div class="quotecontent">Make sure your blue and red are not swapped (RGB v.s. BGR).</div><br />How can it possible? It's just a 12 square waveforms with linear phase shift.</div><br />I presume you are doing NTSC signal to RGB conversions. The code I pasted generates 32-bit integers where certain eight bits represent blue, certain eight bits represent green, and certain eight bits represent red. (Lowest-order eight bits are red IIRC.) It's up to the user to ensure they map the relevant channel into correct channel.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Tue Jun 21, 2016 3:44 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: New NTSC decoder with integer-only math (short C++ code)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />He's generating the composite signal with a CPLD+DAC, there's no RGB conversion (except in the television/capture card).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>HardWareMan</b> [ Tue Jun 21, 2016 3:46 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: New NTSC decoder with integer-only math (short C++ code)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bisqwit wrote:</div><div class="quotecontent">I presume you are doing NTSC signal to RGB conversions. The code I pasted generates 32-bit integers where certain eight bits represent blue, certain eight bits represent green, and certain eight bits represent red. (Lowest-order eight bits are red IIRC.) It's up to the user to ensure they map the relevant channel into correct channel.</div><br />I'm doing:<br /><div class="quotetitle">HardWareMan wrote:</div><div class="quotecontent">I'm trying rebuild CVBS using PPU rules. For now it first approach to NTSC. I use 9 levels DAC (8 bit R-2R DAC with 9 different level values) and CPLD.<br /><img src="http://savepic.ru/10215339.jpg" alt="Image" /></div><br />So, I build CVBS within PPU rules and feed it to TV tuner. Where I can swap R and B?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bisqwit</b> [ Tue Jun 21, 2016 3:47 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: New NTSC decoder with integer-only math (short C++ code)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">HardWareMan wrote:</div><div class="quotecontent">So, I build CVBS within PPU rules and feed it to TV tuner. Where I can swap R and B?</div><br />I did see your post earlier, but I don't know what a CVBS is. So I made the assumption that your post is related to the topic.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>HardWareMan</b> [ Tue Jun 21, 2016 3:58 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: New NTSC decoder with integer-only math (short C++ code)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><a href="https://en.wikipedia.org/wiki/Composite_video" class="postlink">Composite Video Blanking Synchronizing signal</a>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>mikejmoffitt</b> [ Tue Jun 21, 2016 4:01 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: New NTSC decoder with integer-only math (short C++ code)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">HardWareMan wrote:</div><div class="quotecontent"><a href="https://en.wikipedia.org/wiki/Composite_video" class="postlink">Composite Video Blanking Synchronizing signal</a></div><br /><br />That's kind of a mix of Composite Video and what CVBS stands for...<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">often designated by the CVBS initialism, for color, video, blanking and sync</div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>HardWareMan</b> [ Sun Jul 03, 2016 2:45 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: New NTSC decoder with integer-only math (short C++ code)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I've got right palette with phase 8 in CPLD generator. Here is verilog:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">module PAL_NTSC_Gen(<br />&nbsp; &nbsp; input&nbsp; &nbsp; &nbsp; &nbsp;NTSC_Clk,&nbsp; &nbsp; &nbsp;// 21.4772 MHz<br />&nbsp; &nbsp; input&nbsp; &nbsp; &nbsp; &nbsp;PAL_Clk,&nbsp; &nbsp; &nbsp; // 53.2034 MHz<br />&nbsp; &nbsp; output&nbsp; &nbsp; &nbsp; &#91;7:0&#93;DAC,<br />&nbsp; &nbsp; output&nbsp; &nbsp; &nbsp; &#91;3:0&#93;COUT,<br />&nbsp; &nbsp; output&nbsp; &nbsp; &nbsp; &#91;12:1&#93;PHOUT<br />);<br />// For test purpose<br />assign COUT&#91;3:0&#93; = HCOUNT&#91;7:4&#93;;<br />assign PHOUT&#91;12:1&#93; = PH&#91;12:1&#93;;<br /><br />// Регистры<br />reg &#91;2:0&#93;PH_PSC;&nbsp; &nbsp; &nbsp; &nbsp; // Phase prescaler<br />reg &#91;12:1&#93;PH;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// Color subcarrier phases<br />reg &#91;3:0&#93;PIX_PSC;&nbsp; &nbsp; &nbsp; &nbsp;// Pixelclock prescaler<br />reg PIX_CLK;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // Pixelclock strobe<br />reg &#91;9:0&#93;HCOUNT;&nbsp; &nbsp; &nbsp; &nbsp; // Horizontal counter<br />reg &#91;9:0&#93;VCOUNT;&nbsp; &nbsp; &nbsp; &nbsp; // Vertical counter<br />reg HSYNC;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // Horizontal sync<br />reg BURST;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // Color burst<br />reg HSCREEN;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // Active video in scanline<br />reg VSYNC;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // Vertical sync<br />reg VSCREEN;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // Active video in frame<br /><br />// used levels<br />wire &#91;7:0&#93;L0;<br />wire &#91;7:0&#93;L1;<br />wire &#91;7:0&#93;L2;<br />wire &#91;7:0&#93;L3;<br />wire &#91;7:0&#93;L4;<br />wire &#91;7:0&#93;L5;<br />wire &#91;7:0&#93;L6;<br />wire &#91;7:0&#93;L7;<br />wire &#91;7:0&#93;L8;<br />wire &#91;7:0&#93;L9;<br />// NTSC<br />assign L0 = 8'h00;<br />assign L1 = 8'h10;<br />assign L2 = 8'h18;<br />assign L3 = 8'h20;<br />assign L4 = 8'h32;<br />assign L5 = 8'h36;<br />assign L6 = 8'h3C;<br />assign L7 = 8'h4E;<br />assign L8 = 8'h55;<br />assign L9 = 8'h6E;<br /><br />// Luma<br />wire &#91;7:0&#93;LUMAL;<br />wire &#91;7:0&#93;LUMAH;<br />assign LUMAL&#91;7:0&#93; = (~VCOUNT&#91;6&#93;) ?<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; (~VCOUNT&#91;5&#93;) ? L2&#91;7:0&#93; : L3&#91;7:0&#93;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; :<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; (~VCOUNT&#91;5&#93;) ? L5&#91;7:0&#93; : L8&#91;7:0&#93;;<br />assign LUMAH&#91;7:0&#93; = (~VCOUNT&#91;6&#93;) ?<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; (~VCOUNT&#91;5&#93;) ? L6&#91;7:0&#93; : L7&#91;7:0&#93;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; : L9&#91;7:0&#93;;<br /><br />// Chroma<br />wire &#91;7:0&#93;CHROMA;<br />assign CHROMA&#91;7:0&#93; =&nbsp; &nbsp; (~HCOUNT&#91;7&#93;) ?<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; (~HCOUNT&#91;6&#93;) ?<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; (~HCOUNT&#91;5&#93;) ?<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; (~HCOUNT&#91;4&#93;) ?<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; LUMAH&#91;7:0&#93;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; :<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; (PH&#91;1&#93;) ? LUMAH&#91;7:0&#93; : LUMAL&#91;7:0&#93;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; :<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; (~HCOUNT&#91;4&#93;) ?<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; (PH&#91;2&#93;) ? LUMAH&#91;7:0&#93; : LUMAL&#91;7:0&#93;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; :<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; (PH&#91;3&#93;) ? LUMAH&#91;7:0&#93; : LUMAL&#91;7:0&#93;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; :<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; (~HCOUNT&#91;5&#93;) ?<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; (~HCOUNT&#91;4&#93;) ?<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; (PH&#91;4&#93;) ? LUMAH&#91;7:0&#93; : LUMAL&#91;7:0&#93;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; :<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; (PH&#91;5&#93;) ? LUMAH&#91;7:0&#93; : LUMAL&#91;7:0&#93;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; :<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; (~HCOUNT&#91;4&#93;) ?<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; (PH&#91;6&#93;) ? LUMAH&#91;7:0&#93; : LUMAL&#91;7:0&#93;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; :<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; (PH&#91;7&#93;) ? LUMAH&#91;7:0&#93; : LUMAL&#91;7:0&#93;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; :<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; (~HCOUNT&#91;6&#93;) ?<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; (~HCOUNT&#91;5&#93;) ?<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; (~HCOUNT&#91;4&#93;) ?<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; (PH&#91;8&#93;) ? LUMAH&#91;7:0&#93; : LUMAL&#91;7:0&#93;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; :<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; (PH&#91;9&#93;) ? LUMAH&#91;7:0&#93; : LUMAL&#91;7:0&#93;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; :<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; (~HCOUNT&#91;4&#93;) ?<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; (PH&#91;10&#93;) ? LUMAH&#91;7:0&#93; : LUMAL&#91;7:0&#93;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; :<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; (PH&#91;11&#93;) ? LUMAH&#91;7:0&#93; : LUMAL&#91;7:0&#93;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; :<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; (~HCOUNT&#91;5&#93;) ?<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; (~HCOUNT&#91;4&#93;) ?<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; (PH&#91;12&#93;) ? LUMAH&#91;7:0&#93; : LUMAL&#91;7:0&#93;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; :<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; LUMAL&#91;7:0&#93;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; :<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; (~HCOUNT&#91;4&#93;) ?<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; L3&#91;7:0&#93;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; :<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; L3&#91;7:0&#93;;<br />// Video output<br />assign DAC&#91;7:0&#93; = (VSYNC | HSYNC) ?<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// This is correct composite sync<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;(VSYNC &amp; HSYNC) ? L3&#91;7:0&#93; : L0&#91;7:0&#93;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; :&nbsp; (BURST) ?<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // This is color burst<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; (PH&#91;8&#93;) ? L4&#91;7:0&#93; : L1&#91;7:0&#93;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;:&nbsp; &nbsp; (VSCREEN &amp; HSCREEN) ?<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // this is picture<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; CHROMA&#91;7:0&#93;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // Otherwise it is blank<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; : L3&#91;7:0&#93;;<br /><br />// Because I don't have 42,9544 MHz generator and CPLD don't allow sync always block on both edge we update only even phases at negedge.<br />always @(negedge NTSC_Clk) begin<br />&nbsp; &nbsp; {PH&#91;11&#93;,PH&#91;9&#93;,PH&#91;7&#93;,PH&#91;5&#93;,PH&#91;3&#93;,PH&#91;1&#93;} &lt;= {PH&#91;12&#93;,PH&#91;11&#93;,PH&#91;9&#93;,PH&#91;7&#93;,PH&#91;5&#93;,PH&#91;3&#93;};<br />end<br />// Video generator<br />always @(posedge NTSC_Clk) begin<br />&nbsp; &nbsp; // Color subcarrier phase prescaler<br />&nbsp; &nbsp; if (PH_PSC&#91;1&#93; &amp; !PH_PSC&#91;0&#93;)<br />&nbsp; &nbsp; begin<br />&nbsp; &nbsp; &nbsp; &nbsp; PH_PSC&#91;2:0&#93; &lt;= 3'h0; PH&#91;12&#93; &lt;= !PH&#91;12&#93;;<br />&nbsp; &nbsp; end else PH_PSC&#91;2:0&#93; &lt;= PH_PSC&#91;2:0&#93; + 3'h1;<br />&nbsp; &nbsp; {PH&#91;10&#93;,PH&#91;8&#93;,PH&#91;6&#93;,PH&#91;4&#93;,PH&#91;2&#93;} &lt;= {PH&#91;12&#93;,PH&#91;10&#93;,PH&#91;8&#93;,PH&#91;6&#93;,PH&#91;4&#93;};<br />&nbsp; &nbsp; <br />&nbsp; &nbsp; // Pixelclock prescaler<br />&nbsp; &nbsp; PIX_PSC&#91;3:0&#93; &lt;= PIX_PSC&#91;3:0&#93; + 4'h1;<br />&nbsp; &nbsp; PIX_CLK &lt;= !PIX_PSC&#91;1&#93; &amp; !PIX_PSC&#91;0&#93;;<br /><br />&nbsp; &nbsp; // HV COUNTERS: 341 pixels and 262 scanlines<br />&nbsp; &nbsp; if (PIX_CLK)<br />&nbsp; &nbsp; begin<br />&nbsp; &nbsp; &nbsp; &nbsp; if (HCOUNT&#91;9:0&#93; == 9'd340)<br />&nbsp; &nbsp; &nbsp; &nbsp; begin<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; HCOUNT&#91;9:0&#93; &lt;= 9'd000;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (VCOUNT&#91;9:0&#93; == 9'd261) VCOUNT&#91;9:0&#93; &lt;= 9'd000; else VCOUNT&#91;9:0&#93; &lt;= VCOUNT&#91;9:0&#93; + 9'd001;<br />&nbsp; &nbsp; &nbsp; &nbsp; end else HCOUNT&#91;9:0&#93; &lt;= HCOUNT&#91;9:0&#93; + 9'd001;<br />&nbsp; &nbsp; end<br /><br />&nbsp; &nbsp; // Active video in scanline<br />&nbsp; &nbsp; if (HCOUNT&#91;9:0&#93; == 9'd000) HSCREEN &lt;= 1'b1;<br />&nbsp; &nbsp; if (HCOUNT&#91;9:0&#93; == 9'd255) HSCREEN &lt;= 1'b0;<br />&nbsp; &nbsp; // Horizontal sync<br />&nbsp; &nbsp; if (HCOUNT&#91;9:0&#93; == 9'd280) HSYNC &lt;= 1'b1;<br />&nbsp; &nbsp; if (HCOUNT&#91;9:0&#93; == 9'd305) HSYNC &lt;= 1'b0;<br />&nbsp; &nbsp; // Color burst<br />&nbsp; &nbsp; if (HCOUNT&#91;9:0&#93; == 9'd309) BURST &lt;= 1'b1;<br />&nbsp; &nbsp; if (HCOUNT&#91;9:0&#93; == 9'd325) BURST &lt;= 1'b0;<br />&nbsp; &nbsp; // Vertical sync<br />&nbsp; &nbsp; if (VCOUNT&#91;9:0&#93; == 9'd244) VSYNC &lt;= 1'b1;<br />&nbsp; &nbsp; if (VCOUNT&#91;9:0&#93; == 9'd248) VSYNC &lt;= 1'b0;<br />&nbsp; &nbsp; // Active video in frame<br />&nbsp; &nbsp; if (VCOUNT&#91;9:0&#93; == 9'd000) VSCREEN &lt;= 1'b1;<br />&nbsp; &nbsp; if (VCOUNT&#91;9:0&#93; == 9'd240) VSCREEN &lt;= 1'b0;<br />end<br />// end<br />endmodule</div><br /><img src="http://savepic.ru/10298987.png" alt="Image" /><br /><a href="http://savepic.ru/10296939.png" class="postlink"><img src="http://savepic.ru/10296939m.png" alt="Image" /></a><br /><a href="http://savepic.ru/10352234.png" class="postlink"><img src="http://savepic.ru/10352234m.png" alt="Image" /></a><br /><br />Palette from RP2C02G-0:<br /><img src="http://savepic.ru/10335828.png" alt="Image" /><br /><br />Now I can make NTSC PPU with native S-Video output. Need to proceed with PAL and we get PAL PPU with S-Video with high quality video and without any dot crawl.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Eugene.S</b> [ Tue Dec 27, 2016 3:33 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: New NTSC decoder with integer-only math (short C++ code)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Sour implemented bisqwit's NTSC-decoder to Mesen:<br /><!-- m --><a class="postlink" href="https://github.com/SourMesen/Mesen/commit/641192236eaf152840edc6ca28732e8c365f39cf">https://github.com/SourMesen/Mesen/comm ... 8c365f39cf</a><!-- m --><br />compiled binary (windows):<br /><!-- m --><a class="postlink" href="https://yadi.sk/d/MXLsD9eL35QBEu">https://yadi.sk/d/MXLsD9eL35QBEu</a><!-- m --><br /><br />New filter is amazing! It looks very close to NTSC Famicom AV.<br />Color-generation is accurate too.<br /><div class="quotetitle">Sour wrote:</div><div class="quotecontent">There might be some bugs left, though. Let me know what you think!</div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>feos</b> [ Wed Dec 28, 2016 9:02 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: New NTSC decoder with integer-only math (short C++ code)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Bisqwit, can you run your filter against this ROM:<br /><!-- l --><a class="postlink-local" href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=15080">viewtopic.php?f=2&amp;t=15080</a><!-- l -->

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bisqwit</b> [ Thu Dec 29, 2016 2:58 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: New NTSC decoder with integer-only math (short C++ code)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">feos wrote:</div><div class="quotecontent">Bisqwit, can you run your filter against this ROM:<br /><!-- l --><a class="postlink-local" href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=15080">viewtopic.php?f=2&amp;t=15080</a><!-- l --></div><br /><a href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=15080&amp;p=185646#p185646" class="postlink">Thusly complied</a>.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>2</strong> of <strong>3</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>