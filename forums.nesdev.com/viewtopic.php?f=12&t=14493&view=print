<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - BS-X Satellaview Datapak's</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">BS-X Satellaview Datapak's</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=12&amp;t=14493">http://forums.nesdev.com/viewtopic.php?f=12&amp;t=14493</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>5</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>nocash</b> [ Tue Jul 05, 2016 3:11 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>BS-X Satellaview Datapak's</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Here are high-resolution PCB photos for the BS-X Datapak hardware - the BS-X BIOS cart, and several game carts with Datapak slots, and the actual Datapak's (a regular FLASH cart, plus two ROM carts). All photos are taken by <strong>skaman</strong>. As far as I can tell, the two photo sets are covering each and every BS-X cartridge that has been ever released.<br /><!-- m --><a class="postlink" href="http://www.mediafire.com/download/m5scy2eog0o5ad2/BS_Cart_Pictures.zip">http://www.mediafire.com/download/m5scy ... ctures.zip</a><!-- m --> - 52.36 MB - Various Carts and two ROM datapak's<br /><!-- m --><a class="postlink" href="http://www.mediafire.com/download/heg0v9bq3n30378/BS_Cart_Pictures_2.zip">http://www.mediafire.com/download/heg0v ... ures_2.zip</a><!-- m --> - 17.28 MB - Derby Stallion 96 and a FLASH datapak

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Tamanegi_taro</b> [ Tue Jul 05, 2016 5:44 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: BS-X Satellaview Datapak's</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Thanks for pictures.<br /><br />I was wondering if Samegame and Gundom data packs are re-writable like 8M memory packs but I guess they have completely different ROM chip which is not re-writable.<br /><br />Thanks,<br />Tamanegi

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>byuu</b> [ Tue Jul 05, 2016 10:36 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: BS-X Satellaview Datapak's</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Nope, and Same Game won't even run if the data pack responds to the cartridge info subchannel data that you can't suppress with flash carts. The game checks for and blocks this case, so you have to emulate the pack data as mask ROM or it fails to work. (and I currently can't tell them apart just by .bs extension, so you have to manually specify in the manifest that it's mask ROM.)<br /><br />Which always seemed like a huge waste to me. They could have supported BS-X downloadable character data that way.<br /><br />But now I look at it as a good thing. With nocash's notes, people could have more easily passed off fake Same Game Tengai Makyou carts. Those are around $350 each these days.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Tue Jul 05, 2016 11:23 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: BS-X Satellaview Datapak's</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Or I could play <a href="http://www.ticalc.org/archives/files/fileinfo/108/10889.html" class="postlink">Insane Game</a> on a TI calculator or <em>BreakThru!</em> on a Super NES. It's the same game. One of my first (unreleased) NES projects was to port Insane Game to NES, not knowing the history that dates back to <em>Chain Shot</em>, the first known SameGame implementation. And <a href="https://wiki.gnome.org/Apps/Swell%20Foop" class="postlink">Swell Foop</a> rhymes with but isn't Zoop.<br /><br /><div class="quotetitle">byuu wrote:</div><div class="quotecontent">Same Game won't even run if the data pack responds to the cartridge info subchannel data that you can't suppress with flash carts.</div><br />How does this work? I thought to query a flash cart you needed to write to it. Couldn't a pirate modify a flash cart to tie /WE high?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>byuu</b> [ Tue Jul 05, 2016 4:49 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: BS-X Satellaview Datapak's</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />That may work, I've only tested this in software. If nocash has a spare BS-X data pack he doesn't mind modding, and a Same Game cart, we could see.<br /><br />I have the MaskROM version of this game, so I have no reason (or skill to) to try this.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>AWJ</b> [ Wed Jul 06, 2016 12:54 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: BS-X Satellaview Datapak's</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Could it be Same Game is actually testing itself (that it's running off a real cartridge and not a copier), and not the data pack slot? Maybe the PCB it runs on doesn't connect /WR from the cart edge to the data pack slot, or it has a jumper that breaks the connection.<br /><br />Japanese Wikipedia claims that content for Same Game was distributed on the Satellaview service, and this advertisement for the game has the BS-X logo and 衛星放送対応 (&quot;Compatible with satellite broadcast&quot;) in the lower right corner:<br /><br /><img src="http://www004.upp.so-net.ne.jp/tadabomland/SGSFC2.jpg" alt="Image" /><br /><br />Same Game and Joushou Mahjong Tenpai use the BSC-1J3M-01 PCB, while Ongaku Tsukuru uses BSC-1J5M-01 (and I strongly suspect the latter <em>does</em> need the slot to be writable, since it's a &quot;tsukuru&quot; cartridge)<br /><br />ETA: Looked at the PCB photos, and Same Game has three capacitors (?) soldered onto the PCB (two on the component side and one on the solder side) which none of the other games have.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>byuu</b> [ Wed Jul 06, 2016 1:47 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: BS-X Satellaview Datapak's</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Well, the SNES ROM itself tries to ask for subchannel data from the BS-X pack. If it works, then the game ignores the cart entirely, even if it's identical to the official Tengai Makyou Same Game BS-X cartridge.<br /><br />If you trace the boot-up routine, you can see it doing exactly this.<br /><br />I don't see any possible way a rewritable cartridge could ever work with this game, and I'm not aware of any data actually distributed through the BS-X download service for this game.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>AWJ</b> [ Wed Jul 06, 2016 2:23 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: BS-X Satellaview Datapak's</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">byuu wrote:</div><div class="quotecontent">Well, the SNES ROM itself tries to ask for subchannel data from the BS-X pack. If it works, then the game ignores the cart entirely, even if it's identical to the official Tengai Makyou Same Game BS-X cartridge.<br /><br />If you trace the boot-up routine, you can see it doing exactly this.<br /><br />I don't see any possible way a rewritable cartridge could ever work with this game, and I'm not aware of any data actually distributed through the BS-X download service for this game.</div><br /><br />Maybe the data packs have some metadata indicating whether they're retail or broadcast, and the game will reject it if the metadata and the hardware type don't match. That would prevent pirates from copying the retail data packs onto flash cartridges.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>byuu</b> [ Wed Jul 06, 2016 4:13 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: BS-X Satellaview Datapak's</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I have a hard time believing Hudson was worried about people pirating Same Game character data packs by reprogramming BS-X packs. Especially given the game shipped with one, and the other only had a release of ~100 copies. And then no downloadable content was ever released anyway.<br /><br />I don't even know how those 100 copies ever got out in the first place. They were supposed to be sold in retail boxes at stores, but said release never happened. Yet somehow, a very small number of loose copies with no boxes or manuals exist in the wild. 100% of the English search results for the game only turn up a combination of real and fake ROM download links.<br /><br />But, who knows. Maybe there's a byte somewhere you can flip to make Same Game Tengai Makyou boot from a flash ROM BS-X cart. It'd be a cool novelty, but not really worth the time or effort. It's just Tengai Makyou character heads in place of more mainstream Hudson character heads in a puzzle game.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>AWJ</b> [ Wed Jul 06, 2016 11:03 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: BS-X Satellaview Datapak's</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">byuu wrote:</div><div class="quotecontent">I have a hard time believing Hudson was worried about people pirating Same Game character data packs by reprogramming BS-X packs. Especially given the game shipped with one, and the other only had a release of ~100 copies. And then no downloadable content was ever released anyway.</div><br /><br />After a bit of disassembling, I've figured it out, and my second guess was more or less right. I'm not sure if it's intentional protection or not, but Same Game <em>does</em> treat mask ROM and Flash ROM data packs differently, with the result that the mask ROM data packs won't work if you emulate them as Flash ROM (or if you copy them byte-for-byte onto a Flash pack and run it on hardware)<br /><br />The mask ROM data packs contain a fake Flash chip detection block at offset $FF00:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">0000ff00&nbsp; 4d 00 50 00 00 00 79 00&nbsp; 00 00 00 00 00 00 00 00&nbsp; |M.P...y.........|</div><br /><br />Notice that the fake info has a type code of &quot;7&quot;. BS-X Flash packs all have a type of either 1, 2, 3 or 4 (each with a slightly different protocol).<br /><br />Same Game reads the chip detection block and copies it to RAM at $0590-$0599. If the data pack responds to writes, it'll be the actual Flash chip info; if the data pack ignores writes, it'll be the fake info from the ROM. Then it validates the info, extracts the &quot;type&quot; and &quot;size&quot; fields, converts the size from logarithmic to linear units of 128KB, and stores the converted size and type at $058D and $058E respectively:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">80/AD12: 9C 8D 05&nbsp; &nbsp; &nbsp; stz $058D<br />80/AD15: 9C 8E 05&nbsp; &nbsp; &nbsp; stz $058E<br />80/AD18: 22 6E AD 80&nbsp; &nbsp;jsl l80AD6E ; read Flash info block<br />80/AD1C: 90 3F&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;bcc aAD5D ; bail if above routine timed out (can only happen with a defective Flash chip)<br />80/AD1E: AD 90 05&nbsp; &nbsp; &nbsp; lda $0590<br />80/AD21: C9 4D&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;cmp #$4D<br />80/AD23: D0 38&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;bne aAD5D ; first byte must be &quot;M&quot;<br />80/AD25: AD 91 05&nbsp; &nbsp; &nbsp; lda $0591<br />80/AD28: C9 50&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;cmp #$50<br />80/AD2A: D0 31&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;bne aAD5D ; second byte must be &quot;P&quot;<br />80/AD2C: AD 92 05&nbsp; &nbsp; &nbsp; lda $0592<br />80/AD2F: 29 81&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;and #$81<br />80/AD31: D0 2A&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;bne aAD5D ; third byte bits 7 and 0 must be clear<br />80/AD33: AD 93 05&nbsp; &nbsp; &nbsp; lda $0593<br />80/AD36: 4A&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; lsr<br />80/AD37: 4A&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; lsr<br />80/AD38: 4A&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; lsr<br />80/AD39: 4A&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; lsr&nbsp; &nbsp; &nbsp; ; extract type<br />80/AD3A: F0 21&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;beq aAD5D<br />80/AD3C: C9 05&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;cmp #$05<br />80/AD3E: 90 04&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;bcc aAD44<br />80/AD40: C9 07&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;cmp #$07<br />80/AD42: D0 19&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;bne aAD5D ; type must be 1, 2, 3, 4 or 7<br />aAD44:<br />80/AD44: 8D 8E 05&nbsp; &nbsp; &nbsp; sta $058E<br />80/AD47: 22 EF AD 80&nbsp; &nbsp;jsl l80ADEF ; terminate status mode<br />80/AD4B: AD 93 05&nbsp; &nbsp; &nbsp; lda $0593<br />80/AD4E: 29 0F&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;and #$0F&nbsp; ; extract size<br />80/AD50: AA&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; tax<br />80/AD51: BF 5E AD 80&nbsp; &nbsp;lda f:FlashSizeLUT,x ; linearize size <br />80/AD55: 8D 8D 05&nbsp; &nbsp; &nbsp; sta $058D<br />80/AD58: D0 03&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;bne aAD5D<br />80/AD5A: 9C 8E 05&nbsp; &nbsp; &nbsp; stz $058E ; looked-up size must be nonzero<br />aAD5D:<br />80/AD5D: 6B&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; rtl<br />FlashSizeLUT:<br />80/AD5E: 00 00 00 00 00 00 00 01 02 04 08 10 00 00 00 00</div><br /><br />tl;dr version: after this routine, $058D contains the size of the data pack in units of 128KB, and $058E contains the Flash chip type (1-4 or 7). If anything is wrong with the chip info, $058D and $058E are both set to 0 and the game will treat the slot as empty.<br /><br />Some time later, the following routine runs (which, amusingly, has to convert the data pack size <em>back</em> to logarithmic representation before using it as an index into another LUT):<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">80/AB35: AD 8E 05&nbsp; &nbsp; &nbsp; lda $058E<br />80/AB38: C9 07&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;cmp #$07<br />80/AB3A: D0 15&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;bne NotMaskROM<br />80/AB3C: 20 53 AB&nbsp; &nbsp; &nbsp; jsr LogarithmizeFlashSize<br />80/AB3F: C2 20&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;rep #$20<br />80/AB41: BD 62 AB&nbsp; &nbsp; &nbsp; lda FakeBlockMapLUT,x<br />80/AB44: 8D 2C 05&nbsp; &nbsp; &nbsp; sta $052C<br />80/AB47: BD 64 AB&nbsp; &nbsp; &nbsp; lda FakeBlockMapLUT+2,x<br />80/AB4A: 8D 2E 05&nbsp; &nbsp; &nbsp; sta $052E<br />80/AB4D: E2 20&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;sep #$20<br />80/AB4F: 38&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; sec<br />80/AB50: 60&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; rts<br />NotMaskROM:<br />80/AB51: 18&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; clc<br />80/AB52: 60&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; rts<br />LogarithmizeFlashSize:<br />80/AB53: A2 00&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;ldx #$00<br />80/AB55: AD 8D 05&nbsp; &nbsp; &nbsp; lda $058D<br />aAB58:<br />80/AB58: 4A&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; lsr<br />80/AB59: F0 06&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;beq aAB61<br />80/AB5B: E8&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; inx<br />80/AB5C: E8&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; inx<br />80/AB5D: E8&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; inx<br />80/AB5E: E8&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; inx<br />80/AB5F: 80 F7&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;bra aAB58<br />aAB61:<br />80/AB61: 60&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; rts<br />FakeBlockMapLUT:<br />80/AB62: 01 00 00 00&nbsp; &nbsp;.dword $00000001<br />80/AB66: 03 00 00 00&nbsp; &nbsp;.dword $00000003<br />80/AB6A: 0F 00 00 00&nbsp; &nbsp;.dword $0000000F<br />80/AB6E: FF 00 00 00&nbsp; &nbsp;.dword $000000FF<br />80/AB72: FF FF 00 00&nbsp; &nbsp;.dword $0000FFFF<br />80/AB76: FF FF FF FF&nbsp; &nbsp;.dword $FFFFFFFF</div><br /><br />This routine stores a fake block map at $052C indicating that whatever size the data pack is, it's completely occupied by a single file--but only if the data pack is type 7 (i.e. mask ROM). If the data pack isn't type 7, a different routine ends up loading $052C with the <em>actual</em> block map from offset $FFD0 of the data pack (see <a href="http://problemkaputt.de/fullsnes.htm#snescartsatellaviewflashfileheader" class="postlink">here</a>).<br /><br />If you look at offset $FFD0 in the mask ROM data pack, it's a bunch of zeroes. So if the above override routine doesn't override it, the game thinks that the data pack is empty. And that's why the mask ROM data packs won't work if copied to or emulated as Flash ROM. To make them work, just change the byte at offset $FFD0 in the .bs file from $00 to $0F (tested and confirmed to work with both data packs).<br /><br />By the way, the mask ROM data pack for SD Gundam G Next contains an identical fake Flash chip detection block, only it's at offset $7F00 rather than $FF00.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>nocash</b> [ Wed Jul 06, 2016 2:25 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: BS-X Satellaview Datapak's</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Nice disassembly! Good to know about the extra bytes at FF00h, and about the missing byte at FFD0h. Even if Nintendo planned to produce more of those ROM carts, the missing byte wouldn't serve too well as copy-protection. I guess they have just unintentionally left it set to zero (after all, the bytes at FFD0h are usually supposed to be set <em>at time when writing a file to a flash cart</em>, with the separate bits set/cleared depending on which free blocks the file is written to, ie. the ROMs could be just treated as 'raw files' that haven't been written to a FLASH card yet; similar as when downloading a file via satellite).<br /><br />Btw. for the ROM PCB photos, the most intersting parts to me are that they are really Mask ROMs (not write-protected FLASH chips or the like), and that one ROM cart uses 8bit databus, and the other ROM cart uses 16bit databus. FLASH carts can be used in 8bit or 16bit mode - but the ROM carts are hardwired to one bus-width, so the 16bit ROMs can be used only with SA-1 game cards, and the 8bit ROMs with the MCC bios card and MAD-1 game cards.<br />Theoretically it might be possible to switch the 16bit ROM chip to 8bit mode (as FLASH chips can do), but skaman reported problems dumping that particular ROM card (for SD Gundam), so the 16bit ROM card is probably wired to operate always in 16bit mode (regardless of whether the actual ROM chip also supports 8bit or not).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>AWJ</b> [ Wed Jul 06, 2016 3:19 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: BS-X Satellaview Datapak's</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Here's a question for you: The BS-X cartridge and other slotted cartridges support four different types of Flash chip with different interfaces, but do you know which type(s) actually exist in data packs in the wild?<br /><br />I guess you'd have to reprogram a slotted cartridge (one of the plain MAD-1 ones would be easiest) with a program that queried the data pack and displayed the chip info on-screen, and test it with a bunch of different data packs...<br /><br />bsnes emulates the type 2 flash chip, I guess because it's the simplest protocol to emulate. But one of the third-party forks (not mine) changed it to emulate the type 1 instead, claiming that the code (in games, not the emulator) for type 2 was obviously buggy/broken and that type 1 worked better with certain games (I think the ~Tsukuru games might have been the ones that didn't seem to like type 2, according to this fork author)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>nocash</b> [ Wed Jul 06, 2016 4:30 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: BS-X Satellaview Datapak's</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />From what I remember, people reported the FLASH cards to be are all containing the same chip (ie. the Sharp LH28F00SUT-ZI shown on the photo). Which, skaman identified that chip as this: &quot;All of the Memory Paks that I have are Type 1 (coded 0x1A). The Intelligent Identifier (Chip ID) is 0xB0, 0xA8 (Sharp Chip ID 0xA8).&quot;<br /><br />The BS-X BIOS cart has two bugs (for Type 2 detection and Type 3 erase-entire-chip; see the &quot;BUG&quot; markings in fullsnes.htm), though the bugs aren't neccessarily making the carts totally nonfunctional, so Type 2/3 cards (if they should have ever been manufactured, at least as prototypes) might have still worked despite of those bugs.<br /><br />I haven't disassembled the FLASH code in the Tsukuru games, maybe they are containing more serious bugs.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>byuu</b> [ Wed Jul 06, 2016 5:57 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: BS-X Satellaview Datapak's</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />All of my carts are type 1 as well. Types 2-4 have never been confirmed in the wild.<br /><br />Also, fantastic sleuthing on Same Game, thank you!

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>AWJ</b> [ Fri Jul 08, 2016 5:53 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: BS-X Satellaview Datapak's</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Here's the data pack validation from SD Gundam G Next. It runs on the S-CPU very early in initialization, before starting up the SA-1. Unlike Same Game, G Next doesn't seem to write to the Flash registers at all (so the fake chip info at $7F00 isn't used or needed). Perhaps the SA-1, like the SuperFX, simply doesn't support writing to ROM.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">00/81BB: A9 40&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;lda #$40<br />00/81BD: 8D 0C 60&nbsp; &nbsp; &nbsp; sta $600C ; #$40 = data pack absent?<br />00/81C0: A9 84&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;lda #$84 ; first data pack slot bank<br />00/81C2: 85 00&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;sta $00<br />Loop:<br />00/81C4: A5 00&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;lda $00<br />00/81C6: 8D 23 22&nbsp; &nbsp; &nbsp; sta FXB ; map data pack at A0-BF:8000-FFFF<br />00/81C9: AF DA FF A0&nbsp; &nbsp;lda $A0FFDA<br />00/81CD: C9 33&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;cmp #$33<br />00/81CF: D0 34&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;bne Fail<br />00/81D1: C2 20&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;rep #$20<br />00/81D3: AF DC FF A0&nbsp; &nbsp;lda $A0FFDC<br />00/81D7: 18&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; clc<br />00/81D8: 6F DE FF A0&nbsp; &nbsp;adc $A0FFDE<br />00/81DC: 1A&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; inc<br />00/81DD: D0 26&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;bne Fail&nbsp; &nbsp;; checksums must complement<br />00/81DF: AF B0 FF A0&nbsp; &nbsp;lda $A0FFB0<br />00/81E3: CD B0 FF&nbsp; &nbsp; &nbsp; cmp $FFB0<br />00/81E6: D0 1D&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;bne Fail&nbsp; &nbsp;; 2-byte maker code must match ours<br />00/81E8: E2 20&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;sep #$20<br />00/81EA: A2 00 00&nbsp; &nbsp; &nbsp; ldx #$0000<br />a81ED:<br />00/81ED: BF C0 FF A0&nbsp; &nbsp;lda $A0FFC0,x<br />00/81F1: DD AA FF&nbsp; &nbsp; &nbsp; cmp $FFAA,x<br />00/81F4: D0 0F&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;bne Fail&nbsp; &nbsp;; title must start with &quot;GNEXT &quot;<br />00/81F6: E8&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; inx<br />00/81F7: E0 06 00&nbsp; &nbsp; &nbsp; cpx #$0006<br />00/81FA: D0 F1&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;bne a81ED<br />00/81FC: A9 C0&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;lda #$C0<br />00/81FE: 8D 0C 60&nbsp; &nbsp; &nbsp; sta $600C ; #$C0 = data pack present?<br />00/8201: A5 00&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;lda $00<br />00/8203: 80 0C&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;bra Success<br />Fail:<br />00/8205: E2 20&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;sep #$20<br />00/8207: E6 00&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;inc $00<br />00/8209: A5 00&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;lda $00<br />00/820B: C9 88&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;cmp #$88 ; last data pack slot bank<br />00/820D: 90 B5&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;bcc Loop<br />00/820F: A9 81&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;lda #$81<br />Success:<br />00/8211: 8D 22 22&nbsp; &nbsp; &nbsp; sta EXB ; map data pack or ROM at 80-9F:8000-FFFF</div><br /><br />Note that the game only checks one location in each 1MB bank, so files smaller than 1 MB that aren't located at the start of the Flash ROM won't be found (maybe all the broadcast DLC packs for the game were a full 1MB in size? The Mask ROM pack is only 512KB)<br /><br />ETA: Bass Tsuri No.1 doesn't seem to write to the Flash registers either, at least not while detecting/validating the data pack (I don't know where to get a data pack image with valid data for the game, so I can't tell what it does after that)

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>5</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>