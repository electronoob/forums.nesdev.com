<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - video roms</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">video roms</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=12&amp;t=5767">http://forums.nesdev.com/viewtopic.php?f=12&amp;t=5767</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>5</strong> of <strong>7</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Mon Nov 30, 2009 1:11 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">byuu wrote:</div><div class="quotecontent">The only reason it wouldn't be able to cross a 1MB ROM boundary is if the chip internally uses a 20-bit address register. That would be rather stupid.</div><br />But stupid isn't beyond Nintendo, even if it only saves a couple gates. Here are five penny-wise, pound-foolish examples from the NES: <ol style="list-style-type: lower-alpha"><li>DPCM playback wraps from $FFFF to $8000, not $C000 or $0000. </li><li>The sweep unit on the square wave channels will silence the sound even if sweep is turned off. </li><li>CPU I/O registers $4000-$4017 are fully decoded yet they overlap $4000 rather than the superfluous mirrors of PPU address space ($2008-$3FFF). </li><li>PAL NES CPU clock divides by 16 instead of 15. </li><li>Spurious fetches of nametable data in hblank between sprite pattern fetches instead of adding eight more sprite shift registers. </li></ol><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">In that case, modify it to only use MMC3</div><br /><em>(tepples makes sure he's still in the SNESdev forum)</em><br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I don't think it violates the spirit of the chips though to simply extend their addressable range.</div><br />That's what NES people thought about CNROM until we learned about the <a href="http://wiki.nesdev.com/w/index.php/CNROM#Hardware" class="postlink">diodes on D4-D5 used for extra enable signals to thwart early copiers</a>.<br /><br /><div class="quotetitle">tomaitheous wrote:</div><div class="quotecontent">A single 8x8 4bit tiles takes 32bytes. A single tilemap entry takes 2 bytes. [...] Wouldn't be updating 8 subpalettes be even smaller than updating an 8bit palette?</div>
<br />I was under the impression that one would try to update subpalettes multiple times per frame. If it's just attributes, not entire subpalettes, that's different, much like the tricks to get photorealistic graphics on a TMS9918 chip (see <a href="http://www.atariage.com/forums/topic/80130-tms9918-rant/" class="postlink">the Roxette cover in post 8</a>).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>HJRodrigo</b> [ Mon Nov 30, 2009 1:19 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent"><br />EDIT: I just checked the high quality video again and it's actually 30 fps, but it doesn't look very smooth because it was poorly converted from 24 fps. This means that every 5th frame is the video is a duplicate of the 4th, and this kills all the smoothness. If someone is able (I failed very hard at getting VirtualDub to open the mp4 file) to get rid of the repeated frames they'd probably get a very smooth 24 fps video, which could be properly converted back to 30 fps.</div>
<br />
<br />If I remember correctly, you have to use a <a href="http://en.wikipedia.org/wiki/Non-linear_editing_system" class="postlink">Non-linear editing</a> program with AVC's. Try <a href="http://en.wikipedia.org/wiki/Pinnacle_Studio#VideoSpin" class="postlink">VideoSpin</a> with the necesary plugins.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>smkd</b> [ Mon Nov 30, 2009 11:11 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />edit: yeah I mixed up the videos, it was the Saturn MPEG one.
<br />
<br />I'm having some difficulty with andreas' compressor program, atleast it appears to be outputting inconsistent results for me.  I modified the source files with the main routine to take a command line parameter and that's about it.
<br />
<br /><a href="http://img14.imageshack.us/img14/9014/43426323.png" class="postlink">http://img14.imageshack.us/img14/9014/43426323.png</a>
<br />
<br />On the left is the file I tried to compress, on the right is the result after compressing, then decompressing the output.  I didn't touch any of the classes that actually compress and decompress.
<br />
<br />I'll post the source I cobbled together for this because thee must be something silly I missed.  There's not much to see though...  I do everything in C# so:
<br />
<br />compressor:
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">int main&#40;int argc, char* argv&#91;&#93; &#41; &#123;<br /><br />&nbsp; &nbsp;uint8 out_buf&#91;0xc000&#93;; //arbitrary size<br />&nbsp; &nbsp; &nbsp;uint32 out_len;<br />&nbsp; &nbsp; &nbsp;SDD1comp SDD1encoder;<br /><br />&nbsp; &nbsp;//open something and grab its size<br />&nbsp; &nbsp;ifstream OpenFile&#40;argv&#91;1&#93;&#41;;<br />&nbsp; &nbsp;uint32 fileSize = 0;<br />&nbsp; &nbsp;OpenFile.seekg&#40;0, ios::end&#41;;<br />&nbsp; &nbsp;fileSize = OpenFile.tellg&#40;&#41;;<br />&nbsp; &nbsp;OpenFile.seekg&#40;0, ios::beg&#41;;<br />&nbsp; &nbsp;uint8* in_buf = new uint8&#91;fileSize&#93;;<br />&nbsp; &nbsp;uint32 i;<br />&nbsp; &nbsp;for&#40;i=0; !OpenFile.eof&#40;&#41;; i++&#41;<br />&nbsp; &nbsp;&nbsp; &nbsp;in_buf&#91;i&#93; = OpenFile.get&#40;&#41;;<br />&nbsp; &nbsp;<br />&nbsp; &nbsp; &nbsp;SDD1encoder.compress&#40;fileSize, in_buf, &amp;out_len, out_buf&#41;;<br />&nbsp; &nbsp;ofstream SaveFile&#40;&quot;output.bin&quot;&#41;;<br />&nbsp; &nbsp;for&#40;i=0; i &lt; out_len; i++&#41;&nbsp; &nbsp;<br />&nbsp; &nbsp;&nbsp; &nbsp;SaveFile &lt;&lt; out_buf&#91;i&#93;;<br />&nbsp; &nbsp;SaveFile.close&#40;&#41;;<br /><br />&nbsp; return 0;<br /><br />&#125;</div><br /><br />decompressor:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">int main&#40;int argc, char* argv&#91;&#93;&#41; &#123;<br />&nbsp; &nbsp;uint8 out_buf&#91;0xc000&#93;; //arbitrary size<br />&nbsp; &nbsp; &nbsp;uint32 out_len;<br /><br />&nbsp; &nbsp;//open something and grab its size<br />&nbsp; &nbsp;ifstream OpenFile&#40;argv&#91;1&#93;&#41;;<br />&nbsp; &nbsp;uint32 fileSize = 0;<br />&nbsp; &nbsp;OpenFile.seekg&#40;0, ios::end&#41;;<br />&nbsp; &nbsp;fileSize = OpenFile.tellg&#40;&#41;;<br />&nbsp; &nbsp;OpenFile.seekg&#40;0, ios::beg&#41;;<br />&nbsp; &nbsp;uint8* in_buf = new uint8&#91;fileSize&#93;;<br />&nbsp; &nbsp;uint32 i;<br />&nbsp; &nbsp;for&#40;i=0; !OpenFile.eof&#40;&#41;; i++&#41;<br />&nbsp; &nbsp;&nbsp; &nbsp;in_buf&#91;i&#93; = OpenFile.get&#40;&#41;;<br /><br />&nbsp; &nbsp;SDD1emu SDD1;<br />&nbsp; &nbsp;SDD1.decompress&#40;in_buf, fileSize, out_buf&#41;;<br />&nbsp; &nbsp;//making assumption about outlength, it would be known prior to this what the decompressed size is anyway<br />&nbsp; &nbsp;out_len = 5000;<br />&nbsp; &nbsp;ofstream SaveFile&#40;&quot;output.bin&quot;&#41;;<br />&nbsp; &nbsp;for&#40;i=0; i &lt; out_len; i++&#41;&nbsp; &nbsp;&nbsp; &nbsp;<br />&nbsp; &nbsp;&nbsp; &nbsp;SaveFile &lt;&lt; out_buf&#91;i&#93;;<br />&nbsp; &nbsp;SaveFile.close&#40;&#41;;<br /><br />&nbsp; return 0;<br /><br />&#125;<br /></div>
<br />
<br />I didn't catch any issues before because my test file was only 200 bytes or something, it appears to go crazy after the "world" bit.
<br />
<br />----
<br />
<br />If that gets all patched up, I will make the program switch banks after crossing a 512KB page of data and set the S-DD1 DMA pointer again.  I also noticed the compressor wouldn't do anything over 64KB seemingly because of the uint16 used for length, I just switched it to uint32 in all the relevant parts and it didn't seem to crash, although the odd compression results meant I got impossibly small file sizes.  I wondered for a while what was going on.
<br />
<br />I also wonder how much the S-DD1 could actually address becuase it's got hundred pin package and the <a href="http://nintendoallstars.w.interia.pl/romlab/sdd1.htm" class="postlink">Polish site</a> with the only pinout I can find has an awful lot of "???"s there.  The thing has a hundred pins but I can't see Nintendo thinking to themselves in 1996 that someone would require 16MB worth of ROM or something.  Or be willing to pay for it, N64 games weren't even that big yet. I wonder if anyone here knows for sure what it could do.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>byuu</b> [ Tue Dec 01, 2009 12:31 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I'll post the source I cobbled together for this because thee must be something silly I missed. There's not much to see though... I do everything in C# so:</div><br /><br />From your screenshot, it gets mangled after the first \r. It looks like you're reading the file in using ASCII mode instead of binary mode.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I also noticed the compressor wouldn't do anything over 64KB seemingly because of the uint16 used for length</div><br /><br />Yeah, that's just the internal limit of a DMA transfer.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I also wonder how much the S-DD1 could actually address becuase it's got hundred pin package and the Polish site with the only pinout I can find has an awful lot of "???"s there. The thing has a hundred pins but I can't see Nintendo thinking to themselves in 1996 that someone would require 16MB worth of ROM or something.</div>
<br />
<br />Yeah, as before, extra address bus pins cost money. It'd be like an 8086 chip supporting a 48-bit address bus. Why would you do that?
<br />
<br />I really think the S-DD1 was limited to either 6MB or 8MB, and the SPC7110 to 5MB.
<br />
<br />We're definitely cheating by using the full 8-bits for the MMC bank pointers.
<br />
<br />I've decided to work on an enhancement "base" unit, in the hopes of supporting up to 4GB of storage data (most everything would only use 32MB or so, of course), and allow streaming FMV + CD-quality audio without ADPCM compression. I'm designing it in such a way that it works fully even when the base unit isn't there, and to be technically possible from a hardware standpoint.
<br />
<br />I know people are going to throw a fit already, but I honestly don't care. I know it's a nice idea, and I know it will enable some awesome new software with only ~2kb of extra code to existing SNES emulators. If some people don't like it, well, they don't have to use it.
<br />
<br />With any luck, we get enough high-profile titles using it and maybe someone will consider making a hardware version =)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Masterflow</b> [ Tue Dec 01, 2009 1:51 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I converted the intro from the Saturn and the mp4 yesterday...perhaps its still useful.
<br />
<br /><!-- m --><a class="postlink" href="http://rapidshare.com/files/314670400/lsss_intro.rar.html">http://rapidshare.com/files/314670400/l ... o.rar.html</a><!-- m -->

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>smkd</b> [ Tue Dec 01, 2009 7:30 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Thanks for that, I'll let byuu be the judge of quality plus my internet blows at the moment.
<br />
<br />Yeah ios::binary fixed that up, I haven't had to deal with the sort of stuff since I was making shitty C apps with fopen.  It works great now, with the extended compression with uint32 and all.  I did quick tests in the decompressor / tilemolestor to see if anything was out of place.  It takes its sweet time in compressing it though, must be a really involved algorithm.  I compiled it with -O3 but with my pretty much nonexistant experience with the compiler, I'm not sure if there's anything else I could do to speed things up.  I don't really mind though, I'm plenty patient.
<br />
<br />I initially ran the conversion on the existing video using the compressor source just how it was originally (minus the extension on the size it can compress), but I was forgetting reading andreas' notes about the compression.  It mentioned headers for different tile types and I compiled it using the original '00' setting.  '01' is what I wanted for 8bpp tiles apparently so I ran it again using that.  Just had to change the header parameter in the .cpp.  It didn't appear to do anything though, I might have slipped up somewhere in copying or whatever, I will try again tomorrow.
<br />
<br />Compressions statistics are:
<br />original uncompressed: 81.6MB
<br />00 header compression: 59.3MB (saved 22.3MB)
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">compress&#40;0, in_len, in_buf, out_len, out_buf&#41;;</div><br />01 header compression: 59.3MB?<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">compress&#40;1, in_len, in_buf, out_len, out_buf&#41;;</div>
<br />
<br />there were an awful lot of unfortunate packs of frames (I compressed 14 frames in a single pack, or 532KB) where it reported 520KB+ compressed size, even with 01 header.  Most packs appeared to hover around the 400KB+ mark, I'd just occasionally look at my program's output in the console, stating what the compressed size / saved byte amount was at the time.  Ofcourse the less busier frames were compressed quite nicely.  It shaved off a decent chunk atleast.
<br />
<br />e: I'll just make the header setting a command line parameter and have my program try all in succession and pick the smallest one, I'll do that next time around.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>nintendo2600</b> [ Tue Dec 01, 2009 9:37 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />So what are the odds of this SNES video making method being able to fit say a 20 min cartoon onto a chipsize feasable for actual cartridge use? I'd love to see something like an old Heman, Smurfs or *gasp* Super Mario Super Show episode(s) on SNES cart(s). Would it be able to fit on a SCHV pcb you think? I ask about that PCB as it's so common to find on crappy commons.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>byuu</b> [ Tue Dec 01, 2009 11:29 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">e: I'll just make the header setting a command line parameter and have my program try all in succession and pick the smallest one, I'll do that next time around.</div><br /><br />Wow, that's an even worse ratio than I initially imagined. Only ~25% or so :/<br /><br />Yeah, probably best to just try all three on every frame. That's how I'd do it if I were making a game with this chip.<br /><br />Overall though, I think it's worth it. We got it under the 64MB mark :D<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Thanks for that, I'll let byuu be the judge of quality plus my internet blows at the moment.</div><br /><br />I'll have to check later tonight. Hopefully it adds a little motion blur for that annoying side-scrolling thing :D<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">So what are the odds of this SNES video making method being able to fit say a 20 min cartoon onto a chipsize feasable for actual cartridge use?</div>
<br />
<br />0:∞
<br />
<br />Sorry. It's about 59MB for 90 seconds of video using compression and 20fps. You'd probably have to do something like 64x64 at one frame per second and 500hz audio to fit all that in.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>MottZilla</b> [ Tue Dec 01, 2009 11:30 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />You could do it if a new PCB was produced with a memory mapper implemented to handle large amounts of ROM. Afterall just look at what some pirates will do to stick a ton of bootleg games into a cartridge. Otherwise, no. No regular SNES cartridge PCB will ever support enough ROM. So you best start hoping for a SNES CDROM that can stream data or something.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Tue Dec 01, 2009 12:22 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I trought the SNES CDROM was called the PlayStaion  <img src="./images/smilies/icon_wink.gif" alt=":wink:" title="Wink" /> 
<br />
<br />Aside of that the only point in making SNES videos in my opinion is to use them with a SNES homebrew game - which I really hope will happen someday !! But until someone makes a SNES homebrew and want to add a video to it, there is not that much point in doing that.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>byuu</b> [ Tue Dec 01, 2009 12:38 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">So you best start hoping for a SNES CDROM that can stream data or something.</div><br /><br />I'm working on a design mockup for just such a thing, but based around flash storage instead. No reason to be nostalgic with ancient mediums when flash is cheap ;)<br /><br />If it catches on in software, a hardware-backed device should be possible.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Aside of that the only point in making SNES videos in my opinion is to use them with a SNES homebrew game</div>
<br />
<br />Not really. What about embedding the Chrono Trigger FMVs into the SNES game? Same great game, without the loading and seek times, and without the need for a closed source or low quality PSX emulator:
<br />
<br /><!-- m --><a class="postlink" href="http://www.youtube.com/watch?v=hOmgIZZuI68">http://www.youtube.com/watch?v=hOmgIZZuI68</a><!-- m -->
<br /><!-- m --><a class="postlink" href="http://www.youtube.com/watch?v=_O091Vr3L1M">http://www.youtube.com/watch?v=_O091Vr3L1M</a><!-- m -->

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Tue Dec 01, 2009 12:55 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I admit it would be very cool but it's probably the only exeption to what I said.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>MottZilla</b> [ Tue Dec 01, 2009 2:03 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">byuu wrote:</div><div class="quotecontent">I'm working on a design mockup for just such a thing, but based around flash storage instead. No reason to be nostalgic with ancient mediums when flash is cheap <img src="./images/smilies/icon_wink.gif" alt=";)" title="Wink" /></div>
<br />
<br />But I suppose that depends on your intent for such a system. If you just want a free for all I suppose something like Flash Memory (NAND) would be fine but if you wanted to actually sell games and protect them I would think it would be easier to do on CD plus another reason to use CD would be for the Audio. 
<br />
<br />It would be neat to see a SNES Chrono Trigger running on BSNES with the FMV inserted. Good luck with that. <img src="./images/smilies/icon_wink.gif" alt=";)" title="Wink" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>naI</b> [ Tue Dec 01, 2009 5:23 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">byuu wrote:</div><div class="quotecontent">I'm working on a design mockup for just such a thing, but based around flash storage instead. No reason to be nostalgic with ancient mediums when flash is cheap <img src="./images/smilies/icon_wink.gif" alt=";)" title="Wink" /></div>
<br />You do know that CDs are much cheaper than flash (just a few cents per 700MB disc), and a standard CD-ROM drive would only increase the cost of such a unit a few dollars at least?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>smkd</b> [ Tue Dec 01, 2009 5:41 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I wonder how much this device would cost if it ever reaches the production stage, do you already have an idea of it?  I don't know much about the overheads involved but a ballpark figure would be cool, if you have the design already thought out.
<br />
<br />On a side note, I just realised the compressor tries all 16 combinations of the header (those 2 bits for bitplane mode, those other 2 bits for probability estimation thing) and automatically puts out the smallest size already, that's why it takes so long and why I saw no difference.  I should pay more attention to what's going on in that .cpp file, I just ignore it for the most part.  Oh well, 64MB ROM is still happening atleast.
<br />
<br />edit: yeah I was hoping for better with compression results.  I guess the images are just really unforgiving, 8bit with dithering throughout, even if its subtle dithering.  Star Ocean apparently doubled in size when the chip was removed but those 4bpp 'traditional' graphics must have been alot easier to deal with.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>5</strong> of <strong>7</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>