<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=20&amp;t=12815" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2015-05-17T21:32:03-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=20&amp;t=12815</id>
<entry>
<author><name><![CDATA[theotherjim]]></name></author>
<updated>2015-05-17T21:32:03-07:00</updated>
<published>2015-05-17T21:32:03-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12815&amp;p=147686#p147686</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12815&amp;p=147686#p147686"/>
<title type="html"><![CDATA[Re: Blargg Test 'POP AF' in '01 - special' logic question]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12815&amp;p=147686#p147686"><![CDATA[
Ahh!! That's it! Thank you. That makes a lot more sense now.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=7024">theotherjim</a> — Sun May 17, 2015 9:32 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Shonumi]]></name></author>
<updated>2015-05-17T15:26:04-07:00</updated>
<published>2015-05-17T15:26:04-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12815&amp;p=147669#p147669</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12815&amp;p=147669#p147669"/>
<title type="html"><![CDATA[Re: Blargg Test 'POP AF' in '01 - special' logic question]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12815&amp;p=147669#p147669"><![CDATA[
Let me try to remember... I believe that you can only write to the top 4 bits of the F register. It only holds 4 flags, the rest of the bits are supposed to go unused. When performing a POP AF instruction, bits 0 - 3 are ignored/masked out. Therefore:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">PUSH BC       ;BC being 1301, B hold $13, C holds $1<br />POP AF        ;Basically stores B into A, and C into F<br />              ;F ignores $1, however, so now you have AF = $1300<br />PUSH AF       ;Puts $1300 on the stack<br />POP DE        ;Pulls $1300 from the stack, with E being $0, D being $13<br />LD A, C       ;Load $1 into A<br />AND $F0       ;Masks lower nibble of A, $A is now $0<br />CP E          ;Both A and E are $0, so the zero flag is set<br /></div><br /><br />I recall that being a bit of a head-scratching moment myself when I was writing my first emulator. That should be what the test is looking for. It's been a while, but that's what I can pull of the top of my head.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6368">Shonumi</a> — Sun May 17, 2015 3:26 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[theotherjim]]></name></author>
<updated>2015-05-17T14:39:04-07:00</updated>
<published>2015-05-17T14:39:04-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12815&amp;p=147665#p147665</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12815&amp;p=147665#p147665"/>
<title type="html"><![CDATA[Blargg Test 'POP AF' in '01 - special' logic question]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12815&amp;p=147665#p147665"><![CDATA[
Hi, I have a question about the logic in one of the blargg's tests in 01 - special. Test #5: POP AF has some logic that I don't quite understand. <br /><br />First let's look at the source for that test:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">    LD BC,$1200       ;start with BC=$1200<br />-   PUSH BC           ; save bc on the stack<br />    POP AF            ; pop the stack into af (effectively AF = BC)<br />    PUSH AF           ; push AF onto the stack<br />    POP DE            ; pop the stack into DE (effectively DE = AF (= BC))<br />    LD A,C            ; load C into A<br />    AND $FO           ; only keep the high 4 bits of A<br />    CP E              ; compare E to A<br />    JP NZ,test_failed ; if they're not equal, the test is failed<br />    INC B             ; otherwise, increment B<br />    INC C             ; and C<br />    JR NZ,-           ; and do it again until C = $00<br /></div><br /><br />Now, I think I understand what the operations of the test are, but I would imagine this to always fail for the second iteration (BC = $1301) because of this:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">LD A,C   ; load $01 to A <br />AND $F0  ; keep only high bits ($01 -&gt; $00)<br />CP E     ; compare A ($00) with E ($01) -&gt; not same, test failed<br /></div><br /><br />I feel like there's something I'm missing, but I'm not sure what it is. I've been pouring over any documents I can find, but haven't found anything that would suggest different behavior from what I expect. Can anyone shed some light on this?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=7024">theotherjim</a> — Sun May 17, 2015 2:39 pm</p><hr />
]]></content>
</entry>
</feed>