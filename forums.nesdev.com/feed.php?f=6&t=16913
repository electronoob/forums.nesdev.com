<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=6&amp;t=16913" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2018-04-16T11:21:11-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=6&amp;t=16913</id>
<entry>
<author><name><![CDATA[FrankenGraphics]]></name></author>
<updated>2018-04-16T11:21:11-07:00</updated>
<published>2018-04-16T11:21:11-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=16913&amp;p=216952#p216952</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=16913&amp;p=216952#p216952"/>
<title type="html"><![CDATA[Re: Making MML editing more practical]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=16913&amp;p=216952#p216952"><![CDATA[
Famitracker does actually have a text import action under the file menu. I have never used it, but it is definitely conceivable that an mml text file that is somewhat strictly formatted to adhere to the trackers' limitations could be converted by a script to a famitracker-friendly text format and imported for aural feedback this way. <br /><br />There are a lot of more or less hidden tricks to famitracker which i think could be beneficial to someone who don't have much use of the visual feedback of the program. For instance, the control key plus left or right arrows will jump an exact pattern length, as specified by the song information as rows per pattern. But unfortunately in this scenario, most of the interface is still hand/eye coordination oriented via screen and mouse. Some features seem difficult to reach via keyboard. The main line of famitracker has stalled in development, unfortunately... there is a popular fork called 0cc famitracker though. You might want to check with the community there to see if they have any tips or if someone is willing to address the accessibility points you've made. If i recall correctly, 0cc famitracker has more key bindings than the vanilla version.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=7508">FrankenGraphics</a> — Mon Apr 16, 2018 11:21 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[raygrote]]></name></author>
<updated>2018-04-15T20:53:30-07:00</updated>
<published>2018-04-15T20:53:30-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=16913&amp;p=216931#p216931</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=16913&amp;p=216931#p216931"/>
<title type="html"><![CDATA[Re: Making MML editing more practical]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=16913&amp;p=216931#p216931"><![CDATA[
Hi all, sorry for bumping this topic. It's been a while since I was on this forum! But something sparked me to come back to the forums, I don't know what. Hopefully I won't disappear again. Sorry for the long post! I used to use MML quite a lot so this topic peaked my interest.<br /><br />I used PPMCK often but lately I have been drawn to <a href="https://www.smwcentral.net/?p=section&amp;a=details&amp;id=14717" class="postlink">AddmusicK</a>. The main reason for this is that I love primitively sampled sound and I also love the SPC700's qwirks. Don't get me wrong, I aspire to do awesome things with the Famicom and its expansions, but unfortunately I feel a lot is setting me back at the moment. Mainly, the fact that I can't really get to grips with trackers for multiple reasons, yet so many awesome things have been done with Famitracker that I really wish I could do.<br /><br />The main reason I can't get into trackers is that I am totally blind, which I feel puts me at a real disadvantage. To use a computer, I have to use a piece of software often called a screen reader (the one I use is <a href="Http://www.nvaccess.org" class="postlink">NVDA</a>). Trackers obviously can't convey the grid information in ways that screen readers can interpret. While it is certainly possible to get stuff down as a blind person given the extensive keyboard navigation in a lot of trackers, the tracking process itself is... difficult.<br /><br />Once you're in the tracking grid, you're pretty much on your own. Going through rows with keystrokes and aural feedback is pretty much all I can do, which is doable if I personally put everything down and I remember what I did, but that only takes me so far. I know that with enough determination I'm sure I could do a lot more than I believe I can now, but I sadly don't possess the patience required and it would still leave me dealing with almost impossible problems like quickly knowing what's already in a module. What is most tormenting is that I can set the instruments up the way I want. It's just getting the sequence down that's painful.<br /><br />In an already niche area, accessibility for needs like mine is a topic that's addressed rarely if at all. I've heard of very little discussion on this regarding Famitracker but I haven't dug too deeply either. If there's any interest that I'm not aware of, I would love to participate!<br /><br />With MML the concentration goes the other way. I'm in a  common text editor which screen readers feel right at home in, so I have to focus on making the sound I want, and then when I want to try something, I compile and play. My MML chops aren't scary by any means but I am getting better, and I know that at least some of the pain I feel at the arduous process is shared among MML enthusiasts. I really need to talk to more of them, because I could use a few tips for making the workflow easier.<br /><br />In MML I am still disadvantaged mainly because visual devices are less effective on me so I find it easier to get lost or that my MMLs are hard to read. While screen readers can announce formatting information, it is only for an informational purpose and doesn't serve a visual/spacial benefit. It's just more words to me so I turn the announcements off. I'm better off with just comments and line breaks.<br /><br />While I don't format my MMLs very well, I am fairly pedantic about using spaces to separate things I feel are important. Notes often have spaces between them as sort of event separators so I can use keystrokes like control+left and control+right in my text editor to move by word. I don't often put spaces in modifiers like brackets/braces, octave commands, sharps and flats, and some effect commands, because I don't consider them as separate events. Different text editors do use different word separators so it doesn't completely do what I want, but spacing stuff out the way I do helps me read in any case. I'm a very aural musical learner so it takes me a while to translate language to notes. I have a really hard time reading MML, even my own. I can write it considerably better than I can read it. So if I could remove the note names from my reading and hear the notes instead along with whatever effects I've put on them, I would probably die of gratitude lol. If not that, then the ability to instantly play my sequence from a certain point and seek and mute and solo channels would be just as useful to me.<br /><br />For complex projects, I've made midi files and used separate tracks for the sound chip's channels. FYI The sequencer I use is <a href="http://www.qws.andrelouis.com" class="postlink">QWS</a> which was made by a blind programmer and musician, and fortunately the developer and I seem to think similarly when it comes to midi editing so I feel at home in it. When I'm sequencing I spend time making painful decisions about channel allocation, voicings etc. with realtime feedback, which means I' can actually finish an arrangement. When doing the MML, it's just a matter of either converting the midi with tools and manually adjusting, or more often than not I'll just transcribe it by hand, and surprisingly that's easy. I guess it helps that I go out of my way to make the midi sound authentic so I pretty much just transcribe, check, and tweak until they are close enough. Only problem with that approach is I essentially have to write the thing down twice which is a turn-off for me, so I really don't do a lot of the big projects I want to take on.<br /><br />I saw a number of really good suggestions in this thread about how to make MML easier to work with. What would rock my world is if Famitracker had an alternative text editor mode. You'd set your instruments up the way you normally would, since that's screen reader friendly, but for the rest you could use the text editor. Of course doing instruments in the MML is certainly plausible too but I wouldn't need that as much. I know Famitracker already has txt export, but that's not very writeable.<br /><br />It would be awesome if good 'ol MML was used, where you can do whatever you want without caring about rows, but even if it were still a tracker, I could work well with that if notes and effects and the like were commands. Perhaps some way to convert a Famitracker text file or ftm module to and from an MML syntax would be the best shot at that?<br /><br />Again, sorry for the long post. IF you're still reading, then congratulations you've made it through lol<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4066">raygrote</a> — Sun Apr 15, 2018 8:53 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2018-01-13T23:03:12-07:00</updated>
<published>2018-01-13T23:03:12-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=16913&amp;p=211798#p211798</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=16913&amp;p=211798#p211798"/>
<title type="html"><![CDATA[Re: Making MML editing more practical]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=16913&amp;p=211798#p211798"><![CDATA[
<div class="quotetitle">gauauu wrote:</div><div class="quotecontent"><br /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">I've headed down that path with my <a href="https://github.com/pinobatch/pently/issues/27" class="postlink">roadmap for adding a richer playback GUI to Pently's NES export</a>. I've already got visualization and a rehearsal mark list over the past couple days, and next on my list are seeking to a rehearsal mark, pause and step as suggested by rainwarrior, and track muting. But what's the practical difference between an &quot;export/compile&quot; step (activated using the Run button in your text editor, or by a script watching file modification times) and the play button in a tracker?<br /></div><br />In theory it's possible to make the export/compile work, and it sounds like you might be on the right track, but the differences would be:<br /><br />- instant conversion and playback.  It should start playing immediately. If the conversion, launching, and starting of the player takes less than a quarter second, that would work</div><br />It'd mostly depend on how fast your computer can start the emulator. If it needs to start a framework that takes a while to start, such as .NET/Mono used by Mesen or Wine used by FCEUX (debugging version), it might not be that quick. But on a decade-old Core 2 Duo L7500, changing the score and rebuilding the Pently ROM (but not starting an emulator) takes <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">0m0.332s</tt> of real time. The time is dominated by <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">0m0.271s</tt> for the Python program that translates the score into assembly language for ca65; I haven't tried PyPy to see if that speeds it up.<br /><br /><div class="quotetitle">gauauu wrote:</div><div class="quotecontent"><br />- interactivity.  It sounds like you have some of this underway.  I want to be able to press pause on the player, change one line/note/whatever in the score, back the player up one measure, and replay from there.  Or play a single line over and over again while tweaking the source until I'm happy with it. Or if I have a channel set to solo or mute, I want it to stay that way after I make a change and press play again.  Those aren't insurmountable, but are all important for an interactive feel.<br /></div><br />The way it works now is that you place a <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">resume</tt> command in the song where you want it to start when the ROM starts, and place a <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">mute</tt> or <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">solo</tt> command anywhere in the score listing the tracks you want to not play (or only play). Then you can slow down or pause-and-step playback or change muting during playback, though I can't think of a good way for the ROM to propagate this back to the editor.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Sat Jan 13, 2018 11:03 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[rainwarrior]]></name></author>
<updated>2018-01-12T15:28:34-07:00</updated>
<published>2018-01-12T15:28:34-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=16913&amp;p=211714#p211714</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=16913&amp;p=211714#p211714"/>
<title type="html"><![CDATA[Re: Making MML editing more practical]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=16913&amp;p=211714#p211714"><![CDATA[
<div class="quotetitle">FrankenGraphics wrote:</div><div class="quotecontent"><br />mirroring = reuse of patterns?<br /></div><br />Mirroring as any ability to edit something in one place and have those changes appear in multiple places. For Famitracker the only built-in mirroring is for patterns through the order, yes.<br /><br />There are a lot more things that could be done, though, that could be very useful. Mirror partial patterns. Mirror across channels. Mirror and transpose. Mirror and instrument change. Mirror and volume change. Etc.<br /><br /><div class="quotetitle">tepples wrote:</div><div class="quotecontent"><br />How critical is it that the music sound exactly the same through the game-oriented driver as it does inside the tracker?<br /></div><br />How much is a pretty situational question. I frequently compose at a piano before I move the material to NES. It's a question of what things do you need to iterate on, and how often. The more things that you can't get immediate feedback on, the more time you spend in that iteration loop.<br /><br />Though, nothing being discussed is &quot;critical&quot;, IMO. PPMCK/MML works. So does Famitracker. One of them works a lot better for my needs, but I can manage with the other.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5165">rainwarrior</a> — Fri Jan 12, 2018 3:28 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[zzo38]]></name></author>
<updated>2018-01-12T13:59:18-07:00</updated>
<published>2018-01-12T13:59:18-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=16913&amp;p=211709#p211709</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=16913&amp;p=211709#p211709"/>
<title type="html"><![CDATA[Re: Making MML editing more practical]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=16913&amp;p=211709#p211709"><![CDATA[
I have used both tracker interfaces and MML; I find the MML much easier and more convenient to work with. (This is why I wrote AmigaMML.)<br /><br />Still, you could make up a multi-view editor, to get the benefits of all of them, especially if MIDI input is also possible.<br /><br />Also another file format is the Csound numeric score format, which is a somewhat tracker like format but more generalized. (I have found it more useful to write a MML compiler to target it, although some people do use the Csoud numeric score format directly. There are also various GUIs for Csound.)<br /><br />Batch editing operations would still be possible even with tracker based interfaces; one way could be to use SQL statements. You can enter the SQL commands to read or alter the pattern data, to do such thing as transpose, copy and transpose, stretch, etc, and save the ones you use into a user menu so that you need not type them in every time.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4734">zzo38</a> — Fri Jan 12, 2018 1:59 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[FrankenGraphics]]></name></author>
<updated>2018-01-12T13:52:32-07:00</updated>
<published>2018-01-12T13:52:32-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=16913&amp;p=211707#p211707</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=16913&amp;p=211707#p211707"/>
<title type="html"><![CDATA[Re: Making MML editing more practical]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=16913&amp;p=211707#p211707"><![CDATA[
Yeah, to me MML support within a FamiTracker branch would be of no use except for porting work already as good as done from Famitracker to another (MML based) driver (not bad at all in itself, definitely useful). But you'd still lose a lot of the benefits with using a MML based driver unless you plan to hand edit those post-port. <br /><br />mirroring = reuse of patterns? <br /><br />this is just a personal preference, but i wouldn't want to write computer music without pattern sequencing, be it basic or advanced. I'd prioritize that over:<br />-score modifying interaction during playback.<br />-hearing notes as i play/write them (can be substituted with a physical instrument on the side).<br /><br />I think interface is more important than differences in file format between pently and famitracker. But MML holds the promise of portability - it could be a relative breeze to move a soundtrack between Pently, DevSound and Rahsennors' project once you have instrument definitions set up, and there'd be strength in numbers.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=7508">FrankenGraphics</a> — Fri Jan 12, 2018 1:52 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[rainwarrior]]></name></author>
<updated>2018-01-12T12:46:21-07:00</updated>
<published>2018-01-12T12:46:21-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=16913&amp;p=211701#p211701</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=16913&amp;p=211701#p211701"/>
<title type="html"><![CDATA[Re: Making MML editing more practical]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=16913&amp;p=211701#p211701"><![CDATA[
<div class="quotetitle">FrankenGraphics wrote:</div><div class="quotecontent"><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I'm not talking about any hypothetical MML editor, I'm talking about what we have today. The value of Famitracker vs. that is enormous.<br /></div><br />I understand this sentiment; what we have is what we have. There is a precursor you might or might've not experienced? 3MLE. <br />It's a (for its niche purposes) full featured, interactive-during-playback MML editor featuring a text editor, piano roll editor, and a tracker-like param viewer on the side. It's just not suitable for NES composition...</div><br />Well I have seen graphical editors that use an MML sort of format underneath, but not specifically for PPMCK/MML, and I'm not familiar with 3MLE either but that's all aside what I was talking about.<br /><br />Like, in a trivial sense you could adapt the current Famitracker to save PPMCK/MML instead of FTM, but that doesn't create any new editing capabilities for Famitracker. Similar story with MML editors: the ones I've seen that can load &quot;handmade&quot; files are really hamstrung in terms of how they can present information to you for editing just because the user could have organized it any way they want. (This trivial Famitracker MML would only be able to load MML created in Famitracker, or is otherwise parseable as the FT subset of MML features, not arbitrary hand-edited MML... this gets pretty tricky IMO.)<br /><br />So in this context, I was talking about being able to use the mirroring abilities of MML effectively. A text editor gives you full access, but no other support. A hypothetical Famitracker with MML save gives you no access to that feature, but all the other support of Famitracker.<br /><br />The bottom line is, if you want mirroring in an editing tool, that's a separate feature it has to have written into it. That's got little to do with the format: if FT grew such a feature the FTM format would grow along with it. So... I don't think the format itself is the problem here.<br /><br /><br />My point was that mirroring is a very nice composing feature, but not essential, and its value for compression is only a side effect. Valuable only if you've got nothing else, because I have a belief that can be done much better automatically (and that doing so is not a terribly difficult engineering problem).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5165">rainwarrior</a> — Fri Jan 12, 2018 12:46 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[FrankenGraphics]]></name></author>
<updated>2018-01-12T07:00:57-07:00</updated>
<published>2018-01-12T07:00:57-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=16913&amp;p=211681#p211681</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=16913&amp;p=211681#p211681"/>
<title type="html"><![CDATA[Re: Making MML editing more practical]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=16913&amp;p=211681#p211681"><![CDATA[
<div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />I'm not talking about any hypothetical MML editor, I'm talking about what we have today. The value of Famitracker vs. that is enormous.<br /></div><br /><br />I understand this sentiment; what we have is what we have. There is a precursor you might or might've not experienced? 3MLE. <br /><br />It's a (for its niche purposes) full featured, interactive-during-playback MML editor featuring a text editor, piano roll editor, and a tracker-like param viewer on the side. It's just not suitable for NES composition as <br /><br />1)its interface and output is tied to a soundfont-like interpreter<br />2)it adopts the standard midi-editor-like linear score, rather than that of a pattern sequencer.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=7508">FrankenGraphics</a> — Fri Jan 12, 2018 7:00 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2018-01-11T22:09:01-07:00</updated>
<published>2018-01-11T22:09:01-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=16913&amp;p=211670#p211670</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=16913&amp;p=211670#p211670"/>
<title type="html"><![CDATA[Re: Making MML editing more practical]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=16913&amp;p=211670#p211670"><![CDATA[
<div class="quotetitle">rainwarrior wrote:</div><div class="quotecontent"><br />I presume you've already submitted a report to 0CC devs about [things missing from export]?<br /></div><br /><a href="http://hertzdevil.info/forum/index.php?topic=43.0" class="postlink">Done</a>.<br /><br /><div class="quotetitle">rainwarrior wrote:</div><div class="quotecontent"><br />I don't think there is anyone besides you in all of NESDevdom that would currently be holding back a rhythm game because of whatever patent you are referring to. <img src="http://forums.nesdev.com/images/smilies/icon_razz.gif" alt=":P" title="Razz" /><br /></div><br />True, but probably only because the NES scene is small enough that only one person <em>wants</em> to develop a Power Pad-controlled rhythm game. The patents in suit in <em>Konami v. Roxor</em> are why <a href="https://fedoraproject.org/wiki/SIGs/Games#List_of_games_we_will_NOT_package" class="postlink">StepMania is not in Fedora</a>.<br /><br />But time signature/row highlight issues aside, and assuming the advantages of the tracker model:<br /><br />How critical is it that the music sound exactly the same through the game-oriented driver as it does inside the tracker? If, for example, the drum representation doesn't match that of FT, would it be acceptable to include surrogate drum samples in FT's DPCM channel along with commands in the describing how the converter should render them as PSG drums? You'd still be able to tell what the drums are supposed to be during composition, even though you'd have to play them after conversion in order to fine-tune their mixing.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Thu Jan 11, 2018 10:09 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[rainwarrior]]></name></author>
<updated>2018-01-11T13:27:37-07:00</updated>
<published>2018-01-11T13:27:37-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=16913&amp;p=211653#p211653</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=16913&amp;p=211653#p211653"/>
<title type="html"><![CDATA[Re: Making MML editing more practical]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=16913&amp;p=211653#p211653"><![CDATA[
<div class="quotetitle">tepples wrote:</div><div class="quotecontent"><br />This means the converter would not know what to do with vibrato depths and portamento rates unless the user passes an explicit command-line option stating whether the module was authored with linear pitch on or off.<br /></div><br />Why is that a problem? I would kind of expect the exporter to have a bunch of options like that. (OK maybe it would be slightly nice to have but it seems super trivial to work around? I presume you've already submitted a report to 0CC devs about it?)<br /><br /><div class="quotetitle">tepples wrote:</div><div class="quotecontent"><br />In mid-2019, several key U.S. patents related to rhythm games are set to expire.<br /></div><br />LOL. I don't think there is anyone besides you in all of NESDevdom that would currently be holding back a rhythm game because of whatever patent you are referring to. <img src="http://forums.nesdev.com/images/smilies/icon_razz.gif" alt=":P" title="Razz" /><br /><br /><div class="quotetitle">tepples wrote:</div><div class="quotecontent"><br />A rhythm game would need to know how many rows make up a &quot;beat&quot; of musical time in order to know how fast to move the arrows.<br /></div><br />I think a rhythm game has a lot more specialized needs than that. TBH if you're making a rhythm game and you don't have some custom solution going on for the music you're probably doing it wrong?<br /><br /><div class="quotetitle">tepples wrote:</div><div class="quotecontent"><br />Composer to tools guy: &quot;I thought I was finished working on this piece, but I was mistaken.&quot;<br /></div><br />Well, it's all about magnitudes. Like I said, in my case it took <em>minutes</em> to review an entire game soundtrack. If you think it's a significant problem then go ahead and solve it.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5165">rainwarrior</a> — Thu Jan 11, 2018 1:27 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2018-01-11T13:14:21-07:00</updated>
<published>2018-01-11T13:14:21-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=16913&amp;p=211651#p211651</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=16913&amp;p=211651#p211651"/>
<title type="html"><![CDATA[Re: Making MML editing more practical]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=16913&amp;p=211651#p211651"><![CDATA[
<div class="quotetitle">gauauu wrote:</div><div class="quotecontent"><br />I want to be able to press pause on the player, change one line/note/whatever in the score, back the player up one measure, and replay from there.<br /></div><br />The pattern would be to set a temporary rehearsal mark just before what you're working on and set a project-wide option to have the player ROM start at that mark.<br /><br /><div class="quotetitle">rainwarrior wrote:</div><div class="quotecontent"><br /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">how would I &quot;export row highlight and 0CC-FamiTracker linear pitch setting&quot;?<br /></div><br />I thought linear pitch was just a global option you can choose? I don't really understand how this is an export problem? (Supporting it at all is a problem, but that doesn't seem to be your question?)</div><br />NSD.Lib and Pently always operate in linear pitch mode. But 0CC-FamiTracker's text export doesn't include whether a module was authored in linear pitch mode. This means the converter would not know what to do with vibrato depths and portamento rates unless the user passes an explicit command-line option stating whether the module was authored with linear pitch on or off.<br /><br /><div class="quotetitle">rainwarrior wrote:</div><div class="quotecontent"><br />Does &quot;row highlight&quot; mean something I'm unaware of? I assumed this meant the visual appearance of highlights on every Nth row while editing in the tracker. Why would it be exported, isn't it only visual?<br /></div><br />In mid-2019, several key U.S. patents related to rhythm games are set to expire. A rhythm game would need to know how many rows make up a &quot;beat&quot; of musical time in order to know how fast to move the arrows. &quot;<a href="https://remywiki.com/BURNING_HEAT!_(3_Option_MIX)" class="postlink">Burning Heat</a>&quot; and &quot;<a href="https://remywiki.com/Butterfly" class="postlink">Butterfly</a>&quot; wouldn't use the same rows-per-beat setting, and &quot;<a href="https://en.wikipedia.org/wiki/Music_of_In_the_Groove" class="postlink">July</a>&quot; switches mid-song.<br /><br /><div class="quotetitle">rainwarrior wrote:</div><div class="quotecontent"><br />The optimization problem wasn't that big a deal for me, though. The main reason is just that you don't need to &quot;hand-reoptimize&quot; all the time, only once you're finished working on the piece. It's a finishing pass, not ongoing labour.<br /></div><br />Composer to tools guy: &quot;I thought I was finished working on this piece, but I was mistaken.&quot; It may be hard to estimate the different cost of propagating asset changes in different subsystems: &quot;Your build process automatically recompresses level backgrounds when changed, so why not music?&quot;<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Thu Jan 11, 2018 1:14 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[rainwarrior]]></name></author>
<updated>2018-01-11T13:05:39-07:00</updated>
<published>2018-01-11T13:05:39-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=16913&amp;p=211650#p211650</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=16913&amp;p=211650#p211650"/>
<title type="html"><![CDATA[Re: Making MML editing more practical]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=16913&amp;p=211650#p211650"><![CDATA[
<div class="quotetitle">FrankenGraphics wrote:</div><div class="quotecontent"><br />Wouldn't this depend at least a bit what you'd be abandoning Famitracker <em>for</em>? I mean, MML in itself has no interface other than the constraints of the format, so it's hard to compare until there is one. Or do you mean that the tracker model itself is irreplacable for you?<br /></div><br />I'm not talking about any hypothetical MML editor, I'm talking about what we have today. The value of Famitracker vs. that is enormous.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5165">rainwarrior</a> — Thu Jan 11, 2018 1:05 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[FrankenGraphics]]></name></author>
<updated>2018-01-11T12:59:53-07:00</updated>
<published>2018-01-11T12:59:53-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=16913&amp;p=211649#p211649</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=16913&amp;p=211649#p211649"/>
<title type="html"><![CDATA[Re: Making MML editing more practical]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=16913&amp;p=211649#p211649"><![CDATA[
<div class="quotetitle">rainwarrior wrote:</div><div class="quotecontent"><br />The ideal solution for the me would be better mirroring within Famitracker, not abandoning Famitracker for MML.<br /></div><br /><br />Wouldn't this depend at least a bit what you'd be abandoning Famitracker <em>for</em>? I mean, MML in itself has no interface other than the constraints of the format, so it's hard to compare until there is one. Or do you mean that the tracker model itself is irreplacable for you?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=7508">FrankenGraphics</a> — Thu Jan 11, 2018 12:59 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[rainwarrior]]></name></author>
<updated>2018-01-11T12:37:59-07:00</updated>
<published>2018-01-11T12:37:59-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=16913&amp;p=211648#p211648</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=16913&amp;p=211648#p211648"/>
<title type="html"><![CDATA[Re: Making MML editing more practical]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=16913&amp;p=211648#p211648"><![CDATA[
<div class="quotetitle">tepples wrote:</div><div class="quotecontent"><br />But I fear that some of these, such as patterns with effective loops of different lengths, might not be exactly trivial for an exporter to detect automatically. I guess I ought to sit down and define the loop recognition problem more precisely and present the definition in a new topic, in order to see if it's isomorphic to some problem known to be either tractable or NP-complete.<br /></div><br />Well, detection of loops and repeated substrings within a single pattern is actually pretty easy, and patterns are &quot;short&quot; in the scheme of things. NP isn't a necessarily a problem when you're dealing with a small enough set. Detecting shared pattern data globally is harder but there's a lot of pretty useful detections you can do without breaking your back. We only need &quot;good enough&quot; here, not &quot;optimal&quot;.<br /><br />Stepping back from this, though, the whole point of the complex repeat features is <em>compression</em>, right? The goal should be &quot;how do I make the smallest output data&quot; before it should be &quot;how do I let the user play tetris with their own data&quot;. If finding the optimal way to loop something really is a hard computational problem, the user will also have a high probability of failing to solve it well, and also likely it will take a human more time and effort, which is also a waste.<br /><br />From another angle: generic compression algorithms manage to do a pretty good job of things like this already, so I am certain there are practical methods already available. <a href="http://4klang.untergrund.net/" class="postlink">4klang</a> does a pretty good job of compressing music data, and might have useful techniques.<br /><br /><div class="quotetitle">tepples wrote:</div><div class="quotecontent"><br />how would I &quot;export row highlight and 0CC-FamiTracker linear pitch setting&quot;?<br /></div><br />I thought linear pitch was just a global option you can choose? I don't really understand how this is an export problem? (Supporting it at all is a problem, but that doesn't seem to be your question?)<br /><br />Does &quot;row highlight&quot; mean something I'm unaware of? I assumed this meant the visual appearance of highlights on every Nth row while editing in the tracker. Why would it be exported, isn't it only visual?<br /><br />(I don't use 0CC so the terms might be used to mean something I don't expect.)<br /><br /><div class="quotetitle">tepples wrote:</div><div class="quotecontent"><br /><div class="quotetitle">rainwarrior wrote:</div><div class="quotecontent">Just because Famitracker doesn't have a variety of &quot;mirror this but with ~~~ transformation applied&quot; modes as a built in feature doesn't mean you can't apply it after the fact.<br /></div><br />In my experience, composers want to make changes to a piece even after I've hand-optimized the converter's output, and it would be labor-inefficient for the tools people to have to hand-reoptimize the data after each tweak.</div><br />Yes, having mirror functions in the tool would be great and more convenient. The only mirror Famitracker has currently is just through the order being able to reuse a pattern on the same channel.<br /><br />The optimization problem wasn't that big a deal for me, though. The main reason is just that you don't need to &quot;hand-reoptimize&quot; all the time, only once you're finished working on the piece. It's a finishing pass, not ongoing labour. The other way I mitigated it was having my my exporter output some diagnostic statistics to a text file that I can use to understand what duplicates were found, etc. and of course the total size is a very useful metric. During that finishing pass I could go over the tune and spot my copy paste failures (which weren't many, TBH). It was a very small problem to solve and took only minutes to go over the whole soundtrack.<br /><br /><br />Actually, this is getting a little bit away from what I think is the actual advantage of complex mirroring/repeat functionality (which MML has a distinct advantage for). Mirroring is just a useful composing tool; you'll find it in notation packages like <a href="https://www.finalemusic.com/" class="postlink">Finale</a> too, where there's no export size concern at all. I think it's <em>primary</em> function for the user should be for that.<br /><br />Making smaller output is a good side effect of mirroring, but the <em>exporter</em> can and should find mirroring whether or not the user remembered or knew to specify it (or did a suboptimal job). The user does <em>not</em> have to be the compressor. Giving the user power to compress something themselves in the absence of an automated one is worthwhile, but it's certainly not the best use of their time if it can be easily automated.<br /><br /><br />And finally, even if MML has good mirroring tools, like I said before I wouldn't trade the tracker workflow for it. Too much is lost for that gain. The ideal solution for the me would be better mirroring <em>within</em> Famitracker, not abandoning Famitracker for MML.<br /><br />...but overall it's something I can live without; the repercussions of not having it are only a minor inconvenience. If it was a bigger problem I'd have modified Famitracker myself.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5165">rainwarrior</a> — Thu Jan 11, 2018 12:37 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[gauauu]]></name></author>
<updated>2018-01-11T12:28:00-07:00</updated>
<published>2018-01-11T12:28:00-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=16913&amp;p=211647#p211647</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=16913&amp;p=211647#p211647"/>
<title type="html"><![CDATA[Re: Making MML editing more practical]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=16913&amp;p=211647#p211647"><![CDATA[
The other bits also apply to the interactivity, and are a bit harder, I think.  I'd love to have some sort of UI linkage between the editor and the player. Like if I highlight an area of the editor, I'd like an option to only play that bit, or jump to it.  And if I pause the player, I'd like some way to jump to the part of the source that's current in the player.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=7375">gauauu</a> — Thu Jan 11, 2018 12:28 pm</p><hr />
]]></content>
</entry>
</feed>