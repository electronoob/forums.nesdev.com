<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Accessing data or &quot;strings&quot; in data segment</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Accessing data or &quot;strings&quot; in data segment</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=10&amp;t=9839">http://forums.nesdev.com/viewtopic.php?f=10&amp;t=9839</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>4</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dafydd</b> [ Sat Feb 23, 2013 4:35 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Accessing data or &quot;strings&quot; in data segment</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I want to make a routine that reads data from a &quot;string&quot; or &quot;array&quot; in the data segment and prints text on the screen (<em>very</em> advanced stuff, I know).<br /><br />I think I can do<br /><br />.segment &quot;DATA&quot;<br /> .word $11, $0E, $15, $15, $18<br /><br />where the numbers are the tile indexes for &quot;hello&quot;, set $2006 to $21CD or something and then load these values into a register and store them in $2007 one after the other. But<br /><br />1. How do I access the string? I don't know the address. Do I just put a label up like @hellostring: .word $11, $0E etc, or what?<br />2. Is there an elegant way of making the routine return after it has printed the string without knowing its length beforehand? I was thinking of ending the string with a zero or $FF or something (kind of like in C) and then return upon detecting 0 (or whichever value represents the end of a string). Is there a better way?<br />3. I've seen code examples where people write .word &quot;Hello&quot;, but no explanation as to how these letters are translated into tile indexes. The compiler doesn't know where in my tileset my characters are located by itself. Is there a way I could tell it? Or do people use their own scripts to replace strings with sequences of hex numbers before compiling?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Sat Feb 23, 2013 4:59 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Accessing data or &quot;strings&quot; in data segment</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Dafydd wrote:</div><div class="quotecontent">1. How do I access the string? I don't know the address. Do I just put a label up like @hellostring: .word $11, $0E etc, or what?</div><br />Yes, use a label.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">2. Is there an elegant way of making the routine return after it has printed the string without knowing its length beforehand? I was thinking of ending the string with a zero or $FF or something (kind of like in C) and then return upon detecting 0 (or whichever value represents the end of a string). Is there a better way?</div><br />You have to store the length one way or another. You can use a terminator character like you said, or store the string length in the beginning of the string, or some other method.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">3. I've seen code examples where people write .word &quot;Hello&quot;, but no explanation as to how these letters are translated into tile indexes. The compiler doesn't know where in my tileset my characters are located by itself. Is there a way I could tell it? Or do people use their own scripts to replace strings with sequences of hex numbers before compiling?</div><br />It depends on the assembler. If you use ca65, you can use .charmap to define how characters should be translated.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Sat Feb 23, 2013 5:11 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Accessing data or &quot;strings&quot; in data segment</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />In ASM6 you can &quot;shift&quot; the character codes from their normal ASCII codes like this:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">.db &quot;ABCDEF&quot;-65</div><br />This string will appear in the ROM as $00, $01, $02, $03, $04, $05.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dafydd</b> [ Sat Feb 23, 2013 5:16 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Accessing data or &quot;strings&quot; in data segment</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Alright. Thanks!<br /><br />One more question - is there a convention for label names, like, which labels should begin with @ and so on?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Sat Feb 23, 2013 5:28 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Accessing data or &quot;strings&quot; in data segment</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Dafydd wrote:</div><div class="quotecontent">One more question - is there a convention for label names, like, which labels should begin with @ and so on?</div><br />It's not just a convention, in ca65 (and many other assemblers) labels beginning with @ are treated differently from other labels. Google &quot;cheap local labels ca65&quot; for an explanation.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dafydd</b> [ Sat Feb 23, 2013 5:36 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Accessing data or &quot;strings&quot; in data segment</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Good thing I asked, then, hehe. Thanks for the pointer.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Movax12</b> [ Sat Feb 23, 2013 6:50 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Accessing data or &quot;strings&quot; in data segment</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Super Mario Bros. sets up string data as such:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">TopStatusBarLine: .byte $20, $43, $05, $16, $0a, $1b, $12, $18 ; &quot;MARIO&quot;<br /></div><br />This includes the high and low nametable address, followed by the string length and then the string itself (tile numbers).<br /><br />If you adjust the character mapping it becomes:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">TopStatusBarLine: .byte $20, $43, $05, &quot;MARIO&quot;<br /></div><br />And you could add a macro to encode it for you with x, y coords of the string's destination.<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">vram_string 3, 2, &quot;MARIO&quot;<br /></div><br /><br />Macro:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">.macro vram_string xpos, ypos, str<br />&nbsp; &nbsp; .byte &gt;($2000 + (ypos * $20 + xpos)), &lt;($2000 + (ypos * $20 + xpos)), .strlen(str), str<br />.endmacro<br /></div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dafydd</b> [ Sat Feb 23, 2013 7:09 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Accessing data or &quot;strings&quot; in data segment</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Very nice.<br /><br />For now, I tried this:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">.segment &quot;DATA&quot;<br />mystring: .byte $11, $0E, $15, $15, $18, 0<br /><br />.segment &quot;CODE&quot;<br /><br />...<br /><br />&nbsp; &nbsp;lda $2002<br />&nbsp; &nbsp;lda #$21<br />&nbsp; &nbsp;sta $2006<br />&nbsp; &nbsp;lda #$AC<br />&nbsp; &nbsp;sta $2006<br />&nbsp; &nbsp;ldx #$00<br />&nbsp; &nbsp;<br />@printstring:<br />&nbsp; &nbsp;lda mystring,x<br />&nbsp; &nbsp;sta $2007<br />&nbsp; &nbsp;inx<br />&nbsp; &nbsp;bne @printstring</div><br /><br />But instead of getting the tiles listed in mystring I get other tiles (not sure which one, my tileset is mostly blank, but 256 in a row before the loop quits). What am I doing wrong? How do I properly load stuff from mystring into the accumulator?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sat Feb 23, 2013 7:14 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Accessing data or &quot;strings&quot; in data segment</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />&quot;inx bne&quot; will increase X until it hits 256 and wraps to 0. You need to compare the byte to the terminator after the LDA. And if you're using digits 0-9 in tiles $00-$09, using 0 as your terminator means you can't have a 0 in your text:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">WHAT DOES THE SCOUTER SAY<br />ABOUT HIS POWER LEVEL?<br /><br />IT'S OVER 9<br /></div><br />That's why I usually put the font at tiles $20-$5F.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dafydd</b> [ Sat Feb 23, 2013 7:21 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Accessing data or &quot;strings&quot; in data segment</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">&quot;inx bne&quot; will increase X until it hits 256 and wraps to 0. You need to compare the byte to the terminator after the LDA.</div><br />I thought bne compared A to 0, not whichever register you last modified. Which is it? <br />EDIT: I just read up on the Z flag. Didn't know that thing even existed. This will certainly make things easier...<br /><br />I don't intend to keep using 0 as my terminator, btw, but it was easier to test this way.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sat Feb 23, 2013 7:28 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Accessing data or &quot;strings&quot; in data segment</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Dafydd wrote:</div><div class="quotecontent">I thought bne compared A to 0, not whichever register you last modified. Which is it?</div><br />BNE branches if the Z flag is off. Pretty much any instruction that calculates a value (almost anything other than a store or jump) will update the N and Z flags. Bit 7 goes into N (the minus flag) and the NOR of all bits goes into Z (the equal flag). This means if the calculated value is 0, the Z flag turns on; otherwise, it turns off. The INX instruction calculates X := X + 1 and updates N/Z based on the result.<br /><br />Try this, which will use any value with bit 7 turned on (that is, $80-$FF) as your terminator:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">@printstring:<br />&nbsp; &nbsp;lda mystring,x<br />&nbsp; &nbsp;bmi @printdone<br />&nbsp; &nbsp;sta $2007<br />&nbsp; &nbsp;inx<br />&nbsp; &nbsp;bne @printstring<br />@printdone:<br /></div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Sat Feb 23, 2013 7:29 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Accessing data or &quot;strings&quot; in data segment</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Dafydd wrote:</div><div class="quotecontent">I thought bne compared A to 0</div><br />BNE doesn't compare anything, it just branches (or doesn't) based on the status of the Z flag. CMP is one of the instructions that affects the Z flag, but many, many other instructions do too.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">not whichever register you last modified. Which is it?</div><br />CMP changes the Z flag. So does CPX, CPY, LDA, LDX, LDY, ADC, SBC... the list goes on.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dafydd</b> [ Sat Feb 23, 2013 7:32 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Accessing data or &quot;strings&quot; in data segment</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Haha, you beat me to it. As edited above, I just found out about the Z flag - I'll read up on it and the other flags as well (the opcode ref chart I was using wasn't as informative as it should have been). Thanks for the help.<br /><br />It'd be pretty cool to have an editor where you have a status window or something that briefs you on the opcode your cursor is currently at. Maybe one already exists?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Kasumi</b> [ Sat Feb 23, 2013 7:38 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Accessing data or &quot;strings&quot; in data segment</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><a href="http://www.obelisk.demon.co.uk/6502/reference.html" class="postlink">Here is a guide</a> that lets you click an opcode to get quick info on it.<br /><br /><a href="http://www.exifpro.com/utils.html" class="postlink">The 6502 Macroassembler</a> is a tool that will give you information about an opcode as you type it. It will also let you write and run programs step by step and let you see how the flags are affects.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dafydd</b> [ Sat Feb 23, 2013 7:42 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Accessing data or &quot;strings&quot; in data segment</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Cool! The simulator does exactly what I was asking for.<br /><br />I tried tepples' code, changing the terminator in my string to $FF, but I would keep getting 256 of that wrong tile. I then changed the routine into<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">@printstring:<br />&nbsp; &nbsp;lda mystring,x<br />&nbsp; &nbsp;bmi @printdone<br />&nbsp; &nbsp;lda #$0E<br />&nbsp; &nbsp;sta $2007<br />&nbsp; &nbsp;inx<br />&nbsp; &nbsp;bne @printstring</div><br />which would print 256 of the tile $0E as expected. It seems I'm still not reading values from mystring into A properly, or I would only have printed out 5 of $0E before branching into @printdone.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>4</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>