<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - So, I'm getting into NESdev..</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">So, I'm getting into NESdev..</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=10&amp;t=6350">http://forums.nesdev.com/viewtopic.php?f=10&amp;t=6350</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>2</strong> of <strong>2</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Thu May 06, 2010 8:49 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Gradualore wrote:</div><div class="quotecontent">I guess what you're saying is that it would be better to have several arrays, one for each "member" of the struct, and avoid having to add the size of your struct to your index register in every iteration of a loop?</div>
<br />Yeah, that's exactly it. Instead of worrying about the size of the structure you can just INX or INY to access the next item.
<br />
<br />You still have to use pointers if you need dynamic access to the different members though. But even then this way is better because you can access up to 256 items before having to mess with the pointers again. The downside is that you'd need a pointer for each member.
<br />
<br />It's not always that structures of arrays are better, there are times when the other way is simpler. I don't think quicker though, just simpler.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Thu May 06, 2010 8:59 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />never-obsolete, I handle my objects exactly like that.
<br />
<br /><div class="quotetitle">never-obsolete wrote:</div><div class="quotecontent">I do agree that making these types of "mistakes" was helpful because I understood the <strong>why</strong> behind it.</div>
<br />I strongly believe that in order to be a good coder a person has to go through all of it, they can't take shortcuts, or else they are being trained, not taught, and will not have full understanding of what they are doing.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>koitsu</b> [ Fri May 07, 2010 10:06 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent"><div class="quotetitle">Gradualore wrote:</div><div class="quotecontent">Could you or tokumaru explain the difference between arrays of structures and structures of arrays?</div><br />You probably know the difference, but not these names.<br /><br />Array of structures:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">Metatiles:<br />&nbsp; &nbsp;.db $00, $01, $02, $03<br />&nbsp; &nbsp;.db $04, $05, $06, $07<br />&nbsp; &nbsp;.db $08, $09, $0a, $0b<br />&nbsp; &nbsp;.db $0c, $0d, $0e, $0f<br />&nbsp; &nbsp;.db $10, $11, $12, $13<br />&nbsp; &nbsp;.db $14, $15, $16, $17<br />&nbsp; &nbsp;&#40;...&#41;</div><br /><br />Structure of arrays:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">Metatiles:<br />&nbsp; &nbsp;.db $00, $04, $08, $0c, $10, $14, &#40;...&#41;<br />&nbsp; &nbsp;.db $01, $05, $09, $0d, $11, $15, &#40;...&#41;<br />&nbsp; &nbsp;.db $02, $06, $0a, $0e, $12, $16, &#40;...&#41;<br />&nbsp; &nbsp;.db $03, $07, $0b, $0f, $13, $17, &#40;...&#41;</div></div>
<br />
<br />No offence intended, but these terms you've created don't make any sense.  Terms that make sense would be something like "row-based data set" vs. "column-based data set".  You can replace the word "data set" with "structure" if you want, but it'll probably confuse people.  Why? Because there's no explanation of what the "data set" *or* "structure" means -- if there's a length associated with them (e.g. "16 bytes of pointers"), what each byte or word represents, what each row represents, etc...  Comments are incredibly important here.
<br />
<br />Worse, when C programmers see the term "array of structures", they're going to think "struct foo blah[4]".  When they see the term "structure of arrays", they're going to think "struct foobar { char *arrA[16]; char *arrB[16]; };" (though technically this is a "structure of array of pointers").
<br />
<br />And when perl programmers see the term "array of structures" or "structure of arrays", they're probably going to think of an "array of X" (where X is either scalars, arrays, or hashes).
<br />
<br />:-)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Fri May 07, 2010 10:25 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">koitsu wrote:</div><div class="quotecontent">No offence intended, but these terms you've created don't make any sense.  Terms that make sense would be something like "row-based data set" vs. "column-based data set".</div><br />I think your opinion is purely based on the simple example I gave, because your proposed terms would hardly suit all possibilities. If you consider that structures can be more complex than several single-byte fields, or that due to memory limitations these tables could be scattered all around RAM and ROM, you'll see that not always the data will look like neatly organized rows and columns.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">...when C programmers see...</div><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">...when perl programmers see...</div>
<br />
<br />But this is assembly, and if C and pearl programmers already disagree between themselves there will hardly be universal terms understood by everyone. I didn't come up with these terms, but I think they are pretty descriptive (the first time I heard them I knew exactly what they meant).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Fri May 07, 2010 11:54 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">koitsu wrote:</div><div class="quotecontent">Terms that make sense would be something like "row-based data set" vs. "column-based data set".</div><br />In most languages, "column-oriented" connotes 2-dimensional arrays with two integer indices that represent two axes along which measurements are taken, as seen in <a href="http://en.wikipedia.org/wiki/Row-major_order#Column-major_order" class="postlink">Fortran's column-major order</a>. But <a href="http://en.wikipedia.org/wiki/Column-oriented_DBMS" class="postlink">column-oriented</a> might be more familiar to people with experience in, say, SQL, where a record is called a "row" and a field is called a "column". In this case, the rows represent different things and the columns represent different aspects of the things.<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">When they see the term "structure of arrays", they're going to think "struct foobar { char *arrA[16]; char *arrB[16]; };"</div>
<br />struct foobar { int x[16]; int y[16]; int dx[16]; int dy[16]; }; is how a column-oriented or SoA store of coordinates might look.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>UncleSporky</b> [ Sat May 08, 2010 5:41 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I have to agree with koitsu, it makes a lot more sense to think of it as being organized in columns vs. rows, not structure vs. array.
<br />
<br />I also don't see much difference either way; if you've got incrementing x and y variables for stepping through it, one way you'll increment x and the other you'll use y.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>2</strong> of <strong>2</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>