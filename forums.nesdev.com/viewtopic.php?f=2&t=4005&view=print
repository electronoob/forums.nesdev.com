<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Polygon filling..</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Polygon filling..</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=4005">http://forums.nesdev.com/viewtopic.php?f=2&amp;t=4005</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>8</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>doynax</b> [ Fri Mar 28, 2008 7:19 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Polygon filling..</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />For the last few days I've been toying with some code for drawing polygons in order to create an eventual 3d demo. Anyway things are beginning to get hairy (being a novice to both NES hacking and 3d graphics doesn't help either) so I guess I wanted to ask whether it's already been done and I'm wasting my time, or if it's worth putting in the effort. There's Elite of course and that tank demo (anyone got a live link for the code?) which are most of the way there already, but that's about all I've found. Then again how do you come up with search terms for this kind of thing..
<br />
<br />Also do you guys have any thoughts on how to increase the vertical blanking time? Unfortunately I kind of need both CHR-RAM (duh) and SRAM which according to the wiki seems to limit me to MMC1, among the popular configurations anyway, which lacks raster interrupts. An ugly hack would be to cut only the top part of the screen and time the transfer code as to avoid crossing into the visible section. On the bright side the DMC channel seems to be a fairly high precision interrupt source, would this be a feasible alternative to MMC3 IRQs?
<br />
<br />Oh and are the NES emulators really as bad as they seem when it comes to low-level CPU emulation details or have I just had bad luck so far? E.g. Nintendulator doesn't support the SBX instruction, NesterJ doesn't implement RMW dummy writes, FCEUXD SP doesn't update the memory value after ISC/DCP, etc. Nestopia is the only emulator left which still runs my damned code :(

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Fri Mar 28, 2008 7:41 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Yeah, very few 3D things are available on the NES right now so you can innovate a lot in this departement.
<br />Most games does their 3D with raster tricks (racing games).
<br />
<br />The only "real-3D" engine I know is for Elite and that Tank Demo, you can find sources on the main nesdev page (nesdev.com), but they're crappy doccumented. I remember another demo that did really basic stuff at decent speed because it uses only nametable tricks (no CHRRAM) so that helps a lot. You can use MMC3, MMC5, FME7, .... mappers who can produce accurate interupts (altrough MMC3 is a bit crappy), and all of them "officially" have SRAM. MMC1 hasn't external interrupts, but you can do a lot of things with timed code, and even more with DMC interrupts + sprite zero hit combo.
<br />Same goes for discrete logic mappers who doesn't officially support SRAM, but you can emulate them with SRAM and even add SRAM on real hardware, only adding a simple 74HC08 and gate.
<br />
<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Oh and are the NES emulators really as bad as they seem when it comes to low-level CPU emulation details or have I just had bad luck so far? E.g. Nintendulator doesn't support the SBX instruction, NesterJ doesn't implement RMW dummy writes, FCEUXD SP doesn't update the memory value after ISC/DCP, etc. Nestopia is the only emulator left which still runs my damned code <img src="./images/smilies/icon_sad.gif" alt=":(" title="Sad" /></div>
<br />Accuracy among emulators is really variable, but I'd suggest not using dark undocumented opcodes. Does they really save you bytes or execution time ?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>doynax</b> [ Fri Mar 28, 2008 8:01 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">The only "real-3D" engine I know is for Elite and that Tank Demo, you can find sources on the main nesdev page (nesdev.com), but they're crappy doccumented.</div>The download link seems to be dead and there's nothing on archive.org, still I don't imagine that there's all that much to learn from it aside from the fact that this kind of thing is at all feasible.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">You can use MMC3, MMC5, FME7, .... mappers who can produce accurate interupts (altrough MMC3 is a bit crappy), and all of them "officially" have SRAM.</div>MMC5 doesn't seem seem to have CHRRAM though, and MMC3 cartridges with both SRAM and CHRRAM are said to be "rare" according to the wiki (only used in obscure Japanese titles or something like that). Wiring up RAM rather than ROM shouldn't be all that hard if the mapper itself stays the same, but I'm suspicious of the fact that (almost) no one seem to have done it. At any rate I'd like to stick to basic bog-standard hardware if at all possible, preferably easily tested by people on this board with real hardware equipment.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">MMC1 hasn't external interrupts, but you can do a lot of things with timed code, and even more with DMC interrupts + sprite zero hit combo.</div>That's what I figured. I'm wary of pitfalls though. Running into interrupt hardware problems halfway through a project is not my idea of a fun experience (anyone remember the dog-slow Commodore serial bus?).<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Accuracy among emulators is really variable, but I'd suggest not using dark undocumented opcodes. Does they really save you bytes or execution time ?</div>Loads of them actually. My line drawing innerloops use SBX extensively for instance, LAX and ISC saves another few cycles and bytes in the outer loops. We're talking about something like 32k of unrolled code here so space is a factor here.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Fri Mar 28, 2008 8:02 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">Same goes for discrete logic mappers who doesn't officially support SRAM, but you can emulate them with SRAM and even add SRAM on real hardware, only adding a simple 74HC08 and gate.</div>
<br />Do you care to add a rewiring guide to the wiki to add PRG RAM to A*ROM/B*ROM/U*ROM boards, so that we know exactly which hardware the iNES board descriptors <em>really</em> specify?
<br />
<br />And as for the undocumented opcodes, do any games licensed by Nintendo use them?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Roth</b> [ Fri Mar 28, 2008 8:36 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">doynax wrote:</div><div class="quotecontent">The download link seems to be dead... </div>
<br />
<br />The links worked fine for me actually:
<br />
<br /><!-- m --><a class="postlink" href="http://www.iancgbell.clara.net/nestank/">http://www.iancgbell.clara.net/nestank/</a><!-- m -->
<br />
<br />On that page you can grab the source for the tank game, and on this page:
<br />
<br /><!-- m --><a class="postlink" href="http://www.iancgbell.clara.net/elite/nes/index.htm">http://www.iancgbell.clara.net/elite/nes/index.htm</a><!-- m -->
<br />
<br />You can get the Elite ROM, but I don't see a source anywhere.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>doynax</b> [ Fri Mar 28, 2008 8:41 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Roth wrote:</div><div class="quotecontent"><div class="quotetitle">doynax wrote:</div><div class="quotecontent">The download link seems to be dead... </div>The links worked fine for me actually:</div>Works for me too, now.. Must have been a temporary problem.
<br />Thanks.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Fri Mar 28, 2008 10:22 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Polygon filling..</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">doynax wrote:</div><div class="quotecontent">Unfortunately I kind of need both CHR-RAM (duh) and SRAM which according to the wiki seems to limit me to MMC1</div>
<br />I'm sure the use of CHR-RAM is not as "duh" as you think. Since you'll be working with real 3D and filled polygons, it might be wise to reduce your resolution so that you have any chance of a decent framerate.
<br />
<br />CHR-ROM does a pretty decent job emulating large "pixels". If you divide each tile in 4 large pixels, it's possible to have all combinations with the 4 colors fit inside the 256 tiles you have. You can even double the vertical resolution by drawing the image to both name tables (making a 64x120 "pixels" image), and squeeze it inside a single screen using interrupts or timed code (although this will take away time that would otherwise be used to compute the next frame).
<br />
<br />If you use less than 4 colors it might even be possible to fit more pixels inside each tile, increasing the resolution.
<br />
<br />I really think this is a better option than CHR-RAM, which would be pretty slow to update, as opposed to the name tables.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>doynax</b> [ Fri Mar 28, 2008 10:37 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Polygon filling..</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">I'm sure the use of CHR-RAM is not as "duh" as you think. Since you'll be working with real 3D and filled polygons, it might be wise to reduce your resolution so that you have any chance of a decent framerate.<br /><br />CHR-ROM does a pretty decent job emulating large "pixels". If you divide each tile in 4 large pixels, it's possible to have all combinations with the 4 colors fit inside the 256 tiles you have. You can even double the vertical resolution by drawing the image to both name tables (making a 64x120 "pixels" image), and squeeze it inside a single screen using interrupts or timed code (although this will take away time that would otherwise be used to compute the next frame).<br /><br />If you use less than 4 colors it might even be possible to fit more pixels inside each tile, increasing the resolution.<br /><br />I really think this is a better option than CHR-RAM, which would be pretty slow to update, as opposed to the name tables.</div>All true, but frankly 4x4 pixel effects just look a bit too chunky for me (though they're actually quite popular on the C64). I think I'd rather attempt a 1x1 effect at a reduced resolution or frequency instead.
<br />At any rate my back-of-the-envelope calculations seems to suggest that something like a simple spinning cube should be manageable in a 160x160 window at half frame rate (here in PAL-land anyway). Of course I might easily have misjudged things badly so we'll see how it turns out..

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Fri Mar 28, 2008 10:44 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">CHR-ROM does a pretty decent job emulating large "pixels". If you divide each tile in 4 large pixels, it's possible to have all combinations with the 4 colors fit inside the 256 tiles you have. You can even double the vertical resolution by drawing the image to both name tables (making a 64x120 "pixels" image), and squeeze it inside a single screen using interrupts or timed code (although this will take away time that would otherwise be used to compute the next frame). </div><br />Heheh, I kind of love this kind of tricks. Also, if anyone uses that method, there is already the data for it in high-hopes.nes so that you don't need to manually draw the 256 tiles.<br />Actual use of this would be hard without CHR ROM midframe bankswitching + 4 screen mirroring, as it uses two pattern tables and two nametables.<br /><br />I use 4x4 "pixels" graphics in my game, not for 3D, just to say "Game Over" in big letters in a cool fashion (among with some other text as well). It would normally use 16 tiles (monochrome), but I don't use all 16. At least those "pixels" are really big, and I doubt a game could look any good with BG drawn like that.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Do you care to add a rewiring guide to the wiki to add PRG RAM to A*ROM/B*ROM/U*ROM boards, so that we know exactly which hardware the iNES board descriptors really specify? </div><br />Oh, I may be doing that, but I don't know where it takes place since I don't know any Nintendo-name board which have SRAM wired up with a discrete chip, exept Family Basic which is a particular case. ANDing PRG A13, PRG A14, /ROMSEL, M2 and connect the output to SRAM /CE doesn't seem a complicated task, tough.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">MMC5 doesn't seem seem to have CHRRAM though, and MMC3 cartridges with both SRAM and CHRRAM are said to be "rare" according to the wiki (only used in obscure Japanese titles or something like that).</div>
<br />You're almost right, but even worse MMC3+CHRRAM+RAM is used in <em>Final Fantasy III</em>, which was an obscure Japanese title when it was released and is now part of one of the most well known series, so many avid collector wants this cart. A couple of other actual obsure japansese titles uses the same config too.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>MottZilla</b> [ Fri Mar 28, 2008 12:01 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Final Fantasy 3 I was going to mention as many people have converted MMC3 boards to use CHRRAM for making repros of FF3. So it can and has been done

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>doynax</b> [ Sun Mar 30, 2008 4:35 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Okay, so I seem to have hit a snag with the interrupt handling..
<br />
<br />How exactly is the DMC clocked and when are the interrupts triggered? In Nestopia an interrupt triggered from the NMI handler jitters by like three whole scanlines, while in FCEU there's just the expected few cycles from normal interrupt latency. Hopefully I've just forgotten to reset something, or Nestopia is the inaccurate emulator, but I also seem to recall reading somewhere that DMC IRQs were kind of unpredictable..
<br />
<br />Switching to an MMC3 mapper wouldn't solve my problem either since it counts the PPU's memory accesses and I want to use it to reactivate a blanked screen. Apparently VRC carts can perform real cycle counting but I kind of doubt anyone has the hardware setup for testing with that chip and I still want to avoid non-standard hardware if possible.
<br />
<br />Actually the PPU itself also exhibits some rather interesting behavior. When activating the display mid-screen it start showing the third line of whatever tile row the address register points to. And this happens in both emulators.
<br />Now I haven't seen anything like a guide to PPU raster tricks or a useful model of its internal behavior, so I guess I'm going to have to dig around in some emulator sources *shudder*. Which one is the most accurate when it comes to this kind of thing?
<br />
<br />Meh.. Does anyone here have any ideas on how to show a stable vertically centered window with the top and bottom parts blanked?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sun Mar 30, 2008 5:12 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />"Third row" behavior might have something to do with the fact that the upper nibble you wrote to PPUADDR was 2xxx. Try writing 0xxx, 1xxx, or 3xxx to see what other rows you can trigger. Then see "The skinny on NES scrolling" to learn what's really going on.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>doynax</b> [ Sun Mar 30, 2008 5:35 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">"Third row" behavior might have something to do with the fact that the upper nibble you wrote to PPUADDR was 2xxx. Try writing 0xxx, 1xxx, or 3xxx to see what other rows you can trigger. Then see "The skinny on NES scrolling" to learn what's really going on.</div>Thank you, that does seem to work =)
<br />With that I can display the first row in its entirety, plus with a second DMC interrupt at frequency $f and length 3 I've covered my 176 pixel window perfectly.
<br />
<br />Now if only the DMC is (or can be made to be) stable on hardware..

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>doynax</b> [ Sun Mar 30, 2008 7:57 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />From studying Nestopia's code it appears as if they simply tell the DMC to run for x cycles at the end of some emulation quantum, and trigger whatever IRQs are needed from within that loop. Not very precise..
<br />
<br />Anyway I put together a small test ROM which I'd be eternally grateful of someone could test on hardware for me.
<br />
<br />Here's the results on the emulators I happened to have lying around:<ul><li>FCEU: 7 cycles</li><li>Nestopia: 3 scanlines</li><li>Nintendulator: 1 scanline</li><li>NesterJ: stable</li><li>Nesticle: blank screen (*gasp*)</li></ul><a href="http://www.minoan.ath.cx/~doynax/6502/blanking.zip" class="postlink">http://www.minoan.ath.cx/~doynax/6502/blanking.zip</a>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>doynax</b> [ Mon Mar 31, 2008 4:44 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Damn it.. I just realized I have another serious problem.
<br />
<br />If the display itself screws up the PPU address register then I have to restore the address when switching back to the graphics transfer 'task'. Of course there's no way to actually read back the current address so I'll have to try to infer it from the return address and register/variable states inside of the IRQ handler.
<br />I suppose it can be done fairly efficiently with some tables and some code, sort of a manual version of the implicit exception handling chains used by most C++ compilers, but it'll also most definitely be nasty and error-prone.
<br />
<br />And I thought the interrupt-based approach would be easier than cycle counting.. =(
<br />
<br />Oh, and I'm still looking for someone to run the test ROM. I'll convert it to use a mapper, CHR-ROM or whatever if that would help.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>8</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>