<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=6&amp;t=8663" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2012-02-28T23:21:53-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=6&amp;t=8663</id>
<entry>
<author><name><![CDATA[thefox]]></name></author>
<updated>2012-02-28T23:21:53-07:00</updated>
<published>2012-02-28T23:21:53-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8663&amp;p=90717#p90717</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8663&amp;p=90717#p90717"/>
<title type="html"><![CDATA[Re: DPCM Best Practices?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8663&amp;p=90717#p90717"><![CDATA[
<div class="quotetitle">Dr. Floppy wrote:</div><div class="quotecontent"><br />I keep getting that annoying 57% volume effect on the Triangle and Noise channels when a 1-bit DPCM sample cuts off its predecessor. Manually writing #00 to $4011 fixes that, but also causes a distinct popping sound when over-utilized. <em>Adv. of Bayou Billy</em> writes #00 to $4011 at the same time it loads the other three DPCM registers with new sample data... yet when I tried replicating that in SMB1, I got substandard sample quality with popping... &gt;:-(  Not to mention that wonderful A9-0F-8D-15-40 / A9-1F-8D-15-40 juggling act that seems to produce different results in different games... What's the best order of operations here?<br /></div><br />Try to understand where the popping comes from. It comes from sudden changes in volume, so if the DPCM counter is at a value other than zero when you write zero to it, it will pop. How loud the pop is depends on the previous value (going 127-&gt;0 or vice versa will produce the biggest pop).<br /><br />Then it's just a matter of trying to work around the issue, by doing stuff like what Dwedit suggested.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=80">thefox</a> — Tue Feb 28, 2012 11:21 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2012-02-28T16:32:45-07:00</updated>
<published>2012-02-28T16:32:45-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8663&amp;p=90711#p90711</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8663&amp;p=90711#p90711"/>
<title type="html"><![CDATA[DPCM Best Practices?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8663&amp;p=90711#p90711"><![CDATA[
Writing $0F/$1F to the sound channel enable register ($4015) works as long as a game isn't using these enable registers to turn off channels. It'd work with my music player, which uses the envelope registers ($4000/$4004/$4008/$400C) to turn off channels, but music players like SMB1 that make heavy use of the length counter might use $4015 instead.<br /><br />If you try to add samples to a game not designed with DPCM in mind, you might get garbage button presses while a sample is playing due to clock noise generated by the DMA unit. There are DPCM-safe controller reading routines, and there are DPCM-unsafe controller reading routines. The latter are simpler and faster, and they're actually required for peripherals where rereading has side effects (such as the Super NES Mouse and, if I remember correctly, the Vaus controller for Arkanoid).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Tue Feb 28, 2012 4:32 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Dwedit]]></name></author>
<updated>2012-02-28T14:42:40-07:00</updated>
<published>2012-02-28T14:42:40-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8663&amp;p=90708#p90708</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8663&amp;p=90708#p90708"/>
<title type="html"><![CDATA[DPCM Best Practices?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8663&amp;p=90708#p90708"><![CDATA[
Maybe modify the sample to make it return to 00 at the end.<br />And the MMC5's PCM channel is completely worthless.  It doesn't do DMC.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=53">Dwedit</a> — Tue Feb 28, 2012 2:42 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Dr. Floppy]]></name></author>
<updated>2012-02-28T14:38:58-07:00</updated>
<published>2012-02-28T14:38:58-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8663&amp;p=90707#p90707</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8663&amp;p=90707#p90707"/>
<title type="html"><![CDATA[DPCM Best Practices?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8663&amp;p=90707#p90707"><![CDATA[
I keep getting that annoying 57% volume effect on the Triangle and Noise channels when a 1-bit DPCM sample cuts off its predecessor. Manually writing #00 to $4011 fixes that, but also causes a distinct popping sound when over-utilized. <em>Adv. of Bayou Billy</em> writes #00 to $4011 at the same time it loads the other three DPCM registers with new sample data... yet when I tried replicating that in SMB1, I got substandard sample quality with popping... &gt;:-(  Not to mention that wonderful A9-0F-8D-15-40 / A9-1F-8D-15-40 juggling act that seems to produce different results in different games... What's the best order of operations here?<br /><br /><br />My second question is probably dumb, so I saved it for last. There's no chance whatsoever that MMC5's 8-bit PCM channel can also play 1-bit DPCM samples...... right?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4866">Dr. Floppy</a> — Tue Feb 28, 2012 2:38 pm</p><hr />
]]></content>
</entry>
</feed>