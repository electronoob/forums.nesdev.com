<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Modularity/File Size vs. Efficiency</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Modularity/File Size vs. Efficiency</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=6566">http://forums.nesdev.com/viewtopic.php?f=2&amp;t=6566</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>4</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>67726e</b> [ Mon Jul 05, 2010 12:08 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Modularity/File Size vs. Efficiency</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I'm just wondering what you would consider more important in making a game: Reducing file size or more efficiency.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Mon Jul 05, 2010 12:13 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Really, do whatever you need to fit the size and frame rate targets that you have set. If your game is 132 KiB, and your publisher wants you to get it down to 128 KiB so that it will fit in the smaller ROM chip, you might need to cut out some lookup tables. If you want to have a lot of big levels, space efficiency of the map encoding is important. If a lot of critters in one area are causing the CPU to take longer than 29,000 cycles to make a frame, you'll need to find some tradeoffs to get more speed.
<br />
<br />Not everybody's targets are the same. Micronics games, for instance, appear to trade off frame rate for development time.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>67726e</b> [ Mon Jul 05, 2010 12:22 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">your publisher .</div>
<br />
<br />Publisher? lolwut?
<br />
<br />So basically it really doesn't matter as long as you get it done and it works? I guess I like that way of looking at it since I'm still working on my first game.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Mon Jul 05, 2010 12:23 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Most important: it's fun. Depending on what approach you take, you may need to work on reducing data size (if it's a game with large maps), improving efficient (if it involves lots of objects on screen and fast action), or something else entirely (perhaps coming up with a design that can handle the complexity of a turn-based game).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Mon Jul 05, 2010 12:31 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Publisher? lolwut?</div>
<br />tepples is always faking that we're commercial developers. He probably took that habit from GBAdev.
<br />Not that at some point we're all doing this - tepples just say it loud.
<br />
<br />Personally I hate frame rate drops so i'd rather have a "bigger" file (anyways even if you make a VERY large 512k game it's really small by todays standards).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Mon Jul 05, 2010 12:39 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">tepples is always faking that we're commercial developers. He probably took that habit from GBAdev.<br />Not that at some point we're all doing this - tepples just say it loud.</div>
<br />I wouldn't be saying it out loud if it weren't for Sivak and bunnyboy. (No, not <a href="http://www.elfwood.com/fanq/a/p/ap6/bunny_momiji2.jpg.html" class="postlink">that bunnyboy</a>.) Then again, I meant "publisher" in a fairly broad sense. For example, if you are entering a 16K competition, the compo sponsor is your publisher, and you'll need to fit everything into 16384 bytes.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Kasumi</b> [ Mon Jul 05, 2010 2:43 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />For me right now efficiency is the most important. My game does complicated things, and it needs to take a lot of space to do what it does at all. It sometimes needs to take even more to do it fast. The routine that runs the main character is 3.75 kilobytes or something like that. 
<br />
<br />However I code for space on the side, since I also want more levels. So I take a page from the atari programmer's book, and turn jmps into branches whenever possible. (Which saves a byte. Saved bytes add up though. I've saved enough already for at least a medium sized level)
<br />
<br />Sometimes it's easy like this:
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; bne label<br />&nbsp; jmp label2<br /></div><br /><br />becomes<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; bne label<br />&nbsp; beq label2<br /></div>
<br />
<br />Sometimes it's trickier like realizing no instructions change the carry flag in between a cmp, sec, sbc etc and a jmp. Then changing the jmp to a branch that brances on the condition that the carry flag with definitely be. 
<br />
<br />I do some other probably crazy things to save space. But mostly I'm about speed.
<br />
<br />If I was doing something else I'd work on saving space, since I think it's kind of fun, actually. So yeah, depends on the game.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>67726e</b> [ Mon Jul 05, 2010 2:56 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Kasumi, I swear everytime you respond to one of my threads I learn something new about efficiency. Using a BEQ in place of JMP is so blatantly obvious that I just completely don't see it. Truth be told that just gave me several ideas on ways I could make my code just a little better.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>koitsu</b> [ Mon Jul 05, 2010 3:21 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">blargg wrote:</div><div class="quotecontent">Most important: it's fun.</div>
<br />
<br />Ding ding, blargg wins the prize.  (I have no idea what the prize is, but he wins it)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Mon Jul 05, 2010 3:45 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I usually optimize for speed, but I can't completely forget about the size. Even though mappers allow you to have a lot of PRG-ROM, the addressing space of the 6502 is still pretty small, and only 32KB of PRG can be mapped at any given time, which means that the way your code and data are organized will haven an impact on the efficiency of the program as well.
<br />
<br />I often use branches instead of jumps when a flag (N, C, Z or V) is guaranteed to always have the same value at that point, even if I have to shuffle some instructions around to make sure that value is constant.
<br />
<br />Another thing that helps, one byte at a time, is not doing CLC or SEC before additions and subtractions if the value of the carry is known, even if that means compensating the added/subtracted value. For example, if I want to add $20 to a variable but the carry is always set, I add $1F instead. 
<br />
<br />That's the kind of optimization I do when a block of code is already working without any "tricks" though, because sometimes if you do them while still prototyping the logic you might end up changing the way a flag behaves and screw up the rest of the logic, and that kind of bug can be hard to find.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dwedit</b> [ Mon Jul 05, 2010 3:59 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Not setting or clearing the carry flag is very dangerous.  I thought I was doing some clever optimizations, and they backfired for that reason.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Mon Jul 05, 2010 4:08 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />That's why I only do that as the last step before considering a piece of code final, so that no changes could by accident modify the carry.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Mon Jul 05, 2010 4:10 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Optimizations like doing BEQ BNE instead of BEQ JMP are pretty silly, unless it's in a macro that's used hundreds of times. Focus your efforts on things that yield hundreds of bytes of savings. Things like this are fragile (change the BEQ to something else and it breaks if you aren't watching). Others, like avoiding a CLC or SEC, are useful only in critical loops where a few cycles saved is significant. Everywhere else they just make the code more brittle. Given that assembly code is some of the hardest to debug, you don't need techniques like this making it even harder. I think most cases of this have ill effects, especially when people here use them in introductory NES code of all places.
<br />
<br />tokumaru has it exactly right: If you're going to do things like this, do them last, and only when you can see that they will make a noticeable difference in speed or code size. Otherwise, you're de-optimizing clarity. Always remember that downside.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Kasumi</b> [ Mon Jul 05, 2010 5:43 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />My current savings by using branches instead of jmps is 143ish bytes. Nothing to sneeze at. Space is space. That's a lot of animations or a level to three. (In my formats)
<br />
<br />Another thing I neglected to mention is to tag your branches that used to be jmps with a comment. This is so if more added code brings the label the branch points to out of range, you just turn it into a jmp, rather than the first instinct of creating an extended branch which takes up both more cycles AND bytes. (But of course this is avoided entirely if you convert jmps to branches last.)
<br />
<br />I do agree it sometimes makes code less readable in the less obvious cases, and you should only do it when you're sure the logic in place is set in stone. 
<br />
<br />As for avoiding clc and sec, it can indeed save you a lot of cycles in loops. clc/sec before a loop instead of during every iteration is simple enough. My first 8-bit division routine took 214 cycles (Max). After optimization, it takes 133 (Max). (I used to divide a lot, so this was VERY important. I might be able to do it even faster if I bring the tile type back that used division)
<br />
<br />Other than during loops, I'll get rid of them if I see it, but I don't actively look for instances where I can avoid them. They're used so seldom the byte (and cycle savings) don't often make it worth it. 
<br />
<br />I'm not advocating being careless. Be REALLY sure before you make a change like any of these. I have stuff like this comment in my code:
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">velmask.highmid.pos:<br />&nbsp; &nbsp;bne velmask.highmidstart2<br />&nbsp; &nbsp;plp<br />&nbsp; &nbsp;jmp velmask.end;bcc would probably work, but I'm scared to try it</div>
<br />
<br />I'm pretty sure all paths that lead to that label push a clear carry byte to the stack, but I'm not sure. If I REALLY need that byte later, I can always come back <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /> Never make a change you're not sure of for one byte. I'm not saying that.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Mon Jul 05, 2010 5:55 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Kasumi wrote:</div><div class="quotecontent">My current savings by using branches instead of jmps is 143ish bytes. Nothing to sneeze at. Space is space. That's a lot of animations or a level to three.</div><br />It's nine tiles.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Never make a change you're not sure of for one byte.</div>
<br />You're right. This is the NES, not the Atari 2600.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>4</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>