<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - [My emulator] Graphics glitches - SuperMarioBros</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">[My emulator] Graphics glitches - SuperMarioBros</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=3&amp;t=8159">http://forums.nesdev.com/viewtopic.php?f=3&amp;t=8159</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>2</strong> of <strong>3</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Fri Oct 14, 2011 7:13 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Check the attributes behind "1 PLAYER GAME" and "2 PLAYER GAME". Can you dump VRAM $23C0-$23FF from your emulator and from a known good one?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bisqwit</b> [ Fri Oct 14, 2011 7:19 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NameTable 0:<br />$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$<br />$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$<br />$$$?????$$$$$$$$$$ ????$$????$$$<br />$$$??????$$.&#41;??$$$$?&#40;?$$$$$$$$$$<br />$$$$$DHHHHHHHHHHHHHHHHHHHHI$$$$$<br />$$$$$FÐÑØØÞÑÐÚÞÑ&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;J$$$$$<br />$$$$$FÒÓÛÛÛÙÛÜÛß&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;J$$$$$<br />$$$$$FÔÕÔÙÛâÔÚÛà&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;J$$$$$<br />$$$$$FÖ×Ö×á&amp;ÖÝáá&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;J$$$$$<br />$$$$$FÐèÑÐÑÞÑØÐÑ&amp;ÞÑÞÑÐÑÐÑ&amp;J$$$$$<br />$$$$$FÛBBÛBÛBÛÛB&amp;ÛBÛBÛBÛB&amp;J$$$$$<br />$$$$$FÛÛÛÛÛÛßÛÛÛ&amp;ÛßÛßÛÛäå&amp;J$$$$$<br />$$$$$FÛÛÛÞCÛàÛÛÛ&amp;ÛãÛàÛÛæã&amp;J$$$$$<br />$$$$$FÛÛÛÛBÛÛÛÔÙ&amp;ÛÙÛÛÔÙÔÙçJ$$$$$<br />$$$$$_??????????x?????????z$$$$$<br />$$$$$$$$$$$$$Ï????$????????$$$$$<br />$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$<br />$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$<br />$$$$$$$$$Î$?$???&quot;??$????$$$$$$$$<br />$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$<br />$$$$$$$$$$$?$???&quot;??$????$$$$$$$$<br />$$$$12$$$$$$$$$$$$$$$$$$$$$$$$$$<br />$$$0&amp;43$$$$$$$$$$$$$$$$$$$$$$$$$<br />$$0&amp;&amp;&amp;&amp;3$$$$???&#40;$??????$$$$$$$$$<br />$0&amp;4&amp;&amp;4&amp;3$$$$$$$$$$$$$$$676767$$<br />0&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;3$$$$$$$$$$$$$5%%%%%%8$<br />´µ´µ´µ´µ´µ´µ´µ´µ´µ´µ´µ´µ´µ´µ´µ´µ<br />¶·¶·¶·¶·¶·¶·¶·¶·¶·¶·¶·¶·¶·¶·¶·¶·<br />´µ´µ´µ´µ´µ´µ´µ´µ´µ´µ´µ´µ´µ´µ´µ´µ<br />¶·¶·¶·¶·¶·¶·¶·¶·¶·¶·¶·¶·¶·¶·¶·¶·<br />Attribute table 0:<br />AA AA AA AA AA AA AA AA <br />00 55 55 55 55 55 55 55 <br />55 55 55 55 55 55 55 55 <br />55 55 55 55 55 55 55 00 <br />00 00 99 AA AA AA 00 00 <br />00 00 00 00 00 00 00 00 <br />50 50 50 50 50 50 50 50 <br />05 05 05 05 05 05 05 05 <br /></div>
<br />
<br />Not sure how to get a reference from a good emulator, will have to look into it.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Fri Oct 14, 2011 7:24 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I seem to remember that the Windows version of FCEUX has a hex viewer for ROM, RAM, and VRAM.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Fri Oct 14, 2011 8:07 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: oddly green</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bisqwit wrote:</div><div class="quotecontent">That is, all reads/writes to palette indexes, whether internally or through I/O, are routed through the following map:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp;00 =&gt; 0&nbsp; &nbsp;08 =&gt; 0&nbsp; &nbsp; &nbsp;10 =&gt; 0&nbsp; &nbsp; 18 =&gt; 0<br />&nbsp;01 =&gt; 1&nbsp; &nbsp;09 =&gt; 9&nbsp; &nbsp; &nbsp;11 =&gt; 11&nbsp; &nbsp;19 =&gt; 19<br />&nbsp;02 =&gt; 2&nbsp; &nbsp;0A =&gt; A&nbsp; &nbsp; &nbsp;12 =&gt; 12&nbsp; &nbsp;1A =&gt; 1A<br />&nbsp;03 =&gt; 3&nbsp; &nbsp;0B =&gt; B&nbsp; &nbsp; &nbsp;13 =&gt; 13&nbsp; &nbsp;1B =&gt; 1B<br />&nbsp;04 =&gt; 0&nbsp; &nbsp;0C =&gt; 0&nbsp; &nbsp; &nbsp;14 =&gt; 0&nbsp; &nbsp; 1C =&gt; 0<br />&nbsp;05 =&gt; 5&nbsp; &nbsp;0D =&gt; D&nbsp; &nbsp; &nbsp;15 =&gt; 15&nbsp; &nbsp;1D =&gt; 1D<br />&nbsp;06 =&gt; 6&nbsp; &nbsp;0E =&gt; E&nbsp; &nbsp; &nbsp;16 =&gt; 16&nbsp; &nbsp;1E =&gt; 1E<br />&nbsp;07 =&gt; 7&nbsp; &nbsp;0F =&gt; F&nbsp; &nbsp; &nbsp;17 =&gt; 17&nbsp; &nbsp;1F =&gt; 1F</div></div>
<br />This is wrong. $4, $8 and $C should not be mirrored down to 0 when reading/writing to/from the palette memory, only when rendering (if you want to think about it that way). $10, $14, $18 and $1C are mirrors of 0, $4, $8 and $C.
<br />
<br />See <!-- m --><a class="postlink" href="http://wiki.nesdev.com/w/index.php/PPU_palettes">http://wiki.nesdev.com/w/index.php/PPU_palettes</a><!-- m --> for details.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bisqwit</b> [ Sat Oct 15, 2011 5:42 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: oddly green</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Thanks for the help. Though I already mentioned it in IRC; I got it working.
<br />Turns out my PPU rendering loop was changing the nametable address mid-frame even while background rendering was disabled.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bisqwit</b> [ Sun Oct 16, 2011 5:12 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I have another problem... My emulator causes the game to crash.
<br />This nice 187 kilobyte animated screenshot illustrates the problem. Repeat frames were removed from the first part to bring the intro faster to motion.
<br /><img src="http://bisqwit.iki.fi/kala/snap/nesemu1_smbfail.gif" alt="Image" />
<br />When the mushroom appears, the game crashes. I tried also running a TAS on it, and while the TAS (where it synced) did not invoke the mushroom, the game still crashed around the same spot.
<br />
<br />(The image was stitched into a form that avoids global motion with my tool called "animmerger"; this makes the GIF smaller. However, it may appear in the end as if the screen jerks forward. This did not happen; the stitcher was just confused by the HUD suddenly disappearing as a result of the game's crash.)
<br />
<br />I thought it would be sprite-0-hit related, but my emulator passes all Blargg's sprite hit tests... Yet the game still crashes.
<br />
<br />This is interesting, because e.g. Rockman 1 plays just fine (and syncs with <a href="http://tasvideos.org/1686M.html" class="postlink">the TAS</a> exactly as long as <a href="http://www.youtube.com/watch?v=HRhVCwW3wz4" class="postlink">the real console does</a>).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sun Oct 16, 2011 5:24 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />SMB1 tends to crash if sprite 0 doesn't line up. Check all writes to $2000 and $2006 to make sure rendering starts at the correct nametable.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>beannaich</b> [ Sun Oct 16, 2011 6:22 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I'd also make sure you check the contents of your OAM and $2003, sprite 0 reordering might also be causing SMB to hang.
<br />
<br />Do you pass the sprite overflow tests?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bisqwit</b> [ Sun Oct 16, 2011 9:14 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">beannaich wrote:</div><div class="quotecontent">I'd also make sure you check the contents of your OAM and $2003, sprite 0 reordering might also be causing SMB to hang.<br /><br />Do you pass the sprite overflow tests?</div>
<br />Yes, all OAM related tests. Thanks for the suggestions, I'll look into them.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>3gengames</b> [ Sun Oct 16, 2011 9:57 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Are you clearing the sprite 0 hit only when rendering begins? I'd believe the test ROM's would fail for that but you never know, good luck.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bisqwit</b> [ Sun Oct 16, 2011 11:23 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">3gengames wrote:</div><div class="quotecontent">Are you clearing the sprite 0 hit only when rendering begins? I'd believe the test ROM's would fail for that but you never know, good luck.</div>
<br />I initially cleared it at the same time as I clear the vblank flag, but in order to make the "sprite_hit_tests_2005.10.05" test "09.timing_basics" test "9) Cleared at end of VBL too late" pass and not fail, I changed it into cycle 340 of the last vblank line: 2 cycles before the vblank flag is cleared, 1 cycle before the pre-render scanline begins.
<br />The vblank clearing time was established to be 1 cycle after the end of vblank in order to make "ppu_vbl_nmi" test "03-vbl_clear_time" pass. (The CPU emulator passes all timing tests, including the cyclewise disassembly trace of nestest.nes, so it's not that the tests get wrong timing.)
<br />Changing the clearing time did not affect the game either way.
<br />
<br />The sprite hit flag is not cleared at any other time. It is also not cleared by a read of any port.
<br />
<br />The OAM address (which is used for the sprite-prescan for next scanline at ppu scanline cycles 0..255) is cleared at cycle 0. In addition, at the processing of sprite 2 it is set to 8 as is done by nestopia. (Both of these only happen if sprite rendering is enabled.)
<br />
<br />From the selection of "nestest", "instr_test-v3", "instr_misc", "branch_timing_tests", "cpu_timing_testv6", "oam_read", "oam_stress", "ppu_vbl_test", "ppu_open_bus", "sprite_hit_tests_2005.10.0", "sprite_hit_timing", my emulator currently fails only two tests:
<br />-- "ppu_vbl_nmi" test "07-nmi_on_timing": I get two N lines rather than 5.
<br />-- "instr_misc" test "04-dummy_reads_apu": APU is not implemented yet.
<br />In addition, "ppu_sprite_overflow" seems to produce a number of fails, curiously, including an unexplained complaint about wrong VBL timing (despite the passing of ppu_vbl_test).
<br />
<br />Here is how I do Vblank and NMI currently:
<br />
<br />CPU:<ul><li>- All memory accesses are synchronous with the PPU: a memory-write and memory-read both incur an immediate three PPU cycles before the I/O is performed, regardless of the type of memory accessed. The same goes for extra tick() calls incurred by certain opcodes that need them to ensure proper timing.<br />- At the beginning of opcode fetch (before the opcode is fetched), the NMI line is checked and saved into a variable.<br />- After the opcode is fetched (and PPU has allowed to run for 3 cycles), the just saved nmi variable is checked. If a rising edge was detected (i.e. it was up and it was not up the last time it was checked), the fetched opcode is discarded, and replaced with BRK instead. NMI processing begins. (Though a BRK opcode is processed, special conditions ensure that the vector is loaded from $FFFA and that the flags pushed are ORred with #$20 rather than with #$30. The return address pushed to stack is also calculated properly for NMI.)</li></ul>PPU (the following operations are tested/performed in the listing order):<ul><li>- At the beginning of every cycle, a bitwise AND of the NMI enable flag ($2000 bit 7) and the Vblank flag ($2002 bit 7) is pushed into an internal queue of NMI states. The third element of the queue is popped, and assigned to the NMI line polled by the CPU. This ensures that the CPU always receives the NMI flag at a two (or three?) PPU cycle delay. Doing the pushing before the next step also ensures that the "06-suppression" test passes, among others.<br />- At the beginning of every cycle, an internal variable called VBlankState is checked. If it was 1, the VBlank flag ($2002 bit 7) is set. If it was -1, the $2002 register is set to #$00 (which clears the VBlank flag). After these tests, VBlankState is set to 0.<br />- At the beginning of the 0th cycle of the 241st scanline (the first vblank scanline, after the one idle waste scanline that follows the rendering), VBlankState is set to 1. This is the internal flag.<br />- At the beginning of the 0th cycle of the -1th scanline (pre-render scanline), VBlankState is set to -1. This is the internal flag.<br />- When $2000 is written to (by the CPU), no special processing happens aside from storing to the register.<br />- When $2002 is read from (by the CPU), the VBlank flag is cleared. If VBlankState happened to be 1, it is also cleared.</li></ul>A particular aspect of this design is that I do not use cycle counters / deadlines (i.e. "run until N cycles / if cycles &lt; 100, then return"). Everything happens completely synchronously. Well, as synchronously as it can happen. The cycles for the CPU and PPU are still interleaved. A read from $2000 causes 3 PPU cycles, followed by an access to the PPU register, rather than the read coinciding with the PPU code. During the processing of an LDA $2000, the PPU runs for 12 cycles in total. The PPU register access happens right after the 12th PPU cycle. (I could not find a test that tells which cycle the access should happen on.)
<br />Can someone point out what exactly I am doing wrong that causes the two NMI and VBL related tests to fail? (In addition to possible further hints towards solving the Mario crash.)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>byuu</b> [ Mon Oct 17, 2011 2:34 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bisqwit wrote:</div><div class="quotecontent">During the processing of an LDA $2000, the PPU runs for 12 cycles in total. The PPU register access happens right after the 12th PPU cycle. (I could not find a test that tells which cycle the access should happen on.)</div>
<br />
<br />I've noticed the significant omission of this data from all documents. It's quite annoying.
<br />
<br />When a device reads from or writes to another device, it requires time to pass before the read/write actually occurs. When two devices are supposed to do something at the exact same time, either a conflict occurs or one takes priority. This information is completely missing in NES documentation.
<br />
<br />On the SNES, each clock cycle is 6, 8, or 12 clocks long. Reads against the PPU happen at total_clocks-4, and writes at total_clocks (eg after the PPU has run the same amount of time as our opcode.)
<br />
<br />Internally, the behavior is that the data is there the entire time, but has to be sitting on the bus with /RD or /WR for the right amount of time before it is acted upon.
<br />
<br />Right now, my best guess for NES is that, assuming all chips are at an equal time, CPU &gt; APU &gt; PPU. And a CPU read/write happens before PPU runs. If CPU accesses PPU $2007 during rendering, who the hell knows what happens. It's guessed that it will read/write whatever the PPU fetched last, but it's never explained.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bisqwit</b> [ Mon Oct 17, 2011 2:48 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><a href="http://bisqwit.iki.fi/src/nesemu1_vbl_test_skeleton.cc" class="postlink">http://bisqwit.iki.fi/src/nesemu1_vbl_test_skeleton.cc</a>
<br />Here is a link to my V-Blank / NMI timing test skeleton, stripped of all features not related to V-Blank / NMI timing testing (370 lines remain). It can be used to run Blargg's tests. Note that it does not include any graphical / audio output. It outputs only to the console. Lacking any mapper functions, it only supports the "rom_singles" versions.
<br />
<br />byuu, changing the tick() to occur _after_ read() or write() requires changing the NMI delay buffer length from 3 elements to 6 elements to prevent test pass rate going worse. I find this unlikely to be correct...

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>beannaich</b> [ Mon Oct 17, 2011 4:22 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Just from the sounds of it, I think there is a small timing error somewhere in your PPU. I clear the entire contents of $2002 at the beginning of scanline -1 (dot 0), and I pass all the relevant PPU tests.
<br />
<br />One thing I was doing wrong, was in my $4014, after I added the cycles for sprites (513 CPU cycles), I didn't catch the PPU up immediately, this caused a few dot error, that was driving me crazy trying to figure out.
<br />
<br />How are you handling $4014?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bisqwit</b> [ Mon Oct 17, 2011 4:40 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">beannaich wrote:</div><div class="quotecontent">How are you handling $4014?</div>
<br />In the way shown above. When a write to $4014 is encountered, 256 reads and writes will be issued, each consuming one cpu tick (three ppu ticks). The write() call will therefore last 256*2+1 = 513 cpu cycles total (instead of the normal 1 cpu cycle), plus the additional time required by the opcode (opcode and operand fetches (3 cycles), possible indexing and possible misfiring (2 cycles)). These cycles are also done synchronously with the PPU. So no, that is not the reason either.
<br />
<br />Can you look at the source code I provided (or just the algorithm description in the preceding post) and point out where the timing error is?

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>2</strong> of <strong>3</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>