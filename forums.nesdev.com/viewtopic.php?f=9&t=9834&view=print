<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Giving a NES an Internal OS?</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Giving a NES an Internal OS?</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=9&amp;t=9834">http://forums.nesdev.com/viewtopic.php?f=9&amp;t=9834</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rvIceBreaker</b> [ Thu Feb 21, 2013 5:18 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Giving a NES an Internal OS?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Hey all!<br /><br />So I still have a NES my grandfather bought kicking around.<br />Its missing the top half of the case, but i have everything that matters; It still ticks (and is currently playing the SMB3 World 1 music as i speak)...<br /><br />I want to transfer it over to a new case (of which i haven't decided yet), and i figured since it was going to be in a new case, that i'd make the power/reset/LED setup digital instead of analog.<br /><br />So a couple nights ago, while thinking about what case to put it in and what i wanted the digital power-switch-board to do, i had kind of a thought...<br />'What if the NES had an &quot;OS&quot; to boot into, like a modern console, when no cartridge is plugged in?&quot;<br /><br />I've kinda been thinking on how to do it over the past couple of days, but I'm quite new to programming for NES. And for that matter i'm generally inexperienced in embedded programming. The original plan, the digital power/reset board, I can handle. Controlling a PIC from a NES Cart; I have no clue where to start on that.<br /><br />If I do this, my main goal is to keep it faithful to the original 1987 hardware; This isn't going to be a Raspberry Pi or an x86 running an emulator. I want to it to be running legitimate Nintendo hardware.<br /><br />I was thinking the 'OS' would basically be an internal cartridge that boots up when a game cartridge isn't inserted. However, i'm not certain on how (from an electronics perspective) two carts could be connected without interfering with each other.<br /><br />Long story short, I would like to mod my NES to boot an internal cartridge (that can communicate with a PIC) if no external cart is detected, but I'm unsure how to go about it.<br /><br />So is this just a pipe dream? Or could this actually be pulled off? I ask because I haven't seen anything like it before, and I'd like to not waste my time if you guys think I'm chasing a dragon...

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Shiru</b> [ Thu Feb 21, 2013 5:24 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Giving a NES an Internal OS?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />A boot logo when no cartridge inserted is surely doable. There are plently old Famiclones that had 'built-in' games that were actually a cartridge PCB inserted into a second slot at bottom side of the main PCB. It was connected 1-to-1 for the most part. Not sure what exactly should be done to replicate the same on the original NES. Guess detection of inserted cartridge was done through the pins that are short by inserted cartridge, and switch between them is by switching a line, maybe RD or something.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>infiniteneslives</b> [ Thu Feb 21, 2013 6:12 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Giving a NES an Internal OS?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />It's possible.  I'd say based on the nature of your questions it would be an excessively difficult 'first' project.  May be achievable if you take small steps.<br /><br />CIRAM /CE and CHR /A13 being shorted together would be a pretty decent way to sense a cart was plugged in.  The only exception would be 4screen mirroring games but there are only a handful of those.  Another way would be to sense the current draw from the cartridge (no current = no cart).<br /><br />Out of curiosity what would you have the 'os' do?  One simpler method would be to only use PRG-ROM for your OS, and use CIRAM for both name and pattern tables.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Jeroen</b> [ Thu Feb 21, 2013 6:36 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Giving a NES an Internal OS?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Copynes uses an interesting method to get a &quot;bios&quot; running before the game.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>MottZilla</b> [ Thu Feb 21, 2013 6:45 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Giving a NES an Internal OS?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">infiniteneslives wrote:</div><div class="quotecontent">Out of curiosity what would you have the 'os' do?  One simpler method would be to only use PRG-ROM for your OS, and use CIRAM for both name and pattern tables.</div><br /><br />This. What's the point? Definitely figure out what the goal is going to be. You can certainly internalize software to the NES console but what functions are supposed to be done? OS is a very strange term to use. Do you mean you want something like Windows 3.1? Or just a snazzy Logo with Music?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Thu Feb 21, 2013 7:07 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Giving a NES an Internal OS?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Netbooting from ENIO or controller 2 serial like the GBA does. Or maybe just Snail Maze like the SMS.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rvIceBreaker</b> [ Thu Feb 21, 2013 7:18 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Giving a NES an Internal OS?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">infiniteneslives wrote:</div><div class="quotecontent">Out of curiosity what would you have the 'os' do?</div><br /><br />My original thoughts would be just shutdown and reset functions in a menu. That's pretty much the only practical use i can think of right now, but if you could get it to throw interrupts on a PIC you could pretty much do whatever. Even a simple splash screen as Shiru mentioned would be fine at first.<br /><br />Initially, i'll need to be able to determine the presence of an external cart and be able to run both the 'OS' cart and a game cart, all the while keeping the 'OS' cart hard wired into the system. Once that works, i could move onto resetting/powering down the console from software.<br /><br />I kind of imagine it like the PS2 OS for NES.<br /><br />The whole project is really a 'why not' kind of thing, from a personal perspective. Running a rom from a boot menu isn't really practical, but it'd be fun just getting it to work. There may be no reason in reality other than an excuse to play around with the internals of my NES, and perhaps learn something along the way. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /><br />However, it could provide a means of having an 'OS' rom that you could expand upon for your NES. There are greater minds than mine out there. I don't plan to mass produce/sell it, and i have no problem documenting it.<br /><br /><div class="quotetitle">MottZilla wrote:</div><div class="quotecontent">This. What's the point? Definitely figure out what the goal is going to be. You can certainly internalize software to the NES console but what functions are supposed to be done? OS is a very strange term to use. Do you mean you want something like Windows 3.1? Or just a snazzy Logo with Music?</div><br /><br />OS is probably a VERY invalid term for this, at least in my case, and i use it very loosely. BIOS is probably more accurate, to be honest.<br /><br />This is why i posted here, honestly. Personally, i have free time on my hands, so i figure 'Why not?' and I figured you guys would be able to answer that question, among others.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>drk421</b> [ Thu Feb 21, 2013 7:23 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Giving a NES an Internal OS?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I've always thought the M82 Kiosk <a href="http://www.youtube.com/watch?v=Tf5DQuUnKoI" class="postlink">http://www.youtube.com/watch?v=Tf5DQuUnKoI</a> would be a great NES BIOS screen. Just change some of the instruction text.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Thu Feb 21, 2013 8:49 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Giving a NES an Internal OS?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />IMO <em>the</em> best thing this can provide is a bootloader, so that you can put in a nice all-RAM cart (no ROM at all) and upload programs from a PC to it. It also lets you dump carts, backup/restore SRAM on them, etc. Having it on the NES mainboard is less tedious and more reliable than putting it on a Game Genie's boot ROM.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Jeroen</b> [ Thu Feb 21, 2013 8:57 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Giving a NES an Internal OS?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">blargg wrote:</div><div class="quotecontent">IMO <em>the</em> best thing this can provide is a bootloader, so that you can put in a nice all-RAM cart (no ROM at all) and upload programs from a PC to it. It also lets you dump carts, backup/restore SRAM on them, etc. Having it on the NES mainboard is less tedious and more reliable than putting it on a Game Genie's boot ROM.</div><br /><br /><br />So copynes?...with a non pc interface. (technically possible, you'll just need to add circuitry to hijack the chr rom as well)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>80sFREAK</b> [ Thu Feb 21, 2013 9:23 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Giving a NES an Internal OS?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Shiru wrote:</div><div class="quotecontent">A boot logo when no cartridge inserted is surely doable. There are plently old Famiclones that had 'built-in' games that were actually a cartridge PCB inserted into a second slot at bottom side of the main PCB. It was connected 1-to-1 for the most part. Not sure what exactly should be done to replicate the same on the original NES. Guess detection of inserted cartridge was done through the pins that are short by inserted cartridge, and switch between them is by switching a line, maybe RD or something.</div><br />+1<br /><br />Also you should read about Sharp Twin Famicom<br /><br />P.S. blargg, could you please reply my PM, which i sent while ago

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>mikejmoffitt</b> [ Thu Feb 21, 2013 10:19 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Giving a NES an Internal OS?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I really don't see what you gain from software-based shutdown or reboot. The power button we had before brought up game software instantly; there is no subsystem of software or drivers to load or an HAL to initialise... A boot logo like the SMS had would be great though.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Thu Feb 21, 2013 11:00 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Giving a NES an Internal OS?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I always hated the boot logos on the SMS and Genesis. They inevitably made games take longer to boot and homogenized to some extent the intros of games. I much prefer the NES and SNES allowing absolutely full control of everything from the moment the console powers on.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Thu Feb 21, 2013 11:27 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Giving a NES an Internal OS?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">rvIceBreaker wrote:</div><div class="quotecontent">i'd make the power/reset/LED setup digital instead of analog.</div> ??? The reset and LED lines <em>are</em> digital. The power switch is ... well, I wouldn't say &quot;analog&quot;. Maybe &quot;the same as any other hard power switch&quot;.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">So is this just a pipe dream? Or could this actually be pulled off? I ask because I haven't seen anything like it before, and I'd like to not waste my time if you guys think I'm chasing a dragon...</div> I think there are three ways to do this, of varying dubiousness.<br />1- solder in a ROM. Put large resistors in series with the data lines. If anything else is plugged in, it'll lose the argument and the external code gets run instead.<br />2- Modify the power or ground rails so that one pin becomes a hotplug detection. Use appropriate digital logic to only enable the internal ROM when the hotplug detect is false. This won't work with all games.<br />3- Do something like copynes such that it always boots from the internal ROM, which then bootstraps and the code in that ROM sees if a cartridge is connected, and if so jumps to it instead.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>MottZilla</b> [ Fri Feb 22, 2013 12:27 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Giving a NES an Internal OS?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">blargg wrote:</div><div class="quotecontent">IMO <em>the</em> best thing this can provide is a bootloader, so that you can put in a nice all-RAM cart (no ROM at all) and upload programs from a PC to it. It also lets you dump carts, backup/restore SRAM on them, etc. Having it on the NES mainboard is less tedious and more reliable than putting it on a Game Genie's boot ROM.</div><br /><br />That's probably the most &quot;OS&quot; like suggestion so far. RAM cart program loading, Cartridge Dumping of ROM and Backup RAM and writing back Backup RAM. You could perhaps figure out a way to attach a storage device to the NES directly rather than a PC to backup and load data. You could make a simple RAM cart built into the NES itself, maybe something with 256K PRG / 8K CHR and support for NROM, UNROM, and AxROM. <br /><br />The first and most pressing subject about all this is what various ways you can implement an internal cartridge. The method where the internal ROM always gets control first is probably the one that makes the most sense, and from there you could check if a cartridge is inserted and choose what to do either automatically or with an on screen menu. You could also get some kind of hardware sensor/switch to detect physically if a cartridge is inserted into the system.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>