<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Branch instructions result in infinite loop?</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Branch instructions result in infinite loop?</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=3&amp;t=15934">http://forums.nesdev.com/viewtopic.php?f=3&amp;t=15934</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>PolarBITS</b> [ Fri May 12, 2017 9:32 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Branch instructions result in infinite loop?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The first instructions in the rom for Donkey Kong are the following:<br /><br />SEI <br />CLD <br />LDA 10<br />STA $2000<br />LDX ff<br />TXS <br />LDA $2002<br />AND 80, imm<br />BEQ f9, imm<br /><br />Since BEQ branches if the zero flag is set, and $2002 is 0 initially, LDA sets the zero flag when it executes. BEQ then branches 7 bytes back to the LDA command, and it loops forever like this. Am I doing something wrong, or is the CPU waiting for some signal from the PPU here? (I know that $2000-$2007 are PPU registers, and since $2002 is being read, the CPU could be waiting for something?)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Fri May 12, 2017 9:37 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Branch instructions result in infinite loop?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">PolarBITS wrote:</div><div class="quotecontent">is the CPU waiting for some signal from the PPU here?</div><br />Yes, it's waiting for the PPU to signal that vblank has started.<br /><br />Since you're apparently coding an NES emulator, it might be a good idea to familiarize yourself with the basic architecture of the system, otherwise you'll run into all sorts of little surprises like this.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">(I know that $2000-$2007 are PPU registers, and since $2002 is being read, the CPU could be waiting for something?)</div><br />When in doubt, look at the PPU's documentation to see what bits of which register are being used/watched, and you should get a better idea of what the code is trying to do.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>PolarBITS</b> [ Fri May 12, 2017 6:44 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Branch instructions result in infinite loop?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I'm looking at the PPU documentation and I'm a bit confused. STA writes 0x10 (16 in decimal and 00010000 in binary) to address $2000. The byte that controls vblank is the first one, byte 7, yet it seems to be set to 0. What am I missing?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Fri May 12, 2017 6:50 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Branch instructions result in infinite loop?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">PolarBITS wrote:</div><div class="quotecontent">The byte</div><br />You mean bit. Anyway, that bit controls whether the PPU generates an NMI every time vblank starts, not whether vblanks happen. Even if NMIs are turned off, vblanks will still happen, and their occurrence will be signaled in bit 7 of register $2002.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>PolarBITS</b> [ Fri May 12, 2017 6:54 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Branch instructions result in infinite loop?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Right. Nothing seems to be writing anything to bit 7 of $2002 though.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>PolarBITS</b> [ Fri May 12, 2017 6:56 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Branch instructions result in infinite loop?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Hold on nevermind it's usually set at powerup. I'm dumb lol

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Fri May 12, 2017 7:14 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Branch instructions result in infinite loop?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />$2002 is a read-only register. Games read it to get information about what the PPU is doing, they aren't supposed to write to $2002.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Fri May 12, 2017 8:16 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Branch instructions result in infinite loop?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />One thing that's important to note it's that memory-mapped registers are NOT memory. They are &quot;ports&quot; that allow the CPU to communicate with other parts of the hardware, such as the PPU and the APU. The CPU writes to these ports to send messages, but the written values are not stored in actual memory locations that can be read back. The CPU can also read from certain registers to receive messages from other parts of the system, and this is different from a memory read, because what you get is a dynamic value supplied by the hardware being pooled, not a static byte that was previously stored in a memory location.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>PolarBITS</b> [ Sat May 13, 2017 9:15 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Branch instructions result in infinite loop?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />After the BEQ I have the following instructions:<br /><br />LDY 07, imm<br />STY 01, zp<br />LDY 00, imm<br />STY 00, zp<br />LDA 00, imm<br />STA 00, indY<br />DEY <br />BNE fb, imm<br />DEC 01, zp<br />BPL f7, imm<br /><br />This still results in an infinite loop for me. If I'm getting it right, the following happens:<br /><br />7 is stored in Y<br />Y is stored in $0001 (value of $0001 is now 7)<br />0 is stored in Y<br />Y is stored in $0000 (value of $0000 is now 0)<br />0 is stored in A<br />A is stored in the value at $0000 plus Y (therefore A is stored in $0000, same effect as above)<br />Y is decremented (Y is now -1 and the Negative flag is set)<br />The program branches back to (STA 00), because the negative flag is set.<br /><br />This causes another infinite loop. What's the problem here?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Sat May 13, 2017 10:39 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Branch instructions result in infinite loop?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">PolarBITS wrote:</div><div class="quotecontent">Y is decremented (Y is now -1 and the Negative flag is set)<br />The program branches back to (STA 00), because the negative flag is set.<br /><br />This causes another infinite loop. What's the problem here?</div><br />BNE does not branch on <em>negative</em>, BNE branches on <em>not-zero</em>. It is the opposite of BEQ. (BNE = branch <strong>n</strong>ot <strong>e</strong>qual, BEQ = branch <strong>eq</strong>ual. Would have been nicer if they were named BZC and BZS maybe?)<br /><br />BMI branches on negative (branch <strong>mi</strong>nus), and BPL branches on positive (branch <strong>pl</strong>us). (Again, BNS and BNC would have been clearer, IMO.)<br /><br />DEY will eventally set the zero flag when Y reaches zero. (On the first test it will be $FF = -1, on the 256th test it will be back down to 0.)<br /><br />DEC $01 will eventually set the negative flag when ($01) rolls over to $FF.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>nostromo</b> [ Sat May 13, 2017 10:51 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Branch instructions result in infinite loop?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">A is stored in the value at $0000 plus Y (therefore A is stored in $0000, same effect as above)</div><br />wrong. Instruction &quot;sta ($00), y&quot;  is post indexed indirect, That mean register A is stored in<br />address &quot;at where&quot; is pointing address $0000 plus y, not address $00 plus y.<br /><br />address $0000 = 00<br />address $0001 = 07<br />register y = 0<br />sta ($00),y = $0700 + y  = $0700<br /><br />for what I can see this code fill with 0's entirely the main RAM.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Sat May 13, 2017 11:02 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Branch instructions result in infinite loop?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Ah, yeah I figured it was a &quot;clear RAM&quot; loop (PolarBITS seems to be working through a startup sequence), but I had neglected to notice that this loop overwrites its own counters, i.e. $01 is expected to be overwritten with 0 at some point. Interesting that this loop will leave with ($01)=$FF after that last DEC, and it has to write the $00XX page last.<br /><br />If &quot;indY&quot; meant &quot;indexed Y&quot; it would overwrite $01 right away and the BPL would trigger on the first test, but yeah obviously it is &quot;indirect Y&quot;.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Sat May 13, 2017 12:37 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Branch instructions result in infinite loop?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />This non standard notation threw me off too, I also assumed that was &quot;indexed Y&quot;.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>PolarBITS</b> [ Sat May 13, 2017 12:38 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Branch instructions result in infinite loop?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">rainwarrior wrote:</div><div class="quotecontent">(On the first test it will be $FF = -1, on the 256th test it will be back down to 0.)</div>[/quote]<br /><br />So you're saying that all numbers in RAM are unsigned bytes? I completely forgot about that lol.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sat May 13, 2017 12:44 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Branch instructions result in infinite loop?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Everything on a 6502 is unsigned, with the exception of the V flag in ADC, CMP, and SBC. N just means bit 7.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>