<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=3&amp;t=3569" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2007-09-04T17:13:53-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=3&amp;t=3569</id>
<entry>
<author><name><![CDATA[mattmatteh]]></name></author>
<updated>2007-09-04T17:13:53-07:00</updated>
<published>2007-09-04T17:13:53-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3569&amp;p=26713#p26713</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3569&amp;p=26713#p26713"/>
<title type="html"><![CDATA[use yuv overlay instead of rgb for rendering?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3569&amp;p=26713#p26713"><![CDATA[
that is what i am doing now.  but i am working a caching tiles, sprites, background, and foreground.  i can those cached as 8bit with a palette look up or 24 bit rgb.  the palette look up will be easy, but the 24 bit rgb will need to be redrawn.<br /><br />as to the topic, i was wondering if anyone has done that.  perhaps i could let the overlay do that, or perhaps it can not.  i have never used an over lay before and have seen many post about ntsc atrifacts and correct rendering from rgb; perhaps draw closer to ntcs from the beginning? <br /><br />matt<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=170">mattmatteh</a> — Tue Sep 04, 2007 5:13 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Disch]]></name></author>
<updated>2007-09-04T17:01:58-07:00</updated>
<published>2007-09-04T17:01:58-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3569&amp;p=26712#p26712</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3569&amp;p=26712#p26712"/>
<title type="html"><![CDATA[Re: use yuv overlay instead of rgb for rendering?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3569&amp;p=26712#p26712"><![CDATA[
I don't know about YUV... but:<br /><br /><div class="quotetitle">mattmatteh wrote:</div><div class="quotecontent"><br />i think i know how i want to code it but stuck on how to efficiently handle emphasis and monochrome.<br /></div><br /><br />I keep a 512 entry lookup table that has the output colors in RGB format.  The first 64 represent the NES palette with no emphasis, which would be filled by the loading of whatever .pal file.  The remaining 7 sets of 64 each represent a different color emphasis mode and are calculated once based on the first 64 colors.<br /><br />Monochrome can be handled very easily by applying a mask to the color prior to the lookup in the above table.  A mask of $3F would be full color, and $30 would be monochrome mode.  And in fact... I believe this is actually more or less how monochrome works on the system.<br /><br />My output looks something like:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">output_pixel = rgb_output_lut&#91; emphasis_bits | &#40; nes_color &amp; monochrome_mask &#41; &#93;;<br /></div><br /><br />where 'nes_color' is the desired color ($0F = black, etc), and 'monochrome_mask' is either $3F or $30.<br /><br />emphasis_bits would be the bits as written to $2001, left shift 1 (0x01C0)<br /><br /><br />EDIT<br />------------<br /><br />An optimization I just thought of....<br /><br />To avoid the additional AND operation for each pixel... you could keep two seperate buffers for the palette at $3F00.  One which has the colors as written (full color mode), and one which has the same entries but pre-masked with $30 (for monochrome mode).  When the game switches between color/monochrome modes, you can simply adjust a pointer which points to which buffer the PPU is to use.<br /><br />This of course would require you to maintain two buffers and keep them updated as the game writes to $3F00, but palette writes occur far less often than pixels are output.<br /><br /><br />To avoid the emphasis OR, you could just use a pointer to the lut instead of looking up the LUT directly.  Update the pointer when the game changes emphasis.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=33">Disch</a> — Tue Sep 04, 2007 5:01 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[mattmatteh]]></name></author>
<updated>2007-09-04T16:23:08-07:00</updated>
<published>2007-09-04T16:23:08-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3569&amp;p=26711#p26711</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3569&amp;p=26711#p26711"/>
<title type="html"><![CDATA[use yuv overlay instead of rgb for rendering?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3569&amp;p=26711#p26711"><![CDATA[
i am working on re coding my ppu and have been reading and thinking of how to do it.  i think i know how i want to code it but stuck on how to efficiently handle emphasis and monochrome.  i have never used overlay before and not sure i fully understand it.  but since the nes is ntsc or pal, not rgb, has anyone tried to use yuv overlay ?  for example, sdl has overlay support.  would this be easier to use for correct emulation and perhaps emphasis and monochrome handling ?   i would assume that most graphics cards would have this in hardware and perhaps software for non full screen such as linux.<br /><br />any ideas ?<br /><br />matt<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=170">mattmatteh</a> — Tue Sep 04, 2007 4:23 pm</p><hr />
]]></content>
</entry>
</feed>