<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=3&amp;t=1332" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2006-04-09T05:27:40-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=3&amp;t=1332</id>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2006-04-09T05:27:40-07:00</updated>
<published>2006-04-09T05:27:40-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1332&amp;p=11735#p11735</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1332&amp;p=11735#p11735"/>
<title type="html"><![CDATA[MMC5 CHR reading]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1332&amp;p=11735#p11735"><![CDATA[
<div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />However, couldn't it be another thing that was indirecly done by the write to $2001 that triggered the MMC5 to stop it's counter ?<br /></div><br /><br />Yes, it could be. I didn't test much more than IRQ behavior (before I was pointed to the doc kevtris wrote).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Sun Apr 09, 2006 5:27 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2006-04-09T00:46:05-07:00</updated>
<published>2006-04-09T00:46:05-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1332&amp;p=11728#p11728</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1332&amp;p=11728#p11728"/>
<title type="html"><![CDATA[MMC5 CHR reading]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1332&amp;p=11728#p11728"><![CDATA[
Disabling the screen effectivly will logically stop the IRQ counter. If you tested it, I assume that your conclusions are right.<br />However, couldn't it be another thing that was indirecly done by the write to $2001 that triggered the MMC5 to stop it's counter ?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Sun Apr 09, 2006 12:46 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[kevtris]]></name></author>
<updated>2006-04-08T16:38:38-07:00</updated>
<published>2006-04-08T16:38:38-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1332&amp;p=11713#p11713</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1332&amp;p=11713#p11713"/>
<title type="html"><![CDATA[MMC5 CHR reading]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1332&amp;p=11713#p11713"><![CDATA[
<div class="quotetitle">Bregalad wrote:</div><div class="quotecontent"><br /><div class="quotetitle">kevtris wrote:</div><div class="quotecontent">Or are there no PAL MMC5 titles? (I find that kinda hard to believe).<br /></div><br />There is one single PAL MMC5 title : Castlevania III - Dracula's curse. It works fine.<br />I also have some import MMC5 and they run fine on my PAL NES. The MMC5 base it's timing on the M2 clock line, so it doesn't matter if it is PAL or NTSC.</div><br /><br />How do you know this?  It certainly cannot do this for doing split screen graphics or the scanline based interrupts.<br /><br />The MMC5 has an intimate knowledge of what the PPU is doing at all times for it to be able to do the split screen, and for sprite fetches and such.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=230">kevtris</a> — Sat Apr 08, 2006 4:38 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Nessie]]></name></author>
<updated>2006-04-08T16:26:22-07:00</updated>
<published>2006-04-08T16:26:22-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1332&amp;p=11712#p11712</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1332&amp;p=11712#p11712"/>
<title type="html"><![CDATA[MMC5 CHR reading]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1332&amp;p=11712#p11712"><![CDATA[
<div class="quotetitle">blargg wrote:</div><div class="quotecontent"><br />When I was doing MMC5 RE tests, disabling BG and OBJ by writing to $2001 immediately cleared bit 6 of $5204.<br /></div><br />Was that during vblank?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=12">Nessie</a> — Sat Apr 08, 2006 4:26 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2006-04-08T15:50:58-07:00</updated>
<published>2006-04-08T15:50:58-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1332&amp;p=11711#p11711</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1332&amp;p=11711#p11711"/>
<title type="html"><![CDATA[MMC5 CHR reading]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1332&amp;p=11711#p11711"><![CDATA[
<div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />I'll never get how you can do such conclusion, but I assume you're right.<br /></div><br /><br />When I was doing MMC5 RE tests, disabling BG and OBJ by writing to $2001 immediately cleared bit 6 of $5204. That's what I based my conclusion on. I didn't do as Kevtris suggested in modifying the cartridge.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Sat Apr 08, 2006 3:50 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2006-04-08T13:54:40-07:00</updated>
<published>2006-04-08T13:54:40-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1332&amp;p=11710#p11710</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1332&amp;p=11710#p11710"/>
<title type="html"><![CDATA[MMC5 CHR reading]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1332&amp;p=11710#p11710"><![CDATA[
<div class="quotetitle">kevtris wrote:</div><div class="quotecontent"><br />Or are there no PAL MMC5 titles? (I find that kinda hard to believe).<br /></div><br />There is one single PAL MMC5 title : Castlevania III - Dracula's curse. It works fine.<br />I also have some import MMC5 and they run fine on my PAL NES. The MMC5 base it's timing on the M2 clock line, so it doesn't matter if it is PAL or NTSC.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Sat Apr 08, 2006 1:54 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2006-04-08T11:29:44-07:00</updated>
<published>2006-04-08T11:29:44-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1332&amp;p=11704#p11704</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1332&amp;p=11704#p11704"/>
<title type="html"><![CDATA[MMC5 CHR reading]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1332&amp;p=11704#p11704"><![CDATA[
<div class="quotetitle">kevtris wrote:</div><div class="quotecontent"><br />Speaking of this, the MMC5 must synch its "virtual PPU" up with the real PPU via the fetches seen on the PPU bus.  I suspect this wouldn't be too tough to do.  So then this begs the question- how does the MMC5 know the difference between PAL and NTSC PPUs?<br /></div><br />There is little difference visible on the cart edge apart from the longer vblank and the CPU:PPU cycle ratio. The fetch sequence in PPU cycles is the same on NTSC and PAL.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Sat Apr 08, 2006 11:29 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[kevtris]]></name></author>
<updated>2006-04-08T10:33:40-07:00</updated>
<published>2006-04-08T10:33:40-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1332&amp;p=11700#p11700</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1332&amp;p=11700#p11700"/>
<title type="html"><![CDATA[MMC5 CHR reading]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1332&amp;p=11700#p11700"><![CDATA[
<div class="quotetitle">Bregalad wrote:</div><div class="quotecontent"><br />I'll never get how you can do such conclusion, but I assume you're right.<br /></div><br /><br />easy- just break some connections between the MMC5 and the cart bus- Specifically A0 or similar.  Lift the pin on the mapper chip and tie it high or low for example.  (or have some kind of switching setup so you can force it high/low, or let A0 "flow through" for testing.<br /><br />BTW I was always wondering if the MMC5 watches for writes to PPU regs to figure out what it was doing... I guess this is indeed what goes on.<br /><br />On the FPGA console, I cheated and just sorta "borrow" the PPU state from the PPU instead of keeping tabs separately like the real MMC5 does, apparently.<br /><br />Speaking of this, the MMC5 must synch its "virtual PPU" up with the real PPU via the fetches seen on the PPU bus.  I suspect this wouldn't be too tough to do.  So then this begs the question- how does the MMC5 know the difference between PAL and NTSC PPUs?  Is there a register we never found that controls this?  Or is it auto-detecting it?  Or are there no PAL MMC5 titles? (I find that kinda hard to believe).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=230">kevtris</a> — Sat Apr 08, 2006 10:33 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2006-04-08T02:01:50-07:00</updated>
<published>2006-04-08T02:01:50-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1332&amp;p=11692#p11692</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1332&amp;p=11692#p11692"/>
<title type="html"><![CDATA[MMC5 CHR reading]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1332&amp;p=11692#p11692"><![CDATA[
I'll never get how you can do such conclusion, but I assume you're right.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Sat Apr 08, 2006 2:01 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2006-04-07T20:57:08-07:00</updated>
<published>2006-04-07T20:57:08-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1332&amp;p=11681#p11681</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1332&amp;p=11681#p11681"/>
<title type="html"><![CDATA[MMC5 CHR reading]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1332&amp;p=11681#p11681"><![CDATA[
Some MMC5 RE tests I did a while back showed that it was clearly watching writes to PPU registers and taking its own actions based on data written.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Fri Apr 07, 2006 8:57 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Josh]]></name></author>
<updated>2006-04-07T15:06:45-07:00</updated>
<published>2006-04-07T15:06:45-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1332&amp;p=11670#p11670</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1332&amp;p=11670#p11670"/>
<title type="html"><![CDATA[MMC5 CHR reading]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1332&amp;p=11670#p11670"><![CDATA[
Couldn't the MMC5 simply monitor writes to $2000 (and its mirrors) in order to detect the sprite size? All of the CPU address lines except A15 are connected to the mapper, according to the pinout (<a href="http://nesdevwiki.ath.cx/index.php/Nintendo_MMC5_Pinout" class="postlink">http://nesdevwiki.ath.cx/index.php/Nintendo_MMC5_Pinout</a>) as well as all of the CPU data lines. I suspect that A15 is connected somehow, possibly to the mapper write enable line. The mapper would then check for CPU A14=low, A13=high, and A2-A0 all low. If that was the case on a write cycle, then CPU D5 would tell the mapper if 8x8 or 8x16 OBJs were in use. Of course, this is just speculation at this point, but I see no reason that the mapper couldn't know which sprite size was in use.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=110">Josh</a> — Fri Apr 07, 2006 3:06 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2006-04-07T14:39:41-07:00</updated>
<published>2006-04-07T14:39:41-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1332&amp;p=11668#p11668</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1332&amp;p=11668#p11668"/>
<title type="html"><![CDATA[MMC5 CHR reading]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1332&amp;p=11668#p11668"><![CDATA[
<div class="quotetitle">Disch wrote:</div><div class="quotecontent"><br />Do any MMC5 games even use 8x8 sprites?<br /></div><br />That's a quite good question, I'll check tomorrow.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Fri Apr 07, 2006 2:39 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Disch]]></name></author>
<updated>2006-04-07T13:31:03-07:00</updated>
<published>2006-04-07T13:31:03-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1332&amp;p=11660#p11660</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1332&amp;p=11660#p11660"/>
<title type="html"><![CDATA[MMC5 CHR reading]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1332&amp;p=11660#p11660"><![CDATA[
I would speculate that the MMC5 is hijacking the BG fetches and changing the CHR they use as opposed to hijacking sprite fetches (since it has to hijack BG fetches for other purposes anyway -- split screen, Ex Attribute mode, etc).  If that's the case, you'd think that only reads MMC5 identifies as BG fetches would be interrupted and replaced with the 3rd 'fake' pattern table.  And all other reads would proceed normally to one of the two normal pattern tables.<br /><br />That leads me to believe that reading CHR through $2007 would give you whatever CHR the Sprites are using.  Which is how I've had it in my emu (not necessarily because of this logic -- but just because it happened to work out that way the way I had MMC5 set up)<br /><br />As for how/why 8x8 sprites are so freaking screwy... I have no idea.  Perhaps the dummy nametable fetches before the sprite CHR fetches are different when in 8x8 sprite mode?  Maybe they're confusing MMC5 somehow?  I don't know...  but if that's the case... would ExAttribute mode or Split screen mode even work with 8x8 sprites?  Do any MMC5 games even use 8x8 sprites?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=33">Disch</a> — Fri Apr 07, 2006 1:31 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2006-04-07T13:07:50-07:00</updated>
<published>2006-04-07T13:07:50-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1332&amp;p=11655#p11655</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1332&amp;p=11655#p11655"/>
<title type="html"><![CDATA[MMC5 CHR reading]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1332&amp;p=11655#p11655"><![CDATA[
I had in mind that the sprites size's bit is actually unavailable directly to the mapper (since the bit is directly written from CPU to PPU, there is no external cartridge connextion that can acnowledge that), I tought that was just a way to clarify things for programmers. The real logic is unknown to me. I had in mind that if using 8x8 sprites, it was just like with a normal mapper, so $2000 select wich pattern table to use. If 8x16 sprites, the only difference is that you can "fully" take advantage of the 2 pattern tables to your disposition, since BG graphics aren't stored there. They are either in the MMC5's fictionnal third pattern table, or in the EXAM when using EXGRAFX mode.<br />The wiki claims that the last pattern table switching register written to is the pattern table for the sprites, that is possible, in that case if 8x16 sprites are used, this would "override" the previous selection (and not having the mapper detect wich mode the game uses, wich is technically impossible, as far I know).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Fri Apr 07, 2006 1:07 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Disch]]></name></author>
<updated>2006-04-06T05:48:25-07:00</updated>
<published>2006-04-06T05:48:25-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1332&amp;p=11610#p11610</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1332&amp;p=11610#p11610"/>
<title type="html"><![CDATA[MMC5 CHR reading]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1332&amp;p=11610#p11610"><![CDATA[
Kind of weird question that's bugged me for a while now.<br /><br />MMC5 has its trick with 8x16 sprites which lets you have 12k CHR accessable at all times.  It's always sort of bugged me how this would work out when a game read CHR data from $2007.  Would it read from the last set written to (like with 8x8 sprites)?  Or would it be read from the last set the PPU accessed (probably the BG set)?<br /><br />Not really a major issue, but something I've thought about.  Anyone know?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=33">Disch</a> — Thu Apr 06, 2006 5:48 am</p><hr />
]]></content>
</entry>
</feed>