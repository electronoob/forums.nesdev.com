<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=10&amp;t=7303" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2010-12-23T10:45:51-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=10&amp;t=7303</id>
<entry>
<author><name><![CDATA[3gengames]]></name></author>
<updated>2010-12-23T10:45:51-07:00</updated>
<published>2010-12-23T10:45:51-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7303&amp;p=71815#p71815</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7303&amp;p=71815#p71815"/>
<title type="html"><![CDATA[Hit detection on sprites.]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7303&amp;p=71815#p71815"><![CDATA[
Why does that sound more complex then mine? :'( Haha, it is probably easier, but the way the game is set up, it's easier just to do it this way. Besides, I got the routine to work AND return the bucket hit correctly, I'm surprised how important a routine is, but how short it is, too with how much it does.<br /><br />One weird thing though, bombs are $10 big, $F should have worked for BombWidth-1 for X hit detection, but for some reason, I have to subtract 2 from it to $E or else it is one off. :/ I'll look into it more later, but that doesn't make sense since the way it works is a carbon copy of the Y hit detection except less layers. Oh well, I'm sure it's something stupid that I am missing, but for now, it's working. <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /><br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">HitDetectBombs:<br />  LDA BombsOnScreen<br />  BNE NEXTBOMBHITDETECT<br />  RTS<br />NEXTBOMBHITDETECT:<br />  LDA #$00<br />  STA LivesScratchpad<br />  LDA #$00<br />  STA BombsDone<br />  LDY BombMemoryFirstBomb<br />SBHDY:<br />  LDA $200,Y ;Get bomb Y position<br />  CLC<br />  ADC BombHeight ;Add height<br />  SEC<br />  SBC BucketYStart ;Subtract with where paddles Y start<br />  BCS BombHitDetectY ;If greater then or equal, see what bucket.<br />ReturnFromBombHit:<br />  RTS ;If too little, no other buckets will be either, so return.<br />BombHitDetectY:<br />  SEC<br />  SBC BucketHeight ;Subtract height of bucket.<br />  BCC SBHDX ;If carry taken, it's that bucket.<br />  LDX LivesScratchpad ;Get bomb compared to number on screen.<br />  INX<br />  CPX Lives ;Number of buckets reached?<br />  BEQ EndBombYHitDetect ;If taken, yes....give it one last shot, though.<br />  SEC<br />  SBC BucketSpacing ;Add spacing to current bucket splash for later.<br />  BCC SBHDX ;If carry taken, it's that bucket. GO GO GO.<br />  INC LivesScratchpad ;Increase lives needed for this to keep looping.<br />  JMP BombHitDetectY<br />EndBombYHitDetect:<br />  SBC BombHeight ;Check for hit on bottom of last bucket.<br />  BCC SBHDX ;SUCCESS!<br />  RTS ;Failure, don't even waste time on the next bombs. They don't deserve points for those ones! :&#40;<br />SBHDX:<br />  LDA $203,Y ;&#91;I had $203,X once and it took forever to see that mistake! :P&#93;<br />  CLC<br />  ADC BombWidth<br />  SEC<br />  SBC $2C3<br />  BCC ReturnFromBombHit<br />  SBC BucketWidth<br />  BCC BombHit<br />  SBC BombWidth<br />  BCC BombHit<br />RTS ;Change to NEXTBOMB once written<br />BombHit:<br />  LDA #$FF<br />  STA $200,Y<br />  STA $201,Y<br />  STA $202,Y<br />  STA $203,Y<br />  STA $204,Y<br />  STA $205,Y<br />  STA $206,Y<br />  STA $207,Y<br />JMP:<br />  JMP JMP   ;Bomb deleted, basically freeze game.<br /></div><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4311">3gengames</a> — Thu Dec 23, 2010 10:45 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2010-12-23T06:27:27-07:00</updated>
<published>2010-12-23T06:27:27-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7303&amp;p=71811#p71811</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7303&amp;p=71811#p71811"/>
<title type="html"><![CDATA[Hit detection on sprites.]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7303&amp;p=71811#p71811"><![CDATA[
Don't get ahead of yourself in optimization. Here's how I do it, using the (center, radius) representation of bounding boxes. <ol style="list-style-type: decimal"><li>Calculate the (X, Y) coordinates of the center point of the bomb and of the bounding box containing all three buckets. </li><li>Subtract like coordinates, and take the absolute value of each result to get the distance between their centers. </li><li>If delta X is less than half the sum of the widths, and delta Y is less than half the sum of the heights, you have a bounding box collision. </li><li>Then find the bucket whose center Y coordinate is closest to the bomb's. </li></ol><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Thu Dec 23, 2010 6:27 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[3gengames]]></name></author>
<updated>2010-12-22T22:19:15-07:00</updated>
<published>2010-12-22T22:19:15-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7303&amp;p=71801#p71801</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7303&amp;p=71801#p71801"/>
<title type="html"><![CDATA[Hit detection on sprites.]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7303&amp;p=71801#p71801"><![CDATA[
Okay thanks. The only reason I am going my collision like that is because while testing for collision, it is also going to use mathematics to tell which bucket it hit, killing two stones with one bird hopefully.<br /><br /><br />If this was a game with better hit detection, I'd probably have 4 variables for hit detection on the sprite, something like X,Y of the top left corner of the sprite, and then X,Y for the bottom right corner, letting you adjust the box around it eaily, but I'm not doing to.<br /><br /><br />Here's the routine I am writing right now for bomb hit detection, does it seem like it makes sense at all implementing this idea for the Y-hit detect?<br /><br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">SBHDY:<br />  LDA $200,Y ;Get bomb Y position<br />  CLC<br />  ADC BombHeight ;Add height &#40;Already -1 from actual height&#41;<br />  SEC<br />  SBC BucketYStart ;Subtract with where paddles Y start &#40;$A0 on screen&#41;<br />  BCS BombHitDetectY ;If greater then or equal, see what bucket.<br />ReturnFromBombHit:<br />  RTS ;If too little, no other buckets will be either farther then that one, so return.<br />BombHitDetectY:<br />  SBC BucketHeight ;Subtract height of bucket.<br />  BCC SBHDX ;If carry taken, it's that bucket.<br />  INC LivesScratchpad ;Inc bucket hit detect number.<br />  LDX LivesScratchpad ;Get bomb compared to number on screen.<br />  CPX Lives ;Number of buckets &#40;lives&#41; reached/already taken?<br />  BEQ EndBombYHitDetect ;If taken, yes....give it one last shot, though.<br />  SBC BucketSpacing ;Add spacing to current bucket splash for later.<br />  DEC LivesScratchpad ;If it is hit, put splash on prior bucket not next one;<br />  BCC SBHDX ;If carry taken, it's that bucket. GO GO GO!<br />  INC LivesScratchpad ;Next bucket, it isn't that one pass it up. :&#40;<br />  JMP BombHitDetectY<br />EndBombYHitDetect:<br />  SBC BombHeight ;Check for hit on bottom of last bucket.<br />  BCC SBHDX ;SUCCESS!<br />  RTS ;Failure, don't even waste time on the next bombs. They don't deserve points for those ones if they're going to lose anyway! :P<br /><br /><br />SBHDX Stands for Start Bomb Hit Detect X, not written yet, since I want to get the Y detection perfect, since thats the most important and hard part.<br /><br /><br />I don't do anything important with LivesScratchpad, but it counts UP to the ammount of lives, and what number is in there after X collision is done, will be used to determine what bucket to put the &quot;splash&quot; over, so it's there for a reason, just no reason yet.</div><br /><br /><br />If anyone figures out how to do something or another with better hit detection with this code, go ahead and do it.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4311">3gengames</a> — Wed Dec 22, 2010 10:19 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2010-12-22T21:58:18-07:00</updated>
<published>2010-12-22T21:58:18-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7303&amp;p=71797#p71797</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7303&amp;p=71797#p71797"/>
<title type="html"><![CDATA[Hit detection on sprites.]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7303&amp;p=71797#p71797"><![CDATA[
I guess your solution is OK. The "generic" solution for object collision is to calculate the edges of both objects and perform some simple comparisons between them. These comparisons, instead of looking for a collision, look for any of the 4 situations that would prevent a collision from happening, and only if none of those are true there is a collision.<br /><br />Not all coordinate systems have the object coordinates at the top left corner, I for example like to have the object's hot spot at the horizontal center, vertical bottom of the sprite, because that's their primary collision point to the ground. Whatever method you use, you have to find the 4 sides of their collision boxes. Once you do that, you'll have 4 variables for each object: top, bottom, left and right.<br /><br />Then you start checking for the 4 conditions that would make a collision impossible (0 and 1 are the two objects):<br /><br /><strong>bottom0 &lt; top1</strong> (object 0 is above object 1)<br /><strong>top0 &gt; bottom1</strong> (object 0 is below object 1)<br /><strong>right0 &lt; left1</strong> (object 0 is to the left of object 1)<br /><strong>left0 &gt; right1</strong> (object 0 is to the right of object 1)<br /><br />If any of those are true, a collision is impossible, and you don't even need to keep testing. If you test them all, and they are all false, then a collision happened.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Wed Dec 22, 2010 9:58 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[3gengames]]></name></author>
<updated>2010-12-22T15:21:40-07:00</updated>
<published>2010-12-22T15:21:40-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7303&amp;p=71783#p71783</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7303&amp;p=71783#p71783"/>
<title type="html"><![CDATA[Hit detection on sprites.]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7303&amp;p=71783#p71783"><![CDATA[
Okay, I am adding the new bomb-hit detection to my Kaboom! game, and I am just wanting to make sure it makes sense and is the right was to do hit detection for the game. I also searched and nothing really went into sprite hit detection so I am going to hope somebody else can fall back on this topic later on when they run into the same thing. This will only focus on Y hit detection, but technically, the X position hit detection would function the same exact way. Okay, here's the way I had my program going to run in this basic order:<br /><br /><br /><br />Get bomb Y location on the screen.<br /><br />Add (bomb height-1) to the bombs.<br /><br />Subtract with the location of the Bomb Y after the addition to the Y location of the paddles on the screen.<br /><br /><br />If Carry is set, that means the bomb would be in the Y-location range to maybe hit the paddle, so we'd subtract to make sure it isn't past it with (Paddle hit height+Bomb Height)<br /><br /><br />If Carry is clear, bomb does hit. If not, it doesn't hit the paddle since it would be past it.<br /><br /><br /><br />Here's some illustrations below:<br />The paddle hit box is $40 big in this example. The bomb is $10 tall in this example, I hope you guys can okay on this with these images, never illustrated an idea before. :/<br /><br /><br /><br />Box is outside of zone, right next to top bucket/paddle.<br /><img src="http://3gengames.webs.com/NES/HitDetectionIllustrartion/HitDetection1.png" alt="Image" /><br /><br /><br />Add 15, it will be one less then the paddle Y position, so when subtracted the carry will be cleared.<br /><img src="http://3gengames.webs.com/NES/HitDetectionIllustrartion/HitDetection2new.png" alt="Image" /><br /><br /><br />Box is hitting paddle by one pixel.<br /><img src="http://3gengames.webs.com/NES/HitDetectionIllustrartion/HitDetection3.png" alt="Image" /><br /><br /><br />Add bomb height-1 (15). It will be equal to the value of the top paddle so when subtracted, Carry will stay set, and also equal code will be set, although that doesn't matter here.<br /><img src="http://3gengames.webs.com/NES/HitDetectionIllustrartion/HitDetection4.png" alt="Image" /><br /><br /><br />Bomb is hitting the last pixel in the paddle.<br /><img src="http://3gengames.webs.com/NES/HitDetectionIllustrartion/HitDetection5.png" alt="Image" /><br /><br />So that means when we add Bomb height-1 (15), it won't be in range of the hit box we set up for the bomb. So to fix that, we add the height of the bomb-1 to the bottom of the paddles hit box. The grey box represents that.<br /><br /><br /><img src="http://3gengames.webs.com/NES/HitDetectionIllustrartion/HitDetection6.png" alt="Image" /><br /><br /><br /><br /><br />Does this all make sense like it's supposed to happen for the hit detection? I also hope somebody else finds this useful for hit detection, no topics that I could browse to mentioned anything like this for a while so I hope this helps somebody else, too.<br /><br /><br />Well thanks for looking, tell me what you think.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4311">3gengames</a> — Wed Dec 22, 2010 3:21 pm</p><hr />
]]></content>
</entry>
</feed>