<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=3&amp;t=6376" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2010-05-09T23:12:39-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=3&amp;t=6376</id>
<entry>
<author><name><![CDATA[thefox]]></name></author>
<updated>2010-05-09T23:12:39-07:00</updated>
<published>2010-05-09T23:12:39-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6376&amp;p=61248#p61248</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6376&amp;p=61248#p61248"/>
<title type="html"><![CDATA[Static Disassembly: how could it be made?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6376&amp;p=61248#p61248"><![CDATA[
IDA pro isn't particularily good with identifying code/data in 6502 code though, there's a lot of manual work involved. It should be possible to write an IDC script for it to apply FCEUX code/data logs to the disassembly, I think that should work pretty well.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=80">thefox</a> — Sun May 09, 2010 11:12 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[koitsu]]></name></author>
<updated>2010-05-09T22:24:33-07:00</updated>
<published>2010-05-09T22:24:33-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6376&amp;p=61247#p61247</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6376&amp;p=61247#p61247"/>
<title type="html"><![CDATA[Static Disassembly: how could it be made?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6376&amp;p=61247#p61247"><![CDATA[
What you're describing already exists in IDA Pro.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3">koitsu</a> — Sun May 09, 2010 10:24 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[MottZilla]]></name></author>
<updated>2010-05-09T10:51:55-07:00</updated>
<published>2010-05-09T10:51:55-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6376&amp;p=61219#p61219</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6376&amp;p=61219#p61219"/>
<title type="html"><![CDATA[Static Disassembly: how could it be made?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6376&amp;p=61219#p61219"><![CDATA[
Using the Code/Data Logs from an emulator like FCEUX can allow a disasm that will only make known code as code and the rest as data. From there you can hand edit it. You don't have to worry about instructions from RAM as they are loaded somewhere from ROM as data but with code somewhere and you'll just have to find that. <br /><br />Basically there is no auto-magic way to do it but with a few things you can make it easier on you.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=1726">MottZilla</a> — Sun May 09, 2010 10:51 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Petruza]]></name></author>
<updated>2010-05-09T08:30:16-07:00</updated>
<published>2010-05-09T08:30:16-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6376&amp;p=61217#p61217</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6376&amp;p=61217#p61217"/>
<title type="html"><![CDATA[Static Disassembly: how could it be made?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6376&amp;p=61217#p61217"><![CDATA[
I've seen that some people made a comprehensive disassembly of some Mario games and possibly others.<br />I've no experience disassembling NES games, but I know it's possible that the 6502, as any other CPU, interpret any byte as an opcode, so for example, it could interpret some instruction on some address in one way, and then jump back to it but into the second byte (the operand) and interpret that byte as the opcode, so the rest of the program from there until the next jump would be different. There's also interpreting data in ROM as both data and instructions, and executing RAM which changes, so statically disassembling a program that does all that is practically impossible.<br />But I guess at least most of NES games would only execute PRG-ROM and interpret all the instructions at the same offset always, so in that cases a static disassembly is possible.<br />I guess an emulator could run such a game, and log a disassembly of each instruction that it executes, looking out for repeated addresses and making sure that when the same address is executed more than once, it's always interpreted as the same instruction.<br />That way the emulator could make an automatic static disassembly at least of the code that was executed, possibly with some gapes that can be filled in subsequent runs of the game.<br />Is it done like this? is there any other methods?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3773">Petruza</a> — Sun May 09, 2010 8:30 am</p><hr />
]]></content>
</entry>
</feed>