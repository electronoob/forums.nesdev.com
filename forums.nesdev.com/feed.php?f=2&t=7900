<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=2&amp;t=7900" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2011-06-25T08:43:52-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=2&amp;t=7900</id>
<entry>
<author><name><![CDATA[psycopathicteen]]></name></author>
<updated>2011-06-25T08:43:52-07:00</updated>
<published>2011-06-25T08:43:52-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7900&amp;p=80530#p80530</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7900&amp;p=80530#p80530"/>
<title type="html"><![CDATA[programming game logic without PPU]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7900&amp;p=80530#p80530"><![CDATA[
I just came up with a code that not only works for sprite animation, but also works for scrolling, and bg animation.  It lets you upload large 1k chunks of v-ram, with only signifying the top 16-bits of the source address and the top 8-bits of the v-ram address.  If there are more than 4 chunks, it continues the next frame so it is impossible to miss the end of v-blank.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">!apple = &quot;$0000&quot;<br />!banana = &quot;$0001&quot;<br />!update_flag = &quot;$0100&quot;<br />!vram = &quot;$0101&quot;<br />!source = &quot;$0102&quot;<br /><br /><br />%macro move_chunk&#40;source, vram&#41;<br />php<br />rep #$20<br />sep #$10<br />lda &lt;source&gt;<br />ldy &lt;vram&gt;<br />jsr set_up_dma_list<br />plp<br />endmacro<br /><br />set_up_dma_list:<br />ldx !apple<br />sta !source,x<br />sty !vram,x<br />ldy #$01<br />sty !update_flag,x<br />inx #4<br />stx !apple<br />rts<br /><br /><br /><br />dma_chunk:<br /><br />php<br />sep #$30<br />ldx !banana<br />ldy #$04<br />lda #$80<br />sta $2115<br />lda #$01<br />sta $4300<br />lda #$18<br />sta $4301<br />loop:<br />lda !update_flag,x<br />beq finish<br />stz $2116<br />lda !vram,x<br />sta $2117<br />stz $4302<br />lda !source,x<br />sta $4303<br />lda !source+1,x<br />sta $4304<br />stz $4305<br />lda #$04<br />sta $4306<br />lda #$01<br />sta $420b<br />lda #$00<br />sta !update_flag,x<br />inx #4<br />dey<br />bne loop<br />finish:<br />stx !banana<br />plp<br />rts</div><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4383">psycopathicteen</a> — Sat Jun 25, 2011 8:43 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[MottZilla]]></name></author>
<updated>2011-06-24T15:39:05-07:00</updated>
<published>2011-06-24T15:39:05-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7900&amp;p=80516#p80516</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7900&amp;p=80516#p80516"/>
<title type="html"><![CDATA[programming game logic without PPU]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7900&amp;p=80516#p80516"><![CDATA[
<div class="quotetitle">psycopathicteen wrote:</div><div class="quotecontent"><br />Hardware reason: DMA was hacked on in the last minute.<br /><br />Reason why I'm complaining about it: It takes longer to program.<br /></div><br /><br />I don't see any evidence that shows DMA was "hacked on in the last minute". The PC-Engine which came out before it had DMA. The MegaDrive which also came out before it had DMA. Why would Nintendo have added it last minute? <br /><br />So what if it takes longer to program. It's not THAT big of a deal. Any game is going to involve alot of programming and design so it's not really unexpected that you have to deal with hardware quirks and such. <br /><br />I think you'll find there is no perfect platform. Every platform has something that could be different to make it better. NES could have had more RAM, faster CPU, 4 nametables worth of VRAM, DMA, etc. SNES could have had a faster CPU, support a 320 pixel width resolution, etc. PS1 could have had more VRAM and RAM as well as a faster CPU. Thelist goes on and on.<br /><br />You just have to work with what you have. Part of the fun is getting it working despite unfriendly design.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=1726">MottZilla</a> — Fri Jun 24, 2011 3:39 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2011-06-24T14:12:38-07:00</updated>
<published>2011-06-24T14:12:38-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7900&amp;p=80510#p80510</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7900&amp;p=80510#p80510"/>
<title type="html"><![CDATA[programming game logic without PPU]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7900&amp;p=80510#p80510"><![CDATA[
I don't understand your complains. Normally you should write routines that displays sprites on the screen once, and use them as a tool for the rest of your program.<br />If it takes long, it takes long once. And you say it takes "longer". Longer than what ? I really don't get it.<br />Anyways if you dislike the (S)NES hardware nobody is forcing you to use those platforms.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Fri Jun 24, 2011 2:12 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Drag]]></name></author>
<updated>2011-06-24T14:11:28-07:00</updated>
<published>2011-06-24T14:11:28-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7900&amp;p=80508#p80508</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7900&amp;p=80508#p80508"/>
<title type="html"><![CDATA[programming game logic without PPU]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7900&amp;p=80508#p80508"><![CDATA[
I recall the SNES having HDMA capabilities (basically, a DMA where the bytes are transferred during each scanline's h-blank period, so it's kinda like a background process, but also allows things like mode-7's 3d effects to be possible if I'm recalling correctly). So maybe being able to freely specify 20 different start/end addresses would be beneficial for neato graphix trickz. <img src="http://forums.nesdev.com/images/smilies/icon_razz.gif" alt=":P" title="Razz" /><br /><br />I also recall the NES's sprite DMA just simply copying bytes into $2004. Nobody complained about that. <img src="http://forums.nesdev.com/images/smilies/icon_razz.gif" alt=":P" title="Razz" /><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=21">Drag</a> — Fri Jun 24, 2011 2:11 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[psycopathicteen]]></name></author>
<updated>2011-06-24T14:07:49-07:00</updated>
<published>2011-06-24T14:07:49-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7900&amp;p=80507#p80507</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7900&amp;p=80507#p80507"/>
<title type="html"><![CDATA[programming game logic without PPU]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7900&amp;p=80507#p80507"><![CDATA[
<div class="quotetitle">MottZilla wrote:</div><div class="quotecontent"><br />I'm not sure what you are complaining about. I'm sure there was some hardware reason for why it was designed the way it was and it must have worked out given all the highly regarded games for the SNES. <br /><br />You should look into the GBA because the GBA probably does things the SNES doesn't that you would like. It has a faster CPU and might have a more simple setup for graphics.<br /></div><br /><br />Hardware reason: DMA was hacked on in the last minute.<br /><br />Reason why I'm complaining about it: It takes longer to program.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4383">psycopathicteen</a> — Fri Jun 24, 2011 2:07 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[MottZilla]]></name></author>
<updated>2011-06-24T13:59:01-07:00</updated>
<published>2011-06-24T13:59:01-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7900&amp;p=80504#p80504</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7900&amp;p=80504#p80504"/>
<title type="html"><![CDATA[programming game logic without PPU]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7900&amp;p=80504#p80504"><![CDATA[
I'm not sure what you are complaining about. I'm sure there was some hardware reason for why it was designed the way it was and it must have worked out given all the highly regarded games for the SNES. <br /><br />You should look into the GBA because the GBA probably does things the SNES doesn't that you would like. It has a faster CPU and might have a more simple setup for graphics.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=1726">MottZilla</a> — Fri Jun 24, 2011 1:59 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[psycopathicteen]]></name></author>
<updated>2011-06-24T12:40:53-07:00</updated>
<published>2011-06-24T12:40:53-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7900&amp;p=80495#p80495</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7900&amp;p=80495#p80495"/>
<title type="html"><![CDATA[programming game logic without PPU]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7900&amp;p=80495#p80495"><![CDATA[
$4301 isn't just the <em>starting</em> location, <em>every</em> byte in the DMA block get sent to that address, so DMA only does anything useful to registers $2104, $2118 and $2122.  All three have there own corrisponding address register, so why don't they just combine all three and cut out the middle man?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4383">psycopathicteen</a> — Fri Jun 24, 2011 12:40 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2011-06-24T06:01:59-07:00</updated>
<published>2011-06-24T06:01:59-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7900&amp;p=80486#p80486</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7900&amp;p=80486#p80486"/>
<title type="html"><![CDATA[programming game logic without PPU]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7900&amp;p=80486#p80486"><![CDATA[
I'm not entirely familiar with DMA on the Super NES, but if it's anything like DMA on the GBA, it's essentially hardware-accelerated memcpy. DMA destination allows each channel to be used to copy to OAM, VRAM, palette, different scrolling registers, etc. And OAM isn't mapped into the VRAM address space on the NES, Game Boy, or GBA either. Your question sounds like "why is $4014 on the NES not in the $2000 block?".<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Fri Jun 24, 2011 6:01 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[3gengames]]></name></author>
<updated>2011-06-23T23:34:25-07:00</updated>
<published>2011-06-23T23:34:25-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7900&amp;p=80481#p80481</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7900&amp;p=80481#p80481"/>
<title type="html"><![CDATA[programming game logic without PPU]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7900&amp;p=80481#p80481"><![CDATA[
<div class="quotetitle">psycopathicteen wrote:</div><div class="quotecontent"><br />In order to write something to V-RAM you have to write to:<br /><br />$2115                     v-ram addressing mode<br />$2116,$2117           v-ram address port<br />$4300                     dma mode<br />$4301                     dma destination<br />$4302-$4304           dma source<br />$4305,$4306           dma legnth<br />$420b                     dma activate<br /><br />Why didn't they just map OAM and palette into the v-ram address space, get rid of $4301, and combine $2115, $4300 and $420b into the same register?<br /></div><br /><br />More flexability. I'd want the first way of doing it, you can move blocks of memory everywhere it seems. [I'm unfamiliar with SNES though.] And probably since the VRam used a square (2^x) ammount of RAM and taking up an extra 32-64 bytes will eliminate the usability of 1 full screen of VRam.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4311">3gengames</a> — Thu Jun 23, 2011 11:34 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[psycopathicteen]]></name></author>
<updated>2011-06-23T18:31:46-07:00</updated>
<published>2011-06-23T18:31:46-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7900&amp;p=80479#p80479</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7900&amp;p=80479#p80479"/>
<title type="html"><![CDATA[programming game logic without PPU]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7900&amp;p=80479#p80479"><![CDATA[
In order to write something to V-RAM you have to write to:<br /><br />$2115                     v-ram addressing mode<br />$2116,$2117           v-ram address port<br />$4300                     dma mode<br />$4301                     dma destination<br />$4302-$4304           dma source<br />$4305,$4306           dma legnth<br />$420b                     dma activate<br /><br />Why didn't they just map OAM and palette into the v-ram address space, get rid of $4301, and combine $2115, $4300 and $420b into the same register?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4383">psycopathicteen</a> — Thu Jun 23, 2011 6:31 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Kasumi]]></name></author>
<updated>2011-06-23T17:54:00-07:00</updated>
<published>2011-06-23T17:54:00-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7900&amp;p=80478#p80478</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7900&amp;p=80478#p80478"/>
<title type="html"><![CDATA[programming game logic without PPU]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7900&amp;p=80478#p80478"><![CDATA[
I agree about working with consoles. The hardware is usually mostly the same (modulo, say, RAM bumps in later PSP models), and the libraries are much fewer making choosing easier. Not having to compensate for different screen resolutions in full screen, or RAM differences or OS differences, or processor speed differences is so freeing.<br /><br /> Even now that I'm capable of making PC games, I'd still prefer PSP. As for PC development being faster than NES, sure. But it's probably around the same speed as any other platform you can compile C for.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3504">Kasumi</a> — Thu Jun 23, 2011 5:54 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2011-06-23T13:08:57-07:00</updated>
<published>2011-06-23T13:08:57-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7900&amp;p=80467#p80467</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7900&amp;p=80467#p80467"/>
<title type="html"><![CDATA[programming game logic without PPU]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7900&amp;p=80467#p80467"><![CDATA[
I'd recommend PC development too if I could find a way around these disadvantages: <ul><li>Programs become obsolete when Microsoft makes incompatible ABI changes. </li><li>PC has no culture of plugging in two gamepads for multiplayer. </li><li>In my experience, PCs have far higher audio latency. </li><li>The expected production values for a PC game are much higher than for an NES game. </li></ul><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Thu Jun 23, 2011 1:08 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[MottZilla]]></name></author>
<updated>2011-06-23T12:54:09-07:00</updated>
<published>2011-06-23T12:54:09-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7900&amp;p=80465#p80465</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7900&amp;p=80465#p80465"/>
<title type="html"><![CDATA[programming game logic without PPU]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7900&amp;p=80465#p80465"><![CDATA[
I do agree with your point that there is a charm to working on a system like NES where there is pretty much nothing between you and the hardware. But PC development allows for much faster development in my opinion. Or atleast it is easier for me to throw together something on PC than it would be to do so for NES but if I had more practice maybe that wouldn't be the case.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=1726">MottZilla</a> — Thu Jun 23, 2011 12:54 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[3gengames]]></name></author>
<updated>2011-06-23T12:50:26-07:00</updated>
<published>2011-06-23T12:50:26-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7900&amp;p=80464#p80464</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7900&amp;p=80464#p80464"/>
<title type="html"><![CDATA[programming game logic without PPU]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7900&amp;p=80464#p80464"><![CDATA[
I disagree. C with a billion libraries to learn and choose from is so messy, crappy, and just mind blowing. I think consoles are the best choice for programming, since they have a set way they work and you're not slaving over libraries all day. Anyone else feel like that? I do a lot of Javascript programming and some C, but I prefer 6502 assembly all day.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4311">3gengames</a> — Thu Jun 23, 2011 12:50 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[MottZilla]]></name></author>
<updated>2011-06-23T12:45:47-07:00</updated>
<published>2011-06-23T12:45:47-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7900&amp;p=80463#p80463</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7900&amp;p=80463#p80463"/>
<title type="html"><![CDATA[programming game logic without PPU]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7900&amp;p=80463#p80463"><![CDATA[
<div class="quotetitle">psycopathicteen wrote:</div><div class="quotecontent"><br />Easier to work with, cleaner archetecture, less work getting something to be displayed.<br /></div><br /><br />It's called a PC. If you want to develop with less work, there you go. Virtually no limitations. Tons of languages and libraries to choose from. <br /><br />The SNES is weak in terms of flexibility? What exactly doesn't "flex" for you? Are you annoyed by its limitations? You can bump up to PS1/Saturn, or PS2, or like I suggested just go with the PC until you feel the hardware can do what you want. The SNES is actually pretty flexible when you consider if you wanted to you could use the stock CPU as a slave solely for graphics/sound/input interaction with a separate CPU located in your cartridge, sort of like a SA-1. Only you could do whatever you want and use some really fast ARM CPU where you could program your game entirely in C and just write a slave program to run on the SNES to handle transfers from your ARM CPU to get your graphics and sound to the system and retrieve the input data from the controller and whatever else.<br /><br />Part of the fun of developing for NES or SNES or any old console today is the limitations and nostalgia.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=1726">MottZilla</a> — Thu Jun 23, 2011 12:45 pm</p><hr />
]]></content>
</entry>
</feed>