<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Quick Questions</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Quick Questions</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=10&amp;t=5872">http://forums.nesdev.com/viewtopic.php?f=10&amp;t=5872</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>3</strong> of <strong>3</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Painvin</b> [ Tue Jun 22, 2010 2:28 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>some questions</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />hi, im new to all this, just started a few days ago.
<br />im using nesasm3
<br />
<br />i have a problem understanding variables. i know they must go at adress $0000, but also the CHR goes there. i know that one is in the CPU and the other in the PPU, but how does the assembler know the difference?
<br />
<br />another problem, when i define bytes in the middle of my code they sometimes stuck the program, but sometimes they dont. i managed to make the program run by writing the .db after all my code (in the same bank and all, just at the end). i just wanted to know what exactly happens there.
<br />
<br />thank you, and sorry if my questions are a little confusing, im a bit confused too.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Wave</b> [ Tue Jun 22, 2010 2:40 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: some questions</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Painvin wrote:</div><div class="quotecontent">hi, im new to all this, just started a few days ago.<br />im using nesasm3<br /><br />i have a problem understanding variables. i know they must go at adress $0000, but also the CHR goes there. i know that one is in the CPU and the other in the PPU, but how does the assembler know the difference?<br /><br />another problem, when i define bytes in the middle of my code they sometimes stuck the program, but sometimes they dont. i managed to make the program run by writing the .db after all my code (in the same bank and all, just at the end). i just wanted to know what exactly happens there.<br /><br />thank you, and sorry if my questions are a little confusing, im a bit confused too.</div>
<br />You can't manipulate PPU RAM directly, asm always manipulates CPU memory.
<br />Yo can only manipulate PPU RAM through the nes registers.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Painvin</b> [ Tue Jun 22, 2010 2:45 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />that's what i though, but doesnt
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">.bank 2<br />&nbsp; &nbsp;.org $0000<br />&nbsp; &nbsp;.incbin &quot;zelda.chr&quot;<br /></div>
<br />mean i write it directly to the PPU?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Tue Jun 22, 2010 4:43 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />There are two independent address and data buses on an NES. Variables go at $0000 on the CPU bus; CHR goes at $0000 on the PPU bus.
<br />
<br />In NESASM, the .org you pass to your assembler determines only the address. The .bank partly determines which bus; the iNES format places CHR immediately after PRG.
<br />
<br />"Zelda" doesn't have a CHR ROM unless you're talking about The Adventure of Link. Instead, The Legend of Zelda has CHR RAM, where the CPU copies data from PRG ROM to RAM on the cartridge through a register on the PPU.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Painvin</b> [ Tue Jun 22, 2010 4:58 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />i dont remember where i got that zelda.chr from, but it's just the chr rom for the title screen. i think i understood what you said, but its still a little confusing. i'll try to learn about that later, it doesnt really matter right now.
<br />
<br />about my other question: when i define bytes in the middle of my code they sometimes stuck the program, but sometimes they dont. i managed to make the program run by writing the .db after all my code (in the same bank and all, just at the end). i just wanted to know what exactly happens there.
<br /> 
<br />and another one that arouse while i was waiting for those answers. is the code for handling the controllers supposed to go in the NMI routine? i tried different things and it seems that only that way it works. it also makes sense, but i want to be sure. thanks

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Tue Jun 22, 2010 5:22 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Don't put .db into the middle of your code.
<br />
<br />You can put .db into your ROM, but make sure that before a block of .db there is a 'jmp' or 'rts' instruction.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Tue Jun 22, 2010 10:45 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: some questions</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Painvin wrote:</div><div class="quotecontent">i have a problem understanding variables. i know they must go at adress $0000, but also the CHR goes there. i know that one is in the CPU and the other in the PPU, but how does the assembler know the difference?</div><br />The assembler doesn't know the difference. The iNES format simply specifies that in a NES ROM first comes the PRG-ROM and then CHR-ROM (when present, if not present the game uses CHR-RAM), so if it's defined at the end of the source it's CHR.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">another problem, when i define bytes in the middle of my code they sometimes stuck the program, but sometimes they dont. i managed to make the program run by writing the .db after all my code (in the same bank and all, just at the end). i just wanted to know what exactly happens there.</div>
<br />When you assemble a program, everything becomes bytes. Instructions, numbers and all kinds of data become nothing more than a series of bytes. The CPU works by interpreting those bytes. Each command you give the CPU has a code, and based on that code the CPU knows what to do next. So if you assemble something like this:
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp;lda #$09<br />&nbsp; &nbsp;sta $2005<br />.db $44, $32, $50, $86</div><br />It becomes the following sequence of bytes in the resulting binary file:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">$A9, $09, $8D, $05, $20, $44, $32, $50, $86</div><br />Like I said, everything becomes just a big sequence of bytes. When the CPU executes that, it will read the $A9, which is the code for LDA in immediate addressing mode. The CPU is programmed to read the next byte from the ROM and put it in A when it finds that instruction. After that it finds the command $8D. This is the code for STA absolute. When the CPU reads this command, it knows it's supposed to store whatever is in A into the address specified by the following two bytes ($05, $20 is the address $2005, the lower byte comes first).<br /><br />That's how every CPU in the world works, by interpreting operations that are associated to codes (i.e. opcodes). So what happens now? The CPU will keep running the program. it then reads the code $44. The problem is this is not a valid code for an instruction, it's just data you happened to place right after the code. So it's no wonder the program will crash, since it will start executing things that are not proper instructions. And even if by coincidence they make up proper instructions, eventually a place with trash will be reached.<br /><br />So by placing all the data at the end you prevented the CPU from ever running into the data and interpreting it as code. Like it's been said, you can use jumps to skip data, but it's better if you can simply place it somewhere it won't ever be executed.<br /><br />For example, this is OK:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp;lda #$09<br />&nbsp; &nbsp;sta $2005<br />&nbsp; &nbsp;jmp Continue<br /><br />.db $44, $32, $50, $86<br /><br />Continue:<br />&nbsp; &nbsp;lda #$23<br />&nbsp; &nbsp;sta $2005</div>
<br />Because you are telling the CPU to skip over the data. But it's better that you simply place all the data at the end or between functions, where the CPU will never go by itself.
<br />
<br />If you look at a <a href="http://www.obelisk.demon.co.uk/6502/reference.html" class="postlink">reference like this</a> you'll notice that each instruction has a list of opcodes it can turn into depending on the addressing mode. It's an interesting read if you want to know more about how CPUs work, but you don't have to memorize those codes. Assemblers exist exactly so that you don't have to memorize them, but as a programmer it's good that you understand that in the end it all becomes a sequence of numbers, without any sort of differentiation between code, graphics and other data. It's the responsibility of the programmer to make that differentiation, by structuring their programs well and interpreting each kind of data according to what it is.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>3</strong> of <strong>3</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>