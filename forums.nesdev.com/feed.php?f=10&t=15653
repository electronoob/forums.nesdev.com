<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=10&amp;t=15653" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2017-03-11T11:25:27-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=10&amp;t=15653</id>
<entry>
<author><name><![CDATA[FARID]]></name></author>
<updated>2017-03-11T11:25:27-07:00</updated>
<published>2017-03-11T11:25:27-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=15653&amp;p=190910#p190910</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=15653&amp;p=190910#p190910"/>
<title type="html"><![CDATA[NES Programming Tutorial : Move Background]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=15653&amp;p=190910#p190910"><![CDATA[
<div class="codetitle"><b>Code:</b></div><div class="codecontent">;NES Programming Tutorial<br />;Level 6 : Move Background<br />;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;<br />;Constants<br />;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;<br />;Variables<br />L_byte         = $0000<br />H_byte         = $0001<br />bg_X_pos       = $0002<br />bg_Y_pos       = $0003<br />NMI_index      = $0004<br />;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;<br />;iNES header data<br />;32KB PRG + 8KB CHR + NROM-256 + Vertical Mirroring<br />  .db $4E,$45,$53,$1A,$02,$01,$01,$00<br />  .db $00,$00,$00,$00,$00,$00,$00,$00<br />;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;<br />;PRG codes $8000 ~ $FFFF<br />  .base $8000<br /><br />RESET:<br />   SEI<br />   CLD<br /><br />;Turn off NMI and rendering<br />   LDA #%00000000<br />   STA $2000<br />   LDA #%00000000<br />   STA $2001<br /><br />;PPU warm up<br />   LDA $2002<br />vBlank_wait1:<br />   BIT $2002<br />   BPL vBlank_wait1<br />vBlank_wait2:<br />   BIT $2002<br />   BPL vBlank_wait2<br /><br />;Clear RAM<br />   LDA #$00<br />   LDX #$00<br />clear_loop:<br />   STA $0000, X<br />   STA $0100, X<br />   STA $0200, X<br />   STA $0300, X<br />   STA $0400, X<br />   STA $0500, X<br />   STA $0600, X<br />   STA $0700, X<br />   INX<br />   CPX #$00<br />   BNE clear_loop<br /><br />;Name table + Attribute<br />   LDA $2002<br />   LDA #$20<br />   STA $2006<br />   LDA #$00<br />   STA $2006<br />   LDA #&lt;bg_nam<br />   STA L_byte<br />   LDA #&gt;bg_nam<br />   STA H_byte<br />   LDX #$00<br />   LDY #$00<br />nam_loop:<br />   LDA ($00), Y<br />   STA $2007<br />   INY<br />   CPY #$00<br />   BNE nam_loop<br />   INC H_byte<br />   INX<br />   CPX #$04<br />   BNE nam_loop<br /><br />;Name table + Attribute 2<br />   LDA $2002<br />   LDA #$24<br />   STA $2006<br />   LDA #$00<br />   STA $2006<br />   LDA #&lt;bg_nam_2<br />   STA L_byte<br />   LDA #&gt;bg_nam_2<br />   STA H_byte<br />   LDX #$00<br />   LDY #$00<br />nam_loop_2:<br />   LDA ($00), Y<br />   STA $2007<br />   INY<br />   CPY #$00<br />   BNE nam_loop_2<br />   INC H_byte<br />   INX<br />   CPX #$04<br />   BNE nam_loop_2<br /><br />;Background color setup<br />   LDA $2002<br />   LDA #$3F<br />   STA $2006<br />   LDA #$00<br />   STA $2006<br />   LDX #$00<br />bg_pal_loop:<br />   LDA bg_pal, X<br />   STA $2007<br />   INX<br />   CPX #$10<br />   BNE bg_pal_loop<br /><br />;Reset Scroll<br />   LDA #$00<br />   STA $2005<br />   LDA #$00<br />   STA $2005<br />   <br />;Turn on NMI and rendering<br />   LDA #%10000000<br />   STA $2000<br />   LDA #%00001010<br />   STA $2001<br /><br />;Infinite loop<br />Forever:<br /><br />;Move background<br />   JSR vblank_wait<br />   INC bg_X_pos<br />   LDA bg_X_pos<br />   STA $2005<br />   LDA #$00<br />   STA $2005<br /><br />   JMP Forever<br />;---------------------------;<br />vblank_wait:<br />   LDA NMI_index<br />not_yet:<br />   CMP NMI_index<br />   BEQ not_yet<br />   RTS   <br />;---------------------------;<br />NMI:<br />   INC NMI_index<br />   RTI<br />;---------------------------;<br />IRQ:<br />   RTI<br />;---------------------------;<br />bg_nam:<br />  .incbin &quot;mario_bg.nam&quot;<br /><br />bg_nam_2:<br />  .incbin &quot;mario_bg_2.nam&quot;<br /><br />bg_pal:<br />  .incbin &quot;mario_bg.pal&quot;<br />;---------------------------;  <br />  .pad $FFFA,$FF   <br />;Vectors<br />  .org $FFFA<br />  .dw NMI<br />  .dw RESET<br />  .dw IRQ<br />;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;<br />;CHR data $0000 ~ $1FFF<br />  .base $0000<br />  .incbin &quot;mario_bg.chr&quot;<br />  .pad $2000,$FF<br /></div><br /><br />Explanation :<br /><br />* We enable NMI by setting the 7th bit of $2000<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">   LDA #%10000000<br />   STA $2000</div><br /><br />* In this level we are going to use another background<br /><br />* The data of second background (name table) is stored in the PPU memory from $2400 to $2800 (1KB)<br /><br />* Extract its data from &quot;Super Mario Bros. (W) [!].nes&quot; and save it as mario_bg_2.nam<br /><br />* Attach its data to the source code<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">bg_nam_2:<br />  .incbin &quot;mario_bg_2.nam&quot;</div><br /><br />* With ;Name table + Attribute 2 codes we transfer the second background data to PPU memory (from $2400 to $2800)<br /><br />* At first this background is outside of screen and is not visible<br /><br />* We have to scroll the screen to show the second background<br /><br />* By scrolling the background actually we are updating the graphic on screen, right? So we have to do it in vBlank period<br /><br />* So we have to detect when vblank happens<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NMI:<br />   INC NMI_index<br />   RTI</div><br /><br />* We use a variable, each time vblank happens this variable increase<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">vblank_wait:<br />   LDA NMI_index<br />not_yet:<br />   CMP NMI_index<br />   BEQ not_yet<br />   RTS  <br /></div><br /><br />* With this code we check the variable, we keep looping until it changes which shows a vblank period just has happened  <br /><br />* Need more info about this method? then read this : <a href="https://wiki.nesdev.com/w/index.php/NMI" class="postlink">NMI</a><br /><br />* By using JSR ... RTS we make a subroutine. JSR jumps to a label, runs a block of code until it finds RTS then it goes back to its original code<br /><br />* This loops is infinite and we call it game engine. Here it is very simple. <br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">;Infinite loop<br />Forever:<br /><br />;Move background<br />   JSR vblank_wait<br />   INC bg_X_pos<br />   LDA bg_X_pos<br />   STA $2005<br />   LDA #$00<br />   STA $2005<br /><br />   JMP Forever<br /></div><br /><br />* Each time it waits for a new vblank period to start.<br /><br />* Then X coordinate increase by one, so first background moves one pixel to left and the second background appears from right side of screen<br /><br /><img src="https://wiki.nesdev.com/w/images/a/ae/SMB1_scrolling_seam.gif" alt="Image" /><br /><br />* With Vertical Mirroring we can scroll the background horizontally<br /><br />* With Horizontal Mirroring we can scroll the background vertically<br /><br />* Need more info? then read this : <a href="https://wiki.nesdev.com/w/index.php/PPU_scrolling" class="postlink">PPU scrolling</a><br /><br />/////////////////////////////////////////////////////////////////////////////////////////////////<br /><br />Exercise :<br /><br />Scroll the screen backward or from up to down.<br /><br />/////////////////////////////////////////////////////////////////////////////////////////////////<br /><br />Files :<br />asm6.exe<br />Assembler.bat<br />Game.asm<br />name.exe<br />Bg_Editor.bat<br />alleg42.dll<br />mario_bg.nam<br />mario_bg_2.nam<br />mario_bg.pal<br />mario_bg.chr<br /><br />/////////////////////////////////////////////////////////////////////////////////////////////////<br /><br />Former Level : <a href="http://forums.nesdev.com/viewtopic.php?f=10&amp;t=15648" class="postlink">NES Programming Tutorial : Background</a><br />Next Level : <a href="http://forums.nesdev.com/viewtopic.php?f=10&amp;t=15647" class="postlink">NES Programming Tutorial : Sprite</a><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4330">FARID</a> — Sat Mar 11, 2017 11:25 am</p><hr />
]]></content>
</entry>
</feed>