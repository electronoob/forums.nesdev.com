<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Simple questions</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Simple questions</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=3&amp;t=5638">http://forums.nesdev.com/viewtopic.php?f=3&amp;t=5638</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>2</strong> of <strong>2</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Fri Oct 16, 2009 9:37 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">koitsu wrote:</div><div class="quotecontent"><div class="quotetitle">tepples wrote:</div><div class="quotecontent">All one has to do is make some timing tests involving single instructions split across a boundary and run them on a PowerPak (or the TG16 counterpart).</div><br />I don't know how this would work, or what the PowerPak provides that would allow for detection of a single cycle difference.  Clue me in.</div>
<br />How do you think Blargg's CPU timing test ROMs work?
<br />
<br />The NES PPU draws one scanline in the time it takes the CPU to execute 106.56 (PAL) or 113.67 (NTSC) cycles. So run a loop 256 times, and it'll take at least two scanlines longer if each iteration is one cycle longer. That's enough to make the loop finish before or after the sprite 0 hit.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>koitsu</b> [ Fri Oct 16, 2009 10:29 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent"><div class="quotetitle">koitsu wrote:</div><div class="quotecontent"><div class="quotetitle">tepples wrote:</div><div class="quotecontent">All one has to do is make some timing tests involving single instructions split across a boundary and run them on a PowerPak (or the TG16 counterpart).</div><br />I don't know how this would work, or what the PowerPak provides that would allow for detection of a single cycle difference.  Clue me in.</div><br />How do you think Blargg's CPU timing test ROMs work?</div><br /><br />I have no idea because I haven't used them and I have no idea how such a thing would work anyway, hence my "clue me in".<br /><br /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">The NES PPU draws one scanline in the time it takes the CPU to execute 106.56 (PAL) or 113.67 (NTSC) cycles. So run a loop 256 times, and it'll take at least two scanlines longer if each iteration is one cycle longer. That's enough to make the loop finish before or after the sprite 0 hit.</div>
<br />
<br />Hmm, I kind of see where you're going with this.  I understand the purpose of said 256-iteration loop is to provide "more evidence" confirming/denying the cycle penalty.  But I don't understand what sprite 0 hit has to do with this.
<br />
<br />I suppose you could say I'm questioning the accuracy of such a method.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Fri Oct 16, 2009 11:01 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />From nestech 2.0:
<br /><div class="quotetitle">koitsu wrote:</div><div class="quotecontent"><strong>L. Sprite #0 Hit Flag</strong><br />---------------------<br />The PPU is capable of figuring out where Sprite #0 is, and stores<br />it's findings in D6 of $2002. The way this works is as follows:<br /><br />The PPU scans for the first actual non-transparent "sprite pixel" and<br />the first non-transparent "background pixel." A "background pixel" is<br />a tile which is in use by the Name Table. Remember that colour #0<br />defines transparency.<br /><br />The pixel which causes D6 to be set *IS* drawn.<br /></div>
<br />D6 turns off at the end of vertical blanking and on once the PPU draws these overlapping opaque pixels. So we can carefully plan the execution of a loop so that it starts with the raster in a known position and finishes <em>before</em> the flag turns on if the CPU waits 256 penalty cycles (one for each iteration), or <em>after</em> the flag turns on if the CPU does not wait the extra cycles.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tomaitheous</b> [ Sat Oct 17, 2009 1:35 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Simple questions</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">koitsu wrote:</div><div class="quotecontent">No offence intended -- but comparing the PCE's incredibly custom HuC6280A to that of an NMOS 6502 is pretty ballsy, especially since the PCE's CPU is CMOS to boot.  Hudson's processor is massively custom in many ways.<br /></div><br /><br /> How is it ballsy? All the normal extra cycles under certain conditions of the original 65c02, are executed in full on the 6280. The 6280 might be custom, but it's still based on Rockwell's 65C02 IP. It's not some microcoded compatible 65x. I'm saying there's more than a passing coincidence.<br /><br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">What makes you think the CPU logic for page boundary crossing is the same for instruction (opcode/operands) fetching as it is indexed opcodes?  We don't know this.</div><br /><br />Well; everything else in the processor is 8bit, it was made as cheaply as possible (and that could be an understatement), having a single 8bit incrementor for the PC fits in with the rest. But, I have read that the effective address calculation of indexing, didn't pass through the ALU - but a separate 8bit ADDER unit. Thus, no extra cycles for indexing (that doesn't cross a page boundary). It would make sense that the PC would also use this second ADDER unit as well, considering all the corners they were cutting. Yes - it's a lot of speculation and hearsay, but then there's the statement of Bxx taking an extra-extra cycle on page crossing and 6280 mysterious additional cycles that match up with 65x if you include page crossing penalties.<br /><br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I'd offer to contact Bill Mensch via WDC, but I'm of the realisation that it wouldn't do much good.<br /></div><br /><br /> That's not the same guy that stated in a recent online video interview, that any <em>serious</em> project for the 65x should be made with sweet16 - is it? For a man that had a hand in designing this legacy processor (if it's the same guy), he sure knows <em>little</em> about programming on these old processor. Sweet16 is pathetic. I close out the podcast after hearing that in the interview :/  What a jerk.<br /><br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Someone would really need to bust out an oscilloscope or some kind of logic analyser to figure it out.  Bunnyboy?  <img src="./images/smilies/icon_smile.gif" alt=":-)" title="Smile" /></div>
<br />
<br /> Logic analyzer would be the best idea. Loops and visual conformation are inaccurate. Especially for this conversation. I mean, the amount of impact of what we are talking about would be extremely tiny. Charles MacDonald had the right idea. He underclocked the PCE processor with a 600khz clock and used a logic analyzer. Same should be done with the NES.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sat Oct 17, 2009 7:22 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Simple questions</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tomaitheous wrote:</div><div class="quotecontent">Well; everything else in the processor is 8bit, it was made as cheaply as possible (and that could be an understatement), having a single 8bit incrementor for the PC fits in with the rest.</div><br />More than likely, there's an 8-bit incrementor for both the lower and upper bytes of the PC, and the upper result isn't used unless the old value of the lower byte is $FF. Some behaviors of the unofficial instructions involve ((PC&gt;&gt;8)+1), which is more evidence for this second incrementor's presence.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Logic analyzer would be the best idea. Loops and visual conformation are inaccurate. Especially for this conversation. I mean, the amount of impact of what we are talking about would be extremely tiny.</div>
<br />If the extra cycle happens all the time under those conditions, then in what way would a loop repeatedly triggering those precise conditions be inaccurate?

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>2</strong> of <strong>2</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>