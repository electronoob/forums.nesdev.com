<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Nerdy night 4, sprites</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Nerdy night 4, sprites</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=10&amp;t=11193">http://forums.nesdev.com/viewtopic.php?f=10&amp;t=11193</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>fsakura</b> [ Fri Apr 25, 2014 7:38 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Nerdy night 4, sprites</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I am following nerdy nights <a href="http://nintendoage.com/forum/messageview.cfm?catid=22&amp;threadid=6082" class="postlink">http://nintendoage.com/forum/messageview.cfm?catid=22&amp;threadid=6082</a><br /><br />It says writing to 4014 will copy sprites from 0200 in CPU memory to PPU.<br />I don't understand how that works internally. Well that's question for some other time.<br /><br />My question is, how did sprites got into 0x0200 in CPU in the first place? As far as I understand Sprites are in ROM's VROM.<br />Are sprites copied by default to memory 0x0200 after having &quot;.incbin&quot; in your program?<br /><br />Looks like there is something basic I do not understand!<br /><br />-fsakura

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Fri Apr 25, 2014 8:05 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Nerdy night 4, sprites</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />You're mixing things up here. What stays in VROM (or VRAM) are the sprite <strong>patterns</strong>, the tiles that can be used to draw sprites. What is copied from $0200-$02FF to OAM is sprite data that tells the PPU which sprites to draw where.<br /><br />Your program (that means you!) is responsible for filling $0200-$02FF with meaningful data so that the sprites are displayed in the positions you want, using the plattes you want and flipped (or not) as you want.<br /><br />Here's how the data in $0200-$02FF is supposed to be arranged: <!-- m --><a class="postlink" href="http://wiki.nesdev.com/w/index.php/PPU_OAM">http://wiki.nesdev.com/w/index.php/PPU_OAM</a><!-- m --><br /><br />In simple demos, this data is usually static and can be copied directly from the ROM, but in actual games there's usually a routine responsible for processing game objects and generating OAM data from meta-sprite definitions, based on the coordinates of the objects in the game world.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>fsakura</b> [ Fri Apr 25, 2014 8:35 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Nerdy night 4, sprites</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Thanks.<br /><br />So it means, data in 0x0200 - range is kind of meta data about sprite.<br /><br />and actual sprite is found by using 3rd attribute i.e. tile number. But how does PPU know which tile number corresponds to which part of the sprite (mario)?<br /><br />Also, where does .incbin copy its data?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Fri Apr 25, 2014 8:56 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Nerdy night 4, sprites</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">fsakura wrote:</div><div class="quotecontent">So it means, data in 0x0200 - range is kind of meta data about sprite.</div><br />Yeah, you have to somehow tell the PPU what goes where, and this is how you do it for sprites. The $0200-$02FF range isn't mandatory though, any other memory page will work ($XX00-$XXFF), even if it's ROM, you just have to write the page number to $4014 when you do the DMA. Page $02 just happens to be popular for this specific purpose, but a few games are known to use other pages.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">and actual sprite is found by using 3rd attribute i.e. tile number. But how does PPU know which tile number corresponds to which part of the sprite (mario)?</div><br />You might be thinking of Mario as one sprite, but he's actually made from 4 or 8 sprites. The PPU has no idea that this group of 8x8 sprites forms a single game character, because it doesn't know the concept of a &quot;game character&quot;. It knows 8x8-pixel squares and this is it. Your program is responsible for generating the OAM data for all 4 (or 8) small sprites that form the larger character.<br /><br />This is why games often use a meta-sprite system. This way they can define groups of sprites with coordinates relative to an object's position in ROM, and a routine will take care of calculating the absolute positions of all sprites and writing the OAM data to RAM every frame. This might be more low level than you were expecting, but that's the NES for you. It provides a rudimentary video system for you to draw things, but it has absolutely no understanding of specific game concepts, it has no idea what the pictures it draws represent... most of the time you have to write your own code to simulate more complex structures, and translate those to the low level data the NES expects.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Also, where does .incbin copy its data?</div><br />.incbin doesn't copy anything anywhere, it's an assembler directive that includes a binary file in your ROM. This makes the contents of the file accessible to the program, available to be used, but, yet again, your program is responsible for copying it to wherever you want or making use of it in place.<br /><br />Almost nothing is automatic with the NES, nearly everything must be managed by code YOU write.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Fri Apr 25, 2014 9:57 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Nerdy night 4, sprites</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">Almost nothing is automatic with the NES, nearly everything must be managed by code YOU write.</div><br />[w☥]<br />The NES does a few things automatically: generating flipped versions of sprite tiles (not automatic on Sega Master System and Game Gear), compositing sprites over the background in the first place (not automatic on Apple II, ZX Spectrum, IBM PC, or anything else lacking the display list concept), loading tiles into video memory (not automatic anywhere but NES and Neo Geo), generating simple audio waveforms (not automatic on anything since the Super NES, except for handhelds), and even just rendering the next scanline (not automatic on Atari 2600).<br />[/w☥]<br /><br />tl;dr: Tokumaru is right that the NES doesn't update your display list automatically, but it could be worse.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Fri Apr 25, 2014 11:15 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Nerdy night 4, sprites</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I get your point, but all of those things (except the audio part, but nearly everything I say about the video is true for the audio as well) are part of the &quot;rudimentary video system&quot; I mentioned before. I mean &quot;rudimentary&quot; when compared to today's video systems, because back then each console had well defined limitations that affected how their graphics looked, and that was pretty much everything the consoles offered for you to build a game on. These consoles are machines that draw pictures of varying complexities, they do nothing to help you run games on them or animate these pictures over time. They completely ignore the concepts of physics, level maps, solidity, objects, etc., all of that has to be implemented by the programmer.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sat Apr 26, 2014 6:50 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Nerdy night 4, sprites</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Right. Those concepts are handled by the game engine. Currently there happen not to be a lot of free, reusable game engines for NES the way there are for PC. I can explain why I think this is the case if you want; if so, feel free to open a new topic asking this question.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>