<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=9&amp;t=8941" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2012-05-26T14:41:22-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=9&amp;t=8941</id>
<entry>
<author><name><![CDATA[infiniteneslives]]></name></author>
<updated>2012-05-26T14:40:15-07:00</updated>
<published>2012-05-26T14:40:15-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8941&amp;p=94583#p94583</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8941&amp;p=94583#p94583"/>
<title type="html"><![CDATA[Use for Expansion Port A15 Signal]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8941&amp;p=94583#p94583"><![CDATA[
Very interesting solution!<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4832">infiniteneslives</a> — Sat May 26, 2012 2:40 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[chykn]]></name></author>
<updated>2012-05-26T14:41:22-07:00</updated>
<published>2012-05-26T13:57:38-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8941&amp;p=94578#p94578</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8941&amp;p=94578#p94578"/>
<title type="html"><![CDATA[Use for Expansion Port A15 Signal]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8941&amp;p=94578#p94578"><![CDATA[
Found a very good use for the A15 signal on the expansion port.  I'm using it in conjunction with one of the 3 $4016 latch bits &amp; Joy2Strobe to write a full byte of data to the expansion port WITHOUT using any signals from the cart.<br /><br />The basic idea is this...<br />- One of the latch bits (I'm using b1) is used as a R/W flag to the peripheral.  If it's low, you're doing a normal read from $4017.  If it's high, you want to write.<br />- A buffer on the expansion port device latches the PRG bus when A15 goes low.<br />- When Joy2Strobe ($4017 read) goes low, the peripheral accepts the last byte in the buffer as input.<br /><br />There are a couple caveats. ..<br />- You pretty much have to use a programmable logic device due to the number of discrete logic chips this setup would require.<br />- A peripheral and the second controller port could not be used at the same time.  I'm sure there is a way to detect the presence of a device on the controller port and disable the peripheral, though.<br />- The code performing the write must be executed from $8000-$FFFF.  You can't load code to, say, $6000-$7FFF and execute it from there.<br /><br />Good news is that any cart can talk to a device on the expansion port without doing serial writes.  No more need to send /CE and R/W signals down the Cart-EXP pins!  <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent"> // Read a byte from Joy2 port and put it in scratchVar &#40;normal read&#41;<br /> lda $4017<br /> sta scratchVar<br /><br /> // Set Latch.b1 High to tell the peripheral we want to write<br /> lda #%00000010<br /> sta $4016<br /><br /> // Load a byte from an address under $8000 &#40;we'll read the WRAM&#41;<br /> lda $6000<br /><br /> // Trigger the Joy2 strobe; this tell the peripheral to output since b1 is High<br /> lda $4017<br /><br /> // Set Latch.b1 back to Low<br /> lda #%00000000<br /> sta $4016</div><br /><br />I've been running a test transfer for about an hour now without any hiccups.  For those who are curious, I'm using a Xilinx XC9572XL-VQ44 because it has 5v tolerant inputs.  That and it's the largest one I could find that would still fit on a PCB plugged into the EXP port.  All but about 5 pins are used...<br /><br />- 8 pins NES PRG Bus<br />- 5 pins NES Joy2In bits<br />- 1 pin NES Joy2Strobe<br />- 1 pin NES A15<br /><br />- 8 pins PIC32 data bus<br />- 1 pin CPLD to PIC INT0<br />- 1 pin CPLD to PIC R/W<br />- 1 pin PIC to CPLD /CE<br />- 1 pin PIC to CPLD R/W<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4242">chykn</a> — Sat May 26, 2012 1:57 pm</p><hr />
]]></content>
</entry>
</feed>