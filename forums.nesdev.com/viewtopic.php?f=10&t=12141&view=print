<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - I don't understand this bit of NES asm</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">I don't understand this bit of NES asm</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=10&amp;t=12141">http://forums.nesdev.com/viewtopic.php?f=10&amp;t=12141</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>mreiland</b> [ Wed Dec 17, 2014 3:33 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>I don't understand this bit of NES asm</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I'm reading through this guide here -- <!-- m --><a class="postlink" href="http://bbitmaster.com/neshackingtutorial3.txt">http://bbitmaster.com/neshackingtutorial3.txt</a><!-- m --><br /><br />In it is the following listing<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">	.ORG $8000<br />	LDX #$05<br />	STA $01<br />	LDA #$03<br />	CPX $01<br />	BEQ theend<br />	DEC $01<br />	CPX $01<br />	BEQ theend<br />	DEC $01<br />	CPX $01<br />	BEQ theend<br />	DEC $01<br />	CPX $01<br />	BEQ theend<br />theend:<br />	BRK<br /></div><br /><br />The initial STA $01 statement.  I have no idea what the accumulator value is at this point.  Does it get zero'd out?  I don't think the guides have mentioned that, so it feels like it should be loading a trash value into that memory address.<br /><br />Can someone clarify what the startup behavior for the A register is supposed to be?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Wed Dec 17, 2014 3:41 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: I don't understand this bit of NES asm</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />There is nothing particular in A. It looks like this was just here as an &quot;example&quot; to explain the compare instructions.<br /><br />If you were to actually code something like that &quot;for real&quot; it'd likely be poor practice. Not to mention that I don't understand why he ends up his examples with the software interrupt &quot;BRK&quot; instruction, probably a way to indicate that his example is terminated, but it's a very poor way of doing so, since we don't use BRK like that when coding &quot;for real&quot;.<br /><br />This makes me doubt the quality of this tutorial at 1st glance, but I might be completely wrong.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>mreiland</b> [ Wed Dec 17, 2014 3:55 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: I don't understand this bit of NES asm</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Thank you, I found it really heard to follow since I couldn't actually predict what the values in the registers were going to be.<br /><br />He did explain the BRK op earlier in the tutorial.  He recommended a specific 6502 emulator that uses BRK, but he specifically stated the NES never uses it.  I just prefer running such simple examples through my head to make sure I actually understand what's going on so I opted not to use the emulator.<br /><br />Do you have any alternative tutorials that would be more useful?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Wed Dec 17, 2014 6:55 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: I don't understand this bit of NES asm</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">Not to mention that I don't understand why he ends up his examples with the software interrupt &quot;BRK&quot; instruction, probably a way to indicate that his example is terminated, but it's a very poor way of doing so, since we don't use BRK like that when coding &quot;for real&quot;.</div><br />Some simulators see the BRK instruction as the end of the program. When you're studying assembly in a simulator, you probably just want to run your code and see the final results, so having the CPU run indefinitely and stopping only on manual breaks is not desirable, hence the repurposing of the BRK instruction. In the simulator I used for learning, this was an option that could be turned off.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dwedit</b> [ Wed Dec 17, 2014 6:58 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: I don't understand this bit of NES asm</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />NES games could use the BRK instruction if they wanted to, it just triggers an interrupt, and sets a flag somewhere to indicate that the interrupt was generated by a BRK instruction.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>mikaelmoizt</b> [ Wed Dec 17, 2014 9:29 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: I don't understand this bit of NES asm</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><strong>&quot;ROM hacking like a Pro&quot;</strong> - sounds awesome.<br /><br />The code snippet posted probably confused more than it taught  <img src="./images/smilies/icon_confused.gif" alt=":?" title="Confused" /><br />Not that I don't understand the concepts of teaching clumsy code layout just for clarity, but this was a bit unclear, even to me.<br /><br />It doesn't work the way the author wanted it to I guess. <br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">.org $8000 ; a=? x=? y=? <br />&nbsp; &nbsp;<br />&nbsp;ldx #$05 ; a=? x=5 y=?<br />&nbsp;sta $01&nbsp; &nbsp;; $01 = ?<br />&nbsp;lda #$03 ; a=3 x=5 y=?<br />&nbsp;cpx $01&nbsp; &nbsp;; x=$01? - in other words $01 = #05?<br />&nbsp;beq theend ; if equal go to &quot;theend&quot; <br />&nbsp;dec $01 ; $01=$01-#01 (still unknown)&nbsp; &nbsp; &nbsp; &nbsp;<br />&nbsp;cpx $01 ; x=$01? - in other words $01 = #05? <br />&nbsp;beq theend ; if equal go to &quot;theend&quot;<br />&nbsp;dec $01 ; $01=$01-#01 (still unknown..)<br />&nbsp;cpx $01 ; x=$01? - in other words $01 = #05?<br />&nbsp;beq theend ; if equal go to &quot;theend&quot;<br />&nbsp;dec $01 ; $01=$01-#01 (still very much unknown..)<br />&nbsp;cpx $01 ; x=$01? - in other words $01 = #05?<br />&nbsp;beq theend ; if equal go to &quot;theend&quot;. if condition not true proceed and...<br />theend: ; ...end up here anyway.<br />&nbsp;brk</div><br /><br />Slightly offtopic: what exactly are the contents of a, x &amp; y after <strong>startup</strong>? It seems to be a mystery..

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Wed Dec 17, 2014 9:35 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: I don't understand this bit of NES asm</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Values of A, X, Y, P, and S are <a href="http://en.wikipedia.org/wiki/Unspecified_behavior" class="postlink">unspecified</a> at power on except that bit 3 of P (I, interrupt priority) is 1 (allow NMI only), not 0 (allow NMI and IRQ).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>mikaelmoizt</b> [ Wed Dec 17, 2014 10:08 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: I don't understand this bit of NES asm</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">Values of A, X, Y, P, and S are <a href="http://en.wikipedia.org/wiki/Unspecified_behavior" class="postlink">unspecified</a> at power on except that bit 3 of P (I, interrupt priority) is 1 (allow NMI only), not 0 (allow NMI and IRQ).</div><br /><br />I see. Thank you. This <a href="http://stackoverflow.com/questions/16913423/why-is-the-initial-state-of-the-interrupt-flag-of-the-6502-a-1" class="postlink">thread</a> on Stack Overflow also shed some light on this.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Movax12</b> [ Wed Dec 17, 2014 11:55 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: I don't understand this bit of NES asm</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />This example code is terrible. This is how it looks in high-level pseudo code:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">x = 5<br />location01 = a&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ; a is unknown<br />a = 3<br />if x &lt;&gt; location01<br />&nbsp; &nbsp; location01 = location01 - 1<br />&nbsp; &nbsp; if x &lt;&gt; location01&nbsp; &nbsp;<br />&nbsp; &nbsp; &nbsp; &nbsp; location01 = location01 - 1<br />&nbsp; &nbsp; &nbsp; &nbsp; if x &lt;&gt; location01<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; location01 = location01 - 1&nbsp; &nbsp; &nbsp; &nbsp; <br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if x &lt;&gt; location01<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; endif <br />&nbsp; &nbsp; &nbsp; &nbsp; endif<br />&nbsp; &nbsp; endif<br />endif<br /></div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Wed Dec 17, 2014 2:16 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: I don't understand this bit of NES asm</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Dwedit wrote:</div><div class="quotecontent">NES games could use the BRK instruction if they wanted to, it just triggers an interrupt, and sets a flag somewhere to indicate that the interrupt was generated by a BRK instruction.</div><br />But the only one I'm aware of that actually does that is Galaxian, probably because of a 6502 design quirk related to when NMI and BRK execute at once.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Wed Dec 17, 2014 2:21 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: I don't understand this bit of NES asm</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Galaxian doesn't even use BRK... the IRQ vector points to the Reset handler, and the NMI handler tests B to make sure it's clear.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>mreiland</b> [ Thu Dec 18, 2014 5:46 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: I don't understand this bit of NES asm</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Thanks guys.  For me I like knowing the inputs and outputs for such snippets so I can &quot;execute&quot; it in my head and verify if I'm understanding correctly.  For me, anything else and I might get the overall gist of it, but I'll miss details.<br /><br />I'm kind of going through sticky and running through some of the tutorials there, but a few of the links are dead.<br /><br />My goal is to start piecing together a 6502 emulator as I learn, do you guys have any recommendations on specific tools I should be using, such as assemblers?  I haven't decided if I want to dev in the new VS Pro Community or in an Arch Linux VM.  Which would you guys recommend?  I'm honestly more at home in Linux, but I work professionally in both environments.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>mikaelmoizt</b> [ Thu Dec 18, 2014 10:18 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: I don't understand this bit of NES asm</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Movax12 wrote:</div><div class="quotecontent">This example code is terrible. This is how it looks in high-level pseudo code:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">(code)<br /></div></div><br /> <img src="./images/smilies/icon_lol.gif" alt=":lol:" title="Laughing" /> <br />How about this?<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">zpg equ $0<br /><br />macro sub_checkx<br />&nbsp;dec zpg+1<br />&nbsp;cpx zpg+1<br />&nbsp;beq theend<br />endm<br /><br />.org $8000<br />&nbsp;ldx #$05<br />&nbsp;sta zpg+1<br />&nbsp;lda #$03<br />&nbsp;cpx zpg+1<br />&nbsp;beq theend<br /><br />rept 03<br />&nbsp;sub_checkx<br />endr<br /><br />theend:<br />&nbsp;brk</div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>koitsu</b> [ Thu Dec 18, 2014 12:07 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: I don't understand this bit of NES asm</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Remove the excessive <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">zpg+1</tt> everywhere and just say <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">zpg equ $01</tt> instead.  I seriously read that and was like &quot;why is there +1 used everywhere?  Where is that in the original code?  Oh, I see, it's because ZP location $01 is being used originally&quot;.<br /><br />Get rid of the use of macros.<br /><br />Get rid of the <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">rept</tt> stuff -- that is assembler pseudo-code that varies from assembler to assembler and is not teaching the person anything about 6502 or the NES.<br /><br />Get rid of the use of <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">brk</tt> -- just use <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">jmp theend</tt> and indicate in a comment that this is just an infinite loop as a placeholder.  BRK causes enough controversy/discussion here amongst technically-savvy folks, someone learning 6502/NES is not going to understand what it's for, why it should be there, etc..  Trust me.<br /><br />Remember, folks: this is <strong>training/learning material for someone learning 6502 / NES</strong>.  Making it overly complex through assembly syntaxes/etc. that the user may not know (at this point in their educational training) does not benefit anyone in any way.<br /><br />When writing documentation for training purposes, it's best to approach things step-by-step and very gradually, not &quot;so we're gonna teach you 9 different things here simultaneously!&quot;.  If you want to teach someone later on about macros and <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">rept</tt>, great.  But from what I can discern the training material here is solely about learning 6502 and the NES console, so staying focused on those two things is best.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>mikaelmoizt</b> [ Thu Dec 18, 2014 1:37 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: I don't understand this bit of NES asm</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">koitsu wrote:</div><div class="quotecontent">Remember, folks: this is <strong>training/learning material for someone learning 6502 / NES</strong>.  Making it overly complex through assembly syntaxes/etc. that the user may not know (at this point in their educational training) does not benefit anyone in any way.<br /></div><br />Right. Just kidding a little because the example itself didn't make much sense and might aswell be nonsense. Anyway... Here is what I <strong>think </strong>the author is trying to teach<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">.org $8000<br />&nbsp;ldx #$00<br />&nbsp;lda #$05<br />&nbsp;sta $01<br /><br />; set up a loop to run 5 times <br /><br />theloop:<br />&nbsp;dec $01<br />&nbsp;cpx $01 ; rather than comparing x with immediate value (#$), compare with what is stored memory location $01 <br />&nbsp;bne theloop<br />&nbsp;<br />theend:<br />&nbsp;jmp theend ; eternal loop - instead of using brk opcode</div><br /><br />Here is a nice place to start learning assembler <a href="http://skilldrick.github.io/easy6502/" class="postlink">http://skilldrick.github.io/easy6502/</a>

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>