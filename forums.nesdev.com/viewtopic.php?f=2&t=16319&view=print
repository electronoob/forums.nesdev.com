<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - x and y registers used as a &quot;this&quot; vs. &quot;that&quot; idiom.</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">x and y registers used as a &quot;this&quot; vs. &quot;that&quot; idiom.</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=16319">http://forums.nesdev.com/viewtopic.php?f=2&amp;t=16319</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>GradualGames</b> [ Mon Aug 07, 2017 7:56 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>x and y registers used as a &quot;this&quot; vs. &quot;that&quot; idiom.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />For both my previous games, the &quot;x&quot; register always meant: &quot;This entity&quot; during my entity update loop. If I wanted to parameterize a child entity, I had to save the x register on the stack, set up the child entity, then restore the x register. For my new game, I now have my &quot;entity_spawn&quot; routine work entirely with the y register. Now it just feels a heck of a lot cleaner to spawn child entities, no stack required...I can just transfer straight from the parent entity, indexed by x being &quot;this&quot; entity, to the child entity, indexed by y being &quot;that&quot; entity.<br /><br />This feels very idiomatic to me, like the &quot;right way&quot; to use 6502 in this particular instance. I.e. all previous ways I've designed this type of code were definitely clumsier in some fashion.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Mon Aug 07, 2017 8:02 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: x and y registers used as a &quot;this&quot; vs. &quot;that&quot; idiom.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />My native langauge do not have direct equivalents of words such as &quot;this&quot; or &quot;that&quot;, so it makes no sense to me, but if it works for you then fine.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>GradualGames</b> [ Mon Aug 07, 2017 8:03 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: x and y registers used as a &quot;this&quot; vs. &quot;that&quot; idiom.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">My native langauge do not have direct equivalents of words such as &quot;this&quot; or &quot;that&quot;, so it makes no sense to me, but if it works for you then fine.</div><br /><br />I would define &quot;that&quot; as &quot;another this distinct from the original this.&quot;

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Mon Aug 07, 2017 8:11 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: x and y registers used as a &quot;this&quot; vs. &quot;that&quot; idiom.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I too have used X and Y as &quot;this&quot; and &quot;that&quot;. I also tend to use X as &quot;this&quot; and Y as an index into a table of properties of, say, each frame of animation of &quot;this&quot;.<br /><br />In <em>The Curse of Possum Hollow</em>, spawning a child entity in my engine is fairly heavyweight if has to be spawned immediately, as opposed to possibly several frames from now. (It may take a few frames for one of six slots in the active object table or one of two enemy CHR windows to become available.) So there's one routine that spawns an entity &quot;whenever&quot; by adding it to a queue that's checked every frame, quickly and using few registers. And there's another routine that spawns the enemy <em>right effing nyeaaouw</em> or returns an error code if there was a conflict keeping it from being spawned, so that the move routine can try again next frame. And there's a dedicated global variable for the index of the entity whose move routine is running, allowing move routines to restore X from that variable.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Mon Aug 07, 2017 9:07 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: x and y registers used as a &quot;this&quot; vs. &quot;that&quot; idiom.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I use X and Y as this and that sometimes too.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>adam_smasher</b> [ Mon Aug 07, 2017 9:27 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: x and y registers used as a &quot;this&quot; vs. &quot;that&quot; idiom.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">My native langauge do not have direct equivalents of words such as &quot;this&quot; or &quot;that&quot;, so it makes no sense to me, but if it works for you then fine.</div><br />«Ceci» et «cela», n'est pas?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Mon Aug 07, 2017 10:53 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: x and y registers used as a &quot;this&quot; vs. &quot;that&quot; idiom.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Unless it's German, where <a href="https://en.wiktionary.org/wiki/dieser#German" class="postlink"><em>diese(r)</em></a> means both &quot;this&quot; and &quot;that&quot;, and <em><a href="https://en.wiktionary.org/wiki/jener#German" class="postlink">jene(r)</a></em> means only &quot;that&quot; but is rarely used in speech.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Pokun</b> [ Mon Aug 07, 2017 1:55 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: x and y registers used as a &quot;this&quot; vs. &quot;that&quot; idiom.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Swedish is pretty much like English in this case.<br /><br />Adding Japanese into the mix might mess things up though. Japanese has: &quot;kore&quot; (this), &quot;sore&quot; (that) and &quot;are&quot; (that over there). The last one is used for things that isn't particularly close to neither the speaker nor the listener. I think I'd use A for kore, X for sore and Y for are maybe, messing things up.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Mon Aug 07, 2017 1:56 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: x and y registers used as a &quot;this&quot; vs. &quot;that&quot; idiom.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I don't think either register should really get an exclusive semantic purpose like this. They aren't symmetrical so it doesn't make sense to me that one convention would fit every case.<br /><br />e.g. X can be used with INC, but Y cannot, etc. Whether this asymmetry matters depends very specifically on what you're doing with either of the two things you're indexing. I'd generally suggest starting with X by &quot;default&quot; for indexing fixed arrays, because it's got more powerful operations for that. (Y on the other hand is more powerful for pointers.)<br /><br />Once you have a pair of things to index, though, if it's as simple as a copy from one to another it doesn't really matter, and if it's not that simple there are situational advantages to both arrangements.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>GradualGames</b> [ Mon Aug 07, 2017 2:01 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: x and y registers used as a &quot;this&quot; vs. &quot;that&quot; idiom.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">rainwarrior wrote:</div><div class="quotecontent">I don't think either register should really get an exclusive semantic purpose like this. They aren't symmetrical so it doesn't make sense to me that one convention would fit every case.<br /><br />e.g. X can be used with INC, but Y cannot, etc. Whether this asymmetry matters depends very specifically on what you're doing with either of the two things you're indexing. I'd generally suggest starting with X by &quot;default&quot; for indexing fixed arrays, because it's got more powerful operations for that. (Y on the other hand is more powerful for pointers.)<br /><br />Once you have a pair of things to index, though, if it's as simple as a copy from one to another it doesn't really matter, and if it's not that simple there are situational advantages to both arrangements.</div><br />I don't think I took quite as hard line as that. I just said &quot;in this particular instance,&quot; implying it was idiomatic in the case I'm applying it to. All I mean by that is I can't think of a neater or cleaner way to accomplish what I'm doing.<br /><br />It feels natural partly because y follows x in the alphabet, and it further feels natural because most of the time, you'll be starting at some top level lookup table or array by addressing it directly, and then you might start picking addresses out of it and addressing those indirectly with y. Not saying that applies in all cases, but I'm wondering if that natural progression from &quot;top level lookup table -&gt; more detailed tables addressed indirectly&quot; was in the mind of the creator of the 6502, or not. It seems to imply a natural hierarchical traversal of data starting at a table you know about, proceeding to other tables you don't yet know about til you read about them.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Mon Aug 07, 2017 2:21 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: x and y registers used as a &quot;this&quot; vs. &quot;that&quot; idiom.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">GradualGames wrote:</div><div class="quotecontent">It seems to imply a natural hierarchical traversal of data starting at a table you know about, proceeding to other tables you don't yet know about til you read about them.</div><br />Well, I'd argue quite the opposite. Think of the very common case of unpacking from compressed data into your working structures. Compressed data comes in a stream, and pointers are usually the appropriate mechanism for reading serial data, so it <em>has</em> to be copying from a Y indexed pointer.<br /><br />There is no logic to their alphabetical order. That's entirely irrelevant to what you actually need to do with these registers.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Mon Aug 07, 2017 2:38 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: x and y registers used as a &quot;this&quot; vs. &quot;that&quot; idiom.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Pokun wrote:</div><div class="quotecontent">Japanese has: &quot;kore&quot; (this), &quot;sore&quot; (that) and &quot;are&quot; (that over there)</div><br />Portuguese has these 3 as well: isto, isso, aquilo.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Mon Aug 07, 2017 3:43 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: x and y registers used as a &quot;this&quot; vs. &quot;that&quot; idiom.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />To put my point a different way, I think X and Y do have some strong and useful connections to various methods of data storage.<br /><br />&quot;Source&quot; and &quot;destination&quot; are not types of data, though. Neither is &quot;this&quot;, &quot;that&quot; or &quot;the other&quot;. Even most copy operations are not copying between symmetrical equivalents, usually there is a transformation being done at the same time.<br /><br />What I'm talking about are factors like:<br /><ul><li>serial vs random acesss</li><li>fixed or pointer</li><li>under or over 256 entries</li><li>read only or read and write</li><li>compressed or uncompressed</li><li>list or tree etc.</li><li>preserved after read or not</li></ul><br />There's no general case for this. The source part of a &quot;copy&quot; has independent properties from the destination (though they can sometimes be the same). There's a lot of stuff that <em>either</em> X or Y can do, and several important things that <em>only</em> X or Y can do.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Sogona</b> [ Mon Aug 07, 2017 4:06 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: x and y registers used as a &quot;this&quot; vs. &quot;that&quot; idiom.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">Portuguese has these 3 as well: isto, isso, aquilo.</div>I remember learning something similar back when I took Spanish, that there were 3.<br /><br />So far I've only learned 2 in French, ce/ceci and ça/cela; so I don't understand what Bregalad's talking about when he said it wouldn't translate well. But I guess I can't really argue as he is a native speaker.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>GradualGames</b> [ Mon Aug 07, 2017 4:17 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: x and y registers used as a &quot;this&quot; vs. &quot;that&quot; idiom.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">rainwarrior wrote:</div><div class="quotecontent">To put my point a different way, I think X and Y do have some strong and useful connections to various methods of data storage.<br /><br />&quot;Source&quot; and &quot;destination&quot; are not types of data, though. Neither is &quot;this&quot;, &quot;that&quot; or &quot;the other&quot;. Even most copy operations are not copying between symmetrical equivalents, usually there is a transformation being done at the same time.<br /><br />What I'm talking about are factors like:<br /><ul><li>serial vs random acesss</li><li>fixed or pointer</li><li>under or over 256 entries</li><li>read only or read and write</li><li>compressed or uncompressed</li><li>list or tree etc.</li><li>preserved after read or not</li></ul><br />There's no general case for this. The source part of a &quot;copy&quot; has independent properties from the destination (though they can sometimes be the same). There's a lot of stuff that <em>either</em> X or Y can do, and several important things that <em>only</em> X or Y can do.</div><br /><br />Yeah I agree with all that. I guess what I'm really getting at is simply wondering what informed the design of the 6502. I suppose it perhaps mostly had to do with how expensive it was to design processors back then, but I wonder if they designed the instruction set with any particular use cases in mind. I.e. Were they informed by experience in any type of business related data processing for which their particular choices were particularly well suited? Or was it totally arbitrary and based only on : &quot;What is actually possible to support given how few logic units we can use to design this thing?&quot;<br /><br />Regardless of that though, a more solid point I could really make is that when one is a beginner with assembly language, one does things in a clumsy fashion, over-using the stack or what not, but when one gains experience, it becomes more clear how to use registers in clearer or more consistent/persistent way. That's probably what I should have said to begin with. I definitely hadn't intended to say that this applied everywhere.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>