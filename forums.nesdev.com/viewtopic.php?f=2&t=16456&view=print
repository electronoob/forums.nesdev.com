<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - NES: Technique for debugging CC65 code?</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">NES: Technique for debugging CC65 code?</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=16456">http://forums.nesdev.com/viewtopic.php?f=2&amp;t=16456</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tschak909</b> [ Tue Sep 05, 2017 11:05 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>NES: Technique for debugging CC65 code?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Hey guys,<br /><br />Does anyone have a technique for debugging CC65 code, specifically mapping variables to RAM so that I can e.g. watch and trap in FCEUX's debugger? Usually with 6502 assembler, the memory map is simple enough, I know where my variables are, at the very least, I can derive them from an output listing. Not so much for CC65... Can someone point me in the general direction, as I have a _really_ weird edge case in my maze traversal code for wizard of wor that I need to catch.<br /><br />-Thom

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Tue Sep 05, 2017 11:27 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: NES: Technique for debugging CC65 code?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Compile and/or assemble with debug information (-g), and tell the <a href="https://cc65.github.io/doc/ld65.html" class="postlink">linker</a> to output a label file (-Ln) or a debugging file (--dbgfile), whichever format seems more convenient; dbgfile has more info, slightly trickier to parse.<br /><br />Convert those labels to an <a href="http://www.fceux.com/web/help/NLFilesFormat.html" class="postlink">FCEUX debug file</a> and you can see those symbols directly in its debugger.<br /><br />A while ago I wrote a simple python <em>-Ln to .NL</em> parser for an example: <a href="http://forums.nesdev.com/viewtopic.php?t=11151" class="postlink">thread</a><br /><br />If all you're looking for is the address things end up at, though, you could just keep the label/debug files open in a text editor and search for them by name as you need their addresses.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>calima</b> [ Wed Sep 06, 2017 2:27 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: NES: Technique for debugging CC65 code?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />You get the map files as usual, &quot;-m mapfile&quot; and &quot;-vm&quot; for verbose maps to ld65/cl65. Note that only static/global vars can be tracked, stack vars change locations.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>dougeff</b> [ Wed Sep 06, 2017 4:38 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: NES: Technique for debugging CC65 code?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Also, in FCEUX, there is a way to record button presses, so set record...get the bug to happen...pause, rewind a few frames, turn on the trace logger, and run a trace on the exact frame (or 2) where the bug happens.<br /><br />I don't usually do this.<br /><br />Usually I have a dummy function I call &quot;debug()&quot;. All debug does is increment a known address. Then I place a call to debug() right before the code I'm checking. I can set a breakpoint for the address, and step through the code, while looking at the .s output file from the .c code.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>dustmop</b> [ Wed Sep 06, 2017 9:03 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: NES: Technique for debugging CC65 code?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I use this to get source-level debugging (original C source code visible in FCEUX's debugger):<br /><br /><!-- m --><a class="postlink" href="https://github.com/dustmop/annotatecc65">https://github.com/dustmop/annotatecc65</a><!-- m -->

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Wed Sep 06, 2017 9:29 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: NES: Technique for debugging CC65 code?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />NDX (<!-- m --><a class="postlink" href="https://kkfos.aspekt.fi/">https://kkfos.aspekt.fi/</a><!-- m -->) also supports source level debugging for C. It does kind of work, but I haven't tested it much. The main issue is that since there's a corresponding &quot;.s&quot; assembly source file for each compiled &quot;.c&quot; file, it will sometimes try to display the &quot;.s&quot; file even though it doesn't exist. I guess I should fix that some day...<br /><br />Watch window also works for statically allocated variables as long as you add a &quot;_&quot; before the variable names (variable &quot;foo&quot; becomes &quot;_foo&quot;). Stack variables don't work. If variable addresses is all that you care about, you can get the same information from a map file, though.<br /><br />(NOTE: You have to generate debug information for this to work, e.g., pass <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">-g -Wl --dbgfile,test.nes.dbg</tt> to cl65.)

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>