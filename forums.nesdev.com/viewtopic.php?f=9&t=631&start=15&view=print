<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - PC to NES Transfer Cable</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">PC to NES Transfer Cable</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=9&amp;t=631">http://forums.nesdev.com/viewtopic.php?f=9&amp;t=631</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>2</strong> of <strong>2</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Wed Oct 12, 2005 8:05 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I've just built the NES movie player today and successfully played back a few minutes of me playing Rygar, trying to do things that would depend on precise timing, with several areas of slowdown. I recorded the movie on my emulator and played it back on my NES with a standard Rygar cartridge, so it was a good test of accuracy on both ends. My emulator records new joypad data only when the strobe has gone high then low for that frame, which is essential for playing it back correctly. I also successfully ran a second test where I modified my emulator to add an extra 5000 clocks to each video frame, and it still played back exactly the same on the NES.
<br />
<br />I implemented it as I described, where my code has the next controller data already continuously applied to the 8 data inputs of the 4021 shift register so the next time the NES raises the strobe, it gets the new data without the replay processor having to be very fast. My code waits for the strobe to go high then low, then sets up the next controller data. I added a latch to the strobe monitor on my replay processor so it wouldn't miss the strobe quickly going to high then low (I'm using a Tandy 102 to replay, which has a 2 MHz 8085 processor).
<br />
<br />I've also consistently replayed a movie of Castlevania, where the timing relative to power on affects what random items you get. It didn't match that in my emulator, probably due to some inaccuracy in it.
<br />
<br />I was able to use the strobe as a power-on indicator to the replay processor, since at power-up it goes high. I had it wait until the strobe went high, then until it went low, then began normal playback.
<br />
<br />This will be a great tool for testing emulator accuracy, and proving that those tool-assisted recordings are really possible on an actual NES, and not just hacks.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>DrNES</b> [ Wed Oct 12, 2005 10:01 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I must have somthing wired incorrectly within my cable/circuit. Game control and recording are fine, playback on the other hand is horrendous. 
<br />
<br />Im quite suprised I even got this far with the project.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Wed Oct 12, 2005 11:26 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I added the ability to record movies from the PC keyboard while playing on the actual NES, and have successfully recorded and played back 3-5 minute movies of Rygar, Battletoads, Wizards &amp; Warriors, Mega Man, Blaster Master, Castlevania, and Metroid. While playing each I did as much as I could to cause slowdown and tricks that would require exact sync when replaying.
<br />
<br />All the movies played exactly the same each time, including random items and enemies. The only anomaly was that the message before the level on Battletoads wasn't always the same, so apparently they're initializing their random number generator in a way that takes advantage of some inconsistency, perhaps the values of PPU memory at power-up. I couldn't get Super Mario Bros. 3 to record, probably due to it checking the joypads twice in a row and too quickly for my replay processor to keep up.
<br />
<br />To reiterate, the replay processor isn't doing *any* timing on its own; it's simply getting the next joypad data when the strobe line is clocked. The main reason I'm posting these results here is to confirm that the lpt2nes <em>hardware</em> should be able to record movies without desync (at least the the games mentioned). The software, on the other hand, I don't know about.
<br />
<br />One reason I'm not using my PC directly is because I doubt I could get the timing right with it without resorting to some tedious driver-level programming. With a small 8-bit CPU, it's easy because I have complete control over its operation. Heh, I guess if I had a second NES, I could have *it* do the recording and playback.
<br />
<br />I'd like to help get this project working better for everyone, since it provides a good standard for NES movies and testing emulators (and is just plain cool).
<br />
<br />UPDATE: I tried and tried with Super Mario Bros. 3 but couldn't even get Mario to move properly on the map when playing back! I did verify that my replay processor was fast enough to handle the four strobes it does every frame. I want to solve this because most later Nintendo titles strobe the joypad multiple times each frame.
<br />
<br />I did successfully record and play a Bionic Commando movie, and got a Castlevania III movie to play most of the way through until it lost sync due to the random number generator (enemy not appearing where it did when recording). I'm not sure why that happened.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>DrNES</b> [ Thu Oct 13, 2005 12:45 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Would you be willing to let others test out the code you have written?
<br />
<br />If the playback issues are limited to the lptnes software and not the hardware, perhaps people interested in the project could contribute to a new application?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Thu Oct 13, 2005 2:19 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The code is all for a custom setup; my PC is an old PowerMac and I'm using a Tandy 102 portable computer (8085 CPU), wired to my PC via RS-232, as the interface with the NES. The algorithm and hardware are so simple that it would make more sense to just document that.
<br />
<br />I've got a 4021 shift register connected to the NES the same way as for a normal joypad. In place of the joypad buttons is an 8-bit latch. I also have the strobe output from the NES connected to an input on the Tandy.
<br />
<br />My record/play code does the following:
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">byte movie &#91;&#93;;<br />int movie_size;<br /><br />// Go through each byte of controller data in the movie<br />for &#40; int i = 0; i &lt; movie_size; i++ &#41;<br />&#123;<br />&nbsp; &nbsp; // To record, uncomment this line<br />&nbsp; &nbsp; //movie &#91;i&#93; = read_pc_keyboard&#40;&#41;;<br />&nbsp; &nbsp; <br />&nbsp; &nbsp; write_latch&#40; movie &#91;i&#93; &#41;;<br />&nbsp; &nbsp; <br />&nbsp; &nbsp; // Wait for strobe to go high<br />&nbsp; &nbsp; while &#40; read_strobe&#40;&#41; == 0 &#41; &#123; &#125;<br />&nbsp; &nbsp; <br />&nbsp; &nbsp; // Wait for strobe to go low<br />&nbsp; &nbsp; while &#40; read_strobe&#40;&#41; == 1 &#41; &#123; &#125;<br />&#125;<br /></div><br /><br />The first time through the loop it effectively waits until the NES is powered up, where the strobe line initially goes high, then low at some point. From there on, it waits until the strobe line goes from high to low before writing to the latch, since the new data won't be needed until the <em>next</em> time the strobe line goes high then low, which will usually be 1/60 second later. The alternative, to wait for the strobe to go high then quickly put new data on the latch before the NES sets the strobe low again, places extreme timing requirements on the replay code:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">// Wait for strobe to go high<br />while &#40; read_strobe&#40;&#41; == 0 &#41; &#123; &#125;<br /><br />write_latch&#40; movie &#91;i&#93; &#41;;<br /><br />// Wait for strobe to go low<br />while &#40; read_strobe&#40;&#41; == 1 &#41; &#123; &#125;<br /></div><br /><br />Since the Tandy is fairly slow (the 6502 kicks the 8085's ass), it might not notice the strobe go high then low, so I also have a clocked flip-flop connected to the strobe from the NES. It's wired to become set when the strobe line goes from high to low, and cleared when the Tandy asserts its clear line. This takes pressure off the Tandy as far as having to be really fast at responding. Effectively the 8-bit output latch and this flip-flop form a buffer that the Tandy can refill at its leisure. The code is basically unchanged:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">write_latch&#40; movie &#91;i&#93; &#41;;<br /><br />clear_flip_flop&#40;&#41;;<br /><br />// Wait for high-to-low transition of strobe<br />while &#40; read_flip_flop&#40;&#41; == 0 &#41; &#123; &#125;<br /></div><br /><br />Looking at the lpt2nes schematic (after figuring out how to decode the non-ASCII text) it all depends on how the software monitors the line labeled /IRQ, which is fed an inverted version of the strobe. Since the algorithm above is so simple, my guess is that the problems are due to the difficulty in getting precise timing on a PC, or possibly differences in parallel port implementations.<br /><br />I think it would be possible to make a version of this that made the NES look just like a normal parallel printer, so you could use any software to "print" the stream of bytes to it and let the normal operating system buffering send the data at the rate the NES is reading it. This would need a 74374-style latch and maybe a flip-flop. This would allow recording and playback.<br /><br />You could use this to send binary data to the NES, given the proper code running on the NES. It'd be quite fast, probably around 8KB/sec. Still wouldn't be as nice as the super-simple MAX-232 serial interface which allows you to send data back to the PC, but at least it wouldn't use as much NES CPU time and would have built-in flow control.<br /><br />EDIT: I just thought more about the lpt2nes setup and realized that maybe it's maybe already up to look like a parallel device. The PC outputs the byte and waits for /ACK to go low, then outputs the next byte. /ACK is tied to the inverted strobe, so it's usually high. It seems that it'd need a flip-flop or something, otherwise it would assert the /ACK line when the strobe went high, and then the PC might output new data at any time after that, which might be before the strobe went low (which is the real event you want to watch for). Since the /ACK line (I think) is level-sensitive, rather than edge-sensitive, you need an edge-sensitive flip-flop. It could be set on a high-to-low transition of the strobe, and cleared via the joypad clock.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">; Usual joypad read code on NES<br />lda&nbsp; #1<br />sta&nbsp; $4016&nbsp; ; strobe -&gt; high<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ; /ACK line is currently asserted here<br />lda&nbsp; #0<br />sta&nbsp; $4016&nbsp; ; strobe -&gt; low<br />lda&nbsp; $4016&nbsp; ; clock: low-&gt;high-&gt;low<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ; /ACK line would be asserted here<br /></div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>sepi</b> [ Thu Oct 13, 2005 4:25 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I think /ACK line is edge triggered, but i'm not 100% sure about this.
<br />
<br />As far as i know, lptnes is cabable to trap a standard polling procedure, i tested this with a special test program.
<br />
<br />I have tested the latest version of lptnes with castlevania, and i always got the same random pickups, sometimes the scores were not equal (+/- 100 pts) Super Mario Bros 3 doesn't work for me either.
<br />
<br />DrNES, try to record movies with Super Mario Bros, this game has never failed in my tests! also, The Smurfs seems to be 100% accurate for me. Both versions has replayed these games correctly.
<br />- Sepi

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>DrNES</b> [ Thu Oct 13, 2005 11:22 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Im going  to work on my hardware design just a little more, then I will get into some serious SMB/Duck Hunt testing.
<br />
<br />My main goal of this project was to be able to play Tetris with a keyboard, ive accomplished that much. Now getting movies to record an playback correctly is my new goal.
<br />
<br />Thanks.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Thu Oct 13, 2005 3:49 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I found a nice <a href="http://courses.ece.uiuc.edu/ece390/books/labmanual/parallel-comm.html" class="postlink">summary of the PC parallel port</a> and it confirms that /ACK is triggered on a low-to-high transition. I've worked more on making my interface act like a standard parallel device, but apparently the Tandy doesn't hold the data until I indicate not busy (it uses the internal 8-bit latch for other things too, like scanning the keyboard). I've tried several arrangements and have come full-circle and think that lpt2nes should probably work as-is, as long as the PC holds the data until the /ACK line goes high.
<br />
<br />Does the driver for lpt2nes simply repeatedly call the "write byte to parallel port" function, or something else? You mentioned 50/60 Hz timing, but that seems unnecessary to even bother with.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>sepi</b> [ Fri Oct 14, 2005 12:37 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />i have only tested this with nintendo tetris, not tengen version. I checked the P/S line with oscillosope, this game polls gamepad twice in NMI (generating random numbers?)
<br />
<br />I haven't tested the recording with the tetramino yet, i noticed that lptnes desyncs quite awfully with battletoads and wizards &amp; warriors <img src="./images/smilies/icon_sad.gif" alt=":(" title="Sad" /> and also metroid desyncs. I think my current test setup sucks quite a lot, currently i don't have TV (i just moved recently) so i'm using my PCs videocard to repeat the TV image.
<br />
<br />lptnes reads keyboard and writes it to dataport after receiving interrupt from /ACK, Off-NMI it stays in a while loop.
<br />
<br />Maybe my playback/recording buffer is the "bottleneck"? i can't figure out any reasons why the battletoads should not work. As far as i know, it doesn't use any obscure polling routines.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Fri Oct 14, 2005 1:40 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I've done more tests with Metroid (recording on my emulator and playing on the NES) and I haven't encountered any issues yet. I found that Battletoads is somehow generating different random numbers each time, so if I let the enemies do much moving around it won't replay.
<br />
<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I think my current test setup sucks quite a lot, currently i don't have TV (i just moved recently) so i'm using my PCs videocard to repeat the TV image. </div><br /><br />I love being able to use the video-in on my computer and not have to keep a boxy TV on the desk. Sure the video capture doesn't compare to a real TV, but it's great for development.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">lptnes reads keyboard and writes it to dataport after receiving interrupt from /ACK, Off-NMI it stays in a while loop.</div>
<br />
<br />If the PC-side software is trying to figure out if the NES is in NMI or not, that will likely add problems. The PC-side software should wait for /ACK, output new data, then loop back to waiting for /ACK again. If interrupt latency is low enough, you should be able to output new data in the interrupt handler and get rid of a busy-wait loop. For games which poll only once per frame, this allows almost 1/60 second interrupt latency without problems, since the data you output is for the next joypad read. If it polls twice per frame in succession, you'll need quite low latency.
<br />
<br />I modified my emulator to print the times between polls (when the strobe goes from high to low) and compiled results for many common games:
<br />
<br />These poll at most once per frame: Battletoads, Castlevania, RC Pro-Am, Super Mario Bros., Deadly Towers, Kid Icarus, Mega Man 1-6, Mighty Bomb Jack, Rygar, Section-Z, Ghosts'n Goblins, Legacy of the Wizard, Rad Racer, River City Ransom, Solomon's Key, Solstice, The Battle of Olympus, Wizards &amp; Warriors, Wizards &amp; Warriors 1-3, Duck Tales, Duck Tales 2, Karnov
<br />
<br />These consistently poll more than once per frame (delays between polls in parenthesis, in CPU clocks): Castlevania 3 (387), Fester's Quest (395), Rod Land (162 163 156), Super Mario Bros. 2 (372), Super Mario Bros. 3 (215 276 215), Zelda (29 232 273 232), Zelda 2 (247), Batman (380), Blaster Master (282), Castlevania II (387), Contra (381), The Goonies II (379), Metroid (302), Rambo (polls almost 100 times per frame, hahaha), Snake's Revenge (394), Super C (387), The Guardian Legend (377), Kirby's Adventure (148 191 148), Magic of Scheherazade (200), Maniac Mansion (262), Ninja Gaiden 1-3 (223), RC Pro-Am 2 (627), Nintendo Tetris (398), TMNT 1 (387)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>DrNES</b> [ Fri Oct 14, 2005 3:42 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />After re-wiring a new cable up (this time got it all to fit in a DB-25 hood) and switching to another PC, ive had perfect playback results with a few games...
<br />
<br />SMB
<br />SMB\DuckHunt
<br />MegaMan 2
<br />GunSmoke
<br />
<br />Ive still got another 80+ games in my collection to test, I will post a summary of what works and what doesn't work for me when testing is done.
<br />
<br />Thanks.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>sepi</b> [ Sat Oct 15, 2005 1:19 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />lptnes doesn't read anything from statusport, it simply stays in the while loop until a variable is !=0, and then the ISR will increment this variable. I assume that P/S transition means that NES executing NMI, and the P/S line will remain at 0V for a ~20ms, i use this "idle" time for rec./play routines etc. i suppose that for metroid and tetris is way too slow?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Sat Oct 15, 2005 6:02 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I assume that P/S transition means that NES executing NMI, and the P/S line will remain at 0V for a ~20ms, i use this "idle" time for rec./play routines etc. i suppose that for metroid and tetris is way too slow?</div>
<br />
<br />With 100 CPU clocks taking about 0.056 msec, you'll be way too slow on games that poll multiple times. Metroid reads once, then again about 0.168 msec later. Even for games that read only once per frame, that would be every 16.7 msec, more often than every 20 msec.
<br />
<br />Some of these are polling the second joypad, so the second strobe could be ignored. You could add a clocked flip-flop in there and only signal when the strobe line is pulsed and the controller 1's clock line is pulsed. I was able to arrange this with a single 4013 dual flip-flop in one iteration of development. I just re-checked all the games I listed above that strobe the joypads more than once. Of them, only following read joypad 1 once (they apparently are scanning joypad 2 the second time): Metroid, Maniac Mansion, Kid Icarus. I guess this modification would only help those games that read joypad 2 separately (Metroid and Kid Icarus allow you to pause then press up and A on joypad 2 to get the password immediately).
<br />
<br />Is there any way to queue up data for the system to output immediately each time the /ACK line goes high? That way you could queue up a few bytes and let it respond quickly and efficiently, while your code simply polls the buffer and refills it when it gets low. Your code should easily be able to do its housekeeping in under 1 msec, unless you're running this on a 50 MHz machine. :)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>sepi</b> [ Sun Oct 16, 2005 4:14 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I had that 4013 in the previous version of the transfer cable, but i removed it because i wanted to add a SNES support to this revision. I think this double polling issue can be resolved with counter too, so sacrificing the /strobe line isn't really necassary.
<br />
<br />Maybe should connect the /ACK to the nes CLK? this might resolve the double polling issue quite easily.
<br />
<br />The developement version of lptnes works basicly just like you described, the version 1.10 is slightly slower. Maybe i should output a low to high transition at /strobe line for a benchmarking purposes?

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>2</strong> of <strong>2</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>