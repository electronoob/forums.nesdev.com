<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - INL-ROM v2 flash 'simple' dev/repro USB boards</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">INL-ROM v2 flash 'simple' dev/repro USB boards</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=28&amp;t=10357">http://forums.nesdev.com/viewtopic.php?f=28&amp;t=10357</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>3</strong> of <strong>3</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>yogi</b> [ Sat Dec 14, 2013 4:19 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: INL-ROM v2 flash 'simple' dev/repro USB boards</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">infiniteneslives wrote:</div><div class="quotecontent"> I've got it setup for re-flashing the AVR via a USB bootloader, it's the same way you're able to update the firmware on your kazzo.  So it's the same chip as an arduino, but significantly simpler/cheaper to program.</div>  <br />  I assumed you would have a bootloader. I was just thinking about the development environment and the vast community of developers that are using Arduino's. <br />  <div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"> Personally I feel the arduino is an unnecessary level of abstraction. </div><br />  Agree 100%, 'Arduino' does carry a lot of overhead. While it's true that anyone planning to jump into a NES/AVR project will need skills beyond the 'blinken lite' wow factor, if one is developing in '6502', jumping into AVR assembly also, may seem daunting (or not?). Being able to use Arduino's libs and another user's code base allows fast tracking the AVR side of a project at the expense of CPU cycles. <br />  Of course, all of the above assumes a GP development platform, rather than a more turn-key HW design. More than likely, there are only a few people interested in developing on both platforms at the same time. So a limited feature set makes more sense for the NES development community.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Pretty much yeah.  It's all a juggling game between features, user friendliness, timing, speed, and i/o on the mcu and CPLD. <img src="./images/smilies/icon_wink.gif" alt=";)" title="Wink" /> </div><br />  So true.<br /> Sorry if I seem to be harping on the whole Arduino thing. There is just so much development  going on with Arduino synth projects it's hard to ignore, seeing as you are at 95% Arduino compatible with your design.<br />Whatever form the released version takes, it will be great!<br />Yogi

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>infiniteneslives</b> [ Sat Dec 14, 2013 8:01 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: INL-ROM v2 flash 'simple' dev/repro USB boards</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Well the project isn't intended to be a mapper development tool, the intent is for me to design the mapper and supply it for game development.  That said, I'd be more than willing to help someone who wanted to develop their own mapper using the board by providing pinouts and schematics and such.  But developing a mapper of this nature isn't a simple task, I'd expect someone interesting in doing something like that to want to take off the arduino training wheels and develop for the raw atmega.  I'm not very savvy in the arduino ways, but as I understand the idea of cycle counting and writing assembly for time critical operations is beyond the scope of most arduino users.<br /><br />That and the arduino requires a separate mcu just to program the thing, where V-usb only needs a set of diodes and some resistors.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"> Sorry if I seem to be harping on the whole Arduino thing. There is just so much development  going on with Arduino synth projects it's hard to ignore, seeing as you are at 95% Arduino compatible with your design.</div>What part is incompatible?  AFAIK once the code is on the mcu and up and running it really isn't an arduino anymore, it's just a standard avr.  Arduino is the IDE and means of getting your compiled code onto the avr.  If someone knew what they were doing I'm pretty sure they could take a synth developed on an arduino and get it up and running on this board just as long as they didn't rely on the TTL serial port while operating.  Either that or just convert it to the arduino means of programming yourself.<br /><br />Tell ya what.  I need to move things around on the ports anyways after realizing I don't want the data bus on PORT D (which is where the Rx/Tx pins are).  So that works out nicely.  I'll ensure that those pins are available for use buy a developer via solder pad.  So you'd have to attach your own TTL serial programmer, but there wouldn't be any pcb hacking necessary to do so.  I'm not going to say it's an arduino, but I'll make it as easy as I can for someone to convert it to one on their own. <img src="./images/smilies/icon_wink.gif" alt=";)" title="Wink" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>yogi</b> [ Sun Dec 15, 2013 10:07 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: INL-ROM v2 flash 'simple' dev/repro USB boards</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I hope I didn't give the impression that I was criticizing, it really wasn't my intent. I'm very impressed with your work and want to see a midi synth happen.<br /><br /><div class="quotetitle">infiniteneslives wrote:</div><div class="quotecontent">Well the project isn't intended to be a mapper development tool, the intent is for me to design the mapper and supply it for game development. </div><br /><br />Understood. I wasn't really thinking about re-inventing the mapper wheel. Just seeing a really great platform to develop a midi synth on.<br /> For my limited tunnel vision, an 'Ideal' platform provides enough rom and ram area for a basic NES UI and sound engine, with a memory mapped data port for a midi synth/bridge controller. As far as mappers go MMC1 is probably over kill, just as long as there is expanded WRAM for processing note and effects data. As I look at the V2 board all the elements are in place!  <br />  I totally understand your POV, the majority of this community has a very different focus, but there are a great many folks that would welcome an alternative to the midiNES. There was a bit of a let down with the Chip Maestro project, because hopes were very high, even though Jarek's design is pretty good and worked as planned. I see a lot more possibilities with your board.<br /><br /> <div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">That said, I'd be more than willing to help someone who wanted to develop their own mapper using the board by providing pinouts and schematics and such.  But developing a mapper of this nature isn't a simple task, I'd expect someone interesting in doing something like that to want to take off the arduino training wheels and develop for the raw atmega.  I'm not very savvy in the arduino ways, but as I understand the idea of cycle counting and writing assembly for time critical operations is beyond the scope of most arduino users. </div><br /><br />I think I have you schematics that you posted a one point (but could've been the Kazzo), just need to load the CAD package that you use, only have Eagle installed ATM.<br />  You're right in that trying to run C or C++ on a 8 bit mcu has lots of limits, but Arduino code isn't much worse than AVR C. In line assembly is allowed but few people use it, true. With a cart specific lib to handle the NES interface, a developer could get about their project a little quicker.<br />  The advantage is the abundance of code examples with the Arduino; finding AVR assembly examples would be difficult in comparison. So getting a project off the ground would be faster, but more limited; although at almost 16 MIPS the hit isn't to bad. And sharing the note processing on the 2A03 helps as well. There are tons of midi related projects that are pure Arduino so performance wise it's not TOO bad.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">That and the arduino requires a separate mcu just to program the thing, where V-usb only needs a set of diodes and some resistors. </div><br /><br />  Well, yes and no. The Uno (based on the ATMega 328) uses the UART, regular old TTL RS232; but to add USB, a FTDI chip is needed. An external USB/serial dongle would do; could be switched out for 5 pin midi din dongle depending on the user's setup. <br />  The serial/USB connection can also be used for console IO or midi over USB at runtime, and in the context of a synth would be useful. I could see Famitracker redirecting it's output to a NES for live play. <br />  As I understand, V-usb is bit banged? This could be a problem for use with a real time midi app. Using the HW UART takes a tremendous burden off the uC.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">What part is incompatible?  AFAIK once the code is on the mcu and up and running it really isn't an arduino anymore, it's just a standard avr.  Arduino is the IDE and means of getting your compiled code onto the avr.  If someone knew what they were doing I'm pretty sure they could take a synth developed on an arduino and get it up and running on this board just as long as they didn't rely on the TTL serial port while operating.  Either that or just convert it to the arduino means of programming yourself. </div><br />  Well, the xtal (don't know what clock speed you are planning on), bootloader and the HW UART with a CTS/RTS controlled reset are really the only 'Arduino' specific elements, so lets say closer to 98% <img src="./images/smilies/icon_wink.gif" alt=";)" title="Wink" /> <br />  I'm not an expert on the Arduino firmware's internals, but I think there are runtime accessible communication routines the IDE expects to be there, so it's a little more than just a boot loader AFAIK. But no it's not byte-code like a Basic.<br />  Goes without saying that there isn't anything magic about the Arduino. Anything that can be done in C++ can be optimized in assembly, it's just a matter of skill and time available.<br />  Your board is a great platform as is and will make a good synth in the right hands. But finding people that are AVR/6502/Midi competent programmers and motivated to spend the time on this kind of project, is a challenge. The net is just wider by including the Arduino community is my only point.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Tell ya what.  I need to move things around on the ports anyways after realizing I don't want the data bus on PORT D (which is where the Rx/Tx pins are).  So that works out nicely.  I'll ensure that those pins are available for use buy a developer via solder pad.  So you'd have to attach your own TTL serial programmer, but there wouldn't be any pcb hacking necessary to do so.  I'm not going to say it's an arduino, but I'll make it as easy as I can for someone to convert it to one on their own. <img src="./images/smilies/icon_wink.gif" alt=";)" title="Wink" /> </div><br />YES That would work very well. Whenever the redesigned boards are available I'll definitely have a go at one. <br />Yogi

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>infiniteneslives</b> [ Sun Dec 15, 2013 11:16 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: INL-ROM v2 flash 'simple' dev/repro USB boards</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">yogi wrote:</div><div class="quotecontent">I hope I didn't give the impression that I was criticizing, it really wasn't my intent. I'm very impressed with your work and want to see a midi synth happen.</div>Oh no worries, I didn't feel that way.  Sorry if it sounded as I was getting defensive, I was just trying to explain my take on things.  I'm glad you've brought this up, as sound capabilities has been a goal of the atmega version.  That and it's a very minor mod to the board to allow for TTL flashing arduino style with an external programmer.  To be honest I'll probably never write a synth myself.  I'd like to, but I'm really not a sound buff, nor do I plan to devote the time required to become one anytime soon.  So having a means for others to develop a synth that could be incorporated to my design is the best chance for success here.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">For my limited tunnel vision, an 'Ideal' platform provides enough rom and ram area for a basic NES UI and sound engine, with a memory mapped data port for a midi synth/bridge controller. As far as mappers go MMC1 is probably over kill, just as long as there is expanded WRAM for processing note and effects data. As I look at the V2 board all the elements are in place!</div> Yeah it should be pretty easy to provide that.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Understood. I wasn't really thinking about re-inventing the mapper wheel. Just seeing a really great platform to develop a midi synth on.<br />   I totally understand your POV, the majority of this community has a very different focus, but there are a great many folks that would welcome an alternative to the midiNES. There was a bit of a let down with the Chip Maestro project, because hopes were very high, even though Jarek's design is pretty good and worked as planned. I see a lot more possibilities with your board.</div>Yeah I've actually talked with Jarek about his chip maestro before, I also saw a thread on chiptune where you guys were discussing this issue, and desire for a NESmidi replacement.  I'd like to support that effort if possible especially if someone else was doing the heavy lifting on the synth side.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">That and the arduino requires a separate mcu just to program the thing, where V-usb only needs a set of diodes and some resistors. </div><br />  Well, yes and no. The Uno (based on the ATMega 328) uses the UART, regular old TTL RS232; but to add USB, a FTDI chip is needed. An external USB/serial dongle would do; could be switched out for 5 pin midi din dongle depending on the user's setup. <br />  The serial/USB connection can also be used for console IO or midi over USB at runtime, and in the context of a synth would be useful. I could see Famitracker redirecting it's output to a NES for live play. <br />  As I understand, V-usb is bit banged? This could be a problem for use with a real time midi app. Using the HW UART takes a tremendous burden off the uC.</div>Well my intent for the USB was only as a bootloader for the avr and flashing nes rom image, athough there could be other uses.  Once the .hex is generated and loaded onto the avr, it doesn't really matter how it got there.  I can get any pre-generated .hex loaded onto the mcu even without a bootloader.<br /><br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">  Well, the xtal (don't know what clock speed you are planning on), bootloader and the HW UART with a CTS/RTS controlled reset are really the only 'Arduino' specific elements, so lets say closer to 98% <img src="./images/smilies/icon_wink.gif" alt=";)" title="Wink" /> </div>My plan was 16Mhz, although anthing compatible with the atmega could be used if V-USB wasn't being implemented.  Just a matter of soldering on a different clock.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">  Goes without saying that there isn't anything magic about the Arduino. Anything that can be done in C++ can be optimized in assembly, it's just a matter of skill and time available.<br />  Your board is a great platform as is and will make a good synth in the right hands. But finding people that are AVR/6502/Midi competent programmers and motivated to spend the time on this kind of project, is a challenge. The net is just wider by including the Arduino community is my only point.</div>Indeed, I'm the guy lacking the midi component.  With little motivation to pick it up.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Whenever the redesigned boards are available I'll definitely have a go at one. </div>Not sure when that'll be at the moment.  I actually hacked out the atmega on the batch I just ordered and put a BNROM chip in it's place.  That was a temporary move to suit my immediate needs and knowledge that things needed swapped around on the pin assignment.  That and I have a lot of development work to do with just the attiny alone before I can step up to the atmega.  The next batch I order will put the atmega back on there with discussed modifications with the data port and TTL access.  Should be ~6 months is my guess.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>yogi</b> [ Sun Dec 15, 2013 1:41 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: INL-ROM v2 flash 'simple' dev/repro USB boards</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">infiniteneslives wrote:</div><div class="quotecontent">Oh no worries, I didn't feel that way. </div><br />So glad to hear, (so very hard to tell on the interwebbes sometimes)  <br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"> I'm glad you've brought this up, as sound capabilities has been a goal of the atmega version.  That and it's a very minor mod to the board to allow for TTL flashing arduino style with an external programmer.  To be honest I'll probably never write a synth myself.  I'd like to, but I'm really not a sound buff, nor do I plan to devote the time required to become one anytime soon.  So having a means for others to develop a synth that could be incorporated to my design is the best chance for success here. </div><br />Well, I don't know that I'm up to the task either but really want to try. Have some ideas for a prototype SOROM board hack to test with, but we'll see how that works out.<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">For my limited tunnel vision, an 'Ideal' platform provides enough rom and ram area for a basic NES UI and sound engine, with a memory mapped data port for a midi synth/bridge controller. As far as mappers go MMC1 is probably over kill, just as long as there is expanded WRAM for processing note and effects data. As I look at the V2 board all the elements are in place!</div> Yeah it should be pretty easy to provide that. </div><br />\o/<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"> Yeah I've actually talked with Jarek about his chip maestro before, I also saw a thread on chiptune where you guys were discussing this issue, and desire for a NESmidi replacement.  I'd like to support that effort if possible especially if someone else was doing the heavy lifting on the synth side. </div><br />  Yea, some people were thinking about reverse eng'ing the midiNES to reproduce it. In most cases I would frown on that; but I have some old, hard feelings on that project, so I'm 'conflicted' on that idea.<br />  In fact it's kind of how I found my way to your projects, I was researching Membler's Squeedo. <br />  IMO you already have done a lot of the heavy lifting! The hardware part of this sort of project is a huge milestone. <br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Well my intent for the USB was only as a bootloader for the avr and flashing nes rom image, athough there could be other uses.  Once the .hex is generated and loaded onto the avr, it doesn't really matter how it got there.  I can get any pre-generated .hex loaded onto the mcu even without a bootloader. </div><br />V-usb is very slick, and to be honest very new to me. Never considered bit-banging USB in the past. My only concern is with the runtime performance but I am only guessing that there could be an issue. It's obvious that it works fine with the Kazzo.<br />With SIO pins connected to the cart edge, re-flashing the Mega shouldn't be a problem, even with a factory fresh chip. I've got a few solder tail 72 pin connectors floating around here, be easy enough to wire up a AVRtinyUSB to Game PAK adaptor for my use.<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">  Well, the xtal (don't know what clock speed you are planning on), bootloader and the HW UART with a CTS/RTS controlled reset are really the only 'Arduino' specific elements, so lets say closer to 98% <img src="./images/smilies/icon_wink.gif" alt=";)" title="Wink" /> </div> My plan was 16Mhz, although anthing compatible with the atmega could be used if V-USB wasn't being implemented.  Just a matter of soldering on a different clock.</div><br />Perfect. 16MHz<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"> Goes without saying that there isn't anything magic about the Arduino. Anything that can be done in C++ can be optimized in assembly, it's just a matter of skill and time available.<br />  Your board is a great platform as is and will make a good synth in the right hands. But finding people that are AVR/6502/Midi competent programmers and motivated to spend the time on this kind of project, is a challenge. The net is just wider by including the Arduino community is my only point.</div>Indeed, I'm the guy lacking the midi component.  With little motivation to pick it up.</div><br /><img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /> Just keep doing what you're doing! Really Great! <br />The right mix of skill sets is hard, that's what makes open source so great for these types of projects, 'many hands makes the lifting light'.<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Whenever the redesigned boards are available I'll definitely have a go at one. </div>Not sure when that'll be at the moment.  I actually hacked out the atmega on the batch I just ordered and put a BNROM chip in it's place.  That was a temporary move to suit my immediate needs and knowledge that things needed swapped around on the pin assignment.  That and I have a lot of development work to do with just the attiny alone before I can step up to the atmega.  The next batch I order will put the atmega back on there with discussed modifications with the data port and TTL access.  Should be ~6 months is my guess.</div><br />No rush, got plenty to do myself. Looking forward to it! <br />Yogi <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>infiniteneslives</b> [ Sat Feb 08, 2014 12:42 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: INL-ROM v2 flash 'simple' dev/repro USB boards</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Good news!<br /><br />Pokun pointed out to me that krikzz made a new famicom mold to support his everdrive.  They're currently available for purchase: <!-- m --><a class="postlink" href="http://shop.retrogate.com/Famicom-shell-SHELLFC.htm?productId=26">http://shop.retrogate.com/Famicom-shell ... oductId=26</a><!-- m --><br /><br />I ordered a case to learn the dimensions needed on the PCB, so I'm planning to make a 60pin version of these v2 boards.  Hoping to have them available some time this summer.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>NESHomebrew</b> [ Sat Feb 08, 2014 2:04 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: INL-ROM v2 flash 'simple' dev/repro USB boards</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Too bad it says &quot;Everdrive&quot; on the bottom

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>infiniteneslives</b> [ Sat Feb 08, 2014 2:42 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: INL-ROM v2 flash 'simple' dev/repro USB boards</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">WhatULive4 wrote:</div><div class="quotecontent">Too bad it says &quot;Everdrive&quot; on the bottom</div>Honestly I don't see this as an issue.  I'm just thrilled to have new cases available regardless of what they look like.  Others (especially collectors) probably feel differently I suppose though.  The location of the wording is in a decent location to put a sticker over the top of it.  So for a released title that'd be a nice way to cover it up.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>3gengames</b> [ Sat Feb 08, 2014 1:48 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: INL-ROM v2 flash 'simple' dev/repro USB boards</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />That price is laughable. Might as well find 4 people willing to make a game and sell 125 copies of each and get your own made for that price.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sat Feb 08, 2014 2:04 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: INL-ROM v2 flash 'simple' dev/repro USB boards</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">3gengames wrote:</div><div class="quotecontent">Might as well find 4 people willing to make a game and sell 125 copies of each and get your own made for that price.</div><br />I believe that's what the competitions are about. Proceeds from sales of each compo multicart go toward growing the infrastructure for small-volume publishing of NES games.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>infiniteneslives</b> [ Sat Feb 08, 2014 2:13 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: INL-ROM v2 flash 'simple' dev/repro USB boards</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">3gengames wrote:</div><div class="quotecontent">That price is laughable. Might as well find 4 people willing to make a game and sell 125 copies of each and get your own made for that price.</div><br /><br />The price you see isn't the end all be all.  I contacted them and it sounds like they can provide them in large quantities for around the same price we purchased cases for the release of the first volume.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>3</strong> of <strong>3</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>