<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Ack - another tile data compressor</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Ack - another tile data compressor</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=6185">http://forums.nesdev.com/viewtopic.php?f=2&amp;t=6185</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>4</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>cadahl</b> [ Wed Mar 17, 2010 6:55 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Ack - another tile data compressor</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />First, I'm a reader and admirer of the people of this forum. While I'm not a NES developer myself (I do some DS) I'm tickled by the intricacies of old console hardware. Reverse engineering, and pushing the limits of these old consoles is fascinating to my nerdy brain.
<br />
<br />Especially Tokumaru's implementation and enhancement of the CodeMasters tile compression scheme interested me, and when CartCollector published the "NESdev Corpus", I just had to try to compete (all in good spirit).
<br />
<br />My compressor gets these results (when splitting the input file into 8KB blocks, compressed independently):
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ACK 8KB&nbsp; Tokumaru&nbsp; &nbsp; ZIP&nbsp; &nbsp;Original<br />battlekid.chr&nbsp; &nbsp; 30087&nbsp; &nbsp; &nbsp;29881&nbsp; &nbsp; 27306&nbsp; &nbsp; 47488<br />bombsweeper.chr&nbsp; &nbsp;2147&nbsp; &nbsp; &nbsp; 2416&nbsp; &nbsp; &nbsp;2317&nbsp; &nbsp; &nbsp;8192<br />cmc80s.chr&nbsp; &nbsp; &nbsp; &nbsp; 8530&nbsp; &nbsp; &nbsp; 8730&nbsp; &nbsp; &nbsp;7025&nbsp; &nbsp; 16384<br />dpadhero.chr&nbsp; &nbsp; &nbsp; 8484&nbsp; &nbsp; &nbsp; 8381&nbsp; &nbsp; &nbsp;7977&nbsp; &nbsp; 24576<br />geminim.chr&nbsp; &nbsp; &nbsp; &nbsp;1571&nbsp; &nbsp; &nbsp; 1605&nbsp; &nbsp; &nbsp;1621&nbsp; &nbsp; &nbsp;4096<br />gemventure.chr&nbsp; &nbsp; 1956&nbsp; &nbsp; &nbsp; 2093&nbsp; &nbsp; &nbsp;1816&nbsp; &nbsp; &nbsp;4096<br />lj65.chr&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 1855&nbsp; &nbsp; &nbsp; 2027&nbsp; &nbsp; &nbsp;1806&nbsp; &nbsp; &nbsp;4096<br />manhole.chr&nbsp; &nbsp; &nbsp; &nbsp;4061&nbsp; &nbsp; &nbsp; 3807&nbsp; &nbsp; &nbsp;4124&nbsp; &nbsp; &nbsp;8192<br />neotoxin.chr&nbsp; &nbsp; &nbsp;10438&nbsp; &nbsp; &nbsp;10992&nbsp; &nbsp; 10355&nbsp; &nbsp; 24576<br />nesnake2.chr&nbsp; &nbsp; &nbsp; 3347&nbsp; &nbsp; &nbsp; 4914&nbsp; &nbsp; &nbsp;3026&nbsp; &nbsp; &nbsp;8192<br />quantdisco.chr&nbsp; &nbsp;12902&nbsp; &nbsp; &nbsp;13165&nbsp; &nbsp; 12977&nbsp; &nbsp; 32768<br />sackofflour.chr&nbsp; 10594&nbsp; &nbsp; &nbsp;10541&nbsp; &nbsp; 10191&nbsp; &nbsp; 32768<br />solarwars.chr&nbsp; &nbsp; 16081&nbsp; &nbsp; &nbsp;16160&nbsp; &nbsp; 15568&nbsp; &nbsp; 32768<br />sting.chr&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;1894&nbsp; &nbsp; &nbsp; 2048&nbsp; &nbsp; &nbsp;1752&nbsp; &nbsp; &nbsp;6144<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 113947&nbsp; &nbsp; 116760&nbsp; &nbsp;107861&nbsp; &nbsp;254336<br /><br />smb.chr &#40;SMB1&#41;&nbsp; &nbsp; 5235&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;-&nbsp; &nbsp; &nbsp; &nbsp; -&nbsp; &nbsp; &nbsp;8192<br /></div>
<br />
<br />So it sits somewhere in between ZIP/DEFLATE and Tokumaru's encoder currently. I think it's possible to eek out more of it, and I have some ideas brewing.
<br />
<br />I decided to mostly devise my own scheme, it's mainly based on single bitplane 8x8 patterns and blocks of 8 of these (so 4 full tiles per block). The resulting byte list is split into 4-bit nibbles which are Huffman encoded. The reason for using 4-bit symbols is that it only requires a 48 byte RAM table on the decompression end of things, and it didn't really hurt the ratio much. I've tried to stay within the hw limits of the NES, but like I said I've only read about it, and had to guess from what little I know of 6502 asm to know what is viable. No idea what the decompression time might be.
<br />
<br />Source code (MIT licensed, purely C# right now) can be found at: <a href="http://code.google.com/p/artwork-compression-kit" class="postlink">http://code.google.com/p/artwork-compression-kit</a>
<br />
<br />Hope it can be of use!

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Wed Mar 17, 2010 7:11 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Huffman on 4x1 pixel slices of one bitplane? Great minds think alike. Nintendo had the exact same idea for compressing the Nintendo logo in the Game Boy Advance BIOS.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Wed Mar 17, 2010 7:32 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Cool, it managed to beat my (well, Codemasters') scheme in several cases! =) We just need to code the decompression routine in 6502 ASM.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>cadahl</b> [ Wed Mar 17, 2010 2:01 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Tepples, that's cool. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /> Can't really claim it was something that I carefully planned. Was mostly figuring out a way to make the Huffman decoding cheaper, and it turned out to work well.
<br />
<br />Tokumaru, if someone were to pick up writing a 6502 version that would be awesome. I'd have to learn the platform first if I were to do it myself.  <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />  In the long run I'd love to have encoder variations for SNES, SMS, MD etc. I'm not sure where I'm going with this, it's mostly for fun and to learn.
<br />
<br />I've documented the format (actually it's layered: an outer container for multiple banks, a Huffman container that could be omitted or replaced and the inner NES-specific compression). Hope it's readable:
<br />
<br /><!-- m --><a class="postlink" href="https://code.google.com/p/artwork-compression-kit/wiki/ACKFormat">https://code.google.com/p/artwork-compr ... /ACKFormat</a><!-- m -->
<br />
<br />I'm sure I've overlooked many possible improvements, so any comments are welcome. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Wed Mar 17, 2010 3:19 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Very interesting format. I imagine that the decompression code would be quite large/slow, because of all the modes and the moving back and forth between huffman and NES format decompression.
<br />
<br />Normally I'd take a shot at writing decompression code, but now I'm looking for something different in a compression scheme. I want something that is simple and fast to decompress, even if the compression ratios are not that great.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>cadahl</b> [ Wed Mar 17, 2010 4:09 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Fair enough. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /> I think it's probably not that bad, and might take a stab at it. Would you mind at all if I used your decoder/test source code as a starting point? I am versed in assembly, just not 6502, and can probably learn the platform as I go.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Wed Mar 17, 2010 4:22 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">cadahl wrote:</div><div class="quotecontent">Would you mind at all if I used your decoder/test source code as a starting point?</div>
<br />Sure, go ahead. Let us know of the results, OK?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>cadahl</b> [ Fri Mar 19, 2010 3:41 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I've so far ported NesDecoder and have it decompressing the SMB CHR correctly. Next thing up is the HuffmanDecoder.
<br />
<br />I'm getting the hang of assembly on this thing, but had a couple of headaches. E.g. confusion over which instructions affect which flags, and it seems the various 6502 docs disagree over which instructions exist on what variety of the CPU. 
<br /><a href="http://www.masswerk.at/6502/6502_instruction_set.html" class="postlink">http://www.masswerk.at/6502/6502_instruction_set.html</a> says BIT has only ZP and absolute addressing, but immediate operand (BIT #$80) works fine at least in FCEU for me.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Fri Mar 19, 2010 3:57 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">cadahl wrote:</div><div class="quotecontent"><a href="http://www.masswerk.at/6502/6502_instruction_set.html" class="postlink">http://www.masswerk.at/6502/6502_instruction_set.html</a> says BIT has only ZP and absolute addressing, but immediate operand (BIT #$80) works fine at least in FCEU for me.</div>
<br />That shouldn't work. What assembler are you using? Maybe the command got assembled to something else and by coincidence the flags are being set as you expect them to.
<br />
<br />FCEU and its "sons" are not terribly accurate either. Nintendulator and Nestopia are the most accurate emulators around, so be sure to always test on them, and on actual consoles when possible. Also, look at Nintendulator's or FCEUX's debugger to see what your instruction actually assembled into (locate the command in the disassembly window).
<br />
<br />The NES uses a standard 6502 (without decimal mode), ignore documents that talk about the 65C02 and other processors based on it. The document you liked to appears to be correct.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>cadahl</b> [ Fri Mar 19, 2010 4:42 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Ah, thanks. I'll see if I can run those, using Linux so I tend to prefer native emulators. In this case finding a workaround is easy, I can roll bit 7 into carry instead, but I really want to be compatible.
<br />
<br />If you're interested, here are my efforts for now: <a href="http://code.google.com/p/artwork-compression-kit/source/browse/trunk/src/deackNES/deack.asm" class="postlink">http://code.google.com/p/artwork-compression-kit/source/browse/trunk/src/deackNES/deack.asm</a>
<br />
<br />I'm sure I'm doing all sorts of mistakes and missing opportunities for optimization, but it seems to decode rather instantly (still need to see if the Huffman hurts badly though).
<br />
<br />Edit: I'm using ASM6, same as you afaik (except I compiled it from source).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>ReaperSMS</b> [ Fri Mar 19, 2010 4:52 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />After looking at it, albeit briefly, a couple things come to mind:
<br />
<br />Column transposing is going to be rather slow, or need an excessively large LUT.
<br />
<br />It's probably better for the group header to have the bits stored chunky rather than planar, as it cuts down on the amount of RMW rotates needed. The code would probably benefit from extracting all 8 modes at once with unrolled special case code.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>cadahl</b> [ Fri Mar 19, 2010 5:15 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The two things you mention bother me as well.
<br />
<br />Column mode is pretty nasty, I had plans to see if I could have kept it row-oriented and bunched the unique columns toward one end of each byte instead. Decoding would be more ALU-oriented, and while taking 8 bytes like a raw pattern it might skew the value distribution for the Huffman backend to pay for the extra symbols.
<br />
<br />Now that I'm using 4 bit symbols rather than 8 bit, I'm not sure if it's worth trying. Worst case it would be a loss vs just using Mode 0.
<br />
<br />I probably will change the pattern mode encoding, I didn't consider the cost of RMW. 
<br />
<br />On another note, is FCEUX the recommended debugger? I've tried FCEU and FCEUXSP for some light ROM disassembly before. The latter seemed more complete.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Fri Mar 19, 2010 5:28 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I think FCEUX is the only one that's still being updated. Its debugging features are great, but the fact that they are built on top of a not-so-accurate emulator doesn't help. See if you can get Nintendulator to run, even if it means using Wine or a virtual machine (and even if it's slow), because you should test your code on an accurate emulator before releasing it. Ideally you should test on hardware too.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Fri Mar 19, 2010 5:53 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />And if your computer/OS isn't powerful enough for Nintendulator, a PowerPak is probably cheaper than a new computer. At least it was for me and my Eee PC laptop.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>cadahl</b> [ Sat Mar 20, 2010 1:33 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I actually got Nestopia to compile for Linux, and my test failed spectacularly. It turned out to be the BIT #$80, easily replaced with a shift and BCC. It now seems fine.
<br />
<br />Interestingly Nintendulator didn't fail the BIT #$80 version, looked identical to FCEU. I think I'll stick to Nestopia now that I have it running.
<br />
<br />Edit: Btw, is loop unrolling preferred? I know ROM space is tight, but there's no I-cache and even if I JSR to somewhere expensive in a loop I'd save a steady number of cycles by not doing loop management. If it also allows me to use cheaper addressing, all the better.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>4</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>