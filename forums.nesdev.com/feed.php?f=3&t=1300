<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=3&amp;t=1300" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2006-03-29T21:31:51-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=3&amp;t=1300</id>
<entry>
<author><name><![CDATA[mozz]]></name></author>
<updated>2006-03-29T21:31:51-07:00</updated>
<published>2006-03-29T21:31:51-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1300&amp;p=11345#p11345</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1300&amp;p=11345#p11345"/>
<title type="html"><![CDATA[insane.. i mean inside cycle emu estructure?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1300&amp;p=11345#p11345"><![CDATA[
Right.  I'm not sure whether its the ALU adder or a different adder which is used, but either way its an 8-bit adder being used.  Consider this:  if you add an 8-bit index register to the bottom half of a 16-bit register and it doesn't generate a carry, then you already know the top half of the result too (it is the original 8 bits from the top half of your 16-bit register).<br /><br />However, if you add an 8-bit index register to the bottom half of a 16-bit register and it DOES generate a carry... then you have to add that carry to the top half of the result before you can use it (pushing the effective address into the next page).<br /><br />I'm not 100% sure about what is occurring in each cycle, but it makes sense to me that the extra cycle is necessary for the carry propagation to be performed.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=330">mozz</a> — Wed Mar 29, 2006 9:31 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Quietust]]></name></author>
<updated>2006-03-29T20:27:03-07:00</updated>
<published>2006-03-29T20:27:03-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1300&amp;p=11343#p11343</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1300&amp;p=11343#p11343"/>
<title type="html"><![CDATA[insane.. i mean inside cycle emu estructure?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1300&amp;p=11343#p11343"><![CDATA[
Yes, the "Increment PC" increments the program counter as a single 16-bit register, since it's doing nothing more than incrementing it.<br /><br />The reason indexed addressing incurs extra penalties when crossing page boundaries is because the ALU is only 8 bits wide, and the ALU is required in order to add 2 arbitrary numbers - adding 1 to a number is extremely simple to do in hardware, so it was implemented for both halves of the program counter simultaneously.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=7">Quietust</a> — Wed Mar 29, 2006 8:27 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Anes]]></name></author>
<updated>2006-03-29T19:16:42-07:00</updated>
<published>2006-03-29T19:16:42-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1300&amp;p=11340#p11340</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1300&amp;p=11340#p11340"/>
<title type="html"><![CDATA[insane.. i mean inside cycle emu estructure?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1300&amp;p=11340#p11340"><![CDATA[
As i said before im writing a 6502 emulator based on the microarchitecture using pure c++. I have classes ALU,DU,ADDRBUS, EU, DATABUS /etc. What is good of this: breakpoints (and other things). The user can put a breakpoint even when one value of the ALU is about to/after be writed.<br />But still not sure what machine it will nee..<br />... sorry im a little enthusiast cos im learining a lot  <img src="http://forums.nesdev.com/images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /> .<br /><br />Well right to the point now:<br /><br />I wanted to know if this heappen in this way:<br /><br />i will use vars AddrBUS/DataBUS/PC.<br />this fragment is taken from 6502_cpu.txt<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">      <br />       #   address R/W description<br />       ---  -------    ---   ------------------------------------------<br />        1    PC         R  fetch opcode, increment PC<br />            - AddrBUS = PC<br />            - DataBUS = Read from AddrBUS<br />            - Opcode = DataBUS<br />            - Increment PC ***<br />        2   .... &#40;other cycles come here&#41;<br /><br /></div><br /><br />*** How does Increment PC? is it passed to the ALU? if it is a 16 bit value is there wrap around on pages.. i think not, its contigous.. but how does the cpu treat a case like "incrementing a 16 BIT register".<br /><br />Thanks in advance.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=72">Anes</a> — Wed Mar 29, 2006 7:16 pm</p><hr />
]]></content>
</entry>
</feed>