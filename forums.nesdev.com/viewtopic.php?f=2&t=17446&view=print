<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Unwanted scrolling after writing to background</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Unwanted scrolling after writing to background</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=17446">http://forums.nesdev.com/viewtopic.php?f=2&amp;t=17446</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>mitch3a</b> [ Thu Jun 14, 2018 5:17 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Unwanted scrolling after writing to background</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I'm working on a game and had been using sprites for certain objects, but because they don't move very often and because I can have far more than 8 per line, I wanted to store them in the background while they're not active. I wrote the code to do so, which does write the correct sprite to the correct background tile, however, every time I do, the screen will briefly scroll for what seems to be a frame before it will reset back to where it should be a ~frame later (haven't actually confirmed its exactly one frame, but I think scroll gets reset every frame with the code I'm working off of). I tried resetting the scroll in the same cycle manually, but it didn't fix the issue. It seems to mostly scroll vertically, but occasionally it's been diagonally. <br /><br />I'm assuming there's something quirky about writing to the PPU_ADDRESS that I'm missing OR I'm writing to it at the wrong time? Its being written during NMI. I'm using nesdoug's tutorials/example code as a baseline, so part of it is extracted <a href="https://github.com/mitch3b/BlockDude/blob/devL2andL3/reset.s" class="postlink">here</a>.<br /><br />Code snippet below (for all the code and this exact snippet, its  <a href="https://github.com/mitch3b/BlockDude/blob/devL2andL3/BlockDude.c#L183-L200" class="postlink">here</a>):<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">void remove_from_background(int x, int y) {<br />&nbsp; &nbsp;index = y/8;<br />&nbsp; &nbsp;//Nametable 0<br />&nbsp; &nbsp;PPU_ADDRESS = 0x20 + (index/8); <br />&nbsp; &nbsp;PPU_ADDRESS = 32*(index % 4) + (x/8); <br />&nbsp; &nbsp;PPU_DATA = 0x01;<br />&nbsp; &nbsp;Reset_Scroll();<br />}<br /></div><br /><br />Any help or info would be greatly appreciated <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /> Thanks in advance!

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>FrankenGraphics</b> [ Thu Jun 14, 2018 5:38 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Unwanted scrolling after writing to background</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I’m at work and can’t read the code atm, but it sounds like you need to do your updates prior to setting the scroll value, preferrably as part of the nmi routine. You can set some variable during your game logic to let the nmi routine know that this update is pending.<br /><br />edit: citing the nesdev wiki from under ”common pitfalls”<br /><br />”PPUSCROLL must always be set after using PPUADDR ($2006). They have a shared internal register and using PPUADDR will overwrite the scroll position.”<br /><br /><!-- m --><a class="postlink" href="https://wiki.nesdev.com/w/index.php/PPU_scrolling">https://wiki.nesdev.com/w/index.php/PPU_scrolling</a><!-- m -->

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>mitch3a</b> [ Thu Jun 14, 2018 5:46 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Unwanted scrolling after writing to background</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I vaguely remembered there was a detail like that, so that's why I added the &quot;Reset_Scroll&quot; call. Here is the full code of that method:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">void Reset_Scroll (void) {<br />&nbsp; &nbsp;PPU_ADDRESS = 0;<br />&nbsp; &nbsp;PPU_ADDRESS = 0;<br />&nbsp; &nbsp;SCROLL = 0;<br />&nbsp; &nbsp;SCROLL = 0;<br />}</div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>dougeff</b> [ Thu Jun 14, 2018 6:23 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Unwanted scrolling after writing to background</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I really should change my tutorial. This is a bit 'cargo cult' programming. Changing the PPU Address isn't necessary to set the scroll. Properly, the nametable selection should be a write to 2000 and then only 2 writes to 2005 (scroll) are required.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>mitch3a</b> [ Thu Jun 14, 2018 6:59 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Unwanted scrolling after writing to background</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />TIL the term &quot;cargo cult&quot; <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /> To be fair, even when doing a project from assembly from scratch, this was a part I definitely saw many issues with and were very difficult to debug. <br /><br />I'm still confused though. My intention is not to scroll the screen. My intention is to write to one specific background tile, but I'm seeing undesired scrolling afterwards. Even if I just replace &quot;Reset_Scroll&quot; with the two calls to set the X/Y scroll (&quot;SCROLL = 0&quot;), I still see the undesired scrolling. Not sure what 2000 has to do with it.<br /><br />Also, thanks for all the quick replies. These forums are amazing.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>gauauu</b> [ Thu Jun 14, 2018 7:26 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Unwanted scrolling after writing to background</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I'm no expert, but It sounds like one of a couple things might be happening:<br /><br />1. You're not actually writing the bg tiles during vblank, even though you think you are.<br />2. Somewhere else you're writing to the address register ($2006) without a final write to the scroll register.<br /><br /><br />I'd pull up a debugger, set a breakpoint on your code in question, and see if it's running during vblank like you expect. (Mesen has a PPU Status panel that indicates whether you're currently in vblanking or not) Step through and see if you're writing to the address register ($2006) outside of vblank, and make sure that any writes to the address register are followed up by setting the scroll before vblank ends.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>dougeff</b> [ Thu Jun 14, 2018 7:56 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Unwanted scrolling after writing to background</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Not sure what 2000 has to do with it.</div><br /><br />From the wiki on Register 2000, the bits are<br /><br />VPHB SINN<br /><br />NMI enable (V), PPU master/slave (P), sprite height (H), background tile select (B), sprite tile select (S), increment mode (I), nametable select (NN)<br /><br />Writing to the 2 lowest bits changes which nametable is rendered.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>dougeff</b> [ Thu Jun 14, 2018 8:22 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Unwanted scrolling after writing to background</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />By the way. Writes to the PPU must happen during v-blank or with rendering off (2001 register). And, Y scroll can't (normally) be set during rendering, and should also be done during v-blank or with rendering off.<br /><br />(there's a ton of exceptions and complicated tricks, but for simple use, this is generally good advice).<br /><br />Misaligned scroll can result from poorly timed writes.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Thu Jun 14, 2018 8:57 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Unwanted scrolling after writing to background</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The PPU has an address register that it uses to access VRAM, be it when the programmer is reading/writing from/to VRAM or when the PPU itself is reading it for the purpose of rendering a picture to the TV. This means that these things are always connected and can't happen simultaneously, which is why VRAM can only be changed during vblank, a time when the PPU is NOT accessing VRAM.<br /><br />Setting the scroll is essentially pointing the address register to the NT location that's supposed to appear at the top left corner of the screen (using the more convenient interfere that's register $2005), and if you touch the address register after doing that, you mess up that setting and the scroll will not be what you expect. If you're still getting unintentional scrolling after resetting the scroll in your vblank handler, you might be changing the VRAM address outside of vblank, which doesn't work the same way and should only be done in case of raster effects.<br /><br />Debug your program in an emulator like Mesen or FCEUX to make sure that all PPU accesses are indeed taking place during vblank, and that the scroll is being reset properly afterward (1 write to $2000 to select the name table, 2 writes to $2005 to set the scroll within that name table), still during vblank time.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Thu Jun 14, 2018 9:27 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Unwanted scrolling after writing to background</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I would suggest a few things, starting with a few rules of thumb: never manipulate registers directly in C, and never write timing-sensitive code in C.<br /><br /><br />So, this recommendation is to do all register interactions in assembly. Don't assign to them directly in C. Yes it technically works sometimes, but <a href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=9407" class="postlink">not always</a>, and there's a lot of ways it can fail.<br /><br />Wrap those interactions up in an interface to an assembly library, something like <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">set_ppu_address&#40;0x2110&#41;</tt> instead of two assignments to the $2006 register, <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">ppu_write&#40;0x50&#41;</tt> or <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">ppu_write_block&#40;buffer, 32&#41;</tt> instead of direct $2007 manipulation, etc.<br /><br />Finally, have an interface for setting the scroll like <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">set_scroll&#40;258,0&#41;</tt>, but don't have that function immediately write to $2005; keep track of the desired scroll, and use those variables later in your (assembly) code that turns on rendering ($2001) immediately beforehand. There's no need to write the scroll registers at any time earlier than this point, and the further you move it away from that, the more chances there are to accidentally stick something conflicting in between.<br /><br /><br />Turning on rendering needs to be done with precise timing, specifically within vblank. If you do it anywhere else, you'll get one frame of garbage before it resynchronizes itself. This should be timed using the NMI handler. If you make your library handle the scroll registers at that time, there's no possibility that it well be mistimed or corrupted by accidental intervening code.<br /><br />From the C side, I'd create a <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">render_on&#40;&#41;</tt> interface that waits for the next vblank, at which point it sets up the scroll registers and turns rendering on, before returning control back to your C program. This would also be paired with a <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">render_off&#40;&#41;</tt> that waits for vblank to disable rendering (so you don't get a half-blanked frame) before you start using the set_ppu_address/ppu_write interface suggested above. Even when writing directly in assembly, while I would definitely just write <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">STA $2007</tt> for efficiency, I would still put my timed rendering code in common subroutines like render_on/render_off and call those, to keep the number of places in my code that have to do critically timed accesses to a minimum.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>mitch3a</b> [ Thu Jun 14, 2018 10:26 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Unwanted scrolling after writing to background</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I REALLY like this idea to remove register interactions from the C code. Even without the potential cc65 undesired affects in translating to assembly, I do find it much more confusing having hardware specific code/values in C. And even better, as Doug pointed out, I'm suffering from Cargo Cult programming and this would be a great way to take his example and build my own solution from both sides that I can own and understand fully. I'll give it a try when I have some free time and see if it fixes my issue. <br /><br />Thanks again to everyone for their thoughts/advice!

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>dougeff</b> [ Thu Jun 14, 2018 10:37 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Unwanted scrolling after writing to background</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I'm suffering from Cargo Cult programming</div><br /><br />We both are. Obviously I saw this bit of code somewhere, and copied it without considering it first.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>dougeff</b> [ Thu Jun 14, 2018 3:34 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Unwanted scrolling after writing to background</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">interface to an assembly library</div><br /><br />You can make a macro that has inline assembly.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>mitch3a</b> [ Fri Jun 15, 2018 5:05 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Unwanted scrolling after writing to background</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />So I didn't have time to fix it the best way yet, but confirmed that some of your suggestions do fix the issue. To prove it, I stole a page out of doug's example code and just kept 2 vars for the memory location of the background tile in the assembly code that I can set from the C code and the assembly will write to the background every frame. So I'll obviously want to make sure this is only when I need it, but it at least proved that you folks were right. Thanks again!

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>mitch3a</b> [ Sat Jul 21, 2018 11:09 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Unwanted scrolling after writing to background</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I also encountered a second glitch that I was able to &quot;fix&quot; but wanted to double check I understood. Basically every NMI I set the vertical scroll value to 0xff (to account for sprites being 1 pixel off what you'd &quot;expect&quot;) in the assembly, but also had a &quot;reset_scroll&quot; method that I call every time I turn the PPU off then on again. That method was resetting vert scroll to 0x00, but even if I removed that method and relied on my nmi assembly code to set the scroll with the 1 pixel offset, every time I turned the PPU off then back on, there'd be a frame where the scroll would go back to 0x00 . Is this just expected behavior? That would account for why the code I had stolen as a starting point had a reset scroll call everytime the ppu was turned off then on. Just was hoping for a confirmation and any other relevant related info. Thanks!

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>