<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=3&amp;t=1895" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2006-08-15T05:21:05-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=3&amp;t=1895</id>
<entry>
<author><name><![CDATA[Disch]]></name></author>
<updated>2006-08-15T05:21:05-07:00</updated>
<published>2006-08-15T05:21:05-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1895&amp;p=16245#p16245</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1895&amp;p=16245#p16245"/>
<title type="html"><![CDATA[mmc3 catch up question]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1895&amp;p=16245#p16245"><![CDATA[
Unless you have your MMC3 IRQs tied to your PPU, they shouldn't <em>have</em> to catch the PPU up.  I thought you were trying to keep them serperate though?<br /><br />This sounds more like an IRQ prediction problem than anything else.  Is this the first mapper you've added which uses IRQs?<br /><br />What I usually do when adding a new type of mapper IRQ is I do the mapper catch-up and trigger portion first, then catch the <em>mapper</em> up between every CPU instruction.  Once I have it working, then I remove that and only have the mapper catch up on interesting reg writes, then impliment a prediction routine, and repredict IRQs whenever something interesting happens to them.<br /><br /><br />One thing that makes MMC3 so crazy is that it relies on MANY conditions, so you will need to catch-up and repredict when any of those conditions change.... such as:<br /><br />- PPU being turned on/off<br />- Sprite size changed<br />- pattern table select for BG or sprites changed<br />- $C000, $C001, $E000, $E001 writes<br /><br /><br />MMC3 probably has the second hardest IRQs to emulate (right behind mapper 90, which is pretty much the same thing, but has a bunch of other weird, weird crap).  If this is the first mapper you're adding support for which uses IRQs, you may want to do an easier one first so you can establish an IRQ catch up and prediction scheme which works using an easier mapper as a test.  Lots of mappers use a simple CPU cycle counter (mapper 069 comes to mind).  IRQ prediction doesn't get any easier than that.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=33">Disch</a> — Tue Aug 15, 2006 5:21 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[hap]]></name></author>
<updated>2006-08-15T03:10:00-07:00</updated>
<published>2006-08-15T03:10:00-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1895&amp;p=16244#p16244</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1895&amp;p=16244#p16244"/>
<title type="html"><![CDATA[mmc3 catch up question]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1895&amp;p=16244#p16244"><![CDATA[
What happens if you catch up the PPU after every CPU instruction?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=115">hap</a> — Tue Aug 15, 2006 3:10 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Anes]]></name></author>
<updated>2006-08-14T21:02:48-07:00</updated>
<published>2006-08-14T21:02:48-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1895&amp;p=16240#p16240</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1895&amp;p=16240#p16240"/>
<title type="html"><![CDATA[mmc3 catch up question]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1895&amp;p=16240#p16240"><![CDATA[
i cannot get working mmc3 catching up de ppu for an amount of cycles i mean i do the following:<br /><br />- I run for an entire frame<br />- I catch up the ppu on interesting things.<br />- Interisting things that im catching up are: chr-swapping, nt switch, 2005/2006 write / 2002 read<br />- When the frame ends executing i catch up again for the total frame cycles (so scanlines that didnt get drawed, they can draw).<br /><br />but in smb3 (as an example) the bottom floor doesn't appear.<br /><br />The problem is that IRQ is raised when i catch up at the end of the frame.. i mean when the frame ends (the loop) and no CPU instructions can execute.<br /><br />Any help?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=72">Anes</a> — Mon Aug 14, 2006 9:02 pm</p><hr />
]]></content>
</entry>
</feed>