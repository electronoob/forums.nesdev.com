<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - puNES Emulator</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">puNES Emulator</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=3&amp;t=6928">http://forums.nesdev.com/viewtopic.php?f=3&amp;t=6928</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>4</strong> of <strong>50</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Wed Mar 02, 2011 12:22 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Dwedit wrote:</div><div class="quotecontent">DirectDraw provides horrible vblank waiting code, then SDL uses that horrible vblank waiting code.</div>
<br />Is there a standard workaround to this without dropping Windows altogether?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>koitsu</b> [ Wed Mar 02, 2011 5:30 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Why is everyone guessing at what the root cause is?  Can no one profile the actual emulator?  :-)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dwedit</b> [ Wed Mar 02, 2011 5:34 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Because usually only bad vblank waiting code causes 100% CPU usage (of one core, don't be confused by numbers like "50% usage" on a dual core system), regardless of anything else.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>FHorse</b> [ Wed Mar 02, 2011 5:37 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I think the problem is my emulator (maybe) and that is why I continue to search a solution in the code. I'have uploaded the latest attempt if someone want try. When i drink three beer i think better (maybe) <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>James</b> [ Thu Mar 03, 2011 10:41 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent"><div class="quotetitle">Dwedit wrote:</div><div class="quotecontent">DirectDraw provides horrible vblank waiting code, then SDL uses that horrible vblank waiting code.</div><br />Is there a standard workaround to this without dropping Windows altogether?</div>
<br />
<br />Prior to migrating my emulator to DX10 (where the problem has, apparently,  been fixed), I would time the frame emulation and, if there were more than x milliseconds left before the next frame, I'd make a Sleep() call. The default granularity of Sleep() is 10ms, but if you want more accurate timing, it's possible to reduce it with another API call (don't remember what that call is...). Worked reasonably well.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>FHorse</b> [ Thu Mar 03, 2011 12:07 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />and that's exactly what I do in the version uploaded last night after three beers <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Thu Mar 03, 2011 1:06 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">FHorse wrote:</div><div class="quotecontent">and that's exactly what I do in the version uploaded last night after three beers <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /></div>
<br />Yeah CPU usage is down to 15% (software) / 25% (opengl) now.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>koitsu</b> [ Thu Mar 03, 2011 5:47 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Dwedit wrote:</div><div class="quotecontent">Because usually only bad vblank waiting code causes 100% CPU usage (of one core, don't be confused by numbers like "50% usage" on a dual core system), regardless of anything else.</div>
<br />Or someone using while(1) with no delays (or even if they use delays, using too small of a delay).  The renowned "amazing programmer" of Dwarf Fortress did this for many years; I wonder how many laptops he was responsible for destroying.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>dr_sloppy</b> [ Thu Mar 03, 2011 6:04 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Could you elaborate on that, please?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Zepper</b> [ Thu Mar 03, 2011 6:41 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">koitsu wrote:</div><div class="quotecontent"><div class="quotetitle">Dwedit wrote:</div><div class="quotecontent">Because usually only bad vblank waiting code causes 100% CPU usage (of one core, don't be confused by numbers like "50% usage" on a dual core system), regardless of anything else.</div><br />Or someone using while(1) with no delays (or even if they use delays, using too small of a delay).  The renowned "amazing programmer" of Dwarf Fortress did this for many years; I wonder how many laptops he was responsible for destroying.</div>
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">volatile int new_flag, old_flag;<br />static void clock_me&#40;&#41; &#123; new_flag++; &#125;<br /><br />while&#40;old_flag == new_flag&#41; &#123;<br />&nbsp;rest&#40;1&#41;;<br />&#125;<br />old_flag = new_flag;</div>
<br />
<br />- Any other suggestion, Mr. ? <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /> I'm tired of destroying laptops.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>koitsu</b> [ Fri Mar 04, 2011 2:44 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Simple: the processor (or a single core if applicable) is spinning away mindlessly in a while(1) loop.  Unless there are delays (sleeps) or other equivalents that result in the processor actually halting its operations, the processor is going to spin out of control.  Period.
<br />
<br />Many GUI-based libraries implement or wrap main() with their own routine to deal with this problem.  On the Windows platform, the easiest way to halt things effectively is to use <a href="http://msdn.microsoft.com/en-us/library/ms644936%28v=vs.85%29.aspx" class="postlink">GetMessage()</a> along with <a href="http://msdn.microsoft.com/en-us/library/ms644934%28v=vs.85%29.aspx" class="postlink">DispatchMessage()</a> and <a href="http://msdn.microsoft.com/en-us/library/ms644955%28v=vs.85%29.aspx" class="postlink">TranslateMessage()</a>.
<br />
<br />On UNIX and UNIX-like OSes, <a href="http://www.freebsd.org/cgi/man.cgi?query=select&amp;sektion=2" class="postlink">select()</a> is a common choice, while other operating systems like FreeBSD offer things like <a href="http://www.freebsd.org/cgi/man.cgi?query=kqueue&amp;sektion=2" class="postlink">kqueue()</a> which are more efficient (and are very reminiscent of how Windows does it).  Linux offers things like <a href="http://linux.die.net/man/4/epoll" class="postlink">epoll()</a>.  Solaris offers things like <a href="http://download.oracle.com/docs/cd/E19253-01/816-5177/poll-7d/index.html" class="postlink">poll(7d)</a> (do not confuse this with poll(2), which is different).
<br />
<br />EDIT: Oh, there's also <a href="https://computing.llnl.gov/tutorials/pthreads/#ConVarOverview" class="postlink">POSIX threads</a> (specifically pthread_cond_wait()), but FreeBSD behaves slightly different than OS X behaves slightly different than Linux behaves slightly different than Solaris.  :-)
<br />
<br />In summary, please:
<br />
<br />1) Don't program in 2010 like you're developing an application for a non-multitasking environment (e.g. MS-DOS days),
<br />
<br />2) Keep in mind that just because you don't see the repercussions of what you are currently doesn't mean they're not happening (the more cores you have the less likely you'll see this as 100% CPU time; remember, multiple cores get aggregated in total CPU usage, e.g. 100% of a single core on an 8-core machine is 12.5%),
<br />
<br />3) Spend the time to read up on whatever "core environment" you're using to find out if it wraps main() with its own routine.  If there's no documentation, ask the author to explain how it works or don't use it at all.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Fri Mar 04, 2011 5:32 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">koitsu wrote:</div><div class="quotecontent">Many GUI-based libraries implement or wrap main() with their own routine to deal with this problem.  On the Windows platform, the easiest way to halt things effectively is to use <a href="http://msdn.microsoft.com/en-us/library/ms644936%28v=vs.85%29.aspx" class="postlink">GetMessage()</a> along with <a href="http://msdn.microsoft.com/en-us/library/ms644934%28v=vs.85%29.aspx" class="postlink">DispatchMessage()</a> and <a href="http://msdn.microsoft.com/en-us/library/ms644955%28v=vs.85%29.aspx" class="postlink">TranslateMessage()</a>.<br /><br />On UNIX and UNIX-like OSes, <a href="http://www.freebsd.org/cgi/man.cgi?query=select&amp;sektion=2" class="postlink">select()</a> is a common choice, while other operating systems like FreeBSD offer things like <a href="http://www.freebsd.org/cgi/man.cgi?query=kqueue&amp;sektion=2" class="postlink">kqueue()</a> which are more efficient (and are very reminiscent of how Windows does it).  Linux offers things like <a href="http://linux.die.net/man/4/epoll" class="postlink">epoll()</a>.  Solaris offers things like <a href="http://download.oracle.com/docs/cd/E19253-01/816-5177/poll-7d/index.html" class="postlink">poll(7d)</a> (do not confuse this with poll(2), which is different).</div><br />Provided that one waiting function actually works for all sources of wakeup events in which a program is interested. For example, select() on Windows doesn't work on anything but network sockets. And can GetMessage() or select()/kqueue()/epoll() see vertical blanks?<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">3) Spend the time to read up on whatever "core environment" you're using to find out if it wraps main() with its own routine.  If there's no documentation, ask the author to explain how it works</div><br />Both "core environments" that I've used on Windows (Allegro and SDL) rely on a function in DirectX pre-10 known to use spin waiting. Good luck getting clarification out of Microsoft for best sleeping practice in DirectX pre-10 when Microsoft wants video game programmers to switch to a newer API that isn't ported to Windows XP so that it can get more users off of Windows XP and onto Windows 7.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">or don't use it at all.</div>
<br />Don't use (Windows|Linux|Mac OS X) at all? That almost sounds like console fanboys on Slashdot, who claim that individual independent game developers don't deserve to have a platform on which to make and self-publish a video game. Instead, they should move to a city and state with lots of established video game studios and work for ten years as an apprentice before putting their ideas into practice. I hope I misunderstood you.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>koitsu</b> [ Fri Mar 04, 2011 6:56 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">Provided that one waiting function actually works for all sources of wakeup events in which a program is interested. For example, select() on Windows doesn't work on anything but network sockets. And can GetMessage() or select()/kqueue()/epoll() see vertical blanks?</div><br /><br />I wouldn't use select() on Windows (I'm surprised it even exists), and Cygwin is a disgusting broken pile of shit -- please don't get me started on Cygwin, I can rant about it for weeks (and also do not respond with some nonsense like "well it works for me"; that's nice, it's still horribly broken -- there's too many reasons we're getting rid of it in our enterprise environment at my job and going pure Windows on our Win2K3 and 2K8 boxes).  It's also not relevant to the discussion; we're not talking about how to accomplish POSIX on Win32, we're talking about how to not chew up 100% CPU time while waiting for VBL.<br /><br />Regarding GetMessage() on Win32 and select/kqueue/epoll on *IX and VBL -- no, obviously these tools cannot "see" VBL.  They aren't intended for interfacing with graphics interfaces.  On Windows, DirectX provides that framework.  I'm not familiar with GUI/graphics implementations on *IX OSes, but I imagine there are many (probably SDL being the most common).  How those behave/work is unknown to me; I don't do graphics programming on Windows nor on *IX.  But I don't need to do graphics programming to apply the knowledge of the problem.  EDIT: It looks like SDL can accomplish proper VBL waiting by using the <a href="http://sdl.beuc.net/sdl.wiki/SDL_Flip" class="postlink">SDL_Flip</a> function (which also offers double buffering).  Of course, what this function does behind the scenes (meaning how it waits for VBL) is the entire point of this discussion.  :-)<br /><br />Simply put, a VBL firing should induce an interrupt (think: like NMI on the NES), which the kernel traps via an exception handler.  Video card drivers provide this (confirmed for nVidia, ATI, and Intel).  The handlers support applications (userland) to "tie in" to it, so that when the interrupt is seen the program then does something.<br /><br />kqueue can't tie in to a hardware interrupt directly, but it can tie in to a file descriptor or vnode.  The kernel driver would need to provide an interface (preferably through a file in /dev somewhere) for this to be beneficial.  I sure as hell would hope video card manufacturers who offer drivers for *IX would offer this capability (maybe not through /dev but a documented handler which a library (SDL, etc.) could utilise and tie into for VBL handling).<br /><br />GetMessage behaves similarly, as does select and epoll.  On Win32 there may be some added abstraction needed given the use of DirectX, but yes, they should absolutely be used.  If the graphics library/API provides its own methodology that accomplishes the same task, then that should be used.  But it needs to be documented for people to know about it.  I imagine Win32 absolutely offers some way to tie a hardware interrupt to a running program.<br /><br />The point I'm making: while(1) { jack-off; } is wrong.  Do not do it.  Instead, your application should simply block (resulting in it doing NOTHING CPU-wise) and wait for the kernel to tell it to do something.  If you ABSOLUTELY CANNOT do anything about it, then please sleep() for long durations of time within the while(1) loop to minimise impact.<br /><br />And before someone smarmy brings it up I'll cover my ass: it is absolutely fine to use while(1) when you know *for an absolute fact* that the loop will be broken out of VERY quickly.  A profiler will greatly help in determining how much time you spend inside such a loop.  Most present-day kernels use while(1) where applicable.  It's completely fine when you know for a fact the loop will exit very quickly.  Otherwise, you need to use locks and behave like I described above.  But for an overall "main" loop used in, say, main(), this is wrong and will result in CPU skyrocketing, which is exactly what Dwarf Fortress did and is what induced my "destroyed laptops" comment.<br /><br /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">Both "core environments" that I've used on Windows (Allegro and SDL) rely on a function in DirectX pre-10 known to use spin waiting.</div><br /><br />A spin wait/spin lock literally ties up the processor (a very small/short loop), and are heavily dependent upon their timeout/expire capability (hopefully being set to a VERY minimal/small value).  This broken design methodology is documented <a href="http://msdn.microsoft.com/en-us/library/system.threading.thread.spinwait.aspx" class="postlink">on Windows</a> as well as <a href="http://en.wikipedia.org/wiki/Busy_waiting" class="postlink">in general</a> (see 2nd paragraph).  For the Wikipedia link, see the section titled "Busy-waiting alternatives".  You'll also see in that section that sleep() is mentioned.  This is important.  EDIT: There's also an <a href="http://en.wikipedia.org/wiki/Spinlock#Alternatives" class="postlink">article about spinlock alternatives</a> which also delve into other options (such as switching threads; I wouldn't have thought of this, but sounds like an excellent method).<br /><br />So again: do not use while(1) { jack-off; }.  At bare minimum use sleep() or a wait condition inside of there, with a decently-sized number.  Please do not tie up the CPU when it doesn't need to be.<br /><br /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">Good luck getting clarification out of Microsoft for best sleeping practice in DirectX pre-10 when Microsoft wants video game programmers to switch to a newer API that isn't ported to Windows XP so that it can get more users off of Windows XP and onto Windows 7.</div><br /><br />I understand/acknowledge the complaint, but all it means is more coding efforts required on the part of the application programmer.  The programmer then has to use different design methodology for DX9 vs. DX10.  Many implement this by defining separate models/methodologies if DX8 is detected vs. DX9 vs. DX10.<br /><br />Encapsulating all of my points: take a look at the source code to NEStopia for how this is done.  Said emulator handles VBlank properly in multiple Windows OSes (read: across DX versions), and does not tie up CPU when unneeded.<br /><br /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">Don't use (Windows|Linux|Mac OS X) at all? That almost sounds like console fanboys on Slashdot ...  I hope I misunderstood you.</div>
<br />
<br />This isn't what I said / what I intended.  I said if you're using a graphics API or subsystem layer (example: Allegro), and it does not offer proper documentation outlining how the waiting methodology works, or the author cannot explain it, do not use the API/subsystem.  This is in no way shape or form the same as "do not use {insert OS here}".  There is no way I would advocate the latter; I am a vehement opponent of OS advocacy and a strong proponent of use-whatever-OS-suits-your-needs.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>koitsu</b> [ Fri Mar 04, 2011 7:45 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />In true koitsu fashion, I'm following up to my own post with further information -- mainly because I was curious how the hell SDL waits for VBL, particularly on Windows.
<br />
<br />The source is hardly documented -- in true open-source fashion! :-) -- so I had to make some educated guesses about where the DirectX piece is for SDL.  I believe this is it:
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">SDL-1.2.14/src/video/windx5/SDL_dx5video.c<br /><br />&nbsp;439 static int DX5_FlipHWSurface&#40;_THIS, SDL_Surface *surface&#41;;<br />...<br />2096 static int DX5_FlipHWSurface&#40;_THIS, SDL_Surface *surface&#41;<br />2097 &#123;<br />...<br />2103&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;/* to prevent big slowdown on fast computers, wait here instead of driver ring 0 code */<br />2104&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;/* Dmitry Yakimov &#40;ftech@tula.net&#41; */<br />2105&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;while&#40;IDirectDrawSurface3_GetFlipStatus&#40;dd_surface, DDGBS_ISBLTDONE&#41; == DDERR_WASSTILLDRAWING&#41;;<br />...<br /></div>
<br />
<br />I believe SDL 1.3 might use Direct3D instead -- which does VBL handling completely different (and more reliably from what I've been told by someone who does CUDA programming on a daily basis).  Okay, so let's find out what the heck IDirectDrawSurface3_GetFlipStatus is and does.  It looks like it's just <a href="http://msdn.microsoft.com/en-us/library/ms785083%28v=vs.85%29.aspx" class="postlink">GetFlipStatus</a>.
<br />
<br />So there's the likely while(1) equivalent in SDL, at least for DirectDraw, which doesn't help answer my question either, simply because I don't know what GetFlipStatus() does behind the scenes (DX/Microsoft code), but I sure hope it's intelligently done.  Honestly, the while() loop above  doesn't look like it waits for VBL at all, but again it depends on what GetFlipStatus() does behind the scenes.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>mudlord</b> [ Fri Mar 04, 2011 11:53 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">koitsu wrote:</div><div class="quotecontent">I believe SDL 1.3 might use Direct3D instead -- which does VBL handling completely different (and more reliably from what I've been told by someone who does CUDA programming on a daily basis).<br /></div>
<br />
<br />Yes, SDL HG has Direct3D/OpenGL blitters. Haven't tried it yet, but it does indeed use at least D3D9 for blits.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>4</strong> of <strong>50</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>