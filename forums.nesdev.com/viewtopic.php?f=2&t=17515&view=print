<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - AGNES, a simple yet powerful engine + framework.</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">AGNES, a simple yet powerful engine + framework.</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=17515">http://forums.nesdev.com/viewtopic.php?f=2&amp;t=17515</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>na_th_an</b> [ Wed Jul 11, 2018 4:19 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>AGNES, a simple yet powerful engine + framework.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><img src="https://raw.githubusercontent.com/mojontwins/MK1_NES/master/wip/img/AGNES_logo_web.png" alt="Image" /><br /><br /><strong>MT Engine MK1 NES / AGNES</strong> (or <strong>MK1_NES/AGNES</strong> for short) is a framework composed by a modular, highly customizable engine and a toolchain designed to make simple games for the NES. MK1_NES/AGNES has been designed to produce games which run in <strong>simple discrete logic mappers</strong> so they can be easily reproduced using cheap, readily available boards. <br /><br />So what can you make with this?, you may wonder. Well, many things:<br /><br /><ul><li>Flick-screen games (no scroll).</li><li>Top-down view or side view (platformer) games.</li><li>Acceleration/intertia/friction based movement, 100% configurable.</li><li>Several engines for side view games (run and jump, jet pack, diving, etc).</li><li>Several ways to kill enemies (shooting engine and, albeit only for the side view engine, punches and kicks, or jumping over enemies).</li><li>Integrated scripting engine (using a custom, simple language) and / or code injection points to make engine modifications easy.</li><li>Customizable screen renderer for map data.</li><li>Several ways to manage items and inventory which can be used together.</li><li>Interactive elements on screen (for example, NPCs).</li><li>A simple text box implementation.</li><li>Several kinds of enemies, and the ability to code simple behaviours.</li><li>Easy way to configure the actors’ bounding boxes for collision.</li><li>NROM or CNROM directly supported, GNROM easily manageable, UNROM definitely possible without much hassle.</li><li>Possibility of using extra, unused CHR-ROM banks to store binary data, making the most of oversize CN-ROM boards (for example, INL’s CNROM board which offers up to 128Kb of CHR-ROM data!).</li><li>You can always use stuff from our toolchain for things not related to our engine at all.</li></ul><br /><strong>Little FAQ</strong><br /><br />- <strong>Is this better than NESmaker?</strong><br />- This is <strong>not</strong> like NESmaker, not tries to compete against it. I just took our first NES engine and began cleaning it up - but ended rewriting it from scratch and liked the results, so I'm releasing it. It's just a simple engine you can use to create simple yet fun games easily. It targets small, simple discrete logic mappers.<br /><br />- <strong>Do I need to know programming?</strong><br />- Not really, but surely it helps. The more you can dig in the engine, the more unique your games will be.<br /><br />- <strong>Can I sell the games I create</strong><br />- Definitely. Just tell us first, we just like to know <img src="./images/smilies/icon_smile.gif" alt=":-)" title="Smile" />.<br /><br />You can check <a href="https://github.com/mojontwins/MK1_NES/tree/master/examples" class="postlink">some examples</a>:<br /><br /><strong>Cheril Perils Classic</strong><br /><img src="https://raw.githubusercontent.com/mojontwins/MK1_NES/master/wip/img/AGNES_Cheril_Perils_Classic.png" alt="Image" /><br /><br /><strong>Cadàveriön</strong><br /><img src="https://raw.githubusercontent.com/mojontwins/MK1_NES/master/wip/img/AGNES_Cadaverion.png" alt="Image" /><br /><br /><strong>Botèe</strong><br /><img src="https://raw.githubusercontent.com/mojontwins/MK1_NES/master/wip/img/AGNES_Bootee.png" alt="Image" /><br /><br />Grab it at:<br /><!-- m --><a class="postlink" href="https://github.com/mojontwins/MK1_NES">https://github.com/mojontwins/MK1_NES</a><!-- m --><br /><br />I've managed to write some documentation, but something like this needs a tutorial which I'm in the process of writing.<br /><br />I know this isn't the best place to promote something like this as most of you are proficient coders, but I just wanted to show you what I've been up to since January. Cheers!

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Banshaku</b> [ Wed Jul 11, 2018 6:08 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: AGNES, a simple yet powerful engine + framework.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I browsed lightly the code yesterday night to check how things can be done in C. My previous attempts were in asm only so example like theses will give me some pointers on how things should be done.<br /><br />The last thing I worked on 9 years ago what collision detection and had many issues with obscure bugs that I couldn't find the cause. I tried to find some example in you code but it was in the middle of the night so my mind was not clear enough anymore <img src="./images/smilies/icon_lol.gif" alt=":lol:" title="Laughing" /> what I wanted to check is when doing a platformer, in what order the checks are done and why. For example, if the actor would be moving right and falling at the same time, which one has priority when checking collision and why.  In my case I think I was checking the attribute of the metatile first in the moving direction then the falling one but sometime the actor was ejected in strange location which I didn't find the cause yet. <br /><br />Now that I'm remaking that logic in C and keep only the data processing in assembler, maybe those bugs won't happens but I just wanted to look at other people code for inspiration.<br /><br />As for the code, I didn't check much yet but one thing that really stands out is the amount of conditional compiler flags which I can see is to make it more flexible but at the same time makes the code harder to figure out what it does. I guess if you never edit the engine per-se then it's not an issue.  Another thing is a lot of code seems to be in the header files, which seems unusual for me but I didn't code in C for ages so maybe this is a common practice that I was not aware of.<br /><br />It's good to see initiatives like theses!  If I dive more into the code I will see to give some feedbacks about it.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>dullahan</b> [ Wed Jul 11, 2018 9:02 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: AGNES, a simple yet powerful engine + framework.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Thanks for sharing! Will definitely check this out.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>na_th_an</b> [ Thu Jul 12, 2018 12:28 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: AGNES, a simple yet powerful engine + framework.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Banshaku wrote:</div><div class="quotecontent">I browsed lightly the code yesterday night to check how things can be done in C. My previous attempts were in asm only so example like theses will give me some pointers on how things should be done.<br /><br />The last thing I worked on 9 years ago what collision detection and had many issues with obscure bugs that I couldn't find the cause. I tried to find some example in you code but it was in the middle of the night so my mind was not clear enough anymore <img src="./images/smilies/icon_lol.gif" alt=":lol:" title="Laughing" /> what I wanted to check is when doing a platformer, in what order the checks are done and why. For example, if the actor would be moving right and falling at the same time, which one has priority when checking collision and why.  In my case I think I was checking the attribute of the metatile first in the moving direction then the falling one but sometime the actor was ejected in strange location which I didn't find the cause yet. <br /><br />Now that I'm remaking that logic in C and keep only the data processing in assembler, maybe those bugs won't happens but I just wanted to look at other people code for inspiration.<br /><br />As for the code, I didn't check much yet but one thing that really stands out is the amount of conditional compiler flags which I can see is to make it more flexible but at the same time makes the code harder to figure out what it does. I guess if you never edit the engine per-se then it's not an issue.  Another thing is a lot of code seems to be in the header files, which seems unusual for me but I didn't code in C for ages so maybe this is a common practice that I was not aware of.<br /><br />It's good to see initiatives like theses!  If I dive more into the code I will see to give some feedbacks about it.</div><br /><br />I guess there's a lot of different approaches when it come to collision detection. I use box collision using a couple of points, or three if the player collision box is tall enough to exceed the height of a tile. The key is doing the axes separately. First the vertical, then the horizontal, or the way around (slopes work better if you do horizontal first, but this engine doesn't support slopes <em>yet</em>.<br /><br />What I usually do, for each axis, is first calculate the changes to V, then apply V to the coordinate, then check for collisions, the adjust if a collision was  registered. For collisions, it's easier to branch depending on the sign of V, so for example if you are in the vertical axis and V &lt; 0, you check the points at the top of the collision box only.<br /><br />As for the amount of conditional code, it's there 'cause there's a main config.h file in which you can heavily configure which modules you want and how they behave. Surely this makes understanding the code harder, but it allows for flexibility. Just changing config.h, the assets, and the code injection points or the script, you can create a wholly different game. Sgt. Helmet Training Day, a top-down shooter is in the testers directory, ported to this engine from the original assets in a matter of minutes.<br /><br />Take in mind that one of the goals is make the most of cheap mappers, specially CNROM, so the more stuff you can leave out, the better.<br /><br />For a much more didactic product in this matter (as it features nice, readable code, for example), I'd check <a href="https://forums.nesdev.com/viewtopic.php?f=2&amp;t=17295" class="postlink">NES Starting Kit</a>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Banshaku</b> [ Thu Jul 12, 2018 2:23 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: AGNES, a simple yet powerful engine + framework.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />@na_th_an<br /><br />My code for checking velocity is now based on some ported code from the asm version which used 2 bytes for it, one is the increment and the other was for precision (once precision passes over 0xFF, it increase the velocity) but in C I cannot uses the carry flag like asm so I need to improve the logic. I didn't use negative velocity too (my bad, the code was a quick hack a long time ago to test the engine) so I need to improve the current flow. It makes more sense with negative velocity since it reduces the tests, I need to test it that way.<br /><br />As for define, I didn't mean to complain, sorry if it looked that way. It just at first it seemed like a lot but there is reason so I have no issue with it. It just for an outsider, at first it's harder until you know the flags. Once known, it will be easier to follow. But like I said, if you never touch the engine then the only thing to be known is what the configuration flags are for.<br /><br />I will try to vertical collision then horizontal and see how it goes. Thanks for the tips!

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>dougeff</b> [ Thu Jul 12, 2018 4:55 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: AGNES, a simple yet powerful engine + framework.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />My thoughts. This would be more useful if it was easier to read.<br /><br />1. comment every variable when declared.<br /><br /><!-- m --><a class="postlink" href="https://github.com/mojontwins/MK1_NES/blob/master/examples/05_cheril_the_goddess_v1/dev/ram/zp.h">https://github.com/mojontwins/MK1_NES/b ... v/ram/zp.h</a><!-- m --><br /><br />I tried to make sense of these. Half I can't.<br /><br />2. Use slightly better descriptions than this...<br /><br /><!-- m --><a class="postlink" href="https://github.com/mojontwins/MK1_NES/blob/master/examples/05_cheril_the_goddess_v1/dev/assets/enems.h">https://github.com/mojontwins/MK1_NES/b ... ts/enems.h</a><!-- m --><br /><br />&quot;// Enems structure is {T XY1 XY2 P} x 3 x MAP_W x MAP_H&quot;<br /><br />What is T?<br />What is P?<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">but I just wanted to look at other people code for inspiration.</div><br /><br />So do I. I'm thinking about changing my tutorial completely, to use a &quot;vanilla&quot; neslib approach.<br /><br />I see @nathan that you are using a modified neslib. What is different about it?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>na_th_an</b> [ Thu Jul 12, 2018 10:51 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: AGNES, a simple yet powerful engine + framework.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I didnt intend this to be a piece of readable code <img src="./images/smilies/icon_wink.gif" alt=";-)" title="Wink" /> ideally, when the documentation is finished and the tutorial is written, you shouldn't have problems creating games. As I said, this is not a tutorial or a clean code showcase <img src="./images/smilies/icon_biggrin.gif" alt=":-D" title="Very Happy" /> anyways i'll try to find the time to better document the code. <br /><br />Neslib is not really modified. It's just the old version with famitone2 instead of famitone1.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Banshaku</b> [ Thu Jul 12, 2018 6:37 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: AGNES, a simple yet powerful engine + framework.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Yes, I saw thoses variables too <img src="./images/smilies/icon_lol.gif" alt=":lol:" title="Laughing" /> <br /><br />I guess there is no rush but if they cannot be renamed, at the least a simple comment about their usage would help to understand the engine better <img src="./images/smilies/icon_wink.gif" alt=";)" title="Wink" /><br /><br />Regarding neslib, unless you use a framework like AGNES that uses it, I found that I didn't need to use it that much once you understand more about how to interface your asm code with C. What was important was that the latest runtine for C65 was compiled with the strict minimum and I was fine. Neslib helped me understand how to interface my asm code with C so it was very useful as a learning process and I'm grateful about it. Now I do not need the code with what I'm testing. I did kept the pad routines since it was managing the trigger/state, 3 checks and felt it didn't worth updating my code and debug it when one is already working properly anyway.  <br /><br />Since my project used many concept that was different like list of metatile entity that are pushed to OAM buffer once process is finished I couldn't use the current methods. I may use the RLE screen one or maybe random, those one I may find some use at a later stage. As for NMI, I'm using dynamically set ones so I found a way to set them from C, which is useful for state management.<br /><br />My only concern with C is I don't know what cause bottleneck and should be avoided and what is perfect for. For example,  I try to avoid to call method in my logic check for the user input because I'm concerned that all those resulting jsr/parameters on the software stack (when applicable) would slow down then just using one big function. This is one thing I want to check in AGNES to have a better idea what should be done or not. <br /><br />I hope I can learn a lot of new tricks from it <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>na_th_an</b> [ Mon Jul 16, 2018 1:29 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: AGNES, a simple yet powerful engine + framework.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Thanks for the feedback <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /><br />Next in the TODO list, before v1.0 is released:<br /><br />- Describe globals in detail, and add comments to bss.h and zp.h.<br />- Document every #define in config.h.<br /><br />That would complete basic reference docs. A tutorial will be ready in the near future.<br /><br />Cheers!

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>dougeff</b> [ Mon Jul 16, 2018 2:26 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: AGNES, a simple yet powerful engine + framework.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />If you are renaming variables, consider renaming this specifically.<br /><br />i = pad_poll (0);<br /><br />Found in every game.<br /><br />'i' is about the least descriptive variable name, and confusing since it is also used for loops, and impossible to search for.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>na_th_an</b> [ Mon Jul 16, 2018 3:41 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: AGNES, a simple yet powerful engine + framework.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />You are right. I always have called it pad0, I dunno why I didn't get around changing it when I did the rewrite. Maybe 'cause it was gradual and never touched the &quot;heart&quot;.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Banshaku</b> [ Mon Jul 16, 2018 6:05 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: AGNES, a simple yet powerful engine + framework.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I guess when you write code fast those details often gets overlooked because they seems pretty obvious at the time and they provide quick feedback while prototyping. In those case, naming is not that important. It just when you start to read back that code 1 year from now and get in a world of hurt.<br /><br />In my case I don't know if it appropriate but I'm experimenting with a global variable that keep the state of the game so if the player manager requires to know about the pad it would do something like:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">// Retrieve global state <br />extern gameState_t g_gameState;<br /><br />...<br /><br />// somewhere later in the code <br />&nbsp; &nbsp; if (g_gameState.pad1.trigger &amp; PAD_A) { // or .state , depending on need<br /></div><br /><br />that way, it's pretty obvious what you are trying to do. Maybe I'm over-engineering, like always <img src="./images/smilies/icon_lol.gif" alt=":lol:" title="Laughing" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>na_th_an</b> [ Tue Jul 17, 2018 2:24 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: AGNES, a simple yet powerful engine + framework.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />If something makes readable code PLUS you are comfortable with it, go ahead <img src="./images/smilies/icon_biggrin.gif" alt=":-D" title="Very Happy" /><br /><br />I renamed &quot;i&quot; to &quot;pad0&quot; and wrote comments to zp.h and bss.h. Also reordered definitions so code is more tidy. All updated in the repo.<br /><br />Next thing is write up a reference to the #defines in config.h.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>na_th_an</b> [ Fri Jul 20, 2018 2:45 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: AGNES, a simple yet powerful engine + framework.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Update: added documentation about all those #defines in config.h and what to do with them. Also fixed a couple of minor bugs.<br /><br /><!-- m --><a class="postlink" href="https://github.com/mojontwins/MK1_NES/blob/master/docs/engine_config.md">https://github.com/mojontwins/MK1_NES/b ... _config.md</a><!-- m -->

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Banshaku</b> [ Fri Jul 20, 2018 7:57 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: AGNES, a simple yet powerful engine + framework.</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I just parsed very fast the md file and there is so much details! So many things can be done with it. Must have take a lot of time to make all of theses ^^;;  But this mean with that engine, once you know it well, you can make a lot of small games very fast.<br /><br />Good work <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>