<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Indirect indexed addressing</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Indirect indexed addressing</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=10&amp;t=6155">http://forums.nesdev.com/viewtopic.php?f=10&amp;t=6155</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rizz1010</b> [ Fri Mar 12, 2010 11:59 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Indirect indexed addressing</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Am I understanding indirect indexed addressing correctly?  I am using asm6 by the way.
<br />
<br />If I have these variables at $0400 and $0500
<br />$0400
<br />MyBytes  .byte 0, 0, 0, 0, 0, 0
<br />
<br />$0500
<br />Pointer   .byte 0, 0
<br />
<br />
<br />In my code, I initialize these variables like so:
<br />Pointer = $00 
<br />Pointer+1 = $04
<br />MyBytes = $AA
<br />MyBytes+1 = $BB
<br />MyBytes+2 = $CC etc
<br />
<br />Now, if I understand indirect indexed addressing on the 6502, I should be able to do this:
<br />LDA (Pointer), Y
<br />If Y = 1, then the accumulator should have $BB in it.  However, it turned out that $04 was added to the accumulator, which was taken from Pointer+1 (not MyBytes+1 which I expected).
<br />
<br />
<br />
<br />Thanks

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>koitsu</b> [ Sat Mar 13, 2010 1:57 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Let's not discuss assembler equates and so on -- they just add to the confusion when it comes to understanding a processor.  Let's discuss actual 6502 operation.  :-)  Note the below addresses/code doesn't correlate with anything on the NES -- it's just discussing 6502...
<br />
<br />Memory dump:
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">$00A0: 00 11 22 33 44 55 66 77 88 99 AA BB CC DD EE FF<br />...<br />$9980: 01 23 45 67 89 AB CD EF 00 00 00 00 69 77 23 11</div><br /><br />Code:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">LDY #4<br />LDA &#40;$A8&#41;,Y</div>
<br />
<br />The first thing the CPU does is read the bytes at $A8 and $A9.  $A8=88, $A9=99, so the "effective address" at this point is $9988.
<br />
<br />The next thing the CPU does is add Y to the effective address.  $9988 + 4 = $998C.
<br />
<br />Finally, the CPU reads into the accumulator the value stored at the final effective address (that's $998C), which is value $69.
<br />
<br />Make sense?  Just verifying you truly understand how post-indexed indirect addressing works.
<br />
<br />Your description of the problem almost makes sense, except you say "turns out $04 was added to the accumulator", which makes no sense whatsoever.
<br />
<br />My advice is to use asm6's -l (that's dash-ELL) flag to generate an assembly listing, which will tell you exactly what the assembler is doing with your code and what it actually assembles into.  You might be surprised to see something like, say, LDA (Pointer),Y being turned into LDA ($00),Y depending on whether or not you're actually saying "Pointer = $00" in your code or if you're doing "LDA #$00 ; STA Pointer".
<br />
<br />I'm willing to bet you've either got some equates like "Pointer = $00" (same as Pointer EQU $00) which are confusing you, or you've got some labels named the same thing for memory as you do for actual equates (such as in your above example, Pointer could be interpreted as both an equate to $00, AS WELL as label that effectively is at address $0500).  It's difficult to tell because of how you chose to word things, rather than just showing code.  :-)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Sat Mar 13, 2010 6:56 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I'm guessing you're using NESASM? <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /> In NESASM you can't use () for indirect addressing (because of its crappy parser I guess), you have to use [].
<br />
<br />Change your code to
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">LDA &#91;Pointer&#93;, Y</div>
<br />or maybe just scrap NESASM altogether and use ASM6/CA65 or something.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Banshaku</b> [ Sat Mar 13, 2010 7:37 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Yep, NESASM uses [] for indirect addressing. If you use () by mistake, no error will be thrown. This is what made the FT30 driver fail when I was converting it (forgot to convert some of them to []).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Sat Mar 13, 2010 9:57 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />And your pointers must be in zero page. The instruction "LDA ($XXXX), Y" doesn't exist, only "LDA ($XX), Y" does.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>koitsu</b> [ Sat Mar 13, 2010 10:57 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">thefox wrote:</div><div class="quotecontent">I'm guessing you're using NESASM?</div>
<br />
<br />The start of his post says he's using asm6, so my guess is that he's either using equates in a way that he's not sure of, or asm6 isn't throwing an error when trying to do something like
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">.org $0400<br />mylabel .db 0,0,0,0,0,0<br /><br />.org $8000<br />ldy #4<br />lda &#40;mylabel&#41;,y</div>
<br />
<br />And instead turning the LDA statement into something like LDA ($00),y or LDA ($04),y.  Hard to say -- again, listings generation can answer this.  But then again so could we if we could see the code.  ;-)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Sat Mar 13, 2010 12:28 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">koitsu wrote:</div><div class="quotecontent"><div class="quotetitle">thefox wrote:</div><div class="quotecontent">I'm guessing you're using NESASM?</div><br /><br />The start of his post says he's using asm6, so my guess is that he's either using equates in a way that he's not sure of, or asm6 isn't throwing an error when trying to do something like</div>
<br />Oops, missed that. It could indeed by that ASM6 parser is seeing this as LDA $0500,Y because of the non-zeropage address.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rizz1010</b> [ Sat Mar 13, 2010 2:02 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">And your pointers must be in zero page. The instruction "LDA ($XXXX), Y" doesn't exist, only "LDA ($XX), Y" does.</div>
<br />
<br />
<br />
<br />The solution has been found (it was the zero page issue).
<br />
<br />Sorry for the confusion in my post koitsu (my actual code was assembly friendly, using LDA, STA instructions).  When I read your post I was thinking "yes, that is exactly how I understand it" which was bugging me even more that my code wasn't working as was expected.
<br />
<br />
<br />Regarding the $04 value put into the accumulator, apparently, if you try a 2 byte value with indirect indexed addressing, it ignores the value <strong>inside </strong>the address, and uses the address itself.  So, going back to my example:
<br />LDA (Pointer), Y     ;Y = 1
<br />It took the address where Pointer was ($0500), added 1 to that ($0501), and put $04 into the accumulator.  $04 was the value held in $0501.
<br />
<br />
<br />And thanks for the debugger tip with -l.  I'd love to here a more detailed explanation of how to use that.  Where does the -l get added exactly?  As far as debugging goes, any other helpful hints are welcome.  The day I discovered the hex editor was so nice.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Sat Mar 13, 2010 4:37 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />If you use a value &gt; than $FF the assembler probably just considers the parenthesis as part of a logical expression (which evaluates to the value inside the parenthesis) rather than indirect addressing.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>koitsu</b> [ Sat Mar 13, 2010 7:09 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">rizz1010 wrote:</div><div class="quotecontent">And thanks for the debugger tip with -l.  I'd love to here a more detailed explanation of how to use that.  Where does the -l get added exactly?</div><br /><br />It's a command-line flag you pass to asm6.  Read the README.  :-)<br /><br />I'd love to classify this as an asm6 bug, however, I still don't understand the way the problem manifests itself.  You said:<br /><br /><div class="quotetitle">rizz1010 wrote:</div><div class="quotecontent">Regarding the $04 value put into the accumulator, apparently, if you try a 2 byte value with indirect indexed addressing, it ignores the value inside the address, and uses the address itself. So, going back to my example:<br />LDA (Pointer), Y ;Y = 1<br />It took the address where Pointer was ($0500), added 1 to that ($0501), and put $04 into the accumulator. $04 was the value held in $0501.</div>
<br />
<br />I don't know how that would even be possible.  The CPU doesn't know how to do anything like LDA ($0500),Y -- by this I mean there's no such addressing mode -- and the assembler should not be causing this somehow (the assembler doesn't know/care what Y is set to).
<br />
<br />If LDA ($0500),Y is permitted by asm6, then that's a bug in the assembler.
<br />
<br />Can you please show the listing generation for the code in question?  Let's get to the bottom of this.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>koitsu</b> [ Sat Mar 13, 2010 7:12 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">If you use a value &gt; than $FF the assembler probably just considers the parenthesis as part of a logical expression (which evaluates to the value inside the parenthesis) rather than indirect addressing.</div>
<br />
<br />I'm not sure that's the case either though, because:
<br />
<br />1) What would the "value for Pointer" expand to?  It should expand to a 16-bit address (e.g. $0500), which would turn the instruction into something invalid for the 6502 (specifically, LDA ($0500),Y).
<br />
<br />2) It doesn't explain how the assembler would somehow generate $0501 for any part of the effective address.
<br />
<br />3) He says "it took the address where Pointer was (e.g. $0500, added 1 to that (to make $0501), and loaded the contents from that address, which loaded $04 into the accum" -- that would imply the assembler, somehow, translated his code into either LDA $0500,Y (valid 6502, opcode $B9) or LDA $0501 (valid 6502, opcode $AD).
<br />
<br />The generated assembly listing should answer the question.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>cpow</b> [ Sat Mar 13, 2010 7:13 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Pointer = $00
<br />Pointer+1 = $04
<br />
<br />How is this even valid?  What am I missing?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>koitsu</b> [ Sat Mar 13, 2010 7:18 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">NESICIDE wrote:</div><div class="quotecontent">Pointer = $00<br />Pointer+1 = $04<br /><br />How is this even valid?  What am I missing?</div>
<br />
<br />He wrote "pseudocode" in attempt to say this:
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">LDA #$00<br />STA Pointer<br />LDA #$04<br />STA Pointer+1</div>
<br />
<br />Where Pointer is a label to $0500.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>cpow</b> [ Sat Mar 13, 2010 7:22 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">koitsu wrote:</div><div class="quotecontent">He wrote "pseudocode"</div>
<br />Oh thank goodness!

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>