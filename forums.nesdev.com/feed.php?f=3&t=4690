<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=3&amp;t=4690" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2009-01-03T17:40:59-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=3&amp;t=4690</id>
<entry>
<author><name><![CDATA[Zepper]]></name></author>
<updated>2009-01-03T17:40:59-07:00</updated>
<published>2009-01-03T17:40:59-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4690&amp;p=41277#p41277</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4690&amp;p=41277#p41277"/>
<title type="html"><![CDATA[Re: Mirroring strategy?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4690&amp;p=41277#p41277"><![CDATA[
<div class="quotetitle">ens_leader wrote:</div><div class="quotecontent"><br />I have 16-bitsof addressable memory allocated in the heap and accessed by a pointer (aka $0000-$FFFF).<br /><br />In other words:<br />char *memory = malloc(0xFFFF);<br /></div><br /><br />You mean...<br />char *memory = malloc(0x10000);<br /><br />EDIT- Bah, little things... already 2 guys! <img src="http://forums.nesdev.com/images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=39">Zepper</a> — Sat Jan 03, 2009 5:40 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Disch]]></name></author>
<updated>2009-01-03T14:26:29-07:00</updated>
<published>2009-01-03T14:26:29-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4690&amp;p=41270#p41270</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4690&amp;p=41270#p41270"/>
<title type="html"><![CDATA[Mirroring strategy?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4690&amp;p=41270#p41270"><![CDATA[
Good catch on the 0x10000 instead of 0xFFFF.<br /><br />Though I still want to stress he not take that approach.  It may seem logical to treat addressing space as a large array, but it really isn't.  You have to look for and catch reads/writes to special addresses anyway (for registers and stuff).  Plus it makes other aspects of emulating like bankswapping, RAM disabling, etc more complicated.<br /><br />But maybe I'm making too big of a deal.  Whatever way you can get it to work -- that's the way you should go.  <img src="http://forums.nesdev.com/images/smilies/icon_cool.gif" alt="8)" title="Cool" /><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=33">Disch</a> — Sat Jan 03, 2009 2:26 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[baisoku]]></name></author>
<updated>2009-01-03T10:22:20-07:00</updated>
<published>2009-01-03T10:22:20-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4690&amp;p=41262#p41262</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4690&amp;p=41262#p41262"/>
<title type="html"><![CDATA[Re: Mirroring strategy?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4690&amp;p=41262#p41262"><![CDATA[
<div class="quotetitle">ens_leader wrote:</div><div class="quotecontent"><br />char *memory = malloc(0xFFFF);<br /></div><br />You'll want to allocate 0x10000 bytes, also.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=35">baisoku</a> — Sat Jan 03, 2009 10:22 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2009-01-02T15:32:48-07:00</updated>
<published>2009-01-02T15:32:48-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4690&amp;p=41239#p41239</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4690&amp;p=41239#p41239"/>
<title type="html"><![CDATA[Mirroring strategy?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4690&amp;p=41239#p41239"><![CDATA[
This programm will make sure it does not run on your emulator <img src="http://forums.nesdev.com/images/smilies/icon_wink.gif" alt=":wink:" title="Wink" />   :<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">   lda #$00<br />--  sta $700<br />   cmp $f00<br />-  bne -<br />   clc<br />   adc #$01<br />   bne --</div><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Fri Jan 02, 2009 3:32 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Disch]]></name></author>
<updated>2009-01-02T15:28:58-07:00</updated>
<published>2009-01-02T15:28:58-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4690&amp;p=41238#p41238</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4690&amp;p=41238#p41238"/>
<title type="html"><![CDATA[Mirroring strategy?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4690&amp;p=41238#p41238"><![CDATA[
Mirroring is effectively a result of the address being bitmasked (due to not all of the address lines being used).  Therefore you can use bitmasking to easily accomplish mirroring:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">u8 RAM&#91;0x800&#93;;  // 0x800 bytes of system ram<br /><br />//...<br /><br />u8 Read_From_Address_Range_0000_1FFF&#40;u16 address&#41;<br />&#123;<br />  return RAM&#91; address &amp; 0x07FF &#93;;  // mask low bits to perform mirroring<br />&#125;<br /></div><br /><br />I'm also a fan of using function pointers to call a different function depending on the range the address falls in.  I forget the exact C syntax for it, but you probably get the idea:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">typedef u8 &#40;*readfunction&#41;&#40;u16 address&#41;;<br /><br />readfunction readproc&#91;0x10&#93;;  // 0x10 read functions, one for each 0x1000 block<br /><br />// on startup<br /><br />readproc&#91;0&#93; = read_ram;<br />readproc&#91;1&#93; = read_ram;<br />readproc&#91;2&#93; = read_ppu;<br />// etc<br /><br />// on read<br /><br />valueread = readproc&#91;address &gt;&gt; 12&#93;&#40;address&#41;;<br /></div><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=33">Disch</a> — Fri Jan 02, 2009 3:28 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Celius]]></name></author>
<updated>2009-01-02T15:26:43-07:00</updated>
<published>2009-01-02T15:26:43-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4690&amp;p=41237#p41237</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4690&amp;p=41237#p41237"/>
<title type="html"><![CDATA[Mirroring strategy?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4690&amp;p=41237#p41237"><![CDATA[
I don't think it's good to copy the page like you're doing, simply because there's a time interval where the pages aren't the same. This is pretty bad, and could prove catastrophic to a game that uses those mirrors a lot.<br /><br />Here's what I'd do. Take a look at these things:<br /><br />sta $0700<br />sta $0F00<br />sta $1700<br />sta $1F00<br /><br />These are essentially saying the same things. They are all saying sta $700. Look at these values in binary:<br /><br />$0703 = 0000 0111 0000 0011<br />$0F03 = 0000 1111 0000 0011<br />$1703 = 0001 0111 0000 0011<br />$1F03 = 0001 1111 0000 0011<br /><br />Notice that the first 11 bits are all the same. Any of the high 5 bits can be ignored. So when one is writing to/reading from any address from $00-$1FFF, you can just AND the value by $07FF.<br /><br />I'm not an emulator author, or even much of a C programmer. Sorry if this doesn't help.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=138">Celius</a> — Fri Jan 02, 2009 3:26 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2009-01-02T15:12:26-07:00</updated>
<published>2009-01-02T15:12:26-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4690&amp;p=41235#p41235</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4690&amp;p=41235#p41235"/>
<title type="html"><![CDATA[Mirroring strategy?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4690&amp;p=41235#p41235"><![CDATA[
Try making an array of 16 pointers. Each points to the beginning of a block of 4096 (0x1000) bytes of memory, either RAM or ROM. Whenever you read a CPU address &gt;= 0x4018, read through that pointer.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Fri Jan 02, 2009 3:12 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[ens_leader]]></name></author>
<updated>2009-01-02T15:01:31-07:00</updated>
<published>2009-01-02T15:01:31-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=4690&amp;p=41234#p41234</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=4690&amp;p=41234#p41234"/>
<title type="html"><![CDATA[Mirroring strategy?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=4690&amp;p=41234#p41234"><![CDATA[
I was just curious how you guys handle mirroring properly. Heres my implementation:<br /><br />I have 16-bitsof addressable memory allocated in the heap and accessed by a pointer (aka $0000-$FFFF).<br /><br />In other words:<br />char *memory = malloc(0xFFFF);<br /><br />Now,<br />Every 50ms (with a timer) I run a loop that takes all the data from $0000-$07FF and copies them to $0800-$1FFF. This is my implementation of "mirroring" But I really think its inefficient. What do you guys recommend?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3726">ens_leader</a> — Fri Jan 02, 2009 3:01 pm</p><hr />
]]></content>
</entry>
</feed>