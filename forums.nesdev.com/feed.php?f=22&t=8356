<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=22&amp;t=8356" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2011-11-25T14:32:29-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=22&amp;t=8356</id>
<entry>
<author><name><![CDATA[pcube]]></name></author>
<updated>2011-11-25T14:32:29-07:00</updated>
<published>2011-11-25T14:32:29-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8356&amp;p=86810#p86810</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8356&amp;p=86810#p86810"/>
<title type="html"><![CDATA[nesfpga -- Verilog Based NES Targeting FPGA Devices]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8356&amp;p=86810#p86810"><![CDATA[
Thanks for the kind welcome.<br /><br />I'm not very savvy with mappers, but it sounds exciting. Fortunately our projects are nicely divided in that they can communicate abstractly to one another.. and clearly a cpu &amp; rom without its associated mapper(s) is not very fun. <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" />  I looked at your project thread and am thoroughly impressed! I can see how it's a lot of work. In light of this, I will definitely need to make the bus timing cycle accurate to interface correctly with standard mappers.<br /><br />For ROM loading, I've got a flash loader that I wrote a long time ago, but implementing it again in case I can't find it is trivial. The plan is to load ROMs from a flash card. I'm going for trying to shrink the pcb area as much as possible while keeping everything necessary for operation on board.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5105">pcube</a> — Fri Nov 25, 2011 2:32 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[infiniteneslives]]></name></author>
<updated>2011-11-24T18:51:56-07:00</updated>
<published>2011-11-24T18:51:56-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8356&amp;p=86775#p86775</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8356&amp;p=86775#p86775"/>
<title type="html"><![CDATA[nesfpga -- Verilog Based NES Targeting FPGA Devices]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8356&amp;p=86775#p86775"><![CDATA[
WELCOME!<br /><br />WOOT WOOT for open source!   I'm really interested in this project because of that.  <br /><br />I'm in a similar situation although I won't graduate for another 6 months.  Right now I'm working on the <a href="http://nesdev.com/bbs/viewtopic.php?t=8084&amp;highlight" class="postlink">NESDEV1 project</a> for my senior design project this year.<br /><br />While I would be interested in helping out on this project, only really have time to follow along with your progress.  However the work I'm doing may be able to be incorporated with yours in the form of mappers.<br /><br />How do you plan to implement cartridges/roms?  Because my goal is to finish all descrete mappers, MMC1, and MMC3 in verilog, (perhaps MMC2,4, and FME7 later on) fully testing on the devcart/NES and releasing open source.  They would seem to be a great addition to your project.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4832">infiniteneslives</a> — Thu Nov 24, 2011 6:51 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[pcube]]></name></author>
<updated>2011-11-24T15:15:33-07:00</updated>
<published>2011-11-24T15:15:33-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8356&amp;p=86761#p86761</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8356&amp;p=86761#p86761"/>
<title type="html"><![CDATA[nesfpga -- Verilog Based NES Targeting FPGA Devices]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8356&amp;p=86761#p86761"><![CDATA[
Greetings,<br /><br />This is my first post, so allow me to briefly introduce myself. I'm a recent grad that's currently employed in FPGA based digital hardware design. I'm a retro gamer whose childhood was practically founded on the nintendo's old systems, including, of course, the NES! As such, I've been dedicating my free time towards a personal milestone -- to make an open source FPGA based implementation of the NES. The plan is that it won't end there, but I'm taking it one step at a time. I'd like to thank all of the users and maintainers of this superb resource, and look forward to contributing in any way I can. <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":-)" title="Smile" /><br /><br /><br />--- Project Details ---<br />overview:<br />I began this project about a year ago while completing my senior year in college. The project remained stagnant for the passed few months, but recently I've found enough regular free time to get it in motion again. As a side-note I am aware that there are 6502 cores out there, but I would personally rather make the endeavor myself. I feel like I owe it to the system, and it's honestly quite fun!<br /><br />This project's goal is to create a FPGA based (verilog only) design that performs cycle-accurate execution of 6502 instructions.<br /><br />The defining feature of this architecture is that native instructions are internally translated to microinstructions to simplify the internal logic of the FPGA. Will preserve inst. cycle count behavior, but not sure if I need to obey bus timing behavior as well yet. A nice side-effect of this is that technically any 8-bit opcode centered ISA can be translated by simply replacing the ROM contents of the translation unit. I've been spending the passed week hacking out a μISA with a software buddy of mine and have finally finished v1.0 of the μISA. Our next tasks are to start writing the translations &amp; research the strictness of bus-timing the MMIO (we're going to be making the PPU as a VGA based interface, so my theory is that we don't need to be completely stringent to the bus-timing limits of the original NES).<br /><br />As always I'd be glad to share any resources in the project and will give public access to the SVN as soon as we get it setup. In case anyone is interested, here is a link to the first revision of the μISA we've reduced the native ISA to: <!-- m --><a class="postlink" href="http://www.2shared.com/document/OUv43aNn/architecture.html">http://www.2shared.com/document/OUv43aN ... cture.html</a><!-- m --><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5105">pcube</a> — Thu Nov 24, 2011 3:15 pm</p><hr />
]]></content>
</entry>
</feed>