<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=23" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2019-05-22T19:07:22-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=23</id>
<entry>
<author><name><![CDATA[profi200]]></name></author>
<updated>2019-05-22T19:07:22-07:00</updated>
<published>2019-05-22T19:07:22-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=18490&amp;p=239191#p239191</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=18490&amp;p=239191#p239191"/>
<title type="html"><![CDATA[Other Retro Dev • Re: 3DS reverse engineering]]></title>

<category term="Other Retro Dev" scheme="http://forums.nesdev.com/viewforum.php?f=23" label="Other Retro Dev"/>
<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=18490&amp;p=239191#p239191"><![CDATA[
<div class="quotetitle">nocash wrote:</div><div class="quotecontent"><br />Well, about 10000 cycles at 134MHz for 24bits... would be 3us per bit. Maybe not so fast for modern hardware, but also not too slow.<br /></div><br />134 MHz is half of the ARM11's core clock. On New 3DS cores can even run up to 804 MHz (clock multiplier 1, 2 or 3).<br /><br /><div class="quotetitle">nocash wrote:</div><div class="quotecontent"><br />At the moment I am looking into porting Wifiboot from nds/dsi to 3ds. That does also require hundreds of subtle changes (memory map, I/O map, missing SWI function on 3DS, missing NDS-style 16bit DMA channels, different video hardware, and so on). But it should be doable, in 1-2 weeks or so.<br />The nice thing would be that it would allow to upload FIRM files directly without needing the 3DS OS at all. I guess that's something that wasn't done by anybody yet?<br /></div><br />No one has attempted this yet due to differences in hardware/WiFi module firmware and because it's super complex writing a driver and network stack for this monster. All that must be done on ARM11 since the IRQs are only routed to the ARM11 GIC[1] (generic interrupt controller).<br /><br /><br />[1] ARM doesn't actually call it GIC (for ARMv6 it seems to have no name at all?) but it's almost identical to the very first (official) GIC that was introduced in ARMv7. Really the only real difference seem to be the TrustZone support and a few changed registers. It's way more advanced than any the IRQ hardware used on 3DS ARM9 and on GBA/DS(i).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=14565">profi200</a> — Wed May 22, 2019 7:07 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[coto]]></name></author>
<updated>2019-05-22T11:36:12-07:00</updated>
<published>2019-05-22T11:36:12-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=18490&amp;p=239181#p239181</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=18490&amp;p=239181#p239181"/>
<title type="html"><![CDATA[Other Retro Dev • Re: 3DS reverse engineering]]></title>

<category term="Other Retro Dev" scheme="http://forums.nesdev.com/viewforum.php?f=23" label="Other Retro Dev"/>
<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=18490&amp;p=239181#p239181"><![CDATA[
A bit off topic but<br /><br /><div class="quotetitle">nocash wrote:</div><div class="quotecontent"><br />Currently I am still wifi-uploading my FIRM code to DSi, and then use the DSi to rewrite the hardmodded 3DS FIRM. It's working fine, except that I need to plug/unplug the 3DS from the DSi's SD/MMC slot for each upload (plus, I have only one battery charger, so one of two console regularily dies if I forget to switch them off after uploading).<br /></div><br /><br />1) Isn't it cool to upload things through WIFI to DS(i)? That speeds up the development time testing a lot. (<!-- m --><a class="postlink" href="https://bitbucket.org/Coto88/toolchaingenericds-ftpserver/src">https://bitbucket.org/Coto88/toolchaing ... server/src</a><!-- m -->)<br /><br />2) Also you are one the few DIY guys I know, I thought you already had a DIY male USB connector, by ripping the data cables and soldering the positive (+) and negative (-) ends with two DSi-3DS charger port connectors<br /><br />I have two of these, one for plugging GBA/NDS/DSlite/DSi and the other exactly as above for DSi/3DS<br /><br />edit:<br /><div class="quotetitle">nocash wrote:</div><div class="quotecontent"><br />The nastiest part is the MMU. Even if it's relative easy to emulate - it will slowdown the whole CPU emulation. It will require to translate all addresses, and also to check if sequential opcodes fetches are crossing into a new memory page. There it'll really make sense to use two different code versions: fast emulation without 3DS support, and a slower version with 3DS support.<br /></div><br /><br />3) the MPU emulation is very similar to MMU emulation (MPU stalls/changes CPU into dataabort/instruction abort if desired), except there is no translation tables but the region protector behaves the same. I planned to support MPU emulation in gbaemu4ds but I dropped the project. <br /><br />The slowdown happens during CPU Read/Writes and checking the current MPU/MMU state. The problem is somewhat solved by saving up to n MPU/MMU &quot;states&quot;. Also there is to consider the current AMBA 2.0 (AHB Bus Protocol) --&gt; NDS(i) <br /><br />and<br />AMBA 3 (AXI Bus Protocol) --&gt; 3DS<br /><br />implementation. Since the MPU/MMU will halt the processor(s) by an exact cycle duty depending on the ARM bus.<br /><br />AMBA 2.0 (AHB Bus Protocol) vs AMBA 3 (AXI Bus Protocol):<br /><!-- m --><a class="postlink" href="http://tiny.cc/4aclvy">http://tiny.cc/4aclvy</a><!-- m --><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=13529">coto</a> — Wed May 22, 2019 11:36 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[nocash]]></name></author>
<updated>2019-05-22T10:10:27-07:00</updated>
<published>2019-05-22T10:10:27-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=18490&amp;p=239176#p239176</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=18490&amp;p=239176#p239176"/>
<title type="html"><![CDATA[Other Retro Dev • Re: 3DS reverse engineering]]></title>

<category term="Other Retro Dev" scheme="http://forums.nesdev.com/viewforum.php?f=23" label="Other Retro Dev"/>
<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=18490&amp;p=239176#p239176"><![CDATA[
<div class="quotetitle">profi200 wrote:</div><div class="quotecontent"><br />If i recall correctly it was the entire transfer including device and register select. Still very slow for a single byte reg write<br /></div>Well, about 10000 cycles at 134MHz for 24bits... would be 3us per bit. Maybe not so fast for modern hardware, but also not too slow.<br /><br /><div class="quotetitle">profi200 wrote:</div><div class="quotecontent"><br />There are only 2 known FIRM partition sighax signatures in the wild. Ours and the one boot9strap uses. It's enough to check hashes.<br /></div>Yes, except, from my &quot;hardmod without OTP dump&quot; perspective: I couldn't decrypt the FIRM sectors without OTP, and thus couldn't check what kind of hashes are in there (and if I had OTP dump then I wouldn't need to check the hashes because I could just overwrite everything with my own FIRM code/header).<br />But well, my hardmod approach is probably quite uncommon, and most other people use softmod/exploits. On the other hand, there are probably a bunch of people with bricked consoles, then they would need hardmods (but yeah, I guess they would rarely know how to repair even simple issues like deleted files, so the hardmod won't really help in most cases).<br /><br />---<br /><br />I haven't looked into 3DS MMU yet, but &quot;page walking&quot; sounds a bit familar. As far as I remember, 80386 is having one table for larger memory blocks with pointers to tables for the smaller 4Kbyte page addresses (and access rights). I guess 3DS works similar.<br /><br /><div class="quotetitle">PSI wrote:</div><div class="quotecontent"><br />To actually get a firmware or payload to boot is more involved. You need AES, SHA, and RSA hardware all implemented, and the eMMC protocol must obviously be implemented too. You will also need the OTP and the NAND CID: OTP is used to derive the console-unique keys to decrypt the NAND, and the CID is also used for decryption.<br /></div>I already have all that program code from the DSi emulation (plus a newer SHA256 function for 3DS eMMC decoding). It would be quite some work to map that functions to the 3DS memory map - but at least I do have the code, and more or less know what to do with it.<br /><br /><div class="quotetitle">Arisotura wrote:</div><div class="quotecontent"><br />if I were you, I would make a separate no$3ds/whatever emulator for this. the 3DS may share a lot of hardware with the DSi for backwards compatibility purposes, but for the purpose of running 3DS software, most of the underlying hardware is completely different.<br />I'd just worry that cramming all these consoles into one project would result in a bloated codebase, but eh, your choice.<br /></div>Yeah, I had (originally) thought that 3DS emulation would require new emulator instead of adding 3DS support no$gba. But then... the 3DS does support GBA/NDS/DSi modes, so it would be contraproductive to start a new project with all that features removed.<br /><br />At 1st glance the 3DS I/O map looks fairly different than DSi, but at 2nd glance it's merely using new base addresses for the old I/O ports. Well, and at 3rd glance there might be hundreds of other subtle differences that I am not aware of yet - but for now, I think I would start with expanding no$gba instead of starting a new emulator, I could still split projects later if needed.<br /><br />The nastiest part is the MMU. Even if it's relative easy to emulate - it will slowdown the whole CPU emulation. It will require to translate all addresses, and also to check if sequential opcodes fetches are crossing into a new memory page. There it'll really make sense to use two different code versions: fast emulation without 3DS support, and a slower version with 3DS support.<br /><br />But I am still miles away from emulating MMU or GPU. Before going there, I will first need to emulate the bootrom, and/or basic FIRM code.<br /><br /><div class="quotetitle">Arisotura wrote:</div><div class="quotecontent"><br />also, if you're ever interested into updating the DS documentation: I have a whole pile of errata/additions<br /></div>Thanks, yes, I am interested! Ah, on the other hand I am busy with 3DS at the moment (and for some of the older NDS specs I don't even remeber what I had written there years ago). Maybe I can go through the errata step-by-step, and post questions/comments in a separate thread... at times when I need a break from 3DS stuff : )<br /><br />---<br /><br />At the moment I am looking into porting Wifiboot from nds/dsi to 3ds. That does also require hundreds of subtle changes (memory map, I/O map, missing SWI function on 3DS, missing NDS-style 16bit DMA channels, different video hardware, and so on). But it should be doable, in 1-2 weeks or so.<br />The nice thing would be that it would allow to upload FIRM files directly without needing the 3DS OS at all. I guess that's something that wasn't done by anybody yet?<br />Currently I am still wifi-uploading my FIRM code to DSi, and then use the DSi to rewrite the hardmodded 3DS FIRM. It's working fine, except that I need to plug/unplug the 3DS from the DSi's SD/MMC slot for each upload (plus, I have only one battery charger, so one of two console regularily dies if I forget to switch them off after uploading).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5211">nocash</a> — Wed May 22, 2019 10:10 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Arisotura]]></name></author>
<updated>2019-05-19T08:35:42-07:00</updated>
<published>2019-05-19T08:35:42-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=18490&amp;p=239067#p239067</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=18490&amp;p=239067#p239067"/>
<title type="html"><![CDATA[Other Retro Dev • Re: 3DS reverse engineering]]></title>

<category term="Other Retro Dev" scheme="http://forums.nesdev.com/viewforum.php?f=23" label="Other Retro Dev"/>
<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=18490&amp;p=239067#p239067"><![CDATA[
'aight<br /><br /><a href="http://melonds.kuribo64.net/board/thread.php?id=13" class="postlink">general GBAtek addendum/errata</a><br /><a href="http://melonds.kuribo64.net/board/forum.php?id=4" class="postlink">the development forum</a> for more<br />3D GPU info <a href="http://melonds.kuribo64.net/comments.php?id=56" class="postlink">here</a> and <a href="http://melonds.kuribo64.net/comments.php?id=85" class="postlink">here</a><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=14662">Arisotura</a> — Sun May 19, 2019 8:35 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2019-05-19T07:41:19-07:00</updated>
<published>2019-05-19T07:41:19-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=18490&amp;p=239066#p239066</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=18490&amp;p=239066#p239066"/>
<title type="html"><![CDATA[Other Retro Dev • Re: 3DS reverse engineering]]></title>

<category term="Other Retro Dev" scheme="http://forums.nesdev.com/viewforum.php?f=23" label="Other Retro Dev"/>
<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=18490&amp;p=239066#p239066"><![CDATA[
Go ahead and post the link. We don't have a &quot;no external links for new users&quot; policy.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Sun May 19, 2019 7:41 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Arisotura]]></name></author>
<updated>2019-05-19T07:15:40-07:00</updated>
<published>2019-05-19T07:15:40-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=18490&amp;p=239065#p239065</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=18490&amp;p=239065#p239065"/>
<title type="html"><![CDATA[Other Retro Dev • Re: 3DS reverse engineering]]></title>

<category term="Other Retro Dev" scheme="http://forums.nesdev.com/viewforum.php?f=23" label="Other Retro Dev"/>
<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=18490&amp;p=239065#p239065"><![CDATA[
bürp<br /><br />so I see you're attempting to emulate the 3DS, good luck with this project<br /><br />I have a few things to say, tho<br /><br /><div class="quotetitle">nocash wrote:</div><div class="quotecontent"><br />Yeah, the MMU is keeping me away from adding 3DS support in no$gba, too. At the moment, I don't even know what page-size it is using. I have no clear picture of what needs to be done for emulating it.<br /><br />Another small obstacle is that no$gba is currently designed to map most I/O ports to only ARM7, or only ARM9. Whilst 3DS seems to allow to access (many) I/O ports from either ARM9 or ARM11 (or both). Well, that isn't a major problem, but I may need to rewrite a bunch of code, instead of just re-using the old DSi emulation for 3DS.<br /><br />The good thing about 3DS is that the bootroms are dumped meanwhile, so one can start emulation &amp; research at power-up time. For the DSi, the bootroms are still undumped. And, when I had starting to emulate DSi, it wasn't even known how to decrypt the eMMC bootsectors, so emulation had to start excecution <em>after</em> the yet unknown boot process (that wasn't so funny to work that way).<br /></div><br />if I were you, I would make a separate no$3ds/whatever emulator for this. the 3DS may share a lot of hardware with the DSi for backwards compatibility purposes, but for the purpose of running 3DS software, most of the underlying hardware is completely different.<br /><br />I'd just worry that cramming all these consoles into one project would result in a bloated codebase, but eh, your choice.<br /><br />other than that, well, have fun! emulating the 3DS at low level sounds like an interesting challenge.<br /><br />--<br /><br />also, if you're ever interested into updating the DS documentation: I have a whole pile of errata/additions sitting at the melonDS forum (I would link to the thread, but I'm afraid I might get hit by some spam protection, seeing as I'm a newb here)<br /><br />there's also quite a bunch of low-level research on the 3D GPU thing it uses, but enough offtopicness<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=14662">Arisotura</a> — Sun May 19, 2019 7:15 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[nocash]]></name></author>
<updated>2019-05-19T06:12:45-07:00</updated>
<published>2019-05-19T06:12:45-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=18490&amp;p=239064#p239064</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=18490&amp;p=239064#p239064"/>
<title type="html"><![CDATA[Other Retro Dev • Re: 3DS reverse engineering]]></title>

<category term="Other Retro Dev" scheme="http://forums.nesdev.com/viewforum.php?f=23" label="Other Retro Dev"/>
<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=18490&amp;p=239064#p239064"><![CDATA[
Okay, I've found the DSi-style &quot;00524C00h&quot; load address, and alongsides also found all the other stuff at nearby addresses, including CMP opcodes for the &quot;label 1,4,5&quot; part. Instead of a table of contents, the addresses are just hardcoded constants in the literal pool. Base address seems to be 100000h, ie. ARM address 13D84Ch means file offset 3D84Ch.<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">  Offset<br />  07248h    value 00524C00h   ;dst for stub.data and/or main.code?          ;\<br />  0724Ch          00145142h ;src.end  ;\len 78F6h  (2nd main) (aka label 5) ;<br />  07250h          0013D84Ch ;src      ;/                                    ;/<br />  ...<br />  097C4h    cmp r0,1h         ;\<br />  097C8h    cmp r0,4h         ; &quot;labels&quot; for different main's<br />  097CCh    cmp r0,5h         ;/<br />  ...<br />  098E8h    value 00524C00h ;dst for stub.data and/or main.code             ;\<br />  098ECh          00145142h ;src.end  ;\len 78F6h  (2nd main) (aka label 5) ;<br />  098F0h          0013D84Ch ;src      ;/                                    ;/<br />  098F4h    value 0053FE18h ;dst for database?                          ;\<br />  098F8h          0014F380h       ;\len 1E8h (probably database?)       ;<br />  098FCh          0014F198h       ;/                                    ;/<br />  09900h    value 00527000h ;dst for stub.code (aka 927000h)            ;\<br />  09904h          0014F696h ;src.end ;\len 316h (stub.code)             ;<br />  09908h          0014F380h ;src     ;/         &lt;-- file.offs = 4F380h  ;/<br />  0990Ch          0014F6D0h ;src.end ;\len 38h (stub.data)<br />  09910h          0014F698h ;src     ;/<br />  0991xh          ..<br />  09920h          0013D84Bh       ;\len FD3h (1st main) (aka label 1)<br />  09924h          0013C878h       ;/<br />  09928h          0014F197h       ;\len A053h (3rd main) (aka label 4)<br />  0992Ch          00145144h       ;/</div>Well, with that... I guess I could now try to upload the wifi firmware to the Xtensa CPU, and see what happens.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5211">nocash</a> — Sun May 19, 2019 6:12 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[nocash]]></name></author>
<updated>2019-05-18T22:07:58-07:00</updated>
<published>2019-05-18T22:07:58-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=18490&amp;p=239054#p239054</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=18490&amp;p=239054#p239054"/>
<title type="html"><![CDATA[Other Retro Dev • Re: 3DS reverse engineering]]></title>

<category term="Other Retro Dev" scheme="http://forums.nesdev.com/viewforum.php?f=23" label="Other Retro Dev"/>
<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=18490&amp;p=239054#p239054"><![CDATA[
I am having troubles to extract the Wifi Firmware from the &quot;NWM&quot; module. Here, <!-- m --><a class="postlink" href="http://4dsdev.kuribo64.net/thread.php?pid=470#470">http://4dsdev.kuribo64.net/thread.php?pid=470#470</a><!-- m --> plutoo mentioned &quot;Having a quick glance at NWM, it looks like it contains 3 different versions of wlan firmware, labeled 1, 4 and 5.&quot;<br /><br />I have extracted the safe mode NWM .code file (and decompressed it). And had several quick glances (and longer glances) at the file, but I can't see anything &quot;labeled 1, 4 and 5&quot;. Is there some table of contents with those 1,4,5 numbers/labels?<br /><br />What I can find is this:<div class="codetitle"><b>Code:</b></div><div class="codecontent">  Offset    Content<br />  3C879h    main code (with &quot;A_INIT&quot; string)<br />  3D96Ah    main code (with &quot;A_INIT&quot; string)<br />  451ADh    main code (with &quot;A_INIT&quot; string)<br />  4F380h    stub code (len 316h) (bytes 36 61 00 21 04 63 .. 1D F0) <br />  4F698h    stub data (len 38h?)</div>So there seem to be 3 different main versions (maybe for DSi, 3DS, and 3DS-local-multiplayer?), and, apparently only 1 version for the eeprom-loading stub. Additionally to main/stub, there might be also 1-3 database versions somewhere in the file.<br />Without table of contents it's hard to guess the exact start address, size, and target address of the above sections. The stub size seems to be 316h bytes... but I can't even find that size value in the .code file. Am I missing something obvious?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5211">nocash</a> — Sat May 18, 2019 10:07 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[mikejmoffitt]]></name></author>
<updated>2019-05-17T15:59:26-07:00</updated>
<published>2019-05-17T15:59:26-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=18859&amp;p=239010#p239010</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=18859&amp;p=239010#p239010"/>
<title type="html"><![CDATA[Other Retro Dev • Re: Which Genesis emulator in 2019? (SpritesMind was down)]]></title>

<category term="Other Retro Dev" scheme="http://forums.nesdev.com/viewforum.php?f=23" label="Other Retro Dev"/>
<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=18859&amp;p=239010#p239010"><![CDATA[
Tepples, I may be late to the game, but I wanted to go through the instructional process of getting the megadrive booting and doing things without relying on the SGDK libs, even though they are pretty fleshed out and good these days.<br /><br />I captured my efforts here, alongside some utility code. In a small irony, it does lean on the installation of GCC targeting m68k that the Gendev package supplies.<br /><br /><!-- m --><a class="postlink" href="https://github.com/Mikejmoffitt/md-framework/">https://github.com/Mikejmoffitt/md-framework/</a><!-- m --><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5314">mikejmoffitt</a> — Fri May 17, 2019 3:59 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2019-05-17T12:52:06-07:00</updated>
<published>2019-05-17T12:52:06-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=18859&amp;p=238996#p238996</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=18859&amp;p=238996#p238996"/>
<title type="html"><![CDATA[Other Retro Dev • Re: Which Genesis emulator in 2019? (SpritesMind was down)]]></title>

<category term="Other Retro Dev" scheme="http://forums.nesdev.com/viewforum.php?f=23" label="Other Retro Dev"/>
<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=18859&amp;p=238996#p238996"><![CDATA[
On Friday, May 17, 2019, at 3:49 PM US EDT, as specified in the topic <a href="https://gendev.spritesmind.net/forum/viewtopic.php?f=1&amp;t=1966" class="postlink">&quot;Register process&quot;</a> on SpritesMind, I sent an email to the administrator explaining that I am human.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Fri May 17, 2019 12:52 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[calima]]></name></author>
<updated>2019-05-17T10:44:03-07:00</updated>
<published>2019-05-17T10:44:03-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=18859&amp;p=238985#p238985</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=18859&amp;p=238985#p238985"/>
<title type="html"><![CDATA[Other Retro Dev • Re: SpritesMind is down. Which Genesis emulator in 2019?]]></title>

<category term="Other Retro Dev" scheme="http://forums.nesdev.com/viewforum.php?f=23" label="Other Retro Dev"/>
<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=18859&amp;p=238985#p238985"><![CDATA[
<div class="quotetitle">tepples wrote:</div><div class="quotecontent"><br />Are there guides to using GCC and Binutils as distributed in SGDK and its &quot;gendev&quot; port to Linux without using the SGDK libraries?<br /></div><br />Probably, ones that predate sgdk, but why would you want to? Writing boot code is very tedious and gains you what already exists; unlike on the SNES, where no good boot code existed before you made some. Similarly you don't gain anything by writing a new linker script.<br /><br />You don't have to use any sgdk user-side function if you don't want to, just don't link sgdk then. The boot code and linker script are separate from the sgdk lib.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=7237">calima</a> — Fri May 17, 2019 10:44 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[profi200]]></name></author>
<updated>2019-05-17T04:47:20-07:00</updated>
<published>2019-05-17T04:47:20-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=18490&amp;p=238971#p238971</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=18490&amp;p=238971#p238971"/>
<title type="html"><![CDATA[Other Retro Dev • Re: 3DS reverse engineering]]></title>

<category term="Other Retro Dev" scheme="http://forums.nesdev.com/viewforum.php?f=23" label="Other Retro Dev"/>
<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=18490&amp;p=238971#p238971"><![CDATA[
<div class="quotetitle">nocash wrote:</div><div class="quotecontent"><br /><div class="quotetitle">profi200 wrote:</div><div class="quotecontent">There was no need to reverse engineer the GPU/LCD init code. It has been figured out long ago. Most of the register names are missing but it works well: <!-- m --><a class="postlink" href="https://github.com/derrekr/fastboot3DS/blob/master/source/arm11/hardware/gfx.c#L249">https://github.com/derrekr/fastboot3DS/ ... gfx.c#L249</a><!-- m --> boot9strap has very similar code.<br /></div><br />Those tables contain only one halfword each. But the bootrom tries to read more than one halfword from each table, and then does weird squaring and interpolation on those table value(s). I guess all that code could make sense with bigger tables, but with the 1-entry-only tables it's just crazy nonsense.</div><br />I have not reverse engineered that but usually everyone just dumps the backlight levels from HOME menu. Careful with these since there is apparently no safety limit on the backlight. In the early days someone caused his 3DS to heat up by setting the backlight regs very high.<br /><br /><div class="quotetitle">nocash wrote:</div><div class="quotecontent"><br /><div class="quotetitle">profi200 wrote:</div><div class="quotecontent">When i was measuring how much time/cycles the CPU spends waiting for a single byte I2C transfer (switched to using interrupts since) i got far over 10000 cyles on ARM11 (measured using the MPCore performance monitor)...<br />I had no problems at all with the power LED but i only use it as sleep indicator anyway.<br /></div>Do you know what frequency that MPCore timer counts at? Bootrom code looks like... 134MHz?<br />And is that 10000 cycles for one raw I2C byte? Or a whole &quot;Device+Index+Databyte&quot; sequence with 3 bytes in total?<br />The delay is needed only after the last Databyte of each transfer. If you were doing only one transfer per frame, then you have had more than enough delay time.<br />Btw. I have edited the I2C delay stuff in previous post. The bootrom seems to aim at 2*188 cycles delay after last byte... although my early tests included a much longer DSi-style delay before each byte - which should have worked, too (theoretically, but somehow it didn't work in practice).</div><br />You should really take a look inside the ARM11 MPCore TRM. It's half the frequency of the CPU core so 134 MHz.<br />Frequency formula: <!-- m --><a class="postlink" href="http://infocenter.arm.com/help/topic/com.arm.doc.ddi0360f/CCHJJEHG.html">http://infocenter.arm.com/help/topic/co ... JJEHG.html</a><!-- m --><br />General registers: <!-- m --><a class="postlink" href="http://infocenter.arm.com/help/topic/com.arm.doc.ddi0360f/ch09s02s02.html">http://infocenter.arm.com/help/topic/co ... 02s02.html</a><!-- m --><br />The performance monitor actually counts all cycles minus a few missed ones at start/reset so it runs at core frequency.<br /><br />If i recall correctly it was the entire transfer including device and register select. Still very slow for a single byte reg write. In the very early days we polled the MCU from ARM11 (which of course was not a good idea). It worked fine without any delays (with the ARM11 having all caches on so it's really fast). It caused RTC drifts though which we did not notice until later.<br /><br /><div class="quotetitle">nocash wrote:</div><div class="quotecontent"><br /><div class="quotetitle">profi200 wrote:</div><div class="quotecontent">Everything detects modified FIRM partitions by looking for the sighax signatures. That's it.<br /></div>That's not so very suitable for detection. It would require to (RSA-)decrypt the signature and then examine if it contains normal padding bytes (or have a database with all currently known used sighax signatures (which could run into billions if somebody likes bruteforcing more and more variants).<br />And worst, the FIRM cannot by (AES-)decrypted without OTP dump, so impossible to examine the signatures at all (like, when you get a console, don't have a OTP dump, and want to patch it via hardmod - one could do that only with original FIRM, or with a backup-copy of the original FIRM stored in some unused eMMC sectors). But well, not so much of a problem if there's no standard for backups yet.</div><br />There are only 2 known FIRM partition sighax signatures in the wild. Ours and the one boot9strap uses. It's enough to check hashes. Of course someone could bruteforce more but everyone is using these 2 only. Bruteforcing more is kinda pointless.<br />There are 2 different types of backups being made currently. Either full 1:1 eMMC copies or the most important files like OTP, sector one, movable.sed...<br />The tool almost everyone uses for this is: <!-- m --><a class="postlink" href="https://github.com/d0k3/GodMode9">https://github.com/d0k3/GodMode9</a><!-- m --><br /><br /><div class="quotetitle">nocash wrote:</div><div class="quotecontent"><br />Yeah, the MMU is keeping me away from adding 3DS support in no$gba, too. At the moment, I don't even know what page-size it is using. I have no clear picture of what needs to be done for emulating it.<br /></div><br />It's actually not so hard. It's a massive step up from MPUs but it really is just a lookup table with attributes/permissions. 2 levels for &lt;section (1 MiB). Then there are supersections which are basically just 16 sections (16 MiB).<br />Example code (not the nicest but works): <!-- m --><a class="postlink" href="https://github.com/derrekr/fastboot3DS/blob/master/source/arm11/hardware/mmu.c">https://github.com/derrekr/fastboot3DS/ ... ware/mmu.c</a><!-- m --><br />Documentation: <!-- m --><a class="postlink" href="http://infocenter.arm.com/help/topic/com.arm.doc.ddi0360f/BABBHIGI.html">http://infocenter.arm.com/help/topic/co ... BHIGI.html</a><!-- m --><br /><br />Should be noted that the tables require quite some alignment for the MMU to perform well (all explained in the TRM and the ARM ARM (architecture reference manual).<br /><br /><br />Btw: A reminder on the #3dsdev IRC channel.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=14565">profi200</a> — Fri May 17, 2019 4:47 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[PSI]]></name></author>
<updated>2019-05-16T21:36:59-07:00</updated>
<published>2019-05-16T21:36:59-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=18490&amp;p=238967#p238967</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=18490&amp;p=238967#p238967"/>
<title type="html"><![CDATA[Other Retro Dev • Re: 3DS reverse engineering]]></title>

<category term="Other Retro Dev" scheme="http://forums.nesdev.com/viewforum.php?f=23" label="Other Retro Dev"/>
<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=18490&amp;p=238967#p238967"><![CDATA[
The MMU is well-documented on ARM's official docs. I haven't looked too deeply into it, although I know a few things: it's completely accessed through CP15 registers, it works through a &quot;page-walking&quot; scheme (where the code provides pointers to page tables in memory to the MMU), and page sizes range from 4 KB to 16 MB. It seems rather complex, and there's also the issue of having to emulate access privileges...<br /><br />The good news is that the boot ROMs don't need any MMU emulation at all, so you can feasibly get the boot ROM error screen just by pretending the NAND isn't there. It writes directly to framebuffer to display the error too. I do think you need timer emulation (and interrupts) to get the error screen however, and of course you need PXI (aka IPC).<br /><br />To actually get a firmware or payload to boot is more involved. You need AES, SHA, and RSA hardware all implemented, and the eMMC protocol must obviously be implemented too. You will also need the OTP and the NAND CID: OTP is used to derive the console-unique keys to decrypt the NAND, and the CID is also used for decryption. The boot process is semi-documented on 3dbrew, so you get some idea of what's going on.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=14617">PSI</a> — Thu May 16, 2019 9:36 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2019-05-16T19:46:12-07:00</updated>
<published>2019-05-16T19:46:12-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=18859&amp;p=238963#p238963</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=18859&amp;p=238963#p238963"/>
<title type="html"><![CDATA[Other Retro Dev • Re: SpritesMind is down. Which Genesis emulator in 2019?]]></title>

<category term="Other Retro Dev" scheme="http://forums.nesdev.com/viewforum.php?f=23" label="Other Retro Dev"/>
<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=18859&amp;p=238963#p238963"><![CDATA[
Thanks for pointing out that the SpritesMind outage has ended. On Thursday, May 16, 2019, at 10:43 PM US Eastern Daylight Time, I filled out the registration form and began to wait for manual activation by an administrator. Does it usually take more than a week?<br /><br />The Patreon page's promise of Discord rewards made it sound like the Discord server you're referring to is for paying patrons only.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Thu May 16, 2019 7:46 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[TmEE]]></name></author>
<updated>2019-05-16T19:20:29-07:00</updated>
<published>2019-05-16T19:20:29-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=18859&amp;p=238958#p238958</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=18859&amp;p=238958#p238958"/>
<title type="html"><![CDATA[Other Retro Dev • Re: SpritesMind is down. Which Genesis emulator in 2019?]]></title>

<category term="Other Retro Dev" scheme="http://forums.nesdev.com/viewforum.php?f=23" label="Other Retro Dev"/>
<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=18859&amp;p=238958#p238958"><![CDATA[
Spritesmind seems to work fine for a few days now...<br /><br />There's a discord chat somewhere where a multitude of devs reside.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3483">TmEE</a> — Thu May 16, 2019 7:20 pm</p><hr />
]]></content>
</entry>
</feed>