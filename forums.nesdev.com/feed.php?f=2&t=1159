<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=2&amp;t=1159" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2006-02-23T14:49:08-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=2&amp;t=1159</id>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2006-02-23T14:49:08-07:00</updated>
<published>2006-02-23T14:49:08-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1159&amp;p=10065#p10065</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1159&amp;p=10065#p10065"/>
<title type="html"><![CDATA[ploblem of too many codes in VBlank]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1159&amp;p=10065#p10065"><![CDATA[
<div class="quotetitle">blargg wrote:</div><div class="quotecontent"><br />NMI is disabled after soft reset.<br /></div><br />Is this true of Famicom, frontloading NES, and toploading NES? I seem to remember that they behave differently on reset, such that only the CPU gets reset on the Famicom, not the PPU.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Thu Feb 23, 2006 2:49 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2006-02-23T12:00:09-07:00</updated>
<published>2006-02-23T12:00:09-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1159&amp;p=10061#p10061</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1159&amp;p=10061#p10061"/>
<title type="html"><![CDATA[ploblem of too many codes in VBlank]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1159&amp;p=10061#p10061"><![CDATA[
<div class="quotetitle">tepples wrote:</div><div class="quotecontent"><br />What about at soft reset?<br /></div><br /><br />NMI is disabled after soft reset. Code enables NMI then loops. Reset vector waits half a second and NMI doesn't occur within that time.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Thu Feb 23, 2006 12:00 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2006-02-23T10:17:40-07:00</updated>
<published>2006-02-23T10:17:40-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1159&amp;p=10059#p10059</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1159&amp;p=10059#p10059"/>
<title type="html"><![CDATA[ploblem of too many codes in VBlank]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1159&amp;p=10059#p10059"><![CDATA[
After a soft reset, the vector from the previous reset would most probably be decent in the good area of RAM.<br />And it while changing the adress, you write $60 to the vector's destination as I said above, it will perform RTS, not RTI, which is $40. I just said something wrong.<br />This method can be fairly dangerous if NMI *could* be triggered between the reset and the first write to $2000 with bit 7 clear, at least on the first startup where most RAM contain only $ff.<br />But if it would contain data that *may* do something with $6000-$7fff, it *may* alter game saves and that would be really bad.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Thu Feb 23, 2006 10:17 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2006-02-23T06:04:13-07:00</updated>
<published>2006-02-23T06:04:13-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1159&amp;p=10057#p10057</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1159&amp;p=10057#p10057"/>
<title type="html"><![CDATA[ploblem of too many codes in VBlank]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1159&amp;p=10057#p10057"><![CDATA[
<div class="quotetitle">blargg wrote:</div><div class="quotecontent"><br /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">Even with the best reset code, you are likely to get an NMI before the STX completes on about one out of 3700 resets.<br /></div><br />Eh? Did you measure this?</div><br />No, I calculated it as 29780 cycles per frame divided by 8 cycles before the sta completes.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />I've found that the NMI is disabled at power-up<br /></div><br />What about at soft reset?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Thu Feb 23, 2006 6:04 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2006-02-23T03:11:07-07:00</updated>
<published>2006-02-23T03:11:07-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1159&amp;p=10056#p10056</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1159&amp;p=10056#p10056"/>
<title type="html"><![CDATA[ploblem of too many codes in VBlank]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1159&amp;p=10056#p10056"><![CDATA[
<div class="quotetitle">tepples wrote:</div><div class="quotecontent"><br />Even with the best reset code, you are likely to get an NMI before the STX completes on about one out of 3700 resets.<br /></div><br /><br />Eh? Did you measure this? If so, bravo for sitting through hundreds of thousands of resets to get this to such an accurate value. I've found that the NMI is disabled at power-up, but perhaps you're saying it can occur at the beginning even so?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Thu Feb 23, 2006 3:11 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2006-02-22T14:09:32-07:00</updated>
<published>2006-02-22T14:09:32-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1159&amp;p=10044#p10044</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1159&amp;p=10044#p10044"/>
<title type="html"><![CDATA[ploblem of too many codes in VBlank]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1159&amp;p=10044#p10044"><![CDATA[
<div class="quotetitle">Bregalad wrote:</div><div class="quotecontent"><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Why the hell did Nintendo think it was a good idea to clear the flag on read?<br /></div><br />Imagine this :<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">-  bit $2002<br />    bpl -<br />-   bit $2002<br />    bpl -</div><br />You wanted to poll 2 frames, but it the flag doesn't get cleared, it waits only one frame... AS IT DOES WITH NESTICLE !</div><br />Then you do what a lot of "Nesticle game" programmers did, as tokumaru points out:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">-  bit $2002<br />    bpl -<br />-   bit $2002<br />    bmi -<br />-   bit $2002<br />    bpl -</div><br />But if you want the Nesticle-like behavior, such as if you plan to steal a few scanlines off the top of the NTSC overscan to do nametable or OAM updates, you can still coax that out of a real NES if you can ensure that sprite 0 will always be hit. Here, you'd use a bit/bvs loop.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Have your NMI vertor pointing to RAM (yeah), and write $4c (jump opcode) followed by your real vector adress. It only delays 3 cycles, and the fact to have an NMI occuring in RAM is so cool !!<br /></div><br />The Apple II "monitor" BIOS used exactly this technique.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />However, I doubt having an NMI between reset and the first write to $2000 is thinkable. Again, I think this will be very very very unlucky.<br /></div><br />Even with the best reset code, you are likely to get an NMI before the STX completes on about one out of 3700 resets:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">reset:<br />  sei<br />  ldx #0<br />  stx $2000<br />  stx $2001<br />  cld<br />  dex<br />  txs<br /></div><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Wed Feb 22, 2006 2:09 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2006-02-22T13:23:43-07:00</updated>
<published>2006-02-22T13:23:43-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1159&amp;p=10039#p10039</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1159&amp;p=10039#p10039"/>
<title type="html"><![CDATA[ploblem of too many codes in VBlank]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1159&amp;p=10039#p10039"><![CDATA[
<div class="quotetitle">Memblers wrote:</div><div class="quotecontent"><br />I was gonna say pretty much the same as what tokumaru said, just do all your calculations during the frame and buffer them so during vblank you can unload the buffer quickly.<br /></div><br />Yeah, but then I said one could just wait for VBlank by polling (sorry, I was writing "pooling" before) $2002... shame on me! =)<br /><br />I usually use NMI's, but considered polling $2002 a valid option. I'll just keep in mind it's not.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Wed Feb 22, 2006 1:23 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2006-02-22T13:23:04-07:00</updated>
<published>2006-02-22T13:23:04-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1159&amp;p=10038#p10038</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1159&amp;p=10038#p10038"/>
<title type="html"><![CDATA[ploblem of too many codes in VBlank]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1159&amp;p=10038#p10038"><![CDATA[
Well... at reset, you'll like writing pretty much imediatly $00 to $2000, instantly disabling NMIs.<br />If, for an obscure reason, an NMI would happen at reset, that could be disastrous in the very particular case of having the processor execute random code writing to SRAM, and possibly erasing/corrupting the game's saves. Else than that, it doesn't matter if it frezee at start up, since NES cartridges often doesn't work the first try, the player will just press the reset button again without caring if his cartridge isn't working because of the hardware or the software.<br />However, I doubt having an NMI between reset and the first write to $2000 is thinkable. Again, I think this will be very very very unlucky.<br /><br />About $2002 polling, you're definitely right. But I don't think it is very usefull to ask why Nintendo did that. It sure is a good question, but any answer won't change facts.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Wed Feb 22, 2006 1:23 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2006-02-22T13:17:28-07:00</updated>
<published>2006-02-22T13:17:28-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1159&amp;p=10037#p10037</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1159&amp;p=10037#p10037"/>
<title type="html"><![CDATA[ploblem of too many codes in VBlank]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1159&amp;p=10037#p10037"><![CDATA[
<div class="quotetitle">Bregalad wrote:</div><div class="quotecontent"><br />or in software (replace $4c per $60 (RTI) then turn it back to $4c when the vector is ready).<br /></div><br />That's a very good idea! Write $60, then the address, and then $4c again. Pretty smart.<br /><br />There is no chance an NMI would fire before you have the chance to turn them off in the beginning of the program, right? Or else the NES would try to run random crap from RAM... but I guess this is not the case.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Wed Feb 22, 2006 1:17 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2006-02-22T13:10:53-07:00</updated>
<published>2006-02-22T13:10:53-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1159&amp;p=10035#p10035</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1159&amp;p=10035#p10035"/>
<title type="html"><![CDATA[ploblem of too many codes in VBlank]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1159&amp;p=10035#p10035"><![CDATA[
<div class="quotetitle">Bregalad wrote:</div><div class="quotecontent"><br />Imagine this :<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">-  bit $2002<br />    bpl -<br />-   bit $2002<br />    bpl -</div><br />You wanted to poll 2 frames, but it the flag doesn't get cleared, it waits only one frame... AS IT DOES WITH NESTICLE !<br /></div><br />Yeah, I know this wouldn't work... but if Nintendo had designed tha hardware differently, programmers would have programmed differently than that (waiting for the flag to be clearead and then waiting for it to be set, twice) if they wanted to wait 2 frames. Nintendo certainly didn't choose to clear the flag so you could detect VBlank with less instructions, since their decision pretty much invalidated the use of the flag for the serious stuff, where speed is needed.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Wed Feb 22, 2006 1:10 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2006-02-22T13:03:59-07:00</updated>
<published>2006-02-22T13:03:59-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1159&amp;p=10033#p10033</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1159&amp;p=10033#p10033"/>
<title type="html"><![CDATA[ploblem of too many codes in VBlank]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1159&amp;p=10033#p10033"><![CDATA[
That's very easy to overpass.<br />Have your NMI vertor pointing to RAM (yeah), and write $4c (jump opcode) followed by your real vector adress. It only delays 3 cycles, and the fact to have an NMI occuring in RAM is so cool !!<br />However, be carefull, when writing the adress to the RAM area, you'll anyway be unable to totally prevent writing the first byte, then the second byte. If an NMI *would* occur during theese two writes, your code will most likly frezee (at least mess up). So, be sure to disable NMI in hardware (write $00 to $2000) or in software (replace $4c per $60 (RTI) then turn it back to $4c when the vector is ready).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Wed Feb 22, 2006 1:03 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2006-02-22T12:58:19-07:00</updated>
<published>2006-02-22T12:58:19-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1159&amp;p=10032#p10032</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1159&amp;p=10032#p10032"/>
<title type="html"><![CDATA[Re: oh i see]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1159&amp;p=10032#p10032"><![CDATA[
<div class="quotetitle">lord_Chile wrote:</div><div class="quotecontent"><br />quietust give me a different thinking about vblanks because many and many people says me wait to vblank using bit 7 of $2002.<br /></div><br />I guess it is still usefull for the first few tasks, where timing isn't critical. Missing a frame inside the main game would sure suck, but what would be the real difference when you're waiting for the PPU to warm up, and you wait 3 frames instead of 2? None. When you're about to turn the screen on for the first time, what's the problem in missing one single frame? No problem.<br /><br />I'm still not really sure what the best way would be. Since a game has many different areas such as title screen, options screen, different kinds of in-game sections (depending on the game), the NMI would need to check where you are at the moment (some variable can say that) and jump to the appropriate code. But that decision has to be quick or you'll loose precious VBlank time.<br /><br />Maybe the first thing inside the NMI should be an indirect jump, so that you could redirect it to any routine you wish just by writing it's address to the proper place. Then you could use only NMI's and stop pooling $2002 for good. But I guess it would be necessary to turn NMI's off when changing the address, to avoid the unfortunate, but unlikely case where the jump would happen between the writes of the 2 bytes that make up the address.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Wed Feb 22, 2006 12:58 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2006-02-22T12:56:26-07:00</updated>
<published>2006-02-22T12:56:26-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1159&amp;p=10031#p10031</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1159&amp;p=10031#p10031"/>
<title type="html"><![CDATA[ploblem of too many codes in VBlank]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1159&amp;p=10031#p10031"><![CDATA[
Oh, everyone has posted while I was making my post... anoying.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Why the hell did Nintendo think it was a good idea to clear the flag on read?<br /></div><br />Imagine this :<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">-  bit $2002<br />    bpl -<br />-   bit $2002<br />    bpl -</div><br />You wanted to poll 2 frames, but it the flag doesn't get cleared, it waits only one frame... AS IT DOES WITH NESTICLE !<br /><br />I'd personally not like doing controller reading in NMI, because detecting buttons is very anoying to code, and if you additionally have to admit that the button value could in theory change at any time (it a NMI occurs during your calculation parts check the joypad buttons), it sure make things harder. But some peolpe would prefer the other way arround, so it is up to each progammer to do as his/her wishes.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Wed Feb 22, 2006 12:56 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2006-02-22T12:45:26-07:00</updated>
<published>2006-02-22T12:45:26-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1159&amp;p=10030#p10030</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1159&amp;p=10030#p10030"/>
<title type="html"><![CDATA[ploblem of too many codes in VBlank]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1159&amp;p=10030#p10030"><![CDATA[
Polling $2002 doesn't offer much advantage.<br />NMI is definitely more usefull.<br />If your main code overflows and cannot follow the frames, you'll be happy to still have the music programm and some automatic frame buffering done in NMI routine, so that only a part of the gameplay effectively slows down.<br />Also, it allow you to place the usual code (stuff like writing sprite DMA) in an un-rolled style.<br />That means that you only time your NMI to do sprite DMA if its flag is set, but polling $2002 will require you to do sprite DMA manually each time you poll would end.<br />Eventually, I think there was one commerial game to use $2002 poll, but it wasn't an action game, and it used frame IRQ for the sound, so missing frame would be totally unimportant. This game is the game Enix released between Door Door and Dragon Quest, and his name was so complicated that I don't remember it.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Wed Feb 22, 2006 12:45 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Memblers]]></name></author>
<updated>2006-02-22T12:45:22-07:00</updated>
<published>2006-02-22T12:45:22-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1159&amp;p=10029#p10029</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1159&amp;p=10029#p10029"/>
<title type="html"><![CDATA[ploblem of too many codes in VBlank]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1159&amp;p=10029#p10029"><![CDATA[
I was gonna say pretty much the same as what tokumaru said, just do all your calculations during the frame and buffer them so during vblank you can unload the buffer quickly.<br /><br />I don't put much in my NMI routine besides the needed stuff.  I'd also normally do the controller reading and music playing there (after all the PPU stuff is done), because I want that going all the time even if the main loop slows down.<br /><br />And definitely don't use $2002 polling for vblank waiting, like everyone said, that doesn't work the same on an emulator.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=10">Memblers</a> — Wed Feb 22, 2006 12:45 pm</p><hr />
]]></content>
</entry>
</feed>