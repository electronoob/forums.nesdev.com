<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - MMC1 A12 demo</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">MMC1 A12 demo</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=7050">http://forums.nesdev.com/viewtopic.php?f=2&amp;t=7050</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>2</strong> of <strong>3</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Tue Oct 19, 2010 11:10 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />As I understand it, the VRAM accesses straddling the start of hblank look like this:
<br />
<br />241: nametable
<br />243: attribute
<br />245: bg pattern
<br />247: bg pattern
<br />249: nametable (never used)
<br />251: attribute (never used)
<br />253: bg pattern (never used)
<br />255: bg pattern (never used)
<br />257: nametable (never used)
<br />259: attribute (never used)
<br />261: sprite pattern
<br />263: sprite pattern
<br />265: nametable (never used)
<br />267: attribute (never used)
<br />269: sprite pattern
<br />271: sprite pattern
<br />
<br />Brad Taylor's 2C02 doc appears to suggest that the accesses at 257, 259 through 313, 315, are the same as 321, 323 (the first background tile's nametable and attribute entry). Was this ever independently confirmed?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Tue Oct 19, 2010 12:01 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Oh so A12 actually is half high half low while fetching sprites, and always low when fetching NT/AT/PT. This complicate things.
<br />
<br />Is there a way to effectively detect A12 from going always low to oscillate, and A12 from oscillating to always low, that works on both NTSC or PAL (with the same code, if possible, esle you'd just use timed code instead) ?
<br />If not then this kills any chances of this method to be any useful one day. (other than test the accuracy of emulators... so far ALL emus fail on this one <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /> )

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Tue Oct 19, 2010 1:23 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Can someone explain what exactly we're trying to accomplish here? You are trying to come up with a new way to count scanlines... but from what I understand it's a "busy" counting (i.e. you have to continuously monitor PPU accesses), so what's the advantage over timed code? If I missed something, please point it out to me.
<br />
<br />EDIT: If the only advantage is that it would work for both PAL and NTSC, I'd rather use a waiting function that adapts itself to PAL or NTSC depending on a variable (which I already have coded).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Tue Oct 19, 2010 1:36 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Purely in code? I don't know, is getting a single A12 read as high good enough? during sprite fetches, PPU A8-A13 should be stable for four pixels for each read, or ~800ns, so a 50% square wave with period 1.6us. Doing something like LDA $7FFF LDX $7FFF LDY $7FFF really should collide with at least one of the A12-high periods.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Tue Oct 19, 2010 7:17 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I was using a loop that repeatedly ANDed and ORed with WRAM, so it could find any time when it became disabled (or enabled):
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp; wram = $7FFF<br /><br />setup:<br />&nbsp; &nbsp; lda #$FF<br />&nbsp; &nbsp; sta wram<br />&nbsp; &nbsp; ...<br /><br />count:<br />&nbsp; &nbsp; ...<br />&nbsp; &nbsp; lda #$FF<br />&nbsp; &nbsp; ldx #scanlines_to_skip<br />line:<br />&nbsp; &nbsp;; Wait until WRAM is disabled<br />:&nbsp; &nbsp;and wram<br />&nbsp; &nbsp; ...<br />&nbsp; &nbsp; and wram<br />&nbsp; &nbsp; bmi :-<br />&nbsp; &nbsp; <br />&nbsp; &nbsp; ; Wait until WRAM is enabled<br />:&nbsp; &nbsp;ora wram<br />&nbsp; &nbsp; ...<br />&nbsp; &nbsp; ora wram<br />&nbsp; &nbsp; bpl :-<br /><br />&nbsp; &nbsp; dex<br />&nbsp; &nbsp; bne line</div>
<br />This was fairly consistent, but after some resets it would count several more/fewer than usual. I tried the loops with 1-4 reads, and with a ,Y (with Y=0) to add an extra clock here and there, and couldn't ever get it reliably at the same scanline. This is on NTSC.
<br />
<br />Maybe I should have the scanline count merely do a few reads, then wait a scanline before reading again?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Wed Oct 20, 2010 1:16 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">Can someone explain what exactly we're trying to accomplish here? You are trying to come up with a new way to count scanlines... but from what I understand it's a "busy" counting (i.e. you have to continuously monitor PPU accesses), so what's the advantage over timed code? If I missed something, please point it out to me.<br /><br />EDIT: If the only advantage is that it would work for both PAL and NTSC, I'd rather use a waiting function that adapts itself to PAL or NTSC depending on a variable (which I already have coded).</div>
<br />So far there is absolutely no advantage. I just wanted to explore this unexplored aspect of the MMC1, that's all. Maybe I'll figure out an advantage if I can reliably count scanlines this way. For example, maybe this allows you to do timed code while playing DPCM samples, something not possible under normal conditions, as the DPCM fetches randomly slows down the code.
<br />
<br />I'll try what blargg suggests as soon as I get home.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Thu Oct 21, 2010 12:26 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Well I didn't try it but I think it would be the exact same as what I did. It just reads the SRAM with and/ora instrucitons instead of lda instructions, but I see no reason the resuts would differ.
<br />What does the "..." mean exactly. Do you use some kind of unrolled loop ?
<br />
<br />Now it makes more sense to me why the MMC3 counter worked too when sprites are using the left PT and BG uses the right PT.
<br />In the "normal" configuration, (BG left, sprites right), A12 oscillate when fetching sprites, and is low when fetching BG.
<br />In the "reverse" configuration (BG right, sprites left), A12 is always low when fetching sprites, and oscillate when fetching BG.
<br />If both are left, A12 is low all the time and the counter is never clocked.
<br />If both are high, A12 oscillate all the time.
<br />
<br />Because of the capacity on the board, the oscillation becomes a constant 2.5 V for the MMC3, which is considered a logical '1', right ? Then the counter is clocked one time per scanline. What surprises me is that the edge's timing should be highly dependant of the PPU's internal output imprdance on the A12 line which shouldn't be identical on all NES units. Then this might alter the exact time MMC3 IRQs fire. Anything I got wrong here ?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Thu Oct 21, 2010 12:34 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">Well I didn't try it but I think it would be the exact same as what I did. It just reads the SRAM with and/ora instrucitons instead of lda instructions, but I see no reason the resuts would differ.</div><br />The point of the ORA/AND is to allow reading it more often than every 7 cycles, in case that helps any with catching it changed. That's why I switched to OR/AND, so I could do this. CMP doesn't allow checking every 4 cycles.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">What does the "..." mean exactly. Do you use some kind of unrolled loop ?</div><br />That's where you could insert more ORA/AND instructions, to alter the timing and how often it reads on average.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">If both are left, A12 is low all the time and the counter is never clocked. If both are high, A12 oscillate all the time.</div><br />There's still nametable fetches at least, so I'd think it would still go low many times per scanline.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Because of the capacity on the board, the oscillation becomes a constant 2.5 V for the MMC3, which is considered a logical '1', right ?</div>
<br />I removed the capacitor on my SMB3 board and the game ran fine, so it's not clear what it's for.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Thu Oct 21, 2010 1:01 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Mmh.. Then there should be additional logic inside the MMC3 that handles this "delay" ?
<br />As far as I understand, the PPU fetches nametables bytes all the time - no matter if it's fetching BG or sprites tiles. So A12 can be either oscillating or low, it'll never be high.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Thu Oct 21, 2010 3:31 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Yeah, I don't think you can get A12 steady high unless you disable rendering and set the PPU address manually. I think the core problem is that it's never high long enough for the CPU to see it consistently. Or it might change state while the CPU is reading, so it might see open bus for part of the time only.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Thu Oct 21, 2010 3:54 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I just figured how lacking the documentation of MMC3's scanline counter is. Not the functionment of the counter but of how it is clocked.
<br />
<br />I always though, according to existing doccumentation, that it was simply clocked by A12's rising edges, but apparently this isn't the case else it would be clocked like 8 times per scanline (not just 1). Docs says this is due to the capacity filtering the signal.
<br />
<br />This fishy as hell : Since I don't see any resistor in series with it, (the resistor can't be internal to the MMC3 either, because it should be present BEFORE the capacitor to have a low-pass effect), the "internal" impedance in the PPU (which should be close to 0) should play the role of resistor for the filter... but this won't work, because this would completely screw up PPU fetches. Since the MMC3 uses A12 for bank-switching as well, having it filtered is not acceptable in any ways.
<br />
<br />I guess the capacity is only there to filter <em>really</em> short impulses, that are significantly shorter than a PPU clock cycles. Because the internal impedance of the PPU is close to 0, the filter cutoff will be really high. 
<br />
<br />Look at <a href="http://kevtris.org/mappers/2ndparty/acclaim_55741.html" class="postlink">this</a> for a proof of it. This board uses a 74HC08 chip instead of a capacitor. I guess it ANDs A12 with VCC (or itself) 3 times to delay the edges, and and it with the original. As far I know this should kill impulses of ~50ns and shorter, but have no effect on anything slower than this.
<br />
<br />There is really something lacking/fishy here, how comes nobody ever figured how wrong/incomplete the current theories behind the counter are ?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Thu Oct 21, 2010 4:00 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">how comes nobody ever figured how wrong/incomplete the current theories behind the counter are ?</div>
<br />Because nobody has the $$$ to decap the MMC3 the way someone did for the CIC. Therefore, the MMC3 is a black box, and any theories behind its operation are empirical.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>kevtris</b> [ Thu Oct 21, 2010 7:38 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">I just figured how lacking the documentation of MMC3's scanline counter is. Not the functionment of the counter but of how it is clocked.<br /><br /><br /><br />Look at <a href="http://kevtris.org/mappers/2ndparty/acclaim_55741.html" class="postlink">this</a> for a proof of it. This board uses a 74HC08 chip instead of a capacitor. I guess it ANDs A12 with VCC (or itself) 3 times to delay the edges, and and it with the original. As far I know this should kill impulses of ~50ns and shorter, but have no effect on anything slower than this.<br /><br />There is really something lacking/fishy here, how comes nobody ever figured how wrong/incomplete the current theories behind the counter are ?</div>
<br />
<br />
<br />that chip is not performing a delay on there.  The capacitor is just for power supply bypassing also.
<br />
<br />The way the MMC3 does it I'm pretty sure is it uses a counter to make a simple monostable ("pulse stretcher").  
<br />
<br />What you do is this:
<br />
<br />when A12 goes high, AND a delay counter equals zero, you feed a clock to the scanline counter, AND you set this delay counter to a non-zero value at the same time.
<br />
<br />each M2 you decrement your delay counter.
<br />
<br />the net result is this:  when A12 goes high,  the IRQ counter is clocked exactly once, and this delay is loaded, which prevents the IRQ counter being clocked more times.  each time A12 is high, this delay counter is reloaded.  So, if A12 is toggling,  the delay counter is constantly being reloaded.  When A12 is low long enough, the delay counter finally hits 0, the next time A12 goes high it will pulse the IRQ counter.
<br />
<br />A12 will be high and low fairly long,  alot longer than 50ns.  the PPU reads a byte every 8 21MHz clocks which is every 372ns.   The fetch cycle is 4 accesses long, so that means A12 will toggle at least every 2 accesses (2 garbage fetches, 2 sprite tile fetches) so the A12 toggle rate is thusly 16 21MHz cycles high, and 16 21MHz cycles low. 
<br />
<br />This means that the A12 delay counter should be 3 or 4 M2 cycles long, which isn't very many at all.  For safety,  you could use 7 or 8, which gives a nice round number for a 3 bit counter (7, +1 depending on how the other logic works).
<br />
<br />Of course, you can actually TEST how long this is by some carefully written code on the NES that toggles A12 via 2006 or something... but I think the delay is too short to check it this way.
<br />
<br />So, in a nutshell that's pretty much how it has to work.  An RC delay most likely isn't accuate enough for this but might be made to work.  The internal delay counter is reliable and more importantly "free" since it's on the chip.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Thu Oct 21, 2010 7:56 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">I guess the capacity is only there to filter <em>really</em> short impulses, that are significantly shorter than a PPU clock cycles. Because the internal impedance of the PPU is close to 0, the filter cutoff will be really high.</div><br />Yeah, this makes more sense. Nice to have a better explanation of this. Nothing else counts the number of pulses, so glitches like this don't matter (and presumably RAM and the MMC writes somehow ignore these via some other method).<br /><br /><div class="quotetitle">kevtris wrote:</div><div class="quotecontent">The capacitor is just for power supply bypassing also.</div>
<br />It goes between ground and CHR A12, and it's only 220 pF.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>kevtris</b> [ Thu Oct 21, 2010 8:07 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">blargg wrote:</div><div class="quotecontent"><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">I guess the capacity is only there to filter <em>really</em> short impulses, that are significantly shorter than a PPU clock cycles. Because the internal impedance of the PPU is close to 0, the filter cutoff will be really high.</div><br />Yeah, this makes more sense. Nice to have a better explanation of this. Nothing else counts the number of pulses, so glitches like this don't matter (and presumably RAM and the MMC writes somehow ignore these via some other method).<br /><br /><div class="quotetitle">kevtris wrote:</div><div class="quotecontent">The capacitor is just for power supply bypassing also.</div><br />It goes between ground and CHR A12, and it's only 220 pF.</div>
<br />
<br />Oh that little ceramic one.  Yeah that's for minor pulse filtering.  Nintendo must not have synchronized the A12 input to their logic (that is, run A12 through a flipflop off M2) before using it, so thin pulses on A12 could clock the counter multiple times.  Honestly, that cap might've just been N being paranoid.  I've taken it off of many boards for fun/testing and it doesn't seem to matter... but I'm sure there's SOME  NES' where it WOULD matter, or the timing calculations say it's possible, so to be safe they included it.  Even if only 1 out of 10000 NES units would be affected, it's cheap insurance.
<br />
<br />on all the pirate MMC3 boards I've seen (multicarts, etc),  they don't have the capacitor on A12.  Either it was slightly redesigned with the synchronizer flipflop, or they just didn't put it on since it seems to work without it.  Also interestingly, the N made MMC3's are a 44 pin QFP while the pirate ones are all 40 pin DIP.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>2</strong> of <strong>3</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>