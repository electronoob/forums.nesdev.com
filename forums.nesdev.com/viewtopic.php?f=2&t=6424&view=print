<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - OAM reading isn't reliable</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">OAM reading isn't reliable</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=6424">http://forums.nesdev.com/viewtopic.php?f=2&amp;t=6424</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>3</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Fri May 28, 2010 6:35 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>OAM reading isn't reliable</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I've found some very weird OAM read behavior on my NTSC NES, and I'm pretty sure it occurs on the PAL one as well (I know it also acts weird, just haven't swapped boards back to try it yet). Basically, reading from OAM is broken for three out of the four PPU-CPU synchronizations that the system will be in after power or reset. I've been tearing my hair out trying to make sense of this, thinking my NTSC NES was damaged. Once I realized it was related to PPU-CPU synchronization, and that there were exactly four possible patterns of behavior, it started falling into place.
<br />
<br />When SPRDATA reads are working correctly, they give you the contents of OAM at whatever SPRADDR is set to. When they're not, some/many/most addresses give you OAM at a different address. I haven't tested writing thoroughly, but I'm pretty sure that SPRDATA writes and SPRDMA work reliably all the time, explaining why this crazy behavior wouldn't have been a problem, as SPRDATA reads are rarely/never used.
<br />
<br />I wrote a test program to determine what OAM byte is actually read for each address. It tries them from $00-$FF, with 16 per row. So when working correctly, we'd expect it to begin
<br />
<br />00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
<br />10 11 12 13 14 15 16 17 18 19 1A 1B 1C 1D 1E 1F
<br />...
<br />
<br />But let's say it's all correct as above, except that reading from address $04 really reads from $48:
<br />
<br />00 01 02 03 48 05 06 07 08 09 0A 0B 0C 0D 0E 0F
<br />10 11 12 13 14 15 16 17 18 19 1A 1B 1C 1D 1E 1F
<br />...
<br />
<br />Since it's difficult to easily see the incorrect entry, the test program prints -- for correct entries, so for the second example above, it prints
<br />
<br />-- -- -- -- 48 -- -- -- -- -- -- -- -- -- -- --
<br />-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --
<br />...
<br />
<br />So, here are the three insane mappings I get, randomly chosen at reset, but unchanging until I reset/power again:
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- <br />-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- <br />18 19 1A 1B 1C 1D 1E 1F -- -- -- -- -- -- -- -- <br />-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- <br />-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- <br />-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- <br />-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- <br />-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- <br />-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- <br />-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- <br />-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- <br />-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- <br />-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- <br />-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- <br />-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- <br />-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- <br /><br />20 21 22 23 24 25 26 27 20 21 22 23 24 25 26 27 <br />20 21 22 23 24 25 26 27 20 21 22 23 24 25 26 27 <br />-- -- -- -- -- -- -- -- 20 21 22 23 24 25 26 27 <br />20 21 22 23 24 25 26 27 20 21 22 23 24 25 26 27 <br />20 21 22 23 24 25 26 27 20 21 22 23 24 25 26 27 <br />20 21 22 23 24 25 26 27 20 21 22 23 24 25 26 27 <br />20 21 22 23 24 25 26 27 20 21 22 23 24 25 26 27 <br />20 21 22 23 24 25 26 27 20 21 22 23 24 25 26 27 <br />20 21 22 23 24 25 26 27 20 21 22 23 24 25 26 27 <br />20 21 22 23 24 25 26 27 20 21 22 23 24 25 26 27 <br />20 21 22 23 24 25 26 27 20 21 22 23 24 25 26 27 <br />20 21 22 23 24 25 26 27 20 21 22 23 24 25 26 27 <br />20 21 22 23 24 25 26 27 20 21 22 23 24 25 26 27 <br />20 21 22 23 24 25 26 27 20 21 22 23 24 25 26 27 <br />20 21 22 23 24 25 26 27 20 21 22 23 24 25 26 27 <br />20 21 22 23 24 25 26 27 20 21 22 23 24 25 26 27 <br /><br />-- 21 22 23 24 25 26 27 -- 21 22 23 24 25 26 27 <br />-- 21 22 23 24 25 26 27 -- 21 22 23 24 25 26 27 <br />-- -- -- -- -- -- -- -- 20 21 22 23 24 25 26 27 <br />-- 21 22 23 24 25 26 27 -- 21 22 23 24 25 26 27 <br />-- 21 22 23 24 25 26 27 -- 29 2A 23 2C 25 26 27 <br />-- 21 22 23 24 25 26 27 -- 39 0A 23 2C 25 26 27 <br />-- -- -- -- -- -- -- -- -- 61 62 63 64 65 66 67 <br />-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- <br />-- -- -- -- -- -- -- 27 -- -- -- -- -- -- -- -- <br />-- -- 82 -- -- -- 26 A7 -- -- -- -- -- 8D 0E AF <br />-- -- -- -- -- 25 26 27 -- A1 A2 A3 A4 25 26 27 <br />-- A1 A2 A3 A4 25 26 27 -- -- -- -- -- -- AE AF <br />-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- <br />-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- <br />-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- <br />-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- </div>
<br />The first two are stable. The first one simply reads $18-$1F when $20-$27 are read, nice and simple. The second one mirrors $20-$27 over the entire range! The last one is unstable, where the mappings change somewhat randomly, but still follow the above general pattern.
<br />
<br />I'll probably be working more on this tomorrow, hopefully making the test program standalone so others can see how their NES behaves (I imagine each will be slightly different). Any thoughts on it?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>bunnyboy</b> [ Fri May 28, 2010 7:25 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />This isn't at all helpful, but wasn't there at least one production game that read back OAM?  Micro Machines?  Maybe it just wrote OAM mid frame?  
<br />
<br />I would be interested in a test app.  Will be interesting to see what clones do too.  Would there be a separate way to identify which clock alignment is running, other than looking at the mapping results?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sat May 29, 2010 4:03 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />This could be related to the <a href="http://nesdev.com/bbs/viewtopic.php?t=4647" class="postlink">refresh bug I helped discover</a> that caused pieces to flicker in LJ65. The working hypothesis was that there is an uncompleted 8-byte DRAM refresh transaction in the PPU's internal buffer, which gets sprayed somewhere else if you do "funny" things. Try displaying at least one full frame with rendering turned on before you fill and then read back OAM.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Sat May 29, 2010 5:34 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I'm getting a feeling that OAM was never meant to be read, that the read functionality was meant exactly for what Micro Machines does. That would explain why reading doesn't increment the address (so it wouldn't disturb when you read while PPU rendering is occurring). Still probing this behavior, right now writing a program to see whether OAM even works as expected on the one PPU-CPU alignment that seems normal.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Sat May 29, 2010 10:40 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />tepples: enabling sprite rendering beforehand didn't seem to have any effect. This seems to be entirely based on the PPU-CPU synchronization. It'll be interesting to see how this behaves on PAL, now that I've got the cause figured out.
<br />
<br />Here's a test ROM that visually shows what addresses don't read back normally (full ca65 source included):
<br />
<br /><a href="http://blargg.parodius.com/nes-tests/oam_read.zip" class="postlink">oam_read.zip</a>
<br />
<br />It tests OAM reading ($2004), being sure it reads the byte from OAM at the current address in $2003. It scans OAM from 0 to $FF, testing each byte in sequence. It prints a '-' where it reads back from the current address, and '*' where it doesn't. Each row represents 16 bytes of OAM, 16 rows total.
<br />
<br />On my NTSC front-loader NES, I get the following four general patterns at random after power/reset:
<br />
<br /><img src="http://blargg.parodius.com/nes-tests/oam_read_ntsc.png" alt="Image" />
<br />
<br />I also wrote another test that thoroughly tests OAM:
<br />
<br /><a href="http://blargg.parodius.com/nes-tests/oam_stress.zip" class="postlink">oam_stress.zip</a>
<br />
<br />It randomly sets the address, then randomly either writes a random number of random bytes, or reads from the current address a random number of times and verifies that it matches what's expected. It does this for tens of seconds (refreshing OAM periodically so it doesn't fade). Once done, it verifies that all bytes in OAM match what's expected. This only passes for the left-hand pattern above. It also prints a pattern, but it's just based on what it's modified so far, so it might not exactly match the pattern from the first test.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Sun May 30, 2010 11:08 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I would've tried this on my PAL NES but couldn't get my piece of shit toasters to work. Gave up after 15 minutes of cycling power and adjusting the cart. I'm very interested in the results for PAL though.
<br />
<br />I guess this would also explain why sprites were sometimes corrupted in some games when using my PowerPak save state mappers.
<br />
<br />BTW oam_stress fails in Nintendulator, I wonder why?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Sun May 30, 2010 1:23 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I realized that having these tests fail isn't correct, since they should never fail on a NES. The system under test is merely failing to meet our desirable simple model of behavior.
<br />
<br />How quickly does Nintendulator fail? That's surprising.
<br />
<br />bunnyboy, sorry I ignored one of your questions. Yes, it's possible to determine the PPU-CPU synchronization separately from these tests. I did so and verified that each pattern corresponds to a particular synchronization. Or are you requesting a ROM to test that via the other means (VBL timing, sprite hit, overflow)?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>jsr</b> [ Sun May 30, 2010 1:27 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I tested oam_read on a PAL NES and famicom and got the following results:
<br />
<br />PAL NES
<br />Most of the reads on lines 3-8 always failed, it never passed completely. The errors started from midway on line 3 and ended on beginning of line 8, and all other lines passed without errors. The exact patterns on these lines was random each time after reset.  So nothing like the NTSC results, and I'd test on my other PAL unit also but the controller port is broken. Would be interesting to see if it behaves similar or is completely random.
<br />
<br />Famicom
<br />The famicom always failed on all reads every time, seems like sprite reads doesn't work at all.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Anders_A</b> [ Sun May 30, 2010 2:36 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">blargg wrote:</div><div class="quotecontent">I'm getting a feeling that OAM was never meant to be read, that the read functionality was meant exactly for what Micro Machines does.</div>
<br />
<br />What exacly is it that Micro Machines does?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Sun May 30, 2010 3:05 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Very interesting that Famicom fails all the time. I'll have to write a test for you to run to see what exactly $2004 returns.
<br />
<br />I still need to go back to PAL testing (it's tedious because all I have is a PAL nes board, but no case, so I have to pull my NTSC NES apart and put the PAL board in and hook everything up to it). I was seeing what you mentioned before, where they work except a certain part of the frame. I'm guessing that it's because the PPU-CPU synchronization on PAL constantly drifts around, rather than being frozen at power/reset as on NTSC.
<br />
<br />Micro Machines is covered in previous posts. I'm not sure of the details. In one thread Disch and I discussed this and came up with some code to reliably use it in place of sprite #0 hit.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Tue Jun 01, 2010 5:23 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">blargg wrote:</div><div class="quotecontent">How quickly does Nintendulator fail? That's surprising.</div>
<br />Very quickly.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Tue Jun 01, 2010 7:27 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I had JSR run a further test on the Famicom and it seems that reading from $2004 is like reading from any other write-only PPU register, at least when rendering is disabled. We're going to see whether it behaves any differently when rendering is enabled.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Tue Jun 01, 2010 7:35 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />So that scanline detection method based on $2004 reads is history, right?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Tue Jun 01, 2010 8:44 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />We have yet to see what $2004 reads back with rendering enabled on a Famicom. I also haven't tested that technique on my NTSC NES with the various PPU synchronizations. I'm betting it'll work fine on NTSC, that $2004 reading exists for this very purpose.
<br />
<br /><strong>EDIT:</strong> Jsr pretty well verified that $2004 is a write-only register on Famicom in all cases, so yeah, I guess the $2004 read during rendering approach to scanline synchronization is dead, at least if you want Famicom compatibility.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>6502freak</b> [ Mon Jun 07, 2010 6:07 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">blargg wrote:</div><div class="quotecontent">Very interesting that Famicom fails all the time.</div>
<br />
<br />On the Famicom, both PPU and CPU are connected to the reset circuit/switch, which implies that there might be no variations in cycle alignment at all on this system, since every reset brings both PPU and CPU in a defined state. On the NES, the PPU reset line is tied to VCC (deactivated), hence the picture stays stable when pushing reset, unlike the Famicom.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>3</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>