<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=2&amp;t=5060" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2009-04-16T05:31:28-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=2&amp;t=5060</id>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2009-04-16T05:31:28-07:00</updated>
<published>2009-04-16T05:31:28-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5060&amp;p=45730#p45730</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5060&amp;p=45730#p45730"/>
<title type="html"><![CDATA[help with NMI]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5060&amp;p=45730#p45730"><![CDATA[
<div class="quotetitle">euler271 wrote:</div><div class="quotecontent"><br />anyone can tell me exactly what exactly happens when $2000.7 is cleared?<br /></div><br />When you turn off bit 7 of PPUCTRL, the PPU hides its vblank NMI signal from the CPU. That's all. To actually be able to write to VRAM at any time, you need to force blanking. You do this by writing 0 to PPUMASK ($2001).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Thu Apr 16, 2009 5:31 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Dwedit]]></name></author>
<updated>2009-04-15T22:23:36-07:00</updated>
<published>2009-04-15T22:23:36-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5060&amp;p=45714#p45714</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5060&amp;p=45714#p45714"/>
<title type="html"><![CDATA[help with NMI]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5060&amp;p=45714#p45714"><![CDATA[
The other way to do drawing...<br /><br />You need NMI.  You can't get away without it.  Otherwise you can't wait for vblank.<br /><br />Make your NMI handler two instructions long:<br />  inc vblank_variable<br />  rti<br /><br />Turn off the screen by writing #00 to 2001<br />Do your drawing<br /><br />Wait for vblank:<br /> lda #0<br /> sta vblank_variable<br />waitloop:<br /> lda vblank_variable<br /> beq waitloop<br /><br />Then turn the screen on by writing #$18 to 2001<br /><br />Then write to the PPU scroll registers.  This is not optional.  Otherwise it scrolls based on the last address you set when you did your PPU drawing.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=53">Dwedit</a> — Wed Apr 15, 2009 10:23 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[euler271]]></name></author>
<updated>2009-04-15T15:21:16-07:00</updated>
<published>2009-04-15T15:21:16-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5060&amp;p=45696#p45696</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5060&amp;p=45696#p45696"/>
<title type="html"><![CDATA[help with NMI]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5060&amp;p=45696#p45696"><![CDATA[
ok, i got it, but i tried the program without any nmi handling, only with the first background setting, this i did turning off and on $2000, and it doesn't work either, so there is a problem with writing so much data into screen, regardless of the moments you do it, even during setup.<br />anyone can tell me exactly what exactly happens when $2000.7 is cleared?, i thought you could write anything and modify the background as long as you wanted without a problem, but i was wrong because it appears to appears problems when the setup lasts too long.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3807">euler271</a> — Wed Apr 15, 2009 3:21 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Celius]]></name></author>
<updated>2009-04-15T12:32:47-07:00</updated>
<published>2009-04-15T12:32:47-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5060&amp;p=45691#p45691</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5060&amp;p=45691#p45691"/>
<title type="html"><![CDATA[help with NMI]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5060&amp;p=45691#p45691"><![CDATA[
Here's a general outline of what happens in my NMI and main loop routines:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NMI:<br />   pha<br />   txa<br />   pha<br />   tya<br />   pha<br /><br />   jsr PPUUpdates<br />   jsr APUUpdates<br /><br />   inc VBLCount<br /><br />   pla<br />   tay<br />   pla<br />   tax<br />   pla<br />   rti<br /><br /><br />Main:<br />   jsr HandlePlayer<br />   jsr HandleAI<br /><br />   jsr HandleSoundEffectCompetition<br /><br />   jsr HandleScrolling<br />   jsr DrawSprites<br /><br />   lda VBLCount<br />-<br />   cmp VBLCount<br />   beq -<br />   jmp Main<br /></div><br /><br />My main loop doesn't look exactly like that, but pretty close. The first routine does stuff based off of the players input with the controller (It also reads the controller in this loop). Since my game is a platformer, this routine moves the main character, allows him to attack, etc. depending on the state of the controller. The second routine handles all of the AI (assuming there are enemies or you are playing against the computer). Based on what decisions the player made, the AI for other objects will do what they do. For example, in my game, the player might jump, and the AI for a skeleton will see this and attempt to throw a bone or something at the character. All that is handled in this routine.<br /><br />In both the player and AI handling code, the player and other objects might do something that would cause a sound effect to happen. The HandleSoundEffectCompetition routine decides which sound effect will take place, as one will dominate over the others.<br /><br />The next routine will determine if/how much the screen will need to be scrolled over, and what will need to be written to the background once it is. This does NOT write to the background; it prepares data for the NMI to write to the BG, once it gives the NMI permission.<br /><br />Then the next routine takes all of the coordinates of enemies, the player, and whatnot and draws them in their appropriate location in the OAM page. This does not perform an OAM transfer! That is performed in the PPUUpdates routine in the NMI routine. An OAM transfer is not performed in the NMI unless this sprite drawing process is complete, and the sprite page has been completely updated.<br /><br />So basically the first two loops take care of all the game logic that happens (characters moving, enemies moving, shooting, killing, etc.), then the next loops prepare communication data (anything that will come out of a TV). The NMI will seal the deal, communicating everything to the player with sound and visuals.<br /><br />The sound is handled in the NMI every frame, because there is very little game logic involved with sound handling (besides sound effects, which are prepared in the main loop). This is so no matter what, music can play at a constant frame rate. Sound effects will also be played at a constant frame rate, just the rate at which they are requested is dependent on how long the Main loop takes to execute (an integer number of hardware frames. Usually 1, but sometimes 2, hopefully never 3).<br /><br />I like to think of the NMI routine as the routine that translates what the NES is trying to say to the player, and the Main routine is the routine that translates what the player has to say to the NES. Now, of course it isn't THAT simple, but mainly that's what purpose those routines serve.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=138">Celius</a> — Wed Apr 15, 2009 12:32 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2009-04-15T10:30:09-07:00</updated>
<published>2009-04-15T10:30:09-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5060&amp;p=45682#p45682</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5060&amp;p=45682#p45682"/>
<title type="html"><![CDATA[help with NMI]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5060&amp;p=45682#p45682"><![CDATA[
Here's the outline of how an NES game's main loop looks:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">forever:<br />  jsr readPads<br />  jsr gameLogic<br />  jsr updateSound<br />  jsr prepareVRAMData<br />  lda retraces<br />  @nmiloop:<br />    cmp retraces<br />    beq @nmiloop<br />  jsr copyVRAMData<br />  jmp forever<br /><br />nmi_handler:<br />  inc retraces<br />  rti<br /></div><br /><br />The prepareVRAMData subroutine should draw all sprites to an OAM buffer in main RAM and fill another buffer that gets copied to VRAM (nametables, palette, pattern tables if using CHR RAM). Then copyVRAMData copies the data to the PPU. You can usually squeeze up to 160 bytes of VRAM updates (possibly one row, one column, one palette, and four tiles) if you unroll the loop moderately. The tricky part is figuring out how to set up your buffer inside prepareVRAMData so that copyVRAMData doesn't have to think, just copy.<br /><br />The OAM buffer in main RAM is commonly placed at $0200-$02FF and copied with a write to $4014. Lately, I've been using part of the stack that I don't otherwise use ($0100-$019F) for the VRAM copy buffer.<br /><br />Some games, such as Super Mario Bros., run as NMI handlers. Their main loop looks different but has mostly the same structure:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">nmi_handler:<br />  jsr copyVRAMData<br />  jsr readPads<br />  jsr gameLogic<br />  jsr updateSound<br />  jsr prepareVRAMData<br />  rti<br /></div><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Wed Apr 15, 2009 10:30 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[frantik]]></name></author>
<updated>2009-04-15T08:14:30-07:00</updated>
<published>2009-04-15T08:14:30-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5060&amp;p=45678#p45678</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5060&amp;p=45678#p45678"/>
<title type="html"><![CDATA[help with NMI]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5060&amp;p=45678#p45678"><![CDATA[
you need to set up a buffer to handle the output to the name table.  then when the nmi fires you empty the buffer.  everything besides screen display stuff can be handled at other times<br /><br />i can't give you any code because i haven't written my buffer routines either lol<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3841">frantik</a> — Wed Apr 15, 2009 8:14 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[euler271]]></name></author>
<updated>2009-04-15T07:31:46-07:00</updated>
<published>2009-04-15T07:31:46-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5060&amp;p=45676#p45676</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5060&amp;p=45676#p45676"/>
<title type="html"><![CDATA[help with NMI]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5060&amp;p=45676#p45676"><![CDATA[
then, the problem is mainly that i need to do a lot of operations once certain button is pressed, refresh a part of a nametable, and change the values of some memory space. how can i change my code so that it can be able to do that and still being at ntsc vblank time. anyone a clue? hint? idea? anything .. maybe source code(lol)<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3807">euler271</a> — Wed Apr 15, 2009 7:31 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2009-04-15T07:04:13-07:00</updated>
<published>2009-04-15T07:04:13-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5060&amp;p=45673#p45673</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5060&amp;p=45673#p45673"/>
<title type="html"><![CDATA[help with NMI]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5060&amp;p=45673#p45673"><![CDATA[
You can force blanking by writing zero to $2001, but only do that when rewriting the entiere screen or if you're doing heavy updates that cannot be done any other way.<br /><br />Otherwise, you'd just want to update your stuff at VBlank time (at the start of the NMI routine) and make sure it does take shorter than the VBlank time.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Wed Apr 15, 2009 7:04 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[euler271]]></name></author>
<updated>2009-04-15T07:00:51-07:00</updated>
<published>2009-04-15T07:00:51-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5060&amp;p=45672#p45672</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5060&amp;p=45672#p45672"/>
<title type="html"><![CDATA[help with NMI]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5060&amp;p=45672#p45672"><![CDATA[
Ok, there's something i'm not getting right, if i turn off $2000 and work that way, does that also count as vblank time?, why?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3807">euler271</a> — Wed Apr 15, 2009 7:00 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Jeroen]]></name></author>
<updated>2009-04-15T06:28:59-07:00</updated>
<published>2009-04-15T06:28:59-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5060&amp;p=45671#p45671</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5060&amp;p=45671#p45671"/>
<title type="html"><![CDATA[help with NMI]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5060&amp;p=45671#p45671"><![CDATA[
You gotta shorten your vblank time. Thats the only solution.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3369">Jeroen</a> — Wed Apr 15, 2009 6:28 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[euler271]]></name></author>
<updated>2009-04-15T06:18:39-07:00</updated>
<published>2009-04-15T06:18:39-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5060&amp;p=45670#p45670</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5060&amp;p=45670#p45670"/>
<title type="html"><![CDATA[help with NMI]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5060&amp;p=45670#p45670"><![CDATA[
i thought i was doing that!, why do you think im not?, maybe i'm doing that wrong, please somebady tell me.<br />testing in nestopia made me realized that the program is in pal mode, how can i change that?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3807">euler271</a> — Wed Apr 15, 2009 6:18 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Dwedit]]></name></author>
<updated>2009-04-15T02:10:13-07:00</updated>
<published>2009-04-15T02:10:13-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5060&amp;p=45667#p45667</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5060&amp;p=45667#p45667"/>
<title type="html"><![CDATA[help with NMI]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5060&amp;p=45667#p45667"><![CDATA[
For one thing, get your controller reading out of NMI.<br />NMI code should be about rapidly consuming data you build into buffers during rendering time.<br /><br />Or do it the easy way and turn off the screen before you write your data there, then turn it back on when the next frame begins.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=53">Dwedit</a> — Wed Apr 15, 2009 2:10 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[euler271]]></name></author>
<updated>2009-04-15T01:10:03-07:00</updated>
<published>2009-04-15T01:10:03-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5060&amp;p=45663#p45663</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5060&amp;p=45663#p45663"/>
<title type="html"><![CDATA[help with NMI]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5060&amp;p=45663#p45663"><![CDATA[
to see how it should work just run it with fceuxdsp emulator.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3807">euler271</a> — Wed Apr 15, 2009 1:10 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Jeroen]]></name></author>
<updated>2009-04-15T00:51:02-07:00</updated>
<published>2009-04-15T00:51:02-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5060&amp;p=45662#p45662</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5060&amp;p=45662#p45662"/>
<title type="html"><![CDATA[help with NMI]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5060&amp;p=45662#p45662"><![CDATA[
seems to work in pal mode (to some extent it always flashes one word for me not the word I selected, not sure if thats supposed to happen) but ya you're probably doing too much in vblank.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3369">Jeroen</a> — Wed Apr 15, 2009 12:51 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[euler271]]></name></author>
<updated>2009-04-15T00:43:17-07:00</updated>
<published>2009-04-15T00:43:17-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=5060&amp;p=45661#p45661</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=5060&amp;p=45661#p45661"/>
<title type="html"><![CDATA[help with NMI]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=5060&amp;p=45661#p45661"><![CDATA[
Ive made a program that shows words when you select them with a cursor, all the words are in the background and are set in nametable0 so when i select one it knows thanks to some code which word is it and where it is set on screen, i turned off the interrupt(NMI) to refresh the other NT(nametable1) with the word selected, then switch tables and reactivate the NMI. i proved it with the fceuxdsp and it worked quite well, but when i tested it on hardware (i already modified a nrom cartridge to work with eproms and it works fine, the problem is not here) or another sim (nintendulator, nestopia), the words are cut some parts like the time it needs to refresh is too much, i dont know what else to do. here is the complete source code with an assembled version. please help me, im very confused.<br />the source: <a href="http://onexus.110mb.com/proy_v1.zip" class="postlink">http://onexus.110mb.com/proy_v1.zip</a><br />hint, maybe: i think the vblank is too short for all the process the program does,smaybe is that but i dont know what to do about it. ideas and modification of the source are always welcome, if anybody needs the .chr just extract it from the .nes<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3807">euler271</a> — Wed Apr 15, 2009 12:43 am</p><hr />
]]></content>
</entry>
</feed>