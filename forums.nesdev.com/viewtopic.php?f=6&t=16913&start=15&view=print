<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Making MML editing more practical</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Making MML editing more practical</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=6&amp;t=16913">http://forums.nesdev.com/viewtopic.php?f=6&amp;t=16913</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>2</strong> of <strong>3</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>RushJet1</b> [ Wed Jan 10, 2018 4:09 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Making MML editing more practical</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I used MCK/PPMCK's implementation of MML for years and even made C++ programs for it as preprocessors to add features.  I got really good/efficient at making music this way, and I was highly resistant to switching to FamiTracker, seeing it as a lot of hassle to switch to an unfamiliar composition method.  Then I started doing collaborations with people using FT and slowly started to realize that it was a much better workflow.  There's nothing more annoying in MML than having a drum loop that says something like [c8 c4 c8 d4 d8 c8 d8]256 then wanting to add a fill somewhere in there or customize it at all.  Gotta count the loops for every iteration...whereas in FamiTracker you just find where you want to edit things and edit them.  The only thing I miss from MML is search/replace functionality of text editors.<br /><br />Anyway there's a program called <a href="https://woolyss.com/chipmusic/chipmusic-mml/MuMML.zip" class="postlink">MuMML</a> that runs scripts every time you save your file. You can edit the scripts to do whatever you want and it has a lot of settings for existing MML formats.  When I used it, it ran all my programs, then the compiler, then spit it out to Winamp.  So for instance you could do what Rahsennor said, have some kind of symbol that ignores data above that line, then hit CTRL+S in your editor and the song will play from that point.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Thu Jan 11, 2018 10:22 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Making MML editing more practical</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Rahsennor wrote:</div><div class="quotecontent">I haven't implemented the bar command yet, due to lack of solutions to the issues you listed.</div><br />I sat and thought about it for a while and remembered that Pently has a concept of time signature, encapsulated in a &quot;rhythm context&quot; object (<tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">PentlyRhythmContext</tt> in <a href="https://github.com/pinobatch/pently/blob/master/tools/pentlyas.py" class="postlink">pentlyas.py</a>). Patterns use the rhythm context to translate &quot;quarter note&quot; into a number of rows, and the song uses it to wait for a particular measure and beat before emitting pattern start commands. Thus I'd need to ensure that the rhythm context can count the rows emitted by <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">fix_note_duration&#40;&#41;</tt>. For pickup, I could have a bar check in a pattern's first measure force advancing to the next measure rather than raising a warning.<br /><br /><div class="quotetitle">rainwarrior wrote:</div><div class="quotecontent"><div class="quotetitle">tepples wrote:</div><div class="quotecontent"><ul><li>Inability to reuse patterns across channels </li><li>Inability to reuse patterns at different transpositions </li><li>Inability to reuse patterns with different instruments </li><li>Inability to loop a pattern, such as a drum loop, that is shorter than the module's pattern length </li><li>Inability to interrupt a single playing pattern, such as to interrupt a drum loop with a drum fill </li><li>Inability to export row highlight and 0CC-FamiTracker linear pitch setting </li></ul></div><br />All of these things are something that an exporter can detect and apply, if desired.</div><br />But I fear that some of these, such as patterns with effective loops of different lengths, might not be exactly trivial for an exporter to detect automatically. I guess I ought to sit down and define the loop recognition problem more precisely and present the definition in a new topic, in order to see if it's isomorphic to some problem known to be either tractable or NP-complete.<br /><br />I have run into such NP-complete problems in past NES projects, such as about a year ago when I was trying to collecting sprite tiles into 1K banks for MMC3, where cels in one bank can share tiles but cels in different banks cannot. I discovered that minimizing the number of banks needed for a particular set of cels is the same as the &quot;VM packing problem&quot;, which <a href="https://en.wikipedia.org/wiki/Bin_packing_problem" class="postlink">Wikipedia claims</a> &quot;is hard to even approximate.&quot; It's harder than the ordinary bin packing problem where objects do not share portions, such as packing compressed CHR into unused parts of a ROM in Action 53, for which the first fit decreasing approximation is more than good enough.<br /><br />But if jsr hasn't made a new release of FamiTracker 0.5 beta in years, and HertzDevil doesn't accept pull requests for 0CC-FamiTracker 0.3.x, how would I &quot;export row highlight and 0CC-FamiTracker linear pitch setting&quot;?<br /><br /><div class="quotetitle">rainwarrior wrote:</div><div class="quotecontent">Just because Famitracker doesn't have a variety of &quot;mirror this but with ~~~ transformation applied&quot; modes as a built in feature doesn't mean you can't apply it after the fact.</div><br />In my experience, composers want to make changes to a piece even after I've hand-optimized the converter's output, and it would be labor-inefficient for the tools people to have to hand-reoptimize the data after each tweak.<br /><br /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">I think it would help a lot to be able to hear a single line within a file, for example with a key combination. Possibly with seek back for correct parameters (instrument and octave), but that'd be luxurious.</div><br />Seek back? Hold my beer. <img src="./images/smilies/Mfr_icon_homebrew.png" alt=":beer:" title="Beer" /><br /><br />Pently recently gained &quot;seek forward&quot;; &quot;rewind to start and seek forward&quot; is my next task.<br /><br /><div class="quotetitle">gauauu wrote:</div><div class="quotecontent">If you gave me a text interface to compose, but with full-featured gui tools for listening to it in lots of different ways (integrated in such a way that there wasn't a separate export/compile step to slow things down), I'd be happy.</div><br />I've headed down that path with my <a href="https://github.com/pinobatch/pently/issues/27" class="postlink">roadmap for adding a richer playback GUI to Pently's NES export</a>. I've already got visualization and a rehearsal mark list over the past couple days, and next on my list are seeking to a rehearsal mark, pause and step as suggested by rainwarrior, and track muting. But what's the practical difference between an &quot;export/compile&quot; step (activated using the Run button in your text editor, or by a script watching file modification times) and the play button in a tracker?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>FrankenGraphics</b> [ Thu Jan 11, 2018 10:41 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Making MML editing more practical</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">But what's the practical difference between an &quot;export/compile&quot; step (activated using the Run button in your text editor, or by a script watching file modification times) and the play button in a tracker?</div><br /><br />The thing that'd matter to me: In famitracker, you can still modify note, effect, instrument data + pattern sequences all while playing back and the changes will take place instantaneously.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>gauauu</b> [ Thu Jan 11, 2018 10:47 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Making MML editing more practical</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent"><div class="quotetitle">gauauu wrote:</div><div class="quotecontent">If you gave me a text interface to compose, but with full-featured gui tools for listening to it in lots of different ways (integrated in such a way that there wasn't a separate export/compile step to slow things down), I'd be happy.</div><br />I've headed down that path with my <a href="https://github.com/pinobatch/pently/issues/27" class="postlink">roadmap for adding a richer playback GUI to Pently's NES export</a>. I've already got visualization and a rehearsal mark list over the past couple days, and next on my list are seeking to a rehearsal mark, pause and step as suggested by rainwarrior, and track muting. But what's the practical difference between an &quot;export/compile&quot; step (activated using the Run button in your text editor, or by a script watching file modification times) and the play button in a tracker?</div><br /><br />In theory it's possible to make the export/compile work, and it sounds like you might be on the right track, but the differences would be:<br /><br />- instant conversion and playback.  It should start playing immediately. If the conversion, launching, and starting of the player takes less than a quarter second, that would work<br /><br />- interactivity.  It sounds like you have some of this underway.  I want to be able to press pause on the player, change one line/note/whatever in the score, back the player up one measure, and replay from there.  Or play a single line over and over again while tweaking the source until I'm happy with it. Or if I have a channel set to solo or mute, I want it to stay that way after I make a change and press play again.  Those aren't insurmountable, but are all important for an interactive feel.<br /><br />I had another thing, but ran out of time, I'll come back later <img src="./images/smilies/icon_smile.gif" alt=":-)" title="Smile" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>gauauu</b> [ Thu Jan 11, 2018 12:28 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Making MML editing more practical</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The other bits also apply to the interactivity, and are a bit harder, I think.  I'd love to have some sort of UI linkage between the editor and the player. Like if I highlight an area of the editor, I'd like an option to only play that bit, or jump to it.  And if I pause the player, I'd like some way to jump to the part of the source that's current in the player.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Thu Jan 11, 2018 12:37 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Making MML editing more practical</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">But I fear that some of these, such as patterns with effective loops of different lengths, might not be exactly trivial for an exporter to detect automatically. I guess I ought to sit down and define the loop recognition problem more precisely and present the definition in a new topic, in order to see if it's isomorphic to some problem known to be either tractable or NP-complete.</div><br />Well, detection of loops and repeated substrings within a single pattern is actually pretty easy, and patterns are &quot;short&quot; in the scheme of things. NP isn't a necessarily a problem when you're dealing with a small enough set. Detecting shared pattern data globally is harder but there's a lot of pretty useful detections you can do without breaking your back. We only need &quot;good enough&quot; here, not &quot;optimal&quot;.<br /><br />Stepping back from this, though, the whole point of the complex repeat features is <em>compression</em>, right? The goal should be &quot;how do I make the smallest output data&quot; before it should be &quot;how do I let the user play tetris with their own data&quot;. If finding the optimal way to loop something really is a hard computational problem, the user will also have a high probability of failing to solve it well, and also likely it will take a human more time and effort, which is also a waste.<br /><br />From another angle: generic compression algorithms manage to do a pretty good job of things like this already, so I am certain there are practical methods already available. <a href="http://4klang.untergrund.net/" class="postlink">4klang</a> does a pretty good job of compressing music data, and might have useful techniques.<br /><br /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">how would I &quot;export row highlight and 0CC-FamiTracker linear pitch setting&quot;?</div><br />I thought linear pitch was just a global option you can choose? I don't really understand how this is an export problem? (Supporting it at all is a problem, but that doesn't seem to be your question?)<br /><br />Does &quot;row highlight&quot; mean something I'm unaware of? I assumed this meant the visual appearance of highlights on every Nth row while editing in the tracker. Why would it be exported, isn't it only visual?<br /><br />(I don't use 0CC so the terms might be used to mean something I don't expect.)<br /><br /><div class="quotetitle">tepples wrote:</div><div class="quotecontent"><div class="quotetitle">rainwarrior wrote:</div><div class="quotecontent">Just because Famitracker doesn't have a variety of &quot;mirror this but with ~~~ transformation applied&quot; modes as a built in feature doesn't mean you can't apply it after the fact.</div><br />In my experience, composers want to make changes to a piece even after I've hand-optimized the converter's output, and it would be labor-inefficient for the tools people to have to hand-reoptimize the data after each tweak.</div><br />Yes, having mirror functions in the tool would be great and more convenient. The only mirror Famitracker has currently is just through the order being able to reuse a pattern on the same channel.<br /><br />The optimization problem wasn't that big a deal for me, though. The main reason is just that you don't need to &quot;hand-reoptimize&quot; all the time, only once you're finished working on the piece. It's a finishing pass, not ongoing labour. The other way I mitigated it was having my my exporter output some diagnostic statistics to a text file that I can use to understand what duplicates were found, etc. and of course the total size is a very useful metric. During that finishing pass I could go over the tune and spot my copy paste failures (which weren't many, TBH). It was a very small problem to solve and took only minutes to go over the whole soundtrack.<br /><br /><br />Actually, this is getting a little bit away from what I think is the actual advantage of complex mirroring/repeat functionality (which MML has a distinct advantage for). Mirroring is just a useful composing tool; you'll find it in notation packages like <a href="https://www.finalemusic.com/" class="postlink">Finale</a> too, where there's no export size concern at all. I think it's <em>primary</em> function for the user should be for that.<br /><br />Making smaller output is a good side effect of mirroring, but the <em>exporter</em> can and should find mirroring whether or not the user remembered or knew to specify it (or did a suboptimal job). The user does <em>not</em> have to be the compressor. Giving the user power to compress something themselves in the absence of an automated one is worthwhile, but it's certainly not the best use of their time if it can be easily automated.<br /><br /><br />And finally, even if MML has good mirroring tools, like I said before I wouldn't trade the tracker workflow for it. Too much is lost for that gain. The ideal solution for the me would be better mirroring <em>within</em> Famitracker, not abandoning Famitracker for MML.<br /><br />...but overall it's something I can live without; the repercussions of not having it are only a minor inconvenience. If it was a bigger problem I'd have modified Famitracker myself.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>FrankenGraphics</b> [ Thu Jan 11, 2018 12:59 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Making MML editing more practical</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">rainwarrior wrote:</div><div class="quotecontent"> The ideal solution for the me would be better mirroring within Famitracker, not abandoning Famitracker for MML.</div><br /><br />Wouldn't this depend at least a bit what you'd be abandoning Famitracker <em>for</em>? I mean, MML in itself has no interface other than the constraints of the format, so it's hard to compare until there is one. Or do you mean that the tracker model itself is irreplacable for you?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Thu Jan 11, 2018 1:05 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Making MML editing more practical</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">FrankenGraphics wrote:</div><div class="quotecontent">Wouldn't this depend at least a bit what you'd be abandoning Famitracker <em>for</em>? I mean, MML in itself has no interface other than the constraints of the format, so it's hard to compare until there is one. Or do you mean that the tracker model itself is irreplacable for you?</div><br />I'm not talking about any hypothetical MML editor, I'm talking about what we have today. The value of Famitracker vs. that is enormous.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Thu Jan 11, 2018 1:14 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Making MML editing more practical</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">gauauu wrote:</div><div class="quotecontent">I want to be able to press pause on the player, change one line/note/whatever in the score, back the player up one measure, and replay from there.</div><br />The pattern would be to set a temporary rehearsal mark just before what you're working on and set a project-wide option to have the player ROM start at that mark.<br /><br /><div class="quotetitle">rainwarrior wrote:</div><div class="quotecontent"><div class="quotetitle">tepples wrote:</div><div class="quotecontent">how would I &quot;export row highlight and 0CC-FamiTracker linear pitch setting&quot;?</div><br />I thought linear pitch was just a global option you can choose? I don't really understand how this is an export problem? (Supporting it at all is a problem, but that doesn't seem to be your question?)</div><br />NSD.Lib and Pently always operate in linear pitch mode. But 0CC-FamiTracker's text export doesn't include whether a module was authored in linear pitch mode. This means the converter would not know what to do with vibrato depths and portamento rates unless the user passes an explicit command-line option stating whether the module was authored with linear pitch on or off.<br /><br /><div class="quotetitle">rainwarrior wrote:</div><div class="quotecontent">Does &quot;row highlight&quot; mean something I'm unaware of? I assumed this meant the visual appearance of highlights on every Nth row while editing in the tracker. Why would it be exported, isn't it only visual?</div><br />In mid-2019, several key U.S. patents related to rhythm games are set to expire. A rhythm game would need to know how many rows make up a &quot;beat&quot; of musical time in order to know how fast to move the arrows. &quot;<a href="https://remywiki.com/BURNING_HEAT!_(3_Option_MIX)" class="postlink">Burning Heat</a>&quot; and &quot;<a href="https://remywiki.com/Butterfly" class="postlink">Butterfly</a>&quot; wouldn't use the same rows-per-beat setting, and &quot;<a href="https://en.wikipedia.org/wiki/Music_of_In_the_Groove" class="postlink">July</a>&quot; switches mid-song.<br /><br /><div class="quotetitle">rainwarrior wrote:</div><div class="quotecontent">The optimization problem wasn't that big a deal for me, though. The main reason is just that you don't need to &quot;hand-reoptimize&quot; all the time, only once you're finished working on the piece. It's a finishing pass, not ongoing labour.</div><br />Composer to tools guy: &quot;I thought I was finished working on this piece, but I was mistaken.&quot; It may be hard to estimate the different cost of propagating asset changes in different subsystems: &quot;Your build process automatically recompresses level backgrounds when changed, so why not music?&quot;

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Thu Jan 11, 2018 1:27 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Making MML editing more practical</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">This means the converter would not know what to do with vibrato depths and portamento rates unless the user passes an explicit command-line option stating whether the module was authored with linear pitch on or off.</div><br />Why is that a problem? I would kind of expect the exporter to have a bunch of options like that. (OK maybe it would be slightly nice to have but it seems super trivial to work around? I presume you've already submitted a report to 0CC devs about it?)<br /><br /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">In mid-2019, several key U.S. patents related to rhythm games are set to expire.</div><br />LOL. I don't think there is anyone besides you in all of NESDevdom that would currently be holding back a rhythm game because of whatever patent you are referring to. <img src="./images/smilies/icon_razz.gif" alt=":P" title="Razz" /><br /><br /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">A rhythm game would need to know how many rows make up a &quot;beat&quot; of musical time in order to know how fast to move the arrows.</div><br />I think a rhythm game has a lot more specialized needs than that. TBH if you're making a rhythm game and you don't have some custom solution going on for the music you're probably doing it wrong?<br /><br /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">Composer to tools guy: &quot;I thought I was finished working on this piece, but I was mistaken.&quot;</div><br />Well, it's all about magnitudes. Like I said, in my case it took <em>minutes</em> to review an entire game soundtrack. If you think it's a significant problem then go ahead and solve it.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Thu Jan 11, 2018 10:09 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Making MML editing more practical</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">rainwarrior wrote:</div><div class="quotecontent">I presume you've already submitted a report to 0CC devs about [things missing from export]?</div><br /><a href="http://hertzdevil.info/forum/index.php?topic=43.0" class="postlink">Done</a>.<br /><br /><div class="quotetitle">rainwarrior wrote:</div><div class="quotecontent">I don't think there is anyone besides you in all of NESDevdom that would currently be holding back a rhythm game because of whatever patent you are referring to. <img src="./images/smilies/icon_razz.gif" alt=":P" title="Razz" /></div><br />True, but probably only because the NES scene is small enough that only one person <em>wants</em> to develop a Power Pad-controlled rhythm game. The patents in suit in <em>Konami v. Roxor</em> are why <a href="https://fedoraproject.org/wiki/SIGs/Games#List_of_games_we_will_NOT_package" class="postlink">StepMania is not in Fedora</a>.<br /><br />But time signature/row highlight issues aside, and assuming the advantages of the tracker model:<br /><br />How critical is it that the music sound exactly the same through the game-oriented driver as it does inside the tracker? If, for example, the drum representation doesn't match that of FT, would it be acceptable to include surrogate drum samples in FT's DPCM channel along with commands in the describing how the converter should render them as PSG drums? You'd still be able to tell what the drums are supposed to be during composition, even though you'd have to play them after conversion in order to fine-tune their mixing.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>FrankenGraphics</b> [ Fri Jan 12, 2018 7:00 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Making MML editing more practical</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I'm not talking about any hypothetical MML editor, I'm talking about what we have today. The value of Famitracker vs. that is enormous.<br /></div><br /><br />I understand this sentiment; what we have is what we have. There is a precursor you might or might've not experienced? 3MLE. <br /><br />It's a (for its niche purposes) full featured, interactive-during-playback MML editor featuring a text editor, piano roll editor, and a tracker-like param viewer on the side. It's just not suitable for NES composition as <br /><br />1)its interface and output is tied to a soundfont-like interpreter<br />2)it adopts the standard midi-editor-like linear score, rather than that of a pattern sequencer.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Fri Jan 12, 2018 12:46 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Making MML editing more practical</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">FrankenGraphics wrote:</div><div class="quotecontent"><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I'm not talking about any hypothetical MML editor, I'm talking about what we have today. The value of Famitracker vs. that is enormous.</div><br />I understand this sentiment; what we have is what we have. There is a precursor you might or might've not experienced? 3MLE. <br />It's a (for its niche purposes) full featured, interactive-during-playback MML editor featuring a text editor, piano roll editor, and a tracker-like param viewer on the side. It's just not suitable for NES composition...</div><br />Well I have seen graphical editors that use an MML sort of format underneath, but not specifically for PPMCK/MML, and I'm not familiar with 3MLE either but that's all aside what I was talking about.<br /><br />Like, in a trivial sense you could adapt the current Famitracker to save PPMCK/MML instead of FTM, but that doesn't create any new editing capabilities for Famitracker. Similar story with MML editors: the ones I've seen that can load &quot;handmade&quot; files are really hamstrung in terms of how they can present information to you for editing just because the user could have organized it any way they want. (This trivial Famitracker MML would only be able to load MML created in Famitracker, or is otherwise parseable as the FT subset of MML features, not arbitrary hand-edited MML... this gets pretty tricky IMO.)<br /><br />So in this context, I was talking about being able to use the mirroring abilities of MML effectively. A text editor gives you full access, but no other support. A hypothetical Famitracker with MML save gives you no access to that feature, but all the other support of Famitracker.<br /><br />The bottom line is, if you want mirroring in an editing tool, that's a separate feature it has to have written into it. That's got little to do with the format: if FT grew such a feature the FTM format would grow along with it. So... I don't think the format itself is the problem here.<br /><br /><br />My point was that mirroring is a very nice composing feature, but not essential, and its value for compression is only a side effect. Valuable only if you've got nothing else, because I have a belief that can be done much better automatically (and that doing so is not a terribly difficult engineering problem).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>FrankenGraphics</b> [ Fri Jan 12, 2018 1:52 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Making MML editing more practical</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Yeah, to me MML support within a FamiTracker branch would be of no use except for porting work already as good as done from Famitracker to another (MML based) driver (not bad at all in itself, definitely useful). But you'd still lose a lot of the benefits with using a MML based driver unless you plan to hand edit those post-port. <br /><br />mirroring = reuse of patterns? <br /><br />this is just a personal preference, but i wouldn't want to write computer music without pattern sequencing, be it basic or advanced. I'd prioritize that over:<br />-score modifying interaction during playback.<br />-hearing notes as i play/write them (can be substituted with a physical instrument on the side).<br /><br />I think interface is more important than differences in file format between pently and famitracker. But MML holds the promise of portability - it could be a relative breeze to move a soundtrack between Pently, DevSound and Rahsennors' project once you have instrument definitions set up, and there'd be strength in numbers.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>zzo38</b> [ Fri Jan 12, 2018 1:59 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Making MML editing more practical</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I have used both tracker interfaces and MML; I find the MML much easier and more convenient to work with. (This is why I wrote AmigaMML.)<br /><br />Still, you could make up a multi-view editor, to get the benefits of all of them, especially if MIDI input is also possible.<br /><br />Also another file format is the Csound numeric score format, which is a somewhat tracker like format but more generalized. (I have found it more useful to write a MML compiler to target it, although some people do use the Csoud numeric score format directly. There are also various GUIs for Csound.)<br /><br />Batch editing operations would still be possible even with tracker based interfaces; one way could be to use SQL statements. You can enter the SQL commands to read or alter the pattern data, to do such thing as transpose, copy and transpose, stretch, etc, and save the ones you use into a user menu so that you need not type them in every time.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>2</strong> of <strong>3</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>