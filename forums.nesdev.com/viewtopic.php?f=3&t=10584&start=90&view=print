<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Original Mario Bros bug on my emulator?</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Original Mario Bros bug on my emulator?</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=3&amp;t=10584">http://forums.nesdev.com/viewtopic.php?f=3&amp;t=10584</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>7</strong> of <strong>10</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>koitsu</b> [ Sat Oct 19, 2013 10:54 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Original Mario Bros bug on my emulator?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Scoping is the answer to the question (as others have said), re: using <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">{}</tt> blocks within the <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">case</tt> rather than leaving it open-ended, specifically in the case of re-using variable name.<br /><br />Anyway, give the ADC/SBC method blargg mentioned a shot and report back.  Those two opcodes are usually the ones most people get wrong, so don't feel bad.  :-)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>WedNESday</b> [ Sun Oct 20, 2013 3:53 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Original Mario Bros bug on my emulator?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">koitsu wrote:</div><div class="quotecontent">Anyway, give the ADC/SBC method blargg mentioned a shot and report back.</div><br />I assume you mean me, not blargg.<br /><br />Anyway he has already given it a shot and it has broken NEStest. Which means that there a bigger problems elsewhere in his code. I'm all for a rewrite to be honest. If he rewrites is now with the new style that has been described here the bug(s) may fix themselves. If he doesn't he may waste x amount of time looking for a bug we'll never find.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>WedNESday</b> [ Sun Oct 20, 2013 3:54 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Original Mario Bros bug on my emulator?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />By the way if you declare a variable inside of a switch/case in C++ it gives you a warning.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>ArsonIzer</b> [ Sun Oct 20, 2013 4:34 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Original Mario Bros bug on my emulator?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">WedNESday wrote:</div><div class="quotecontent">By the way if you declare a variable inside of a switch/case in C++ it gives you a warning.</div><br /><br />Wouldn't that depend on the IDE, or is it an actual compiler thing?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>ArsonIzer</b> [ Sun Oct 20, 2013 4:44 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Original Mario Bros bug on my emulator?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">WedNESday wrote:</div><div class="quotecontent"><div class="quotetitle">koitsu wrote:</div><div class="quotecontent">Anyway, give the ADC/SBC method blargg mentioned a shot and report back.</div><br />I assume you mean me, not blargg.<br /><br />Anyway he has already given it a shot and it has broken NEStest. Which means that there a bigger problems elsewhere in his code. I'm all for a rewrite to be honest. If he rewrites is now with the new style that has been described here the bug(s) may fix themselves. If he doesn't he may waste x amount of time looking for a bug we'll never find.</div><br /><br />I agree with you. That way I can use less objects to improve performance, and make it cleaner/more compact. While I'm at it, I'll completely rewrite my PPU to make it more accurate, since drawing sprites ~30k CPU cycles too late might actually be over the top inaccurate. <br /><br />The thing that bothers me though, is not knowing what precisely causes this bug. Rewriting the core won't magically fix the problem if it's an actually serious misconception in my code, because I'll be making the same mistake again. Even if it does fix the issue, I'd still like to know what caused it initially. <br /><br />Anyway, if I don't manage to fix it within 2 or 3 days at most, I'll just go ahead and do a complete rewrite. Hope that fixes a lot of things which are wrong now.<br /><br />PS: Maybe he did mean Blargg. Koitsu posted a couple of links to some topics where the ADC/SBC instructions were debated, and Blargg mentioned a pretty clever implementation in there, so maybe he meant that.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>WedNESday</b> [ Sun Oct 20, 2013 5:01 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Original Mario Bros bug on my emulator?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">ArsonIzer wrote:</div><div class="quotecontent">The thing that bothers me though, is not knowing what precisely causes this bug. Rewriting the core won't magically fix the problem if it's an actually serious misconception in my code, because I'll be making the same mistake again. Even if it does fix the issue, I'd still like to know what caused it initially.</div><br /><br />Never ponder as to what caused bug a or bug b for any long period of time when it has either been fixed or isn't important. You'll probably never end up finding it. Trust me.<br /><br /><div class="quotetitle">ArsonIzer wrote:</div><div class="quotecontent">Rewriting the core won't magically fix the problem...</div><br /><br />Don't bet on it. <img src="./images/smilies/icon_cool.gif" alt="8-)" title="Cool" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>ArsonIzer</b> [ Sun Oct 20, 2013 3:29 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Original Mario Bros bug on my emulator?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Alright, thanks for the help guys. I've started implementing the CPU now using less objects. I hope it works and does indeed fix the issue. I'll make sure to thoroughly check every method with other emulators like FCEUX, Nintendulator, etc and use a more sensible approach to things that can be done easily. <br /><br />Just a quick general question though: is the catch-up method used frequently in good emulators, or is it just an in-between stage for emulators which go for actual CPU/PPU-cycle specific implementation? I've heard that people generally don't go for a cycle-specific CPU, but rather a cycle-specific PPU and use this catch-up method. Are there better ways out there which are frequently used, or is this the go-to technique? <br /><br />To add to that, when using the catch-up method and implementing a cycle-specific PPU, does the timing of the fetches (nametable, attribute table, pattern table, etc) matter, or can the data be fetched from memory when it's needed and keep the emulator working? What I mean is, let's consider the following: <br /><br />Cycle 0: idle<br />Cycle 1: fetch nametable byte<br />Cycle 2: fetch attribute table byte<br />Cycle 3: fetch first pattern table byte<br />Cycle 4: fetch second pattern table byte and draw 4 pixels (I think) <br /><br />If I were to just do everything on cycle 4, would it matter in any game, or is this procedure necessary? I.e. would this (in quick pseudo code) be sufficient: <br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">if(cycle &gt;=1 &amp;&amp; cycle &lt;= 256) { <br />&nbsp; &nbsp; if(cycle % 4 == 0) { <br />&nbsp; &nbsp; &nbsp; &nbsp; //fetch stuff<br />&nbsp; &nbsp; &nbsp; &nbsp; //draw 4 pixels<br />&nbsp; &nbsp; }<br />}</div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>3gengames</b> [ Sun Oct 20, 2013 3:48 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Original Mario Bros bug on my emulator?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Yeah, the fetches need to be right for MMC3 as it &quot;Watches&quot; A13 or whatnot.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Sun Oct 20, 2013 6:06 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Original Mario Bros bug on my emulator?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Catch-up is entirely an optimization, and apparently on today's desktop PCs unnecessary for a NES emulator. You can always do some catch-up later where it would help most (e.g. when the PPU will be running for several scanlines, use something optimized for the full scanlines). I think that lacking an emulator written without catch-up, you won't be able to reasonably make one with it, because you won't understand the full ramifications of everything and will be constantly finding problems with the catch-up implementation not handling these corner cases. I wish I had done a normal implementation before I did catch-up back when I was working in my NES emulator. Far easier to get right, and serves as a reference that works.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>ArsonIzer</b> [ Mon Oct 21, 2013 1:14 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Original Mario Bros bug on my emulator?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Wait a minute. If I understand correctly, the catch-up method is used to run the CPU for X amount of cycles, and while that is happening, if the instruction writes to the PPU, you let the PPU run until it &quot;catches up&quot; with the CPU before doing the actual write (or read or whatever). What is considered the &quot;normal&quot; method here if that's not it? Just letting the CPU run one instruction and then running the cycle-specific PPU for the elapsed amount of cycles * 3, or is it a simple scanline-based PPU where the CPU runs a full scanline before letting the PPU draw? <br /><br />I get that the catch-up thing can be tricky, but wouldn't it be necessary for a game like Battletoads?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Mon Oct 21, 2013 7:09 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Original Mario Bros bug on my emulator?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The precise method is to run one CPU cycle then three* PPU cycles. Anything else is an optimization. Optimization good; premature optimization bad.<br /><br /><br />* Assuming NTSC

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>ulfalizer</b> [ Mon Oct 21, 2013 7:41 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Original Mario Bros bug on my emulator?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">ArsonIzer wrote:</div><div class="quotecontent">Wait a minute. If I understand correctly, the catch-up method is used to run the CPU for X amount of cycles, and while that is happening, if the instruction writes to the PPU, you let the PPU run until it &quot;catches up&quot; with the CPU before doing the actual write (or read or whatever). What is considered the &quot;normal&quot; method here if that's not it? Just letting the CPU run one instruction and then running the cycle-specific PPU for the elapsed amount of cycles * 3, or is it a simple scanline-based PPU where the CPU runs a full scanline before letting the PPU draw? <br /><br />I get that the catch-up thing can be tricky, but wouldn't it be necessary for a game like Battletoads?</div><br /><br /><em>Catch-up</em> means catching up on components whenever their current state becomes significant. For example, if the value of one of the monochrome flag changes mid-frame, you'd catch up by first running the PPU up to that point using the old value of the monochrome flag, and then changing it. Or, in pseudo-code:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; run_ppu_up_to_current_position();<br />&nbsp; monochrome_flag = new_monochrome_flag;</div><br /><br />The current state that's significant in this case is the rendering position. The advantage of this approach is that you can draw in a more efficient fashion than pixel-for-pixel most of the time, and that each component can be run in a tight loop instead of switching between components millions of times per second. The disadvantage is that you need to catch all points where the state becomes significant. It's easy to miss stuff.<br /><br />A related concept is <em>prediction</em>. In prediction, you predict when the state of some component will become significant (e.g. because it fires an interrupt) to avoid having to do low-level emulation of that component up to that point. The advantage is the same as for catch-up. The disadvantage is that many thing can invalidate those predictions, making it very tricky to get right in some cases. Getting it absolutely solid for some things might involve so much prediction and invalidation that it becomes as slow or slower than no prediction.<br /><br />Without catch-up and prediction, you simply run three PPU ticks (NTSC) and one APU tick for each CPU tick. An easy way to do this for the 6502 is to do the PPU and APU calls in the read and write routines (with a separate <strong>tick()</strong> function that can be used elsewhere too). Provided you get the timing right, this makes interactions between components work automagically for all cases, at the cost of performance.<br /><br />Even without prediction and catch-up there's still optimizations you can do, like having a <strong>channel_updated</strong> flag for the APU that's set to true whenever the output level of some channel changes. That way you don't have to do channel mixing each CPU cycle. You can also have a flag that's set whenever some event that needs to be handled between CPU instructions (like a pending interrupt) occurs.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>ArsonIzer</b> [ Mon Oct 21, 2013 8:17 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Original Mario Bros bug on my emulator?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Tepples - I am aware that that is the PRECISE method, but I'm assuming that not every emulator uses that method. What do people normally use for their emulators? I don't assume it's common to have a cycle-specific CPU.  <br /><br />Ulfalizer - So what you're saying, is that the norm for today's emulators is to have a CPU, which makes the PPU and APU tick for every single one of its cycles? I thought that was the slow way to do things. <br /><br />As a separate query: Let's take the ADC instruction using Zero page which is supposed to take 3 cycles. The 3 cycles do: Fetch opcode, fetch address and then fetch data from the address and doing the actual addition. On every one of these actions, I'm supposed to let the PPU cycle 3 times to achieve good accuracy (leaving out the APU for now)?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>ulfalizer</b> [ Mon Oct 21, 2013 8:30 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Original Mario Bros bug on my emulator?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">ArsonIzer wrote:</div><div class="quotecontent">Ulfalizer - So what you're saying, is that the norm for today's emulators is to have a CPU, which makes the PPU and APU tick for every single one of its cycles? I thought that was the slow way to do things.</div><br /><br />Not sure how much of the norm it is, but today's desktop computers seem fast enough at least (my emulation thread currently uses around 37% of one core on my two-year-old 2600K Core i7), and it has the advantage of simple and very robust emulation. I think Nintedulator uses this approach too.<br /><br /><div class="quotetitle">Arsonizer wrote:</div><div class="quotecontent">As a separate query: Let's take the ADC instruction using Zero page which is supposed to take 3 cycles. The 3 cycles do: Fetch opcode, fetch address and then fetch data from the address and doing the actual addition. On every one of these actions, I'm supposed to let the PPU cycle 3 times to achieve good accuracy (leaving out the APU for now)?</div><br /><br />Yup, that's what I do.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Mon Oct 21, 2013 8:43 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Original Mario Bros bug on my emulator?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><a href="http://wiki.nesdev.com/w/index.php/Catch-up" class="postlink">The wiki has a page about catch-up</a>.<br /><br />In the bad old days (late 1990s), it was common to run the CPU for a whole scanline and then run the PPU for a whole scanline.<br /><br />So long as NMI, APU IRQs, and mapper IRQs are predicted, the CPU can run thousands of cycles ahead if necessary. It can store the address, data, and cycle number of each write. This is called &quot;timestamping&quot;, and it can help the cache performance of your emulator. But the PPU does have to catch up on a $2007 read, and it may have to on a $2002 read on a line that contains sprite 0 or eight sprites. Those scanlines can be predicted in advance after OAM is rewritten. Though a couple games (such as <em>Bigfoot</em>) rewrite OAM mid-frame, invalidating the prediction, you can get away with predicting $2002 16 or so lines ahead without too much performance hit.<br /><br />Sure, optimization isn't quite as necessary on modern Core i7 PCs as it was on old Pentium IIs. But phones and tablets are the current area of growth in the computing market, and the Atom in a netbook or tablet is about as fast as a P4 of the same clock frequency. Switching to a catch-up architecture with timestamping will help you multithread your emulator, which will improve efficiency on dual- to quad-core ARM devices. And if you want to run multiple emulators at once, as in an <a href="http://forums.nesdev.com/viewtopic.php?f=3&amp;t=9667" class="postlink">emulator UI inspired by the Wii Menu</a> or a <a href="http://wiki.arcadecontrols.com/wiki/Emulaxian/3D_Arcade" class="postlink">3D view of an arcade full of Vs. or PlayChoice machines</a>, you'll need efficiency there too.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>7</strong> of <strong>10</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>