<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - bsnes-plus and xkas-plus (new debugger and assembler)</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">bsnes-plus and xkas-plus (new debugger and assembler)</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=12&amp;t=12721">http://forums.nesdev.com/viewtopic.php?f=12&amp;t=12721</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>13</strong> of <strong>14</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>byuu</b> [ Fri Jun 22, 2018 11:44 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: bsnes-plus and xkas-plus (new debugger and assembler)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Updated emulation of S-DSP's ENDX state (fixes Magical Drop) [AWJ]</div><br /><br />Sigh, that's not a correct fix. We've already confirmed Magical Drop locks up on real hardware from time to time.<br /><br />Jonas' research into DSP register initialization was incomplete, and attempting a partial fix to run this game will just push the issue off everyone's radar instead of getting it supported properly.<br /><br />Oh well, I guess I've been guilty of this in the past too, like my pre-dot renderer hack for Uniracers.<br /><br />Sorry for yet another bummer post by me. The rest of the changes all look great though, great work!

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Revenant</b> [ Sat Jun 23, 2018 12:14 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: bsnes-plus and xkas-plus (new debugger and assembler)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I became aware of that a little while after the change was originally made upstream (a bit shy of a year ago), but I decided in this case I was willing to err slightly in the user's favor until we actually know what the correct behavior is. Consider it temporary, of course.<br /><br />(hacks are hacks, I know...)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>byuu</b> [ Sat Jun 23, 2018 9:49 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: bsnes-plus and xkas-plus (new debugger and assembler)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Yeah, and I can't really complain anymore with bsnes v107. I've got some game title matching to disable the new faster PPU/DSP cores on an as-needed basis.<br /><br />I was just really hoping we'd get some interest in figuring out this behavior fully. It's a really fun game and deserves proper emulation.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Sat Jun 23, 2018 10:39 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: bsnes-plus and xkas-plus (new debugger and assembler)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Revenant wrote:</div><div class="quotecontent">Added experimental 'snesmusic' plugin for SPC/SNSF file playback [Revenant]<br /></div>Am I supposed to be able to just load a SPC file? If not, how can I play around with this? If so, what am I doing wrong such that it doesn't work?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Revenant</b> [ Sat Jun 23, 2018 12:05 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: bsnes-plus and xkas-plus (new debugger and assembler)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Yeah, loading any spc/snsf/minisnsf file should work as long as snesmusic.dll (or your OS' equivalent) is present:<br /><br /><img src="https://i.imgur.com/htYRz62.png" alt="Image" /><br /><br />Otherwise, it might have a problem with whichever specific file(s)? you're trying to load? I can check it out if you're having issues.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Sat Jun 23, 2018 12:19 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: bsnes-plus and xkas-plus (new debugger and assembler)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Ahh, problems from not installing things. Have to put snesmusic.so in the system-wide library directories, or else run with LD_LIBRARY_PATH=/path/to/directory/containing/so/file <br />Thank you!<br /><br />(Made a stupid shell script to let me continue to not install things.)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Revenant</b> [ Sat Jun 23, 2018 12:42 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: bsnes-plus and xkas-plus (new debugger and assembler)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Cool, glad it works <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /><br />It's definitely a pretty rudimentary player; I originally made it for the completely silly reason of being able to debug some strange SPCs that I dumped from a Super Wild Card DX firmware a while ago. It's a good companion for the (equally rudimentary) sound viewer window though.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>CypherSignal</b> [ Mon Jul 23, 2018 8:05 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: bsnes-plus and xkas-plus (new debugger and assembler)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I'm trying to get started on some from-scratch homebrew work, and was very quickly vexed by the relative unfriendliness of the debugging process when dealing with existing asm code, especially compared to, say, debugging a C++ project in Visual Studio.<br /><br />I've started prodding at some parts of the toolchain so far, mostly just to get source-assembly files mapped to rom memory addresses in the disassembler, and wanted to gauge if there was any interest in this. So far, I've just got a <a href="https://i.imgur.com/SF2C4Gu.png" class="postlink">small proof-of-concept here</a>. (old disassembler is in the top left, and my local version showing source info is in the top right, plus a couple of the source asm files for one of the projects from Neviksti's Snes starter kit provided for reference). This consists of a couple small changes to wla-dx's linker to output the obj list info into the final symbol file (and generate the address-to-line map) and changes to bsnes to acknowledge that sym file and reformat the disassembler accordingly.<br /><br />In terms of long-term goals, I'd like to going beyond in-emulator debugging, though. Ideally, I'd like to get to a point where one can have a VS Code debugger extension that talks to bsnes in a robust capacity. For example, from VS Code, launch bsnes as a debug target, drop a breakpoint in Code in an asm file (which bsnes is able to acknowledge as an exec-breakpoint on the corresponding address), and be able to present some debug information in Code when the emulation is paused. That may be a ways away, but I wanted to sort of read the room to see if adding such functionality to bsnes - or at least this debug-centric fork of bsnes - would be up for consideration.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Oziphantom</b> [ Mon Jul 23, 2018 11:36 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: bsnes-plus and xkas-plus (new debugger and assembler)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />So, this is really poor to debug when I compare it to the best debugger on the market <img src="./images/smilies/icon_wink.gif" alt=";)" title="Wink" /> That is really not a fair comparison. <br /><br />I guess when you have an external linker like WLA-DX you really don't know where stuff is compared to where you write it... that would really suck. <br /><br />Having a fully integrated VSCode module would be awesome. However for a first step ( and yes I know I'm a broken record at this point BUT ) having a remote &quot;monitor&quot; would be a more useful addition. Then we can use the monitor to debug and test the code. Then the VS Code debugger can interface with the monitor keeping it neatly separated.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>CypherSignal</b> [ Tue Jul 24, 2018 6:03 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: bsnes-plus and xkas-plus (new debugger and assembler)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Oziphantom wrote:</div><div class="quotecontent">I guess when you have an external linker like WLA-DX you really don't know where stuff is compared to where you write it... that would really suck. </div><br />That's kind of touching on something I was wondering myself: is there a toolchain I'm not aware of where that isn't the case, or am I missing some part of the process people pursue normally when doing rom dev where this functionality wouldn't be desired right from the get-go? I mean, aside from &quot;most rom development has just been hacking at existing rom files and <a href="http://forums.nesdev.com/viewtopic.php?f=12&amp;t=10957" class="postlink">there really isn't much of a homebrew scene</a>&quot;  <img src="./images/smilies/icon_razz.gif" alt=":P" title="Razz" /> <br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Having a fully integrated VSCode module would be awesome. However for a first step ( and yes I know I'm a broken record at this point BUT ) having a remote &quot;monitor&quot; would be a more useful addition. Then we can use the monitor to debug and test the code. Then the VS Code debugger can interface with the monitor keeping it neatly separated.</div><br />So, based on my understanding of how such a debug extension (and corresponding suite) would exist, that is kind of how it should be architectured, anyway. There would have to be a module added in the emulator that operates on stdin to be able to respond to external actions and stdout to relay information about the emulator's current state, e.g. the c++ debug extension can talk with GDB through stdin/stdout, and afaik the python debug extension talks with <a href="https://docs.python.org/2/library/pdb.html" class="postlink">python's existing pdb module</a> in a similar capacity. The debug extension in Code is then used to be the adapter/interface between Code's host UI and the target in question.<br /><br />I haven't dug into that part of it too much - don't want to put the cart before the horse too much - but the &quot;module in bsnes&quot; would probably turn into &quot;Expand the console in Debugger to include a lot more information, add a field to allow for user input for various commands and interactions, and then pipe each of those through stdout and stdin respectively&quot;.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Oziphantom</b> [ Tue Jul 24, 2018 6:39 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: bsnes-plus and xkas-plus (new debugger and assembler)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Most of the good SNES tools are Win95. Back then we had X816 which doesn't have a linker, Geiger's Debugger ( which has now been superseded ) and a bunch of viewing tools. Before Geiger's we had the ZSNES debugger. <br /><br />Using a linker assembler like WLA-DX will complicate things, I don't use WLA-DX <img src="./images/smilies/icon_wink.gif" alt=";)" title="Wink" /> <br /><br />STDIN/STDOUT I guess works, I'm more use to using sockets and a telnet interface, which is basically the same code wise, just you can <br />a.) attach mid run and not have to set it up at the start<br />b.) can be piped through to another machine/VM - which is handy for when you need to run some Linux VM to get bleeding edge version that fixes some bug in the emulator you need, and its not in the windows build yet <img src="./images/smilies/icon_wink.gif" alt=";)" title="Wink" /><br /><br />Having<br />M<br />D<br />Bank<br />R<br />Break<br />Watch<br />Trace<br />&gt;<br />and I guess something that lets us change if A/Index should be 8/16bit is the bare minimum<br />having A would also be handy, L, S super handy as well <img src="./images/smilies/icon_wink.gif" alt=";)" title="Wink" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>CypherSignal</b> [ Wed Aug 08, 2018 4:13 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: bsnes-plus and xkas-plus (new debugger and assembler)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Been working away at this, and finally got to a proof of doing some light debugging in VS Code, i.e. being able to pause and step from VS Code, display the current PC in a file, and also setting/clearing breakpoints before launching a session or during a session: <a href="https://www.youtube.com/watch?v=hkuMV-1LLmI" class="postlink">https://www.youtube.com/watch?v=hkuMV-1LLmI</a><br /><br />Some parts of it are still rough and needs some cleanup and all that sort of thing, but it's at the point of being functional. As mentioned before, the VS Code interface really is pretty simple once you get things going: it throws down json requests to bsnes via stdin, and bsnes sends json responses and events about the current state of the debugger back through stdout.<br /><br />I've already got an issue/task filed on wla-dx to add the necessary addr-to-line mapping to the WLA symbol file, but haven't yet filed the PR for a few reasons, but I will get that going once I polish a few things up. I'll also take a look at asar to see how easy it'd be to add the same information to its wla-style symbol file output, since that's a popular tool.<br /><br />Once I polish up the bsnes stuff as well, I'll also file a PR (or just a task) to devinacker to add this functionality to bsnes. So far, it's basically taking a bunch of work <a href="https://forums.nesdev.com/viewtopic.php?f=12&amp;t=16625" class="postlink">benny already did around symbol loading/mgmt</a>, adding the functionality to communicate with vscode, adding a git submodule for another json project (though, Qt5 upgrade will deprecate that) and uplifting a handful of other systems accordingly.<br /><br />Also, ofc, got to prep the extension itself to launch the bsnes executable from vscode and publish that somewhere. It's not a whole lot - we don't need a debug adapter because bsnes supports the debug protocol directly - but it's just a little bit.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Oziphantom</b> [ Thu Aug 09, 2018 3:36 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: bsnes-plus and xkas-plus (new debugger and assembler)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Do you have a good source that explains how to make VSCode plugins like this. Everything either just does simple stuff or assumes you are doing some JS stuff and know all this 80 things on how it works...

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>CypherSignal</b> [ Thu Aug 09, 2018 5:17 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: bsnes-plus and xkas-plus (new debugger and assembler)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Yeah, tell me about it... Ironically, despite the frustrations in trying to shake down the various pages and documentation on this, furiously asking &quot;What do you want from me?!?! <img src="./images/smilies/icon_mad.gif" alt=":x" title="Mad" />  <img src="./images/smilies/icon_mad.gif" alt=":x" title="Mad" /> &quot; the answer ended up being rather simple - but obfuscated because of much of the intended utility all of the debug adapter extension shenanigans.<br /><br />So, first off, there is the (newly created) <a href="https://microsoft.github.io/debug-adapter-protocol/" class="postlink">site for outlining the debug protocol</a> that msft put together. It still focuses a lot on &quot;So you want to make a debug adapter extension or something, eh?&quot; and doesn't discuss the raw mechanics. However, those raw mechanics just aren't that much:<br /><br /><ul><li><a href="https://github.com/Microsoft/vscode/blob/db638418440a4f043512e04467a6d1deb3fb925c/src/vs/workbench/parts/debug/node/debugAdapter.ts#L299" class="postlink">VS Code launches a process with pipe to stdin/stdout</a>. </li><li> <a href="https://github.com/Microsoft/vscode/blob/db638418440a4f043512e04467a6d1deb3fb925c/src/vs/workbench/parts/debug/node/debugAdapter.ts#L169" class="postlink">Requests get sent through to stdin as HTTP messages containing a JSON object.</a></li><li> <a href="https://github.com/Microsoft/vscode/blob/db638418440a4f043512e04467a6d1deb3fb925c/src/vs/workbench/parts/debug/node/debugAdapter.ts#L177" class="postlink">Responses and events are sent back out along stdout and interpreted as HTTP messages.</a></li></ul><br />and that's...pretty much it. With some additional notes:<br /><br />For one, in this case, I'm only launching the process because it implements the debug protocol directly - there isn't an adapter that has to reinterpret things to talk to another existing debugger (see: gdb, pdb, etc) or run in a node.js env. This is defined in what is currently a very light extension, that basically only <a href="https://code.visualstudio.com/docs/extensionAPI/extension-points#_contributesdebuggers" class="postlink">Contributes a debugger</a> that defines the path to bsnes to launch, and a couple configuration attributes that will be tacked onto the Launch request (e.g. &quot;program&quot; to define what ROM to load up, or &quot;stopAtEntry&quot; to have the game start in a frozen state) which the bsnes debugger has to acknowledge.<br /><br />Two, the specification for requests, responses, and events, are available <a href="https://microsoft.github.io/debug-adapter-protocol/specification" class="postlink">here</a> (this was also available historically as, at the very least, <a href="https://github.com/Microsoft/vscode/blob/master/src/vs/workbench/parts/debug/common/debugProtocol.d.ts" class="postlink">this TypeScript definition file in the VSCode github repo</a>). As mentioned, those are JSON objects in HTTP messages, so the format of everything will be, with cr/lf visible, along the lines of:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">Content-Length: 331\r\n<br />\r\n<br />{&quot;command&quot;:&quot;initialize&quot;, &quot;arguments&quot;: {&quot;clientID&quot;:&quot;vscode&quot;, &quot;clientName&quot;:&quot;Visual Studio Code&quot;, &quot;adapterID&quot;:&quot;bsnes debug&quot;, &quot;pathFormat&quot;:&quot;path&quot;, &quot;linesStartAt1&quot;:true, &quot;columnsStartAt1&quot;:true, &quot;supportsVariableType&quot;:true, &quot;supportsVariablePaging&quot;:true, &quot;supportsRunInTerminalRequest&quot;:true, &quot;locale&quot;:&quot;en-us&quot;}, &quot;type&quot;:&quot;request&quot;, &quot;seq&quot;:1}</div><br />And the responses back have to be the same way, including the Content-Length header, <em>and including the &quot;\r\n\r\n&quot;</em>, no more, no less (see &quot;responses and events are sent back...&quot; above). I only mention this part because I was tearing my hair out for a couple of hours trying to understand why my initial implementation wasn't working, and it turned out I had stdout in text mode, not binary, so my &quot;\r\n\r\n&quot; was turning into &quot;\r\r\n\r\r\n&quot; which was causing a silent failure.<br /><br />Getting back to the original question, though, <a href="https://github.com/dibyendumajumdar/ravi/tree/master/vscode-debugger" class="postlink">this implementation of a debug protocol written in C to do debugging of lua</a> is what you're probably looking for in terms of raw code that peels these covers back. Of course, you can get a tease of my current implementation of this stuff over <a href="https://github.com/CypherSignal/bsnes-plus/blob/vscode/bsnes/ui-qt/debugger/extern-debug/extern-debug.cpp" class="postlink">here</a>, too. Not yet shippable, and there's some stuff that's going to change as I go, but this is kind of the skeleton of it so far (note that ExternDebugHandler::processRequests is called as part of the Application::run tick, if you're wondering about the re-entry point of it all)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Revenant</b> [ Thu Aug 09, 2018 9:31 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: bsnes-plus and xkas-plus (new debugger and assembler)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Cool stuff <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /><br />Although I'm not (currently) one myself, VSCode users may also be interested in <a href="https://github.com/Optiroc/libSFX/tree/master/extras/VisualStudioCode" class="postlink">Optiroc's syntax definitions</a> for SNES assembly. They're part of libSFX which is based around ca65 instead of WLA, but ideally I'd like to support loading symbols from both, especially since libSFX is already designed with some of bsnes-plus's existing debugging features in mind (namely software breakpoints, etc.) and it'd be great to support even tighter integration between a SNES development framework and other external tools like that.<br /><br />Anyway, while I've mostly been working on Cx4 and Satellaview emulation recently, I don't have a whole lot more to do for those for the time being (until I start setting up some more hardware tests on my actual Satellaview unit, anyway). Pretty soon I'll start to integrate Benny's debug frontend stuff a little bit at a time in order to get feedback/make some potential adjustments as needed. Once that's further along I can start to get this stuff integrated as well.<br /><br />(I also have a more-or-less working Qt5 branch of the existing frontend ready to go, so I might go ahead and merge that into master before I start doing any more big-time GUI updates; what do you think?)

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>13</strong> of <strong>14</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>