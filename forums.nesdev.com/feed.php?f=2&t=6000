<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=2&amp;t=6000" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2010-01-28T16:20:34-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=2&amp;t=6000</id>
<entry>
<author><name><![CDATA[ccovell]]></name></author>
<updated>2010-01-28T16:20:34-07:00</updated>
<published>2010-01-28T16:20:34-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6000&amp;p=55863#p55863</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6000&amp;p=55863#p55863"/>
<title type="html"><![CDATA[16 bit arithmetic in 6502 (and jump logic)!]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6000&amp;p=55863#p55863"><![CDATA[
Even though it's quite old, you can check out my <a href="http://www.disgruntleddesigner.com/chrisc/data/SolarWarsSource.zip" class="postlink">Solar Wars source code and diary</a> -- I went through these things for the first time then (too) -- figuring out how many bytes to use for position/velocity, etc, and how to handle acceleration.<br /><br />You might find it useful.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=355">ccovell</a> — Thu Jan 28, 2010 4:20 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2010-01-28T12:20:51-07:00</updated>
<published>2010-01-28T12:20:51-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6000&amp;p=55839#p55839</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6000&amp;p=55839#p55839"/>
<title type="html"><![CDATA[16 bit arithmetic in 6502 (and jump logic)!]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6000&amp;p=55839#p55839"><![CDATA[
Like it's been said, depending on the dimensions of your levels you need more than 8 bits for the whole part of the coordinates. The only case where 8 bits will be fine is when the whole action happens on a single screen, but even then you wouldn't be able to jump past the top of the screen or something like that, so choose the precision of your coordinates carefully.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Thu Jan 28, 2010 12:20 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Kasumi]]></name></author>
<updated>2010-01-28T08:49:53-07:00</updated>
<published>2010-01-28T08:49:53-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6000&amp;p=55830#p55830</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6000&amp;p=55830#p55830"/>
<title type="html"><![CDATA[16 bit arithmetic in 6502 (and jump logic)!]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6000&amp;p=55830#p55830"><![CDATA[
16 bit addition<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">;initialization<br />  lda #$00<br />  sta byte0;Low Byte<br />  sta byte1;High Byte<br /><br />;Iteration One<br />  clc;Cleared only before the first addition in 16bit addition<br />  lda byte0;a = #$00<br />  adc #$80;a = #$80, carry clear<br />  sta byte0;byte0 = #$80<br /> <br />  lda byte1<br />  adc #$00;I'm adding zero, but if the carry was set, I'd be adding one<br />  sta byte1;byte1 = #$00<br />;Iteration Two<br />  clc;Cleared only before the first addition in 16bit addition<br />  lda byte0;a = #$80<br />  adc #$80;#$80 + #$80 = #$0100 but that won't fit in a byte.<br />  ;So we get #$00, but the carry is set because the result would have been greater than #$FF<br />  sta byte0;byte0 = #$00<br /><br />  lda byte1<br />  adc #$00;adc adds the number you give it plus the carry bit. <br />;It's set because the result of the last addition would have been greater than #$FF. So I'm adding #$00 plus 1 thanks to the set carry.<br />  sta byte1;byte1 = #$01<br />;End Result<br />;256 * High Byte &#40;byte1 in this case&#41; + Low Byte &#40;byte0&#41; gives you your 16bit result.<br /><br />;byte0 = #$00<br />;byte1 = #$01<br /><br />;256 * 1 + 0 = 256. <br /><br />;Or... like it's explained in the comments #$&#40;High Byte&#41;&#40;Low Byte&#41;<br /><br />;#$0100 = 256.<br /></div><br /><br />One last note, is you need not always add #$00 in 16bit addition, it's just easiest to show how the carry flag works that way (since one might assume adding zero would not change the accumulator). By first adding #$80 to the low byte, then adding #$00 to the high byte I really added #$0080 to the 16bit number stored. But I could just as easily add #$FE40, by first adding #$40 to the low byte, then adding #$FE to the high byte.<br /><br />Hmm... on to your jumping question. 16bit addition can help you, but as Bregalad stated, a whole byte is a lot to dedicate to the fractional part of a pixel. Either way, for a jump you,<br /><br />1. Set y velocity when the jump is triggered.<br />;Then loop the following each frame<br />2. Add 1 (or more depending on your gravity) to the velocity value.<br />3. Add y velocity to position<br /><br />If you did use a whole byte for fractions of a pixel, you'd use the high byte to display where the sprite is on screen (the whole pixel) and the low byte would keep fractions of a pixel. Though for scrolling you'd of course need an additional byte.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3504">Kasumi</a> — Thu Jan 28, 2010 8:49 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2010-01-28T08:36:03-07:00</updated>
<published>2010-01-28T08:36:03-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6000&amp;p=55827#p55827</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6000&amp;p=55827#p55827"/>
<title type="html"><![CDATA[16 bit arithmetic in 6502 (and jump logic)!]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6000&amp;p=55827#p55827"><![CDATA[
<div class="quotetitle">Bregalad wrote:</div><div class="quotecontent"><br />Your guess is right - but I rather like to have upper 8 bits indicate metatile position<br /></div><br />Of course it breaks down with maps wider than 256 metatiles, as seen in many sidescrollers. For instance, Super Mario World maps are 512 by 32 MT.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Thu Jan 28, 2010 8:36 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2010-01-28T08:10:16-07:00</updated>
<published>2010-01-28T08:10:16-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6000&amp;p=55825#p55825</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6000&amp;p=55825#p55825"/>
<title type="html"><![CDATA[16 bit arithmetic in 6502 (and jump logic)!]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6000&amp;p=55825#p55825"><![CDATA[
Your guess is right - but I rather like to have upper 8 bits indicate metatile position (so the lower 8 bits are 4 bits for pixels and 4 bit for fraction of pixels).<br />That way you can make map large up to 256*256 meta-tiles, and 16th of pixels is LARGELY fine enough for whathever you'd want to.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Thu Jan 28, 2010 8:10 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[thefox]]></name></author>
<updated>2010-01-28T07:01:10-07:00</updated>
<published>2010-01-28T07:01:10-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6000&amp;p=55817#p55817</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6000&amp;p=55817#p55817"/>
<title type="html"><![CDATA[16 bit arithmetic in 6502 (and jump logic)!]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6000&amp;p=55817#p55817"><![CDATA[
Yes, you have two bytes (you can use more of course but 16 bits should be enough for most cases), the bytes don't have to be consecutive. Then simply perform 16 bit addition and subtraction on those numbers, you can see how to do it here: <!-- m --><a class="postlink" href="http://www.obelisk.demon.co.uk/6502/algorithms.html">http://www.obelisk.demon.co.uk/6502/algorithms.html</a><!-- m --><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=80">thefox</a> — Thu Jan 28, 2010 7:01 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Nadia]]></name></author>
<updated>2010-01-28T04:59:11-07:00</updated>
<published>2010-01-28T04:59:11-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6000&amp;p=55816#p55816</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6000&amp;p=55816#p55816"/>
<title type="html"><![CDATA[16 bit arithmetic in 6502 (and jump logic)!]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6000&amp;p=55816#p55816"><![CDATA[
In a few topics I have seen the use of 16 bit numbers(i.e. coordinates) for smooth moving/jumping of the sprite. <br /><br />All the arithmatic in 6502 is 8 bit. How a 16 bit calculation can be done?<br /><br />For example in case of a vertical jump of the character: My first guess is that we have 2 consecutive bytes, one for keeping the integer part and one for keeping the fractional part of the Y coordinate and the arithmatic is performed separately on each of these parts.<br /><br />Any suggestions about "jumping of sprite character" will be appreciated.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4104">Nadia</a> — Thu Jan 28, 2010 4:59 am</p><hr />
]]></content>
</entry>
</feed>