<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=2&amp;t=11186" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2014-04-28T13:11:09-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=2&amp;t=11186</id>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2014-04-28T13:11:09-07:00</updated>
<published>2014-04-28T13:11:09-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11186&amp;p=128176#p128176</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11186&amp;p=128176#p128176"/>
<title type="html"><![CDATA[Re: ados, an OS for NES]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11186&amp;p=128176#p128176"><![CDATA[
<div class="quotetitle">Bregalad wrote:</div><div class="quotecontent"><br />What is an OS for the NES of any use ? There's no need to recover from errors, and no need to abstract hardware details as a game engine revolves around them basically.<br /></div><br />There needs to be a way for games to abstract saved data. If anything, an operating system will incorporate a file system. On the NES, a file system would have to be tuned for NOR flash: any byte whose value is $FF can be rewritten, but a whole 4096 byte sector has to be erased back to $FF at once, and repeatedly erasing one sector will cause it to fail faster. This is commonly handled with a log-structured file system that treats the files as being in a circular buffer. New revisions of a file are appended to the head, and once the buffer is nearly full, any file whose newest revision is in the tail sector gets copied to the head sector so that the tail sector can be erased.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Mon Apr 28, 2014 1:11 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[lidnariq]]></name></author>
<updated>2014-04-28T11:50:46-07:00</updated>
<published>2014-04-28T11:50:46-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11186&amp;p=128172#p128172</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11186&amp;p=128172#p128172"/>
<title type="html"><![CDATA[Re: ados, an OS for NES]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11186&amp;p=128172#p128172"><![CDATA[
The BIOS provided a simple ABI for disk (13h), video (10h), keyboard (16h), BASIC (18h), RTC (1Ah), serial (14h), and parallel (17h) ports. DOS added some abstractions, including filesystem, memory management, and some other generic I/O (mostly 21h). Sometimes third-party software extended it with things like mouse (33h) or network drivers, or programs like DESQview which provided some degree of fault tolerance and preemptive multitasking.<br /><br />The balance between &quot;when do things belong in your libc&quot; or &quot;when do things belong in your OS&quot; has some wiggle room.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3512">lidnariq</a> — Mon Apr 28, 2014 11:50 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Movax12]]></name></author>
<updated>2014-04-28T10:04:12-07:00</updated>
<published>2014-04-28T10:04:12-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11186&amp;p=128169#p128169</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11186&amp;p=128169#p128169"/>
<title type="html"><![CDATA[Re: ados, an OS for NES]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11186&amp;p=128169#p128169"><![CDATA[
<div class="quotetitle">Bregalad wrote:</div><div class="quotecontent"><br />the computer simply crashed, you'd have to reboot it to return it to normal. With DOS this normally wouldn't be the case any longer.<br /></div><br /><br />Are you saying DOS would handle a crashing program? I would have to disagree. Real mode DOS let the applications have full control of the system. You often would have to hit CTRL-ALT-DEL after the system froze. It is possible that a program could detect an error and print a message and exit properly, but that is just as possible on something like the C64.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4680">Movax12</a> — Mon Apr 28, 2014 10:04 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[FARID]]></name></author>
<updated>2014-04-28T09:39:22-07:00</updated>
<published>2014-04-28T09:39:22-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11186&amp;p=128167#p128167</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11186&amp;p=128167#p128167"/>
<title type="html"><![CDATA[Re: ados, an OS for NES]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11186&amp;p=128167#p128167"><![CDATA[
<div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />What is an OS for the NES of any use ? There's no need to recover from errors, and no need to abstract hardware details as a game engine revolves around them basically. So in a normal NES game, the game engine &quot;replaces&quot; the OS<br /></div><br /><br />How about this :<br />With a proper OS maybe it is possible to connect a keyboard to the NES and start coding the game on the console and then run the code directly on the real hardware!  <img src="http://forums.nesdev.com/images/smilies/icon_rolleyes.gif" alt=":roll:" title="Rolling Eyes" /><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4330">FARID</a> — Mon Apr 28, 2014 9:39 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2014-04-28T06:37:52-07:00</updated>
<published>2014-04-28T06:37:52-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11186&amp;p=128163#p128163</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11186&amp;p=128163#p128163"/>
<title type="html"><![CDATA[Re: ados, an OS for NES]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11186&amp;p=128163#p128163"><![CDATA[
Well, modern OS sure looks like selection menus, but in fact they of course do a lot more work in the background.<br /><br />If you remember the &quot;good old days&quot; when you had only DOS, there was no selection menu, just a command line, yet there still was an OS (even if it was doing much less than what a modern OS does).<br /><br />One of the main uses of an OS is to allow for multiple programs to run at the same time  : For instance, you can open Firefox and Notepad++ at the same time (and in addition your OS will display what those programs does in the screen, in addition of displaying a task bar, etc...) and all these programs of them will &quot;run&quot; without seeing eachother, something not possible on a system without an OS).<br /><br />However in some embedded applications and in the good old DOS there was only a command line and a single program running (non multitasking OS) which makes me not understand why the OS is useful in the 1st place. Of course I know it is useful but I don't know why, so I can only speculate.<br /><br />My guess is that it can abstract hardware details (so you don't have to code your application for all motherboards in the world, all graphics card in the world, etc...), and it can help to recover errors (like a segfault). On the Commodore 64 (which is debatable whenever it has an OS or not), if you would do an error you'd see weird colours on the screen and the computer simply crashed, you'd have to reboot it to return it to normal. With DOS this normally wouldn't be the case any longer.<br /><br />Which leads me to the following question : What is an OS for the NES of any use ? There's no need to recover from errors, and no need to abstract hardware details as a game engine revolves around them basically. So in a normal NES game, the game engine &quot;replaces&quot; the OS.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Mon Apr 28, 2014 6:37 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[FARID]]></name></author>
<updated>2014-04-27T20:37:06-07:00</updated>
<published>2014-04-27T20:37:06-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11186&amp;p=128156#p128156</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11186&amp;p=128156#p128156"/>
<title type="html"><![CDATA[Re: ados, an OS for NES]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11186&amp;p=128156#p128156"><![CDATA[
@ Bregalad<br /><br />How about surfing the web? reading a PDF file? making a Text file? Viewing JPG files? .... <br />I feel that OS is just a selection menu! So my multicartridges have OS!<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4330">FARID</a> — Sun Apr 27, 2014 8:37 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2014-04-27T10:16:18-07:00</updated>
<published>2014-04-27T10:16:18-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11186&amp;p=128142#p128142</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11186&amp;p=128142#p128142"/>
<title type="html"><![CDATA[Re: ados, an OS for NES]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11186&amp;p=128142#p128142"><![CDATA[
Are Cisco routers and the I/O processor on a Wii game console &quot;embedded&quot;? They both run IOS (not to be confused with Apple's).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Sun Apr 27, 2014 10:16 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2014-04-27T09:29:59-07:00</updated>
<published>2014-04-27T09:29:59-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11186&amp;p=128139#p128139</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11186&amp;p=128139#p128139"/>
<title type="html"><![CDATA[Re: ados, an OS for NES]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11186&amp;p=128139#p128139"><![CDATA[
Am I the only one wondering what use is this for ?<br /><br />What is, exactly, an OS in the first place ?<br /><br />My impression is that it's a program that can run one or multiple programs, that interacts with system calls and that can handles crashes or errors in programs (as opposed to run them natively). I might be wrong though, as I am really not knowledgeable about this. I've never seen the interest of an OS in embedded applications, when you can program things straight away.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Sun Apr 27, 2014 9:29 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[erana]]></name></author>
<updated>2014-04-25T23:38:01-07:00</updated>
<published>2014-04-25T23:38:01-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11186&amp;p=128106#p128106</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11186&amp;p=128106#p128106"/>
<title type="html"><![CDATA[Re: ados, an OS for NES]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11186&amp;p=128106#p128106"><![CDATA[
<div class="quotetitle">lidnariq wrote:</div><div class="quotecontent"><br />I feel obliged to point out that an easier way to get a file containing 8000 zeroes on *n*x is <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">dd if=/dev/zero bs=8000 count=1 of=target.nes</tt><br /></div><br /><br />You can use this which is better, there's even a dd command in cygwin.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4707">erana</a> — Fri Apr 25, 2014 11:38 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[mikejmoffitt]]></name></author>
<updated>2014-04-25T11:44:54-07:00</updated>
<published>2014-04-25T11:44:54-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11186&amp;p=128082#p128082</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11186&amp;p=128082#p128082"/>
<title type="html"><![CDATA[Re: ados, an OS for NES]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11186&amp;p=128082#p128082"><![CDATA[
I think you would benefit from building some bootable demo rom of the OS if only because source distributions are not a great way to distribute NES software. This is mostly as a result of different ways of building NES games that don't really conform to much of a standard (assembler differences, etc). For the same reason a lot of projects tend to just include the assembler and build script with the project, even though it's not great practice.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5314">mikejmoffitt</a> — Fri Apr 25, 2014 11:44 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[lidnariq]]></name></author>
<updated>2014-04-25T11:08:16-07:00</updated>
<published>2014-04-25T11:08:16-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11186&amp;p=128078#p128078</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11186&amp;p=128078#p128078"/>
<title type="html"><![CDATA[Re: ados, an OS for NES]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11186&amp;p=128078#p128078"><![CDATA[
I feel obliged to point out that an easier way to get a file containing 8000 zeroes on *n*x is <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">dd if=/dev/zero bs=8000 count=1 of=target.nes</tt><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3512">lidnariq</a> — Fri Apr 25, 2014 11:08 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[erana]]></name></author>
<updated>2014-04-25T03:42:05-07:00</updated>
<published>2014-04-25T03:42:05-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11186&amp;p=128073#p128073</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11186&amp;p=128073#p128073"/>
<title type="html"><![CDATA[Re: ados, an OS for NES]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11186&amp;p=128073#p128073"><![CDATA[
You have to build it as it is unusable except for coding extra functionality. The compiler is at <!-- m --><a class="postlink" href="http://www.cc65.org">http://www.cc65.org</a><!-- m --><br /><br />FYI, another way (if you exclude bootnes.s out of the Makefilei, older ados-nes versions do not include it) to generate a valid emulator ROM file:<br />If you're on UNIX, Linux or Cygwin on Windows and want a ROM.nes file :<br /><br />save this perl script to gen.nes.pl :<br /><br />#!/usr/bin/perl<br />use IO::File;<br /><br />if ($ARGV &lt; 1) {<br />        print &quot;Usage : gen.nes.pl &lt;filename&gt;&quot;;<br />}<br /><br />open(FH, $ARGV[0] + &quot;.nes&quot;);<br />for (my $i = 0; $i &lt; 8000; $i++)<br />{<br />        print FH &quot;\0&quot;;<br />}<br />close(FH);<br /><br />print &quot;Written 8000 zeroes header file, please cat (&quot; . $ARGV[0] . &quot;.nes)&quot;;<br /><br />1;<br />EOF<br /><br />Then do 'chmod +x gen.nes.pl', then run 'perl gen.nes.pl os.nes' then run 'cat kernel.bin &gt;&gt; os.nes'<br />(this includes the ROM offset on bus address 0x8000 so your emulator loads from that address, in this case for a rom file it is just a file address, emulators provide more that that you know <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":-)" title="Smile" /><br />Load 'os.nes' in your emulator to test.<br /><br />erana<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4707">erana</a> — Fri Apr 25, 2014 3:42 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[thefox]]></name></author>
<updated>2014-04-25T02:59:25-07:00</updated>
<published>2014-04-25T02:59:25-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11186&amp;p=128072#p128072</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11186&amp;p=128072#p128072"/>
<title type="html"><![CDATA[Re: ados, an OS for NES]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11186&amp;p=128072#p128072"><![CDATA[
<div class="quotetitle">erana wrote:</div><div class="quotecontent"><br />To answer you questions about a valid .nes file<br /></div><br />I think the point was that most people just want to try the ROM, not build it themselves. So you'd make yourself and others a favor if you included the ROM somewhere, or linked to it.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=80">thefox</a> — Fri Apr 25, 2014 2:59 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[erana]]></name></author>
<updated>2014-04-25T00:12:35-07:00</updated>
<published>2014-04-25T00:12:35-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11186&amp;p=128068#p128068</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11186&amp;p=128068#p128068"/>
<title type="html"><![CDATA[Re: ados, an OS for NES]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11186&amp;p=128068#p128068"><![CDATA[
To answer you questions about a valid .nes file :<br /><br />You have to link the binary object files with ld65 for that, while I only use cl65 :<br /><br />'ld65 -t nes -o kernel.nes *.s' should work.<br /><br />Note that I didn't provide a main function. You can start the kernel with a main function but it isn't necessary. The above command also works for a binary with main function.<br /><br />The explanation of this is a valid .nes file with the right offsets to load on e.g. a NES emulator.<br /><br />This should answer you question. <br /><br />About neslisp, I am still working on it. You can even load that program in ados-nes and make a lisp machine for the nes. The problem at this time of writing however is memory area overflows because of bad code without the C keyword const. If you fix this in neslisp it should work.<br /><br />Further on I want to provide some small Smalltalk kernel inside ados-nes. FYI.<br /><br />Have fun!<br />erana<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4707">erana</a> — Fri Apr 25, 2014 12:12 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[FARID]]></name></author>
<updated>2014-04-24T11:33:39-07:00</updated>
<published>2014-04-24T11:33:39-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11186&amp;p=128050#p128050</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11186&amp;p=128050#p128050"/>
<title type="html"><![CDATA[Re: ados, an OS for NES]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11186&amp;p=128050#p128050"><![CDATA[
where can I find the nes file?<br />I always wanted to run an OS on my Famicom!<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4330">FARID</a> — Thu Apr 24, 2014 11:33 am</p><hr />
]]></content>
</entry>
</feed>