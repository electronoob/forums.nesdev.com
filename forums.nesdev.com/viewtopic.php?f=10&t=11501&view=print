<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Random questions (mostly APU)</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Random questions (mostly APU)</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=10&amp;t=11501">http://forums.nesdev.com/viewtopic.php?f=10&amp;t=11501</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>3</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>za909</b> [ Tue Aug 05, 2014 7:52 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Random questions (mostly APU)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Hey! It's been a while since I last posted anything, mainly because I never had time to even attempt working on anything, but then I realised that these things take a while anyway to make.<br /><br />I don't exactly know what I'm after, maybe all I'm gonna do is just a simple sound engine, maybe more, but I have a couple questions before I go deeper (the only things I've made so far were simple DPCM playback and a ROM that plays a pitch sweeping noise sound, so at least I understand how game logic and NMI have to cooperate)<br />So what I want to make for now is a simple sound driver, if possible I'm trying to go for just a 32k NROM program, and if the size of the individual programs gets too large (assuming that I'm going for a full game), switch to 128k UNROM (preferably without CHR-RAM).<br /><br />I've spent a lot of time drawing and sketching my engine on paper, and I know how everything is supposed to work out (bitflags, manipulation of shadow registers, etc. )<br />but still, there are a couple of features I'm not sure how to implement (or if it's possible to implement them at all)<br />So no code here yet folks, just my ideas of how I want to do these things.<br />What I want to know ultimately, is whether this is a good way of thinking when it comes to programming or not<br /><br />1. I'm planning to implement vibrato using the sweep units (so no triangle vibrato) and I'm not sure if this is possible. I want it this way though, so that I can get away with less code, and all I have to do is alternating between upward and downward pitchbends with a fixed timer (half period down, full up then half down to complete the triangle shape) , which activates when half the note duration is reached, if vibrato &quot;mode&quot; is enable with an effect.<br /><br />2. Effects to apply to notes are all contained in a single byte, which is changed by an effect<br />msb| TDV- IIII |lsb <br />T - Tone drum mode (pulse only): if set, discard note and play a pre-defined drum sound with the sweep unit and envelope<br />D - Detune mode: if set, add one to the low period-shadow register after fetching it if a new note byte is read<br />V - Vibrato mode (pulse only): if set, apply vibrato at a pre-defined rate with the sweep units at half note duration.<br />I - Select instrument (pulse only): Selects intrument for the pulse channels. All instruments are 8 bytes, successively written to $4000/$4004 and at entry $03, waits for note off (so the last 4 entries are the &quot;release&quot; phase)<br /><br />3. Should all possible note pitches be accessible directly with a single byte, and duration be set independently (which would allow more flexibility with song speed and such) or the 4 high bits meaning a duration in frames in lookup table, and the low 4 meaning notes (and octaves are set by an effect)? Which one is more efficient?<br /><br />4. What size should I expect? What always gets me and takes my motivation is thinking about possibly ending up with a program way to large or way too CPU-extensive. Or should I just not worry about that at all?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Tue Aug 05, 2014 8:01 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Random questions (mostly APU)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />A simple sound driver and its data will certainly fit in 32 kilobytes, more likely 16 if you don't use any DPCM. Look at the size of a well-optimized NSF for instance. And even then, dealing with CHR RAM isn't that hard; you just need to copy an 8192 byte chunk from one of the banks of PRG ROM to PPU $0000.<br /><br />Are you planning to use the NES as an instrument, where the music driver has most of the RAM and CPU time available for itself? Or are you planning a music engine to be used by a game?<br /><br />As for pitch, my music engine's phrase data format uses a range of 0-24 semitones above the phrase's base pitch. Semitone 25 means &quot;tie&quot;, or hold the previous note and don't start a new note. Semitone 26 means &quot;rest&quot;, or cut the current note. Semitones 27-31 have special meanings related to effects such as arpeggio, shifting the phrase's base pitch, and the like. This leaves three bits for duration, selected among 1, 2, 3, 4, 6, 8, 12, or 16 rows, where in-between durations are made with ties. A phrase's initial base pitch is specified in units of a semitone in the &quot;conductor track&quot; that tells when to play each phrase, not in the phrase itself, so that the phrase can be transposed up or down at various parts of a song.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">76543210&nbsp; Phrase bytecodes $00-$C7<br />||||||||<br />|||||+++- Duration index<br />+++++---- Pitch (0-24: semitone offset from base pitch,<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 25: continue note, 26: stop note)<br /></div><br /><br />Vibrato using the sweep units may drift from the intended center pitch when the APU's updates doesn't line up with the music engine's updates. In <em>Tetris</em> for NES, for example, I can change the line clear sound by rotating the falling piece at just the right moment.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>za909</b> [ Tue Aug 05, 2014 12:11 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Random questions (mostly APU)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I would use it in a game if anything (I want to get better at programming by doing something with the part of the NES I'm the most familiar with) and sound effects would only be played with the Pulse 2 and Noise channels. The SFX data format is simply 16 note bytes (raw period for noise straight away), and then 16 raw data bytes for $4004 and $400C. Sweep is disabled for sfx. Or maybe I could go for having vibrato only on Pulse 1 and on Pulse 2 I only use it for sfx, I'll see how it goes.<br /><br />And so, whenever I play sfx, I interrupt music playback by letting all the updates for the channel run, except that I never write the shadow registers to the real ones while an sfx is active, right? Not that I'd have to be overly concerned with this in the case of noise sounds. I want to use the envelope generator for the drums, so I can't recover the current volume and continue the envelope anyway.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Tue Aug 05, 2014 12:56 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Random questions (mostly APU)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />My music engine uses software envelopes for everything, with the attack phase and start of the decay specified frame-by-frame and the rest as a linear decrease in volume specified as a starting level of x and a decrease rate in units per 16 frames.<br /><br />For each channel, it interprets the phrase bytecode if needed, runs the envelope code, and writes the pitch and duty/volume values to locations in low zero page. Then it reads from the current sound effect on that channel, and if the sound effect is louder, it uses the duty/volume and pitch from the sound effect instead. A sound effect interrupts an existing effect only if it is longer than the existing effect's data. Square wave sound effects get played on channel 1 or 2, whichever has less remaining data.<br /><br />Drums are actually sound effects in my engine. For example, a kick drum has two components: noise at high pitch ($3) for one frame followed by a few frames of noise at the lowest pitch ($F), plus a few frames of triangle at descending pitches. This allows the triangle part of the drum to interrupt the bass line in a reasonable way. Hi-hats alternate between the long-period (hiss) and short-period (tonal) modes of the noise channel, which to me sounds slightly more realistic especially for open hats.<br /><br />You can listen to an <a href="http://forums.nesdev.com/viewtopic.php?p=103761#p103761" class="postlink">NSF of my engine</a>, and the source code for the latest version is part of <a href="http://forums.nesdev.com/viewtopic.php?p=121275#p121275" class="postlink">RHDE</a>.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Tue Aug 05, 2014 1:22 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Random questions (mostly APU)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">za909 wrote:</div><div class="quotecontent">4. What size should I expect? What always gets me and takes my motivation is thinking about possibly ending up with a program way to large or way too CPU-extensive. Or should I just not worry about that at all?</div><br />I wrote a music engine that is about 1.6k of code, and it supports a subset of Famitracker features, so I can use Famitracker to make tunes and SFX for it. It runs in about 1700 cycles, typically, peaking at around 2400. I haven't done any significant optimization of it, so it could probably be a little smaller or a little faster if I needed either of those things. I have fit my whole game soundtrack and SFX and music driver into a single 32k bank (I am using BNROM), which seemed like a pretty reasonable size target.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>za909</b> [ Wed Aug 06, 2014 10:32 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Random questions (mostly APU)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Alright, I've finally started working on this, and at least I think I'll get this. It's not like you people figure out everything the first time in a matter of seconds, right? (Because I feel like an alien here, my brain is wired for art stuff and not exactly &quot;science&quot; stuff like this, but that doesn't make me give up without trying you know)<br />You know, I just want to know if I'm on the right track or should find another hobby.<br /><br />So this is what I have for now, initiating playback of a new song. I load the song header address to temporary zero page ram and then the pointers for the 4 channels. I hope I'll be able to do this with the planned virtual registers and counters in 32 zero page bytes and 32 regular RAM bytes. (Maybe that's too much as it is, but I have nothing to compare to)<br />It does what it's supposed to in a test file, and then crashes with stack overflow, because it just kind of ends for now.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">.org $8200<br /><br />SoundBegin:<br />; First of all, check if the sound engine is<br />; enabled at all<br />&nbsp; &nbsp;<br />&nbsp; &nbsp;lda prog_flag1<br />&nbsp; &nbsp;and #%10000000<br />&nbsp; &nbsp;bpl EndSound<br />&nbsp; &nbsp;jmp PlayBack<br /><br />EndSound:<br />&nbsp; &nbsp;rts<br /><br />PlayBack:<br />; First, check if the song to be played is a new<br />; one, or the same as in the last frame&nbsp; &nbsp;<br /><br />&nbsp; &nbsp;lda cur_song &nbsp; &nbsp;; Other stuff requests a song here<br />&nbsp; &nbsp;cmp prev_song<br />&nbsp; &nbsp;sta prev_song<br />&nbsp; &nbsp;bne InitSongl_00<br />&nbsp; &nbsp;jmp ProcessFrame<br /><br />InitSongl_00:<br />; Fetch the start address for all 4 channels<br /><br />&nbsp; &nbsp;ldy #$00<br /><br />InitSongl_01:<br />&nbsp; &nbsp;ldx cur_song<br />&nbsp; &nbsp;lda songTBL,x<br />&nbsp; &nbsp;sta temp_1<br />&nbsp; &nbsp;inx<br />&nbsp; &nbsp;lda songTBL,x<br />&nbsp; &nbsp;sta temp_0<br /><br />InitSongl_02:&nbsp; &nbsp;<br />; CH addresses will have to be copied to temp. memory for<br />; use with indirect read!<br /><br />&nbsp; &nbsp;lda (temp_0),y<br />&nbsp; &nbsp;sta p1_addrhi,y<br />&nbsp; &nbsp;cpy #$07<br />&nbsp; &nbsp;beq InitSongl_03<br />&nbsp; &nbsp;iny <br />&nbsp; &nbsp;jmp InitSongl_02<br /><br />InitSongl_03:<br />; Clear sound memory<br /><br />&nbsp; &nbsp;lda #$00<br />&nbsp; &nbsp;ldx #$00<br /><br />InitSongl_04:<br /><br />&nbsp; &nbsp;sta p1_shvol,x<br />&nbsp; &nbsp;cpx #$15<br />&nbsp; &nbsp;beq InitSongl_05<br />&nbsp; &nbsp;inx<br />&nbsp; &nbsp;jmp InitSongl_04<br />&nbsp; &nbsp;<br />InitSongl_05:<br />; Clear on page 3<br />&nbsp; &nbsp;<br />&nbsp; &nbsp;ldx #$00<br /><br />InitSongl_06:<br /><br />&nbsp; &nbsp;sta p1_timerload,x<br />&nbsp; &nbsp;cpx #$08<br />&nbsp; &nbsp;beq ProcessFrame<br />&nbsp; &nbsp;inx<br />&nbsp; &nbsp;jmp InitSongl_06<br />&nbsp; &nbsp;<br />songTBL:<br />; The data doesn't make any sense for now<br /><br />&nbsp; &nbsp;.dw $9000,$9000,$9000,$9000,$9000,$9000,$9000,$9000<br />&nbsp; &nbsp;.dw $9000,$9000,$9000,$9000,$9000,$9000,$9000,$9000<br /><br />ProcessFrame:<br />&nbsp; &nbsp;nop</div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>za909</b> [ Tue Aug 12, 2014 1:00 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Random questions (mostly APU)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I have a few pretty easy questions here, since it could save a couple bytes during certain conditional jumps, and additions if it works. So for example if I lda #$00, the zero flag is set. But what happens if I load a non-zero value? Is the zero flag cleared or unaffected?<br /><br />Does the state of the carry flag actually affect the result in the accumulator druing additions and subtractions? As in, does it change any of its 8 bits? So can I get rid of clc in this piece of code?<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">EffEnd:<br />; Increment ch address and return<br />; If wrap around occurs, increment hi address&nbsp; &nbsp;<br />&nbsp; &nbsp;<br />&nbsp; &nbsp;clc<br />&nbsp; &nbsp;adc p1_addrlo,x<br />&nbsp; &nbsp;sta p1_addrlo,x<br />&nbsp; &nbsp;bcs EffEndl_00<br />&nbsp; &nbsp;rts<br /><br />&nbsp;EffEndl_00:<br />&nbsp; &nbsp;<br />&nbsp; &nbsp;inc p1_addrhi,x<br />&nbsp; &nbsp;rts<br /></div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Tue Aug 12, 2014 1:12 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Random questions (mostly APU)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Yes. The <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">adc</tt> instruction computes (A + value from memory + value from carry). Bits 7-0 of the result go to A, and bit 8 goes to carry. So if the carry is set when the <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">adc</tt> instruction is executed, the CPU adds 1 to the result. The <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">clc</tt> prevents the CPU from adding 1 by ensuring that the contribution of the value from carry to the sum is 0. If you can find some other way of proving that carry is 0 before it hits that line of code, you can drop the <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">clc</tt>.<br /><br />The carry does not affect the <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">inc</tt> and <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">dec</tt> instructions (including <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">inx</tt>, <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">iny</tt>, <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">dex</tt>, and <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">dey</tt>), nor do they affect the carry.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>za909</b> [ Wed Aug 13, 2014 2:37 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Random questions (mostly APU)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Thanks, so really in this case it acts as if the accumulator was a sort of &quot;9-bit&quot; register. My first question did not get answered though, I guess you just forgot about it or didn't notice it.<br /><br />No big deal because while I'm at it I feel the need to get the rest out of the way (it might be worth just contacting some of you privately instead of polluting the forum with my shit in the long run)<br /><br />1. BRK. Why do I see no use for this (yet)? It's all dependent on software, so the only way I can make use of it, is by endlessly looping and waiting for NMI to do something. But even then, I can just jsr or jmp. Is this just some feature that's not very useful for the NES, but instead in other 6502 based machines? OR am I missing the point entirely?<br /><br />2. ASL &amp; LSR vs. ROL &amp; ROR. How are they any different from eachother? The seem to be doing the same things, have the same addressing modes available and even affect the status flags in the exact same way. <br /><br />3. This one is not very important because I'm not going to use unofficial opcodes, but are there any that affect the unused status flag?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>43110</b> [ Wed Aug 13, 2014 3:06 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Random questions (mostly APU)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />1. Being shared with the IRQ vector, NMI/IRQ hijacking, and the stack juggling necessary to read the byte after the opcode like in other 6502 based machines, does makes it less useful.<br /><br />2. <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">ROL</tt> and <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">ROR</tt> inputs the carry bit, where <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">ASL</tt> and <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">LSR</tt> inputs a constant 0 bit.<br /><br />3. No. and as far as I know the unofficial opcodes that use the ALU are not affected by the D flag.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Wed Aug 13, 2014 3:15 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Random questions (mostly APU)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">43110 wrote:</div><div class="quotecontent">3. No. and as far as I know the unofficial opcodes that use the ALU are not affected by the D flag.</div><br />I don't know what he meant by the &quot;unused&quot; flag, but bits 4 and 5 don't even physically exist in the CPU, so they can't be affected by anything. The decimal flag (bit 3) is also completely disconnected in 2A03, so it doesn't affect anything, be it official or unofficial instructions, even though the flag exists.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Movax12</b> [ Wed Aug 13, 2014 4:15 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Random questions (mostly APU)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />You can still set the D flag with CLD / SED but there is not much point. You could use it for a boolean, but it's probably more trouble than it is worth to read it. Maybe:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp; php<br />&nbsp; &nbsp; pla<br />&nbsp; &nbsp; and #$08<br />&nbsp; &nbsp; ; is D set?<br />&nbsp; &nbsp; bne there<br />&nbsp; &nbsp; ; is it clear?<br />&nbsp; &nbsp; beq here<br /></div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>za909</b> [ Fri Aug 15, 2014 2:48 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Random questions (mostly APU)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Thank you for your answers, I'd really like to keep this going because programming is such a good remedy for stress for me. (Does anyone else feel that way too?)<br />So really there's not much point in trying to use the D flag. (If you're really that craving for every single bit of memory you can get you're probably not doing a very good job?)<br /><br />And again, I've run into something fairly specific. I want to test if a value is higher than another fixed value, so I use subtraction and if the result is below zero, I do a certain action. Though I don't know which status flag to check.<br />The 6502 reference I'm using tells me this about sbc: <br />Carry Flag 	Clear if overflow in bit 7<br />...<br />Negative Flag 	Set if bit 7 set<br /><br />So do I check N, or C to know what the result is? In my code (to avoid having to include a bunch of $00 bytes in the high period table) I use sec before the subtraction, so C should be cleared after the instruction if the result is negative, and if I subtract a value too large, I can't rely on N getting set.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">; If the note is high, automatically load 0 for hi period&nbsp; &nbsp;<br />&nbsp; &nbsp;<br />&nbsp; &nbsp;lda temp_3<br />&nbsp; &nbsp;sec<br />&nbsp; &nbsp;sbc #$25<br />&nbsp; &nbsp;bcc LoadPeriodl_00 ; Manually find the correct hi period<br />&nbsp; &nbsp;lda #$00<br />&nbsp; &nbsp;sta p1_shhi,x<br />&nbsp; &nbsp;rts</div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Fri Aug 15, 2014 6:05 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Random questions (mostly APU)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I recommend reading these:<br /><a href="http://6502.org/tutorials/compare_instructions.html" class="postlink">http://6502.org/tutorials/compare_instructions.html</a><br /><a href="http://6502.org/tutorials/compare_beyond.html" class="postlink">http://6502.org/tutorials/compare_beyond.html</a><br /><br />For unsigned comparisons you want to check C and/or Z. CMP is equivalent to SEC SBC, but it doesn't change the value in A.<br /><br />For signed comparisons you need to do a little more work, see the second article.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>za909</b> [ Mon Aug 18, 2014 11:34 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Random questions (mostly APU)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Alright, now I'm at the point where the pulse channel handling is 90% finished, so I need to start thinking about what to do with the triangle. I'm planning to have two modes for it, one with infinitely held notes (but upon reading a delay $00 byte I turn it off with its bit in $4015) and one using the linear counter (in which case I'll probably ignore note delays, since silencing the channel is automated)<br />An effect is used to change this, the parameter is saved to RAM, and during data processing for the triangle channel, it reads this value (if it's $00, use infinite length, if non-zero, use it as the linear counter load)<br /><br />But I don't see how the counter load affects the note length at all. I thought it was just a 7-bit countdown at 240Hz, and that's it, and I tested it with the SNDTEST.nes ROM but it's just all weird and I'm not sure what's going on, and why I randomly get endless notes even though bit 7 of $4008 is set. <br />So linear counters, how to they work?

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>3</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>