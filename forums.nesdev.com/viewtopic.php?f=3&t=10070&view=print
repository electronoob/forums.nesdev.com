<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Problems with ppu_vbl_nmi...</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Problems with ppu_vbl_nmi...</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=3&amp;t=10070">http://forums.nesdev.com/viewtopic.php?f=3&amp;t=10070</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>samfoo</b> [ Sat May 04, 2013 4:46 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Problems with ppu_vbl_nmi...</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I'm having trouble getting my (very rough) PPU implementation to pass some of blargg's PPU tests. I'm certain my implementation is to blame, but I'm not sure how to track down the problem.<br /><br />When I run 01-vbl_basics.nes, it does some stuff for awhile and then gets stuck in an infinite loop:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">E868&nbsp; 2C 02 20&nbsp; BIT $2002 = 00&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; A:00 X:00 Y:00 P:26 SP:FB<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ^^<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; alternates between 00 and 80 depending on vblank<br />E86B&nbsp; 10 FB&nbsp; &nbsp; &nbsp;BPL $E868&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;A:00 X:00 Y:00 P:26 SP:FB<br /></div><br /><br />Presumably this loop is polling for v-blank somehow, but: I can't figure out how it could ever exit -- if the accumulator is $00, how could BPL ever do anything but loop back, regardless of the v-blank state...<br /><br />I've tried to look into the source, but my understanding of 6502 assembly is rudimentary at best. Anyone have any ideas where I might be screwing things up?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>ulfalizer</b> [ Sat May 04, 2013 5:29 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Problems with ppu_vbl_nmi...</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">samfoo wrote:</div><div class="quotecontent">I'm having trouble getting my (very rough) PPU implementation to pass some of blargg's PPU tests. I'm certain my implementation is to blame, but I'm not sure how to track down the problem.<br /><br />When I run 01-vbl_basics.nes, it does some stuff for awhile and then gets stuck in an infinite loop:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">E868&nbsp; 2C 02 20&nbsp; BIT $2002 = 00&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; A:00 X:00 Y:00 P:26 SP:FB<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ^^<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; alternates between 00 and 80 depending on vblank<br />E86B&nbsp; 10 FB&nbsp; &nbsp; &nbsp;BPL $E868&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;A:00 X:00 Y:00 P:26 SP:FB<br /></div><br /><br />Presumably this loop is polling for v-blank somehow, but: I can't figure out how it could ever exit -- if the accumulator is $00, how could BPL ever do anything but loop back, regardless of the v-blank state...<br /><br />I've tried to look into the source, but my understanding of 6502 assembly is rudimentary at best. Anyone have any ideas where I might be screwing things up?</div><br /><br />BPL does not look at the current value in A, but rather at the status flags. <!-- m --><a class="postlink" href="http://www.obelisk.demon.co.uk/6502/reference.html">http://www.obelisk.demon.co.uk/6502/reference.html</a><!-- m --> is a good reference for how instructions affect status flags. There you will see that BIT sets the the N (Negative) flag to bit 7 of the operand, which for $2002 is the VBlank flag. BPL then branches back to the test if the N flag is clear.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>samfoo</b> [ Sat May 04, 2013 5:36 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Problems with ppu_vbl_nmi...</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">The mask pattern in A is ANDed with the value in memory to set or clear the zero flag, but the result is not kept.</div><br /><br />This was my confusion. I forgot that the operand being negative sets P regardless of what the result of the bitwise AND is. However: This wasn't the problem...<br /><br />My debug output was basically doing:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">Read($2002)<br /></div><br /><br />Which was VBlank before the CPU ever got a chance to see it. <strong>Doh!</strong> Fixing that seems to have at least gotten me to a different infinite loop that I'm looking into now.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>ulfalizer</b> [ Sat May 04, 2013 5:47 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Problems with ppu_vbl_nmi...</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Yeah, BIT is a bit tricky in that N and V are set directly from the operand instead of from the result of the AND operation. I would have mentioned that if only I had remembered that BIT ever ANDed (it'd be a weird bit test instruction if it didn't though <img src="./images/smilies/icon_razz.gif" alt=":P" title="Razz" />). That's what you get for only having emulated 6502 and not coded much in it I guess. <img src="./images/smilies/icon_wink.gif" alt=":wink:" title="Wink" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sat May 04, 2013 5:54 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Problems with ppu_vbl_nmi...</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />It seems to me that the AND behavior of BIT is a lot more useful on the 65C02, where instruction $89 (a 2-byte NOP on 6502) becomes BIT #ii.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Sat May 04, 2013 8:48 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Problems with ppu_vbl_nmi...</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Be sure your CPU emulator passes the &quot;official instructions&quot; test before running my other test ROMs. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>samfoo</b> [ Sat May 04, 2013 10:33 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Problems with ppu_vbl_nmi...</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />(My CPU is passing all of the official opcodes, I just had a screwed up understanding of BIT when reading code... ugg)<br /><br />On to the next problem:<br /><br />I'm passing ppu_vbl_nmi tests 1-4, but on the 5th test (05-nmi_timing.nes) I'm failing, but it's hard for me to understand exactly what the test is doing and why the failure is happening. I've spent all day reading through the timing documentation, and I think I have a reasonable understand of it.<br /><br />The output of my test is:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">Running tests...<br />Results:<br />00 4<br />01 4<br />02 4<br />03 4<br />04 3<br />05 3<br />06 3<br />07 3<br />08 3<br />09 3<br /><br />ACB887C4<br />05-nmi_timing<br /><br />Failed<br /></div><br /><br />So for 03, the result should be 3 instead of four... but I don't have any idea what that means :-/<br /><br />Any ideas where to start looking?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Sun May 05, 2013 6:18 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Problems with ppu_vbl_nmi...</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Since this tests NMI timing, you could try having your NMI occur one cycle earlier (or later) in the frame and see what the test prints out.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>samfoo</b> [ Fri May 10, 2013 9:10 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Problems with ppu_vbl_nmi...</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I've spent some time trying to move the NMI interrupt handler &amp; emitter around, and still haven't been able to get things aligned according to the test. I've also made sure to go through the frame timing article in detail, as well as examining the frame timing SVG to make sure that I seem to be doing things on the right cycle. I've written a fair number of unit tests that test all the edge cases that I'm aware of, and do their best to test timing.<br /><br />My emulator is using cycle based timing where the PPU is always aligned with the CPU. Every CPU cycle steps three PPU cycles before executing whatever read/write caused the CPU to tick. I am not currently special-casing things like an NMI that happens during a BRK, so I'm not sure if this is perhaps this might be the cause?<br /><br />I suspect I'm misunderstanding something on the wiki or in the docs, or maybe just making a really simple error. One thing I'm unclear about&#058; If the NMI occurs on the final cycle of the CPU's current instruction... does the handler wait until after the next *instruction* or after the next *cycle* to execute the interrupt? Right now, my implementation waits until the next instruction finishes, which I *think* is right.<br /><br />I'm hoping some of the relevant code (I've tried to keep it brief) might help someone to point out my (presumably obvious) error.<br /><br />(full code is here: <!-- m --><a class="postlink" href="https://github.com/samfoo/gones/blob/master/src/ppu/ppu.go">https://github.com/samfoo/gones/blob/ma ... ppu/ppu.go</a><!-- m -->)<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">// Reading PPUSTATUS<br /><br />func (p *PPU) Read(location cpu.Address) byte {<br />&nbsp; &nbsp; switch p.normalize(location) {<br />&nbsp; &nbsp; &nbsp; &nbsp; case PPUSTATUS:<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; p.AddressLatch = true<br /><br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if p.Scanline == POSTRENDER_SCANLINE + 1 &amp;&amp; p.Cycle == 1 {<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; p.suppressVBlankStarted = true<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<br /><br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if p.Scanline == POSTRENDER_SCANLINE + 1 {<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if p.Cycle == 2 {<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; p.Status.VBlankStarted = true<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; p.suppressVBlankStarted = true<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; p.CancelNMI() // If it's already occurred<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<br /><br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if p.Cycle == 3 {<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; p.Status.VBlankStarted = true<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; p.CancelNMI() // If it's already occurred<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<br /><br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; serialized := p.Status.Value()<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; p.Status.VBlankStarted = false<br /><br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return serialized<br /><br />&nbsp; &nbsp; &nbsp; &nbsp; // ...<br />&nbsp; &nbsp; }<br />}<br /></div><br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">// The full PPU cycle code...<br /><br />func (p *PPU) Step() {<br />&nbsp; &nbsp; // ...<br />&nbsp; &nbsp; &nbsp; &nbsp; switch {<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // ...<br /><br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; case p.Scanline == POSTRENDER_SCANLINE + 1 &amp;&amp; p.Cycle == 1:<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if !p.suppressVBlankStarted {<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; p.Status.VBlankStarted = true<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; p.GenerateNMI()<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<br />&nbsp; &nbsp; &nbsp; &nbsp; }<br /><br />&nbsp; &nbsp; &nbsp; &nbsp; if p.Scanline == POSTRENDER_SCANLINE + 1 &amp;&amp; p.Cycle &gt;= 3 {<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; p.suppressVBlankStarted = false<br />&nbsp; &nbsp; &nbsp; &nbsp; }<br />&nbsp; &nbsp; // ...<br />}<br /></div><br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">// Handling instructions and the NMI in the CPU...<br /><br />func (p *CPU) Step() int {<br />&nbsp; &nbsp; opcode := Opcode(p.Read(p.PC))<br />&nbsp; &nbsp; op := p.Operations()&#91;opcode&#93;<br /><br />&nbsp; &nbsp; p.PC++<br /><br />&nbsp; &nbsp; if p.Debug { p.Debugf(opcode, op) }<br /><br />&nbsp; &nbsp; p.Execute(op)<br /><br />&nbsp; &nbsp; if p.nmi.Occurred &amp;&amp; p.nmi.Cycle &lt; (p.cycles - 1) {<br />&nbsp; &nbsp; &nbsp; &nbsp; p.HandleNMI()<br />&nbsp; &nbsp; }<br /><br />&nbsp; &nbsp; // ...<br />}<br /></div><br /><br />Thanks for any further advice/thoughts, and sorry for the long post -- this problem has been driving me crazy for days.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>