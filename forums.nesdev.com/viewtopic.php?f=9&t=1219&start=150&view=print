<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Reverse Engineering the CIC</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Reverse Engineering the CIC</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=9&amp;t=1219">http://forums.nesdev.com/viewtopic.php?f=9&amp;t=1219</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>11</strong> of <strong>27</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Anders_A</b> [ Tue Nov 28, 2006 12:14 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I made a .pdf of Kevin's schematic for all of you that don't want to download that minotaur of a program. <a href="http://www.nada.kth.se/~andast/ciclone.pdf" class="postlink">Enjoy.</a>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Quietust</b> [ Tue Nov 28, 2006 6:58 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />General instruction format:
<br />AAAAABCDEEEE
<br />AAAAA = Opcode
<br />B = Operand 2 select
<br />0 - RAM Address Latch
<br />1 - Accumulator
<br />C = Operand 1 select
<br />0 - Immediate ROM data
<br />1 - RAM data
<br />D - Update Carry flag? (only for some instructions)
<br />0 - Do Not Update Carry
<br />1 - Update Carry (either from arithmetic operation or from ROM/RAM D0)
<br />EEEE = Immediate ROM data
<br />
<br />Notable exceptions:
<br />110xAAAAAAAA - JMP $AA
<br />111xAAAAAAAA - BCC $AA

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>dvdmth</b> [ Tue Nov 28, 2006 9:56 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Quietust wrote:</div><div class="quotecontent">Notable exceptions:<br />110xAAAAAAAA - BCC $AA<br />111xAAAAAAAA - JMP $AA</div>
<br />I think you have those reversed.  Opcode 110... should be JMP and 111... should be BCC.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Quietust</b> [ Tue Nov 28, 2006 10:52 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">dvdmth wrote:</div><div class="quotecontent">Opcode 110... should be JMP and 111... should be BCC.</div>
<br />
<br />Yes, that's what I said. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>kevtris</b> [ Tue Nov 28, 2006 11:54 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>kevtris</b> [ Wed Nov 29, 2006 2:11 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Memblers</b> [ Wed Nov 29, 2006 2:36 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Here's what I've got for a disassembly so far.. not much to see except loops doing mostly-unknown things.
<br /><a href="http://www.parodius.com/~memblers/nes/tengen_dis.txt" class="postlink">http://www.parodius.com/~memblers/nes/tengen_dis.txt</a>
<br />I'll update it as more stuff gets confirmed.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Zack S</b> [ Wed Nov 29, 2006 4:14 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />001011010010 INC A 
<br />
<br />01001000DDDD LDA #DDDD
<br />
<br />Bit 8 and 7 determine where the result from adder is stored.
<br />
<br />00 - Ram and A
<br />10 - Ram 
<br />01 - A
<br />11 - Y
<br />
<br />I've assigned some letters to a few of the registers
<br />
<br />A - Accumulator
<br />R - Ram Block
<br />X - Ram In Latch (latches RAM block data when D10 = 0 and D3 = 1
<br />Y - Ram Adress Pointer
<br />
<br />Here is excactly what happens in the first loop:
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">00&nbsp; 110000000001&nbsp; &nbsp;JMP 01&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;Jumps to 01<br />01&nbsp; 010110001101&nbsp; &nbsp;LDY 1101&nbsp; &nbsp;&nbsp; &nbsp;Loads 1101 to the RAM address Latch<br />02&nbsp; 011000000100&nbsp; &nbsp;LDAR 0001&nbsp; &nbsp;&nbsp; &nbsp;Loads 0001 to the RAM block at 1101 and to the Accumulator<br />03&nbsp; 001110011010&nbsp; &nbsp;LDX &#40;Y&#41; then INC Y&nbsp; &nbsp;First The RAM block is Latched, then Y is incremented. This is what affects the Carry Flag<br />04&nbsp; 001001100000&nbsp; &nbsp;LDAR A + X&nbsp; &nbsp;&nbsp; &nbsp;Accumulator and RAM in are added, then stored to RAM block and accumulator<br />05&nbsp; 111000000011&nbsp; &nbsp;JCC 03&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;Jump 03 if Carry Cleared<br /></div><br />RAM looks like this after this routine:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">00&nbsp; 8<br />.<br />.<br />0D 1<br />0E 2<br />0F 4</div>
<br />
<br />You'll notice that this agrees with the Data Coming From the Test Mode. Also the it's showing the output of the adder latch and not the contents of the accumulator. Which makes sense as far as what you would want to see for diagnostic purposes.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Zack S</b> [ Wed Nov 29, 2006 5:56 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Here's the instruction set for the Tengen CPU.
<br />
<br /><!-- m --><a class="postlink" href="http://www.geocities.com/rndlogic/IA.txt">http://www.geocities.com/rndlogic/IA.txt</a><!-- m -->
<br />
<br />It's complete except for the last 2 bits of 2 instruction groups. I know they have to deal with the carry in. Also they deal with the Data IN and out of the chip and the Highest bit of the RAM address.
<br />
<br />Here's What I have done so far, I'll do the rest tomorrow unless someone else does it first.
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">00&nbsp; 110000000001&nbsp; &nbsp;JMP 01<br />01&nbsp; 010110001101&nbsp; &nbsp;LDY 1101<br />02&nbsp; 011000000100&nbsp; &nbsp;LDAR 0001<br />03&nbsp; 001110011010&nbsp; &nbsp;LDX &#40;Y&#41; then INC Y<br />04&nbsp; 001001100000&nbsp; &nbsp;LDAR A + X<br />05&nbsp; 111000000011&nbsp; &nbsp;JCC 03&nbsp; &nbsp;<br />06&nbsp; 001111000100&nbsp; &nbsp;LDY _A<br />07&nbsp; 001001000010&nbsp; &nbsp;LDAR A + 1<br />08&nbsp; 001111000000&nbsp; &nbsp;LDY A<br />09&nbsp; 001100000000&nbsp; &nbsp;LDR Y<br />0A&nbsp; 000110100000&nbsp; &nbsp;LDY X<br />0B&nbsp; 011000001110&nbsp; &nbsp;LDAR 0010<br />0C&nbsp; 101111101100&nbsp; &nbsp;LDX &#40;0&#41; then LDY A + X<br />0D&nbsp; 000100000001&nbsp; &nbsp;LDR 0001<br />0E&nbsp; 001110010100&nbsp; &nbsp;LDY _Y set Y4??</div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>dvdmth</b> [ Wed Nov 29, 2006 10:21 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I might be mistaken, but it appears opcodes in the form 00xx xxxx x1xx perform an XNOR operation instead of XOR.  Whenever the code inverts a value (NOT), it uses this opcode format with one input set to zero.  XOR would leave the value unchanged, while XNOR would invert it.  Also consider the instruction at ROM $13, which is of this format.  My trace shows both inputs being set to $8, and the output of this instruction is $F (corresponding to XNOR, not XOR).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Quietust</b> [ Wed Nov 29, 2006 11:33 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Zack S wrote:</div><div class="quotecontent">I've assigned some letters to a few of the registers<br /><br />A - Accumulator<br />R - Ram Block<br />X - Ram In Latch (latches RAM block data when D10 = 0 and D3 = 1<br />Y - Ram Adress Pointer<br /><br />Here is excactly what happens in the first loop:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">00&nbsp; 110000000001&nbsp; &nbsp;JMP 01&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;Jumps to 01<br />01&nbsp; 010110001101&nbsp; &nbsp;LDY 1101&nbsp; &nbsp;&nbsp; &nbsp;Loads 1101 to the RAM address Latch<br />02&nbsp; 011000000100&nbsp; &nbsp;LDAR 0001&nbsp; &nbsp;&nbsp; &nbsp;Loads 0001 to the RAM block at 1101 and to the Accumulator<br />03&nbsp; 001110011010&nbsp; &nbsp;LDX &#40;Y&#41; then INC Y&nbsp; &nbsp;First The RAM block is Latched, then Y is incremented. This is what affects the Carry Flag<br />04&nbsp; 001001100000&nbsp; &nbsp;LDAR A + X&nbsp; &nbsp;&nbsp; &nbsp;Accumulator and RAM in are added, then stored to RAM block and accumulator<br />05&nbsp; 111000000011&nbsp; &nbsp;JCC 03&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;Jump 03 if Carry Cleared<br /></div><br />RAM looks like this after this routine:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">00&nbsp; 8<br />.<br />.<br />0D 1<br />0E 2<br />0F 4</div></div><br /><br />That format is really strange and rather difficult to read. Be aware that you don't need to format the code as if it were 6502 assembly - feel free to format it as "operation operand,operand" like lots of other CPUs do. You also don't need to use two separate "registers" for the RAM address pointer and the RAM at said address - simply use () or [] to denote indirection, as such:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">00&nbsp; &nbsp; JMP $01<br />01&nbsp; &nbsp; MOV P,$D<br />02&nbsp; &nbsp; MOV &#91;P&#93;.A,$1<br />03&nbsp; &nbsp; MOV D,&#91;P++&#93;<br />04&nbsp; &nbsp; MOV &#91;P&#93;.A,A+D<br />05&nbsp; &nbsp; JNC $03<br /></div>
<br />In this case, there are effectively 3 registers - "A" (accumulator), "P" (memory address register, or 'pointer'), and "D" (RAM data latch).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>dvdmth</b> [ Wed Nov 29, 2006 12:53 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I'm also doing a disassembly.  Here's how I'm formatting the results:
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">$00 C01&nbsp; JMP $01<br />$01 58D&nbsp; Y = 13<br />$02 604&nbsp; &#40;Y&#41; = A = Y + 4<br />$03 39A&nbsp; X = &#40;Y&#41;; Y = Y + 1 &#40;update C&#41;<br />$04 260&nbsp; &#40;Y&#41; = A = A + X<br />$05 E03&nbsp; JNC $03<br />$06 3C4&nbsp; Y = ~A<br />$07 242&nbsp; &#40;Y&#41; = A = A + 1<br />$08 3C0&nbsp; Y = A<br />$09 300&nbsp; &#40;Y&#41; = Y<br />$0A 1A0&nbsp; Y = X<br />$0B 60E&nbsp; &#40;Y&#41; = A = Y + 14<br />$0C BEC&nbsp; X = &#40;0&#41;; Y = A + X<br />$0D 101&nbsp; &#40;Y&#41; = C<br />$0E 394&nbsp; Y = ~Y &#40;update C&#41;<br />$0F 111&nbsp; &#40;Y&#41; = C &#40;update C&#41;</div>
<br />Note that this is not intended to be reassembled (if it were, I would've have written it this way).
<br />
<br />I am having some trouble with a few opcodes, mainly $809 and $869.  Does bit 3 of the opcode have special meaning when bits 7-10 are clear?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Wed Nov 29, 2006 1:00 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">dvdmth wrote:</div><div class="quotecontent">I'm also doing a disassembly.  Here's how I'm formatting the results:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">$00 C01&nbsp; JMP $01<br />$01 58D&nbsp; Y = 13<br />$02 604&nbsp; &#40;Y&#41; = A = Y + 4<br />$03 39A&nbsp; X = &#40;Y&#41;; Y = Y + 1 &#40;update C&#41;<br />&#40;snipped&#41;</div><br />Note that this is not intended to be reassembled (if it were, I would've have written it this way).</div>
<br />Unless you're imagining an assembler similar to NESHLA, which uses a more Fortran/ALGOL style syntax. It appears Itanium assembly language (<a href="http://www.rz.uni-karlsruhe.de/ssck/manuals.php" class="postlink">get PDF here</a>) uses a similar syntax, with the = sign appended to the name of the destination register.
<br />
<br />Another thing: Is it copyright infringement to conduct this reverse engineering publicly, especially given that the production of the work being reverse engineered was deemed an infringement (<em>Atari Games v. Nintendo</em>) due to Tengen defrauding the US Copyright Office?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>BootGod</b> [ Wed Nov 29, 2006 2:17 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">Another thing: Is it copyright infringement to conduct this reverse engineering publicly, especially given that the production of the work being reverse engineered was deemed an infringement (<em>Atari Games v. Nintendo</em>) due to Tengen defrauding the US Copyright Office?</div>
<br />
<br />AFAIK, no it wouldn't be. For one thing Tengen is no longer a company, not sure if that matters or not. But mainly, they weren't sued for the actual reverse engineering, rather the means they used to acquire the info (the patent office deal). But I'm no lawyer either <img src="./images/smilies/icon_razz.gif" alt=":P" title="Razz" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Wed Nov 29, 2006 2:21 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">BootGod wrote:</div><div class="quotecontent">For one thing Tengen is no longer a company</div>
<br />Tengen's assets are now owned by Midway Games.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>11</strong> of <strong>27</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>