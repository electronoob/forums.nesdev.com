<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=20&amp;t=9792" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2013-02-10T13:50:22-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=20&amp;t=9792</id>
<entry>
<author><name><![CDATA[Drakon]]></name></author>
<updated>2013-02-10T13:50:22-07:00</updated>
<published>2013-02-10T13:50:22-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9792&amp;p=107565#p107565</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9792&amp;p=107565#p107565"/>
<title type="html"><![CDATA[Re: Need help debugging a rom]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9792&amp;p=107565#p107565"><![CDATA[
I got an e-mail response from the author of the bgb emulator. Here's what he said:<br /><br />&quot;i looked at the rom. it does not work on your flashcart, bgb's cart <br />troubleshooting mode, or really anything but a mbc1, because it uses mbc1 <br />specific behavior: it writes 01 to 4xxx to choose the &quot;high bank&quot; (as in, it <br />sets bank 21), then it jumps to a bit of code you've added.<br /> <br />so in short, your rom says it needs a mbc1, and bgb emulates a mbc1 <br />correctly, but this is not what you want.<br /> <br />recommendations:<br /> <br />- move your own custom code earlier (bank 1f or less), and make the whole <br />rom smaller (in this case, 512 kiB, or less if possible), this lets you use <br />the cart more efficiently.<br /> <br />- use a normal bankswitch (a write to 2000) to reach your code.<br /> <br />- set your rom to use mbc5 (type $19) in the header.&quot;<br /><br />He says I need to do all of these steps.  Except I didn't add the code so I have no idea how to change to rom to do all of this stuff.  All I can do right now is change the header to mbc5 which doesn't help at all.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4533">Drakon</a> — Sun Feb 10, 2013 1:50 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[lidnariq]]></name></author>
<updated>2013-02-10T11:54:01-07:00</updated>
<published>2013-02-10T11:54:01-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9792&amp;p=107564#p107564</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9792&amp;p=107564#p107564"/>
<title type="html"><![CDATA[Re: Need help debugging a rom]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9792&amp;p=107564#p107564"><![CDATA[
<div class="quotetitle">mikejmoffitt wrote:</div><div class="quotecontent"><br />On a related note, I'm curious about&#058;<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">CAUTION: Stopping LCD operation (Bit 7 from 1 to 0) may be performed during V-Blank ONLY, disabeling the display outside of the V-Blank period may damage the hardware. This appears to be a serious issue, Nintendo is reported to reject any games that do not follow this rule.<br /></div><br />Does anyone know why that happens?</div>Liquid crystal is very easily damaged by an non-zero DC voltage on it. All LCDs have to drive any given segment one way and then the opposite repeatedly, or else the actual chemical inside that changes polarization will somehow physically damaged. All LCDs I've seen have a &quot;field&quot; control, that unlike television fields, instead just specify whether the screen is common-negative or common-positive for that refresh.<br /><br />This is just a guess, but: maybe if you disable the screen in the middle of rendering, it fails to disable the horizontal raster drivers, causing one line of pixels to be drawn with the same voltage over... and over... and over... and also never flipping the field control.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3512">lidnariq</a> — Sun Feb 10, 2013 11:54 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[mikejmoffitt]]></name></author>
<updated>2013-02-10T11:05:40-07:00</updated>
<published>2013-02-10T11:05:40-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9792&amp;p=107563#p107563</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9792&amp;p=107563#p107563"/>
<title type="html"><![CDATA[Re: Need help debugging a rom]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9792&amp;p=107563#p107563"><![CDATA[
On a related note, I'm curious about&#058;<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />CAUTION: Stopping LCD operation (Bit 7 from 1 to 0) may be performed during V-Blank ONLY, disabeling the display outside of the V-Blank period may damage the hardware. This appears to be a serious issue, Nintendo is reported to reject any games that do not follow this rule.<br /></div><br />Does anyone know why that happens?<br /><br />And also, <br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Even though GBA is described to be compatible to CGB games, most CGB games are completely unplayable on GBAs because most colors are invisible (black). Of course, colors such like Black and White will appear the same on both CGB and GBA, but medium intensities are arranged completely different.<br /></div><br />What in the hell is he talking about? Does he mean to say that the gamma curve is too dark? This makes it sound like there are missing palette entries like the NES with an 2C03B...<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5314">mikejmoffitt</a> — Sun Feb 10, 2013 11:05 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Drakon]]></name></author>
<updated>2013-02-09T21:18:33-07:00</updated>
<published>2013-02-09T21:18:33-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9792&amp;p=107553#p107553</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9792&amp;p=107553#p107553"/>
<title type="html"><![CDATA[Re: Need help debugging a rom]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9792&amp;p=107553#p107553"><![CDATA[
Haha I love marioland, it was one of my favourite games as a kid.  Plus I'm horrible at rom hacking so I wanted to start with the simplest game I could find.  Anyway asm hacking is above me which is why I'm posting here.  The gameboy colorizer made a mess of the rom, I managed to hex edit away bugs and glitches.  It runs stable on emulators with colour now it just looks like it's getting stuck in a loop somewhere when trying to run on the real thing.  I don't know a thing about asm programming / hacking.<br /><br />I wouldn't have a clue how to find where it writes tiles to video ram.  Probably something to do with breakpoints, and knowing what to look for.<br /><br />One of these perhaps?<br /><br /><a href="http://nocash.emubase.de/pandocs.htm#videodisplay" class="postlink">http://nocash.emubase.de/pandocs.htm#videodisplay</a><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4533">Drakon</a> — Sat Feb 09, 2013 9:18 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Dwedit]]></name></author>
<updated>2013-02-09T20:52:38-07:00</updated>
<published>2013-02-09T20:52:38-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9792&amp;p=107551#p107551</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9792&amp;p=107551#p107551"/>
<title type="html"><![CDATA[Re: Need help debugging a rom]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9792&amp;p=107551#p107551"><![CDATA[
If you really want an old game boy game in color, I think the only way to do it is true ASM hacking.  Find where the rom writes background tiles to Video RAM, then do something else:<br />Write the byte to video ram as normal.<br />Look up the tile number in a lookup table to see what attribute byte (color selection) you should write.<br />Switch from regular VRAM to attribute VRAM doing the proper register write<br />Write the attribute byte to video ram.<br />Switch back to regular VRAM.<br /><br />There might be several pieces of code responsible for writing to background tiles.<br /><br />Also change the code for when the game writes to the sprite table memory if you need to assign colors to particular tiles.<br /><br />Also, Super Mario Land is a terrible game, it looks like a programming experiment or technical demo that got shoved out the door.  Releasing that game in its state told other developers that it's okay to release crap games on that system.  Mario Land 2 is a lot better.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=53">Dwedit</a> — Sat Feb 09, 2013 8:52 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Drakon]]></name></author>
<updated>2013-02-09T21:27:05-07:00</updated>
<published>2013-02-09T20:12:52-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9792&amp;p=107550#p107550</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9792&amp;p=107550#p107550"/>
<title type="html"><![CDATA[Need help debugging a rom]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9792&amp;p=107550#p107550"><![CDATA[
I've been messing around with the gameboy colorizer working to convert marioland into colour.  I got the rom with colour and glitch free, except on real hardware it refuses to run.  On the gba the rom runs in gbc mode and after the bios screen it goes white. On the sgb I get to the title screen and then it just refreshes over and over. Here's the rom:<br /><br /><a href="http://www.mediafire.com/?q3438655bk680hy" class="postlink">http://www.mediafire.com/?q3438655bk680hy</a><br /><br />What I did manage to do was I found a way to recreate what's going on in an emulator. Using the bgb emulator I click on options, exceptions, then I click on &quot;cart troubleshooting mode&quot;. I load the rom and it gets to a couple of empty code spots which I just fill with &quot;nop&quot; or skip past. Once I'm past those few spots I get the same white screen as my real gba. If I go into options, system, and tell it to run as a &quot;super gameboy&quot; then I get the same thing happening as the real super gameboy. With the emulator in troubleshooting mode set to run as a super gameboy it gets to the title screen and gets stuck occasionally refreshing the title screen just like the real super gameboy. I could really use some help with figuring out what's causing the rom to get stuck.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4533">Drakon</a> — Sat Feb 09, 2013 8:12 pm</p><hr />
]]></content>
</entry>
</feed>