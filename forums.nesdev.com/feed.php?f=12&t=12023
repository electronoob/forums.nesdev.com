<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=12&amp;t=12023" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2014-11-26T17:03:17-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=12&amp;t=12023</id>
<entry>
<author><name><![CDATA[psycopathicteen]]></name></author>
<updated>2014-11-26T17:03:17-07:00</updated>
<published>2014-11-26T17:03:17-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12023&amp;p=136954#p136954</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12023&amp;p=136954#p136954"/>
<title type="html"><![CDATA[Re: C/++ for the SNES]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12023&amp;p=136954#p136954"><![CDATA[
Those are pretty much the kinds of &quot;hardcore optimizations&quot; that games like Space Megaforce use.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4383">psycopathicteen</a> — Wed Nov 26, 2014 5:03 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Sik]]></name></author>
<updated>2014-11-26T11:23:36-07:00</updated>
<published>2014-11-26T11:23:36-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12023&amp;p=136944#p136944</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12023&amp;p=136944#p136944"/>
<title type="html"><![CDATA[Re: C/++ for the SNES]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12023&amp;p=136944#p136944"><![CDATA[
If you want to make a 68000 programmer suffer, go with Z80 instead. Not too few registers to result in a mentality change, but not enough registers to be comfortable. Enjoy watching how heavily that stack gets hammered.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4526">Sik</a> — Wed Nov 26, 2014 11:23 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2014-11-26T11:06:11-07:00</updated>
<published>2014-11-26T11:06:11-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12023&amp;p=136942#p136942</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12023&amp;p=136942#p136942"/>
<title type="html"><![CDATA[Re: C/++ for the SNES]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12023&amp;p=136942#p136942"><![CDATA[
To teach a smug 68000 weenie how to make a 6502 scream, you might have to show him a few peephole optimizations one at a time.<br /><br />Remove loads after stores:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">lda $00<br />clc<br />adc $01<br />sta $00      ;; remove lda $00 after store<br />clc<br />adc $02<br />sta $00<br />lda $1000    ;; move $1000 to the $03 so it can run faster<br />sta $03      ;; remove lda $03 after store<br />clc<br />adc $00<br />sta $03<br />sta $1000<br /></div><br /><br />Remove stores whose value is provably unused:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">lda $00<br />clc<br />adc $01<br />clc          ;; remove unused sta $00<br />adc $02<br />sta $00<br />lda $1000<br />clc<br />adc $00<br />sta $03<br />sta $1000<br /></div><br /><br />Addition of this type is commutative:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">lda $00<br />clc<br />adc $01<br />clc<br />adc $02<br />sta $00<br />lda $00      ;; group accesses to same address<br />clc<br />adc $1000<br />sta $03<br />sta $1000<br /></div><br /><br />Which allows removing another load after store:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">lda $00<br />clc<br />adc $01<br />clc<br />adc $02<br />sta $00      ;; remove lda $00 after store<br />clc<br />adc $1000<br />sta $03<br />sta $1000<br /></div><br /><br />Thus this section of code is provably equivalent yet small enough for repeating unused store analysis with $00 and $03 in the rest of the snippet. If it turns out they're not needed, you end up with perfectly idiomatic 6502 assembly:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">lda $00<br />clc<br />adc $01<br />clc<br />adc $02      ;; remove unused sta $00<br />clc<br />adc $1000    ;; remove unused sta $03<br />sta $1000<br /></div><br /><br />You already know all this, but the process illustrated in this example might help someone else adapt to the 6502. Each step might produce its own &quot;Oh!&quot; moment.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Wed Nov 26, 2014 11:06 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[psycopathicteen]]></name></author>
<updated>2014-11-26T10:32:41-07:00</updated>
<published>2014-11-26T10:32:41-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12023&amp;p=136941#p136941</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12023&amp;p=136941#p136941"/>
<title type="html"><![CDATA[Re: C/++ for the SNES]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12023&amp;p=136941#p136941"><![CDATA[
Most programmers write code like this when transitioning from 68k to 65xx:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent"><br />lda $00      ;; add $01 to $00<br />clc<br />adc $01<br />sta $00<br /><br />lda $00      ;; add $02 to $00<br />clc<br />adc $02<br />sta $00<br /><br />lda $1000    ;; move $1000 to the $03 so it can run faster<br />sta $03<br /><br />lda $03      ;; add $00 to $03<br />clc<br />adc $00<br />sta $03<br /><br />lda $03<br />sta $1000    ;; move $03 back to $1000<br /></div><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4383">psycopathicteen</a> — Wed Nov 26, 2014 10:32 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tomaitheous]]></name></author>
<updated>2014-11-26T09:45:27-07:00</updated>
<published>2014-11-26T09:45:27-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12023&amp;p=136937#p136937</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12023&amp;p=136937#p136937"/>
<title type="html"><![CDATA[Re: C/++ for the SNES]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12023&amp;p=136937#p136937"><![CDATA[
I reserve a set of ZP values for pseudo register names (A0-A7, R0-R7, D0-D7); they're 16bit wide. I have equates for accessing the high and low bytes directly (A0.l, A0.h, etc). I have a set of code compact macros to go along with this for non speed essential code, or for prototyping clean looking code (ADD.word #$1234,&lt;D0 or something like ADD.w.byte #$34,&lt;D0 for slightly optimized macros). <br /><br /> But yeah for optimized stuff, you pay the price: convoluted/complex code in trade off for read ability/etc. But I don't mind.   <br /><br /> koitsu: I went from x86, to z80, to GBz80, before doing 65x and others. I never really had a problem transitioning. I was surprised by how different the ISA and approach was by comparison at first, but it didn't bother me. X86 actually annoyed me the most. Even though it was my first processor, I couldn't help but feel that it was primitive in design; the register set felt <em>really </em>limited and I didn't even have anything to compare it to (never coded for another processor at the time). Going to the 68k, I couldn't help feel that coders growing up on that processor were just spoiled - hah.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3645">tomaitheous</a> — Wed Nov 26, 2014 9:45 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Sik]]></name></author>
<updated>2014-11-26T07:38:34-07:00</updated>
<published>2014-11-26T07:38:34-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12023&amp;p=136933#p136933</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12023&amp;p=136933#p136933"/>
<title type="html"><![CDATA[Re: C/++ for the SNES]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12023&amp;p=136933#p136933"><![CDATA[
Hm, I wonder who was saying around some time ago that the 65816 stored its zero page internally (or is there some other 65xx variant that does?).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4526">Sik</a> — Wed Nov 26, 2014 7:38 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2014-11-26T06:51:47-07:00</updated>
<published>2014-11-26T06:51:47-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12023&amp;p=136929#p136929</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12023&amp;p=136929#p136929"/>
<title type="html"><![CDATA[Re: C/++ for the SNES]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12023&amp;p=136929#p136929"><![CDATA[
<div class="quotetitle">Sik wrote:</div><div class="quotecontent"><br />The obvious answer to this stuff on 65xx anyway ends up being &quot;use zero page&quot; (and they'll argue that it's actually better because you get 256 bytes, way more than what you get with registers on other CPUs). Well, except for the part that they're also usually used to hold program state as well<br /></div><br />My typical practice on NES has been to use $0000-$000F for those things where I'd use a register on other architectures and $0010-$00FF for program state.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />but yeah. I think 65816 stores zero page internally anyway.<br /></div><br />Nope. Zero page is just as external on 65816 as it is on 6502. It can just be relocated within $000000-$00FFFF, making it useful as a &quot;frame pointer&quot; for a stack in a C style language (like x86 BP). And some memory controllers may have special fast memory that's mapped to some area of bank $00.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Wed Nov 26, 2014 6:51 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Kannagi]]></name></author>
<updated>2014-11-26T05:11:21-07:00</updated>
<published>2014-11-26T05:11:21-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12023&amp;p=136928#p136928</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12023&amp;p=136928#p136928"/>
<title type="html"><![CDATA[Re: C/++ for the SNES]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12023&amp;p=136928#p136928"><![CDATA[
the low register is not really a problem, you have to work with a temporary memory.<br /><br />Koitsu:<br />why multiplication / division? most are rather slow on the 68k he made roughly 170 cycles, I think it is better to work with bit shifts<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6518">Kannagi</a> — Wed Nov 26, 2014 5:11 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Sik]]></name></author>
<updated>2014-11-26T03:16:56-07:00</updated>
<published>2014-11-26T03:16:56-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12023&amp;p=136925#p136925</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12023&amp;p=136925#p136925"/>
<title type="html"><![CDATA[Re: C/++ for the SNES]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12023&amp;p=136925#p136925"><![CDATA[
Don't forget about processors where the's only an accumulator and nothing else and every operation ends up involving memory instead =P (i.e. literally just a single register, ignoring program counter and such, assuming you can even access those anyway)<br /><br />The obvious answer to this stuff on 65xx anyway ends up being &quot;use zero page&quot; (and they'll argue that it's actually better because you get 256 bytes, way more than what you get with registers on other CPUs). Well, except for the part that they're also usually used to hold program state as well... but yeah. I think 65816 stores zero page internally anyway.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4526">Sik</a> — Wed Nov 26, 2014 3:16 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[koitsu]]></name></author>
<updated>2014-11-25T22:16:57-07:00</updated>
<published>2014-11-25T22:16:57-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12023&amp;p=136921#p136921</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12023&amp;p=136921#p136921"/>
<title type="html"><![CDATA[Re: C/++ for the SNES]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12023&amp;p=136921#p136921"><![CDATA[
rainwarrior, I'm sending you a bill for having my LCD cleaned of 7-Up.  Thanks a lot.  :P<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3">koitsu</a> — Tue Nov 25, 2014 10:16 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[rainwarrior]]></name></author>
<updated>2014-11-25T21:25:33-07:00</updated>
<published>2014-11-25T21:25:33-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12023&amp;p=136920#p136920</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12023&amp;p=136920#p136920"/>
<title type="html"><![CDATA[Re: C/++ for the SNES]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12023&amp;p=136920#p136920"><![CDATA[
Nobody tell them about the PowerPC.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5165">rainwarrior</a> — Tue Nov 25, 2014 9:25 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[koitsu]]></name></author>
<updated>2014-11-25T17:33:36-07:00</updated>
<published>2014-11-25T17:33:36-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12023&amp;p=136918#p136918</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12023&amp;p=136918#p136918"/>
<title type="html"><![CDATA[Re: C/++ for the SNES]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12023&amp;p=136918#p136918"><![CDATA[
In my experience, most people who complain about lack of registers on 65xxx platforms come from other architectures where they've already been spoiled (i.e. tainted) via more registers and opcodes which are the equivalent of a bidet.  I'm going off historic experiences here, but most of the time it was 68K or x86 people trying to do 65xxx.  (Thought as someone who went from 65xxx to x86, I can't tell you how much I hated the fact that <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">mov</tt> doesn't set status flags like on the 65xxx.  I developed a hatred for <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">test</tt> as a result).<br /><br />But this is why I tell people the 65xxx is a great &quot;starting&quot; processor/platform -- you have limited resources, you learn to develop true KISS and minimal-resource-use mentalities and thought processes.<br /><br />You then can move to 68K or x86 where all of your secret lusts and desires have been answered *cough cough*.<br /><br />Buncha whiners.  ;-)  Like I've said in the past, about the only thing I'd like on the 65816 is native multiplication/division opcodes (and don't refer me to the SNES MMIO registers that rely on a small math IC).  Maybe some additional addressing modes, but I'd be fine without that.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3">koitsu</a> — Tue Nov 25, 2014 5:33 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[psycopathicteen]]></name></author>
<updated>2014-11-25T16:08:00-07:00</updated>
<published>2014-11-25T16:08:00-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12023&amp;p=136915#p136915</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12023&amp;p=136915#p136915"/>
<title type="html"><![CDATA[Re: C/++ for the SNES]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12023&amp;p=136915#p136915"><![CDATA[
Yes, I was referring to 65816 asm specifically.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4383">psycopathicteen</a> — Tue Nov 25, 2014 4:08 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Sik]]></name></author>
<updated>2014-11-25T15:13:31-07:00</updated>
<published>2014-11-25T15:13:31-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12023&amp;p=136914#p136914</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12023&amp;p=136914#p136914"/>
<title type="html"><![CDATA[Re: C/++ for the SNES]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12023&amp;p=136914#p136914"><![CDATA[
Honestly I think that's more of an issue of the 65816 having so few registers =S<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4526">Sik</a> — Tue Nov 25, 2014 3:13 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[psycopathicteen]]></name></author>
<updated>2014-11-25T16:08:54-07:00</updated>
<published>2014-11-25T13:16:53-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=12023&amp;p=136911#p136911</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=12023&amp;p=136911#p136911"/>
<title type="html"><![CDATA[Re: C/++ for the SNES]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=12023&amp;p=136911#p136911"><![CDATA[
Back on subject, asm code does get complicated really fast.  I try to keep things simple, but then there's always that extra feature I need to add to my routine, and I end up butchering my elegant looking code for it.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4383">psycopathicteen</a> — Tue Nov 25, 2014 1:16 pm</p><hr />
]]></content>
</entry>
</feed>