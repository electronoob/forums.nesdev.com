<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - 6502 CPU emulator - Infinite loop running a NES game?</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">6502 CPU emulator - Infinite loop running a NES game?</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=3&amp;t=4399">http://forums.nesdev.com/viewtopic.php?f=3&amp;t=4399</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>FlySwat</b> [ Sun Sep 21, 2008 5:46 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>6502 CPU emulator - Infinite loop running a NES game?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I had some free time this weekend, so I threw together a 6502 emulator, this is the first time I've ever looked at 6502, or written an emulator, so I'm sure there are lots of flaws.
<br />
<br />Of course, I couldn't leave it at that, so I started researching the NES, and I wrote a rom file loaded.
<br />
<br />Once a rom is loaded (Mario 1) and the instruction pointer pointed at the ROM bank, it gives the following output:
<br />
<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Program Counter Was At: 32768<br />Executing Instruction: Cpu6502.Opcodes.BRK with argument: 0<br />Program Counter Now At: 61569<br />Program Counter Was At: 61569<br />Executing Instruction: Cpu6502.Opcodes.LDX_A with argument: 1805<br />Program Counter Now At: 61572<br />Program Counter Was At: 61572<br />Executing Instruction: Cpu6502.Opcodes.CLC with argument: 0<br />Program Counter Now At: 61573<br />Program Counter Was At: 61573<br />Executing Instruction: Cpu6502.Opcodes.ADC_I with argument: 1<br />Program Counter Now At: 61575<br />Program Counter Was At: 61575<br />Executing Instruction: Cpu6502.Opcodes.DEC_ZP with argument: 0<br />Program Counter Now At: 61577<br />Program Counter Was At: 61577<br />Executing Instruction: Cpu6502.Opcodes.BCC with argument: -22270<br />Program Counter Now At: 39309<br />Program Counter Was At: 39309<br />Executing Instruction: Cpu6502.Opcodes.SBC_I with argument: 160<br />Program Counter Now At: 39311<br />Program Counter Was At: 39311<br />Executing Instruction: Cpu6502.Opcodes.BRK with argument: 0<br />Program Counter Now At: 61569</div>
<br />
<br />As you can tell, it immediately starts by hitting BRK, which jumps to $F081, it then runs a couple instructions before it hits a Branch If Carry which jumps back to $998D, the next instruction from that is another BRK, which causes the loop to repeat.
<br />
<br />My question is, do I have a bug in BRK and BCC causing it to jump to the wrong addresses?
<br />
<br />Is this normal behavior if I'm not handling something?
<br />
<br />Full debug breakout for the emulator (All Registers and Flags)  is available here:
<br />
<br /><!-- m --><a class="postlink" href="http://pastebin.com/f4f3d680c">http://pastebin.com/f4f3d680c</a><!-- m -->
<br />
<br />And the full source is available here:
<br />
<br /><!-- m --><a class="postlink" href="http://www.codeplex.com/Cpu6502/SourceControl/DirectoryView.aspx?SourcePath=&amp;changeSetId=1810">http://www.codeplex.com/Cpu6502/SourceC ... SetId=1810</a><!-- m -->
<br />
<br />I'm hoping my CPU emulation is correct, and this is just what the NES would do if it is missing something in the implementation.
<br />
<br />Thanks in advance.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Zepper</b> [ Sun Sep 21, 2008 6:18 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I'm not sure if this is the same case, but anyway the CPU waits for an NMI to be triggered. Yeah, it's inside a loop.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>FlySwat</b> [ Sun Sep 21, 2008 7:20 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Fx3 wrote:</div><div class="quotecontent">I'm not sure if this is the same case, but anyway the CPU waits for an NMI to be triggered. Yeah, it's inside a loop.</div>
<br />
<br />NMI is triggered when the I flag in the P register is set correct?
<br />
<br />If I look at my log dump, I see that both B and I are set all the time. When BRK fires, is it supposed to clear B?
<br />
<br />Is there a document out there that explains how interrupts are triggered and handled in the 6502?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Roth</b> [ Sun Sep 21, 2008 7:58 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I'm no emu author, and judging by the fact that you are making a 6502 emulator you probably already know about this page, but it talks alot about interrupts:
<br />
<br /><!-- m --><a class="postlink" href="http://6502.org/tutorials/interrupts.html">http://6502.org/tutorials/interrupts.html</a><!-- m -->
<br />
<br />I don't know if that's helpful, but you never know : P

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Sun Sep 21, 2008 8:12 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">FlySwat wrote:</div><div class="quotecontent">NMI is triggered when the I flag in the P register is set correct?</div>
<br />The NMI is triggered when the PPU wants to, which is always when VBlank starts. NMI means "Non-Maskable Interrupt", meaning it is not masked by the I flag. NMIs will fire independently of this flag, as long as the PPU is configured to do it.
<br />
<br />Depending on how much of the PPU you have implemented, games are likely to be stuck in loops (waiting for VBlank or an NMI).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>FlySwat</b> [ Sun Sep 21, 2008 8:30 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent"><div class="quotetitle">FlySwat wrote:</div><div class="quotecontent">NMI is triggered when the I flag in the P register is set correct?</div><br />The NMI is triggered when the PPU wants to, which is always when VBlank starts. NMI means "Non-Maskable Interrupt", meaning it is not masked by the I flag. NMIs will fire independently of this flag, as long as the PPU is configured to do it.<br /><br />Depending on how much of the PPU you have implemented, games are likely to be stuck in loops (waiting for VBlank or an NMI).</div>
<br />
<br />In this case, I realize I need to be checking for interrupt after each instruction completes, how can I tell when a NMI is fired from the CPU state? When it does, I should push the Program Counter onto the stack and then point it at the interrupt vector correct?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Mon Sep 22, 2008 12:03 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">FlySwat wrote:</div><div class="quotecontent">In this case, I realize I need to be checking for interrupt after each instruction completes, how can I tell when a NMI is fired from the CPU state?</div><br />As I said, the NMIs are generated by the PPU, so you must emulate it as well as the CPU. There are 262 scanlines in the video signal, out of those, 240 contain actual picture, 1 is a dummy, 20 are part of VBlank and 1 is a pre-render scanline. I guess you have to read about PPU timing in order to know the details, but each scanline lasts 341 PPU cycles, and VBlank happens every frame, so it will fire every 262 * 341 = 89342 PPU cycles. 1 CPU cycles is equivalent to 3 PPU cycles, so NMIs will happen roughly every 29780,6666... CPU cycles. But it's actually more detailed than that, you gotta read the timing docs. Anyway, everything I said is about the NTSC NES, things are quite different on PAL hardware.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">When it does, I should push the Program Counter onto the stack and then point it at the interrupt vector correct?</div>
<br />You also have to push the status register.
<br />
<br />Keep in mind that I'm no emulator programmer, I only make NES programs. I'm trying to help you with the knowledge I have of the system, which is not as deep as that of a good emulator programmer.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>MottZilla</b> [ Mon Sep 22, 2008 1:35 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Are you trying to run Super Mario Bros? I wouldn't recommend that for testing. You should try Donkey Kong. Not Donkey Kong Classics, just plain Donkey Kong. Or Donkey Kong Jr. They are good games for early emulator development. Or maybe Balloon Fight.
<br />
<br />As tokumaru said, alot of games will eventually get stuck when they aren't getting what they want from NES registers you probably aren't emulating. Writing a 6502 CPU core is just the start. You need to implement the whole NES memory map, the registers, the PPU, etc. There isn't much point in just emulating the CPU as that's not going to make many games do much of anything. Also as it was said, NMI is triggered by the PPU at VBlank, while NMI executing alot of games just loop forever because they do pretty much everything in NMI. 
<br />
<br />Another thing, you should have your CPU logger or debugger show you values in HEX.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>albailey</b> [ Tue Sep 23, 2008 12:36 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />In your code:
<br /> // Starting point where the code is
<br />            CPU.PC = 32767;
<br />
<br />
<br />Is that the location of the reset Handler??
<br />
<br />If not, you should refer to the last 6 bytes in the ROM.  Those are 3 important  addresses (IRQ, NMI and Reset.  Probably not in that order).
<br />
<br />Start running the program at the reset handler's address and see what happens.
<br />
<br />I'm always suspicious of "BRK" commands
<br />
<br />Edit- I checked.   Super Mario's reset handler is 0x8000. Regular Mario Bros is 0xC000
<br />
<br />Al

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>MottZilla</b> [ Tue Sep 23, 2008 3:28 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />If your code is as Al posted, that's dead wrong. Your CPU Reset should be something like, CPU.PC = GetWord(0xFFFC);
<br />
<br />Because the reset vector is initialized by getting a Word (16bit) address location at address $FFFC. I Believe (though I didn't check) that the 6502 has it's 3 Interrupt vectors at FFFA,FFFC,and FFFE. And they are NMI, RESET, BRK/IRQ. 
<br />
<br />So when these interrupts happen, you fetch a word from these locations, this word is the "vector" the CPU.PC goes to for the interrupt. Reset doesn't do much, but BRK/IRQ and NMI will push certain values on the stack as they have to return.
<br />
<br />Again, do yourself a favor and output your stuff in HEX values. It's much easier to understand that way.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>FlySwat</b> [ Tue Sep 23, 2008 5:41 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />32767 = 0x7FFF, so I was one instruction off from the reset vector (32768 = 0x8000).
<br />
<br />I started the Program Counter at the first rom bank in memory.
<br />
<br />I'm well aware that the broken is looping because I don't have an outside source (PPU) triggering any interrupts.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Tue Sep 23, 2008 9:14 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">FlySwat wrote:</div><div class="quotecontent">32767 = 0x7FFF, so I was one instruction off from the reset vector (32768 = 0x8000).</div>
<br />Still, only some games have the reset code at $8000, so you can't hardcode your emulator to that location. The actual location of the reset code is <strong>always</strong> indicated by the values at $FFFC and $FFFD.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>MottZilla</b> [ Wed Sep 24, 2008 2:11 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />You also may want to know that in games like Donkey Kong or Mario Bros that only have "1 rom bank" or are 16K in PRG size, that same 16K will appear at $8000 and $C000. That means that the reset Vector will appear at $FFFC. 
<br />
<br />Also sorry if I sounded harsh. Just trying to help you out.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>