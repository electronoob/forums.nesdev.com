<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=22&amp;t=8472" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2012-02-16T05:57:49-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=22&amp;t=8472</id>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2012-02-16T05:57:49-07:00</updated>
<published>2012-02-16T05:57:49-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8472&amp;p=90003#p90003</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8472&amp;p=90003#p90003"/>
<title type="html"><![CDATA[Line plotting engine]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8472&amp;p=90003#p90003"><![CDATA[
I meant C code I found on the net, sorry for the lapsus.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Thu Feb 16, 2012 5:57 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[hcs]]></name></author>
<updated>2012-02-15T18:54:14-07:00</updated>
<published>2012-02-15T18:54:14-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8472&amp;p=89982#p89982</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8472&amp;p=89982#p89982"/>
<title type="html"><![CDATA[Line plotting engine]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8472&amp;p=89982#p89982"><![CDATA[
<div class="quotetitle">Bregalad wrote:</div><div class="quotecontent"><br />I don't think it's such an achievement to make it so small because there is nothing that really can take up much space.<br />I just have an unrolled loop that takes quite some space and the sine table for the rotation of course.<br /></div><br />Sure, but being relatively compact and fairly efficient with RAM could make it more feasible to use, potentially.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Especially the line plotting part which I arranged from some C code I found on the NES and which still needs some cleanup/optimisation/fixes.<br /></div>C code on the NES? Or the net? Doesn't look too bad, I got the gist of it.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />In order to update as few data as possible I thought it was better to take Bell's route : Update the map as well as chars (instead of updating only chars like your demo), that way I avoid updating a lot of blank chars uselessly, at the price of having to update the map as well.<br /></div>Yeah, you win in the end if you don't have to update empty, but with the size I'm using I couldn't find a good way of keeping track of tile mappings.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />The only real limitation (aside CPU power obviously) is the fact only 64 tiles can be used for this. I think my engine could be made to extend for updating 64 other tiles, limit the speed to max. 30FPS and use some kind of double buffering on the tiles, but I did not fee like doing that.<br /></div>Yeah it seems like it would be straightforward to use different sets of tiles, just init NextChar to something different for each buffer. Then you can take as long as you need updating patterns and names, you could perform the swap just by switching to a different nametable.<br /><br /><br />Regarding filled polygons, I've been giving some thought to that, but gladly I haven't let it take over my life yet like this last project did.  Having something worth displaying at a fairly low framerate is a big issue.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=1600">hcs</a> — Wed Feb 15, 2012 6:54 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2012-02-15T02:23:25-07:00</updated>
<published>2012-02-15T02:23:25-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8472&amp;p=89957#p89957</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8472&amp;p=89957#p89957"/>
<title type="html"><![CDATA[Line plotting engine]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8472&amp;p=89957#p89957"><![CDATA[
I don't think it's such an achievement to make it so small because there is nothing that really can take up much space.<br />I just have an unrolled loop that takes quite some space and the sine table for the rotation of course.<br /><br />I uploaded the source <a href="http://dl.dropbox.com/u/23465629/NES_junk/vector.asm" class="postlink">here</a>, but don't complain if you think it's a huge mess !<br />Especially the line plotting part which I arranged from some C code I found on the NES and which still needs some cleanup/optimisation/fixes.<br /><br />To compile it you'll need WLA-DX and some other files but I think you wanted to see it just to look at it and not to comile it so it should not be a problem.<br /><br />Basically how the engine function is like that :<br />The main difference between it and yours (and Ian Bells) is that I don't use any kind of Double Buffering. For some reason I just wanted to get rid of it whenever possible to simplify the logic, which also means faster code.<br />I also wanted something in the middle of the screen, the borders not being important. This leaves me the possibility to do VRAM updates at the top and bottom quarter of the screen using forced blanking.<br />At first I thought about a system that would update half of data at the bottom of a frame, then the other half at the top of the following frame, so that I didn't need double buffering, because all data could be updated between the end of the display section of the first frame and the start of the display section of the next frame.<br /><br />In order to update as few data as possible I thought it was better to take Bell's route : Update the map as well as chars (instead of updating only chars like your demo), that way I avoid updating a lot of blank chars uselessly, at the price of having to update the map as well.<br />Since I use a 256x128 surface, I have 512 map bytes to update every time an image is rendered.<br /><br />Finally I was able to get something even better than I planned as I was able to update 512 characters bytes and 512 map bytes in a quarter of the screen with simple partially unrolled code. I always update this even if not all characters are used, so that the timing is constant and everything is simpler, I can update all data in one frame instead of splitting it in two.<br /><br />I could use either the top quarter of the screen or the bottom quarter of the screen. The problem when doing it at the bottom is that I can't synchronize easily, I'd have to wait for VBlank, then wait for the bottom of the screen, then use forced blanking and update. But all this waiting is a waste of precious CPU time, and I didn't want to jerk around DMC IRQs unless there was no other solution, so I simply decided to update at the top quarter of the screen.<br />This leaves the bottom section completely untouched, I didn't use it but you could put other graphics, such as text, there.<br /><br />That way I have absolutely no constraint on FPS when it comes to updates, it can be as fast as 60FPS or as slow as you want and that will never be a problem.<br />You could even render an image, freeze it, run another program that overwrites all the RAM, then render another image, it will never be a problem.<br /><br />The only real limitation (aside CPU power obviously) is the fact only 64 tiles can be used for this. I think my engine could be made to extend for updating 64 other tiles, limit the speed to max. 30FPS and use some kind of double buffering on the tiles, but I did not fee like doing that.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Pretty smooth demo. You know what I would just love? To see the NES doing animated sequences like the ones in Another World... I'm sure that a LOT of optimization would be necessary for that!<br /></div><br />This is not really related as this is no wireframe graphics, but I don't think a lot of optimization would be needed, most of it can be pre-rendered, and use sprites for what moves. The only trick would be use solid BG tiles for inner part of sprites which are way too big to be displayed.<br /><br />I don't think it'd take a lot of optimisation, but rather a lot of artistic work and a lot of ROM space.<br />I think there was a Famicom game I tried once with such impressive graphics, but I don't remember its name as it was in Japanese and was not "rememberable". Of course you couldn't go far in the game without knowing japanese so I didn't care much about the game but it had impressive graphics.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Wed Feb 15, 2012 2:23 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[hcs]]></name></author>
<updated>2012-02-14T17:45:09-07:00</updated>
<published>2012-02-14T17:45:09-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8472&amp;p=89951#p89951</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8472&amp;p=89951#p89951"/>
<title type="html"><![CDATA[Line plotting engine]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8472&amp;p=89951#p89951"><![CDATA[
<div class="quotetitle">Bregalad wrote:</div><div class="quotecontent"><br />Thanks for the idea of doing rotating polygons, it's not very exiting but it gets the job done.<br /><br />I think I can now share a working version of my engine here :<br /><a href="http://dl.dropbox.com/u/23465629/NES_junk/vector.nes" class="postlink">http://dl.dropbox.com/u/23465629/NES_junk/vector.nes</a><br /></div><br /><br />Very nice, and in ~ 1K!  Whereas my massive monthlong project does only very slightly better at the same task:  <a href="http://hcs64.com/files/vectest4.nes" class="postlink">vectest4</a><br /><br />Timing on the TV for 4 full revolutions gives 20.3 FPS for yours (as expected) and 23 FPS for mine (as is hardly predictable due to a lot of dynamic behavior).<br /><br />I'd love to see the source (mine is up on the vectest branch of Nestify on github), though at 1K it shouldn't be hard to read through a disassembly.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=1600">hcs</a> — Tue Feb 14, 2012 5:45 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2012-02-14T17:07:07-07:00</updated>
<published>2012-02-14T17:07:07-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8472&amp;p=89950#p89950</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8472&amp;p=89950#p89950"/>
<title type="html"><![CDATA[Line plotting engine]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8472&amp;p=89950#p89950"><![CDATA[
Pretty smooth demo. You know what I would just love? To see the NES doing animated sequences like the ones in <a href="http://www.youtube.com/watch?v=Zgkf6wooDmw" class="postlink">Another World</a>... I'm sure that a LOT of optimization would be necessary for that!<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Tue Feb 14, 2012 5:07 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2012-02-14T13:27:47-07:00</updated>
<published>2012-02-14T13:27:47-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8472&amp;p=89939#p89939</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8472&amp;p=89939#p89939"/>
<title type="html"><![CDATA[Line plotting engine]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8472&amp;p=89939#p89939"><![CDATA[
Thanks for the idea of doing rotating polygons, it's not very exiting but it gets the job done.<br /><br />I think I can now share a working version of my engine here :<br /><a href="http://dl.dropbox.com/u/23465629/NES_junk/vector.nes" class="postlink">http://dl.dropbox.com/u/23465629/NES_junk/vector.nes</a><br />This ROM is optimized for NTSC (since it's what most emus default to) but I can make the engine works just as well on a PAL console. Oh and I tested both on my real NESes, and both works perfect.<br /><br />It takes 3 frames to plot 10 vectors (in fact it takes about 2.5 frames but yeah this rounds up to 3). Since half of a frame is reserved for updates anyways I can draw approx. 5 vectors per frame, but it really depends on the lenght of the segment, since each pixel is plotted individually the number of white pixels in a frame directly determines how long it is to render this frame.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Tue Feb 14, 2012 1:27 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[hcs]]></name></author>
<updated>2012-02-13T15:45:15-07:00</updated>
<published>2012-02-13T15:45:15-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8472&amp;p=89924#p89924</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8472&amp;p=89924#p89924"/>
<title type="html"><![CDATA[Line plotting engine]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8472&amp;p=89924#p89924"><![CDATA[
Cool, I'd like to see it.  For some point of comparison, it takes 12 frames for Nestify to draw its initial set of 16 (long, overlapping) lines.  The next update (erasing 4 and drawing 4 lines) takes 9 frames, and once it gets going it's usually around 7 (though with notable slowdowns).  I haven't thoroughly measured (or counted lines) in the Tank Demo but it usually completes an update in one or two frames.<br /><br />Something like a few rotating regular polygons is easy to do with a sine table, if you want something to test with that takes no artistry.  With N entries you just pick x, x+N/4, x+2N/4, x+3N/4 and you have the angles of the corners of a square, just march x along to rotate it.<br /><br />The cool thing about using Mystify as a test is that it is really easy to set up, and it exercises pretty much every possible scenario of combined writes, erasures, reuse of tiles, line lengths, etc.  It's a decent stress test, which makes it an interesting challenge to a rasterizer.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=1600">hcs</a> — Mon Feb 13, 2012 3:45 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2012-02-13T15:08:43-07:00</updated>
<published>2012-02-13T15:08:43-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8472&amp;p=89922#p89922</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8472&amp;p=89922#p89922"/>
<title type="html"><![CDATA[Line plotting engine]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8472&amp;p=89922#p89922"><![CDATA[
Well this inspired me to do my own vector graphics code.<br />And guess what I did all it in an afternoon (well an afternoon + an evening to be exact).<br /><br />It works quite differently form hcs' and from Ian Bell's I think I took the advantages of both and tried to do my best on it. If someone is interested just say so.<br /><br />I can currently draw arbitrary pixels and almost* arbitrary lines on a 256x128 pixels monochrome surface.<br />As for speed it seems I can draw approximately a dozen of vectors per frame I have no idea if this is supposed to be good or bad.<br /><br />(* I still have bugs with lines longers than 64 pixels I guess it's due to some kind of overflow in 8-bit signed numbers and I need twice the lenght in the line drawing algorithm)<br /><br />The real problem is that I lack any source for vector graphics to play with my engine. I can draw static images but it gets boring very quickly, and I don't want to code crazy matix rotations or stuff of the like.<br /><br />The goal would be to have some vertex "video streaming" where I could just have a list of 2D coordinates, and render to the screen. Anyone have an idea how I could do that other than manually entering all the cordinates (which comes quickly annoying and tedious) ?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Mon Feb 13, 2012 3:08 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[hcs]]></name></author>
<updated>2012-01-25T14:54:10-07:00</updated>
<published>2012-01-25T14:54:10-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8472&amp;p=89266#p89266</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8472&amp;p=89266#p89266"/>
<title type="html"><![CDATA[Line plotting engine]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8472&amp;p=89266#p89266"><![CDATA[
Yeah, I noted that <a href="http://nesdev.com/bbs/viewtopic.php?p=88149#88149" class="postlink">in my response</a>, spam guy just picked a line at random.<br />---<br />Another day, another 10%: <!-- m --><a class="postlink" href="http://hcs64.com/files/nestify7.nes">http://hcs64.com/files/nestify7.nes</a><!-- m --><br /><br />I realized that I could use the stack pointer directly to index the data that the routines would deal with, that and putting one byte of the 9 on the zero page (interleaved with single byte values) saved 5 cycles per command, and simplified writing considerably (this version uses 2KB less ROM than v6).<br /><br />I also reworked caching and double buffering again, cache writes are now limited to only the lines that need to be written to a frame.  I had implemented this before but due to various issues (worked out by drawing a lot of state machines) it wasn't providing measurable benefit.<br /><br />Also caught a bunch of cycle counting bugs that were causing v6 to bounce occasionally when it took too long for vblank. That took away some small bit of speed for the sake of caution, the other changes much more than made up for it.<br /><br />I tried doing color cycling, but most colors look awful with vertically-oriented diagonals on a black background, on my old CRT anyway, so I've kept that on its own branch for now.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=1600">hcs</a> — Wed Jan 25, 2012 2:54 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2012-01-25T14:51:28-07:00</updated>
<published>2012-01-25T14:51:28-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8472&amp;p=89264#p89264</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8472&amp;p=89264#p89264"/>
<title type="html"><![CDATA[Line plotting engine]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8472&amp;p=89264#p89264"><![CDATA[
Tank demo does not use WRAM, it says "32k PRG and nothing else".<br /><br />I guess the big difference is that Tank Demo (and Elite) relies on the fact there is many completely empty tiles on the screen so they only upload the necessary characters and the name table. This demo however does only update characters, and have a completely free "bitmap surface" in the middle of the screen that is hardwired and never changed.<br />This implies more character updating, but no tame table updating.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Wed Jan 25, 2012 2:51 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[hcs]]></name></author>
<updated>2012-01-25T14:27:36-07:00</updated>
<published>2012-01-25T14:27:36-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8472&amp;p=89262#p89262</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8472&amp;p=89262#p89262"/>
<title type="html"><![CDATA[Line plotting engine]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8472&amp;p=89262#p89262"><![CDATA[
Thanks spam guy!<br /><br />I've been working hard on this for the past week, but only made small progress until the past two days.<br /><br />1. I've ripped out the old 6502 generating code in favor of a threaded code implementation, where I keep a ring buffer of subroutine addresses-1 on the stack page, and the NMI routine executes these directly with each RTS.  Arguments for the routines (VRAM addresses and bitmap data) are kept in a separate array.  I put the cycle cost of each subroutine in the byte before it, so the address-1 tables allow that to be easily looked up. There is a whole lot of fairly uninterestingly code to support all the variant routines, in some cases I have 32 versions of each so I don't need to spend another byte specifying the high 8 bits of the address.  It has expanded greatly as a result, from just under 8KB in v5 to 30KB in v6.  I have Python generating some code (as well as lookup tables), though I don't really use it as more than a powerful macro preprocessor.  I'm becoming less and less enthused with NESHLA as I deal with its limitations and faults.<br /><br />2. The biggest improvement is an aggressive caching system, which dynamically allocates 64 tiles that are kept in RAM until they become empty. Any more must still go out to CHRRAM. Cache is interleaved with other memory in order to make the best use of space.<br /><br />Overall it is now about 25% faster than last time. The slow parts aren't much faster, but the fast parts are speedy.<br /><br /><!-- m --><a class="postlink" href="http://hcs64.com/files/nestify6.nes">http://hcs64.com/files/nestify6.nes</a><!-- m --><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=1600">hcs</a> — Wed Jan 25, 2012 2:27 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Anonymous]]></name></author>
<updated>2012-01-24T04:17:34-07:00</updated>
<published>2012-01-24T04:17:34-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8472&amp;p=89217#p89217</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8472&amp;p=89217#p89217"/>
<title type="html"><![CDATA[Line plotting engine]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8472&amp;p=89217#p89217"><![CDATA[
<div class="quotetitle">thefox wrote:</div><div class="quotecontent"><br />Not bad for not using WRAM (pretty sure Tank Demo does).<br /></div><br /><br />Yap, not bad... All good  <img src="http://forums.nesdev.com/images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /><p>Statistics: Posted by Guest — Tue Jan 24, 2012 4:17 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2012-01-17T19:44:15-07:00</updated>
<published>2012-01-17T19:44:15-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8472&amp;p=88980#p88980</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8472&amp;p=88980#p88980"/>
<title type="html"><![CDATA[Line plotting engine]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8472&amp;p=88980#p88980"><![CDATA[
Looking great.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Tue Jan 17, 2012 7:44 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[hcs]]></name></author>
<updated>2012-01-17T17:14:16-07:00</updated>
<published>2012-01-17T17:14:16-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8472&amp;p=88970#p88970</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8472&amp;p=88970#p88970"/>
<title type="html"><![CDATA[Line plotting engine]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8472&amp;p=88970#p88970"><![CDATA[
Got the non-vblank processing to catch up by some optimizations in how dlists are generated, about 17% faster that v5. Now the limitation is vblank time again.<br /><!-- m --><a class="postlink" href="http://hcs64.com/files/nestify5.nes">http://hcs64.com/files/nestify5.nes</a><!-- m --><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=1600">hcs</a> — Tue Jan 17, 2012 5:14 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[hcs]]></name></author>
<updated>2012-01-04T16:39:32-07:00</updated>
<published>2012-01-04T16:39:32-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8472&amp;p=88412#p88412</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8472&amp;p=88412#p88412"/>
<title type="html"><![CDATA[Line plotting engine]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8472&amp;p=88412#p88412"><![CDATA[
<div class="quotetitle">tepples wrote:</div><div class="quotecontent"><br />A full clear is implicit in each frame with an engine like Bell's.<br /></div><br />But that's why it isn't applicable,<br />1) Since it messes up the interference effect I remember<br />2) It'd be even slower drawing 16 huge (potentially screen-diagonal) lines each frame. I suppose we could take each set (those tracking the evolution of a side of the polygon) and draw them together to save a lot of duplicated effort combining them later. Still not sure what would be a good way to handle the other intersection cases.<br /><br />The vblank actually isn't the limiting factor right now, it's the line drawing code itself.  I'm thinking of using Bresenham's other "Run Length Slice" algorithm on longer lines, where the cost of the division can be amortized. Even my naive implementation could probably be improved with some thought, I've still got a lot of ROM. I should really take a look at Bell's method for line plotting, that much at least should be completely applicable to the full bitmap model.<br /><br /><div class="quotetitle">tepples wrote:</div><div class="quotecontent"><br /><div class="quotetitle">hcs wrote:</div><div class="quotecontent">I'd be interested to see that ebook reader, but I wasn't able to find a link on your site, is it released?<br /></div><br />No, but it was discussed in <a href="http://nesdev.com/bbs/viewtopic.php?t=1179" class="postlink">this topic</a>.</div><br />Cool, thanks.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=1600">hcs</a> — Wed Jan 04, 2012 4:39 pm</p><hr />
]]></content>
</entry>
</feed>