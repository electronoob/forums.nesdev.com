<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=2&amp;t=1871" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2006-08-05T13:39:56-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=2&amp;t=1871</id>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2006-08-05T13:39:56-07:00</updated>
<published>2006-08-05T13:39:56-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1871&amp;p=16010#p16010</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1871&amp;p=16010#p16010"/>
<title type="html"><![CDATA[Cycling layered sprites]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1871&amp;p=16010#p16010"><![CDATA[
<div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />If you know you'll not display the object, just perform game logic on it and nothing else.<br /></div><br />Well, if you KNOW it, this couldn't prevent your game to have flickers and slowdowns, but avoid to have BOTH at the same time, right ?<br />But I'd have trouble to figure how to KNOW your player isn't gonna to be displayed AT ALL because of other objects on the same scanline with higher priority. The calculation to do this could be slower than just setup the sprite of your player.<br />However, this is possible and quite easy to KNOW if it is not going to be displayed because the OAM is already full, wich is rather rare, but you can then limit the slowdowns. I think the game I'm coding does pretty much that.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Sat Aug 05, 2006 1:39 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2006-08-05T13:34:55-07:00</updated>
<published>2006-08-05T13:34:55-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1871&amp;p=16009#p16009</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1871&amp;p=16009#p16009"/>
<title type="html"><![CDATA[Cycling layered sprites]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1871&amp;p=16009#p16009"><![CDATA[
<div class="quotetitle">Bregalad wrote:</div><div class="quotecontent"><br />You have to calculate its position anyway regardless of the display.<br /></div><br />I meant it's display position. Of course, you have to know it's position relative to the player, for game logic and stuff, but there is no need to calculate where this object should be on screen, specially where each of the sprites that form it should be. If you know you'll not display the object, just perform game logic on it and nothing else.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Sat Aug 05, 2006 1:34 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2006-08-05T01:02:39-07:00</updated>
<published>2006-08-05T01:02:39-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1871&amp;p=16001#p16001</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1871&amp;p=16001#p16001"/>
<title type="html"><![CDATA[Cycling layered sprites]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1871&amp;p=16001#p16001"><![CDATA[
<div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />I agree. If the player is not gonna be displayed, don't even bother with calculating it's position, reading animation tables, etc.<br /></div><br />You have to calculate its position anyway regardless of the display.<br />I like having the player flicker just like other sprites, because then there is less flicker arround him.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Sat Aug 05, 2006 1:02 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2006-08-04T14:14:07-07:00</updated>
<published>2006-08-04T14:14:07-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1871&amp;p=15990#p15990</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1871&amp;p=15990#p15990"/>
<title type="html"><![CDATA[Cycling layered sprites]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1871&amp;p=15990#p15990"><![CDATA[
<div class="quotetitle">Bregalad wrote:</div><div class="quotecontent"><br />You should not do this in the routine that copy sprites to OAM, but in the main routine that shows all player/ennemy sprites to the screen.<br /></div><br />I agree. If the player is not gonna be displayed, don't even bother with calculating it's position, reading animation tables, etc.<br /><br /><div class="quotetitle">tepples wrote:</div><div class="quotecontent"><br />Capcom's solution as seen in <em>Mega Man</em>: Draw only the player character layered, and draw the player character frontmost.<br /></div><br />Do you mean Mega Man never flickers? I never noticed that. I've been working with this concept, but I figured that a main character that doesn't flicker results in more flickering around him. Later Mega Man games can flicker a lot.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Konami's solution as seen in <em>Contra</em>: Instead of drawing layers, draw a top half and a bottom half. Also seen in the HKO <em>Kart Fighter</em> and the pirate <em>Super Mario World</em>.<br /></div><br />Doesn't help if you want to do both (layering and halves). I don't think that would be the case for the NES, though. If the "top and bottom halves" thing does not work, you go with layering, but not both.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />May be seen in other games where the artists have also worked on the MSX.<br /></div><br />Well, sprites on MSX1 have only one color, so both techniques are required if you want to produce "NES-like" sprites. Layering is barely an option for most MSX games, as it can only display 4 sprites on a scanline (they can be 16-pixels wide, though, so it's not that bad).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Fri Aug 04, 2006 2:14 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2006-08-04T13:40:20-07:00</updated>
<published>2006-08-04T13:40:20-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1871&amp;p=15985#p15985</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1871&amp;p=15985#p15985"/>
<title type="html"><![CDATA[Cycling layered sprites]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1871&amp;p=15985#p15985"><![CDATA[
Capcom's solution as seen in <em>Mega Man</em>: Draw only the player character layered, and draw the player character frontmost.<br /><br />Konami's solution as seen in <em>Contra</em>: Instead of drawing layers, draw a top half and a bottom half. Also seen in the HKO <em>Kart Fighter</em> and the pirate <em>Super Mario World</em>. May be seen in other games where the artists have also worked on the MSX.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Fri Aug 04, 2006 1:40 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2006-08-04T13:25:55-07:00</updated>
<published>2006-08-04T13:25:55-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1871&amp;p=15983#p15983</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1871&amp;p=15983#p15983"/>
<title type="html"><![CDATA[Cycling layered sprites]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1871&amp;p=15983#p15983"><![CDATA[
I think it is some sort of limitation.<br />Either you use advanced sprite cycling routines to cycle sprites randomly making the trick less noticable to the user, but you cannot use layered sprites, or either you use layered sprites but have a lot of restriction in their cycling.<br />As you noted, object based cycling is another option I use in my game (where sprite order is important, because of top-down graphics with high sprites, i.e. Secret of Mana). You should not do this in the routine that copy sprites to OAM, but in the main routine that shows all player/ennemy sprites to the screen.<br />Use some kind of sort algorithms to find the order in wich you want to display player/ennemies sprites, and then do the process for each sprites. This should work fine whathever you want to do. Also make sure the last entries gets ignored if the 64 sprites limit is overpassed.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Fri Aug 04, 2006 1:25 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2006-08-04T12:36:36-07:00</updated>
<published>2006-08-04T12:36:36-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=1871&amp;p=15979#p15979</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=1871&amp;p=15979#p15979"/>
<title type="html"><![CDATA[Cycling layered sprites]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=1871&amp;p=15979#p15979"><![CDATA[
I was thinking about sprite cycling the other day, and came to the conclusion that "traditional" sprite cycling methods will not work well with layered sprites. If only one of the layers of a multi-layer sprite is displayed, it will look worse than if none is displayed.<br /><br />Also, traditional sprite cycling will invert the order of the layers, wich will look really wrong if you actually overlap pixels, as opposed to leaving such pixels transparent. This will also cause trouble when using high-priority sprites to mask low-priority ones (if the mask gets behind the sprite it has no effect).<br /><br />The thing is I couldn't, so far, come up with a rule that will respect the order in wich layered sprites should be rendered, as well as force both or no layers to be displayed (never only 1).<br /><br />Has anyone ever figured something like this out? I guess maybe sprite rendering should be object-based instead of sprite-based. That should result in fully displayed, or fully hidden objects. I don't know if this is better than parts of the object flickering (I mean, you can tell where the enemy is, although he might be missing a leg).<br /><br />I know that making it all object-based will not solve all problems. Sprites will surelly be placed in OAM in the correct layering order, but the objects may still have only part of it's layers disappearing.<br /><br />What do you think? I think that checking for sprites on the same scanline in software (so that you know in advance what will be displayed or not, and then not render partially displayed objects) would take too much time (checking each object's position, width and layer count to see if the sprite count goes over 8 at any given scanline). I don't think that the sprite overflow flag would be of much use, as it would only be set after an incorrectly displayed object, and you still wouldn't know wich one(s).<br /><br />Any ideas?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Fri Aug 04, 2006 12:36 pm</p><hr />
]]></content>
</entry>
</feed>