<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=20&amp;t=11162" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2014-04-13T20:50:44-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=20&amp;t=11162</id>
<entry>
<author><name><![CDATA[nitro2k01]]></name></author>
<updated>2014-04-13T20:50:44-07:00</updated>
<published>2014-04-13T20:50:44-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11162&amp;p=127729#p127729</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11162&amp;p=127729#p127729"/>
<title type="html"><![CDATA[Re: Misconception about GBC / GBA interlacing]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11162&amp;p=127729#p127729"><![CDATA[
I've made a test ROM for investigating this effect. Explanation and usage described below. Please share thoughts about details I might have gotten wrong.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">Altframe<br />========<br /><br />This is a test ROM to investigate the interlacing effects on GBC and GBA<br />displays. The ROM draws alternating lines of two settable colors. On each<br />frame, it is toggled whether color 1 and 2 are shown on odd and even lines,<br />and vice versa.<br /><br />Usage:<br />A:     Swap color 1 and color 2.<br />Left:  Toggle the red component of color 1.<br />Up:    Toggle the green component of color 1.<br />Right: Toggle the blue component of color 1.<br /><br />If the GBC display was truly interlaced, or &quot;144i&quot;, such that every second<br />line was omitted in every second frame, you would expect this test to show<br />color 1 or color 2 solidly every frame. This is not what is being observed.<br />The colors are blended together, which means that in one way or the other,<br />the color information from every line is being used <br /><br />However, it interesting to note that on GBC (at least on my GBC) one of the<br />colors is dominant. In my case this is color 2 (the right one.) If you swap<br />the same two colors back and forth, you would expect them to be mixed the<br />same way, such that the blended tone is identical no matter whether you toggle<br />colors 1 and 2.<br /><br />My theory is that the display is driving the bias voltage for each pixel in a<br />bipolar fashion where a (sub)pixel's bias voltage is first driven on one side<br />on one frame, and then with the complentary value on the next frame. For some<br />reason, the polarization is not changed until the second voltage is applied.<br /><br />Imaginary example, using -1V as the off bias voltage and +1V as the on voltage:<br /><br />Let's say a green subpixel is constant on.<br />On frame 1, terminal 1 is driven to 1V.<br />On frame 2, terminal 2 is driven to 0V.<br />This gives a bias voltage of +1 between terminal 1 and 2, and the pixel's state<br />becomes visible on frame 2.<br /><br />Let's say a green subpixel is constant off.<br />On frame 1, terminal 1 is driven to 0V.<br />On frame 2, terminal 2 is driven to 1V.<br />This gives a bias voltage of -1 between terminal 1 and 2, and the pixel's state<br />becomes visible on frame 2.<br /><br />Now let's take a less trivial example where the green subpixel is toggled each<br />frame by the program. Depending on when this toggling started, one of two <br />things maybe be happening:<br /><br />On frame 1, terminal 1 is driven to 1V. (Corresponding to on for frame 1)<br />On frame 2, terminal 2 is driven to 1V. (Corresponding to off for frame 2)<br />This gives a bias voltage of 0 between terminal 1 and 2, right between -1 and <br />+1. The colors are mixed and the pixel's state becomes visible on frame 2.<br /><br />On frame 1, terminal 1 is driven to 0V. (Corresponding to off for frame 1)<br />On frame 2, terminal 2 is driven to 0V. (Corresponding to off for frame 2)<br />This gives a bias voltage of 0 between terminal 1 and 2, right between -1 and <br />+1. The colors are mixed and the pixel's state becomes visible on frame 2.<br /><br />In theory, those two scenarios should be the same, as the resulting bias<br />voltage across each pixel should always be the same. no matter which <br />complentary voltage levels were used to arrive at the bias voltage. However<br />the transistors might be non-ideal, so that one of the terminals has a constant<br />voltage offset.<br /><br />I believe this explains the observed behavior that one of the colors is<br />dominant whe</div><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4548">nitro2k01</a> — Sun Apr 13, 2014 8:50 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2014-04-12T01:51:34-07:00</updated>
<published>2014-04-12T01:51:34-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11162&amp;p=127677#p127677</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11162&amp;p=127677#p127677"/>
<title type="html"><![CDATA[Re: Misconception about GBC / GBA interlacing]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11162&amp;p=127677#p127677"><![CDATA[
<div class="quotetitle">tepples wrote:</div><div class="quotecontent"><br />The LCD alternates each frame between drawing odd scanlines slightly dark and even scanlines slightly light and vice versa. Objects do have subtle striping artifacts. The Farbrausch demo &quot;fr018: aGb&quot; relies on this for the intro and tunnel effects. I have made a <a href="http://pineight.com/gba/#static" class="postlink">GBA ROM that demonstrates this</a> with a static picture that looks very different on a GBA from how it looks on a Game Boy Player.<br /></div><br /><br />Oh, this explains everything ! In some games I noticed that there was horizontal stripes appearing on the screen, but only when scrolling vertically.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Sat Apr 12, 2014 1:51 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[lidnariq]]></name></author>
<updated>2014-04-11T15:03:41-07:00</updated>
<published>2014-04-11T15:03:41-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11162&amp;p=127665#p127665</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11162&amp;p=127665#p127665"/>
<title type="html"><![CDATA[Re: Misconception about GBC / GBA interlacing]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11162&amp;p=127665#p127665"><![CDATA[
Using my digital camera that can record video at 240Hz, it certainly looks to me like it's drawing a new field, but not redrawing the full display, every 60Hz.<br /><br />Here's an animated GIF of the pillar of light from the end game of Castlevania: Circle of the Moon on my GBA.cvcotm-interlace-demo.gif<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3512">lidnariq</a> — Fri Apr 11, 2014 3:03 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2014-04-11T15:01:33-07:00</updated>
<published>2014-04-11T15:01:33-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11162&amp;p=127664#p127664</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11162&amp;p=127664#p127664"/>
<title type="html"><![CDATA[Re: Misconception about GBC / GBA interlacing]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11162&amp;p=127664#p127664"><![CDATA[
The LCD alternates each frame between drawing odd scanlines slightly dark and even scanlines slightly light and vice versa. Objects do have subtle striping artifacts. The Farbrausch demo &quot;fr018: aGb&quot; relies on this for the intro and tunnel effects. I have made a <a href="http://pineight.com/gba/#static" class="postlink">GBA ROM that demonstrates this</a> with a static picture that looks very different on a GBA from how it looks on a Game Boy Player.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Fri Apr 11, 2014 3:01 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[mikejmoffitt]]></name></author>
<updated>2014-04-11T13:54:57-07:00</updated>
<published>2014-04-11T13:54:57-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=11162&amp;p=127659#p127659</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=11162&amp;p=127659#p127659"/>
<title type="html"><![CDATA[Misconception about GBC / GBA interlacing]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=11162&amp;p=127659#p127659"><![CDATA[
So I hear a lot of people say things like, &quot;The Game Boy Color's screen is interlaced&quot;, and the same for the GBA. Attempts to recreate this have involved sending even and odd lines to be updated, effectively halving the amount of data sent.<br /><br />However, from doing some tests with objects flashing at 30hz and just playing the thing it appears this is not the case. The LCD itself is interlaced, but not at 30hz, and the data itself thus will not be interlaced - otherwise, objects moving horizontally would have odd striping effects like with all interlaced content that updates its content faster than the interlacing occurs. <br /><br />Just wondering if anyone had thoughts on this or data to back it up / repute it.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5314">mikejmoffitt</a> — Fri Apr 11, 2014 1:54 pm</p><hr />
]]></content>
</entry>
</feed>