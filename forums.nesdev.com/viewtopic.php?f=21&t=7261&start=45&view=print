<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Emulator palettes vs real NTSC TVs</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Emulator palettes vs real NTSC TVs</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=21&amp;t=7261">http://forums.nesdev.com/viewtopic.php?f=21&amp;t=7261</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>4</strong> of <strong>5</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Drag</b> [ Mon Feb 04, 2013 1:00 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Emulator palettes vs real NTSC TVs</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Ste wrote:</div><div class="quotecontent">Not sure if I can help you with the color science stuff yet, but I did have a question.  How did you determine that NES uses Y'IQ colorspace instead of Y'UV?  To the best of my knowledge, Y'IQ hasn't been used since the 1970s due to decoder cost.  And I think you had the in-phase and quadrature-phase components backwards on page 2.  Composite color for Y'IQ should be:<br />C = Q∙sin(ωt + 33°) + I∙cos(ωt + 33°)<br /><br />For Y'UV:<br />C = U∙sin(ωt) + V∙cos(ωt)<br /><br />For Both:<br />ω = 2π∙fsc<br />fsc = 315/88 MHz<br />Colorburst = A∙sin(ωt ± 180°) = -A∙sin(ωt)<br />A = 20 IRE = 142.8mV</div><br />I'm using YIQ because the NTSC standard uses YIQ for composite color encoding in every documentation I can find. Even if modern TVs use YUV decoders, YIQ and YUV are the same, the only difference is that YIQ's axis is rotated slightly. A simple tweak of the hue knob could convert between the two encodings, hypothetically.<br /><br />Moreover, the NES doesn't actually &quot;use&quot; YIQ or YUV like you might be thinking; YIQ and YUV are the same; there's Y=Luminance, and then both I/Q and U/V are sine waves that are superimposed on the Y signal. If you disregard the exact definition of I/Q and U/V, this signal <em>looks</em> like each scanline is just a sine wave where the phase is the hue, the amplitude (of the sine wave) is the chroma, and the &quot;bias&quot; is the luminance. This is all the NES is doing; it's outputting a hue and a luminance, it's not actually converting RGB to YIQ first or anything like that.<br /><br />The reason I'm working with color spaces is because the way my TV displays rgb[FF,AA,00] (for example) is different from how rgb[FF,AA,00] appears on my computer screen, and I want to be able to display the color my TV makes, but on my computer screen. However, I'm having a LOT of trouble getting it to look right.<br /><br />The biggest problem I have is that YIQ generates a lot of colors that are out of the RGB range. I need to do something called &quot;gamut mapping&quot; in order to make an approximation of the intended color, but I have NO idea how to do this correctly, and Google doesn't turn up any programmer-friendly help. Hence, I've been stuck.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Mon Feb 04, 2013 4:51 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Emulator palettes vs real NTSC TVs</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I think what you're supposed to do is take the voltage difference between $0F and $20 to represent only 0% to 75% or 80% luma (in sRGB, #000000 to #BFBFBF or #CCCCCC). That'll darken the overall picture but give headroom for over-bright colors.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Mon Feb 04, 2013 8:37 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Emulator palettes vs real NTSC TVs</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Drag wrote:</div><div class="quotecontent">The reason I'm working with color spaces is because the way my TV displays rgb[FF,AA,00] (for example) is different from how rgb[FF,AA,00] appears on my computer screen, and I want to be able to display the color my TV makes, but on my computer screen. However, I'm having a LOT of trouble getting it to look right.</div><br />Can you elaborate on this? All I can think of is gamma. Does it display say rgb[FF,00,00] the same, and rgb[00,AA,00] the same, but not when combined? I know there was talk here many years ago about TVs doing some adjustment of hues in the skin-tone range of hues.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Drag</b> [ Tue Feb 05, 2013 3:15 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Emulator palettes vs real NTSC TVs</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Well, that was just an example, really; the idea was that the colors that my (or anyone's) TV displays are different from the colors that a computer displays. TVs are a real crapshoot when it comes to standards, because every manufacturer uses a different gamut, which means the colors will always be slightly different from TV to TV. However, the colors seem to be <em>consistently</em> different in the same way, when you compare to a computer or a digital (LCD) tv.<br /><br />Gamma probably has a huge role in this difference, and the way you <em>need</em> to apply gamma is by applying it individually to the R channel, the G channel, and the B channel, which means the hue shifts as the brightness changes. I still haven't figured out a good way to simulate this with the CIE graph.<br /><br />As far as &quot;looking right&quot;, I'm mostly talking about colors x2, x8, and xC. x2 ends up looking too purple in a lot of the available NES palette generators, x8 is a brilliant &quot;simpsons&quot; marigold color which gets browner as it gets darker (and 08 is the darkest color on the NES palette; very close to black, actually), and xC is cyan when it's light, and turns much bluer as it gets dark. These are the biggest points I have right now.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Sik</b> [ Wed Feb 06, 2013 6:36 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Emulator palettes vs real NTSC TVs</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Drag wrote:</div><div class="quotecontent">Gamma probably has a huge role in this difference, and the way you <em>need</em> to apply gamma is by applying it individually to the R channel, the G channel, and the B channel, which means the hue shifts as the brightness changes. I still haven't figured out a good way to simulate this with the CIE graph.</div><br />As stupid as it sounds, in what other way could one end up possibly implementing it? Doing the calculation on each component as-is seems the easiest way o_O;

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Drag</b> [ Wed Feb 06, 2013 1:07 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Emulator palettes vs real NTSC TVs</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Sik wrote:</div><div class="quotecontent">As stupid as it sounds, in what other way could one end up possibly implementing it? Doing the calculation on each component as-is seems the easiest way o_O;</div><br />What I meant was:<br /><br />YIQ -&gt; CIE -&gt; RGB<br /><br />I wanted to apply the gamma to the color while it was still in the CIE stage. That way, the gamma is respective to the red, the green, and the blue defined by the FCC. If I apply the gamma to the color after I convert it to RGB, by applying gamma to R, G, and B, I'm applying the gamma to the red, the green, and the blue defined by sRGB, instead of the ones defined by FCC.<br /><br />The reason I don't know how to do it is because of the way YIQ -&gt; CIE works; I start with a luminance and then add the chroma to it. This is different from RGB, where you start with black, and then add color to it. To simulate the gamma, I need to change the luminance as well as the chroma (I think), but I don't know the way I need to do this.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Sik</b> [ Thu Feb 07, 2013 1:54 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Emulator palettes vs real NTSC TVs</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Gamma should be applied to the RGB values, nothing else. The whole point about gamma is how the screen shows the RGB ramp, it has nothing to do with YUV or stuff like that.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Thu Feb 07, 2013 9:41 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Emulator palettes vs real NTSC TVs</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />And while we're on the topic, gamma is not an unwanted side-effect; it's a deliberate scheme for encoding luminance into an electrical/digital signal suited for human eyes' greater sensitivity to variations in luminance in the darker end than in the lighter end. A linear encoding would waste accuracy in the light tones and bring out more noise/quantization effects in the darker tones.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Thu Feb 07, 2013 11:06 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Emulator palettes vs real NTSC TVs</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The 2.odd gamma characteristic was a fortunate side-effect of the roughly quadratic response of CRT kinescopes. The picture signal represents voltage, but light emission is roughly proportional to beam power, which in turn is proportional to the square of voltage: P = I²R = V²/R.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Drag</b> [ Fri Feb 08, 2013 12:31 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Emulator palettes vs real NTSC TVs</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Sik wrote:</div><div class="quotecontent">Gamma should be applied to the RGB values, nothing else. The whole point about gamma is how the screen shows the RGB ramp, it has nothing to do with YUV or stuff like that.</div><br />Ok, maybe I'm not explaining myself clearly.<br /><br />YIQ generates a signal for R that goes to the electron beam, and similar signals for G and B. The red, green, and blue phosphors of the screen are excited, and the level of light they emit, compared to the voltage being sent to the gun, represents a 2.2 gamma curve.<br /><br />This is what I'm trying to simulate; 3 phosphors, each where the input generates an output with a gamma curve of 2.2, combining to form a color which I can plot on the CIE graph, to be converted to sRGB to display on a computer. I'm not an idiot trying to do something incorrect with the gamma, I assure you; I want the resulting CIE color to represent the thing I just mentioned. Converting YIQ -&gt; CIEXYZ -&gt; sRGB, and applying the gamma right before I display it on screen is not what I'm trying to do, because the gamma is not relative to the TV's phosphors in that case.<br /><br />As far as I can tell, YIQ produces a linear value for red, green, and blue. The gamma curve comes from the phosphor. If I'm rendering YIQ directly to CIEXYZ (or CIELuv, like I'm actually doing), the color I get does not take the phosphor's gamma into account. This is the problem I'm having, and why I can't get the colors to look right.<br /><br />YIQ can produce negative values for R, G, and B. I have no clue how to apply a gamma curve to this kind of output, nor how a negative value affects the overall color.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Joe</b> [ Tue Apr 02, 2013 2:23 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Emulator palettes vs real NTSC TVs</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Drag wrote:</div><div class="quotecontent">As far as I can tell, YIQ produces a linear value for red, green, and blue. The gamma curve comes from the phosphor. If I'm rendering YIQ directly to CIEXYZ (or CIELuv, like I'm actually doing), the color I get does not take the phosphor's gamma into account. This is the problem I'm having, and why I can't get the colors to look right.</div>This is not quite right. The R, G, and B components represent <em>perceptually</em> linear brightness (or something close to it), not linear light intensity. That means a 50% R component is roughly 22% as bright as a 100% R component if the CRT has a gamma of 2.2. It also means it's impossible to convert YIQ directly to CIELuv without first converting it to some intermediate RGB colorspace to do gamma correction.<br /><br /><div class="quotetitle">Drag wrote:</div><div class="quotecontent">YIQ can produce negative values for R, G, and B. I have no clue how to apply a gamma curve to this kind of output, nor how a negative value affects the overall color.</div>Those RGB values are used to drive the CRT. (Actually, they're adjusted by the contrast and brightness knobs, and <em>then</em> used to drive the CRT, so they may not be negative by the time they get to the cathode.) Any negative values in a properly-adjusted TV set will represent a voltage too low to drive the phosphors, and are equivalent to zero. It is possible for negative values to affect the picture: way back when the local cable company broadcast the <a href="http://en.wikipedia.org/wiki/SMPTE_color_bars" class="postlink">SMPTE color bars</a> on channel 70, the darker-than-black portion of the PLUGE pulse would indeed appear darker than the black level if you turned the brightness up too high.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>NewRisingSun</b> [ Tue Aug 06, 2013 10:42 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Emulator palettes vs real NTSC TVs</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">blargg wrote:</div><div class="quotecontent">What does it mean to say that something &quot;uses&quot; a particular color space?</div>The NES uses a particular color space in the sense that if the PPU engineer assumed that the displaying CRT used NTSC phosphors, he would have chosen resistors for the color-signal-generating resistor ladder that produce a lower saturation level than if he assumed that the displaying CRT used SMPTE-C phosphors.<br /><div class="quotetitle">Drag wrote:</div><div class="quotecontent">Even if modern TVs use YUV decoders, YIQ and YUV are the same, the only difference is that YIQ's axis is rotated slightly.</div>The main difference between YUV and true YIQ decoding is that with the latter, the I signal is assumed to occupy a 1.5 MHz bandwidth (Q a 0.5 MHz bandwidth), whereas with YUV decoding, both are assumed to occupy a 0.5 MHz bandwidth. Unless you are decoding with different bandwidths for I and Q, you are not truely doing YIQ decoding, but merely &quot;rotated YUV&quot; decoding.<br /><div class="quotetitle">blargg wrote:</div><div class="quotecontent">Can you elaborate on this? All I can think of is gamma. Does it display say rgb[FF,00,00] the same, and rgb[00,AA,00] the same, but not when combined? I know there was talk here many years ago about TVs doing some adjustment of hues in the skin-tone range of hues.</div>Television sets differ in many ways other than gamma. They differ at least also in<br /><ul><li>phosphor chromaticities (&quot;So what does 100% red look like?&quot;)</li><li>white point (&quot;What does 100% white look like?&quot;)</li><li>behavior with out-of-spec signals.</li></ul>The first two points define the color space. Three hexadecimal RGB values say nothing about how a color actually looks until you specify a color space. If none is specified, modern systems assume sRGB. The last point is of particular importance for home computers and consoles. Signals can be out-of-spec with regards to <ul><li>the peak-to-peak signal level</li><li>the sync level relative to blanking level</li><li>the white level relative to blanking and/or sync</li><li>the color burst amplitude</li><li>oversatured red/green/blue levels after decoding</li></ul>In the case of the NES, pretty much everything except the peak-to-peak signal level is wrong. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /> Since the NTSC standard does not define how to deal with non-standard signals, this should be the greatest source of variation between different television sets and computer images. In particular, an analogue CRT can be expected to react very differently to a &gt;100% red/green/blue signal than a digital device (which will probably just clip).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>psycopathicteen</b> [ Fri Aug 09, 2013 8:54 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Emulator palettes vs real NTSC TVs</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Drag wrote:</div><div class="quotecontent">For now, I've updated the palette generator. Some of the new tweak settings are from suggestions. The hue was me, because even though a hue tweak of 0.0 should represent the exact hues being sent, it still doesn't look right unless I shift them by -0.15. Your mileage may vary.<br /></div><br /><br />I agree.  With the color burst being at $x8, there is no red.  Just pink and orange, with nothing in between.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">The main difference between YUV and true YIQ decoding is that with the latter, the I signal is assumed to occupy a 1.5 MHz bandwidth (Q a 0.5 MHz bandwidth), whereas with YUV decoding, both are assumed to occupy a 0.5 MHz bandwidth. Unless you are decoding with different bandwidths for I and Q, you are not truely doing YIQ decoding, but merely &quot;rotated YUV&quot; decoding.</div><br /><br />Some machines even use 1.5Mhz for U and V which is pretty stupid since you are left with only 2Mhz of Y bandwidth, and both color axis have a cropped upper sideband, due to the 4.2Mhz channel limit.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>NewRisingSun</b> [ Fri Aug 09, 2013 1:04 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Emulator palettes vs real NTSC TVs</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Has it been confirmed that color burst is always at the same phase as color $8? I'm asking because of the several Famicom and Twin Famicom consoles I have, each outputs colors with a slightly different hue shift. In particular, while the -G 2C02 revision seems to place burst at color 8 +/- 0 degrees, the -H 2C02 (in a AN-505BK Twin Famicom) seems to output burst at 8 -10 degrees, equivalent to a palette setting of +10 degrees, which is very greenish.<br /><div class="quotetitle">psycopathicteen wrote:</div><div class="quotecontent">Some machines even use 1.5Mhz for U and V</div>Yes, that's what SMPTE 170M &quot;Composite Analog Video Signal - NTSC for Studio Applications&quot; calls for.<div class="quotetitle">psycopathicteen wrote:</div><div class="quotecontent">which is pretty stupid since you are left with only 2Mhz of Y bandwidth</div>Not with a notch or comb filter.<div class="quotetitle">psycopathicteen wrote:</div><div class="quotecontent">and both color axis have a cropped upper sideband, due to the 4.2Mhz channel limit</div>... which doesn't exist in studio applications. (Leaving me to wonder what a broadcast TV station does when playing back a composite studio tape --- just crop the upper sideband, or decode and reencode with narrowband color difference signals before transmission?)<br /><br />Edit: found the answer myself.<div class="quotetitle">SMPTE EG 27 wrote:</div><div class="quotecontent">When this signal is transmitted, a low-pass filter in the transmitter bandwidth limits the luminance (Y) signal and the upper sidebands of the color-difference signals (either B-Y and R-Y or I and Q) to 4.2 MHz. Transmission of equal-bandwidth color-difference signals to the receiver has the effect of limiting the recoverable chroma bandwidth to 0.6 MHz as a result of the truncation of the upper sidebands of the chroma modulation in the transmitter’s 4.2 MHz filter.</div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Fri Aug 09, 2013 10:33 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Emulator palettes vs real NTSC TVs</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">NewRisingSun wrote:</div><div class="quotecontent">Has it been confirmed that color burst is always at the same phase as color $8? I'm asking because of the several Famicom and Twin Famicom consoles I have, each outputs colors with a slightly different hue shift. In particular, while the -G 2C02 revision seems to place burst at color 8 +/- 0 degrees, the -H 2C02 (in a AN-505BK Twin Famicom) seems to output burst at 8 -10 degrees, equivalent to a palette setting of +10 degrees, which is very greenish.<br /></div>In the digital domain, it's definitely always phase $8, and there's no ability to specify anything other than some multiple of 30°. Whether subsequent analog effects skew the phase afterwards is something still under discussion. ( e.g. <!-- l --><a class="postlink-local" href="http://forums.nesdev.com/viewtopic.php?t=10101">viewtopic.php?t=10101</a><!-- l --> )<br /><br />As far as I've been able to tell from the discussions, it really looks like there shouldn't be an appreciable phase error between colorburst and other voltages. Due to the common collector amplifier that's certainly present in the NES, and in the schematic for the Famicom, the output impedance shouldn't vary appreciably by output voltage.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>4</strong> of <strong>5</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>