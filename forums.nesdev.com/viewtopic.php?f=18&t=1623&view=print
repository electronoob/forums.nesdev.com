<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - 目前在学习这些，有谁有源码或资料的发下，谢谢！</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">目前在学习这些，有谁有源码或资料的发下，谢谢！</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=18&amp;t=1623">http://forums.nesdev.com/viewtopic.php?f=18&amp;t=1623</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>zgh4000</b> [ Wed Jun 07, 2006 11:36 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>目前在学习这些，有谁有源码或资料的发下，谢谢！</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />乘除法
<br />16位运算
<br />定点坐标显示子程序
<br />随机函数
<br />时间
<br />......
<br />
<br />时间我已经做出来了。
<br />原理是NTSC制式下每秒60帧，即刷60次。
<br />我在每个VBLINK期间引发的NMI中断加1，加到60的时候就是1秒了。
<br />同理PAL是50次。 <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />
<br />
<br />随机函数：
<br />rand:
<br />	CLC		;  C=0
<br />	LDA $6003	;  A=$6003
<br />	ADC $6004	;  A+=$6004
<br />	STA $6004	;  $6004=A
<br />	ADC $6005	;  A+=$6005
<br />	STA $6005	;  $6005=A
<br />	ADC $6006	;  A+=$6006
<br />	STA $6006	;  $6006=A
<br />	CLC		;  C=0
<br />	LDA $6003	;  A=$6003
<br />	ADC #$27		;  A+=27
<br />	STA $6003	;  $6003=A
<br />	LDA $6004	;  A=$6004
<br />	ADC #$59		;  A+=59
<br />	STA $6004	;  $6004=A
<br />	PHA		;  A入栈
<br />	LDA $6005	;  A=$6005
<br />	ADC #$41		;  A+=41
<br />	STA $6005	;  $6005=A
<br />	AND #$7F		;  A&amp;=7F
<br />	TAX		;  X=A
<br />	LDA $6006	;  A=$6006
<br />	ADC #$31		;  A+=31
<br />	STA $6006	;  $6006=A
<br />	PLA		;  A出栈
<br />	RTS	
<br />
<br />SRAM选上
<br />$6003
<br />$6004
<br />$6005
<br />$6006
<br />每回数据随机，可以自己写比上面更简单的代码。

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tpu</b> [ Thu Jun 08, 2006 7:38 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />随机数算法一般都是给一个种子，即初始值，然后返回一系列的伪随机数。只要种子一样，产生的结果就一样。把地址放在sram里面，可以保证种子每次开机都不一样。
<br />
<br />乘除法我写过一些，这里不能上传。改天发给你研究。

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>zgh4000</b> [ Fri Jun 09, 2006 8:08 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tpu wrote:</div><div class="quotecontent">随机数算法一般都是给一个种子，即初始值，然后返回一系列的伪随机数。只要种子一样，产生的结果就一样。把地址放在sram里面，可以保证种子每次开机都不一样。<br /><br />乘除法我写过一些，这里不能上传。改天发给你研究。</div>
<br />乘法我是这样理解的。
<br />循环加运算
<br />除法则是循环减运算。
<br />是偶数的话可以用移位来提高效率。不知道你的代码是这个原理吗？
<br />发我邮箱吧。

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>zgh4000</b> [ Fri Jun 09, 2006 8:20 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />16位运算 
<br />最近研究后发现也很简单，利用进位判断可以容易做到.
<br />
<br />定点坐标显示子程序 
<br />发现要实现他，要用到16位运算 和乘法。^_^

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tpu</b> [ Sun Jun 11, 2006 8:10 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />我直接贴上来：
<br />math.asm
<br />--------8&lt;----------------------------
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent"><br />.dataseg<br />&nbsp; &nbsp;;math<br />&nbsp; &nbsp;.public mtht0 .byte<br />&nbsp; &nbsp;.public mtht1 .byte<br />&nbsp; &nbsp;.public mtht2 .byte<br />&nbsp; &nbsp;.public mtht3 .byte<br />&nbsp; &nbsp;;result<br />&nbsp; &nbsp;.public mthr0 .byte<br />&nbsp; &nbsp;.public mthr1 .byte<br />&nbsp; &nbsp;.public mthr2 .byte<br />&nbsp; &nbsp;.public mthr3 .byte<br />.codeseg<br /><br />.extrn str_addr : byte<br /><br />;;<br />;; 24bitx8bit-&gt;24bit<br />;;&nbsp; &nbsp; mtht&#91;210&#93; x a =&gt; mthr&#91;210&#93;<br />;;<br />.proc mul24x8<br /><br />&nbsp; &nbsp;sta mtht3<br />&nbsp; &nbsp;txa<br />&nbsp; &nbsp;pha<br /><br />&nbsp; &nbsp;lda #$00<br />&nbsp; &nbsp;sta mthr0<br />&nbsp; &nbsp;sta mthr1<br />&nbsp; &nbsp;sta mthr2<br />&nbsp; &nbsp;tax<br /><br />-:&nbsp; &nbsp;lda #$01<br />&nbsp; &nbsp;and mtht3<br />&nbsp; &nbsp;beq +<br /><br />&nbsp; &nbsp;clc<br />&nbsp; &nbsp;lda mthr0<br />&nbsp; &nbsp;adc mtht0<br />&nbsp; &nbsp;sta mthr0<br />&nbsp; &nbsp;lda mthr1<br />&nbsp; &nbsp;adc mtht1<br />&nbsp; &nbsp;sta mthr1<br />&nbsp; &nbsp;lda mthr2<br />&nbsp; &nbsp;adc mtht2<br />&nbsp; &nbsp;sta mthr2<br /><br />+:&nbsp; &nbsp;cpx #$07<br />&nbsp; &nbsp;beq +<br /><br />&nbsp; &nbsp;clc<br />&nbsp; &nbsp;rol mtht0<br />&nbsp; &nbsp;rol mtht1<br />&nbsp; &nbsp;rol mtht2<br />&nbsp; &nbsp;clc<br />&nbsp; &nbsp;ror mtht3<br />&nbsp; &nbsp;inx<br />&nbsp; &nbsp;jmp -<br /><br />+:&nbsp; &nbsp;pla<br />&nbsp; &nbsp;tax<br />&nbsp; &nbsp;rts&nbsp; &nbsp;<br />.endp<br /><br />;;<br />;; 24bit/16bit =&gt; 24bit,16bit<br />;;&nbsp; &nbsp; mtht&#91;210&#93; / mthr&#91;10&#93; =&gt; mtht&#91;210&#93;, mthr&#91;32&#93;<br />;;<br /><br />.proc div24d16<br />&nbsp; &nbsp;txa<br />&nbsp; &nbsp;pha<br /><br />&nbsp; &nbsp;lda #$00<br />&nbsp; &nbsp;sta mthr2<br />&nbsp; &nbsp;sta mthr3<br />&nbsp; &nbsp;ldx #$18<br /><br />-:&nbsp; &nbsp;clc<br />&nbsp; &nbsp;rol mtht0<br />&nbsp; &nbsp;rol mtht1<br />&nbsp; &nbsp;rol mtht2<br />&nbsp; &nbsp;rol mthr2<br />&nbsp; &nbsp;rol mthr3<br />&nbsp; &nbsp;bcs +<br /><br />&nbsp; &nbsp;lda mthr3<br />&nbsp; &nbsp;cmp mthr1<br />&nbsp; &nbsp;bne +<br />&nbsp; &nbsp;lda mthr2<br />&nbsp; &nbsp;cmp mthr0<br />+:&nbsp; &nbsp;bcc +<br />&nbsp; &nbsp;sec<br />&nbsp; &nbsp;lda mthr2<br />&nbsp; &nbsp;sbc mthr0<br />&nbsp; &nbsp;sta mthr2<br />&nbsp; &nbsp;lda mthr3<br />&nbsp; &nbsp;sbc mthr1<br />&nbsp; &nbsp;sta mthr3<br />&nbsp; &nbsp;lda mtht0<br />&nbsp; &nbsp;ora #$01<br />&nbsp; &nbsp;sta mtht0<br /><br />+:&nbsp; &nbsp;dex<br />&nbsp; &nbsp;bne -<br /><br />&nbsp; &nbsp;pla<br />&nbsp; &nbsp;tax<br />&nbsp; &nbsp;rts<br />.endp<br /><br /><br />;;<br />;; 24bit/8bit =&gt; 24bit,8bit<br />;;&nbsp; &nbsp; mtht&#91;210&#93; / a =&gt; mtht&#91;210&#93;, mtht&#91;3&#93;<br />;;<br />.proc div24d8<br />&nbsp; &nbsp;sta str_addr<br />&nbsp; &nbsp;txa<br />&nbsp; &nbsp;pha<br /><br />&nbsp; &nbsp;lda #$00<br />&nbsp; &nbsp;sta mtht3<br />&nbsp; &nbsp;ldx #$18<br /><br />-:&nbsp; &nbsp;clc<br />&nbsp; &nbsp;rol mtht0<br />&nbsp; &nbsp;rol mtht1<br />&nbsp; &nbsp;rol mtht2<br />&nbsp; &nbsp;rol mtht3<br />&nbsp; &nbsp;lda mtht3<br />&nbsp; &nbsp;bcs ++<br />&nbsp; &nbsp;cmp str_addr<br />&nbsp; &nbsp;bcc +<br /><br />++:&nbsp; &nbsp;sec<br />&nbsp; &nbsp;sbc str_addr<br />&nbsp; &nbsp;sta mtht3<br />&nbsp; &nbsp;lda mtht0<br />&nbsp; &nbsp;ora #$01<br />&nbsp; &nbsp;sta mtht0<br /><br />+:&nbsp; &nbsp;dex<br />&nbsp; &nbsp;bne -<br /><br />&nbsp; &nbsp;pla<br />&nbsp; &nbsp;tax<br />&nbsp; &nbsp;rts<br />.endp<br /><br />;;<br />;; 24bit+8bit =&gt; 24bit<br />;;&nbsp; &nbsp; x&#91;210&#93; + a =&gt; x&#91;210&#93;<br />;;<br />.proc add24a8<br />&nbsp; &nbsp;clc<br />&nbsp; &nbsp;adc $00,x<br />&nbsp; &nbsp;sta $00,x<br />&nbsp; &nbsp;lda $01,x<br />&nbsp; &nbsp;adc #$00<br />&nbsp; &nbsp;sta $01,x<br />&nbsp; &nbsp;lda $02,x<br />&nbsp; &nbsp;adc #$00<br />&nbsp; &nbsp;sta $02,x<br />&nbsp; &nbsp;rts<br />.endp<br /><br />;;<br />;; 24bit-8bit =&gt; 24bit<br />;;&nbsp; &nbsp; x&#91;210&#93; - a =&gt; x&#91;210&#93;<br />;;<br />.proc sub24s8<br />&nbsp; &nbsp;sta str_addr<br />&nbsp; &nbsp;sec<br />&nbsp; &nbsp;lda $00,x<br />&nbsp; &nbsp;sbc str_addr<br />&nbsp; &nbsp;sta $00,x<br />&nbsp; &nbsp;lda $01,x<br />&nbsp; &nbsp;sbc #$00<br />&nbsp; &nbsp;sta $01,x<br />&nbsp; &nbsp;lda $02,x<br />&nbsp; &nbsp;sbc #$00<br />&nbsp; &nbsp;sta $02,x<br />&nbsp; &nbsp;rts<br />.endp<br /><br />.public mul24x8, div24d8, div24d16, add24a8, sub24s8<br /><br /><br /></div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>zgh4000</b> [ Sun Jun 11, 2006 9:50 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />谢了，
<br />不知道你对光枪有没研究？

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tpu</b> [ Sun Jun 11, 2006 6:48 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />光枪你知道原理的话，编程实现应该很容易的

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>luoli83</b> [ Fri Jun 16, 2006 12:22 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Will....... I really can not understand how NES works, it's just too complex.
<br />I mean I can not manage asm will. so I tend to learn gameboy dev.  Any way, the lay out of gameboy Ram is very similar as NES.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>zgh4000</b> [ Fri Jun 16, 2006 1:54 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tpu wrote:</div><div class="quotecontent">光枪你知道原理的话，编程实现应该很容易的</div>
<br />可以用NNNesterj做出来
<br />但是没能自动检测出接了光枪，必须手动选择。
<br />你对vnes模拟器比较熟悉，麻烦你看下源代码，什么原因。

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>