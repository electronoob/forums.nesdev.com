<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Mega Man 3 Scanline</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Mega Man 3 Scanline</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=3&amp;t=212">http://forums.nesdev.com/viewtopic.php?f=3&amp;t=212</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Great Hierophant</b> [ Sun Feb 27, 2005 11:31 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Mega Man 3 Scanline</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />When emulated, the stage select screen in Mega Man 3 shows a shifting scanline just above Shadow Man's picture.  I always assumed it was a timing issue that emulators hadn't figured out.  I hadn't played the game in 10 years on the real hardware and I figured Capcom and Nintendo would never allow such a visual glitch to appear.  But having played MM3 on the real hardware today I can confirm that the scanline behaves exactly in the way it does in our more advanced emulators like Nintendulator.  So, one issue laid to rest at last.  
<br />
<br />Now if the could eliminate the glitches in Micro Machines I would be very happy.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Hyde</b> [ Mon Feb 28, 2005 7:58 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />That MM3 glitch was well known already. Trying to figure out how Micro Machines works is really going to be a bitch. Any information on what reading $2004 does exactly when the PPU is rendering a picture? What's weird about the code is that -at least throughout the first screens or so- it reads $2004 usually 8 times within a timed loop. Maybe reading it would return $80 ORed with some value whenever a specific sprite line has been rendered?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Disch</b> [ Mon Feb 28, 2005 8:41 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />It seems logical to me that $2003 would get changed as the PPU fetches Sprite data, thus reading $2004 would return the byte last fetched by the PPU.  BT's doc implies that sprite Y data would be fetched every 4 cycles (256 cycles / 64 srites... Y is fetched every 4 cycles to see if the sprite is in range).  If the sprite is in range, it would fetch the other sprite data presumably in the following 3 cycles (before the next Y fetch).  My hunch is that In theory, were an emu to keep $2003 synced up with these fetches, it might give some positive results in Micro Machines.  I've been meaning to tinker around and experiment with this, but haven't gotten around to it yet.  It was definatly on my to-do list.
<br />
<br />But anyway... that idea is completely 100% theory.  I don't know if that's at all accruate, it just seems logical to me.
<br />
<br />edit:  implimentation might be as simple as setting $2003 to the current scanline cycle?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Quietust</b> [ Mon Feb 28, 2005 9:38 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Disch is correct in that reading $2004 while rendering DOES expose internal SPR-RAM reads. The actual read pattern has been investigated, but not fully deciphered. It seems to read a different sprite's Y-coordinate every <strong>two</strong> cycles, and then some more stuff if it's within range; remaining cycles seem to have it alternating between sprite N y-coordinates and sprite #63's Y-coordinate (i.e. 00, FC, 04, FC, 08, FC, 0C, FC, ...). HBlank seems to return either $FF or some other random-looking values.
<br />
<br />Since the test I used only performed one read per scanline, it was not possible to construct an accurate model of what was going on (since each scanline had different sprites), though it may be possible to get better results by reading multiple times per scanline.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Nessie</b> [ Mon Feb 28, 2005 10:08 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I was thinking just like Disch and tried a quick hack where I returned byte # [ppu cycle] when reading $2004. Didn't fix Micro Machines though. <img src="./images/smilies/icon_sad.gif" alt=":(" title="Sad" />
<br />If I recall, Micro Machines checks for bit 7 to be set, which according to Q's post would indicate it's in HBlank. Gonna try some more hacks in my emu. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />
<br />
<br />-Martin

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Quietust</b> [ Mon Feb 28, 2005 8:56 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I've just finished improving my original test program so it reads all of the values during the first 3 scanlines, spread out across 42 frames - 12 values per scanline, 3 scanlines per every OTHER frame. With the sprite pattern I used, this will make it always fetch the same sprites on those scanlines, providing an accurate snapshot of exactly what is going on.
<br />
<br />The data sequence starts at cycle ~339 and ends at cycle ~249, a total of 252 samples (the last 4 will always be zero).
<br />
<br />The test program can be found at the following URL, in case you have a real NES to test it on:
<br /><!-- m --><a class="postlink" href="http://www.qmtpro.com/~nes/demos/read2004.nes">http://www.qmtpro.com/~nes/demos/read2004.nes</a><!-- m -->
<br />
<br />[update]
<br />
<br />After having the above program (and a few modifications) tested on Kevin Horton's CopyNES, I believe I have definitive information on the PPU's internal SPR-RAM access patterns:
<br />
<br />Cycles 0-63: idle - reading $2004 will return $FF
<br />Cycles 64-255: sprite evaluation
<br />- read each sprite's Y coordinate twice, starting at sprite zero (<strong>S[00], S[00]</strong>, S[04], S[04], S[08], S[08], ...)
<br />- if it's in range, read the remaining bytes of that sprite, twice each (S[00], S[00], <strong>S[04], S[04], S[05], S[05], S[06], S[06], S[07], S[07]</strong>, S[08], S[08], S[0C], S[0C], ...)
<br />- once all 64 sprites have been evaluated, "thrash" between fetching sprite N Y-coord and sprite 63 Y-coord (S[00], S[FC], S[04], S[FC], S[08], S[FC], ...)
<br />Cycles 256-319: sprite fetches (8 sprites, 8 cycles each)
<br />- for each sprite, read S[n+0], S[n+1], S[n+2], S[n+3], S[foo], S[foo], S[foo], S[foo], where 'foo' is usually the X-coordinate (n+3)
<br />- for the first unused sprite, read S[FC], followed by seven $FFs
<br />- for remaining unused sprites, read eight $FFs
<br />Cycles 320-340: read S[foo], where 'foo' is usually the the Y-coordinate of the first sprite on the scanline
<br />
<br />Nintendulator currently emulates this (based on the initial tests and some 'guesswork'), though it returns values consistent with no sprites being rendered at all.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Disch</b> [ Mon Feb 28, 2005 9:05 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Excellent!  Way to go, Quietust... you're my hero.
<br />
<br />I'll begin implimenting this and see if it solves the Micro Machines problems once and for all.  Thanks a bunch.
<br />
<br />EDIT:
<br />
<br />I'd assume this only takes effect outside VBlank if BG or SPR rendering is on... right?  if both are off or its in VBlank it just returns the byte at the address specified by $2003, right?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Drag</b> [ Tue Mar 01, 2005 2:28 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />If sprite 63's y-coordinate were to be in range, while the ppu is thrashing, would the ppu read the rest of the data for that sprite, as though it weren't in "thrash mode"?
<br />
<br />I assume the S[foo] reads don't serve a purpose directly related to the rendering of the sprite, right?
<br />
<br />and the sprite fetches are just the sprites that were in range?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Quietust</b> [ Tue Mar 01, 2005 5:21 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Drag wrote:</div><div class="quotecontent">If sprite 63's y-coordinate were to be in range, while the ppu is thrashing, would the ppu read the rest of the data for that sprite, as though it weren't in "thrash mode"?</div><br /><br />I don't know, but I personally doubt it.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I assume the S[foo] reads don't serve a purpose directly related to the rendering of the sprite, right?</div><br /><br />Not that I'm aware.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">and the sprite fetches are just the sprites that were in range?</div>
<br />Of course - they correspond directly to the sprites that get rendered on the next scanline.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Zepper</b> [ Tue Mar 01, 2005 5:30 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />-deleted-

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Quietust</b> [ Tue Mar 01, 2005 8:31 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />After adding a bit of extra logic to my emulator (namely, to <strong>not</strong> return $FF during cycles 320-340), the glitches in Micro Machines are completely gone. My $2004 read behavior is now mostly consistent with the real hardware when there are no sprites on the scanline; adding proper behavior when there ARE visible sprites will be an interesting task, though I <em>will</em> attempt it.
<br />As usual, the current build can be found at <!-- m --><a class="postlink" href="http://nintendulator.sf.net/">http://nintendulator.sf.net/</a><!-- m -->
<br />
<br />I still need to perform a few more tests, though, to answer a few questions:
<br />1. What happens during cycles [256-319] when there are no sprites on the given scanline? (very first read would be either SPR_RAM[FC] or literal $FF)
<br />2. When there are more than 8 sprites on a scanline, what happens during the remaining cycles in [64-255]? (will it attempt to fetch additional sprite data?)
<br />3. What happens during the remaining cycles in [64-255] when sprite #63 is in range? (most likely nothing happens)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Disch</b> [ Tue Mar 01, 2005 10:14 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I tried implimenting this and I've <strong>almost</strong> got Micro Machines working... but I'm still having some jitteriness problems.  With my current implimentation, the "?" racer at the top and racer list at the bottom get displayed fine... but the text in between them still messes up.
<br />
<br />It seems to come down to the [320-340] range.  The game doesn't seem to be reading in any of the other ranges (except for [0-63], but that's simple enough to impliment) -- EDIT:  crap I was getting the cycle wrong... it does read from under 320 sometimes... but my problem still remains.
<br />
<br />My current implimentation of reads when the PPU is in that cycle:
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">else // nScanCyc is in the &#91;320-340&#93; range<br />&#123;<br />&nbsp; // find first sprite on line<br />&nbsp; for&#40;i = 0; i &lt; 256; i += 4&#41;<br />&nbsp; &#123;<br />&nbsp; &nbsp; if&#40;&#40;u8&#41;&#40;nScanline - nSprRam&#91;i&#93;&#41; &lt; &#40;bSpr16 ? 16 : 8&#41;&#41; break;<br />&nbsp; &#125;<br />&nbsp; if&#40;i &lt; 256&#41;<br />&nbsp; &#123;<br />&nbsp; &nbsp; return nSprRam&#91;nSprRam&#91;i&#93;&#93;;<br />&nbsp; &#125;<br />&nbsp; else&nbsp; &nbsp;//no sprite on line<br />&nbsp; &#123;<br />&nbsp; &nbsp; //not sure if this is right?<br />&nbsp; &nbsp; return nSprRam&#91;0xFC&#93;;<br />&nbsp; &#125;<br />&#125;<br /></div>
<br />
<br />Anything standing out as being wrong?  There always seems to be a sprite found on the line (sprite 0 -- every time)
<br />
<br />
<br />EDIT #2:
<br />
<br />I cutoff the [320-340] region code and just had it return 0 in that range... and that seemed to have solved everything.  Micro Machines seems to run perfectly now.  Is that what I should be doing?  or is my above code flawed somehow?
<br />
<br />Hrm... nSprRam[i]  instead of nSprRam[nSprRam[i]]   also works.  Maybe I just misinterpretted what you said before.  Nevermind ^^
<br />
<br />Thanks a million Q, you are the NES master.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Quietust</b> [ Tue Mar 01, 2005 11:05 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />This is the code I use, and it gets Micro Machines glitch-free. It doesn't yet produce valid data when there are sprites on the scanline, though I'll be adding that later.
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">static&nbsp; &nbsp;int&nbsp; &nbsp;__fastcall&nbsp; &nbsp;Read4 &#40;void&#41;<br />&#123;<br />&nbsp; &nbsp;if &#40;PPU.IsRendering&#41;<br />&nbsp; &nbsp;&#123;<br />&nbsp; &nbsp;&nbsp; &nbsp;if &#40;PPU.Clockticks &lt; 64&#41;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;PPU.ppuLatch = 0xFF;<br />&nbsp; &nbsp;&nbsp; &nbsp;else if &#40;PPU.Clockticks &lt; 192&#41;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;PPU.ppuLatch = PPU.Sprite&#91;&#40;&#40;PPU.Clockticks - 64&#41; &lt;&lt; 1&#41; &amp; 0xFC&#93;;<br />&nbsp; &nbsp;&nbsp; &nbsp;else if &#40;PPU.Clockticks &lt; 256&#41;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;PPU.ppuLatch = &#40;PPU.Clockticks &amp; 1&#41; ? PPU.Sprite&#91;0xFC&#93; : PPU.Sprite&#91;&#40;&#40;PPU.Clockticks - 192&#41; &lt;&lt; 1&#41; &amp; 0xFC&#93;;<br />&nbsp; &nbsp;&nbsp; &nbsp;else if &#40;PPU.Clockticks &lt; 320&#41;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;PPU.ppuLatch = 0xFF;<br />&nbsp; &nbsp;&nbsp; &nbsp;else&nbsp; &nbsp;PPU.ppuLatch = PPU.Sprite&#91;0&#93;;<br />&nbsp; &nbsp;&#125;<br />&nbsp; &nbsp;else&nbsp; &nbsp;PPU.ppuLatch = PPU.Sprite&#91;PPU.SprAddr&#93;;<br />&nbsp; &nbsp;return PPU.ppuLatch;<br />&#125;<br /></div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Disch</b> [ Tue Mar 01, 2005 11:23 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />ah, so you're just returning S[00] when the cycle is above 320.
<br />
<br />From what I can tell... Micro Machines isn't exactly super strict about this behavior.  All it really expects is to have the high bit clear when the cycle is between 320-340 and the high bit set if earlier or later.
<br />
<br />It's good to know the details anyway.  I've implimented the info you've posted in my emu.  It's not very efficient though... if a game were to constantly read 2004 all frame my emu would eat CPU time like a mofo XD.  But ah well.
<br />
<br />Another milestone in NESemdev!

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Quietust</b> [ Wed Mar 02, 2005 6:28 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />In performing some additional tests, I ran into another minor catch - sprite DMA actually takes 513 cycles, rather than the expected 512 (note that this does not include the 4 cycles necessary for the 'STA $4014' instruction).
<br />
<br />I have subsequently updated my emulator to reflect this information.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>