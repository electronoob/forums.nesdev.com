<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - How do high level languages work?</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">How do high level languages work?</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=5&amp;t=6816">http://forums.nesdev.com/viewtopic.php?f=5&amp;t=6816</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>psycopathicteen</b> [ Mon Aug 09, 2010 6:33 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>How do high level languages work?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I think I'll try again to learn how to use a high level language.  It's hard to understand high level languages without know how they can work on just about any system.  Game systems have very specific hardware details, like how memory is mapped, how many sprites does it have with what capabilities.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Memblers</b> [ Mon Aug 09, 2010 6:43 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Basically, they compile into assembly language, then assemble.  At least for C.
<br />
<br />For all the different types of hardware, the compiler will require libraries that do the same type of thing on every platform.  So really no matter what language you write in, you're always depending on a specific low-level implementation (either as libraries included with the compiler, or windows drivers, that someone had to write.
<br />
<br />There could be a full C compiler for the NES, with some of the basic libraries, if anyone was to ever rewrite the NES library with cc65.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>psycopathicteen</b> [ Mon Aug 09, 2010 7:15 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />So people write hardware functions in assembly?  I would be interested in doing that if I understand correctly.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Mon Aug 09, 2010 7:17 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Hardware functions can be written in assembly or in C, depending on how good your compiler is. (CC65's optimizer is too limited, and the author admits it.)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>ReaperSMS</b> [ Mon Aug 09, 2010 7:25 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />HLLs work with system that have a variety of hardware details by way of abstraction. The limits and architecture get abstracted to a library, or as part of the runtime, and the rest of the high level code accesses it through that. The libraries and/or runtime are usually written in lower level languages, or a combination of the HLL and lower level languages.
<br />
<br />An example would be BASIC, where the PRINT command is part of the language. How PRINT does it's job is going to vary greatly depending on what system it's on, but the details of how are hidden from the person using the HLL. The mechanics themselves are in assembly code in the basic runtime, which might have been the rom started on boot depending on the system.
<br />
<br />If the HLL is suitably expressive, the runtime (and compiler) might even be written mostly in it, though that requires having a compiler for the language to start with. Most C compilers are written in C for example, and assume that you can find a C compiler for the system in question already. If the HLL isn't expressive enough to do what it needs to, or has runtime requirements that can't be implemented in terms of the language itself, then the runtime is usually written in ASM or C.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>psycopathicteen</b> [ Mon Aug 09, 2010 8:16 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />So what if I knew somebody who knows C.  What if I made a code that could rotate a sprite in ASM.  Is there anyway my "friend" can use my code?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Mon Aug 09, 2010 8:19 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Look up the <a href="http://en.wikipedia.org/wiki/Calling_convention" class="postlink">calling convention</a> for your friend's C compiler (key words: prolog and epilog), follow them, and your assembly subroutines will fit in with a main program written in C.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>koitsu</b> [ Mon Aug 09, 2010 10:51 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Topic moved to the General Stuff forum.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Tue Aug 10, 2010 4:46 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Continuing from ReaperSMS's good intro, HLLs usually reduce the code you write to mere computation and subroutine calls, and provide subroutines to do I/O, for example printf(). When you just deal with computation and subroutine calls, it's easier to see how a language can work on different systems without much trouble. The high-level code computes things and calls routines to do things, and these routines are implemented to do that thing on each platform, with the same interface to the computation.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>psycopathicteen</b> [ Tue Aug 10, 2010 7:13 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">Look up the <a href="http://en.wikipedia.org/wiki/Calling_convention" class="postlink">calling convention</a> for your friend's C compiler (key words: prolog and epilog), follow them, and your assembly subroutines will fit in with a main program written in C.</div>
<br />
<br />I guess I'll go ask the people at neoflash.com for the calling conventions of the compilers they're using.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>mic_</b> [ Tue Aug 10, 2010 12:32 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The C compiler from the SNES-SDK uses the following convention:
<br />
<br />Function arguments are pushed on the stack right-to-left. Pointers take 4 bytes; the bank is pushed first, then the offset. Byte- and word-sized arguments are both pushed as words.
<br />
<br />Long addressing is used for the jump/return (JSL/RTL). So the first (leftmost) argument will be at S+4 when entering a function. You could read it using  LDA 4,S.
<br />
<br />Return values are passed through the directpage variable tcc__r0 (which is 16-bit). There are a bunch of other variables declared by the standard library, named tcc__r0h, tcc__r1, tcc__r1h etc. They are used as temporaries, indirect pointers and whatnot.
<br />
<br />A, X and Y are all most likely 16-bit upon entering a function, but it might still be a good idea to make sure using a REP. It might also be a good idea to save/restore all registers (including B and P) that you modify in your function.
<br />
<br />This is what a memcpy function could look like (untested):
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">; void memcpy&#40;char *dest, char *src, int length&#41;<br />memcpy:<br />php<br />rep&nbsp; #$30<br />phx<br />phy<br />phb<br />stz&nbsp; tcc__r0&nbsp; ; use as an indirect pointer<br />lda&nbsp; 12,s&nbsp; ; dest bank<br />sta&nbsp; tcc__r0h<br />lda&nbsp; 10,s&nbsp; ; dest offset<br />tay<br />lda&nbsp; 14,s&nbsp; ; src offset<br />tax<br />lda&nbsp; 18,s&nbsp; ; length<br />sta&nbsp; tcc__r1<br />lda&nbsp; 16,s&nbsp; ; src bank<br />sep&nbsp; #$20<br />pha<br />plb<br />-:<br />&nbsp; lda.w&nbsp; $0000,x<br />&nbsp; sta&nbsp; &#91;tcc__r0&#93;,y<br />&nbsp; inx<br />&nbsp; iny<br />&nbsp; rep&nbsp; #$20 <br />&nbsp; dec&nbsp; tcc__r1<br />&nbsp; sep&nbsp; #$20<br />&nbsp; bne&nbsp; -<br />plb<br />ply<br />plx<br />plp<br />rtl<br /></div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>psycopathicteen</b> [ Tue Aug 10, 2010 5:37 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I think I get it.  Thankyou very much.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>psycopathicteen</b> [ Tue Aug 10, 2010 7:26 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Here is a code that renders 1 line of 8 affine-mapped pixels and stores the line of pixels in planar format in tcc_r9 and tcc_r9h.  Don't know if it works yet, I'll try testing it Tomarrow if I have time.
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">;; affine&#40;pixel_start_x, pixel_start_y, pixel_inc_x, pixel_inc_y&#41;<br /><br /><br />affine:<br /><br />php<br />rep #$30<br />phy<br />phx<br />phb<br /><br />sep #$20<br />lda 16,s&nbsp; &nbsp; &nbsp; ;; bank<br />pha<br />plb<br />rep #$20<br /><br />lda 18,s<br />sta tcc_r0&nbsp; &nbsp; ;; x pixel increment<br />lda 22,s<br />sta tcc_r0h&nbsp; &nbsp;;; y pixel increment<br /><br />lda 14,s<br />sta tcc_r1h<br />clc<br />adc tcc_r0h<br />sta tcc_r2h<br />clc<br />adc tcc_r0h<br />sta tcc_r3h<br />clc<br />adc tcc_r0h<br />sta tcc_r4h<br />clc<br />adc tcc_r0h<br />sta tcc_r5h<br />clc<br />adc tcc_r0h<br />sta tcc_r6h<br />clc<br />adc tcc_r0h<br />sta tcc_r7h<br />clc<br />adc tcc_r0h<br />sta tcc_r8h<br /><br />lda 10,s<br />sta tcc_r1+1<br />clc<br />adc tcc_r0<br />sta tcc_r2+1<br />clc<br />adc tcc_r0<br />sta tcc_r3+1<br />clc<br />adc tcc_r0<br />sta tcc_r4+1<br />clc<br />adc tcc_r0<br />sta tcc_r5+1<br />clc<br />adc tcc_r0<br />sta tcc_r6+1<br />clc<br />adc tcc_r0<br />sta tcc_r7+1<br />clc<br />adc tcc_r0<br />sta tcc_r8+1<br /><br />sep #$20<br />lda &#40;tcc_r1h&#41;<br />ror<br />rol tcc_r9<br />ror<br />rol tcc_r9+1<br />ror<br />rol tcc_r9h<br />ror<br />rol tcc_r9h+1<br />lda &#40;tcc_r2h&#41;<br />ror<br />rol tcc_r9<br />ror<br />rol tcc_r9+1<br />ror<br />rol tcc_r9h<br />ror<br />rol tcc_r9h+1<br />lda &#40;tcc_r3h&#41;<br />ror<br />rol tcc_r9<br />ror<br />rol tcc_r9+1<br />ror<br />rol tcc_r9h<br />ror<br />rol tcc_r9h+1<br />lda &#40;tcc_r4h&#41;<br />ror<br />rol tcc_r9<br />ror<br />rol tcc_r9+1<br />ror<br />rol tcc_r9h<br />ror<br />rol tcc_r9h+1<br />lda &#40;tcc_r5h&#41;<br />ror<br />rol tcc_r9<br />ror<br />rol tcc_r9+1<br />ror<br />rol tcc_r9h<br />ror<br />rol tcc_r9h+1<br />lda &#40;tcc_r6h&#41;<br />ror<br />rol tcc_r9<br />ror<br />rol tcc_r9+1<br />ror<br />rol tcc_r9h<br />ror<br />rol tcc_r9h+1<br />lda &#40;tcc_r7h&#41;<br />ror<br />rol tcc_r9<br />ror<br />rol tcc_r9+1<br />ror<br />rol tcc_r9h<br />ror<br />rol tcc_r9h+1<br />lda &#40;tcc_r8h&#41;<br />ror<br />rol tcc_r9<br />ror<br />rol tcc_r9+1<br />ror<br />rol tcc_r9h<br />ror<br />rol tcc_r9h+1<br /><br />plb<br />plx<br />ply<br />plp<br />rtl<br /><br /></div>

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>