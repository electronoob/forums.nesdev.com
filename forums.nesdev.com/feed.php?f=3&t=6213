<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=3&amp;t=6213" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2010-03-27T06:12:32-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=3&amp;t=6213</id>
<entry>
<author><name><![CDATA[cpow]]></name></author>
<updated>2010-03-27T06:12:32-07:00</updated>
<published>2010-03-27T06:12:32-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6213&amp;p=59078#p59078</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6213&amp;p=59078#p59078"/>
<title type="html"><![CDATA[PPU Memory Access per-cycle list?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6213&amp;p=59078#p59078"><![CDATA[
<div class="quotetitle">beaub wrote:</div><div class="quotecontent"><br />So what's the story with cycle 323 and 331?<br /><br />It appears as though the PPU pre-fetches the last 2 tiles per-scan line and these cycles essentially setup the pre-fetched tiles to the right location in memory for the next scan line to fetch them from?<br /><br />I noticed that after the first scan line, each line after that begins at an address 2 more than the previous one (2 tiles more).<br /><br />Can someone explain this a bit better? Or acknowledge this? Is there a good document on what the hardware really does to pre-cache these tiles?<br /><br />Thanks again.<br /></div><br /><br />This is one of the reasons for the pre-render scanline, from what I can tell.  It fills what I call the "pixel pipeline" for the first rendered scanline.<br /><br />In each scanline the two tile fetches at the end of the scanline are for the next one.  <br /><br />Consider the case where the X-scroll is set to 7.  That means that 1 pixel from the first tile and 7 pixels from the second tile need to be displayed right away when the PPU starts rendering the next scanline.  If it had to fetch the data for those two tiles at the beginning of the scanline there'd be missing graphics on the left side [It takes 8 PPU clocks to fetch all the pieces required to render a tile, 1 NT byte, 1 AT byte, and 2 tile planes].  <br /><br />So the 2-tile fetches fill a 16-bit shift register ["pixel pipeline"] which is siphoned off at the X-scroll position when rendering the scanline.  Then as the subsequent tiles are fetched they fill the second 8-bits of tte 16-bit shifter for seamless rendering.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3705">cpow</a> — Sat Mar 27, 2010 6:12 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[beaub]]></name></author>
<updated>2010-03-26T20:48:37-07:00</updated>
<published>2010-03-26T20:48:37-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6213&amp;p=59075#p59075</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6213&amp;p=59075#p59075"/>
<title type="html"><![CDATA[PPU Memory Access per-cycle list?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6213&amp;p=59075#p59075"><![CDATA[
So what's the story with cycle 323 and 331?<br /><br />It appears as though the PPU pre-fetches the last 2 tiles per-scan line and these cycles essentially setup the pre-fetched tiles to the right location in memory for the next scan line to fetch them from?<br /><br />I noticed that after the first scan line, each line after that begins at an address 2 more than the previous one (2 tiles more).<br /><br />Can someone explain this a bit better? Or acknowledge this? Is there a good document on what the hardware really does to pre-cache these tiles?<br /><br />Thanks again.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4307">beaub</a> — Fri Mar 26, 2010 8:48 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Dwedit]]></name></author>
<updated>2010-03-23T21:52:41-07:00</updated>
<published>2010-03-23T21:52:41-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6213&amp;p=58924#p58924</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6213&amp;p=58924#p58924"/>
<title type="html"><![CDATA[PPU Memory Access per-cycle list?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6213&amp;p=58924#p58924"><![CDATA[
Look at the Nintendulator source code.  It's the easiest to read summary of what the PPU does at each cycle.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=53">Dwedit</a> — Tue Mar 23, 2010 9:52 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[cpow]]></name></author>
<updated>2010-03-23T21:45:06-07:00</updated>
<published>2010-03-23T21:45:06-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6213&amp;p=58923#p58923</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6213&amp;p=58923#p58923"/>
<title type="html"><![CDATA[Re: PPU Memory Access per-cycle list?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6213&amp;p=58923#p58923"><![CDATA[
<div class="quotetitle">beaub wrote:</div><div class="quotecontent"><br />what address does the PPU read per-cycle for a frame? <br /><br />It's mostly hard to determine when to reset the address from the latch (V=T in loopy terms) during rendering cycles.<br /><br />Thanks.<br /></div><br /><br />I certainly won't claim expert on this, but if you're looking for what the PPU is doing, NESICIDE2 gives a cycle-by-cycle dump.  It includes real PPU fetches, garbage fetches, and the extra cycle.  It also shows when the CPU is doing accesses to the PPU memory.<br /><br />It is <a href="http://www.gitorious.org/nesicide/nesicide2-master" class="postlink">here</a>.  Unfortunately there's no installer yet but if you ask on #nesicide or here someone can probably build you one.  [I'm hoping for some installer help!]<br /><br />The dump I'm talking about is available in the Execution Inspector by clicking on "Show PPU Execution" checkbox.  The Execution Inspector is in the menus View-&gt;Debugger-&gt;Execution Inspector.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3705">cpow</a> — Tue Mar 23, 2010 9:45 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[beaub]]></name></author>
<updated>2010-03-23T19:51:44-07:00</updated>
<published>2010-03-23T19:51:44-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=6213&amp;p=58919#p58919</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=6213&amp;p=58919#p58919"/>
<title type="html"><![CDATA[PPU Memory Access per-cycle list?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=6213&amp;p=58919#p58919"><![CDATA[
If all PPU registers are 0, and the cart does absolutely nothing (or not present), what address does the PPU read per-cycle for a frame? IE:<br />0: 0x2000<br />1: 0x2000<br />2: 0x2000<br />3: 0x2001<br />4: 0x2001<br />5: 0x2001<br />6: 0x2001<br />7: 0x2001<br />8: 0x2001<br />9: 0x2001<br />10: 0x2001<br />11: 0x2002<br />12: 0x2002<br />13: 0x2002<br />14: 0x2002<br />15: 0x2002<br />16: 0x2002<br />17: 0x2002<br />18: 0x2002<br />19: 0x2003<br /><br />I am trying to get cycle/pixel accurate using loopy_v/t. It would be a great resource if known cycle/pixel accurate emulators had this information in a table format.<br /><br />I've looked at other emulators source, but a lot of them do not use the full PPU address space as laid out in an actual NES. IE: Access name tables via nametable[x] instead of PPU.Memory[0x2000 + x].<br /><br />It's mostly hard to determine when to reset the address from the latch (V=T in loopy terms) during rendering cycles.<br /><br />Thanks.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4307">beaub</a> — Tue Mar 23, 2010 7:51 pm</p><hr />
]]></content>
</entry>
</feed>