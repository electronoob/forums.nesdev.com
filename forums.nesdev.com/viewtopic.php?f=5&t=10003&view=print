<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - improvised code vs engine code</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">improvised code vs engine code</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=5&amp;t=10003">http://forums.nesdev.com/viewtopic.php?f=5&amp;t=10003</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>psycopathicteen</b> [ Tue Apr 09, 2013 10:06 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>improvised code vs engine code</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I sometimes have trouble determining what codes should be improvised, and what codes I should make an engine for.  Here are pros and cons of improvised and engine codes:<br /><br />Improvised:<br />+easier to get something onscreen<br />+doesn't require as much planning<br />-could make programming more difficult in the long run<br /><br /><br />Engine:<br />+could eventually make programming easier in the long run<br />-more difficult to get something onscreen<br />-requires a lot of planning<br />-can impose limitations on game design<br /><br />I believe that there should be a balance between these two approaches, but I don't know exactly where to draw the line.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Tue Apr 09, 2013 10:16 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: improvised code vs engine code</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Begin to improvise one game. Once you think you have a bit of structure to its program, refactor any functionality that you think another game could share into an engine. Begin developing this second game in parallel, and continue this refactoring until the games are sharing as much engine code as needed. That's what I'm doing with a couple Python games I'm working on, both of which I plan to port back to the NES.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Tue Apr 09, 2013 10:39 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: improvised code vs engine code</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />If you could code the game without an engine, you would, since that gives the most flexibility. So an engine is a tradeoff between the game and some other resource.<br /><br />* Reduce mental difficulty with engine's abstractions<br />* Share effort among games<br />* Learn about engines<br /><br />My take is that you want to start out without an engine, then when you see clear advantages, snapshot and try building an engine in, then see whether it was worth it. I think that tepples' approach of making the engine so central to development might hamper the games, with you focusing more on sharing it between games than letting the games expand where they want to. I've tried this in other contexts and often let the sharability overshadow eveything. A comical extreme would be to end up with both games being the same.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>TmEE</b> [ Tue Apr 09, 2013 10:59 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: improvised code vs engine code</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Making a game instead of engine gives you a straight single goal to reach.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Tue Apr 09, 2013 1:13 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: improvised code vs engine code</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I don't know how you could manage to code a game without coding an engine.<br />Even if you did it would quickly be a completely unusable mess of unmaintainable code. Heh, even game engines tend to finish like this, especially when written in assembly language.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>TmEE</b> [ Tue Apr 09, 2013 1:54 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: improvised code vs engine code</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Engine is part of the game, but that engine is made for that specific game not all would be games that are not yet conceived. You have less to worry, as you know exactly what your game needs and can implement it, no time spent on thinking about things others may want and then implementing them in a way others may like.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Shiru</b> [ Tue Apr 09, 2013 2:58 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: improvised code vs engine code</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I always stick to the concept 'if you want to make a game, make a game, not an engine'. It worked well for me for a long time. During years, I have seen many people who wanted to make a game, but go with 'make an engine' way have never got to making the game itself (lost enthusiasm, never 'finished' an engine etc).<br /><br />Engines may be a good idea for modern platforms in some cases, but for retro platforms where resources are very limited and universal solutions aren't working well, it seems to not be effective.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Tue Apr 09, 2013 4:02 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: improvised code vs engine code</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Perhaps someone thinking of making an engine should hook up with someone in the ROM hacking community who makes total conversion hacks.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Wed Apr 10, 2013 2:01 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: improvised code vs engine code</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Ok can someone please define how you could write a game without writing an engine ?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>nitro2k01</b> [ Wed Apr 10, 2013 3:39 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: improvised code vs engine code</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">Ok can someone please define how you could write a game without writing an engine ?</div><br />I think what is meant by engine here is modularity and separation of code and data. Writing something that is an engine, would, at the extreme end, means that you could affect every aspect of the gameplay without touching machine code, and only touching data/macro code.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Shiru</b> [ Wed Apr 10, 2013 7:32 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: improvised code vs engine code</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Yes, an engine is a separate entity, with most or all aspects being data-controlled. Making a game without an engine in fact means that you write similar code as an engine would have, but with tons of short cuts, you don't need to keep it all data-controlled, can hardcode many things, omit subsystems (for example, don't code any things that aren't needed for a particular game), etc.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Wed Apr 10, 2013 7:49 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: improvised code vs engine code</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I have a hard time to see how for example you could have a platformer and a RPG running on the same engine without changing a single line of code.<br /><br />Regardless, considering how limited the NES ROM and RAM are, all shortcuts are good to be taken.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Wed Apr 10, 2013 7:58 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: improvised code vs engine code</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Platformers and RPGs might share the tile-grid updating code, but then they might not. Platformer maps tend to be wide horizontally and narrow vertically, while RPG maps tend to be closer to square. This influences the level compression. Platformers and action RPGs might share some collision detection code; movement behaviors would of course be different.<br /><br />But one could still take the engine from one platformer game and make a total conversion mod of it resulting in another platformer game. Think Mega Man to Darkwing Duck.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Movax12</b> [ Wed Apr 10, 2013 8:13 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: improvised code vs engine code</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />A single engine idea is too all-encompassing. Keeping code organized in small modules that perform a specific task is still worth while though. If the code is kept specific, there is no need for runtime checks for different engine options. Reading controller input, for example: Generally you are going to want to be able to read all buttons, and if you only need button A, the slight overhead of doing so by reusing controller code is not a big deal, plus the benefits of abstraction are still there.<br /><br />Example, to access the NES controller, the code/module is included somewhere, then I include this file when needed:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">; ca65<br /><br />.ifndef _INT_CONTROLLER_H_<br />_INT_CONTROLLER_H_ = 1<br /><br />.scope iController<br />&nbsp; &nbsp; <br />&nbsp; &nbsp; ; function<br />&nbsp; &nbsp; .import refresh<br />&nbsp; &nbsp; <br />&nbsp; &nbsp; ; variables<br />&nbsp; &nbsp; .importZP pressed<br />&nbsp; &nbsp; .importZP pressedLastFrame&nbsp; <br />&nbsp; &nbsp; .importZP pressedNew <br />&nbsp; &nbsp; .importZP releasedNew<br />&nbsp; &nbsp; <br />.endscope<br />.endif<br /></div><br /><br />In use:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">if iController::pressedNew &amp; #BUTTON_START<br />&nbsp; &nbsp;; do stuff if start pressed<br />endif<br /></div><br /><br />I think the key is staying organized and keeping things that are separate, separate. Using namespaces this way, you could avoid ever having to directly reference a global variable.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Celius</b> [ Thu Apr 11, 2013 10:51 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: improvised code vs engine code</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I like the idea of focusing on sub-engines rather than trying to make one big engine. You make a framework to piece together sub-engines, and then you can either reuse old sub-engines you've created, such as a sound engine, or make a new one on the fly. You can also tweak reused pieces to fit the needs of your game. I always reuse my template for putting these pieces together, and just change the mapper specific stuff like bankswitching. Then I'll usually go as far as reusing a sound engine, math libraries (includes multiplication, division, random number generation, etc.), perhaps sprite mapping code, and PPU updating code (By that I mean the piece that physically writes buffers to $2007). I never reuse game logic code, anything relating to AI, or even map decoding. All of these will depend on the type of game I'm making.<br /><br />If you plan on making more than one game, I think it's important to keep your code modularized so you can reuse pieces of it. I can gladly say I will NEVER have to write another math function, no matter how many bits I'm multiplying together. All I have to do is include my math file, and make sure my variables are declared properly. Also common macros, like reading a controller. 3 handy variables to have the ability to reference immediately: ControlCurrent, ControlPrevious, ControlTrigger. The first two are obvious. Didn't know what to call the last one. It contains specifically, newly pressed buttons. Since I always forget the formula of how to get that value, I'm glad I don't have to figure it out again each time.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>