<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - PC compatible text modes</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">PC compatible text modes</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=23&amp;t=14715">http://forums.nesdev.com/viewtopic.php?f=23&amp;t=14715</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>3</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Sat Aug 20, 2016 2:04 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>PC compatible text modes</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />How does text mode works on PC compatibles? How similar are those still done today on modern computers? How similar was it to, e.g. NES BG graphics?<br /><br />The only information I found is that the orignal IMB PC had a fixed 80x25 character resolution and was monochrome by default. You could buy expensive extention carts to get colour and/or higher resolution graphics, but the PC was already natively handling colour internally. I think it has 16 colours (4 shades of gray and 12 full hues colours at 2 level of brightness). It seems to use a tile system which allows 256 tiles and a background and foreground color for each of them but the background can only be among the &quot;dark&quot; set of 8 colours. (The extra bit is used for blinking, which is very stupid since that effect could be done in software.)<br /><br />As such each caracter is definied as a &quot;word&quot;, 1 byte for attribute and 1 byte for character. But how does the program mantain compatibility if the terminal is larger than 80x25 ? Do they allow to modify tiles like NES does with CHR-RAM ? But if you don't know what is the size of the characters in the first place, how is it done ?<br /><br />Is there somewhere a comprehensive list of graphic modes for PCs ? It seems I cannot find any. My understanding is that in bitmap modes, the first PCs could only draw CGA, and thus be less colorful than text mode where all 16 colours could be used anywhere, but I'm not even sure about that. Eventually, 16-colour, 256 colour and 65536 colour and 32k colour graphical mode became common.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Sat Aug 20, 2016 2:33 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: PC compatible text modes</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I believe it's basically a &quot;CHR-RAM&quot; kind of situation, and a lot of the setup of font modes was software driven. I think the &quot;default&quot; font sets were stored in a PC's BIOS and copied into video RAM when you change the mode via some BIOS routine (int 10h or something). There's more options as you progress from CGA to EGA to VGA, but I don't remember any of the details anymore. Everything that you speculated sounds correct to me, though.<br /><br />Digging through some of my old DOS code, I found stuff that reads the 8x8 font from the BIOS (found at $FFA6E) and uses that as a convenient font set instead of having to generate one in my own program. I can't seem to find anything that attempts to change the font set, though I know I did it at some point.<br /><br />You can bypass the BIOS routines, though, and mess with the hardware registers directly too. I don't know how common that was with CGA/EGA but it got really popular to do this with VGA (was especially useful for scrolling). So, in some cases it'd be hard to compile a standard list of available resolutions/modes, 'cause a lot of permutations of the settings have been attempted over the years!

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Sat Aug 20, 2016 2:42 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: PC compatible text modes</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />This article seems to have a lot of useful information:<br /><a href="https://en.wikipedia.org/wiki/VGA-compatible_text_mode" class="postlink">https://en.wikipedia.org/wiki/VGA-compatible_text_mode</a>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sat Aug 20, 2016 3:17 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: PC compatible text modes</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />MDA has CHR ROM. EGA and VGA have CHR RAM. I don't know about CGA.<br /><br />Some pre-EGA video cards will cause snow on the video if VRAM is written outside blanking.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Sat Aug 20, 2016 4:25 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: PC compatible text modes</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">The only information I found is that the orignal IBM PC had a fixed 80x25 character resolution and was monochrome by default.<br /></div>That's the MDA card. It was $300 when new.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"> You could buy expensive extension cards to get colour and/or higher resolution graphics, but the PC was already natively handling colour internally.<br /></div>Those are: the CGA, the <s>PGA</s> <em>PGC</em>, and &quot;no it wasn't&quot;.<br /><br />The CGA was not more expensive that the MDA when new, and the CGA and MDA were both launch peripherals. (However, the CGA 5153 monitor was <em>not</em>. Early CGA card users had to use the CGA's awkward composite video output)<br /><br /><s>PGA</s> <a href="https://en.wikipedia.org/wiki/Professional_Graphics_Controller" class="postlink"><em>PGC</em></a> was later and thousands of dollars more.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I think it has 16 colours (4 shades of gray and 12 full hues colours at 2 level of brightness).<br /></div>See RGBI video.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">(The extra bit is used for blinking, which is very stupid since that effect could be done in software.)<br /></div>In practice, no, it couldn't. The original XT was just too slow for that to be practical.<br /><br />Additionally, there is a toggle that disables that, so that you can get bright backgrounds.<br />CGA: port 3D8h &amp; 0x20<br />MDA: port 3B8h &amp; 0x20<br />EGA/VGA: port 3C0h function 10h &amp; 0x8<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">How does the program maintain compatibility if the terminal is larger than 80x25 ?<br /></div>The XT BIOS implemented routines that specifically stored the current width of the screen, and could be told to adjust to whatever the physical resolution was.<br /><br />See also the software <a href="http://www.linuxfromscratch.org/hints/downloads/files/svgatextmode.txt" class="postlink">SVGATextMode</a> <br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Do they allow to modify tiles like NES does with CHR-RAM ?<br /></div>Only with the EGA and newer.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">But if you don't know what is the size of the characters in the first place, how is it done ?<br /></div>Characters are only ever 8 or 9 dots wide. There is a register that controls this, starting with the Hercules and EGA cards.<br /><br />Characters can be anywhere from 1 to 64 scanlines tall. There is a register that controls that, too. (port 3C4h function 9)<br /><br />Please see <!-- m --><a class="postlink" href="https://www-user.tu-chemnitz.de/~kzs/tools/whatvga/vga.txt">https://www-user.tu-chemnitz.de/~kzs/to ... ga/vga.txt</a><!-- m --><br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Is there somewhere a comprehensive list of graphic modes for PCs ?<br /></div>Please look up <a href="http://www.cs.cmu.edu/~ralf/files.html" class="postlink">Ralf Brown's interrupt list</a>.<br /><br /><a href="http://www.ctyme.com/intr/rb-0069.htm" class="postlink">Interrupt 10h, function AH=0</a><br /><br /><div class="quotetitle">rainwarrior wrote:</div><div class="quotecontent">Digging through some of my old DOS code, I found stuff that reads the 8x8 font from the BIOS (found at $FFA6E)<br /></div><a href="http://www.ctyme.com/intr/rb-6169.htm" class="postlink">Interrupt 43h</a>.<br /><br /><div class="quotetitle">rainwarrior wrote:</div><div class="quotecontent"> I can't seem to find anything that attempts to change the font set, though I know I did it at some point.<br /></div><a href="http://www.ctyme.com/intr/rb-0136.htm" class="postlink">Interrupt 10h, AX=1100h.</a><br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I don't know how common [reprogramming the CGA's registers was] was with CGA/EGA but it got really popular to do this with VGA<br /></div>It was very rare with CGA. As far as non-modern options go, it's basically just California Games (which used timed code to change between the CGA's red-green-yellow video mode and the cyan-magenta-white video mode)<br /><br />Title screen: <!-- m --><a class="postlink" href="http://www.reenigne.org/blog/crtc-emulation-for-mess/">http://www.reenigne.org/blog/crtc-emulation-for-mess/</a><!-- m --><br />Footbag: <!-- m --><a class="postlink" href="http://www.mobygames.com/game/dos/california-games/screenshots/gameShotId,7722/">http://www.mobygames.com/game/dos/calif ... otId,7722/</a><!-- m --><br /><br /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">I don't know about CGA.<br /></div>CGA actually shares the same physical ROM for the character generator with the MDA card. One half holds the MDA font, the other half holds two variants (one rarely seen) for the CGA.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Joe</b> [ Sat Aug 20, 2016 4:36 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: PC compatible text modes</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">How does text mode works on PC compatibles?</div><br />A portion of video RAM is used for character-attribute byte pairs. One byte selects the character from ROM (CGA, MDA) or video RAM (EGA, VGA). The other byte selects foreground and background color (up to 4 bits each), attributes like blinking and underline (where available/enabled), and even has one bit that can do double-duty as a color selection bit and as a 9th character selection bit, for up to 512 unique characters on the screen at a time at the expense of some flexibility in color choice (EGA, VGA).<br /><br />Each character is displayed either 8 or 9 pixels wide, with the 9th column being either empty or a duplicate of the 8th column depending on character value and the configuration of the card. The screen is either 40 or 80 characters wide. Character height is programmable, but typical height values are 8 pixels, 14 pixels, and 16 pixels tall, and the character height is usually chosen to make the screen 25 characters tall.<br /><br /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">How similar are those still done today on modern computers?</div><br />Most modern video cards implement a pretty good VGA simulation in hardware (and maybe firmware). From a software perspective, a modern video card running in VGA mode is usually indistinguishable from an IBM VGA.<br /><br /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">How similar was it to, e.g. NES BG graphics?</div><br />Pretty similar. You have a grid of tiles and their attributes. In some ways it's more flexible (palette is set for each character instead of for groups of 4 characters), in other ways it's less flexible (only 2 colors per character).<br /><br /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">But how does the program mantain compatibility if the terminal is larger than 80x25 ?</div><br />Programs that used text mode as a terminal would usually interact through DOS or BIOS calls, which would mostly abstract away the difference. Programs that directly manipulate video RAM would have trouble if they made assumptions about the video card's current state. Programs that directly set a high-density text mode like that would be aware that the terminal is larger than normal and have no trouble.<br /><br /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">Do they allow to modify tiles like NES does with CHR-RAM ?</div><br />For CGA and MDA, no. For EGA and VGA, yes.<br /><br /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">But if you don't know what is the size of the characters in the first place, how is it done ?</div><br />Software that modifies the tiles in video RAM will usually also reprogram the video card to a known state, including tile size.<br /><br /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">Is there somewhere a comprehensive list of graphic modes for PCs ?</div><br />No. There is a <a href="http://www.delorie.com/djgpp/doc/rbinter/it/10/0.html" class="postlink">list of BIOS video modes for PCs</a> in RBIL, where modes 00h through 07h and 0Dh through 13h are the ones that could be most easily set, but games are likely to manually program the video card registers to set their own custom mode, and this doesn't even begin to cover SVGA and beyond.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Sun Aug 21, 2016 2:39 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: PC compatible text modes</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Wow, what a mess. Those 3 letters accronyms are confusing. No wonder why backwards compatibility with old PC or DOS programs is so terrible.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Software that modifies the tiles in video RAM will usually also reprogram the video card to a known state, including tile size.</div><br />Oh, and what if the exact size we expect isn't available with a given video cart ?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Sun Aug 21, 2016 10:00 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: PC compatible text modes</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The VGA was sufficiently constrained that there wasn't really such a concept. <br /><br />At that point everyone had the same lowest common denominator:<br />31.5 kHz hsync<br />choice of 60 or 70 Hz vsync <br />choice of one of two pixel clocks: 28.3 MHz and 25.2 MHz<br />optional toggle to halve pixel clock<br />an optional toggle to doublescan <br />guaranteed minimum horizontal underscan of 80%; guaranteed minimum vertical underscan of 90%<br /><br />In practice, this meant that the &quot;tweak&quot; modes were always 320, 360, 640, or 720 pixels wide, and 200, 240, 350, 400, or 480 scanlines tall. Hence the weird resolution of the Windows 95 animated startup and shutdown screens. <span style="font-size: 50%; line-height: normal">(The 350 scanline-high mode was actually controlled by the monitor: the card would say &quot;please stretch this extra vertically&quot;, even though the exact timing is identical to the 400-scanline mode)</span><br /><br />There was a piece of software at the time called <a href="http://files.mpoli.fi/unpacked/software/programm/asm/tweak10.zip/tweak.doc" class="postlink">Tweak</a> which let you explore this, as well as load the settings of your video card and &quot;black box&quot; away the pixel clock selection.<br /><br />Reprogramming the video mode registers was relatively rare until the VGA card, so &quot;tweaked&quot; video modes for the CGA were basically limited to changing the character cell height — see <!-- m --><a class="postlink" href="http://8088mph.blogspot.com/2015/04/cga-in-1024-colors-new-mode-illustrated.html">http://8088mph.blogspot.com/2015/04/cga ... rated.html</a><!-- m --> . Trixter has make a &quot;<a href="http://www.oldskool.org/pc/cgacomp" class="postlink">authentic CGA calibration</a>&quot; program that implies that the amount of underscanning of a &quot;real&quot; CGA monitor should be enough to draw a just-barely-overscanned 720x240 pixels.<br /><br />Starting with the EGA, people usually used the planar graphics mode instead of the tiled text mode; the only instance I remember of explicitly using the EGA text mode in clever ways is Megazeux ... and the only VGA <em>game</em> instance I can remember is <a href="http://www.excelsior-rpg.com/ex1.htm" class="postlink">Excelsior</a>.<br /><br />—<br /><br />A lot of early VGA compatible cards used the explicitly reserved settings at <a href="https://www-user.tu-chemnitz.de/~kzs/tools/whatvga/vga.txt" class="postlink">register 3C2h &amp; 0x0C</a> to add two more clock selections, most often 36 MHz and 40 MHz, explicitly for the 800x600@56Hz graphics mode and something compatible with the VT100's 132x25 text mode.<br /><br />Later video cards either added a large variety of physical clocks—I remember one card that could choose between 32 different frequencies. Even later we finally got good enough at making stable enough PLLs to allow almost-arbitrary pixel clocks.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Banshaku</b> [ Sun Aug 21, 2016 3:55 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: PC compatible text modes</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Reading all those messages make me feel nostalgic of the dos days  <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />  I remember making text routine that would write at 0xB000 since it was faster than using the bios ones . <br /><br />@Bregalad<br /><br />If you want and old book about pc programming in french, Micro Application had &quot;la bible du pc&quot;'which I remember using a long time ago.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Joe</b> [ Sun Aug 21, 2016 3:59 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: PC compatible text modes</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">No wonder why backwards compatibility with old PC or DOS programs is so terrible.</div><br />Most compatibility issues for old PC software have nothing at all to do with the video card. VGA has good backwards compatibility with CGA, MDA, and EGA, and 99% of PC video cards are VGA-compatible.<br /><br /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">Oh, and what if the exact size we expect isn't available with a given video cart ?</div><br />That wasn't really an issue. Most software didn't try to use any features beyond the base set available with VGA (or CGA/MDA/EGA, if the software was developed with that in mind) so any VGA-compatible video card would work. If you could set a video mode on one VGA-compatible card, you could be certain it would work on other VGA-compatible cards.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Sun Aug 21, 2016 5:53 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: PC compatible text modes</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">Wow, what a mess. Those 3 letters accronyms are confusing. No wonder why backwards compatibility with old PC or DOS programs is so terrible.</div><br /><br />Well, there was a straightforward progression from CGA to EGA to VGA (despite the &quot;A&quot; standing for a different word in VGA). Each backward compatible with the previous.<br /><br />Each had a 320x200 low resolution mode commonly used in games. CGA with 2-bit colour (very limited palette), EGA 4-bit, and VGA 8-bit.<br /><br />CGA text mode had 40x25 or 80x25 characters (8x8), either had the 16 colour scheme you're already familiar with. EGA added another 80x25 mode with 8x14 characters instead, which I think is the most commonly used one. EGA was also when the font set became customizable, apparently (though this remained somewhat rare to do, I think).<br /><br />There's also an 80x43 text mode (8x8) in EGA. This came up less often, but was useful for things like <a href="https://www.youtube.com/watch?v=3TftydqhYaE" class="postlink">map editors</a>. I think this was an aesthetic influence for <a href="http://www.bay12games.com/dwarves/" class="postlink">Dwarf Fortress</a>.<br /><br /><br />That's the most common stuff, I think. There's other modes and obscure details every level of this puzzle, and a bunch of other variations on graphics cards (MDA, Hercules, MCGA, etc.) but these were the most popular targets. Games mostly used the 320x200 modes for a long time. I don't think using the text modes with custom font for tiled graphics was ever very common, mostly it was just used &quot;as intended&quot; for text.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>zzo38</b> [ Sun Aug 21, 2016 6:49 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: PC compatible text modes</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I have schematics for PC CGA. In text mode you can have 80x25 tiles or 40x25 tiles, each tile with two colours selected from sixteen; if the mode register specifies flashing text enabled then you can have only eight background colours because one bit is instead used for making the text to flash. Patterns are taken from ROM, and a jumper can be used to select between two sets of patterns. The patterns for MDPA are stored in the same ROM as CGA (apparently this is so that they do not need to make two separate ROMs). Timing and some other stuff (tile height, tiles per scanline, cursor position, etc) done by the 6845 CRTC chip, which outputs the address and then the other logic in the circuit is used to read two bytes from video memory, using the address from CRTC is doubled and then the low bit of the actual address is clear for the character byte and is set for the colour byte (the low 4-bits for foreground, high 4-bits for background).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Myask</b> [ Sun Aug 21, 2016 6:55 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: PC compatible text modes</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">rainwarrior wrote:</div><div class="quotecontent">text modes with custom font for tiled graphics was ever very common, mostly it was just used &quot;as intended&quot; for text.</div><br />Do you mean like MZX and ZZT, or like the <a href="http://8088mph.blogspot.com/2015/04/cga-in-1024-colors-new-mode-illustrated.html#the_macrocom_method" class="postlink">&quot;Macrocom Method&quot;</a>?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Sun Aug 21, 2016 7:29 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: PC compatible text modes</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I think you lost a negation?<br /><br />Anyway, there were lots of games that used text mode for games that weren't just textual. Kroz, ZZT, all of the roguelikes ...<br /><br />I just can't think of anything contemporary other than Macrocom's and Round42 that used the shortened characters for graphics <span style="font-size: 67%; line-height: normal">(but do note the modern <a href="http://www.vcfed.org/forum/showthread.php?42849-MagiDuck-a-DOS-CGA-text-mode-game-project" class="postlink">Magiduck</a>)</span>.<br /><br />... much like I can only think of Megazeux and Excelsior for <em>games</em> that reprogrammed the font ... oh, wait, I did encounter <a href="http://www.muppetlabs.com/~breadbox/software/cgames.html" class="postlink">these ones</a> recently.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Sun Aug 21, 2016 11:24 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: PC compatible text modes</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Myask wrote:</div><div class="quotecontent"><div class="quotetitle">rainwarrior wrote:</div><div class="quotecontent">I don't think using the text modes with custom font for tiled graphics was ever very common, mostly it was just used &quot;as intended&quot; for text.</div><br />Do you mean like MZX and ZZT, or like the <a href="http://8088mph.blogspot.com/2015/04/cga-in-1024-colors-new-mode-illustrated.html#the_macrocom_method" class="postlink">&quot;Macrocom Method&quot;</a>?</div><br />Nope, I'd never used Megazeux, or heard of Macrocom. Maybe tile replacement was more common than I thought? It really didn't come up much for me, though. Enough that I knew it existed, but not enough that I could remember any examples of it.<br /><br />There were <em>lots</em> of games that used the default font tiles to make graphics for games, I didn't mean to sound like I was excluding those with the words &quot;as intended&quot;. (The <a href="https://www.youtube.com/watch?v=fZF6tnrfAX0" class="postlink">NIBBLES.BAS</a> game which came with MS-DOS, BBS door games like <a href="http://www.capitolshrill.com/games/lord408/" class="postlink">Legend of the Red Dragon</a> often had &quot;ASCII art&quot;, lidnariq mentioned roguelikes and there's a lot of those.)<br /><br />What I meant was that I could think of very few games that replaced tiles to make custom graphics, the way you would normally do on the NES (where there isn't a default set, and games are the primary focus of the platform). Most of them stuck with the default font set, some standard text mode, and the 16 colours (2 per tile) available since CGA.<br /><br />It seems like the MSX had a text mode that did often get used that way for games (e.g. <a href="https://www.youtube.com/watch?v=QTfU9l0xdRI" class="postlink">MSX R-Type</a>), and I've wondered if the ZX colour artifacts are also due to it being based on a similar text mode hardware implementation, but I don't know too much about either of those systems, so I could be mistaken. I thought this was what Bregalad was getting at, though, the similarity between the NES tile capabilities and text modes of computers that were contemporary to it.<br /><br /><br />I think part of why is just that once you get to EGA, it only really helps you to use text mode if your game is very rigidly made of a grid of tiles (like Megazeux seems to be), or is mostly text anyway. Like, it's really convenient and you can probably update large parts of your screen efficiently, as opposed to software rendering tiles in a bitmapped screen mode. It's a huge disadvantage, of course, as soon as you want things moving smoothly between the tiles, since you don't have a &quot;sprite&quot; layer or anything like that to mix with it. By the time you got to VGA, software rendering wasn't really such a problem anymore anyway, so if you were going text, maybe you were into the ASCII aesthetic already?<br /><br /><br />The Macrocrom method is a bit curious. Yet another CGA abuse trick, I guess. There seems to be a lot of interesting obscure tricks to do with CGA.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>3</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>