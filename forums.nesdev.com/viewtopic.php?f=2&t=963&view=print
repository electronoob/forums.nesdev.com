<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - attribute tables vs multi-way scroller</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">attribute tables vs multi-way scroller</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=963">http://forums.nesdev.com/viewtopic.php?f=2&amp;t=963</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Sun Jan 15, 2006 8:15 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>attribute tables vs multi-way scroller</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Those attribute tables suck.
<br />
<br />I'm designing a platform engine that scrolls the screen to the sides as well as up and down. I'm using vertical mirroring, wich should (or so I thought!) present no problems in updating the attributes when scrolling sideways, as I'd have a huge off-screen buffer. However, the PPU has no "increment 8" mode as it has an "increment 32" one. Does that mean I really have to write the address to $2006 8 times if I want to update an attribute column? Oh, well...
<br />
<br />A different problem shows up when updating rows of attributes. Since I'm using vertical mirroring, if I mess with the attributes at the bottom of the page I may be messing with blocks that are at the top, depending on the scrolling. So, I have to keep a copy of the attributes in RAM, update only the bits I need and them write the row to the PPU.
<br />
<br />This all seems very inneficient... Isn't there a trick or something to handle attributes more efficiently?
<br />
<br />I'll just think about it a little longer... this thing is really getting in the way of my engine...
<br />
<br />EDIT: Hum... thinking better about the second problem, I guess most games don't have it because they have a status bar at the top or at the bottom, giving the programmer a buffer. I don't plan to have a status bar (wich would be difficult anyway, since the game can scroll anywhere it would be impossible to keep an area reserved for a status bar - unless using MMC5 and it's advanced mirroring control), so should I just shut the rendering off 16 pixels earlier to avoid any color glitches?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>WedNESday</b> [ Mon Jan 16, 2006 2:25 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: attribute tables vs multi-way scroller</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">...unless using MMC5 and it's advanced mirroring control...</div>
<br />
<br />That was my immediate thought. Before you do anything else, you should put more thought into using 4 NT at once as this would make for a fantastic game plus you would see no graphical glitches in any of the borders.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Mon Jan 16, 2006 9:38 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: attribute tables vs multi-way scroller</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">I don't plan to have a status bar (wich would be difficult anyway, since the game can scroll anywhere it would be impossible to keep an area reserved for a status bar - unless using MMC5 and it's advanced mirroring control)</div>
<br />Super Mario 3 just made the world 54 tiles high. Kirby's Adventure kept two parallel copies of the map spaced roughly a screen apart so that when the vertical scroll was to enter the status area, it would jump back a screen. One of the Gauntlet games used a mid-screen split to skip the status bar.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Mon Jan 16, 2006 9:50 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Well, it is the exact third consequitive time that a thread in NESDev section start from "how can I do that..." end end up with "use an MMC5". Yeah, I admit MMC5 is awsome. BUT still, cards using it are very rare, and I think its use should be reserved for very large RPG and strategy games, allowing great graphics and save feature (Just Breed enter in all those categires, hehe). I don't have anything against platformers, but MMC5 is just not worth it. Tokumaru, the problems you mentionned can be surmounted easily with any mapper. Yes, the attributes tables such, and yes, the MMC5 can fix that in ExGrafix mode ONLY so with no extra nametable feature (one-screen mirroring needed).
<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I'm designing a platform engine that scrolls the screen to the sides as well as up and down. I'm using vertical mirroring, wich should (or so I thought!) present no problems in updating the attributes when scrolling sideways, as I'd have a huge off-screen buffer. However, the PPU has no "increment 8" mode as it has an "increment 32" one. Does that mean I really have to write the address to $2006 8 times if I want to update an attribute column? Oh, well... </div> Yes. And I don't know why it hurts you so much. In a NTSC VBlank, you have enough time to upload a whole column while writing 68 times to $2006 then to $2007, including 2x30 nametable writes and 8 attribute table writes, additionnal to sprite DMA. VBlank is short, but not THAT short.<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">A different problem shows up when updating rows of attributes. Since I'm using vertical mirroring, if I mess with the attributes at the bottom of the page I may be messing with blocks that are at the top, depending on the scrolling. So, I have to keep a copy of the attributes in RAM, update only the bits I need and them write the row to the PPU. <br /></div>
<br />Yes, it is one of the worst flaws of the NES, additionally to the 8 sprites per scanline limitation.
<br />If you want to save RAM, you are able to read an attribute tile, modify the bits you want, and write it back. You DO have time to do that in VBlank if your code is efficient enough. However, in that case, you'll have to write the nametable efficiantly whith two vertical strings and not tile per tile as mentionned above, that I think you would anyway do. Doing such complicates the code, but fast it up a lot.
<br />If you want to save timem, a trick is to hold the exact copy in $3c0-$3cf and $7c0-$7cf to mirror respectivly $23c0-$23cf and $27c0-$27cf. So you don't have to recalculate adresses. I discovered that in tracing a Dragon Warrior game, but never did that in practice.
<br />It IS possible to calculate attributes normally, that means to read your map 30 tiles earlier and split all colors bit to mix them together. It is pretty hard, and innefecive in some case where it removes some flexibility. However, think about it.
<br />About color glitches, they're 100% avoidable by using vertical mirroring and an NTSC television that cuts the top and bottom 8 pixels.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Mon Jan 16, 2006 10:37 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Yeah, you got it right, I do want to make an 100% glitch-free game.
<br />
<br />Thanks for the insights Bregalad. I've been giving a LOT of thought to the rendering routine of my engine in the past few hours. I calculated everything in a way that VBlank time is enough to do all the drawing I need.
<br />
<br />Scrolling is limited to 8 pixels (1 tile wide/tall) per frame in both directions. My game uses 16x16 pixel blocks to build the world, but I'll render only half of a column/row of blocks at a time, so that in case I need to draw both (row and column = player moving diagonally) I have enough time. For simplicity's sake, when I render rows of blocks I render two full name tables worth of blocks (vertical mirroring = wider video area), so that the level's screens stay aligned with the name tables.
<br />
<br />As for the attributes, I'll keep a copy of them in RAM to modify at will (I got some free RAM to spare... 128 bytes is not a problem at all). I also accounted for them in the rendering routine and there is enough time to write a row and a column of attributes if needed.
<br />
<br />There is also time to update the palettes and do a sprite DMA.
<br />
<br />In frames that don't need attribute rendering, I use the time to update a few random BG tiles and attributes (for simple BG animation, disappearing stuff, etc).
<br />
<br />I think I found a way to update the screen that's very well suited to my game. The copy routines are HUGE though, a bunch of LDA's and STA's chained together reading from the buffers and writing to the PPU.
<br />
<br />Now regarding the mapper... I don't think using MMC5 all the time is the answer either. I feel like using it for this project though, mainly because it can address 8k worth of tiles for sprites and 4k more to the background. Using ExAttribute for a fast-paced game is counter-productive, I think. VBlank time is already short enough when we use 64 bytes of attributes... having to update the attributes at the same ratio as the name table could really slow things down.
<br />
<br />I'll try to choose some other mapper, I need something with good CHR switching (1k banks), and 16k PRG switching is fine. Scanline/cycle counter is a plus for me, although I don't really know if I'll be using it. I want to, but will depend on the kind of levels I design for the game.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Mon Jan 16, 2006 10:59 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">I'll render only half of a column/row of blocks at a time, so that in case I need to draw both (row and column = player moving diagonally) I have enough time.</div><br />Or you could render a row in one frame and then a column in the next frame if the hero isn't fast like a blue hedgehog.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I think I found a way to update the screen that's very well suited to my game. The copy routines are HUGE though, a bunch of LDA's and STA's chained together reading from the buffers and writing to the PPU.</div><br />Unrolling is a good thing if you have the ROM space.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Now regarding the mapper... I don't think using MMC5 all the time is the answer either [...]Using ExAttribute for a fast-paced game is counter-productive, I think.</div><br />How fast-paced?<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"> VBlank time is already short enough when we use 64 bytes of attributes... having to update the attributes at the same ratio as the name table could really slow things down.</div><br />But you wouldn't have to update the attributes using read-modify-write.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I'll try to choose some other mapper, I need something with good CHR switching (1k banks)</div>
<br />Can you get away with 2 KB switching for background or sprites and not using 8x16 sprites from both pattern tables simultaneously? If so, I recommend MMC3.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Mon Jan 16, 2006 11:25 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">Or you could render a row in one frame and then a column in the next frame if the hero isn't fast like a blue hedgehog.</div><br />Thought of that... but I plan to use this engine (with small modifications) in more than one game, and at least one of them will need to be fast. I've set the max player speed to 8 pixel per frame in this case, wich means I have to be prepared to draw one column AND one row of tiles if I need to.<br /><br />My original idea was to draw the full blocks, but if by any chance the player moved in both directions by an ammount that would require screen updates, I'd either get visual glitches (for not having drawn stuff that should be showing already) or choppy camera movement (if I didn't let the camera see areas that have not yet been rendered).<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Unrolling is a good thing if you have the ROM space.</div><br />Yeah, these copy routines will definately take less than 2k of space. I can live with that. It would be impossible to make a fast game otherwise.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">How fast-paced?</div><br />Well, I don't have any figures but... in the usuall way you'd have to write 8 bytes for a full column or row of on screen attributes, and using ExAttribute you'll have to write 30 or 32 bytes. It may eventually get in your way depending on how much speed you need. With the player moving at 8 pixels per frame in both directions it wouldn't be possible to use ExAttribute (it may be possible, but it'd probably be all you'd be doing - no sprite DMA, no palette updating, etc), I think.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">But you wouldn't have to update the attributes using read-modify-write.</div><br />True, but, I at least, do my reading-modifying-writing outside of VBlank, not wasting any precious cycle of it.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Can you get away with 2 KB switching for background or sprites and not using 8x16 sprites from both pattern tables simultaneously? If so, I recommend MMC3.</div>
<br />It seems like it's the logical choice, doesn't it? I can live with 2k switching for one of the pattern tables, but I'll have a hard time adjusting to not using the BG side of it for 8x16 sprites.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Mon Jan 16, 2006 1:31 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: attribute tables vs multi-way scroller</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">Super Mario 3 just made the world 54 tiles high. Kirby's Adventure kept two parallel copies of the map spaced roughly a screen apart so that when the vertical scroll was to enter the status area, it would jump back a screen. One of the Gauntlet games used a mid-screen split to skip the status bar.</div>
<br />
<br />I don't plan to have a status bar, but I do like the topic. We've dicussed these methods somewhere in here before...
<br />
<br />Skiping the status bar is the only method with no great impact on the speed of the game, but it does add extra complexity and possible small glitches.
<br />
<br />Limiting the height of the level to little less than 2 screens is the worst choice in my opinion 'cause I love big levels! I wouldn't live well with such a limitation. It is the simplest way if this height is enough for your game.
<br />
<br />Drawing things twice is a smart way of handling the problem, but also cuts your drawing time in half. This is the most creative of the methods, and that is why I like it the most.
<br />
<br />It is really interesting to see how people have managed to overcome this kind of difficulty through the years. That's one of the coolest thing about the older gaming systems.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>