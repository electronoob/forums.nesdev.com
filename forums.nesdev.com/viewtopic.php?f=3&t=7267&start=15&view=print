<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - CPU Quirks</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">CPU Quirks</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=3&amp;t=7267">http://forums.nesdev.com/viewtopic.php?f=3&amp;t=7267</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>2</strong> of <strong>2</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>cpow</b> [ Wed Dec 15, 2010 6:15 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">thefox wrote:</div><div class="quotecontent"><div class="quotetitle">NESICIDE wrote:</div><div class="quotecontent"><div class="quotetitle">tepples wrote:</div><div class="quotecontent">I seem to remember Nintendulator emulates cycle by cycle like that.</div><br /><br />I didn't come to that conclusion looking at the source for v0.975.   <img src="./images/smilies/icon_question.gif" alt=":?:" title="Question" /></div><br />I initially thought that too, but actually it does emulate cycle by cycle. Check the functions which handle different addressing modes (AM_xxx), every MemGet()/MemSet() increases cycle count.</div>
<br />
<br />I had the same thought and, indeed, that's how my emulator does it too.  However, half way through posting my "there's tons of emulators out there that do cycle-by-cycle emulation, I re-read the original suggestion.  
<br />
<br />The *difference* between the way we do it and the suggestion is that the LDA function proposed takes a number of cycles to run as an argument, keeps track of the current cycle of the LDA instruction statically, and returns when the passed-in number of cycles has been exhausted or when the instruction completes [whichever occurs first].  So, the LDA function may be called with a cycle count of 1 in which case it would only execute *one* memory-access cycle part of the LDA and then return.
<br />
<br />I do BRK/NMI/IRQ that way just so I can get the granularity necessary to pass the CPU interrupt tests.  I thought about redoing my CPU core entirely to make every instruction have a cycles parameter and return when the cycles were depleted, not necessarily when the instruction was completed.  But I wonder if an easier approach would be to just have a subordinate catch-up routine in the PPU that is called whenever the CPU notices that the number of cycles its been asked to emulate has been depleted.  That way the PPU can change state mid-CPU-instruction and the CPU can react as necessary.  Of course there'd need to be some way to stop the thing, otherwise the CPU would just keep asking for more from the PPU forever.
<br />
<br />I think there's two "cycle-based" ideas that conflict.  One is the independent cycle-based component idea, where each core runs one cycle at a time exactly as its hardware equivalent would do.  Then there's the cycle-synced components idea where each component is cycle-based and also synced at its cycle-granularity to the other components.  For the CPU/APU this is easy since they're 1:1.  For the CPU/PPU whenever the CPU runs one cycle the PPU should have run 3 or 3.2.  But, in both our cases the CPU could run ahead of the PPU because it might be doing multiple reads/writes to satisfy the completion of an LDA.  In my emulator the first two cycles of any instruction are broken apart so that the PPU/CPU are cycle-synced for those two cycles.  But once the instruction begins operation, the CPU will jump ahead of the PPU depending on how many cycles remain to be done for the instruction.
<br />
<br />Intersting thought...I might have to crack open my CPU core again.   <img src="./images/smilies/icon_cool.gif" alt="8)" title="Cool" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>beannaich</b> [ Thu Dec 16, 2010 4:03 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />It would be one hell of an undertaking, but it would be awesome once it's done! I imagine it would run horribly slow though, possibly too slow for general use? The largest concern I have is if you execute an interrupt mid-instruction, what happens to that instruction after control is returned? Is it skipped, reset, or does it go back to work as if nothing happened? I imagine the latter is true, but I can only speculate!
<br />
<br />Indeed, having a static timer inside each instructions execution method would make for tidier code, but again, if an interrupt occurred during say LDA, that cycle counter would have to be reset or the next LDA called would continue at the previous instruction's step!
<br />
<br />Let us all know how much progress you make, it would be nice to have a proof of concept at least!

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Wave</b> [ Thu Dec 16, 2010 4:13 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">beannaich wrote:</div><div class="quotecontent">It would be one hell of an undertaking, but it would be awesome once it's done! I imagine it would run horribly slow though, possibly too slow for general use? The largest concern I have is if you execute an interrupt mid-instruction, what happens to that instruction after control is returned? Is it skipped, reset, or does it go back to work as if nothing happened? I imagine the latter is true, but I can only speculate!<br /><br />Indeed, having a static timer inside each instructions execution method would make for tidier code, but again, if an interrupt occurred during say LDA, that cycle counter would have to be reset or the next LDA called would continue at the previous instruction's step!<br /><br />Let us all know how much progress you make, it would be nice to have a proof of concept at least!</div>
<br />I think interrupt waits until instruction is executed.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>MottZilla</b> [ Thu Dec 16, 2010 1:01 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />You can't interrupt an instruction mid-execution. The interrupt is serviced between instructions. Otherwise I can't imagine it being very stable at all.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Thu Dec 16, 2010 2:53 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />On the 6502, this is correct. But on the 65816, an instruction can be /ABORTed part-way through. This was intended to work with a mapper to support virtual memory.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>2</strong> of <strong>2</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>