<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - intro storyline</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">intro storyline</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=10&amp;t=1833">http://forums.nesdev.com/viewtopic.php?f=10&amp;t=1833</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>3</strong> of <strong>4</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Memblers</b> [ Mon Jul 31, 2006 11:24 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Sounds odd.  I'm not sure what's going on then.  Posting the new code (or editing the previous post with it) might shed some light (include the full NMI routine also).
<br />
<br />Often a good thing to do in cases like this is step through the code with a debugger and see what happens there.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lynxsolaris</b> [ Tue Aug 01, 2006 5:52 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Memblers wrote:</div><div class="quotecontent">Sounds odd.  I'm not sure what's going on then.  Posting the new code (or editing the previous post with it) might shed some light (include the full NMI routine also).<br /></div>
<br />
<br />
<br />Memblers,
<br />
<br />Here is the code in its entirety:
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent"><br />&nbsp;.inesprg&nbsp; &nbsp;1<br />&nbsp;.ineschr&nbsp; &nbsp;1<br />&nbsp;.inesmap&nbsp; &nbsp;0<br />&nbsp;.inesmir&nbsp; &nbsp;1<br />&nbsp;<br />&nbsp;<br />&nbsp;<br />&nbsp;.zp<br />text_flag = $00<br />&nbsp;<br />&nbsp;.bss<br />&nbsp;<br />&nbsp;<br />&nbsp;.code<br />&nbsp;.org $8000<br />&nbsp;.bank 0<br />&nbsp;<br />reset: <br />&nbsp;sei<br />&nbsp;cld<br />&nbsp;<br />&nbsp;ldx #$40<br />&nbsp;stx $4017<br />&nbsp;<br />&nbsp;ldx #$ff<br />&nbsp;txs<br />&nbsp;inx<br />&nbsp;stx $2000<br />&nbsp;stx $2001<br />&nbsp;ldx #$99<br />&nbsp;stx text_flag<br />&nbsp;<br />&nbsp;jsr wait_vblank<br />&nbsp;jsr wait_vblank<br />&nbsp;<br />&nbsp;;load color palette first<br />&nbsp;lda #$3F<br />&nbsp;sta $2006<br />&nbsp;lda #$00<br />&nbsp;sta $2006<br />&nbsp;<br />&nbsp;ldx #$00<br />loop_pal:<br />&nbsp;lda color_pal,X<br />&nbsp;sta $2007<br />&nbsp;inx<br />&nbsp;cpx #$10<br />&nbsp;bne loop_pal<br />&nbsp;<br />&nbsp;<br /><br />&nbsp;lda #$20<br />&nbsp;sta $2006<br />&nbsp;lda #$84<br />&nbsp;sta $2006<br />&nbsp;<br />&nbsp;<br />&nbsp;; text demo will display &quot;A&#40;0B&#41; B&#40;0C&#41;&quot;<br /><br />&nbsp;<br />&nbsp;lda #$0B<br />&nbsp;sta $2007<br />&nbsp;<br />&nbsp;lda #$00<br />&nbsp;sta $2006<br />&nbsp;sta $2006<br />&nbsp;<br />&nbsp;lda #%10001000<br />&nbsp;sta $2000<br />&nbsp;lda #%00011000<br />&nbsp;sta $2001<br /><br />wait_again:<br />&nbsp;lda text_flag<br />&nbsp;cmp #$00<br />&nbsp;bne wait_again<br />&nbsp;lda #$99<br />&nbsp;sta text_flag<br />&nbsp;<br />&nbsp;<br />&nbsp;lda #$00<br />&nbsp;sta $2000<br />&nbsp;sta $2001<br /><br /><br /><br />&nbsp;lda #$20<br />&nbsp;sta $2006<br />&nbsp;lda #$85<br />&nbsp;sta $2006<br />&nbsp;<br />&nbsp;lda #$0C<br />&nbsp;sta $2007<br />&nbsp;<br />&nbsp;lda #$00<br />&nbsp;sta $2006<br />&nbsp;sta $2006<br />&nbsp;<br /><br />&nbsp;<br />&nbsp;lda #%10001000<br />&nbsp;sta $2000<br />&nbsp;lda #%00011000<br />&nbsp;sta $2001<br />&nbsp;<br />&nbsp;text_end:<br />&nbsp; jmp text_end <br />&nbsp;<br />&nbsp;<br />&nbsp;<br />&nbsp;<br />wait_vblank:<br />&nbsp;bit $2002<br />&nbsp;bpl wait_vblank<br />&nbsp;rts<br />&nbsp;<br />&nbsp;color_pal:<br />&nbsp; .db $0D,$30,$22,$16,$0D,$00,$10,$30,$0D,$00,$16,$30,$0D,$3C,$1B,$09<br />&nbsp;<br />nmi:<br />&nbsp;lda #%10010000<br />&nbsp;sta $2000<br />&nbsp;dec text_flag<br /><br />&nbsp;int:<br />&nbsp; rti<br />&nbsp; <br />&nbsp;.bank 1<br />&nbsp;.org $fffa<br />&nbsp;.dw reset,nmi,int<br />&nbsp;<br />&nbsp;.bank 2<br />&nbsp;.org $0000<br />&nbsp;.incbin &quot;text.chr&quot;<br /></div>
<br />
<br />Thanks for your help.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Tue Aug 01, 2006 10:46 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Your NMI routine modify the content of the accumulator. You should save at least your accumulator on the stack and I'd reccomand to save X and Y too, in case you modify the NMI routine to use code with the use of X and Y registers, then restore all these register at the end of the NMI routine, in order to not have the accumulator randomly changed in the main code by the interrupt, that can happen ANYTIME you enabled it.
<br />
<br />The cmp #$00 instruction is useless, because when loading the value in the accumulator, the Z flag is automatically set if the value loaded is zero, so you can just delete this line and this won't affect anything, saving you two bytes.
<br />
<br />I have no idea why you write twice to $2006 after writing one name table byte, you'd better write twice to $200<strong>5</strong> in order to proprely reset the scrolling registers.
<br />Also, I'd put a value lower than $99 in your wait timer, because $99 is several second long and you would want less time as far as I understand.
<br />I'd also do a decent programm that writes the content of a text buffer to the screen with VBlank interval and a decent programm that fill the buffer with $0b, $0c, $00 (for example, assuming that $00 marks the end) and call for the first routine. This would structure your code in a decent way and make your life easier.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lynxsolaris</b> [ Tue Aug 01, 2006 1:35 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">The cmp #$00 instruction is useless, because when loading the value in the accumulator, the Z flag is automatically set if the value loaded is zero, so you can just delete this line and this won't affect anything, saving you two bytes.<br /></div><br />Yeah, that was dumb of me.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I have no idea why you write twice to $2006 after writing one name table byte, you'd better write twice to $200<strong>5</strong> in order to proprely reset the scrolling registers.<br /></div><br /><br />I've been doing this because its the only way I could get my character to show up @ all.....  I <strong>MUST</strong> be doing something wrong.  $2005x2 writes aren't working for me.  With <strong>just</strong> writes to $2005 my "A" (or "B") isn't displayed.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Also, I'd put a value lower than $99 in your wait timer, because $99 is several second long and you would want less time as far as I understand.<br /></div><br /><br />I put it that high just so I'd actually see it happen.  See the code I posted in this thread is just test code.  I wouldn't actually do it exactly like that in my real code.  But my problem here is that "B" is never displayed.  It's like I never get past the <strong>wait_again</strong> loop. <br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I'd also do a decent programm that writes the content of a text buffer to the screen with VBlank interval and a decent programm that fill the buffer with $0b, $0c, $00 (for example, assuming that $00 marks the end) and call for the first routine. This would structure your code in a decent way and make your life easier.</div><br /><br />Yeah, again, just test code <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /> <br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Your NMI routine modify the content of the accumulator. You should save at least your accumulator on the stack and I'd reccomand to save X and Y too, in case you modify the NMI routine to use code with the use of X and Y registers, then restore all these register at the end of the NMI routine, in order to not have the accumulator randomly changed in the main code by the interrupt, that can happen ANYTIME you enabled it. <br /></div>
<br />
<br />Do you think this is why I'm having problems?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Tue Aug 01, 2006 1:49 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I'm not sure, because when NMI is SUPPOSED to hit, you're just looping if a is nonzero, and if A contain the value written to $2000 instead, the branch happen anyways, so I'm unsure if your problems are caused by this or not, but anyway you must save all register you modify in your NMI routine, just because it doesn't always hit when it is supposed too, and that shouldn't crash your programm.
<br />I don't see any other error, but maybe by doing a more decent structured programm that doesn't write the hard-wired letter "A" and "B", but that can write any message and another that order it to write "AB", then you must have less problems figuring your bugs. I'd highly reccomand directly tring to code the routine you want to be coded, even for test purposes.
<br />
<br />Oh by the way you souldn't use $0d as black, but $0e or $0f because $0d will output noncorrect color voltage to the TV. This shouldn't cause problems with emulators, tough.
<br />
<br />Finally, you should "bit $2002" in your NMI, to clear the VBlank flag, to avoid another NMI to be triggered as soon as the first one exits.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Quietust</b> [ Tue Aug 01, 2006 2:24 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">Finally, you should "bit $2002" in your NMI, to clear the VBlank flag, to avoid another NMI to be triggered as soon as the first one exits.</div>
<br />
<br />That is incorrect - the <strong>only</strong> thing that would cause a repeat NMI in such a circumstance is if you were to clear and then re-set the NMI enable flag in $2000. Remember, NMIs are <em>edge</em>-triggered, unlike IRQs (which are level-triggered).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Tue Aug 01, 2006 2:32 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Remember, NMIs are edge-triggered, unlike IRQs (which are level-triggered).</div>
<br />For some reasong I was under the beliving of the other way arround.
<br />So yeah, I still have the habbit to use $2002 at the begining of VBlank, but this may not be necessary.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Disch</b> [ Tue Aug 01, 2006 2:47 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I would still recommend doing the "bit $2002" in NMI.  If nothing else it will reset the $2005/$2006 toggle and clear the VBlank flag so that if you do happen to disable and re-enable NMIs in the same VBlank, you won't run into a problem.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lynxsolaris</b> [ Tue Aug 01, 2006 3:56 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Quietust wrote:</div><div class="quotecontent">That is incorrect - the <strong>only</strong> thing that would cause a repeat NMI in such a circumstance is if you were to clear and then re-set the NMI enable flag in $2000. Remember, NMIs are <em>edge</em>-triggered, unlike IRQs (which are level-triggered).</div><br /><br /><br /><div class="quotetitle">Disch wrote:</div><div class="quotecontent">I would still recommend doing the "bit $2002" in NMI. If nothing else it will reset the $2005/$2006 toggle and clear the VBlank flag so that if you do happen to disable and re-enable NMIs in the same VBlank, you won't run into a problem.<br /></div><br /><br /><br />so bit $2002 in NMI or no?<br /><br /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">you must save all register you modify in your NMI routine, just because it doesn't always hit when it is supposed too, and that shouldn't crash your programm<br /></div>
<br /> I haven't done much with pushing or pulling off the stack yet.  If I save my values in NMI do I need to restore them once out of NMI?
<br />
<br />Does anyone else have any suggestions for me?  Thanks for the help thus far.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Disch</b> [ Tue Aug 01, 2006 6:08 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">lynxsolaris wrote:</div><div class="quotecontent">so bit $2002 in NMI or no?</div><br /><br />You have nothing to lose by doing it other than the 4 cycles it takes.  And while it isn't necessarily manditory, it sure can't hurt, and possibly will prevent future potential problems.<br /><br />So yes, do it.<br /><br />Q was only saying that the NMI won't reoccur on RTI if you don't do it -- he never said it shouldn't be done.  (He was merely making a technical correction -- not really offering advice).<br /><br /><div class="quotetitle">lynxsolaris wrote:</div><div class="quotecontent">I haven't done much with pushing or pulling off the stack yet.  If I save my values in NMI do I need to restore them once out of NMI?</div>
<br />
<br />Well if you don't restore them, what's the point of saving them?  :P
<br />
<br />The reason A/X/Y registers are often backed up and restored in NMI/IRQ routines is because they are not automatically backed up by the interrupt.  If the interrupt cut into code that was executing -- that code would could get REALLY screwed up if A/X/Y suddenly changed on it.
<br />
<br />For example, consider the following:
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">something_the_program_is_doing:<br />&nbsp; LDA #$05<br />&nbsp; CLC<br />&nbsp; ADC #$05<br />&nbsp; STA somewhere<br />&nbsp; RTS<br /><br />nmi_routine:<br />&nbsp; LDA #$00<br />&nbsp; RTI<br /></div><br /><br />'somewhere' would be expected to have $0A written to it ($05 + $05).  But what would happen if the NMI tripped right before that CLC?  The executed code would flow something like the following:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent"><br />LDA #$05<br />; **nmi occurs here, go to nmi vector**<br />LDA #$00<br />RTI&nbsp; ; return to previous routine<br />CLC<br />ADC #$05&nbsp; ; 0 + 5 = $05, NOT $0A like it should be<br />STA somewhere&nbsp; ; somewhere is officially screwed<br /></div>
<br />
<br />If such an interruption occurs during program critical calculations, it's very possible for such an occurance to completely crash and burn the program.  However if you save and restore A/X/Y in interrupts, such problems are avoided because none of the registers change and the code being interrupted has no idea its been interrupted (a good thing).
<br />
<br />Though now... you're typically enabling NMIs and just waiting around for them to happen because your program isn't complicated.  So you probably don't NEED to backup your registers -- however it's one of those things like the $2002 thing.  It can't hurt, and it costs nothing aside from a handful of CPU cycles.
<br />
<br />So yeah... do it.  Every NMI, every IRQ.  Backup and restore A/X/Y.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Tue Aug 01, 2006 6:25 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">lynxsolaris wrote:</div><div class="quotecontent">I haven't done much with pushing or pulling off the stack yet.  If I save my values in NMI do I need to restore them once out of NMI?</div>
<br />Just a quick note here: you have to restore them <strong>before</strong> leaving the NMI, like, the last thing before the RTI. The way you said it looks like you want to restore them <strong>after</strong> leaving the NMI, wich you can't, because you don't know where you'll be after returning.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lynxsolaris</b> [ Tue Aug 01, 2006 7:40 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent"><div class="quotetitle">lynxsolaris wrote:</div><div class="quotecontent">I haven't done much with pushing or pulling off the stack yet.  If I save my values in NMI do I need to restore them once out of NMI?</div><br />Just a quick note here: you have to restore them <strong>before</strong> leaving the NMI, like, the last thing before the RTI. The way you said it looks like you want to restore them <strong>after</strong> leaving the NMI, wich you can't, because you don't know where you'll be after returning.</div>
<br />
<br />Nah, I figured that much out on my own <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />  As you just said, there isn't any way to tell where in the code NMI will occur.  I was hoping that some of the tips above would help with my issue.  Unfortunately, it didn't.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lynxsolaris</b> [ Tue Aug 01, 2006 9:29 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Ok, I've changed some of the code around.  Here is the updated code:
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp;.zp <br />text_flag = $00 <br /><br />&nbsp;.bss<br /><br />&nbsp;.code<br />&nbsp;.org $8000<br />&nbsp;.bank 0<br /><br />reset:<br />&nbsp;sei<br />&nbsp;cld<br /><br />&nbsp;ldx #$40<br />&nbsp;stx $4017<br /><br />&nbsp;ldx #$ff<br />&nbsp;txs<br />&nbsp;inx<br />&nbsp;stx $2000<br />&nbsp;stx $2001<br /><br />&nbsp;ldx #$02<br />&nbsp;stx text_flag<br /><br />&nbsp;<br />&nbsp;lda #$3F<br />&nbsp;sta $2006<br />&nbsp;lda #$00<br />&nbsp;sta $2006<br /><br />&nbsp;ldy #$00<br />loop_pal:<br />&nbsp;lda pal_colors,Y<br />&nbsp;sta $2007<br />&nbsp;iny<br />&nbsp;cpy #$10<br />&nbsp;bne loop_pal<br /><br /><br />&nbsp;lda #$21<br />&nbsp;sta $2006<br />&nbsp;lda #$84<br />&nbsp;sta $2006<br /><br />&nbsp;lda #$0B<br />&nbsp;sta $2007<br /><br />&nbsp;lda #$00<br />&nbsp;sta $2006<br />&nbsp;sta $2006<br /><br />&nbsp;lda #%10001000<br />&nbsp;sta $2000<br />&nbsp;lda #%00011000<br />&nbsp;sta $2001<br /><br />wait_again:<br />&nbsp;lda text_flag<br />&nbsp;bne wait_again<br /><br />&nbsp;lda #$00<br />&nbsp;sta $2000<br />&nbsp;sta $2001<br /><br />&nbsp;lda #$21<br />&nbsp;sta $2006<br />&nbsp;lda #$85<br />&nbsp;sta $2006<br /><br />&nbsp;lda #$0C<br />&nbsp;sta $2007<br /><br />&nbsp;lda #$00<br />&nbsp;sta $2006<br />&nbsp;sta $2006<br />&nbsp;<br />&nbsp;ldx #%10001000<br />&nbsp;stx $2000<br />&nbsp;ldx #%00011000<br />&nbsp;stx $2001<br /><br /><br />nmi:<br />&nbsp;pha<br />&nbsp;txs<br />&nbsp;tya<br />&nbsp;pha<br />&nbsp;sec<br />&nbsp;lda text_flag<br />&nbsp;sbc #$01<br />&nbsp;sta text_flag<br />&nbsp;<br />&nbsp;lda #$00<br />&nbsp;sta $2005<br />&nbsp;sta $2005<br />&nbsp;lda #%10001000<br />&nbsp;sta $2000<br />&nbsp;<br />&nbsp;bit $2002<br />&nbsp;pla <br />&nbsp;tay<br />&nbsp;tsx<br />&nbsp;pla<br />&nbsp;rti<br /><br />int:<br />&nbsp;rti<br /><br />pal_colors:<br />&nbsp;.db $0E,$30,$22,$16,$0E,$00,$10,$30,$0E,$00,$16,$30,$0E,$3C,$1B,$09<br /><br />&nbsp;.bank 1<br />&nbsp;.org $fffa<br />&nbsp;.dw reset,nmi,int<br /><br />&nbsp;.bank 2<br />&nbsp;.org $0000<br />&nbsp;.incbin &quot;text.chr&quot;<br /></div><br /><br /><br />"A" still shows and "B" does not.  This is what appears in the debug window of nintendulator:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent"><br />Invalid opcode $FF &#40;ISB&#41; encountered at $0000<br />Invalid opcode $03 &#40;SLO&#41; encountered at $0103<br />Invalid opcode $03 &#40;SLO&#41; encountered at $0903<br /><br /></div><br /><br />and when the code is running (according to CPU Trace) it seems to just be  sitting in  <br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">wait_again:<br />&nbsp;lda text_flag<br />&nbsp;bne wait_again<br /></div>
<br />
<br />It seems to be that something is wrong in my NMI and my subtraction of the text_flag var.
<br />
<br />Any ideas?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Quietust</b> [ Tue Aug 01, 2006 9:45 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">lynxsolaris wrote:</div><div class="quotecontent">It seems to be that something is wrong in my NMI and my subtraction of the text_flag var.<br /><br />Any ideas?</div>
<br />
<br />Yes.
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">nmi:<br />&nbsp;pha<br />&nbsp;txs<br />&nbsp;tya<br />&nbsp;pha<br />&nbsp;sec<br />&nbsp;lda text_flag<br />&nbsp;sbc #$01<br />&nbsp;sta text_flag<br />&nbsp;<br />&nbsp;lda #$00<br />&nbsp;sta $2005<br />&nbsp;sta $2005<br />&nbsp;lda #%10001000<br />&nbsp;sta $2000<br />&nbsp;<br />&nbsp;bit $2002<br />&nbsp;pla<br />&nbsp;tay<br />&nbsp;tsx<br />&nbsp;pla<br />&nbsp;rti </div><br /><br />You do NOT want to be doing txs/tsx in your save/restore registers code - doing so modifies the <strong>stack pointer</strong>, making it very easy to corrupt the interrupt's return address if you're not very careful (which, in this case, you are not).<br /><br />Your NMI routine should read as follows:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">nmi:<br />&nbsp;pha<br />&nbsp;txa<br />&nbsp;pha<br />&nbsp;tya<br />&nbsp;pha<br /><br />&nbsp; &#40;stuff&#41;<br /><br />&nbsp;pla<br />&nbsp;tay<br />&nbsp;pla<br />&nbsp;tax<br />&nbsp;pla<br />&nbsp;rti </div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Wed Aug 02, 2006 1:33 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Also, why did your remove your two wait for VBlank at startup ? There really was nothing wrong with it, but it is wrong that your removed it.
<br />You must do your bit $2002 at the <em>start</em> of the NMI to reset the $2005/$2006 flip-flop.
<br />As Quitetust stated, this is not a good idea to save X on the stack <strong>POINTER</strong> because this will effectivly save the X register, but will totally corrupt the stack, so Y will backup anywhere in the stack in function of the old value of X, and restore correctly, but the A register and the return adress WON'T return correctly, causing your programm to crash.
<br />
<br />I think you misunderstood txs and tsx as being phx and plx, wich just doesn't exist.
<br />
<br />On a side not, you should do a routine that fills at least one whole Name Table and Attribute Table (PPU $2000-$23ff) with known values. Typically, $00 is your "blank" tile, you should fill it wihth $00, using color $00 for the whole screen. Most emulators will do it automatically, but NOT the real hardware. Remember that is not because you didn't write the number of a tile in your programm that it will be blank on the screen.
<br />
<br />Now you shouldn't have that much problems from here. If it still doesn't work, use FCE Ultra to trace your code.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>3</strong> of <strong>4</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>