<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Why does this edit crash Michael Martin's NES101 tutorial?</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Why does this edit crash Michael Martin's NES101 tutorial?</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=10&amp;t=4786">http://forums.nesdev.com/viewtopic.php?f=10&amp;t=4786</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>GradualGames</b> [ Tue Jan 27, 2009 7:40 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Why does this edit crash Michael Martin's NES101 tutorial?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Near the top of tutorprg.p65, Michael defines a few variables he uses for the sprite location, scrolling, etc:
<br />
<br />.space dx 1
<br />.space a 1
<br />.space scroll 1
<br />
<br />I attempted to use an alternative way to define "a", as follows:
<br />
<br />a:
<br />.byte 1
<br />
<br />yet, when you assemble and run this program, it goes gray. Why is that? 
<br />
<br />Regards,
<br />-Zom

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Celius</b> [ Tue Jan 27, 2009 8:04 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />It sounds like you're defining a byte in the middle of a piece of code. If you are doing this, it's most likely that you will cause problems, because the 6502 processor reads it as an instruction, when it's just a piece of data. Make sure that all .db statements are not in an area where the PC (program counter) will find itself. For example, you may have:
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">lda #3<br />sta $325<br />ldx #1<br />txa<br />tay<br />jsr $8264<br /><br />Array:<br />.db $23,$26,$55<br /><br />ldx #3<br />ldy #0<br />-<br />lda Array,y<br />sta $200,y<br />iny<br />dex<br />bne -<br /></div><br /><br />BAD. The processor will see $23, $26, and $55 as instructions. So you'll want to have:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">lda #3<br />sta $325<br />ldx #1<br />txa<br />tay<br />jsr $8264<br /><br />ldx #3<br />ldy #0<br />-<br />lda Array,y<br />sta $200,y<br />iny<br />dex<br />bne -<br />rts<br /><br />Array:<br />.db $23,$26,$55<br /></div>
<br />
<br />So that those bytes will never be read as instructions.
<br />
<br />Otherwise, I'm not sure what the problem would be without seeing the code.
<br />
<br />EDIT: .byte 1 probably means the same thing as .db 1, which places a value of 1 at that location in ROM. If this is the case, then the NES will be reading your $01 as an opcode, which is bad.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>GradualGames</b> [ Tue Jan 27, 2009 8:49 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Here's the top of Michael Martin's NES101 tutorial (well, the top of one of three code files which is included in a "main" one which has the ines information in it), which I'm able to assemble and run just fine.
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">; Program code for NES 101 Tutorial<br />; Code by Michael Martin, 2001-2<br /><br />; Assign the sprite page to page 2.<br />.alias&nbsp; &nbsp; &nbsp; &nbsp; sprite&nbsp; &nbsp; &nbsp; &nbsp; $200<br /><br />; Allocate memory in the zero page segment.&nbsp; If we<br />; really wanted to, we could scatter these declarations<br />; through the code &#40;P65 1.1 lets us do so&#41; but not all<br />; assemblers allow this, and it doesn't help clarity<br />; any on this program.&nbsp; So the heck with it.<br /><br />; As a side note, P65 doesn't really grant any special<br />; status to any of the segments you use, and only has<br />; &quot;text&quot; and &quot;data&quot; built in.&nbsp; This means that &quot;zp&quot;<br />; could be named whatever we wanted, and it also means<br />; that we have to tell it where to start from &#40;it's the<br />; zero page, so we start it from zero, naturally&#41;.<br /><br />.segment zp<br />.org $0000<br />.space dx 1<br />.space a 1<br />.space scroll 1<br /><br />; If we had a normal data segment, it would have an .org $0300, so<br />; that it doesn't stomp on our sprite data.<br /><br />; Actual program code.&nbsp; We only have one PRG-ROM chip here, so the<br />; origin is $C000.<br />.text<br />.org $C000<br /><br />reset:&nbsp; sei<br /></div>
<br />
<br />As far as I can tell, the stuff after .segment zp and .org $0000, and before .org $C000, are locations that the program counter will never...encounter.   When I change
<br />
<br />.space a 1
<br />
<br />into:
<br />
<br />a:
<br />.byte 1
<br />
<br />I get the gray screen.
<br />
<br />I know from previous assembly language experience not to put data right in the middle of a routine--I'm aware that the CPU will attempt to interpret that as an opcode (unless you jump over it or something silly like that).
<br />
<br />Regards,
<br />-Zom

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Celius</b> [ Tue Jan 27, 2009 8:55 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />What exactly are you trying to accomplish with a: .byte 1?
<br />
<br />EDIT: Also, open the ROM in FCEUXD. Open the debugger to see where the PC is. Often when the screen goes grey like that it's because the PC somehow ends up in some dumb location.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>GradualGames</b> [ Tue Jan 27, 2009 8:58 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I'm trying to figure out where is the appropriate location for storing arrays, etc. that I can use later in my program. Using P65's syntax ".space" seems to work fine, but defining a symbol and subsequent .byte seems to choke the program. *edit*, at least, it does after .org $0000. There are many locations later in the tutorial which use labels and .byte without any problem. And, like I said earlier, the code starts executing at C000 correct? So how the heck could anything before it screw up the program counter?
<br />
<br />Upon running the program with fceuxdsp, The program counter did seem to jump into a strange location, "6CC0". I don't see how it could get into this location...Doesn't code execution begin at C000? Which is much later than that? 
<br />
<br />Regards,
<br />-Zom
<br />nes noob

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Anders_A</b> [ Wed Jan 28, 2009 1:58 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The .byte assembler directive is used to put data in the output generated by the assembly.
<br />
<br />Since the zp segment in that piece of code is supposed to go in RAM. Stuff will break when you put .byte in there.
<br />
<br />I haven't used p65 or read the tutorial though, so I can't give you much detail, but if you wanted to store static data in ROM you'd put some .byte-directives somewhere in a segment that's a part of the output from the assembler.
<br />
<br />If you wanted to tell the assembler that you want a label called array and reserve 64 bytes on it's location in RAM you'd put .space array 64 somewhere in a segment that goes in RAM.
<br />
<br />Why did you change it to .byte 1? Did you want a to be initialised to 1? If that's the case you would have to do the initialisation yourself. Keep it as .space a 1, and then write 1 there somewhere early in your code.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>GradualGames</b> [ Wed Jan 28, 2009 5:59 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I wasn't yet aware of the distinction between RAM and ROM segments. In the tutorial, he mentions creating a data segment at 0300 so as to not step on the sprite data, which is at 0200. The sprite data, as far as I can tell, is RAM, since it is written in the initialization routines. 
<br />
<br />I did attempt to do:
<br />
<br />.data
<br />.org $0300
<br />
<br />before the .byte stuff,
<br />
<br />but this did not seem to work (same gray screen result)---do I need to declare a .segment before that? 
<br />
<br />The only reason I changed it to a: .byte 1 was to learn why it crashes the program so I can find out where it is actually appropriate to store static data.
<br />
<br />Ok, I think I understand now---when I've looked at others code, they are reserving space in RAM after $0000, this is different from static data. I suppose I could put static data between my infinite loop and routine declarations---is this fairly common practice?
<br />
<br />Regards,
<br />-Zom

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Wed Jan 28, 2009 9:11 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The only data in memory at power is that in ROM. Your code has to load all data into RAM; the assembler doesn't do this for you. Thus, you can't usually set initial values for RAM with the assembler. Some allow you to tell it the initial values, then it generates a table of data in ROM for your code to copy into RAM at startup). And to anyone who uses the word "it's", please <a href="http://www.angryflower.com/itsits.gif" class="postlink">be sure you're using it right</a>. That is all.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>GradualGames</b> [ Wed Jan 28, 2009 9:49 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I just took a look at boxboy's source code. It looks as though they are reserving space for variables in the zero page, but static data they seem to declare in the code itself but after an rts so the program counter never ends up there. Is this the way people usually declare static data? 
<br />
<br />Thanks,
<br />-Zom
<br />nes n00b

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Wed Jan 28, 2009 9:26 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Yes, constant data is put somewhere in the ROM. Sometimes people put it in a different section, so like things are together in different areas of the ROM, but this is very minor. BTW, no need for signatures at the end of postings. They get repetitive very quickly.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Celius</b> [ Wed Jan 28, 2009 9:51 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">ZomCoder wrote:</div><div class="quotecontent">Upon running the program with fceuxdsp, The program counter did seem to jump into a strange location, "6CC0". I don't see how it could get into this location...Doesn't code execution begin at C000? Which is much later than that? </div><br /><br />Execution should normally occur only in $8000-$FFF9 (Though you'll want to stay away from placing code too close to the end, because that's where the NMI, Reset, and IRQ vectors are). If you copy/paste code to RAM, that's a different story. If you find yourself in $6CC0, there has to be some instruction that sends you there. Try assembling a ROM in which you don't do .byte 1, and then another where you do. Then open them in a hex editor to see if for some reason the opcodes are different.<br /><br />And yes, execution normally begins at $C000.<br /><br /><div class="quotetitle">blargg wrote:</div><div class="quotecontent">And to anyone who uses the word "it's", please be sure you're using it right. That is all.</div>
<br />
<br />Contrary to what the image linked to states, it is not -idiotic- to write "it's" when you mean "its". Look at how English works:
<br />
<br />Bob's Car.
<br />
<br />We don't write:
<br />
<br />Bobs Car.
<br />
<br />The ' indicates ownership. For a while I thought that I could apply a ' to the word "it" to indicate ownership, but I learned otherwise later.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>beneficii</b> [ Mon Feb 02, 2009 4:02 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">ZomCoder wrote:</div><div class="quotecontent">I wasn't yet aware of the distinction between RAM and ROM segments.</div>
<br />
<br />There's your problem.
<br />
<br />Also, though I'm not familiar with P65, I imagine that .space defines an address or value that the program uses but where the places in code where the .space label is used are simply repplaced with the value specified in .space.  Such as:
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">.segment zp<br />.org $0000<br />.space label $45<br /><br />.text<br />.org $c000<br />lda #$00<br />sta label<br />rti<br /></div><br /><br />This would produce the same ROM output as if you just wrote:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">.text<br />.org $c000<br />lda #$00<br />sta $45<br />rti<br /></div><br /><br />The .space statement gets written nowhere in the ROM output, but is simply a label that has a specific valued defined to it, and that when the program is assembled, all instances of the label appearing in code are replaced with the value, nothing more or less.<br /><br />.byte on the other hand causes the values after it to actually be written to the ROM output where it appears in the code, just in the same location as if it were code.  Where as the "label:" statement causes it to be a label just like defined in .space, but the value that goes into the label at that point is the address in the ROM the label is defined.  So:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">.text<br />.org $c000<br /><br />my_label:&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;;value of $c000 is stored in &quot;my_label&quot; because that is the location of its definition.<br />.byte 1&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;;the value of 1 is written to the ROM<br /><br />lda my_label&nbsp; &nbsp; &nbsp; &nbsp; ;this statement will be at address $c001 in the ROM, because the value of 1 was already written.<br />sta $00<br />rti<br /></div><br /><br />would be the same as if you just wrote:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">.text<br />.org $c000<br /><br />.byte 1<br /><br />lda $c000<br />sta $00<br />rti<br /></div>
<br />
<br />Do you see the difference between the .space statements and the normal "label:" and .byte statements?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>beneficii</b> [ Mon Feb 02, 2009 4:25 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">ZomCoder wrote:</div><div class="quotecontent">I'm trying to figure out where is the appropriate location for storing arrays, etc. that I can use later in my program. Using P65's syntax ".space" seems to work fine, but defining a symbol and subsequent .byte seems to choke the program. *edit*, at least, it does after .org $0000. There are many locations later in the tutorial which use labels and .byte without any problem. And, like I said earlier, the code starts executing at C000 correct? So how the heck could anything before it screw up the program counter?<br /><br />Upon running the program with fceuxdsp, The program counter did seem to jump into a strange location, "6CC0". I don't see how it could get into this location...Doesn't code execution begin at C000? Which is much later than that? <br /><br />Regards,<br />-Zom<br />nes noob</div>
<br />
<br />For arrays, you would probably just need to use .space on the first byte, and then your program would just reference the first byte and use indexing, the "ins val, x" or "ins val, y" statements.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>beneficii</b> [ Mon Feb 02, 2009 4:27 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Celius wrote:</div><div class="quotecontent">Contrary to what the image linked to states, it is not -idiotic- to write "it's" when you mean "its". Look at how English works:<br /><br />Bob's Car.<br /><br />We don't write:<br /><br />Bobs Car.<br /><br />The ' indicates ownership. For a while I thought that I could apply a ' to the word "it" to indicate ownership, but I learned otherwise later.</div>
<br />
<br />I agree.  This mistake was even made in the original copy of the U.S. Constitution:
<br />
<br /><!-- m --><a class="postlink" href="http://www.usconstitution.net/constmiss.html">http://www.usconstitution.net/constmiss.html</a><!-- m -->
<br />
<br />It's still a mistake though, but the person who makes it and it alone probably ought not to be condemned as a fool.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>