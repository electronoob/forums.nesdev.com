<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=9&amp;t=9195" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2012-08-13T19:32:22-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=9&amp;t=9195</id>
<entry>
<author><name><![CDATA[BootGod]]></name></author>
<updated>2012-08-13T19:32:22-07:00</updated>
<published>2012-08-13T19:32:22-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9195&amp;p=98089#p98089</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9195&amp;p=98089#p98089"/>
<title type="html"><![CDATA[Re: iNES 48 / J9100287A / TAITO-TC0190FMC+PAL16R4]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9195&amp;p=98089#p98089"><![CDATA[
Not quite OT but this reminded me of a peculiar situation with one of Taito's games: [url=!! Jinsei Gekijou 2[/url] One cart uses the TC0190FMC (m33) and one uses the X1-005 (m80) and they share the exact same ROM. I never did bother poking into the ROM, I would guess it does some sort of detection or maybe even just lazily writes to both register sets.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=158">BootGod</a> — Mon Aug 13, 2012 7:32 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[kyuusaku]]></name></author>
<updated>2012-08-07T17:27:47-07:00</updated>
<published>2012-08-07T17:27:47-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9195&amp;p=97746#p97746</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9195&amp;p=97746#p97746"/>
<title type="html"><![CDATA[Re: iNES 48 / J9100287A / TAITO-TC0190FMC+PAL16R4]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9195&amp;p=97746#p97746"><![CDATA[
I think Don Doko Don 1 does use line interrupts, but only on certain levels (like Bubble Bobble 2).<br /><br />As to which mapper is supposed to implement what, I don't know, I think each ASIC should have been given its own mapper since the registers are only partially decoded in hardware. The issue with DDD2 is that it's very eager to crash by writing memory it shouldn't. Mapper 48 should probably be strictly TC0190 decoding and 33 should be TC0350, which would also be correct chronologically.<br /><br />They are laid out in nocash's everynes: <!-- m --><a class="postlink" href="http://nocash.emubase.de/everynes.htm#mapper33taitotc0190tc0350prg8kvrom1k2kntirq">http://nocash.emubase.de/everynes.htm#m ... m1k2kntirq</a><!-- m --><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=20">kyuusaku</a> — Tue Aug 07, 2012 5:27 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[lidnariq]]></name></author>
<updated>2012-08-07T16:10:52-07:00</updated>
<published>2012-08-07T16:10:52-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9195&amp;p=97743#p97743</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9195&amp;p=97743#p97743"/>
<title type="html"><![CDATA[Re: iNES 48 / J9100287A / TAITO-TC0190FMC+PAL16R4]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9195&amp;p=97743#p97743"><![CDATA[
So that's interesting; let's talk about just Don Doko Don 1 and 2, because NesCartDB has pictures of both.<br /><br /><a href="http://bootgod.dyndns.org:7777/profile.php?id=4025" class="postlink">Don Doko Don</a>, as you said, uses the TC0350. The PCB has a trace connected to the nIRQ pin. BootGod has it marked as iNES m33, and it works when both emulated as m33 and m48, implying it neither plays with the mirroring nor uses interrupts.<br /><br /><a href="http://bootgod.dyndns.org:7777/profile.php?id=4519" class="postlink">Don Doko Don 2</a> has the TC0190 but also a 16R4 PAL. The PCB does <em>not</em> have a trace visibly connected to the nIRQ pin, which as far as I can tell is the one immediately to the left of the ground plane in the middle of the component-side picture. BootGod has it marked as iNES m48, and it only works when emulated as m48. (m33 produces title screen corruption, and hangs before game start).<br /><br />So ... is the picture of DDD2's PCB wrong? Is something else happening? Can I just not see the traces on the PCB?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3512">lidnariq</a> — Tue Aug 07, 2012 4:10 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[kyuusaku]]></name></author>
<updated>2012-08-07T00:10:48-07:00</updated>
<published>2012-08-07T00:10:48-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9195&amp;p=97723#p97723</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9195&amp;p=97723#p97723"/>
<title type="html"><![CDATA[Re: iNES 48 / J9100287A / TAITO-TC0190FMC+PAL16R4]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9195&amp;p=97723#p97723"><![CDATA[
iNES 48 and 33 are functionally the same mapper, they're probably hybridized for both ASIC types since the mirroring types can be merged. I thought the reason for two mappers was so that one would specifically NOT implement the IRQ counter for non-IRQ games which would otherwise break.<br /><br />This is how I believe the library is divided:<br /><br />TC0190FMC = no IRQ<br />-----------<br />Don Doko Don 2<br />Bakushou Jinsei Gekijou, II, III<br />Insector X<br />Operation Wolf<br />Power Blazer<br />Akira<br />Takeshi no Sengoku Fuuunji<br />Golf Ko Open<br /><br />TC0350FMR = IRQ<br />-----------<br />Don Doko Don<br />Flintstones<br />Jetsons<br />Bubble Bobble 2<br />Captain Saver<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=20">kyuusaku</a> — Tue Aug 07, 2012 12:10 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[lidnariq]]></name></author>
<updated>2012-08-06T22:52:53-07:00</updated>
<published>2012-08-06T22:52:53-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=9195&amp;p=97722#p97722</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=9195&amp;p=97722#p97722"/>
<title type="html"><![CDATA[iNES 48 / J9100287A / TAITO-TC0190FMC+PAL16R4]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=9195&amp;p=97722#p97722"><![CDATA[
As I was going through NesCartDB and made my was here, I took a close look at the pictures on the PCBs.<br /><br />In <a href="http://bootgod.dyndns.org:7777/search.php?ines=48&amp;group=cartid" class="postlink">all 5 samples in the collection</a>,the /IRQ pin isn't connected to anything. So it shouldn't be able to request interrupts. But this is the mapper that explicitly is supposed to have IRQs.<br />Just to check occam's razer, I went and disabled Nestopia's hash database and changed the mapper number back. And it didn't work; it did require the interrupts, despite that there seems to be no way for the hardware to signal them.<br /><br />Except that the mapper could inject BRKs. If this is the case, given the actual hardware, it should be possible to detect because: 1- the code shouldn't be able to signal a pseudo-interrupt if code is running not on the cartridge, barring bus conflicts and 2- should be visible in the stack while in an interrupt. But that's ludicrously complicated, since there is an IRQ acknowledge behavior. Suddenly it has to maintain a very complex FSM just to decide whether or not the interrupt needs to be re-issued when the interrupt ends, it has to know when instructions hit their edge such that injecting a BRK is ok, it has to rewind across the injected BRK, and these pseudo-interrupts can't be enabled or disabled by the cli/sti instructions.<br /><br />Doesn't seem likely.<br /><br />Am I missing something? How do you drive the pin low without being connected to it? Is there a via I don't see?<br /><br />p.s. additionally utterly bizarre: Look at the chr-rom pins. What should be D4 seems to be connected to +5V. This is not consistent with the datasheet for the part number.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3512">lidnariq</a> — Mon Aug 06, 2012 10:52 pm</p><hr />
]]></content>
</entry>
</feed>