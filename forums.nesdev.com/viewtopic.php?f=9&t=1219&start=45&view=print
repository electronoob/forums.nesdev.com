<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Reverse Engineering the CIC</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Reverse Engineering the CIC</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=9&amp;t=1219">http://forums.nesdev.com/viewtopic.php?f=9&amp;t=1219</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>4</strong> of <strong>27</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Lord Nightmare</b> [ Wed Apr 05, 2006 10:20 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Contrary to what a lot of people think, Motorola DID design a 4-bit cpu:
<br />The MC141000.
<br />This MIGHT be the processor used in the Tengen CIC clone.
<br />
<br />I managed to dig up the datasheets for it in one of the lab rooms around campus, where they had copies of many of the old Motorola databooks.
<br />As far as I'm aware, the datasheets are unavailable on the internet.
<br />The last page has the instruction set on it.
<br />Scans: (note that these require some image rotation)
<br />
<br /><!-- m --><a class="postlink" href="http://www.netaxs.com/~gevaryah/MC141xxx001.png">http://www.netaxs.com/~gevaryah/MC141xxx001.png</a><!-- m -->
<br /><!-- m --><a class="postlink" href="http://www.netaxs.com/~gevaryah/MC141xxx002.png">http://www.netaxs.com/~gevaryah/MC141xxx002.png</a><!-- m -->
<br /><!-- m --><a class="postlink" href="http://www.netaxs.com/~gevaryah/MC141xxx003.png">http://www.netaxs.com/~gevaryah/MC141xxx003.png</a><!-- m -->
<br /><!-- m --><a class="postlink" href="http://www.netaxs.com/~gevaryah/MC141xxx004.png">http://www.netaxs.com/~gevaryah/MC141xxx004.png</a><!-- m -->
<br /><!-- m --><a class="postlink" href="http://www.netaxs.com/~gevaryah/MC141xxx005.png">http://www.netaxs.com/~gevaryah/MC141xxx005.png</a><!-- m -->
<br />
<br />Lord Nightmare AKA Jonathan Gevaryahu
<br />lord(underscore)nightmare (@t) users (d0t) sf (d0t) net

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Wed Apr 05, 2006 12:35 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Lord Nightmare wrote:</div><div class="quotecontent">Contrary to what a lot of people think, Motorola DID design a 4-bit cpu:<br />The MC141000.<br />This MIGHT be the processor used in the Tengen CIC clone.</div>
<br />How surprising, I've never heard of it. The only 4-bit CPU I've ever heard about it the Intel 4040.
<br />Might it be the processor used in the real CIC microcontroller ?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Zack S</b> [ Sat Apr 08, 2006 11:24 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Kevin since you already have a data logger on hand.  Maybe you could program it so instead of just recording the whole stream of data, It could record the first few transitions and then just keep looking for it to repeat.  Then we might be able to find out how long it takes to repeat with out having to fill up a harddrive.  That could give us a pretty good idea of how secure it really is.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Quietust</b> [ Sat Apr 08, 2006 11:49 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Zack S wrote:</div><div class="quotecontent">Kevin since you already have a data logger on hand.  Maybe you could program it so instead of just recording the whole stream of data, It could record the first few transitions and then just keep looking for it to repeat.  Then we might be able to find out how long it takes to repeat with out having to fill up a harddrive.  That could give us a pretty good idea of how secure it really is.</div>
<br />
<br />It's not possible to "look for it to repeat" without logging the entire data stream. The last stream kevtris logged was nearly 7 minutes worth of real-time data - which took many hours to dump and occupied over 400 megabytes of space (since it stored only 1 cycle per byte, using a few of the upper bits for sequence numbers to make sure the serial datastream never skipped any bytes) - and it didn't repeat.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Zack S</b> [ Sun Apr 09, 2006 1:22 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Quietust wrote:</div><div class="quotecontent">It's not possible to "look for it to repeat" without logging the entire data stream. </div>
<br />
<br />I don't understand why you come to this conclusion.  You record a very short sample of the stream when it begins, then simply read the stream following and if it doesn't match the recorded beginning discard the data and retrieve the next section.  Since the signal is so sparse it should allow plenty of time for the comparison.  Once you find a spot that matches you could verify that it is repeating by restarting and logging every Nth number output that way you don't need huge amounts of data but still get a good comparison to verify it is indeed repeating.
<br />
<br />On another topic.  I have read the cherryrom forum like 3 times now and gone though the patent twice.  How feasable would it be to try and read some of the CPU core circuitry.  I have a pretty good knowledge of this sort of thing and could probably produce most of the instruction set if I had a good schematic of the CPU Core.  I would be willing to get a microscope and other needed items if It would allow me a better look at the internal circuitry.
<br />
<br />Has anyone already taken usable pictures of this already?
<br />
<br />Thanks again for all the help.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Quietust</b> [ Sun Apr 09, 2006 6:13 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Considering how random the data is, you would have to read a very long segment in order to insure that the data really DID repeat - otherwise you could easily be thrown off.  Consider this example:
<br />
<br />123456789079084325897324059734850972348509724509872435809723450987908790837980790825902835
<br />123456789013459632485732459534759018709463298174893274980632174612409382754326574359083745
<br />123456789078346159045967094586767096867860983568920359034868798089748679827349580734985737
<br />
<br />Using your logic, you would have detected two repeats based on the string "1234567890", but the string clearly does not repeat at all in the sample space provided.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Sun Apr 09, 2006 9:29 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Why is everyone expecting the stream to repeat? Maybe it just wont. I don't know much about this, and I should probably be quiet, but I think that decoding the program is still the best bet.
<br />
<br />It really amazes me that this thing wasn't figured out yet... This chip is so old and there are so many amazing people in nesdev! it is a mistery why this chip wasn't figured out yet.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Sun Apr 09, 2006 10:02 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">It really amazes me that this thing wasn't figured out yet... This chip is so old and there are so many amazing people in nesdev! it is a mistery why this chip wasn't figured out yet.</div>
<br />I agree, plus all SNES dev people have the same sheme.
<br />All random number generation repeats, even if the string is very very very long. However, since the binary has been decoded, I think, some people that are able to do it should try to see what it looks with all processors back then.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Sun Apr 09, 2006 10:37 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Why is everyone expecting the stream to repeat? Maybe it just wont. I don't know much about this, and I should probably be quiet, but I think that decoding the program is still the best bet.</div>
<br />
<br />The two chips both generate a sequence and verify that the other is generating the same. Unless they somehow connect to a single quantum random number source or something (only joking here), the sequence must be generated using a finite deterministic process, thus it must repeat. Repeatability is the same principle that lets emulators record movies by only keeping the joypad input.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Zack S</b> [ Sun Apr 09, 2006 1:18 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent"> However, since the binary has been decoded, I think, some people that are able to do it should try to see what it looks with all processors back then.</div>
<br />I have been trying to work with the ROM dump, but everyone seems unsure of how it is interleaved, where the data bus connects, how the address is decoded etc.  A lot of the HEX code generated, has been either 0 or F wich doesn't seem right to me.  Unless they're no op instruction inserted in the code for timing purposes.
<br />
<br />Not to mention some other unknowns like how the key/lock pin is connected.  It could be a port that is read or it could simply be hooked up to the ROM's highest address bit, effectively dividing the ROM into two seperate chunks. One for each function.
<br />
<br />If we knew for sure that we are looking at the instructions in sequential order, I'm sure we could attach some meaningfull assembly commands to the code using the 10NES flow chart.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Sun Apr 09, 2006 1:33 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Well, I really cannot say anything here, because I really have no experience with reverse-engineering.
<br />May I ask a stupid question ? How was people able to reverse-engineer the NES (or other machines) to figure out how the PPU, APU cartridge banking, etc... works ? Okay, it is said that the console have a 6502 and you can read the text inside the cartridge to know wich chips are the maskrom, but you don't know their pinout, and you don't know wich bus adress is what, etc...
<br />It seems just impossible to figure out. Well, the very first older NROM game has regular pinout, so it would be possible to dump them, and to look at the 6502 code to figure out how the registers are written to. From there, you can replace the ROM, and try about anything. So you can figure pretty much how the adress buses works, and so can work with more advanced cartridge. However, with absolutely no known about how works pattern tables, name tables, palettes, it would be long long hours of work to try to change any value from the original game to see what's happening.
<br />That's for NES, but for SNES, the hardware is much more complicated. And for the GBA, due to the size of the cartridges, the fact that everything is surface-mounted, etc...... well, I stop saying stupid things. Those HAD been reverse-engineered.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>teaguecl</b> [ Sun Apr 09, 2006 1:53 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The simple answer to why this hasn't been reverse engineered is that it's really difficult.  It's much more difficult than an MMC chip for example, because it's external interface doesn't give away much of what it does.  If you want to get an idea of how difficult it is, read this phd thesis on the topic:
<br />
<br />Intro
<br /><!-- m --><a class="postlink" href="http://www.cl.cam.ac.uk/~sps32/mcu_lock.html">http://www.cl.cam.ac.uk/~sps32/mcu_lock.html</a><!-- m -->
<br />
<br />Full paper
<br /><!-- m --><a class="postlink" href="http://www.cl.cam.ac.uk/TechReports/UCAM-CL-TR-630.pdf">http://www.cl.cam.ac.uk/TechReports/UCAM-CL-TR-630.pdf</a><!-- m -->
<br />
<br />There are several interesting and pretty doable approaches mentioned there, but the equipment and cost for most of them is pretty steep.  Our best bet is to get a full optical picture of the decapped chip, learn some VLSI, and start RE'ing the thing.  The full optical scan is very difficult unless you have a microscope that does this automatically, because at the 500x magnification you need, you need to take a LOT of photos and stitch them together.
<br />
<br />Although, if we can decode enough of the area around the ROM to learn how the bits are interleaved, that's a pretty good start.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sun Apr 09, 2006 2:00 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">Well, the very first older NROM game has regular pinout</div><br />I once read a story of how an unlicensed shop (Color Dreams? Tengen?) cracked the NES. At that point, they had dumped the PRG ROM and CHR ROM of <em>Mario Bros.</em> PRG was found to contain byte sequences common in 6502 bytecode, and CHR was decoded using a simple tile editor similar to those used to develop for other consoles, 8-bit microcomputers, and arcade systems. With the CHR, they could discover the character encoding that the PRG uses for text.<br /><br /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">However, with absolutely no known about how works pattern tables, name tables, palettes, it would be long long hours of work to try to change any value from the original game to see what's happening.</div>
<br />A bit/bpl loop means "wait for this bit to become set", so $2002 must be a status register of sorts that periodically sets bit 7 to 1. This is enough to get the game into an infinite jmp loop when running in a generic 6502 simulator. An infinite loop likely means that the program is waiting for an interrupt to do something, so they explored the vectors and saw what happened when they triggered NMI.
<br />
<br />At the same time, they searched for text in the ROM and then pointers to that text. A write-to-screen subroutine would use such a pointer to text. In the generic 6502 sim, place a breakpoint on reads from addresses inside text strings, and the PC is likely to be within a write-to-screen loop. So $2007 must be an output port to which things are written. Et cetera.
<br />
<br />But if you don't have access to the PRG ROM bytes in order, and/or the processor's architecture is unfamiliar, you can't do all this as easily. Heck, unlike with carts soldered onto a PCB, you don't even have any traces to plug in a logic analyzer.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Sun Apr 09, 2006 2:02 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />You mean reverse engineering is usually based by seeing how the silicium connexions are made inside the chip ? That's real crazy. It would take an incredible number of days to fully understand what those little connexions mean. Well, I think this is usefull anyway, even if it is a lot of hard-work.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>bunnyboy</b> [ Wed Apr 19, 2006 4:43 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I just got a pile of World Class Service tech manuals, there is sooo much interesting stuff in them.  There is almost no information about the CIC but some of the cart pinouts have a more detailed pinout of the CIC.  No idea how this helps anything...
<br />
<br />1  OUT (to nes)
<br />2  IN (from nes)
<br />3  R02  (unconnected)
<br />4  SEL  (gnd, lock/key)
<br />5  CL2  (unconnected)
<br />6  CLK  (from nes)
<br />7  RST  (from nes)
<br />8  GND  
<br />9  R10  (unconnected)
<br />10 R11  (unconnected)
<br />11 R12  (unconnected)
<br />12 R13  (unconnected)
<br />13 R20  (unconnected)
<br />14 R21  (unconnected)
<br />15 R22  (unconnected)
<br />16 Vcc
<br />
<br />Some of the other cart schematics show R02, R12, R13, R20, R21, R22 connected to ground, but R10, R11, CL2 still unconnected.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>4</strong> of <strong>27</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>