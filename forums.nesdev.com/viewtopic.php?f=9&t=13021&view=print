<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Zapper test ROMs</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Zapper test ROMs</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=9&amp;t=13021">http://forums.nesdev.com/viewtopic.php?f=9&amp;t=13021</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Fri Jul 17, 2015 3:02 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Zapper test ROMs</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />A few days ago I made these to test my zapper. Thought I'd post them in case they're useful to anyone else.<br /><br /><br /><strong>zapper_light.nes</strong><br /><br />Displays a white square in the middle of the screen. Generates 60hz buzz on any frame the zapper detects light. (Polls continually through frame until it finds light.) Trigger is irrelevant. Zapper on controller port 2.<br /><br /><br /><strong>zapper_trigger.nes</strong><br /><br />Generates 60hz buzz on any frame the trigger signals. Light is irrelevant. Zapper on controller port 2.<br /><br /><br /><strong>zapper_stream.nes</strong><br /><br />Reads the trigger once per frame and displays a stream of data on the screen. Zapper on controller port 2.<br /><br /><br />I don't have a CRT. I thought I'd see if there's any hope of the zapper picking up an LCD TV but I figure it's just way too dim compared to the momentary brightness of a CRT? Maybe there are other factors. I can get a light signal by sticking it right up against a lightbulb, at least. I also managed to get a 1-frame blip by shining an LED flashlight into it, and during the moment it switches on or off I get a signal on that frame, but not while it's just shining in.<br /><br />The trigger is kind of interesting. I can get a constant signal if I squeeze to a point just before the click. If I click it down, it tends to signal for a few frames then stops. I notice Duck Hunt has a software de-bounce filter about 5 frames long, which seems like a good idea.<br /><br /><br />Edit: added source code.<br />Edit: added zapper_stream test.

		
			<br clear="all" /><br />

			<table class="tablebg" width="100%" cellspacing="1">
			<tr>
				<td><b class="genmed">Attachments: </b></td>
			</tr>
			
				<tr>
					<td>
			<span class="gensmall"><b>File comment:</b> 3 zapper test ROMs and CC65 source code.</span><br />
		
			<span class="genmed">
				<img src="./styles/subsilver2/imageset/icon_topic_attach.gif" width="14" height="18" alt="" title="" /> 
				<a href="./download/file.php?id=5934">zapper.zip</a> [12.07 KiB]
			</span><br />
			<span class="gensmall">Downloaded 154 times</span>
		

		<br />
	</td>
				</tr>
			
			</table>
		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>FrankWDoom</b> [ Fri Jul 17, 2015 3:35 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Zapper test ROMs</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">rainwarrior wrote:</div><div class="quotecontent">A few days ago I made these to test my zapper. Thought I'd post them in case they're useful to anyone else.<br /><br /><br /><strong>zapper_light.nes</strong><br /><br />Displays a white square in the middle of the screen. Generates 60hz buzz on any frame the zapper detects light. (Polls continually through frame until it finds light.) Trigger is irrelevant.<br /><br /><br /><strong>zapper_trigger.nes</strong><br /><br />Generates 60hz buzz on any frame the trigger signals. Light is irrelevant.<br /><br /><br />I don't have a CRT. I thought I'd see if there's any hope of the zapper picking up an LCD TV but I figure it's just way too dim compared to the momentary brightness of a CRT? Maybe there are other factors. I can get a light signal by sticking it right up against a lightbulb, at least. I also managed to get a 1-frame blip by shining an LED flashlight into it, and during the moment it switches on or off I get a signal on that frame, but not while it's just shining in.<br /><br />The trigger is kind of interesting. I can get a <strong>constant signal if I squeeze to a point just before the click</strong>. If I click it down, it tends to signal for a few frames then stops. I notice Duck Hunt has a software de-bounce filter about 5 frames long, which seems like a good idea.</div><br /><br />That's something I noted in the zapruder(?) thread a while back. The obvious &quot;click&quot; when you fire the zapper is actually the end of the fire sequence. Most zapper games register the &quot;shot&quot; at half pull or so, when you are getting that signal. It's pretty seamless on the zapper, so most people won't notice. <br /><br />I figured this out after playing around with camerica's revolver style gun. The issue with that is that the trigger is again the end of the sequence, but the signal-on mechanism is the hammer. In order to actually pull the trigger you the hammer has to be cocked (it'll actually lock in that position when you pull it back) and the trigger releases the hammer. The issue is that cocking the hammer goes signal-on immediately, registering as the shot in most games. This makes it mostly impossible to play those games. <br /><br />What I've learned since I posted all that is the camerica gun design is almost certainly bootlegged right of nintendo's original famicom revolver. Everything is effectively the same, but with sloppier tolerances/build quality. On the famicom revolver, pulling the trigger will actually move the hammer in stride- it doesn't have to be cocked first. That should mean it will more or less shoot at the expected time (haven't gotten around to plugging it in yet). The camerica gun's inability to pull the trigger with the hammer uncocked is apparently due to quality control rather than an intentional choice. <br /><br />So anyway, I've thought about patching the zapper games to register the shot when the on signal goes to off so I could play with the camerica gun, but haven't gotten around to it. <br /><br />What's a debounce filter and how does it work?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Fri Jul 17, 2015 3:40 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Zapper test ROMs</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">FrankWDoom wrote:</div><div class="quotecontent">What's a debounce filter and how does it work?</div><br />It just means you watch over several frames, so if you get a 0 in the middle of a stream of 1s, you ignore it. The name comes from how a lot of mechanical switches will &quot;bounce&quot; on and off rapidly during the moment of switching, too slow for a human to notice but a high frequency machine can often pick it up.<br /><br />More detail than you'll ever want: <a href="http://www.labbookpages.co.uk/electronics/debounce.html" class="postlink">http://www.labbookpages.co.uk/electronics/debounce.html</a>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Fri Jul 17, 2015 4:02 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Zapper test ROMs</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">rainwarrior wrote:</div><div class="quotecontent">I don't have a CRT. I thought I'd see if there's any hope of the zapper picking up an LCD TV but I figure it's just way too dim compared to the momentary brightness of a CRT? Maybe there are other factors.</div> Too dim is certainly part of it. High contrast ratio and a dark room should help with that. Delay from frame to frame is another ... <br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"> I can get a light signal by sticking it right up against a lightbulb, at least. I also managed to get a 1-frame blip by shining an LED flashlight into it, and during the moment it switches on or off I get a signal on that frame, but not while it's just shining in.<br /></div>The demodulator inside is <strong>very</strong> strongly responsive to initial turn-on events. At one point I figured out how to use it to transmit data to the NES at about ≈1kB/sec (because a sufficiently sharp bright light source would reliably turn on the output consistently the same amount of time later), but I decided that a non-invasive means of transmitting data to the NES, when it's <strong>that</strong> slow, just wasn't useful.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">The trigger is kind of interesting. I can get a constant signal if I squeeze to a point just before the click. If I click it down, it tends to signal for a few frames then stops. I notice Duck Hunt has a software de-bounce filter about 5 frames long, which seems like a good idea.<br /></div>It's a momentary switch with a over-pull mechanism that releases the switch (the spring sound). Then after you release it, there's a simple R-C time constant (C inside the Zapper, R inside the control deck) before it reads false again.<br /><br />Extra data: <br /><!-- l --><a class="postlink-local" href="http://forums.nesdev.com/viewtopic.php?t=8108">viewtopic.php?t=8108</a><!-- l --><br /><!-- l --><a class="postlink-local" href="http://forums.nesdev.com/viewtopic.php?t=10138">viewtopic.php?t=10138</a><!-- l --><br /><!-- l --><a class="postlink-local" href="http://forums.nesdev.com/viewtopic.php?t=11169">viewtopic.php?t=11169</a><!-- l -->

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Fri Jul 17, 2015 4:27 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Zapper test ROMs</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">lidnariq wrote:</div><div class="quotecontent">Too dim is certainly part of it. High contrast ratio and a dark room should help with that. Delay from frame to frame is another</div><br /><br />I'm confused as to how the darkness of the room would matter. I can't get any light detected from my LCD screen at any distance in a dark or light room, with its brightness/contrast as high as they go.<br /><br />Does the zapper somehow try to re-normalize to the darkest and brightest things it senses, or does it just trigger over some absolute threshold? (I presumed it was absolute.) If I put it against the light bulb it will sustain a signal for me, it seems?<br /><br />Hmm. Is it edge triggered? I'm realizing the lightbulb is a type with a flourescent tube inside. Just tried with a halogen bulb and an incandescent one (neither were detected). Is the zapper specifically looking for a very sharp ride in intensity? (And if so, how long does it trigger after it gets that? Duck Hunt polls constantly until it gets a hit or the next NMI occurs, so my test does the same.)<br /><br /><br />Frame delay is not relevant to this test. The screen just displays a constant image. I started testing because I was kind of curious whether I could modify Duck Hunt with a delay to compensate for the display lag, but ultimately it proved irrelevant because it just doesn't seem to pick up the LCD screen at all.<br /><br /><br />Actually, I'd like to know if anybody else has a different experience with this. Does your zapper respond to your non-CRT TV at all?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Fri Jul 17, 2015 4:39 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Zapper test ROMs</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />It is edge triggered, and it does <em>some</em> normalization (removing DC bias) but there are still hard limits (e.g. photodiode saturation).<br /><br />The delay depends on the total amount of received energy that falls on the photodiode. As I said, a sufficiently sharply bright light source would reliably turn the sensor exactly 3 scanlines later. Normal zapper usage on the TV didn't do that, though, see also the problems that Tepples had with noise when decoding an X coordinate. BUT when I held my zapper against the CRT using his ZapRuder test, the X noise went away.<br /><br />(TLDR, Too dim of a light source would produce a true signal randomly 3-4 scanlines later instead of exactly 3). also &quot;exactly 3&quot; is &quot;exactly 3 time constants from the RC inside the zapper, not NES scanlines&quot;

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Fri Jul 17, 2015 4:52 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Zapper test ROMs</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />So, it's more or less impossible to get useful light sensor function with an LCD TV, I suppose. I think I've learned enough to give up, at this point. Ha ha. I was hoping there was a software-only solution.<br /><br />I guess if I really wanted to I could try to rebuild the zapper with a much lower frequency filter? Though, I have no idea what kind of new detection problems that would add to the situtation. It'd be interesting if there was an easy modification that wouldn't break Duck Hunt / Gumshoe / Hogan's Alley on a CRT, but would permit LCD light detection (with software modified for the frame delay).<br /><br />I mean, whatever it was would break Zap Ruder, I guess, but the needs of the commercial-era games were simpler.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Fri Jul 17, 2015 5:03 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Zapper test ROMs</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I actually picked up the technique used in Zap Ruder's zapkernel from Operation Wolf, though not the X stuff. Operation Wolf uses a linear scan from left to right for the X coordinate.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Fri Jul 17, 2015 5:10 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Zapper test ROMs</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I'd think you'd be able to rebuild a receiver without the demodulator, and that ought to work? I'd think? It should basically be equivalent to an older <a href="http://www.atariarchives.org/ecp/chapter_6.php" class="postlink">lightpen</a> or the SNES/SMD lightguns...

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Mon May 16, 2016 10:27 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Zapper test ROMs</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Added source code, in case anyone wanted it.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>NESHomebrew</b> [ Mon May 16, 2016 10:17 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Zapper test ROMs</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">rainwarrior wrote:</div><div class="quotecontent">Added source code, in case anyone wanted it.</div><br />Thanks!

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Thu Jun 02, 2016 6:47 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Zapper test ROMs</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Added a third test that just displays a stream of 0/1s read from the trigger. Useful for examining the dirty trigger behaviour, especially with slow pulls. See: <a href="http://forums.nesdev.com/viewtopic.php?f=3&amp;t=14346&amp;p=172494#p172494" class="postlink">http://forums.nesdev.com/viewtopic.php?f=3&amp;t=14346&amp;p=172494#p172494</a>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Jedi QuestMaster</b> [ Sun Jun 12, 2016 6:07 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Zapper test ROMs</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Thanks, I tried your latest test ROM:<br /><br /><!-- m --><a class="postlink" href="https://www.youtube.com/watch?v=E4vS7axloh8">https://www.youtube.com/watch?v=E4vS7axloh8</a><!-- m -->

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>qwertymodo</b> [ Thu Jun 23, 2016 10:28 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Zapper test ROMs</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />2 things.  First of all, the demodulator.  This is the #1 reason that you're not registering a hit on an LCD screen.  It works very similarly to the IR transmitter in your TV remote.  When you're using light, visible or otherwise, to send data, it tends to be very susceptible to noise.  So, instead of, say, turning the light on for a 1, and off for a 0, you toggle the light on and off at a specific frequency to represent a 1, and off to represent a 0.  Noise sources that aren't at that exact frequency get filtered out, and register as a 0.  So does a solid light.  <a href="https://learn.sparkfun.com/tutorials/ir-communication" class="postlink">Here's a good overview, if you're interested.</a>  The demodulator in the Zapper is tuned to 15kHz to match the NTSC scan rate, with the on/off signal being the result of the screen refresh.  There's a bit more to it than that, getting into protocols and other aspects, but that's the really barebones, low-level issue here.  If you were able to generate a 15kHz strobe light, it should register on the Zapper's light sensor.  That's also probably why you were able to register off of a lightbulb, because the 60Hz flicker is an even divisor of 15kHz.  It still gets filtered out, but some of the higher frequency components make it through the filter and end up registering (though that's likely why you needed to hold it up directly to the bulb, in order to get a strong enough signal through the filter).  As far as whether or not this can be achieved on an LCD screen, I have no idea.  Brightness/contrast/ambient light/etc are not the issue, or at least they are all secondary to the frequency component (i.e. they may cause issues in a working setup, but those are the wrong things to be looking at when trying to get this all working).<br /><br /><div class="quotetitle">lidnariq wrote:</div><div class="quotecontent">I'd think you'd be able to rebuild a receiver without the demodulator, and that ought to work? I'd think? It should basically be equivalent to an older <a href="http://www.atariarchives.org/ecp/chapter_6.php" class="postlink">lightpen</a> or the SNES/SMD lightguns...</div><br />That's an interesting idea, but I would suspect that at the very least you would have accuracy issues because that relies on the electron beam position to determine exactly where it's pointing.  Though, I suppose with more modern technology you could compensate with more powerful sensor/image processing.<br /><br />Second, the debounce.  Having implemented debounce in both hardware and software, as well as HDL, by far the simplest debounce I've found is a simple shift register.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">debounce_buffer = (debounce_buffer &lt;&lt; 1) | input;</div><br /><br />From there, there are 3 different ways to use that buffer.  Fast on/delayed off, delayed on/fast off, or hysteresis.<br /><br />Fast on/delayed off:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">output = (debounce_buffer == 0) ? 0 : 1;</div><br /><br />Delayed on/fast off:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">output = (debounce_buffer == 0xFF) ? 1 : 0;</div><br /><br />Hysteresis:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">output = output ? ( (debounce_buffer == 0) ? 0 : 1 ) : ( (debounce_buffer == 0xFF) ? 1 : 0 );</div><br /><br />Also, you can adjust the length of the debounce using a simple bitmask<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">output = (debounce_buffer &amp; mask == 0) ? 0 : 1;</div><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">output = (debounce_buffer &amp; mask == mask) ? 1 : 0;</div><br /><br />Depending on the clock speed and the switch, I usually find 4 bits to be a good mask value, or at least a good starting point, and then adjust up or down from there.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Thu Jun 23, 2016 11:04 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Zapper test ROMs</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">qwertymodo wrote:</div><div class="quotecontent">That's an interesting idea, but I would suspect that at the very least you would have accuracy issues because that relies on the electron beam position to determine exactly where it's pointing.  Though, I suppose with more modern technology you could compensate with more powerful sensor/image processing.</div><br />My own goal was not to support old NES software with a modern TV, but rather to write new NES software with detection routines that could be robust on modern TVs (compensation for lag, etc.), but the frequency of the filter basically made it impossible unless I want to modify the zapper.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>