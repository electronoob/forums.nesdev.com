<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Anybody ever thought about this trick?</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Anybody ever thought about this trick?</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=8366">http://forums.nesdev.com/viewtopic.php?f=2&amp;t=8366</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>psycopathicteen</b> [ Wed Nov 30, 2011 2:26 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Anybody ever thought about this trick?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Using an in-cart chip to render silhouettes or outlines of sprites onto the background layer, so sprites can use 4 colors as opposed to the usual 3.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Wed Nov 30, 2011 2:29 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Never throught about this, but yeah sounds interesting. However wouldn't it requires --terribly-- complex logic on the cart ? Something something even more than the MMC5 ?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>psycopathicteen</b> [ Wed Nov 30, 2011 3:19 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Maybe there can be dual 256x32x8-bit buffers, with the 6502 buffering the "shadow image" on one buffer while the other is being superimposed over the background layer by the chip.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bananmos</b> [ Wed Nov 30, 2011 3:23 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Yeah, this idea has popped into my mind a few times. But like Bregalad said, it'd require some fairly advanced logic, probably an FPGA with internal RAM.
<br />
<br />The most straightforward way I could think of would be to basically have a duplicated <span class="posthilit">sprite</span> renderer in the chip, which would be able to logically AND the CHR data bus before the PPU receives it, based on screen positions and 1-bit CHR patterns in this extra SPR-RAM. 
<br />
<br />Would need quite a bit of redundant hardware and CHR memory though, for just one extra <span class="posthilit">color</span>...

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Wed Nov 30, 2011 4:58 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />And now for "Taking the limit as x increases without bound", with your friend Pino:
<br />
<br />Someone needs to make a TV tuner circuit for the NES. I've described before how it would work: decode NTSC, put luma on tile data, and put average chroma over 8x1 pixels on attribute. Then we can put all this enhancement chip garbage to rest with "Just plug your Xbox 360 into your NES."

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>psycopathicteen</b> [ Wed Nov 30, 2011 5:01 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bananmos wrote:</div><div class="quotecontent">Yeah, this idea has popped into my mind a few times. But like Bregalad said, it'd require some fairly advanced logic, probably an FPGA with internal RAM.<br /><br />The most straightforward way I could think of would be to basically have a duplicated <span class="posthilit">sprite</span> renderer in the chip, which would be able to logically AND the CHR data bus before the PPU receives it, based on screen positions and 1-bit CHR patterns in this extra SPR-RAM. <br /><br />Would need quite a bit of redundant hardware and CHR memory though, for just one extra <span class="posthilit">color</span>...</div>
<br />
<br />In the post above, I stated that the 6502 can software render the <span class="posthilit">sprite</span> shadows to a buffer, so it doesn't need a duplicated <span class="posthilit">sprite</span> renderer.
<br />
<br />It just needs to be able to calculate the current screen position, fetch the next 8 needed pixels from the buffer, and barrel shift them with the previous 8 pixels.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Wed Nov 30, 2011 5:16 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Sounds speccy</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />So in other words, sort of how sprites were drawn back on the ZX Spectrum.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>psycopathicteen</b> [ Wed Nov 30, 2011 5:42 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Sounds speccy</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">So in other words, sort of how sprites were drawn back on the ZX Spectrum.</div>
<br />
<br />Not really.  The background will be drawn the same way it allways is.  The chip will just super-impose silhouettes ontop of the bg patterns being fetched.  Then the PPU renders sprites ontop of the silhouettes to acheive 4-<span class="posthilit">color</span> sprites.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>ccovell</b> [ Wed Nov 30, 2011 5:58 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />But.... that means the silhouettes will all be square-shaped, or they will still need tile colour 0 to be transparent so the silhouettes can have a shape of their own, thus making tiles 3 colours only <strong>again</strong>!
<br />
<br />Think about it and you'll see it's a problem that can't be corrected through "chip magic"

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>kyuusaku</b> [ Wed Nov 30, 2011 6:22 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />A mapper can replace the BG attribute and pattern table fetches to give *4* more colors (one being the BG <span class="posthilit">color</span>) from any BG palette. So 7 colors + transparency = pseudo 3 bpp. If this is done it should be highly hardware accelerated (preemptively masking <span class="posthilit">sprite</span> pattern fetches) otherwise it'll be hell to program and slow. If someone's going this far they should also enhance the BG too. I think it'd be nice to allow each tile to select any 4 colors of the 13. Oh an a programmable MMC2-like feature to expand past 256 tiles. And individual tile auto-animation like the Neo Geo.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>MottZilla</b> [ Wed Nov 30, 2011 10:28 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />While we are at it, how bout a second 6502 core running at a faster clock rate so you can process more calculations each frame to avoid slowdowns and have even more going on at once in your game.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dwedit</b> [ Wed Nov 30, 2011 11:22 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Worked for Super Mario RPG.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Thu Dec 01, 2011 10:09 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Sooooo,
<br />Doing it with CHR-RAM + software mapping would work but be really slow to upload, it might work if done only on the hero's <span class="posthilit">sprite</span> and if this <span class="posthilit">sprite</span> is fairly small (something like 16x16) so you have at worse something like 6 tiles to upload, so why not. One more <span class="posthilit">color</span> can be very significant, and doing it with two-layered sprites will eat some of the precious 8 sprites per scanline.
<br />
<br />Doing it with a chip sounds nice, but the chip would have to be complicated. In addition to the normal CHR ROM/RAM, an additional layer of CHR-ROM/RAM of at least 1BP should be present in the mapper, and the mapper should be able to logically AND the normal BG with it's internal "<span class="posthilit">sprite</span> shadow rednering" as Bananmos said.
<br />While you're doing something as complex, why not extend it to more BP so you can allow other BG colors to be used in your sprites too ? That way you could get for example if you have one <span class="posthilit">color</span> in common in all BG palettes, 5 <span class="posthilit">color</span> sprites (transparent <span class="posthilit">color</span> + shared <span class="posthilit">color</span> + normal 3) without eating some of the precious 8 sprites per limitation.
<br />However, again this would require a crazy complex FPGA based mapper.
<br />
<br />
<br />For really large sprites (probably more than 24x24), it's possible to do this for the middle of the <span class="posthilit">sprite</span> manually, by just using solid colors on the nametable and change them as the player advances, this way the transparent <span class="posthilit">color</span> in the middle of the sprites becomes this "solid" <span class="posthilit">color</span>, while the transparent colors of the border of the sprites are really transparent.
<br />I think this is common on some older computers, but on the NES it's not practical due to the 16x16 attribute limitation, so I guess again a shared <span class="posthilit">color</span> between all the palettes is more suitable for this.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Disch</b> [ Thu Dec 01, 2011 11:23 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"> it's possible to do this for the middle of the <span class="posthilit">sprite</span> manually, by just using solid colors on the nametable and change them as the player advances, this way the transparent <span class="posthilit">color</span> in the middle of the sprites becomes this "solid" <span class="posthilit">color</span>, while the transparent colors of the border of the sprites are really transparent.</div>
<br />
<br />This would only work if the <span class="posthilit">sprite</span> is aligned perfectly with the current fine X scroll, and if it only moves in blocks of 8 pixels at a time.  Otherwise the "solid" pixels will scroll over the BG tile and become transparent (and vice versa with the actually transparent pixels).
<br />
<br />And there's also that fundamental attribute limitation with the PPU.  At best, each 8x1 block has to use the same attribute data.  So the only way to make a silouette/outline that could be freely moved like a <span class="posthilit">sprite</span> would be to have all 4 BG palettes share the same <span class="posthilit">color</span> -- so basically you'd have to use $3F00 as the extra <span class="posthilit">color</span> unless you want to waste a good chunk of your palette.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>psycopathicteen</b> [ Thu Dec 01, 2011 11:42 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent"><br />While you're doing something as complex, why not extend it to more BP so you can allow other BG colors to be used in your sprites too ? That way you could get for example if you have one <span class="posthilit">color</span> in common in all BG palettes, 5 <span class="posthilit">color</span> sprites (transparent <span class="posthilit">color</span> + shared <span class="posthilit">color</span> + normal 3) without eating some of the precious 8 sprites per limitation.<br />However, again this would require a crazy complex FPGA based mapper.<br /><br /></div>
<br />
<br />...and maybe you can designate a palette for tiles that the sprites don't cross, so you can still use that extra <span class="posthilit">color</span>.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>