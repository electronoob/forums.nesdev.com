<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - New File Format</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">New File Format</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=3&amp;t=2025">http://forums.nesdev.com/viewtopic.php?f=3&amp;t=2025</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>6</strong> of <strong>7</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sat Sep 16, 2006 7:04 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">- What on earth are those PPU types ? I've never heard of that. Normally, a NES game should work with all PPU revisions, huh ?</div><br />True, Nintendo lot check tried each licensed NES game in consoles with all PPU revisions (including one NES with a dying PPU that <em>The Three Stooges</em> helped uncover). But as Marty said, it's a matter of Famicom/NES NTSC PPU, NES PAL PPU, PlayChoice PPU, and especially different Vs. Unisystem PPUs.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">- Why CHR-RAM could be battery backed ? I don't see much interest with that. What game could have any use of this ? To save space, a game would write all its save to the CHRRAM ? That make no sense to me, while technically possible.</div><br />Because a 16 KiB CHR RAM may be cheaper than an 8 KiB CHR RAM, an 8 KiB PRG RAM, and the extra decoder circuitry.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">- Why CHR-RAM/SRAM size could be less than 8kb (exept 0kb) ? I doubt any 128-byte RAM chips are used in any NES game.</div><br />How big is the PRG RAM in HKROM carts?<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">- More info on what exactly "submappers" would look like would be welcome.</div><br />Mapper 4.x: T*ROM (MMC3) vs. H*ROM (MMC6).<br />Mapper 34.x: BNROM vs. NINA.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Something like 3 bits :<br />000 -&gt; Japan, NTSC<br />001 -&gt; America, NTSC<br />010 -&gt; Europe, PAL<br />011 -&gt; (Australia ?), PAL</div><br />Would that be a lockout chip ID? The way the Sega Genesis does it is one bit for screen and one bit for ideographic: <ul><li>60 Hz ideographic: Japan </li><li>60 Hz alphabetic: North America </li><li>50 Hz ideographic: mainland East Asia </li><li>50 Hz alphabetic: Europe, NZ, Australia </li></ul><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">100 -&gt; Pirate/Homebrew/Unlicenced, NTSC<br />110 -&gt; Pirate/Homebrew/Unlicenced, PAL<br />111 -&gt; Pirate/Homebrew/Unlicenced, support both video standards</div>
<br />And this would fit into the lockout chip ID more than anything. Some people won't be satisfied until the CIC is emulated.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Sat Sep 16, 2006 7:25 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Because a 16 KiB CHR RAM may be cheaper than an 8 KiB CHR RAM, an 8 KiB PRG RAM, and the extra decoder circuitry.<br /></div>
<br />This forces the game to have no graphics when it saves and when it resumes the saved game, this removes random acess, and anyway you need extra circcuitry to bankswitch CHRRAM wich cannot exed 8kb without any extra logic, and this remove the other advantage of having SRAM (have more work RAM to bypass the very limiting 2kb of the NES, to decompress data, etc...).
<br />
<br />Also I don't think any 16kb RAM chips exists, you'd either need to have a 32kb one, or to use only a 8kb one, biut that means your game has almost no room for graphics.
<br />
<br />If one would do the choise to save money and have slow acess times, he better have to use an EEPROM, so it saves the battery, and still allow graphics to work normally.
<br />
<br />I did not meant to "emulate" the lockout chip, but rather to provide info about the region and all, wich means about the same.
<br />Effectivly, one bit for licenced/unlicenced, onother for video standard and the third for the sub-region of a video standard would seem pretty good.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>hap</b> [ Sat Sep 16, 2006 8:01 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Bregalad: mapper 16 Bandai games use several types of EEPROM chips (that I can't find any documentation of by the way).
<br />
<br />I like your proposal kevtris, nice step forward from the chaos in this thread. A next step would be an official mapper list, including sub-mappers, backwards compatible with the current GoodNES. (not sure what should be done with semi-official ones unknown to GoodNES like mapper 155 (MMC1 without WRAM protection), or mapper 210 (N106 stripped down) )

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bananmos</b> [ Sat Sep 16, 2006 10:50 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Out of curiosity, how would "odd possibilities" such as a cart with an extra CPU containing custom code be handled? (Squeedo comes to mind, but I seem to remember talk about some japanese speech chip that would also fit in this category, even if the data would be samples rather than code)
<br />
<br />I reckon you could get away with the hack of putting such  "external ROM" data among the PRG or CHR pages, since such a cart would use a custom mapper number anyway and an emulator that supports it would know which pages are not PRG/CHR but "external ROM" data. Even if it's an ugly hack, it seems to be the best way to allow such games to be supported in iNES without using external files.
<br />
<br />I'm still not convinced what would be the best solution, Kevin's proposed extension or a UNIF footer at the end of the iNES file. The last alternative has the advantage of being more easily upgradable, but the first one might just be more realistic due to its minimalistic approach. 
<br />
<br />Still, the list of possible RAM sizes leave a lot to be desired, since the probability of encountering a cart that uses two SRAM chips (say a 32kB + 8kB combination), and thus doesn't fit in the category, is about as high as encountering a cart that uses the 4kB or 1MB SRAM size. It seems to me these definitions try cover all possible/likely cases, but fail none the less. Maybe we CAN'T cover every possible case with a fully backwards compatible format, but then at least we shouldn't pretend it's doable.
<br />
<br />Though I suppose any of the alternatives would be decent, if only we'll see less talk and more action on this matter. ;)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sat Sep 16, 2006 11:01 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">This forces the game to have no graphics when it saves and when it resumes the saved game</div><br />But is it an issue? Save/load during vblank, or fade to black (commonly seen when sleeping in an inn in an RPG).<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">, this removes random acess, and anyway you need extra circcuitry to bankswitch CHRRAM wich cannot exed 8kb without any extra logic</div><br />Which may already be present in your mapper ASIC if it is also used for games with CHR ROM.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Also I don't think any 16kb RAM chips exists, you'd either need to have a 32kb one, or to use only a 8kb one, biut that means your game has almost no room for graphics.</div>
<br />8 KiB for CHR + 8 KiB for each of 3 save files = 32 KiB.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>kyuusaku</b> [ Sat Sep 16, 2006 12:01 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Why shouldn't SRAM size be defined by the board/mapper? Since the bankswitching will be mapper specific, it makes sense to me for the size to be mapper-defined. If you can make an NROM with 16k of SRAM, what does that mean? 16k SRAM games can't be assumed to work the same like they are with 8k SRAM. Would a 16k SRAM NROM game be legal in this new format?
<br />
<br />It doesn't make sense to me, I think the only stuff that should go in a header are things that can apply to any game.
<br />
<br />I think a new format also needs provisions for expansion audio and a way to store audio samples if present.
<br />
<br />Adding all these new bits just makes more things to enter.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>BootGod</b> [ Sat Sep 16, 2006 12:19 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />While kev's proposal looks good, certainly the best ines upgrade I've heard yet, I'm still leaning towards the UNIF footer idea. It would be more easily incorporated into current apps and has the ability to store so much more.
<br />
<br />Like kyuusaku said, audio data could be stored in a block. For VS. Unisystem, dip switch info could be stored in a block and maybe a palette block as well. It would be nice if an emulator did not have this info hard-coded.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Sat Sep 16, 2006 12:21 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Would a 16k SRAM NROM game be legal in this new format? </div><br />It would make no sense, but technically it would be doable, just like now you can do a NROM card (mapper 0) with 256kB PRGROM for example, wich aslo make no sense. There isn't much issue with that, just don't use nonsense header combinations. Most emulators currently just give error messagebox if a nonsense header is found, so I don't think that would change.<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I think a new format also needs provisions for expansion audio and a way to store audio samples if present.</div><br />The provisions for expansion audio have nothing to do with the format, but with the mappers themselves. Also, if any samples are used, the game HAVE to store them in ROM, huh ?<br />For complex mappers (Squeedo, etc...), I just think the emus could use a plugin system. This would allow easy implementation of newer version of the same mapper, and is easy to use for both emu developpers and users.<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">But is it an issue? Save/load during vblank, or fade to black (commonly seen when sleeping in an inn in an RPG). </div>
<br />Now you said that, I think this is kinda interesting. After a bit ot thinking it is a very good idea after all. You just save a chip, and for the only price of a bit slower acess times and forcing to fade to black when saving/loading games. The only main problem is the deletion of random acess, wich definitely is a pain. You just cannot load a file of 8kb : Where do you want it to load ? You don't have RAM for that, the NES has only 2kb. So you must load it in another part of CHRAM, and you can only read that in VBlank via a complex buffering system, same for writing. This is a pain, but it still saves a chip.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>kyuusaku</b> [ Sat Sep 16, 2006 12:31 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">It would make no sense, but technically it would be doable, just like now you can do a NROM card (mapper 0) with 256kB PRGROM for example, wich aslo make no sense. There isn't much issue with that, just don't use nonsense header combinations. Most emulators currently just give error messagebox if a nonsense header is found, so I don't think that would change.</div><br />You can currently make a NROM with 8k SRAM which works in most emulators. My point is that there's no point in defining SRAM size in the header if it's all up to the board anyway. In other words I'd rather see a 8k version of Mapper A and a 16k version of Mapper A than SRAM size bits. MMC1 and MMC3 normally only have provisions for 8k or smaller SRAM, if somebody decides to create a game which uses 32k, a new mapper can be added since the logic will have to be anyway.<br /><br /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">The provisions for expansion audio have nothing to do with the format, but with the mappers themselves. Also, if any samples are used, the game HAVE to store them in ROM, huh ?</div>
<br />No, I mean samples which are not necessarily accessible by the CPU at all, ones which are played back by other emulated hardware.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Sat Sep 16, 2006 12:43 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Effectivly, SRAM size depend of the board, but I disagree with you because a single mapper can have slightly different SRAM sizes, and also the same board can have SRAM that is battery backed to save the game or just additionnal Work Ram for the game.
<br />
<br />For example :<div class="codetitle"><b>Code:</b></div><div class="codecontent">Zelda -&gt; MMC1 -&gt; SNROM; 8kb SRAM+battery<br />Kid Icarus -&gt; MMC1 -&gt; SNROM; 8kb SRAM</div><br /><br />Both are the exact same, exept one has battery, 2 diodes and one resitior in addition. With the new system, one game will have 8kb save-RAM and 0kb work RAM, and the other one 0kb save-RAM and 8kb work RAM, as I undrstand things.<br /><br />For the other thing :<div class="codetitle"><b>Code:</b></div><div class="codecontent">Caslevania III; Laser Invasion : MMC5; ELROM; no SRAM<br />Just Breed; Gemfire : MMC5; EKROM; 8kb SRAM+battery<br />Uncharted Waters; Napoléon L'emprereur -&gt; MMC5; ETROM, 16kb SRAM+battery &#40;only first 8kb batteried&#41;<br />Romance of the 3 Kingdoms II : MMC5; EWROM, 32kb SRAM+battery</div>
<br />
<br />You don't want 4 different MMC5 mappers just because these only differs technically by their SRAM size ? That makes no sense to me.
<br />
<br />Also, the new format allow 32kb Batteried and 8kb non-batteried or such combinations, wich are absolutely possible with a real MMC5 (but aren't used in commercial games, it would be possible to modify a ETROM board to gain such ability I think).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>kyuusaku</b> [ Sat Sep 16, 2006 2:06 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">Effectivly, SRAM size depend of the board, but I disagree with you because a single mapper can have slightly different SRAM sizes,  and also the same board can have SRAM that is battery backed to save the game or just additionnal Work Ram for the game.</div><br />A board can only have different SRAM sizes if it matches the pinout and is smaller. The only time this can happen on original boards is with MMC5 (using a 6264/62256/62512 in the same socket.) AFAIK, no NES device can accept a universal DIP and configure itself to access it. Why is having a handful of MMC5s so bad? No matter what, mapper code has to implement the different sizes of SRAM and it's no more work to type in mapper 1XX than it is to define a SRAM size. In the grand scheme of things, there are VERY few variations of SRAM between the same board. <br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">For example :<div class="codetitle"><b>Code:</b></div><div class="codecontent">Zelda -&gt; MMC1 -&gt; SNROM; 8kb SRAM+battery<br />Kid Icarus -&gt; MMC1 -&gt; SNROM; 8kb SRAM</div><br /><br />Both are the exact same, exept one has battery, 2 diodes and one resitior in addition. With the new system, one game will have 8kb save-RAM and 0kb work RAM, and the other one 0kb save-RAM and 8kb work RAM, as I undrstand things.</div><br />Earlier in this thread I suggested having a nonvolatile bit to describe the SRAM. Having two definitions of the exact same thing (SRAM/WRAM) doesn't make sense. If a board were to have 4 separate SRAM areas, some volatile, some nonvolatile, that would again have to be described in a new mapper which defeats the new header feature's purpose.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">You don't want 4 different MMC5 mappers just because these only differs technically by their SRAM size ? That makes no sense to me.<br /></div>Yes because in the end it's far more economic than defining SRAM for the 4,000 ROMs with 8k battery backed RAM... It also allows for possibilities which this header is not capable of such as 4M of SRAM.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Sat Sep 16, 2006 2:21 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Well, I don't like doubling mappers. Maybe you could do something with sub-mappers, but I'm unsure how this works. I don't think SRAM size should be a part of sub-mappers, but should be defined as it in a byte reserved for it.
<br />Also, even if no MMC1 card has ever had 32kb SRAM for example, it would be perfectly possible to build a card to handle that using the CHR selection line to select the SRAM banks. Bandits King of Ancient China does this with two 8kb SRAM chips, but one could have up to 32kb or even 64kb using the same trick. So if no submaper with that availability has been defined, the person who wants to devlop a MMC1 game that use a lot of SRAM will never be able to test his programm other than having a plugin for an existing emulator or to put all this together on a real cartridge. I found it would be better to keep the format open to anything new to just commercial boards.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>kevtris</b> [ Sat Sep 16, 2006 3:09 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">Wow ! Your new format looks pretty decent.<br />However, I've some minor problems with it :<br /><br />- What on earth are those PPU types ? I've never heard of that. Normally, a NES game should work with all PPU revisions, huh ?<br /></div><br /><br />The Vs. system games use a bunch of different PPUs to prevent arcade operators from burning a new set of EPROMs to update their games.  <br /><br />The differences are approximately like so:<br /><br />RP2C03x, RC2C0x:<br /><br />Standard RGB palette, very similar to that of the regular PPU found in NTSC consoles... however 1 or 2 colours were changed on a few of them.<br /><br />RP2C04-000x<br /><br />These PPUs have scrambled palettes and extra colours.  A good example of this would be Vs. Ice climber or Vs. SMB, or Vs. Gradius... all three use various forms of the RP2C04 PPU, and if you play these games with the regular palette, it looks like an acid trip <img src="./images/smilies/icon_smile.gif" alt=":-)" title="Smile" /><br /><br />Each of the four PPUs has a different scrambling of the palette, and a few differences in the colours.  I have dumped all four bit for bit accurately using a special device I made.<br /><br /><br />RP2C05-0x<br /><br />These five PPUs have the stock palette (as far as I know, except I have not seen 2 of the chips).  The difference here is register 2000h and 2001h are flipped around.  Also, reading 2002h returns the usual three bits in D5 to D7 (VBL, sprite overflow, sprite 0 hit) but the lower 5 bits are different depending on the -0x revision.  Games check these bits, and crash or fail to start if they are wrong.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />- Why CHR-RAM could be battery backed ? I don't see much interest with that. What game could have any use of this ? To save space, a game would write all its save to the CHRRAM ? That make no sense to me, while technically possible.<br /></div><br /><br />That bicycling game cart, Racermate does.  It has 64K of CHR RAM- 32K is battery backed, the other 32K is not.  They store all the stats and such in this RAM.  Why they battery backed CHR RAM, I don't know... but it DOES exist <img src="./images/smilies/icon_smile.gif" alt=":-)" title="Smile" /><br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">- Why CHR-RAM/SRAM size could be less than 8kb (exept 0kb) ? I doubt any 128-byte RAM chips are used in any NES game. I think less bits would do for the RAM size.<br /></div><br /><br />Because the EEPROMs used on some Japanese games are only 128, 256, or 512 bytes.  Also, the MMC6 RAM is only 1K.  This covers all possible bases, and costs nothing to implement.  Having a range of 128 bytes to 1Mbyte is very decent IMO and shouldn't be a problem.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">- More info on what exactly "submappers" would look like would be welcome.<br /></div><br /><br />Yeah I was kinda holding off until I got some feedback.. but here is where it's really needed.<br /><br />For example, there are multiple kinds of MMC1 cartridges-  "regular", 16K of WRAM (8K battery backed, 8K not), Dragon Warrior 3/4 (512K of PRG ROM), and games which require WRAM to always be enabled ("The Money Game" and a few others, Japanese only).<br /><br />So the submapper for MMC1 would be something like...<br /><br />0 - normal MMC1.  <br />1 - 16 WRAM present (a few Koei games do this)<br />2 - 512K of PRG ROM present (DW3, DW4)<br />3 - WRAM write protection disabled<br /><br />It might be better to make the "WRAM protection disabled" a bit, so it could be turned on and off by itself, regardless of the other modes.  The 16K of WRAM and 512K of PRG ROM though are mutually exclusive, since they use CHR ROM mapper bits.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">- Why don't put a bit that tells if the cartridge is american on japanese ? Both are NTSC and there isn't much difference in emulation issues, but I guess it would still be cool to have that.<br /><br />Something like 3 bits :<br />000 -&gt; Japan, NTSC<br />001 -&gt; America, NTSC<br />010 -&gt; Europe, PAL<br />011 -&gt; (Australia ?), PAL<br />100 -&gt; Pirate/Homebrew/Unlicenced, NTSC<br />110 -&gt; Pirate/Homebrew/Unlicenced, PAL<br />111 -&gt; Pirate/Homebrew/Unlicenced, support both video standards<br /></div><br /><br />Maybe, but that doesn't directly help emulation per se.  I'm not opposed to such things though. <br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Emulators could just look the middle bit to know if they must emulate PAL or NTSC, or have a more complex system to emulate all regions... ?<br /></div><br /><br />Yah... I'm not 100% sure about regioning... The only thing really enforcing regions is the lockout chip, and NTSC/PAL.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Other than this, it looks great.<br /><br />EDIT : Totally outtopic, but I'm very curious to know wich games use EEPROM instead of RAM+Battery to hold saves. Wich mapper support that ? Are those licenced games or only pirate games ?</div>
<br />
<br />
<br />That is mapper 16.  Yes, licensed games by Bandai... I'm not 100% sure on titles at the moment, but there's around 10-12 that use it.  There are two kinds of EEPROM they support-  I^2C and a different, similar format.  Look up the datasheet for the 24C02 to get an idea of what they are doing.
<br />
<br />I emulate both styles of EEPROM in my console and it works great.
<br />
<br />Unfortunately, mapper 16 is really something like 5 or 6 different mappers :-/

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>WedNESday</b> [ Sat Sep 16, 2006 3:19 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">kevtris wrote:</div><div class="quotecontent">Also on the mappers issue, I have made an absolutely comprehensive mapper guide vs. mapper number which I will be posting to my page at some point.  It lists every single implemented mapper number, where it can be found, and what it is composed of.    Everything on it has been tested and revised, since it was produced when I made the FPGA NES.</div>
<br />
<br />Annnnnnnny chance of you releasing that any time soon? I don't mind if it is not finished, and I think that it will help us all discuss a new format.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Sat Sep 16, 2006 4:04 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Also, even if no MMC1 card has ever had 32kb SRAM for example, it would be perfectly possible to build a card to handle that using the CHR selection line to select the SRAM banks. Bandits King of Ancient China does this with two 8kb SRAM chips, but one could have up to 32kb or even 64kb using the same trick. So if no submaper with that availability has been defined, the person who wants to devlop a MMC1 game that use a lot of SRAM will never be able to test his programm other than having a plugin for an existing emulator or to put all this together on a real cartridge.</div>
<br />How would an emulator know how you wired up your 64KB RAM?

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>6</strong> of <strong>7</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>