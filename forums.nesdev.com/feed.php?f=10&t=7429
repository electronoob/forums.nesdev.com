<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=10&amp;t=7429" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2011-01-30T16:03:08-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=10&amp;t=7429</id>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2011-01-30T16:03:08-07:00</updated>
<published>2011-01-30T16:03:08-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7429&amp;p=73354#p73354</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7429&amp;p=73354#p73354"/>
<title type="html"><![CDATA[A Couple of Questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7429&amp;p=73354#p73354"><![CDATA[
That information by itself doesn't tell us much. Maybe you have other variables occupying the same memory locations, and reserving different amounts of bytes makes them clash in a way that the program doesn't crash... I would try setting a breakpoint to the memory range where those variables are and check if it's really being used correctly. I often reuse RAM when I know that certain variables are not gonna be used at the same time, but I have already used some at the same time by accident and the consequences were pretty bad. Make sure that's not your case.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Sun Jan 30, 2011 4:03 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[WJYkK]]></name></author>
<updated>2011-01-30T14:11:59-07:00</updated>
<published>2011-01-30T14:11:59-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7429&amp;p=73352#p73352</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7429&amp;p=73352#p73352"/>
<title type="html"><![CDATA[A Couple of Questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7429&amp;p=73352#p73352"><![CDATA[
In regards to the crashing, this is what I had before in the beginning of my code:<div class="codetitle"><b>Code:</b></div><div class="codecontent">.enum $0001<br />Frames .dsb 1<br />SecondsOnes .dsb 1<br />SecondsTens .dsb 1<br />MinutesOnes .dsb 1<br />MinutesTens .dsb 1<br />NUMBERS_BASE .dsb 1<br />.ende</div>For some reason, on the first second (where SecondsOnes is set to 1) it goes fine, but once SecondsOnes is set to 2, it displays the correct time but crashes one frame later. After changing all <em>.dsb 1</em> to <em>.dsb 2</em>, it works fine.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4164">WJYkK</a> — Sun Jan 30, 2011 2:11 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2011-01-27T23:22:51-07:00</updated>
<published>2011-01-27T23:22:51-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7429&amp;p=73218#p73218</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7429&amp;p=73218#p73218"/>
<title type="html"><![CDATA[Re: A Couple of Questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7429&amp;p=73218#p73218"><![CDATA[
I suggest you check all your stack operations. since you mentioned NMIs, make sure you are returning from them with RTI and not RTS (it's a common beginner mistake) and that you are PUSHing and PULLing registers correctly. If you still can't find what's wrong, you will probably have to post some of the code for us to look at (like the NMI routine and the main loop, for starters).<br /><br /><div class="quotetitle">WJYkK wrote:</div><div class="quotecontent"><br />Secondly, I've been looking for this over the forum and the wiki, but I can't seem to find any information for making a split-screen/HUD. I believe I saw once a link that provided very useful examples and code, but I can't find it anymore.<br /></div><br />The implementation of a HUD/status bar depends on the type of scrolling that you are using, and whether you want the HUD at the top or bottom of the screen. If you are only scrolling sideways, the split point for the HUD is usually detected with a sprite 0 hit. Make sure that a solid (i.e. not color 0) background pixel collides with a solid sprite pixel in the first sprite (sprite 0) near the split point and that will cause bit 6 of $2002 to go high, so you know it's time to modify the scroll.<br /><br />The horizontal scroll can be modified freely during rendering, you just have to write to $2000 and $2005 like you normally would. The vertical scroll can't be modified so easily, so instead of making the second $2005 write it's best that you read $2002 instead, which will clear the latch that selects between first and second writes.<br /><br />If you want a status bar at the top, when all your PPU updates are done (including setting the scroll for the status bar), wait for the sprite hit flag to go low (this will happen at the end of VBlank, or immediately if there was no hit during the previous frame, but that doesn't matter), and then wait for it to go high again. If you placed the pixels correctly, the flag will change and you will change the horizontal scroll for the gameplay window. After that you can resume the game logic (i.e. exit from the NMI, if that's where you are doing the PPU updates).<br /><br />If the status bar is at the bottom, after the PPu updates you resume the game logic normally. Once the game logic is done, wait for the hit flag to go high, and change the scroll for the status bar. This sounds simpler than a status bar at the top, but there's a big problem: if your game logic takes too long, and you miss the sprite hit, you'll get annoying visual glitches (the screen will jump, the status bar will flicker, etc). So only use this method if you are ABSOLUTELY sure your game logic will always finish before the hit.<br /><br />If you are using a mapper with IRQs (it will be harder to manufacture carts in large quantities, since these mappers haven't been cloned by the community yet), replace the sprite hits with IRQs, and you can have your status bar anywhere.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Thu Jan 27, 2011 11:22 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Gilbert]]></name></author>
<updated>2011-01-27T22:57:51-07:00</updated>
<published>2011-01-27T22:57:51-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7429&amp;p=73214#p73214</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7429&amp;p=73214#p73214"/>
<title type="html"><![CDATA[Re: A Couple of Questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7429&amp;p=73214#p73214"><![CDATA[
How did you access the variables? With things like LDA $02 or STA $02, right?<br /><br />If the CPU really interprets $02 as an instruction there must be some severe logic flaw that it's running the codes from incorrect addresses. For example, if you have something like:<br />C100:  A5 02     ;LDA $02<br />the programme counter should be running the code from address $C100, it would only attempt to interpret the byte "02" as an instruction if at some instances it's running the code at address $C101.<br /><br />For the split screen thing, some starting pages could be <a href="http://wiki.nesdev.com/w/index.php/NMI_thread" class="postlink">this</a> and <a href="http://www.nintendoage.com/forum/messageview.cfm?catid=22&amp;threadid=36969" class="postlink">this</a>.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4653">Gilbert</a> — Thu Jan 27, 2011 10:57 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[WJYkK]]></name></author>
<updated>2011-01-27T22:16:38-07:00</updated>
<published>2011-01-27T22:16:38-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7429&amp;p=73209#p73209</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7429&amp;p=73209#p73209"/>
<title type="html"><![CDATA[A Couple of Questions]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7429&amp;p=73209#p73209"><![CDATA[
OK, so I've been working on a small demo and putting code in the NMI, and I've noticed that anytime when I want to access a variable at an even location (e.g. $00, $02, etc.), it throws me a CPU Jam in Nestopia and Nintendulator, yet if my addresses are odd, it works OK. Is there any reason why it does that? Could it be because the CPU interprets $02 as a HLT instruction (according to Nintedulator's debugger)?<br /><br />Secondly, I've been looking for this over the forum and the wiki, but I can't seem to find any information for making a split-screen/HUD. I believe I saw once a link that provided very useful examples and code, but I can't find it anymore.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4164">WJYkK</a> — Thu Jan 27, 2011 10:16 pm</p><hr />
]]></content>
</entry>
</feed>