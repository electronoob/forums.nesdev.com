<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - So, I'm getting into NESdev..</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">So, I'm getting into NESdev..</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=10&amp;t=6350">http://forums.nesdev.com/viewtopic.php?f=10&amp;t=6350</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>acfrazier</b> [ Mon May 03, 2010 2:22 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>So, I'm getting into NESdev..</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />And I have a good idea for a game I want to write. I've taken some steps to get started. I picked up the following books:
<br />
<br />Programming the 6502 by Rodnay Zaks
<br />6502 Assembly Language Programming by Lance A. Leventhal
<br />6502 Assembly Language Subroutines by Lance A. Leventhal &amp; Winthrop Saville
<br />
<br />I've read over a few of the chapters in Zaks' book, but they are mostly centered around mathematical programs, and not games. Are there any beginner tutorials specifically for developing for the NES? Any other reading material I should know about? I know to stay away from GBAguy because I've been reading the forums here for some time before I made this post.
<br />
<br />Just to introduce myself, I'm Austen Frazier, and I'm 16. I hang out on the NESdev IRC under the same username that I use here (unless I get disconnected, in which case it's acfgotdc). I plan on having my game completed within the next 6 months or so (mostly working on it in every bit of my free time, which these days is a lot), so I hope to learn quickly as I have with some other programming languages. I know some VB (version 6), HTML (if you can even consider that a language anymore), PHP, and I dabbled a bit in C#, C++, and SQL. Now I know most people say they're going to have their game done by x time but it never comes to fruition, but I fully intend on making one of the best games there's been in quite a long time. I just need some place to begin. So I'm asking you, please enlighten me on where to start.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Mon May 03, 2010 3:12 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I've been starting with Zack's book as well. I know it's annoying that it starts with math when you want to get results immediately. However, programming a game is, in the low level, doing a lot of comparaisons/additions/shifts, etc... and then "output the results" to the screen and speaker.
<br />
<br />So it is necessary to know how to do arithmetical and logical operations on the 6502,cand to know how to deal with the PPU in order to do start doing any NES program.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>3gengames</b> [ Mon May 03, 2010 4:13 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Yeah another 16 year old <img src="./images/smilies/icon_razz.gif" alt=":P" title="Razz" /> Cooooool ^_^
<br />
<br />
<br />
<br />I definently think if you allreayd know assembly just learn it as you go but since you don't list it IO don't think you know it so definently just pick up any 6502 book and get going <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" />
<br />
<br />
<br />Once you do that it's just learning the NES's registers and how to put stuff on the screen, sound, etc. Which truthfully every little piece is kinda easy but putting it together is a....you know.
<br />
<br />
<br />Wow man, HTML and no javascript? I've gotta teach you that XD

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>koitsu</b> [ Mon May 03, 2010 8:19 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: So, I'm getting into NESdev..</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">acfrazier wrote:</div><div class="quotecontent">Any other reading material I should know about?</div>
<br /><!-- m --><a class="postlink" href="http://nesdev.com/bbs/viewtopic.php?p=60710#60710">http://nesdev.com/bbs/viewtopi ... 0710#60710</a><!-- m -->

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>acfrazier</b> [ Mon May 03, 2010 8:26 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: So, I'm getting into NESdev..</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">koitsu wrote:</div><div class="quotecontent"><div class="quotetitle">acfrazier wrote:</div><div class="quotecontent">Any other reading material I should know about?</div><br /><!-- m --><a class="postlink" href="http://nesdev.com/bbs/viewtopic.php?p=60710#60710">http://nesdev.com/bbs/viewtopi ... 0710#60710</a><!-- m --></div>
<br />
<br />Eek, $44.20+shipping for a used copy @ <!-- m --><a class="postlink" href="http://www.amazon.com/gp/offer-listing/0893037893/ref=dp_olp_used?ie=UTF8&amp;qid=1272900153&amp;sr=8-1&amp;condition=used">http://www.amazon.com/gp/offer-listing/ ... ition=used</a><!-- m -->
<br />
<br />I don't have that kind of cash for a book <img src="./images/smilies/icon_sad.gif" alt=":(" title="Sad" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Mon May 03, 2010 9:09 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />IMO, books about the 6502 won't help you much when making NES games. Sure you have to master 6502 assembly, but that comes with practice, not from reading a book.
<br />
<br />If you have a book, by all means, read it. But if you don't, there is no need to spend a lot of cash on one: find a couple of 6502 references on the internet, grab a copy of the 6502 simulator and start studying the instructions interactively. It worked pretty damn well for me (the first time I came across a book about the 6502 I already knew everything).
<br />
<br />I honestly think that knowing 6502 assembly is at most 10% of what's necessary to make a NES game. Mastering the PPU and the concepts of game logic are way more important, and harder.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Mon May 03, 2010 9:55 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">I honestly think that knowing 6502 assembly is at most 10% of what's necessary to make a NES game. Mastering the PPU and the concepts of game logic are way more important, and harder.</div>
<br />But you do need to understand the 6502 in depth in order to implement game logic that doesn't slow down when more than three critters are in play:
<br /><ul><li>How to organize your data, because the 6502 prefers structure-of-arrays logic over array-of-structures logic </li><li>How to perform coordinate math efficiently, including implementing your own multiplication, division, and trigonometry in order to get a critter to aim at something </li><li>How to make the best use of registers X and Y vs. local variables in zero page </li></ul>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Mon May 03, 2010 10:22 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I agree with you, and part of my point is that you'll hardly learn those things from a book. At least the ones I've seen were too superficial and wouldn't talk about those subjects in depth, or at all. By experimenting, you tend to find the best way to do things naturally, because you run into the problems yourself. In my opinion, this gives a person better understanding of why things are done a certain way than if they were simply told that way is correct.
<br />
<br />I think it's important that coders go through all the steps. It's important that their first programs aren't very efficient, and that they realize that arrays-of-structures are a pain to work with. If you simply tell them that structures-of-arrays are better they will just think that "this is the weird way the 6502 works and we must all follow blindly" (look at GBAGuy's tutorials for example: they are full of "this is how the NES works, I don't know why but here it is lol").
<br />
<br />The rest of my point is that it's still just a language, a way to communicate. Of course it is important to learn how to communicate with the system, but I think it's more important to know <em>what</em> you are going to communicate then <em>how</em> you are gonna do it. If you don't have anything to say, there is no point in learning the language. This is just my opinion though, I'm sure others will give different levels of importance to the components needed to make a NES game.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Memblers</b> [ Mon May 03, 2010 3:37 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />For starting out, once you understand 2 vital instructions instructions (LDA immediate, STA absolute) you could in theory blast out an entire hello world program (LDA #$00 / STA $2007 basically in tons of variations).  That's kind of like how I did everything when I started out, which proves that one can program the NES without really knowing 6502, heheh.
<br />
<br />I think it would help to look at other people's sources, try messing around with those maybe, once you can get it to assemble.
<br />
<br />Yeah I pretty much agree with what tokumaru's latter point, seems like 80% of the challenge is making the PPU do what you want, within it's limitations.  There's no immediately obvious limitation to the CPU, you really have to be doing a lot of stuff to run out of time during a frame.
<br />
<br />So yeah the program logic doesn't need to be efficient usually (if you start near a slow-down point in worst-case situations, that's when to go back and optimize), however when it comes to using the PPU there are some time limits (vblank time) involved, so in that case you do need to write optimized code pretty much all the time.
<br />
<br />For a first program though you can just turn the screen off (LDA #0 / STA $2000 / STA $2001) and be safe doing whatever you want with the PPU, before turning the screen on.
<br />
<br />I guess it depends on what you want to do first too.  I got into it because I wanted to write music for it (before Nerdtracker, Famitracker, and NTRQ existed).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>MetalSlime</b> [ Mon May 03, 2010 5:58 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Work through the first series of Nerdy Nights tutorials.  They have pictures and are very good for explaining how to work with the PPU:   <!-- m --><a class="postlink" href="http://nintendoage.com/forum/messageview.cfm?catid=22&amp;threadid=7155">http://nintendoage.com/forum/messagevie ... eadid=7155</a><!-- m -->
<br />
<br />And stay far far away from GBAGuy's tutorials.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>MottZilla</b> [ Mon May 03, 2010 6:34 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />One of the most important things you'll need is to actually get started with an Assembler so you can start writing code. In my opinion real world experience is going to help you out more than any formal reading alone will. 
<br />
<br />I recommend ASM6 along with one of the templates Tokumaru posted. <!-- m --><a class="postlink" href="http://nesdev.com/bbs/viewtopic.php?t=6160">http://nesdev.com/bbs/viewtopic.php?t=6160</a><!-- m -->
<br />
<br />If you understand the concept of programming then so long as you do something rather than nothing you'll make progress. You want to avoid things that cause you to just idle and not really do anything. Don't expect to crank out something like Super Mario Bros 3 right away. Set reasonable goals and set out to achieve them. One of the easiest things to do to get used to the NES would be to make a Pong/Table Tennis game. It's simple but will allow you to learn to deal with drawing characters (sprites) to the screen, input from the player, game logic, perhaps a background, program flow, etc. 
<br />
<br />Just build up from there.
<br />
<br />Also for larger projects it's VERY useful to have some kind of PC programming experience so you can make applications to create data for your game. Almost any language will do, BASIC, C, C++, C#, whatever. This way you can program something like a level editor. 
<br />
<br />You could make these tools as separate NES programs but it's probably easier if you can make PC programs.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>GradualGames</b> [ Thu May 06, 2010 8:23 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent"><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">I honestly think that knowing 6502 assembly is at most 10% of what's necessary to make a NES game. Mastering the PPU and the concepts of game logic are way more important, and harder.</div><br />But you do need to understand the 6502 in depth in order to implement game logic that doesn't slow down when more than three critters are in play:<br /><ul><li>How to organize your data, because the 6502 prefers structure-of-arrays logic over array-of-structures logic </li><li>How to perform coordinate math efficiently, including implementing your own multiplication, division, and trigonometry in order to get a critter to aim at something </li><li>How to make the best use of registers X and Y vs. local variables in zero page </li></ul></div>
<br />
<br />Could you or tokumaru explain the difference between arrays of structures and structures of arrays? I haven't heard these specific terms before. Could you give some examples? From the names, I think I may be using arrays of structures in a lot of my code. If there's a strong reason for not doing this, I'd definitely like to learn what that is!

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Thu May 06, 2010 8:33 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Gradualore wrote:</div><div class="quotecontent">Could you or tokumaru explain the difference between arrays of structures and structures of arrays?</div>
<br />You probably know the difference, but not these names.
<br />
<br />Array of structures:
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">Metatiles:<br />&nbsp; &nbsp;.db $00, $01, $02, $03<br />&nbsp; &nbsp;.db $04, $05, $06, $07<br />&nbsp; &nbsp;.db $08, $09, $0a, $0b<br />&nbsp; &nbsp;.db $0c, $0d, $0e, $0f<br />&nbsp; &nbsp;.db $10, $11, $12, $13<br />&nbsp; &nbsp;.db $14, $15, $16, $17<br />&nbsp; &nbsp;&#40;...&#41;</div><br /><br />Structure of arrays:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">Metatiles:<br />&nbsp; &nbsp;.db $00, $04, $08, $0c, $10, $14, &#40;...&#41;<br />&nbsp; &nbsp;.db $01, $05, $09, $0d, $11, $15, &#40;...&#41;<br />&nbsp; &nbsp;.db $02, $06, $0a, $0e, $12, $16, &#40;...&#41;<br />&nbsp; &nbsp;.db $03, $07, $0b, $0f, $13, $17, &#40;...&#41;</div>
<br />
<br />The difference is that in an array of structures each element of the array is an structure (duh), and since structures can be kinda large the array grows pretty quickly as information is added to it, which means you can't access it quickly by using indexed addressing, you have to use pointers, which wastes RAM and CPU cycles.
<br />
<br />By using structures of arrays instead you reduce the size of each element of the array by splitting it into several arrays, which you can easily access using indexed addressing if you know which element of the structure you need to access.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>GradualGames</b> [ Thu May 06, 2010 8:41 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Hmm, I think I am using arrays of structures then. I have some reserved locations in RAM comprised of 16 byte chunks of data, each being an "instance" of a structure. I guess what you're saying is that it would be better to have several arrays, one for each "member" of the struct, and avoid having to add the size of your struct to your index register in every iteration of a loop? Or is there more to it?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>never-obsolete</b> [ Thu May 06, 2010 8:46 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I had that problem when I first started out. I'd store my objects like so:
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">obj0_status:&nbsp; &nbsp; .rs 1<br />obj0_fracX:&nbsp; &nbsp; &nbsp;.rs 1<br />obj0_fineX:&nbsp; &nbsp; &nbsp;.rs 1<br />obj0_coarseX:&nbsp; &nbsp;.rs 1<br />obj0_fracY:&nbsp; &nbsp; &nbsp;.rs 1<br />obj0_fineY:&nbsp; &nbsp; &nbsp;.rs 1<br />obj0_coarseY:&nbsp; &nbsp;.rs 1<br /><br />obj1_status:&nbsp; &nbsp; .rs 1<br />...<br />...<br /></div><br /><br />When it came time to do anything useful (collision detection) I had to use indirection to access the data fields. In the end it became a nightmare to maintain and the code was just all around slower.<br /><br />Now I structure my objects like so:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">obj_status:&nbsp; &nbsp; &nbsp;.rs MAX_NUM_OBJ<br />obj_fracX:&nbsp; &nbsp; &nbsp; .rs MAX_NUM_OBJ<br />obj_fineX:&nbsp; &nbsp; &nbsp; .rs MAX_NUM_OBJ<br />obj_coarseX:&nbsp; &nbsp; .rs MAX_NUM_OBJ<br />obj_fracY:&nbsp; &nbsp; &nbsp; .rs MAX_NUM_OBJ<br />obj_fineY:&nbsp; &nbsp; &nbsp; .rs MAX_NUM_OBJ<br />obj_coarseY:&nbsp; &nbsp; .rs MAX_NUM_OBJ<br /></div>
<br />
<br />Using indexing to access data fields simplified the code.
<br />
<br />I do agree that making these types of "mistakes" was helpful because I understood the <strong>why</strong> behind it.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>