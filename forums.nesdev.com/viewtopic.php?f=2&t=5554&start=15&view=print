<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - About meta-meta sprite, my current idea</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">About meta-meta sprite, my current idea</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=5554">http://forums.nesdev.com/viewtopic.php?f=2&amp;t=5554</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>2</strong> of <strong>2</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Thu Sep 10, 2009 3:49 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />When you say that the origin is at the top left corner, do you mean that this origin is the point defined by the object's coordinates, meaning that the sprites are always to the right and below that point? If so, I understand why you have problems with the face. I'm pretty sure that with signed coordinates (or fake signed) you wouldn't have problems with that, because I don't have any problems with overlays.
<br />
<br />My opinion is that a system where sprites can only be to the right and below the object's locations is very limited. What happens if, in the middle of development, I decide that the player can get a neck stretching power up? I'd need to draw him with a very long neck, but I wouldn't be able to because I only left space for the regular head when I defined all the other frames relative to the top left corner. Had I used signed coordinates for the sprites, the head could be drawn pretty high with negative coordinates, without the need to change any of the other frames.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Banshaku</b> [ Thu Sep 10, 2009 5:57 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Based on your character long neck analogy, I can see one of the issue I had.
<br />
<br />Mega man sprite are in general 3 sprite wide but when you start to use the gun, it changes everything. When I saw that issue, I added 8 extra pixel at the beginning to adjust the center of the sprite.  Another "behavior" was the character is always blocked almost 8 pixels on the left when it's a beginning of stage so I thought it was a good compromise to make the coding simpler and avoiding any signed (or faked) values. The extra X value just simplified a few things.   But if later I have another similar issue, all sprites for that character would be affected, again.
<br />
<br />I will do some tests with that concept and see how it goes. It make me cry just thinking at the fact that I may have to re-edit all the meta-sprite coordinates by hand, again <img src="./images/smilies/icon_wink.gif" alt=";)" title="Wink" /> I want my editor!! <img src="./images/smilies/icon_razz.gif" alt=":P" title="Razz" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Banshaku</b> [ Thu Sep 10, 2009 10:40 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Sorry for the double post thingy.
<br />
<br />I tested Tepples's idea and mixed it with Bregalad's one (-7).  What was important was to find the center of the actual sprite.  To find it, you take the width of the sprite and divide it by 2. Since the sprite I tested was 3 sprites wide, that was 24 / 2 = 12 ($0C).  Now that you found this value, you must remove it from sprite when located at (0,0), top-left origin.
<br />
<br />My static values in top-left where $00, $08, $10.  I removed $0C from them and they became $F4, $FC and $04.  When I face left, I EOR first the value with $FF then I must remove 7.  The reason for removing 7 is because the origin of the tile (top left) is flipped at the same time too and become top right. Since the nes cannot print sprites from right to left, you have to remove 1 sprite wide to put back the origin in the top/left system.
<br />
<br />It seems to work for now. I have one display bug left to figure out to make sure it does works 100%.  Once it works, that's mean adjusting all my sprites coordinate again, cry!  <img src="./images/smilies/icon_razz.gif" alt=":P" title="Razz" /> Maybe I should think right away about ajusting the Y coordinate, just in case...
<br />
<br />That would mean, if it does work, by finding the center, EORing and removing 7, your sprite is fine.  The extra processing seems acceptable.  
<br />
<br />Once I figure out the last display bug, I will reconfirm if what I said made sense.
<br />
<br />edit:
<br />
<br />Cannot figure out yet the display bug. There must be 1 thing wrong in my approach. I will have to figure it out later.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Celius</b> [ Thu Sep 10, 2009 10:55 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />As others have said, I do my meta-sprites from the top-left corner. I find really no disadvantages to doing it this way. The only thing I could think of would be of you used the object's X/Y coordinates as the origin, and some sprites went outside of the down-and-to-the-right range of that point. However, for each object I usually calculate quickly the position of the reference point for each metasprite, and I guess that could be a disadvantage to some. But if you do any calculations to get the reference point, you might as well go with unsigned.
<br />
<br />You might ask, "What if the sprite get's flipped?" Well if the sprite is flipped, I have another routine that will draw the sprite, but instead of adding relative coordinates to the reference point, it subtracts the relative coordinates from the reference point. Some problems arise if you're not careful, though. Say you have a metasprite 24 pixels wide, and you are drawing it with X pixel 200 as the reference point. This sprite will be drawn from pixel 200 to 224. However, if you flip it horizontally, it will be drawn from 200 to 176, which is not what you want to happen, most of the time. If an enemy turns to face the other direction, you want the overall "box" of its graphics to remain stationary. So if it's facing the right, it should be drawn from pixel 200 to 224, and if it's facing left, it should be drawn from pixel 224 to 200. So for each of my metasprite definitions, I define:
<br />
<br />.db Number of hardware sprites
<br />.db X Width of metasprite
<br />.db Y Height of metasprite
<br />
<br />;1st hardware sprite
<br />.db Relative Y
<br />.db Tile
<br />.db Relative Attribute
<br />.db Relative X
<br />
<br />;2nd hardware sprite
<br />.db Relative Y
<br />.db Tile
<br />.db Relative Attribute
<br />.db Relative X
<br />...
<br />
<br />and so on. But you see, I define the width and height of the sprites, so when the sprite is flipped horizontally, I add the value of the sprite's width to the reference point before starting to draw it. In the example before, I said the sprite was 24 pixels wide, at pixel 200. So if it was flipped horizontally, I would add 24 to 200 to get 224, and start drawing backwards from there.
<br />
<br />Another thing I didn't consider until a while ago was a Relative attribute. This way, you can have a flipped hardware sprite in the metasprite definition. It just gets EORd with the current flip status. I don't know if this is anything new though...
<br />
<br />I also have different "types" of sprites. For my current NROM platformer, I have Complex, Complex Horizontally Flipped, Single, and Literal sprite types. Complex and Complex Horizontally Flipped are the types that are mostly used. That's basically any metasprite like an enemy or something big. No sprites are flipped vertically, as that saved time and space to sacrifice for my game. And then Single sprites are just single-tiled sprites. These are processed very quickly. Then the next type of sprite is a Literal, which does not have any relative coordinates of any kind. It is a table of coordinates and tiles that is copied directly to the OAM page.
<br />
<br />Having routines for each type really saves time, as I do little calculation during it. I don't know if this helps, but I'm happy to share ideas!

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Banshaku</b> [ Thu Sep 10, 2009 11:35 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Celius:
<br />
<br />Your idea is interesting. It could work in my case for horizontal flipping. For vertical, that would make things harder for meta-meta sprites.
<br />
<br />For my bug, it was simple. Since my coordinates starts negative in some case, I must check if carry flag is set after adding. If set, I must add 1 to position. The only issue with it is the extra processing. Maybe I should use that extra byte instead. hmmm.. I will think about something and test everyone solution to see which one is better for my case.
<br />
<br />Edit:
<br />
<br />I was not clear in the last comment. Extra byte is the one that Tepples recommended. I want to test it and see how it goes.
<br />
<br />Edit2:
<br />
<br />By the way, the thing I tested during lunch about finding the center and putting the value directly in your relative data, making some of the coordinates negatives: some people use this approach? Brelagad, is it the way you do your sprites?
<br />
<br />Edit3:
<br />
<br />I hate when I have plenty of ideas coming when I'm working.. Cannot concentrate.  Here's the idea:
<br />
<br />- Go with a top-left coordinate to make it simple to define data
<br />- Find center of sprite (width / 2) and keep that value for each meta-meta sprite 
<br />- before processing coordinate, change coordinate system (top left) to center of sprite system (X  - center of sprite)
<br />- If must flip sprite EOR value and remove 7 to re-ajust origin of tile to top-left.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Fri Sep 11, 2009 7:21 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"> <br /><br />By the way, the thing I tested during lunch about finding the center and putting the value directly in your relative data, making some of the coordinates negatives: some people use this approach? Brelagad, is it the way you do your sprites?</div>
<br />I guess so. I use my logical coordinate (the one used for collision detetion) "as-it" to the absolute cordinate of the meta sprite, without any adding. The metatile data itself is signed relative so that way I have a minumum bytes and minimum codes : It all is about putting the proper values in metasprites. Don't worry I have to adjust them a lot too and this is a little annoying, but all right. When I changed the size of my status bar I had to adjust all Y position for all sprites of the whole game, and it wasn't THAT bad (I only have several complete enemies right now).
<br />
<br />However if you go the meta-metasprite way (which is a good idea overall, I already have meta-metatiles for my maps and it works great), you'd definitely want to do it like Celius, and have relative positions for each metasprite, which itself is only made of positive positions. To get them flipped, I use bit 15 of pointer : Since ROM is always located at $8000-$ffff, the 15th bit of your pointer is useless, so you can use it for a flip flag instead. Add -$8000 to the adress if you don't want to see your metasprite flipped.[/url]

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Banshaku</b> [ Fri Sep 11, 2009 8:20 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I see. This mean I may have to edit often my data. An editor would be useful in that case. hmmm...  
<br />
<br />I just tested the concept of changing coordinate before applying the flipping. My sprite data use the origin at the top left so it's quite easy to edit. What I did is I find the center of the sprite (width / 2 for symetric sprite) and this become the object coordinate system.  I save that as meta data on the meta-meta sprite, not meta-sprite since all meta-sprite have the same coordinate system.  
<br />
<br />Inside the display method, the code as 2 path: writing normally and flipping on the left. This is to avoid branching on every attribute row like I was doing in debug mode (and like Tokumaru said).
<br />
<br />When writing normally, there is no EOR for attribute byte or the X byte.  The only thing it does is adjust the coordinate system to the object one (X - center value) for each relative sprite X attribute byte then add the global X position for the sprite.
<br />
<br />When branch is in flipping mode, before starting the process, it will remove 7 to the object coordinate system (center position) so we don't have to do it on every attribute row.  You EOR the attribute byte, adjust sprite relative X to the object coordinate system (center position), EOR with $FF the result then then add the global X position for the sprite.
<br />
<br />For now it's very simple and works with a normal symetric sprite.  I must test it tomorrow with the one with the gun to see if it still work when the center is not the center of the meta-meta sprite but a different one.
<br />
<br />Basically there is 2 function in one. This is just to abtract that concept from the caller.
<br />
<br />Edit:
<br />
<br />I had to test before I go to bed. I really wanted to know if it does work. I did the test with the gun frame and even if center is not in middle of sprite, it works fine: everything is flipped properly. It has less data, not much strange processing and I can edit my sprite in the top left way. That's useful.  
<br />
<br />I'm using for testing my software stack but I don't know if I will keep it or not for that case since it's quite an intensive method.
<br />
<br />So the cost is 1 byte per meta-meta sprite and a little bit of processing. That's quite some saving compared to before.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Sat Sep 12, 2009 1:37 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Yeah great work. The only drawback is that you have to store the width, which I don't do with my system (well in fact I do store the width for collision detection, but it's not used for sprites, as I like having sprites larger than their corresponding collision window).
<br />
<br />But you get noting for nothing : Store width or accept the "complications" of having your reference point in the center of the sprite instead of topleft. You took 1, I took 2, and there is nothing wrong with that.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Banshaku</b> [ Sat Sep 12, 2009 1:57 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">Yeah great work. The only drawback is that you have to store the width, which I don't do with my system (well in fact I do store the width for collision detection, but it's not used for sprites, as I like having sprites larger than their corresponding collision window).</div>
<br />
<br />Actually, I don't store the width. What I store is the logical center of the sprite. The reason is, for example, the standing sprite of mega man is 24 pixel wide and the center is 12. When you have the gun, the sprite is 31/32 pixels wide but the center is still 12. So you cannot divide the width to get the logical center of the sprite, you have to know it.
<br />
<br />I guess I may need to store elsewhere the width for hit boxes and things like that. For now, I'm still not at that point in my game engine.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Sat Sep 12, 2009 5:30 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Oh yes. So in summary there is 2 "optimal" ways to handle things :
<br />
<br />1) You always deals with sprite's topleft coordinates for hitboxes and for graphics. Your metasprites are defined from the topleft, however, you have to store the distance between topleft and center in order to flip the sprite
<br />
<br />2) You always deals with sprite's center coordnates, for hitboxes and for graphics, metatiles are defined from the center. No need to store width, but complicate collision logic and sprite definitions a little.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Banshaku</b> [ Sat Sep 12, 2009 7:35 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I see. For now I don't have a definitive choice yet. I'm testing plenty of ways of doing it. I seems to be heading for type #1. With the top left approach,  Either I always translate the coordinate so the resulting X/Y is the center of the sprite or X/Y is always the top of the sprite and only when I flip I have extra processing.
<br />
<br />I guess during the development phase, depending how complicated things becomes, I may have to test again those coordinate system and see how it goes.  At the least for now I removed the complete duplicated sprite, which is good.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dwedit</b> [ Sat Sep 12, 2009 9:26 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Some games make the "Hot spot" the bottom center of the sprite.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Sat Sep 12, 2009 9:57 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />That's pretty much what my game is doing. The center on the horizontal plan saves the headache to flip, and the bottom on the vertical plan makes sense because it's where the sprite stands on the floor, no matter the perspective or the size of the sprite.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Sat Sep 12, 2009 12:56 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Dwedit wrote:</div><div class="quotecontent">Some games make the "Hot spot" the bottom center of the sprite.</div>
<br />I chose to do this for Sonic, because this makes it easier to keep him attached to the ground/surface, even when he runs through loops, walls and ceilings.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Banshaku</b> [ Sat Sep 12, 2009 7:32 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Hot spot at the bottom, hmm.. I guess now that I improved my meta-meta sprite data format I should try to move my sprites around. That way, I will be able to see what works best for me for the hot spot.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>2</strong> of <strong>2</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>