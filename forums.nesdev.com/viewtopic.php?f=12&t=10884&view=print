<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - SPC-700 Test ROMs should be in SPC format: Rationale</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">SPC-700 Test ROMs should be in SPC format: Rationale</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=12&amp;t=10884">http://forums.nesdev.com/viewtopic.php?f=12&amp;t=10884</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Sun Jan 12, 2014 6:14 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>SPC-700 Test ROMs should be in SPC format: Rationale</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I was mulling over another ad-hoc SPC ROM format for these CPU-only tests, something like &lt;load addr&gt; &lt;exec addr&gt; &lt;code...&gt;, listing why the SPC file format wasn't viable and only for music, but reversed when I realized that the SPC file format is exactly the right thing.<br /><br />* SPC programs in SPC format, always.<br />* Do optimizations in tools, rather than format. Quick-upload development can have SPC RAM cleared in advance, and then upload only non-zero portion of SPC, for quick turn-around when developing.<br />* This format can be run on any SPC player.<br />* Does a little more than we need, but we can just specify that for tests in this format, only a few fields need to be parsed (initial RAM data and PC, nothing more). Other fields will be valid, so these aren't pseudo-SPC files.<br /><br /><strong>Test programs</strong><br />* Depend as little as possible on initial conditions: RAM contents, PC, nothing more. Rest is trivial to initialize and easy for incomplete SPC emulators to ignore (e.g. unimplemented DSP).<br />* Output result in multiple ways: beep codes (for SPC player testing), console output over I/O ports (for running on SNES/development with serial output from SNES), and to $6000 in memory (for CPU-only emulators).<br />* 64K+ size not a problem in SNES packaging of tests since smallest legal SNES ROM is 128K. Since test programs are mostly zero bytes and a little bit of code, these test ROMs compress where disk space is an issue.<br /><br /><strong>Multi-tests: rejected</strong><br />In the past I made test ROMs that ran multiple tests in one. I'm abandoning these for all platforms, starting with SPC-700 as I revamp my tests.<br />* No way to bundle every test for platform into one ROM, so you still have to make an automated test runner, or manually run multiple test ROMs.<br />* Multi-tests add complexity that cross the line between manageable and unmanageable. Unmanageable doesn't just mean mentally impossible to work with, but that the mental and coding work necessary to keep it working when improving the test framework is not justified by the benefit of supporting multi-tests.<br />* Test envirnment is different for multi-tests, since previous tests have run, and some tests can't work with it.<br />* Diagnostic output typically was altered or lessened in multi-tests.<br />* Extra build scripts. Test roms should be dead-simple to assemble; multi-tests were never such.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>byuu</b> [ Sun Jan 12, 2014 6:36 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: SPC-700 Test ROMs should be in SPC format: Rationale</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />From my own personal experience, the SPC format isn't all that hot.<br /><br />It does not capture 100% of the available state that we now know about. It was basically an emulator save state of ZSNES, and has no real structure, just a binary blob. (It's not even a good music format: had reads from $2140-3 been optionally logged, it could have supported streaming audio games.)<br /><br />I don't know why jwdonal is writing an SMP-only emulator. The only other device to use this CPU was a Sony VCR. Either you're writing an SPC player or an SNES emulator. For the former, SPC-only test ROMs would certainly help a lot. For the latter, it'd only hurt, as you'd have no obvious output for diagnostics other than pass/fail sound effects. You can of course make up a fake stdout register, if someone really wants to use your tests.<br /><br />From the perspective of size, 64K should be enough for anybody('s test ROMs), however you won't be able to write CPU&lt;&gt;SMP interaction test ROMs anymore.<br /><br />If it were imperative to target the SMP directly, bypassing the CPU, I'd rather see a 64K block of data, and absolutely nothing else (no header, no registers, no I/O values, no checksums, nothing.) Execution would begin at 0x0000, all registers would act exactly as if the chip were just power cycled. The IPLROM would be provided by the emulator (and wouldn't even be used unless the test program accessed it on its own.) This would be much easier to add support to in an emulator, and much easier to wrap in a simple &quot;uploader&quot; to run in a standard emulator (eg cat uploader.sfc test.smp &gt; test.sfc) And if you go this route, you could repurpose a special meaning for $f4-f7 (eg set f4-f6 to &quot;DBG&quot;, and now f7 acts like stdout), which the CPU &quot;wrapper&quot; program could catch to print diagnostics, and a standalone SMP emulator could easily support for printing to the console.<br /><br />This format would also be more agnostic: it'd be pure SMP, no DSP regs to unserialize/skip inside the SPC file.<br /><br />If you did go with this, the comm protocol should be a bit fancier, and have things like an 'end execution' signal, so you could compare the stdout value to a cached &quot;expected&quot; value, support pure binary data, etc.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sun Jan 12, 2014 7:01 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: SPC-700 Test ROMs should be in SPC format: Rationale</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">byuu wrote:</div><div class="quotecontent">I don't know why jwdonal is writing an SMP-only emulator.</div><br />For the same reason anyone makes a 6502 simulator. One reason is to automate unit tests on individual parts of a music engine.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">And if you go this route, you could repurpose a special meaning for $f4-f7 (eg set f4-f6 to &quot;DBG&quot;, and now f7 acts like stdout)</div><br />One little problem: how do you distinguish &quot;byuu and blargg&quot; from &quot;byu and blarg&quot;? There needs to be some way for the program on the SMP to &quot;clock&quot; character output.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">If you did go with this, the comm protocol should be a bit fancier, and have things like an 'end execution' signal</div><br />This EOF marker can be either 0x00 (NUL, which terminates a C string) or 0x1A (^Z, which terminates a CP/M or MS-DOS text file), or a special code sent on $F6.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Shiru</b> [ Sun Jan 12, 2014 7:39 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: SPC-700 Test ROMs should be in SPC format: Rationale</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">byuu wrote:</div><div class="quotecontent">The only other device to use this CPU was a Sony VCR.</div><br />Although the chip is certainly rare, I think this <a href="http://www.sony.net/Products/SC-HP/tec/catalog/pdf/micon.pdf" class="postlink">doc</a> and the fact the chip is supported in <a href="http://www.gaio.com/product/dev_tools/pdt_crosstool.html" class="postlink">this IDE</a> shows that it had some more applications besides just SNES and a VCR. A number of VCRs, at least, as there are 9 VCR-on-chip parts listed in the doc.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Sun Jan 12, 2014 7:47 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: SPC-700 Test ROMs should be in SPC format: Rationale</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />SPC is great for test ROMs (in addition OF COURSE to a .sfc-packaged version). They don't need its initial state feature, and if you're not writing a SNES emulator, you are pretty much writing some kind of SPC player. As detailed above, the SPC-based test ROMs output as beep codes, console output over the I/O ports (which the SNES wrapper decodes in real-time and prints on screen), and $6000 text output. This allows maximum flexibility in observing the results in various environments, without demanding any features beyond what an SPC player supports.<br /><br />SPC as a format for SNES music isn't complete and lacks a precise specification of how things are restored and the timing of the last critical things, but fortunately those don't matter for this purpose. If one is just writing SPC parsing for these upcoming test ROMs, one will only need to parse the initial PC and RAM contents, making it little less trivial than parsing some custom format. This is a win all around. I suppose my <a href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=7015" class="postlink">&quot;romless&quot; format</a> inspired this, and before that my proposal for an <a href="http://forums.nesdev.com/viewtopic.php?f=6&amp;t=6876" class="postlink">iNES-based NSF alternative</a>.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>byuu</b> [ Mon Jan 13, 2014 6:37 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: SPC-700 Test ROMs should be in SPC format: Rationale</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />&gt; A number of VCRs, at least, as there are 9 VCR-on-chip parts listed in the doc.<br /><br />Oh, well in that case ... :P<br /><br />(I actually would like to emulate the SMP interrupt support. Been considering wiring up a physical switch onto the SMP's IRQ line to try and see how the behavior would even work, eg where the interrupt vector address is stored.)<br /><br />&gt; If one is just writing SPC parsing for these upcoming test ROMs, one will only need to parse the initial PC and RAM contents, making it little less trivial than parsing some custom format.<br /><br />Well, seems you've already made up your mind before posting once again. Didn't expect us to agree, but at the very least your ideas do intrigue me to implement my own &quot;RAM loader&quot; formats for quick testing, should I ever get around to updating my test ROMs (verging on 8 - 10 years old.)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Mon Jan 13, 2014 1:19 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: SPC-700 Test ROMs should be in SPC format: Rationale</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">byuu wrote:</div><div class="quotecontent">(I actually would like to emulate the SMP interrupt support. Been considering wiring up a physical switch onto the SMP's IRQ line to try and see how the behavior would even work, eg where the interrupt vector address is stored.)</div><br />I tried a while back and could never get one to fire, but I might have done it wrong.<br /><br /><div class="quotetitle">byuu wrote:</div><div class="quotecontent">Well, seems you've already made up your mind before posting once again. Didn't expect us to agree, but at the very least your ideas do intrigue me to implement my own &quot;RAM loader&quot; formats for quick testing, should I ever get around to updating my test ROMs (verging on 8 - 10 years old.)</div><br />Yeah, I was only posting so the ideas behind it might be useful to someone else, and in case anyone had any arguments that could compel me to do things differently. I should have made it clear that I wasn't opening the choice of format I used to debate or anything.<br /><br />This is working nicely too. The tool to extract a custom format for sending to the SNES is trivial; it just starts at the end and works backwards until it hits a non-zero byte, and does the same for the beginning (skipping the $f0-$ff region), then packages up that chunk into a format with the load address and execution address on the beginning, as well as a header signature and CRC for the SNES to check. The CRC needed a custom tool anyway.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Mon Jan 13, 2014 2:07 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: SPC-700 Test ROMs should be in SPC format: Rationale</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent"><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">And if you go this route, you could repurpose a special meaning for $f4-f7 (eg set f4-f6 to &quot;DBG&quot;, and now f7 acts like stdout)</div><br />One little problem: how do you distinguish &quot;byuu and blargg&quot; from &quot;byu and blarg&quot;? There needs to be some way for the program on the SMP to &quot;clock&quot; character output.</div><br />Heh. You could have a zero byte signal a divider. But really, I have a protocol that uses another register to signal when a character is ready, and the SPC also waits first if the host has its busy flag set. Using a single register would run into meta-stability issues, where the host reads the register just as it's being changed. Or maybe you could get around that by just re-reading it once you find it's changed, as it'll be stable by that time. So a single-register protocol is probably viable if one wanted to do it.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">If you did go with this, the comm protocol should be a bit fancier, and have things like an 'end execution' signal</div><br />This EOF marker can be either 0x00 (NUL, which terminates a C string) or 0x1A (^Z, which terminates a CP/M or MS-DOS text file), or a special code sent on $F6.</div><br />Yeah, I  use 0x1a. My old Tandy 102 added this to the end of text files, and my text capture tool watched for this, so I naturally started using it for the console output as well. It's a nice way to signal the text capture to stop, so that the next tool in the script can run, like a binary capture.<br /><br />As for program ending, there's another I/O register value that signals when the program is busy, and when it's done (with its result code, where 0=success, otherwise error code).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>byuu</b> [ Tue Jan 14, 2014 7:54 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: SPC-700 Test ROMs should be in SPC format: Rationale</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />&gt; I tried a while back and could never get one to fire, but I might have done it wrong.<br /><br />I'm near-certain the behavior isn't directly exposed to software at all. If you mean you tried strobing the raw pins on the SMP chip to force one, then that is discouraging. There's no other reason to have SLEEP+STOP instructions, unless there is IRQ support inside this thing.<br /><br />&gt; I should have made it clear that I wasn't opening the choice of format I used to debate or anything.<br /><br />Which is of course fine. I do the same thing myself frequently.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>jwdonal</b> [ Thu Jan 16, 2014 2:36 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: SPC-700 Test ROMs should be in SPC format: Rationale</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">byuu wrote:</div><div class="quotecontent">I don't know why jwdonal is writing an SMP-only emulator.</div><br />Umm...huh? Who ever said I was writing an SMP-only emulator? Not sure where you got that from - not to mention it would be pretty boring.  I'm writing an SPC player. I'm just implementing one component at a time and verifying each as I go (e.g. implement SPC-700 core, verify, implement S-SMP wrapper around SPC-700 core, verify, implement DSP register interface, verify, implement DSP processing logic, verify, etc). I think that's pretty typical as far as single-person system development goes. This makes development much easier because you know your building atop a rock solid foundation when adding more features.<br /><br />Test ROMs that can run and verify a specific sub-block of the SPC player without requiring numerous other features to already be implemented is a huge plus.  For example, an SPC-700 core test ROM that requires a nearly 100% implementation of the SMP + DSP + 65816 + PPUs + rendering to already be implemented in order to work properly or see any results is totally pointless - and can also be very difficult and time consuming to figure out exactly where the bug is since the system is more complex.  I think Blargg's approach to having three different methods of outputting results is extremely effective in this regard.<br /><br /><div class="quotetitle">byuu wrote:</div><div class="quotecontent">(I actually would like to emulate the SMP interrupt support. Been considering wiring up a physical switch onto the SMP's IRQ line to try and see how the behavior would even work, eg where the interrupt vector address is stored.)</div><br />While the SPC-700 processor core does have interrupt support, neither the IRQ nor NMI pins are brought out to any of the pins on the S-SMP wrapper. They are both tied off to their inactive levels internally (i.e. inside the S-SMP chip). You can see the entire schematic and pinout of the device <a href="https://dl.dropboxusercontent.com/u/36237540/SNES/jwdonal/schematics/snes_schematic.zip" class="postlink">here</a>. So what/where is this &quot;IRQ line&quot; that you're hooking up to?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Thu Jan 16, 2014 5:09 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: SPC-700 Test ROMs should be in SPC format: Rationale</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The main motivation for switching to a headered format was flexibility in where the code was loaded. Before I had posted some binary files of code that had to be loaded at a specific address. I had since changed where the code was located (now near the end of memory). Rather than have more brittle external information (&quot;if file is larger than X bytes, load it here instead&quot;), I figured I'd add a header with load and execution addresses. But then I realized that SPC does exactly this already, with some other fields that can be ignored/placated. The loading code has no important difference besides file offsets: load header, read execution address, load RAM data, start executing. It's even simpler since the load address is always zero. And the only extra thing needed for the SPC to be usable on SPC players is the beep result code. Since all the output methods could be done without requiring said hardware (i.e. test won't hang if hardware isn't there), this would give me SPC files that could be used with just a CPU, in an SPC player, and loaded by a SNES ROM. The SNES ROM doesn't need to do full SPC loading since these tests only use a subset of functionality, so the loader code is simple, not that involved stuff for playing SPC files on a SNES.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>jwdonal</b> [ Thu Jan 16, 2014 5:27 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: SPC-700 Test ROMs should be in SPC format: Rationale</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">blargg wrote:</div><div class="quotecontent">Since all the output methods could be done without requiring said hardware (i.e. test won't hang if hardware isn't there), this would give me SPC files that could be used with just a CPU, in an SPC player, and loaded by a SNES ROM.</div><br />IMHO, I think this is a fantastic approach to creating test ROMs.  It also means the test ROMs have great re-use applications because as the developer slowly adds more and more features they will be able to see the results via the other output methods. For example, right now, I only have the SMP implemented so I rely on checking the result code and result string being written to $6000/$6004. Later on, when I finish implementing the DSP I can run the test again and make sure I get the same result, but now I can listen for the result via the beeps and make sure the tones sound correct.  Even further down the line once I implement the CPU&lt;-&gt;SMP I/O port interface I can run the test a third time and check the result using that output method while at the same time verifying that my SMP I/O port implementation works properly.  It's a win all around.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Thu Jan 16, 2014 6:16 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: SPC-700 Test ROMs should be in SPC format: Rationale</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />My take on the output methods:<br />* $6000 - CPU emulator, nothing more.<br />* DSP beeps - SPC player, where sound is the only output<br />* I/O - SNES wrapper, FPGA implementation, automation<br /><br />The $6000 interface requires extra features not found on hardware/normal emulators, so I see it as a concession for when getting a CPU emulator working. It's also easy to see the output in a debugger's memory viewer. Of course test ROMs aren't useful when building the CPU; a test log of a CPU test ROM is necessary, and I hope to release that along with the CPU test ROMs I'm working on.<br /><br />The I/O port output is the &quot;cleanest&quot; output, because it uses normal channels of communication (e.g. it could be implemented with a stock SPC-700 module connected to hardware). It's better than sound because it's easily automated into a unit test framework.<br /><br />Sound is a poor, information-limited approach, but all one can rely on in an SPC player.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>jwdonal</b> [ Thu Jan 16, 2014 6:32 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: SPC-700 Test ROMs should be in SPC format: Rationale</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">blargg wrote:</div><div class="quotecontent">The $6000 interface requires extra features not found on hardware/normal emulators...</div><br />The $6000 interface is great for FPGA implementations if you run your FPGA code in a simulator first - a lot of people don't simulate their code though and instead just program the FPGA and debug from there. But for those that do simulate their FPGA code before targetting the actual hardware (like good boys should <img src="./images/smilies/icon_wink.gif" alt=";)" title="Wink" />) in a simulator the $6000 interface is great because you can just set a &quot;watchpoint&quot; (using software debugger jargon) on that particular memory location and watch for any changes.  Perfect for a CPU-only implementation and is exactly how I used it.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>byuu</b> [ Thu Jan 16, 2014 10:12 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: SPC-700 Test ROMs should be in SPC format: Rationale</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">jwdonal wrote:</div><div class="quotecontent">While the SPC-700 processor core does have interrupt support, neither the IRQ nor NMI pins are brought out to any of the pins on the S-SMP wrapper. They are both tied off to their inactive levels internally (i.e. inside the S-SMP chip). You can see the entire schematic and pinout of the device <a href="https://dl.dropboxusercontent.com/u/36237540/SNES/jwdonal/schematics/snes_schematic.zip" class="postlink">here</a>. So what/where is this &quot;IRQ line&quot; that you're hooking up to?</div><br /><br />Oh, darn. Was hoping they left the pin on the chip but just tied to ground or something.<br /><br />So ... anyone want to try partial decapping and tapping the line directly on the die with a tungsten needle?

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>