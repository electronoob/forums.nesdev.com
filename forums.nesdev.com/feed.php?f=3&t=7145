<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=3&amp;t=7145" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2010-11-18T07:53:37-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=3&amp;t=7145</id>
<entry>
<author><name><![CDATA[pdq]]></name></author>
<updated>2010-11-18T07:53:37-07:00</updated>
<published>2010-11-18T07:53:37-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7145&amp;p=70176#p70176</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7145&amp;p=70176#p70176"/>
<title type="html"><![CDATA[emulator performance?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7145&amp;p=70176#p70176"><![CDATA[
<div class="quotetitle">Dwedit wrote:</div><div class="quotecontent"><br />I managed to get a speed boost by eliminating all the times it switch out of the CPU core, increment the scanline number, set the next timeout, then resume the CPU core.  Note that that is not likely to be a bottleneck for other emulators, but PocketNES has free PPU rasterization from the GBA's graphics hardware, so anything to speed up the CPU speeds up the emulator dramatically.<br /></div><br /><br />How are you handling rendering of the background and foreground to determine sprite0 detection from code running on the 6502 if the CPU emulation doesn't switch back/forth with the PPU emulation?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4437">pdq</a> — Thu Nov 18, 2010 7:53 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2010-11-18T05:22:07-07:00</updated>
<published>2010-11-18T05:22:07-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7145&amp;p=70172#p70172</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7145&amp;p=70172#p70172"/>
<title type="html"><![CDATA[emulator performance?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7145&amp;p=70172#p70172"><![CDATA[
<div class="quotetitle">NESICIDE wrote:</div><div class="quotecontent"><br /><div class="quotetitle">Zepper wrote:</div><div class="quotecontent">- You mean <em>after the third</em> PPU cycle...?<br /></div><br />Aren't the two statements equivalent?  <br />[snip diagram]<br />Maybe I'm not reading you right?</div><br />Some people from Brazil might not be familiar with some English idioms. "Every $ordinal $event" (e.g. "every third pixel") refers to what we'd call the effect of a clock divider, and "every other $event" means "every second $event". <br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Most logical because the PPU is the fastest running thing in the system, aside from the system clock which doesn't drive much worth actually emulating [I may be wrong here but I believe it only drives dividers for other clocks].<br /></div><br />The master clock drives the PPU's color generation. Four clocks make a pixel, and six clocks make a color subcarrier cycle. This is useful to know when implementing <a href="http://slack.net/~ant/libs/ntsc.html" class="postlink">NTSC filtering</a>, though one can always generate RGB video (like a PlayChoice or FC Titler) and use the SNES NTSC filter instead.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Thu Nov 18, 2010 5:22 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[cpow]]></name></author>
<updated>2010-11-17T20:22:22-07:00</updated>
<published>2010-11-17T20:22:22-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7145&amp;p=70166#p70166</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7145&amp;p=70166#p70166"/>
<title type="html"><![CDATA[emulator performance?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7145&amp;p=70166#p70166"><![CDATA[
<div class="quotetitle">Zepper wrote:</div><div class="quotecontent"><br />- You mean <em>after the third</em> PPU cycle...?<br /></div><br /><br />Aren't the two statements equivalent?  <br /><br />After the third:<br /><br />p p pc p p pc<br /><br />Every third:<br /><br />p p pc p p pc<br /><br />Maybe I'm not reading you right?<br /><br /><div class="quotetitle">Zepper wrote:</div><div class="quotecontent"><br />- Why "most logical way"? Indeed, I use <strong>PPU cycles</strong> to control the emulation timing. The only cycle counter used here is for PPU: from 0 to 341, plus the scanline counter, obviously.<br /></div><br /><br />Most logical because the PPU is the fastest running thing in the system, aside from the system clock which doesn't drive much worth actually emulating [I may be wrong here but I believe it only drives dividers for other clocks].<br /><br />My PPU cycle counter goes from 0 to 89341 or 89342 for NTSC.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3705">cpow</a> — Wed Nov 17, 2010 8:22 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Dwedit]]></name></author>
<updated>2010-11-17T20:05:01-07:00</updated>
<published>2010-11-17T20:05:01-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7145&amp;p=70165#p70165</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7145&amp;p=70165#p70165"/>
<title type="html"><![CDATA[emulator performance?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7145&amp;p=70165#p70165"><![CDATA[
I switched PocketNES over from a scanline number system to a "Total PPU cycles since prerender line" system.  Whenever I actually needed the scanline number, I just do a multiplcation of the current timestamp by a fixed point fraction 1/341, and subtract 1.<br /><br />I managed to get a speed boost by eliminating all the times it switch out of the CPU core, increment the scanline number, set the next timeout, then resume the CPU core.  Note that that is not likely to be a bottleneck for other emulators, but PocketNES has free PPU rasterization from the GBA's graphics hardware, so anything to speed up the CPU speeds up the emulator dramatically.<br /><br />The biggest speedup came from idle loop detection by identifying which branches or jumps were endless loops, and skipping ahead until the next event happens, (events like an Interrupt, sprite 0 hit, etc).  Code that skips ahead divides by the number of CPU cycles one iteration of the branch takes, so there is no timing lost.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=53">Dwedit</a> — Wed Nov 17, 2010 8:05 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Zepper]]></name></author>
<updated>2010-11-17T19:12:22-07:00</updated>
<published>2010-11-17T19:12:22-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7145&amp;p=70163#p70163</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7145&amp;p=70163#p70163"/>
<title type="html"><![CDATA[emulator performance?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7145&amp;p=70163#p70163"><![CDATA[
<div class="quotetitle">NESICIDE wrote:</div><div class="quotecontent"><br />I also do it by PPU cycles, running one CPU and APU cycle every third PPU cycle...seems the most logical way.   <img src="http://forums.nesdev.com/images/smilies/icon_eek.gif" alt=":shock:" title="Shocked" /><br /></div><br /><br />- You mean <em>after the third</em> PPU cycle...?<br /><br />- Why "most logical way"? Indeed, I use <strong>PPU cycles</strong> to control the emulation timing. The only cycle counter used here is for PPU: from 0 to 341, plus the scanline counter, obviously. <br /><br /><em><span style="font-size: 75%; line-height: normal">I smell an offtopic discussion</span></em><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=39">Zepper</a> — Wed Nov 17, 2010 7:12 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[cpow]]></name></author>
<updated>2010-11-17T19:01:52-07:00</updated>
<published>2010-11-17T19:01:52-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7145&amp;p=70162#p70162</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7145&amp;p=70162#p70162"/>
<title type="html"><![CDATA[emulator performance?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7145&amp;p=70162#p70162"><![CDATA[
<div class="quotetitle">Zepper wrote:</div><div class="quotecontent"><br /><div class="quotetitle">James wrote:</div><div class="quotecontent">FWIW, I'm using PPU cycles as my timebase and am calling my CPU code every 3 ticks (NTSC only).<br /></div><br /><br />- Odd. I though you should run 1 CPU cycle, then call the PPU to run 3 dots (pixels). You do the reverse... <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" /> Interesting, anyway.<br /><br />- My emu gets around 120FPS in my Core2Duo 2GHz. In a Pentium 4, it doesn't run at full speed if I use the blitter to double the image size &amp; stretch it.</div><br /><br />I also do it by PPU cycles, running one CPU and APU cycle every third PPU cycle...seems the most logical way.   <img src="http://forums.nesdev.com/images/smilies/icon_eek.gif" alt=":shock:" title="Shocked" /><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3705">cpow</a> — Wed Nov 17, 2010 7:01 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Zepper]]></name></author>
<updated>2010-11-16T16:07:19-07:00</updated>
<published>2010-11-16T16:07:19-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7145&amp;p=70081#p70081</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7145&amp;p=70081#p70081"/>
<title type="html"><![CDATA[emulator performance?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7145&amp;p=70081#p70081"><![CDATA[
<div class="quotetitle">James wrote:</div><div class="quotecontent"><br />FWIW, I'm using PPU cycles as my timebase and am calling my CPU code every 3 ticks (NTSC only).<br /></div><br /><br />- Odd. I though you should run 1 CPU cycle, then call the PPU to run 3 dots (pixels). You do the reverse... <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" /> Interesting, anyway.<br /><br />- My emu gets around 120FPS in my Core2Duo 2GHz. In a Pentium 4, it doesn't run at full speed if I use the blitter to double the image size &amp; stretch it.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=39">Zepper</a> — Tue Nov 16, 2010 4:07 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[James]]></name></author>
<updated>2010-11-16T09:59:48-07:00</updated>
<published>2010-11-16T09:59:48-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7145&amp;p=70064#p70064</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7145&amp;p=70064#p70064"/>
<title type="html"><![CDATA[emulator performance?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7145&amp;p=70064#p70064"><![CDATA[
Hmm... it would be easy enough to convert my scanline engine into a tile-based one.  Might give that a try for the boost in compatibility.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />I try to do the cycle-accurate "catch-up" design but I only sync between CPU instructions; I do not sync between all of the individual stages of a single instruction.<br /></div><br />FWIW, I'm using PPU cycles as my timebase and am calling my CPU code every 3 ticks (NTSC only).  It was easy to implement and, while I could probably get the biggest boost in performance by converting this to a catch-up design, it's not as slow as I thought it would be (heck, I think it's actually pretty fast).<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />That's encouraging to hear that you are getting good performance with Direct3D. As I understand it Direct2D is just a wrapper on top of Direct3D so it should perform similarly well.<br /></div><br />Yeah, I'm sure it will work well.  My benchmarks are done with rendering enabled and I'm getting &gt;1700 fps with the scanline engine.  It's definitely not a bottleneck!<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=88">James</a> — Tue Nov 16, 2010 9:59 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Luke]]></name></author>
<updated>2010-11-16T07:48:05-07:00</updated>
<published>2010-11-16T07:48:05-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7145&amp;p=70057#p70057</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7145&amp;p=70057#p70057"/>
<title type="html"><![CDATA[emulator performance?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7145&amp;p=70057#p70057"><![CDATA[
<div class="quotetitle">James wrote:</div><div class="quotecontent"><br />What method are you using?  Looks like it might be scanline-based and, if so, I'm interested in hearing about how you handle mid-frame effects.  My scanline based rendered is a lot faster than the cycle accurate one, but it can't handle, for example, Marble Madness.<br /></div><br />My approach is almost tile-based; I try to do the cycle-accurate "catch-up" design but I only sync between CPU instructions; I do not sync between all of the individual stages of a single instruction.  I also do some cheating in the PPU emulation to try to make the code run a little faster.  It's good enough to run games like Marble Madness and Rad Racer but it's definitely a step below the most accurate emulators out there now.  A re-design is probably about 6 years overdue.  <img src="http://forums.nesdev.com/images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /><br /><br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />This was why I switched from DirectDraw to Direct3D -- not just for performance reasons, but also because blits on Vista+ are no longer bilenearly filtered (yeah, I could roll my own, but...).  With Direct3D, I'm simply rendering a texture mapped quad and it's quite fast,  I haven't tried Direct2D.<br /></div><br />That's encouraging to hear that you are getting good performance with Direct3D.  As I understand it Direct2D is just a wrapper on top of Direct3D so it should perform similarly well.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3699">Luke</a> — Tue Nov 16, 2010 7:48 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[James]]></name></author>
<updated>2010-11-15T19:36:38-07:00</updated>
<published>2010-11-15T19:36:38-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7145&amp;p=70045#p70045</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7145&amp;p=70045#p70045"/>
<title type="html"><![CDATA[emulator performance?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7145&amp;p=70045#p70045"><![CDATA[
<div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />My emulator is not exactly cycle-accurate<br /></div><br />What method are you using?  Looks like it might be scanline-based and, if so, I'm interested in hearing about how you handle mid-frame effects.  My scanline based rendered is a lot faster than the cycle accurate one, but it can't handle, for example, Marble Madness.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />What areas of your code have you been optimizing? Find any good tricks?<br /></div><br />Nothing especially fancy.  I've been doing stuff like using look up tables where it makes sense (pattern bit interleaving, attribute table stuff, etc.), and, in general, just running under a profiler and focusing on hot spots.  The biggest improvements have come from rethinking stuff that's specific to my implementation.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />DirectDraw-based renderers, and neither appears to be hardware accelerated in Windows 7.<br /></div><br />This was why I switched from DirectDraw to Direct3D -- not just for performance reasons, but also because blits on Vista+ are no longer bilenearly filtered (yeah, I could roll my own, but...).  With Direct3D, I'm simply rendering a texture mapped quad and it's quite fast,  I haven't tried Direct2D.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=88">James</a> — Mon Nov 15, 2010 7:36 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Luke]]></name></author>
<updated>2010-11-15T08:09:33-07:00</updated>
<published>2010-11-15T08:09:33-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7145&amp;p=70021#p70021</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7145&amp;p=70021#p70021"/>
<title type="html"><![CDATA[Re: emulator performance?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7145&amp;p=70021#p70021"><![CDATA[
<div class="quotetitle">James wrote:</div><div class="quotecontent"><br />I've been working on optimizing my emulator's code recently and have bumped up the performance of the cycle accurate mode to &gt;500fps (Intel i7 920 w/ Nvidia 9800 GTX).  Just wondering how this compares to other emulators out there.  In other words, have I been successful or do I have a lot of room for improvement?<br />James<br /></div><br />My emulator is not exactly cycle-accurate (though it can handle most mid-frame PPU effects) and it runs at &gt; 1000 FPS on an Intel i5-760 processor, for what its worth.  (This is without actually copying the PPU/APU output to the screen/sound card; i.e. just calling my "calc frame" function inside a timed loop.)<br /><br />What areas of your code have you been optimizing?  Find any good tricks? I've been working on speeding up my emulation core over the past month and have made about a 20% improvement.  I still have some more areas I want to look into, but when I'm done I was planning on posting a list of things that happened to boost performance for my particular emulator implementation.  For example, I profiled a lot of games and found that LDA (zero page) was by far the most frequent instruction (accounting for about 16% of all instructions) and added a special case for that particular opcode which sped things up.  Not exactly ground-breaking stuff, but it was helpful to me so maybe it will be helpful for someone else.  <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /><br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />At least for me it runs sufficiently fast but I am having problems with others who use Win7 64-bit having sub-par performance.<br /></div><br />I just bought a new computer with Windows 7 64-bit and was disappointed to see that my emulator ran significantly worse than on a lesser machine running XP.  Very frustrating.  I think it is because I only have GDI and DirectDraw-based renderers, and neither appears to be hardware accelerated in Windows 7.  Hopefully a Direct2D renderer will perform better.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3699">Luke</a> — Mon Nov 15, 2010 8:09 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[cpow]]></name></author>
<updated>2010-11-10T19:13:08-07:00</updated>
<published>2010-11-10T19:13:08-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7145&amp;p=69825#p69825</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7145&amp;p=69825#p69825"/>
<title type="html"><![CDATA[emulator performance?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7145&amp;p=69825#p69825"><![CDATA[
<div class="quotetitle">James wrote:</div><div class="quotecontent"><br /><div class="quotetitle">albailey wrote:</div><div class="quotecontent">For me, I've learned a ton and have enjoyed a lot of the time spent on the emulator, so even if I can never get Battletoads working and playing at full rate, I'm still happy.<br /></div><br />That's the attitude that's kept me going all these years.  It was a long time before I could get Battletoads working, but all I learned along the way was the real reward.  Keep it up!</div><br /><br />I couldn't agree with this more.  My emulator is getting more and more accurate as the days go by--141 of 163 test roms passing!  At least for me it runs sufficiently fast but I am having problems with others who use Win7 64-bit having sub-par performance.<br /><br />The quest for accuracy and performance is most of the fun!<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3705">cpow</a> — Wed Nov 10, 2010 7:13 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[James]]></name></author>
<updated>2010-11-10T14:30:19-07:00</updated>
<published>2010-11-10T14:30:19-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7145&amp;p=69812#p69812</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7145&amp;p=69812#p69812"/>
<title type="html"><![CDATA[emulator performance?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7145&amp;p=69812#p69812"><![CDATA[
<div class="quotetitle">albailey wrote:</div><div class="quotecontent"><br />For me, I've learned a ton and have enjoyed a lot of the time spent on the emulator, so even if I can never get Battletoads working and playing at full rate, I'm still happy.<br /></div><br />That's the attitude that's kept me going all these years.  It was a long time before I could get Battletoads working, but all I learned along the way was the real reward.  Keep it up!<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=88">James</a> — Wed Nov 10, 2010 2:30 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[James]]></name></author>
<updated>2010-11-10T13:38:12-07:00</updated>
<published>2010-11-10T13:38:12-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7145&amp;p=69805#p69805</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7145&amp;p=69805#p69805"/>
<title type="html"><![CDATA[emulator performance?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7145&amp;p=69805#p69805"><![CDATA[
<div class="quotetitle">Dwedit wrote:</div><div class="quotecontent"><br />What do you consider to be "cycle-accurate"?<br /></div><br />Yeah, I guess that's a little vague.  PPU cycle accurate.  Enough for mid-scanline effects to work properly.<br /><br /><div class="quotetitle">Dwedit wrote:</div><div class="quotecontent"><br />What do you consider to be "hacks"?<br /></div><br />For example (from this thread: <a href="http://nesdev.com/bbs/viewtopic.php?t=6736" class="postlink">http://nesdev.com/bbs/viewtopic.php?t=6736</a>), detecting Battletoads and forcing sprite 0 hits at a specific time to work around timing issues.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=88">James</a> — Wed Nov 10, 2010 1:38 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Dwedit]]></name></author>
<updated>2010-11-10T13:23:55-07:00</updated>
<published>2010-11-10T13:23:55-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7145&amp;p=69804#p69804</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7145&amp;p=69804#p69804"/>
<title type="html"><![CDATA[emulator performance?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7145&amp;p=69804#p69804"><![CDATA[
I think Nesticle and Famtasia are the fastest Windows-based emulators right now, mainly because nobody ever ported LoopyNES to Windows and brought its accuracy up a few notches.<br /><br />What do you consider to be "cycle-accurate"?  Does that mean that it would simulate explicit reads and writes for each cycle within the instruction, and possibly execute something triggered for each access?  Does that mean merely getting page-crossing timing correct?<br /><br />What do you consider to be "hacks"?  Detecting a game and tweaking the timing slightly?  Idle loop skipping?<br /><br />Idle loop skipping is some really good stuff, especially when you don't need to emulate the PPU.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=53">Dwedit</a> — Wed Nov 10, 2010 1:23 pm</p><hr />
]]></content>
</entry>
</feed>