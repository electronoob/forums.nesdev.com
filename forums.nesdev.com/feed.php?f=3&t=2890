<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=3&amp;t=2890" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2007-01-21T06:02:00-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=3&amp;t=2890</id>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2007-01-21T06:02:00-07:00</updated>
<published>2007-01-21T06:02:00-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=2890&amp;p=21451#p21451</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=2890&amp;p=21451#p21451"/>
<title type="html"><![CDATA[details about what happens when the ppu is disabled ?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=2890&amp;p=21451#p21451"><![CDATA[
<div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Uh... firstly, the PPU is never disabled. What happens is to turn off background or sprite rendering using the 2001h flags, but the PPU itself still runs, got it?<br /></div><br />A more correct term would be "external bus acess disabled", because the chip itself still runs, but makes no acess to external devices via it's bus. The palette is internal to the PPU, so that's not an external acess.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Sun Jan 21, 2007 6:02 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Zepper]]></name></author>
<updated>2007-01-21T05:16:31-07:00</updated>
<published>2007-01-21T05:16:31-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=2890&amp;p=21449#p21449</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=2890&amp;p=21449#p21449"/>
<title type="html"><![CDATA[details about what happens when the ppu is disabled ?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=2890&amp;p=21449#p21449"><![CDATA[
Uh... firstly, the PPU is <em>never</em> disabled. What happens is to turn off background or sprite rendering using the 2001h flags, but the PPU itself still runs, got it? Next, if mind doesn't fail, the sprite RAM, and possibly the 8-sprites-cache, have nothing, but garbage. Personally, I use FFh data as initial setup for both. Some games will write F8h data into sprite RAM on reset though.<br /><br />A taste that the PPU doesn't "disable" is the background rendering when it's "disabled": <em>if the PPU address is between $3F00-$3FFF or any mirrored area of that, that's the color it draws to the screen. Otherwise, $3F00 is the color drawn.</em> <br /><br />*bump* I might be wrong, as I'm not a NES hardware analyser. <img src="http://forums.nesdev.com/images/smilies/icon_sad.gif" alt=":(" title="Sad" /><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=39">Zepper</a> — Sun Jan 21, 2007 5:16 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Disch]]></name></author>
<updated>2007-01-21T00:58:30-07:00</updated>
<published>2007-01-21T00:58:30-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=2890&amp;p=21439#p21439</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=2890&amp;p=21439#p21439"/>
<title type="html"><![CDATA[Re: details about what happens when the ppu is disabled ?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=2890&amp;p=21439#p21439"><![CDATA[
<div class="quotetitle">mattmatteh wrote:</div><div class="quotecontent"><br />is it possible that the ppu still does everything internally except doesnt read or write to the ppu address or data bus ?  (and show the color as described in other thread)<br /></div><br /><br />OAM/NT/CHR is all accessible by the CPU when the PPU is off, therefore logically I'd assume the PPU must not be accessing any of it.  It's possible the shift registers still get shifted and all the weird low-level stuff is still going, but without being able to perform new fetches to refresh itself, they would all be filled with useless garbage pretty quickly.<br /><br />The PPU is also leaving the PPU Address unchanged.<br /><br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />example, the ppu goes on -&gt; off -&gt; horizontal position 0... 63, where oam is being set to 0xff.  the background would be messed up only for those pixels and resume on the correct tile ?<br /></div><br /><br />the BG would be screwed up a bit.  The PPU updates the PPU address (the same one set by $2006) <em>as it renders</em>.  IE:  it adds 1 every 8 cycles to advance to the next tile.  When the PPU is turned off, it does not do these updates, so when you turn it back on, it will start fetching tiles from where the PPU address is left at -- regardless of what scanline it's on or where in the scanline it is.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />sprites might be ok if not effected by 0xff initialization ?<br /></div><br /><br />No clue.  I've wondered how sprites are managed when the PPU is switched on mid-frame as well.<br /><br />I currently am <em>totally guessing</em> that the secondary OAM is filled with emptiness when the PPU is switched off so that a whole scanline is "skipped" until it gets restarted by having the PPU on from the start of the scanline.  But I'm sure this is totally wrong and I have no basis for assuming this -- it's just how I'm handling it in my emu.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=33">Disch</a> — Sun Jan 21, 2007 12:58 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[mattmatteh]]></name></author>
<updated>2007-01-21T00:29:32-07:00</updated>
<published>2007-01-21T00:29:32-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=2890&amp;p=21438#p21438</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=2890&amp;p=21438#p21438"/>
<title type="html"><![CDATA[details about what happens when the ppu is disabled ?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=2890&amp;p=21438#p21438"><![CDATA[
i have read in past forum posts that the ppu does nothing when disabled.  i searched for info but couldnt find any past post.  i supose i am not searching the right words.<br /><br />i was looking at recoding my ppu (code clean up and reuse).<br /><br />is it possible that the ppu still does everything internally except doesnt read or write to the ppu address or data bus ?  (and show the color as described in other thread)<br /><br />example, the ppu goes on -&gt; off -&gt; horizontal position 0... 63, where oam is being set to 0xff.  the background would be messed up only for those pixels and resume on the correct tile ?   sprites might be ok if not effected by 0xff initialization ?<br /><br />example, the ppu goes on -&gt; off -&gt; on horizontal position 200 ... 255, where the sprites are being evaluated for range.  assume that the inrange is done evaluating, would the sprite data fetch 256...320 still fetch the correct sprites ?<br /><br />since the ppu is a large state machine, i was thinking that some states still operate but dont read or write externally.<br /><br />what information is known about the ppu when background and sprites are disabled ?<br /><br />thanks<br />matt<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=170">mattmatteh</a> — Sun Jan 21, 2007 12:29 am</p><hr />
]]></content>
</entry>
</feed>