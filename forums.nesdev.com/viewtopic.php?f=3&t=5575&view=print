<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Collaboration between emulator and frontend authors</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Collaboration between emulator and frontend authors</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=3&amp;t=5575">http://forums.nesdev.com/viewtopic.php?f=3&amp;t=5575</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Zepper</b> [ Fri Sep 18, 2009 8:26 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />- Personally, I don't think it should be the work of just one person, but perhaps a group. One writes the emulator while another designs the GUI &amp; interfaces it. ^_^;; Like architect and engineer.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Fri Sep 18, 2009 1:33 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />First off, that would need some sort of defined API for a frontend to call an emulator. What would it look like?
<br />
<br />And what kind of polymorphism would it use? <ul><li>C++ </li><li>Objective-C (GNUstep under Windows and Linux, Cocoa under Mac) </li><li>Plain C with function pointer tables a la Allegro </li><li>No polymorphism; only one emulator per compiled application </li></ul>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>byuu</b> [ Fri Sep 18, 2009 4:50 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />A decent emulator should have the core and GUI completely abstracted anyway. I let both Richard Bannister and OpenEmu use my core, they just add the GUI stuff to it via a derived Interface class.
<br />
<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">And what kind of polymorphism would it use?</div>
<br />
<br />You shouldn't need any polymorphism, different systems have too many different peculiarities. It'd put too much strain on the emulator devs. Just isolate each emulator core into its own namespace, and then have the GUI hook into each one as needed.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Zepper</b> [ Fri Sep 18, 2009 6:13 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />- My my... <img src="./images/smilies/icon_sad.gif" alt=":(" title="Sad" /> Well, RockNES is an example. It had a MacOS, a Linux and a Win32 ports, each one using a different GUI. In fact, RockNESX' GUI is still awesome. Plus, I didn't mean a frontend anyways, but yes, it's possible though.
<br />
<br />- Take it easy, tepples.  <img src="./images/smilies/icon_redface.gif" alt=":oops:" title="Embarassed" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>RetroRalph</b> [ Fri Sep 18, 2009 6:17 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />It's fairly easy to just output a "runframe" type API where you pass input, and the core just gives you a 32bit pixel buffer + sound output. Then you just need a few more like loadgame, exitgame, and some kind of way to interface with the emulator. Options and things of this nature make it a little harder but not that much so. My emulator is pretty much done like this, even though there is no use for it at the moment I always like the plugin type mentality. If you do the plugin type interface in a C compatible way, the front end could be pretty much any language, whereas C++ complicates it a bit more.
<br />
<br />In my opinion I don't think many emulator authors will really like doing this though because the frontend gets all the credit by the average person. The emulator programmer ends up becoming the "hidden in the basement" type specialist guy that no one knows about, so the motivation to keep going would be low I feel. In essence your project becomes a DLL that other "real applications" use. Motivation needs to be high if you want someone to keep spending their free time doing something for free when they could be making money using the same skills.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>koitsu</b> [ Fri Sep 18, 2009 7:54 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">RetroRalph wrote:</div><div class="quotecontent">... The emulator programmer ends up becoming the "hidden in the basement" type specialist guy that no one knows about ...</div>
<br />
<br />Two points:
<br />
<br />1) If any of the people involved in the project are concerned with who gets the attention/celebrity status, then the project is bound to fail.  This shouldn't be, nor become, a focus point.  There's been enough of this "fame" focus in the NES emulation "scene" since the beginning of time -- hell, even I've been accused of it (still blows my mind).  It's probably because everyone and their dog wants in on the NES emulation bandwagon.
<br />
<br />2) Don't worry -- the "behind the scenes" guy will most definitely become known about.  A new emulator called MyFirstEmulator ((tm) Fisher Price) is released by some kid who's still learning C, with the actual emulator core being done by said "specialist guy that no one knows about".  Site is put up, with a forum (as always is the case).
<br />
<br />Shortly after, tons of people begin flowing in to the forum complaining about how it doesn't run X game, has graphical glitches, etc.. -- all stuff the kid can't fix because he's using someone elses core.  He'll immediately take the "I'm innocent" stance by stating something like this: "lol thts cuz teh emulator enjine is {link to emulator core that he uses}, itz not my bug lol".
<br />
<br />I know generic end-users who actually know of blargg's audio libraries, and instead of questioning them, ask a different question: why aren't these being used in emulators for accurate sound?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Fri Sep 18, 2009 8:41 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">byuu wrote:</div><div class="quotecontent">You shouldn't need any polymorphism</div><br />I mean "polymorphism" in the sense that there is a format for a "core" that the front-end can call into. For example, a pure-C implementation would give each core a function pointer table that might look like this:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">struct EmulatorInterface &#123;<br /><br />&nbsp; // Allocate memory for an emulated machine<br />&nbsp; struct Machine &#40;*alloc&#41;&#40;&#41;;<br /><br />&nbsp; // Deallocate all memory owned by this machine and free it<br />&nbsp; void &#40;*dealloc&#41;&#40;struct Machine *&#41;;<br /><br />&nbsp; // Initialize a machine by loading in a program image<br />&nbsp; // and hard reset the machine<br />&nbsp; bool &#40;*initWithROM&#41;&#40;struct Machine *st,<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const unsigned char *data, size_t size&#41;;<br /><br />&nbsp; // Load the state of a machine after initWithROM.<br />&nbsp; // To soft-reset the emulator, specify data = NULL or size = 0.<br />&nbsp; bool &#40;*loadState&#41;&#40;struct Machine *st,<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const unsigned char *data, size_t size&#41;;<br /><br />&nbsp; // Get an upper bound on the size of a saved state<br />&nbsp; uint32_t &#40;*getStateSize&#41;&#40;struct Machine *st&#41;;<br /><br />&nbsp; // Save the state of the machine if it would fit in size bytes.<br />&nbsp; // Return the actual number of bytes, or 0 if not enough space.<br />&nbsp; size_t &#40;*saveState&#41;&#40;struct Machine *st,<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; unsigned char *data, size_t size&#41;;<br /><br />&nbsp; // Set the input for one player<br />&nbsp; void &#40;*setInput&#41;&#40;struct Machine *st,<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;size_t player, uint32_t axes, uint32_t buttons&#41;;<br /><br />&nbsp; // Clock the machine by one &quot;frame&quot;<br />&nbsp; void &#40;*runFrame&#41;&#40;struct Machine *st&#41;;<br /><br />&nbsp; // Return a reference to a bitmap of the latest video frame.<br />&nbsp; // This reference is valid until the next runFrame call.<br />&nbsp; // Also get the current pixel aspect ratio &#40;e.g. 8:7 for NTSC<br />&nbsp; // NES/SNES or 10:11 for DVD&#41;.<br />&nbsp; BITMAP *&#40;*getVideo&#41;&#40;struct Machine *st,<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; uint32_t *parNum, uint32_t *parDen&#41;;<br /><br />&nbsp; // Get the frame rate &#40;e.g. 39375000/655171 for NTSC NES/SNES&#41;<br />&nbsp; void &#40;*getFrameRate&#41;&#40;struct Machine *st,<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;uint32_t *num, uint32_t *den&#41;;<br /><br />&nbsp; // Get the audio's sample rate in Hz<br />&nbsp; uint32_t &#40;*getAudioRate&#41;&#40;struct Machine *st&#41;;<br /><br />&nbsp; // Get the number of audio output channels &#40;usually 1 or 2&#41;<br />&nbsp; size_t &#40;*getAudioChannels&#41;&#40;struct Machine *st&#41;;<br /><br />&nbsp; // Get up to nSamples audio samples.&nbsp; For multichannel audio,<br />&nbsp; // nSamples must be a multiple of the number of channels.<br />&nbsp; size_t &#40;*getAudioSamples&#41;&#40;struct Machine *st,<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; int16_t *samples, size_t nSamples&#41;;<br />&#125;;<br /><br /></div><br />Without polymorphism, you can't have more than one core in one executable. That would rule out things like REW, Mednafen, MESS, VisualBoyAdvance, and emulation of a Genesis with a Power Base Converter.<br /><br /><div class="quotetitle">koitsu wrote:</div><div class="quotecontent">2) Don't worry -- the "behind the scenes" guy will most definitely become known about.  A new emulator called MyFirstEmulator ((tm) Fisher Price) is released by some kid who's still learning C, with the actual emulator core being done by said "specialist guy that no one knows about".  Site is put up, with a forum (as always is the case).</div>
<br />And per the free software license of the emulator (e.g. BSD, MIT, GPL), the author of the emulator engine gets credit either in the program or in the manual. For example, there are a few web browsers based on the Gecko back-end (e.g. Firefox, SeaMonkey, Fennec, K-Meleon) and a few based on the WebKit back-end (e.g. Safari, Chrome). If you're more of an Opera fan, open Wii Internet Channel and see how many credits you can spot in its manual.
<br />
<br />A front-end might not even be a general emulator as you know it. It could be a level editor for a game (where the preview is rendered in the emulator), a music tracker, or any program that has both native and emulated code.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>RetroRalph</b> [ Fri Sep 18, 2009 9:26 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">koitsu wrote:</div><div class="quotecontent">1) If any of the people involved in the project are concerned with who gets the attention/celebrity status, then the project is bound to fail.  This shouldn't be, nor become, a focus point.  There's been enough of this "fame" focus in the NES emulation "scene" since the beginning of time -- hell, even I've been accused of it (still blows my mind).  It's probably because everyone and their dog wants in on the NES emulation bandwagon.</div><br /><br />There needs to be some motivating factor though. I don't believe "it's fun to work on" is something that lasts forever. A little mockup that takes a week of anything you like is probably "fun to work on" but after a while any large project needs something more to keep it going, in my opinion anyhow. Call it fame, attention, whatever, you will find the most successful emulators like MAME/ZSNES get plenty of it. A lot of the MAME guys also like moving from target to target to keep their motivation high, it's harder to do that with consoles.<br /><br /><div class="quotetitle">koitsu wrote:</div><div class="quotecontent">2) Don't worry -- the "behind the scenes" guy will most definitely become known about.  A new emulator called MyFirstEmulator ((tm) Fisher Price) is released by some kid who's still learning C, with the actual emulator core being done by said "specialist guy that no one knows about".  Site is put up, with a forum (as always is the case).<br /><br />Shortly after, tons of people begin flowing in to the forum complaining about how it doesn't run X game, has graphical glitches, etc.. -- all stuff the kid can't fix because he's using someone elses core.  He'll immediately take the "I'm innocent" stance by stating something like this: "lol thts cuz teh emulator enjine is {link to emulator core that he uses}, itz not my bug lol".</div><br /><br />I see what you are saying, but if the emulator core is pretty accurate and runs 99% of games pretty much perfectly most people will never find a game that doesn't run or has issues. What you're talking about only works if there are major bugs and things get fixed by the basement guy, hence bringing attention to them. Even then when those issues are fixed all the new users still have no clue what happened in the past and just continue to assume things.<br /><br /><div class="quotetitle">koitsu wrote:</div><div class="quotecontent">I know generic end-users who actually know of blargg's audio libraries, and instead of questioning them, ask a different question: why aren't these being used in emulators for accurate sound?</div>
<br />
<br />I think anyone with the technical nous to understand these things even on the surface level are the 10% of the users at most. The rest just run the program and expect to see things happen. If they don't they just move on most of the time. So what the majority see is the frontend, the name of the frontend and basically everything that whoever created the frontend wants to show.
<br />
<br />It's fun being the backend guy if you're getting some sort of compensation for it because then it doesn't matter if most don't know your contributions. If you look at the N64 and PSX emulation world the whole plugin thing just ended up creating a big mess and lack of motivation for the developers of them. Even though it seemed like a good idea at the time, it ended up creating stagnation.
<br />
<br />That said, something can never fail if you don't try, so who knows, maybe it will work if the right people are behind it. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Mednafen</b> [ Sat Sep 19, 2009 5:19 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Create an abstract "protocol" that can be used over sockets, pipes, etc, that makes use of shared memory to transfer large raw data blocks efficiently.
<br />
<br />Create a wrapper library in C(maybe others?) for the emulator backend, that defines a system-specific entry point, calls into the actual backend's code, and provides a "nicer" interface for the C/C++ emulator core to use than the raw protocol.  License under BSD or MIT.
<br />
<br />Create a glue library in C(and other languages as the need arises) that provides various functions/methods to communicate with the backend(the backend will be spawned on-demand as a separate process).  License under BSD or MIT as well.
<br />
<br />
<br />As an alternative, we could create a special combined glue/wrapper library for use in single-emulator...emulators for embedded-style systems that don't have the concept of processes.
<br />
<br />
<br />I'm for full abstract of input device information, and any emulator backend settings.  It will be very difficult to formulate an abstraction that can adequately deal with all potentially-emulated systems, but I don't believe it is impossible, and it doesn't have to be perfect, just easy to understand and use.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dwedit</b> [ Sat Sep 19, 2009 7:37 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />If Nestopia had a nice frontend with all the hacking and debugging features of FCEUX, would anyone bother using FCEUX?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Sat Sep 19, 2009 8:43 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Dwedit wrote:</div><div class="quotecontent">If Nestopia had a nice frontend with all the hacking and debugging features of FCEUX, would anyone bother using FCEUX?</div>
<br />I wouldn't. I only use it because it has the best debugging features. Nintendulator has many features as well, but the interface is not nearly as good.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>cpow</b> [ Sat Sep 19, 2009 9:31 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">A front-end might not even be a general emulator as you know it. It could be a level editor for a game (where the preview is rendered in the emulator), a music tracker, or any program that has both native and emulated code.</div>
<br />
<br />This was the main thrust behind adding an emulator to my tool...of course...it is still too much a WIP to be completely that.  But the music editor uses the APU core.  It just naturally fits.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>