<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=3&amp;t=8458" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2011-12-30T17:54:04-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=3&amp;t=8458</id>
<entry>
<author><name><![CDATA[Bisqwit]]></name></author>
<updated>2011-12-30T17:54:04-07:00</updated>
<published>2011-12-30T17:54:04-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8458&amp;p=88211#p88211</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8458&amp;p=88211#p88211"/>
<title type="html"><![CDATA[instruction usage list]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8458&amp;p=88211#p88211"><![CDATA[
<div class="quotetitle">tepples wrote:</div><div class="quotecontent"><br /><div class="quotetitle">Dwedit wrote:</div><div class="quotecontent">Surprises:<br />Super Mario Bros and Bionic Commando seem to love JSR without RTS.<br /></div><br />Now that I think of it, that's because of how SMB1 implements switch statements.</div><br />Fairly common in NES games over all, from what I have seen. I have disassembled a few games, and I have found this paradigm in more than half of them. Castlevania, Solstice, Super Mario Bros., and Solomon's Key are a few examples.<br />Solomon's Key however is an interesting case, because it uses a voluntary co-thread model. Yes, it runs up to 8 threads in "parallel", with a dedicated stack for each of them, and a tiny task switching function which is called with "jsr" and returns with "rts" but switches stack pointers in the midst, so it returns to a different invocation than where it was called from.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5043">Bisqwit</a> — Fri Dec 30, 2011 5:54 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2011-12-30T07:02:11-07:00</updated>
<published>2011-12-30T07:02:11-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8458&amp;p=88189#p88189</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8458&amp;p=88189#p88189"/>
<title type="html"><![CDATA[instruction usage list]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8458&amp;p=88189#p88189"><![CDATA[
<div class="quotetitle">Dwedit wrote:</div><div class="quotecontent"><br />Surprises:<br />Super Mario Bros and Bionic Commando seem to love JSR without RTS.<br /></div><br />Now that I think of it, that's because of how SMB1 implements switch statements. Here's an excerpt from doppelganger's SMBDis, copyright 1985 Nintendo, de minimis and fair use claimed:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">; This is why SMB1 uses JSR without RTS:<br />; JSR loads the address of a jump table &#40;minus 1&#41; onto the stack.<br /><br />OperModeExecutionTree:<br />  lda OperMode<br />  jsr JumpEngine<br />  .dw TitleScreenMode<br />  .dw GameMode<br />  .dw VictoryMode<br />  .dw GameOverMode<br /><br />; ...<br />JumpEngine:<br />  asl          ;get index into jump table<br />  tay<br />  pla          ;pull saved return address from stack<br />  sta $04      ;save to indirect<br />  pla<br />  sta $05<br />  iny<br />  lda &#40;$04&#41;,y  ;load pointer from indirect<br />  sta $06      ;note that if an RTS is performed in next routine<br />  iny          ;it will return to the execution before the sub<br />  lda &#40;$04&#41;,y  ;that called this routine<br />  sta $07<br />  jmp &#40;$06&#41;    ;jump to the address we loaded<br /></div><br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />STA $xx is more common than LDA $xx in many games.<br /></div><br />Which can be explained if a lot of them are preceded by LDA #$xx (initialize variable) or LDA $xxxx (read from I/O port) or LDA $xxxx,X (read from ROM table).<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />No surprise:<br />Nobody likes the ($xx,X) addressing mode.<br /></div><br />Except 1942, which has LDA ($xx,X) as about 0.5%, and Back to the Future, which has it at 0.3%. A few games had it even lower but roughly commensurate with how I guess my sound engine uses the mode.<br /><br />How do you set up VBA to make these profiles? I wanna try it with some homebrew games.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Fri Dec 30, 2011 7:02 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Dwedit]]></name></author>
<updated>2011-12-29T22:02:43-07:00</updated>
<published>2011-12-29T22:02:43-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8458&amp;p=88172#p88172</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8458&amp;p=88172#p88172"/>
<title type="html"><![CDATA[instruction usage list]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8458&amp;p=88172#p88172"><![CDATA[
I went ahead and made lists for several games.<br />My method:  Start profiling after main gameplay starts, and play for a short time before ending.  Sometimes I beat the level, sometimes I don't.<br />Game selection is a tad random, mostly some games I picked that are in the #-D range of the alphabet.<br /><br />Speedhacks remove many of the endless idle loops, but not for all games.<br /><br />Results:<br /><!-- m --><a class="postlink" href="http://www.dwedit.org/files/.nes_profiling/">http://www.dwedit.org/files/.nes_profiling/</a><!-- m --><br /><br />Surprises:<br />Super Mario Bros and Bionic Commando seem to love JSR without RTS.<br />STA $xx is more common than LDA $xx in many games.<br />Cosmic Epsilon really likes NOP.<br /><br /><br />No surprise:<br />Nobody likes the ($xx,X) addressing mode.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=53">Dwedit</a> — Thu Dec 29, 2011 10:02 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Dwedit]]></name></author>
<updated>2011-12-29T18:53:22-07:00</updated>
<published>2011-12-29T18:53:22-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8458&amp;p=88137#p88137</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8458&amp;p=88137#p88137"/>
<title type="html"><![CDATA[instruction usage list]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8458&amp;p=88137#p88137"><![CDATA[
I'd need to look over the test cases again to see exactly where the "more JSR than RTS" came from.<br />Also, here's the raw numbers for JSR and RTS (not percentages):<br />36,737,719   JSR<br />36,448,572   RTS<br />A difference of about 300,000 more executions of JSR than RTS.  I'm trying to think of which game would have aborted so many function calls.<br />It would have been early in the alphabet, before "D", since I stopped logging after PocketNES crashed due to a bug in old versions of VBA (GBA Scanline IRQs are broken in old VBA)<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=53">Dwedit</a> — Thu Dec 29, 2011 6:53 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Kasumi]]></name></author>
<updated>2011-12-29T19:14:31-07:00</updated>
<published>2011-12-29T18:42:36-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8458&amp;p=88134#p88134</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8458&amp;p=88134#p88134"/>
<title type="html"><![CDATA[instruction usage list]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8458&amp;p=88134#p88134"><![CDATA[
<div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />I don't know about you, but sometimes a single subroutine in my code has 2 RTSes, ie: for an early exit when space is tight (1 less byte than a branch to the nearest RTS or to the end of the subroutine) so I thought there would be more RTSes than JSRs<br /></div><br /><br />I assume this only counts when each instruction is run, because again, there's not a good way to know if a $60, or $20 in a rom is an instruction or data without running it. So what you mention wouldn't affect the count. And yeah, I have multiple RTSs as well. One of the few things that saves bytes AND cycles. <img src="http://forums.nesdev.com/images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /> <br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />I have only one idea then - probably the stats didn't count NMI/IRQ as jsr, but count their rts.<br /></div><br /><br />NMI/IRQ don't use rts ($60). They use RTI ($40). It's gotta be tricky stack things, or just the fact that logging may have stopped in the middle of a subroutine so the RTS wasn't logged. (Or I'm just wrong about my assumptions of how this was done, in which case I'll wear my dunce cap.)<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3504">Kasumi</a> — Thu Dec 29, 2011 6:42 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Shiru]]></name></author>
<updated>2011-12-29T18:33:12-07:00</updated>
<published>2011-12-29T18:33:12-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8458&amp;p=88133#p88133</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8458&amp;p=88133#p88133"/>
<title type="html"><![CDATA[instruction usage list]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8458&amp;p=88133#p88133"><![CDATA[
I made a mistake initially, mixed number of jsr/rts opcodes with number of actual call/rets. There easily could be more jsr than rts or vice versa depending from code (both cases were mentioned), but logically, every executred jsr has only one executred rts, and it can't lack the rts unless some tricky stack manipulation with jmp instead of rts is involved.<br /><br />I have only one idea then - probably the stats didn't count NMI/IRQ as jsr, but count their rts.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4205">Shiru</a> — Thu Dec 29, 2011 6:33 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[ccovell]]></name></author>
<updated>2011-12-29T18:17:44-07:00</updated>
<published>2011-12-29T18:17:44-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8458&amp;p=88130#p88130</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8458&amp;p=88130#p88130"/>
<title type="html"><![CDATA[instruction usage list]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8458&amp;p=88130#p88130"><![CDATA[
I don't know about you, but sometimes a single subroutine in my code has 2 RTSes, ie: for an early exit when space is tight (1 less byte than a branch to the nearest RTS or to the end of the subroutine) so I thought there would be more RTSes than JSRs.  But I guess I'm a bad programmer.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=355">ccovell</a> — Thu Dec 29, 2011 6:17 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[thefox]]></name></author>
<updated>2011-12-29T08:11:13-07:00</updated>
<published>2011-12-29T08:11:13-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8458&amp;p=88104#p88104</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8458&amp;p=88104#p88104"/>
<title type="html"><![CDATA[instruction usage list]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8458&amp;p=88104#p88104"><![CDATA[
<div class="quotetitle">foobaz wrote:</div><div class="quotecontent"><br />And so, to circle back, I wonder how much typing you can add without getting false negatives? For those asking, "why?" the point is mostly to help emudev. The quicker you can spot when something has gone south, the easier it is to track it down - at least that's the theory anyway.<br /></div><br />I added similar functionality (checking for JSR/RTS IRQ/RTI matches for simple function profiling support) to NintendulatorDX at one point, but it turned out not to be very useful for existing ROMs since there are surprisingly many games that don't play nice with the stack.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=80">thefox</a> — Thu Dec 29, 2011 8:11 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[foobaz]]></name></author>
<updated>2011-12-28T15:14:40-07:00</updated>
<published>2011-12-28T15:14:40-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8458&amp;p=88071#p88071</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8458&amp;p=88071#p88071"/>
<title type="html"><![CDATA[instruction usage list]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8458&amp;p=88071#p88071"><![CDATA[
Wow, I find this conversation really interesting. I was recently trying to track down some problems where I was rts'ing or rti'ing to an obviously bad address, and I was wondering what kind of checking was legitimate. I ended up adding type information to the stack so I could try to verify that stack pushes and pops matched each other. So, for example, in nmi() I have:<div class="codetitle"><b>Code:</b></div><div class="codecontent">mmu.stackPush16&#40;PC, Mmu.TYPE_PC_NMI&#41;;<br />mmu.stackPush8&#40;P &amp; ~BRK_BIT, Mmu.TYPE_REGISTER&#41;;</div><br />and in rti I have:<div class="codetitle"><b>Code:</b></div><div class="codecontent">P = mmu.stackPop8&#40;Mmu.TYPE_REGISTER&#41; | ALWAYS_SET_BIT &amp; ~BRK_BIT;<br />setPc&#40;mmu.stackPop16&#40;Mmu.TYPE_PC_NMI&#41;&#41;;</div><br />The push functions save some extra type bits  on the "side" of the stack for each byte. The pop functions verify that the values from the stack have the same types as what's being requested. Unfortunately, I can't verify cases where the stack was manipulated manually. For example, if you perform an rts from an absolute address manually pushed onto the stack instead of through a JSR, it looks identical to the case where you have a corrupt stack.<br /><br />The PC is another case where I feel like I can type most operations but not all. For example, right now I verify that the PC is always assigned to program rom. It seems likely there are some (many?) roms that generate program code in ram, and the verification won't work there.<br /><br />And so, to circle back, I wonder how much typing you can add without getting false negatives? For those asking, "why?" the point is mostly to help emudev. The quicker you can spot when something has gone south, the easier it is to track it down - at least that's the theory anyway.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5126">foobaz</a> — Wed Dec 28, 2011 3:14 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Coldberg]]></name></author>
<updated>2011-12-27T17:53:56-07:00</updated>
<published>2011-12-27T17:53:56-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8458&amp;p=88015#p88015</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8458&amp;p=88015#p88015"/>
<title type="html"><![CDATA[instruction usage list]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8458&amp;p=88015#p88015"><![CDATA[
Thanks to everyone for the replies <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" /><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3584">Coldberg</a> — Tue Dec 27, 2011 5:53 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Kasumi]]></name></author>
<updated>2011-12-27T16:51:11-07:00</updated>
<published>2011-12-27T16:51:11-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8458&amp;p=88012#p88012</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8458&amp;p=88012#p88012"/>
<title type="html"><![CDATA[instruction usage list]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8458&amp;p=88012#p88012"><![CDATA[
No, because every subroutine you would jsr to "should" (unless you're doing something tricky) return with an rts regardless of how many times the subroutine is called or from where.<br /><br />They "should" be equal.<br /><br />edit: Ah, wait. I get your thinking. But I think this is runtime analysis, since a $20 in ROM isn't necessarily a jsr. You can only know that when the code is run.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3504">Kasumi</a> — Tue Dec 27, 2011 4:51 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Hangin10]]></name></author>
<updated>2011-12-27T16:22:21-07:00</updated>
<published>2011-12-27T16:22:21-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8458&amp;p=88010#p88010</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8458&amp;p=88010#p88010"/>
<title type="html"><![CDATA[instruction usage list]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8458&amp;p=88010#p88010"><![CDATA[
I might be confused about what's going on here, but if functions are called in more than one spot, doesn't make perfect sense for there to be more JSRs than RTSs?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3934">Hangin10</a> — Tue Dec 27, 2011 4:22 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[thefox]]></name></author>
<updated>2011-12-27T15:32:39-07:00</updated>
<published>2011-12-27T15:32:39-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8458&amp;p=88009#p88009</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8458&amp;p=88009#p88009"/>
<title type="html"><![CDATA[instruction usage list]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8458&amp;p=88009#p88009"><![CDATA[
<div class="quotetitle">Shiru wrote:</div><div class="quotecontent"><br /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">I was expecting more RTS than JSR, due to <a href="http://wiki.nesdev.com/w/index.php/RTS_Trick" class="postlink">RTS dispatch in state machines</a>. What happens to the other JSRs that don't return?<br /></div><br />I often do this:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">routine1:<br /> ... ;also needs to call routine2<br />routine2:<br /> ... ;also needs to call routine3<br />routine3:<br /> ...<br /> rts</div></div><br />That shouldn't affect the statistics though, because on runtime each JSR is still paired with a corresponding RTS.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=80">thefox</a> — Tue Dec 27, 2011 3:32 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Dwedit]]></name></author>
<updated>2011-12-27T12:58:02-07:00</updated>
<published>2011-12-27T12:58:02-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8458&amp;p=88005#p88005</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8458&amp;p=88005#p88005"/>
<title type="html"><![CDATA[instruction usage list]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8458&amp;p=88005#p88005"><![CDATA[
Everyone knows about the "replace JSR \ RTS" with JMP trick as well.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=53">Dwedit</a> — Tue Dec 27, 2011 12:58 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Shiru]]></name></author>
<updated>2011-12-27T12:48:29-07:00</updated>
<published>2011-12-27T12:48:29-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=8458&amp;p=88003#p88003</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=8458&amp;p=88003#p88003"/>
<title type="html"><![CDATA[instruction usage list]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=8458&amp;p=88003#p88003"><![CDATA[
<div class="quotetitle">tepples wrote:</div><div class="quotecontent"><br />I was expecting more RTS than JSR, due to <a href="http://wiki.nesdev.com/w/index.php/RTS_Trick" class="postlink">RTS dispatch in state machines</a>. What happens to the other JSRs that don't return?<br /></div><br />I often do this:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">routine1:<br /> ... ;also needs to call routine2<br />routine2:<br /> ... ;also needs to call routine3<br />routine3:<br /> ...<br /> rts</div><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4205">Shiru</a> — Tue Dec 27, 2011 12:48 pm</p><hr />
]]></content>
</entry>
</feed>