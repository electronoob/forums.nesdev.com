<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - best game engine methods</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">best game engine methods</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=731">http://forums.nesdev.com/viewtopic.php?f=2&amp;t=731</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>WhoaMan</b> [ Sun Nov 06, 2005 6:21 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>best game engine methods</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />i have spent today thinking about an engine i was writing for a game i was making a few months back. after a while i started wondering about others possible effective ways that other nes developers might use.  so, what methods do you all use for games engines?
<br />
<br />the method i have used divides the game up in to... uhh.. states.
<br />each state has its own NMI, MGL (main-game-loop), and INIT subs. a subroutine called change_state will lookup the address for the NMI and MGL and copy it to RAM, then it will jump to the address given to INIT to setup all options (timer, controller options, inital background, data loading,etc) for that state. different flags can be set by the three state subs, such as different timer options, to rest for a vblank, check for zapper hit, update sprites, scrolling, etc.
<br />
<br />the basic engine flow is similar to this
<br />Reset:
<br />_normal nes startup stuff
<br />_clear ram
<br />_change_to_state 0
<br />main game loop:
<br />_if(zapper) then check zapper hit
<br />_jump to state's MGL
<br />
<br />NMI:
<br />_if(timer) then do timer stuff
<br />_get joypad input
<br />_jump to state's NMI
<br />_if(sprite update) update sprites
<br />_if(scroll) set scroll
<br />_rti

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Celius</b> [ Sun Nov 06, 2005 10:39 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />You know, I was going to start a topic about good engines. I am wondering what is the best way to go about things. I was thinking that my methods weren't exactly the best. Back when I discovered this, I was like "Oh, wow! this is great!". What I do is base every little thing on the values of variables. Like this:
<br />
<br />keyroutine:
<br /> blah code
<br />startkey:
<br /> lda titlescreen
<br /> cmp #$01
<br /> bne routine
<br /> blah code
<br />routine:
<br /> code that says 
<br /> when start is
<br /> pressed, do whatever
<br /> your game does
<br /> when you
<br /> press start
<br /> at the title screen.
<br />
<br />I do things like that, but I have like a TON of variables, you know? Like variables like "washit" for when a target was hit. But I do think I have a beautiful routine for the numbering system. This routine I am proud of, even though like anyone could have written it. Here it is:
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">scoring:<br />&nbsp; &nbsp;lda #$01<br />&nbsp; &nbsp;cmp rhit<br />&nbsp; &nbsp;bne proceed<br />&nbsp; &nbsp;rts<br /><br />proceed:<br />&nbsp; &nbsp;lda #$01<br />&nbsp; &nbsp;sta rhit<br />&nbsp; &nbsp;lda score1<br />&nbsp; &nbsp;cmp #$39<br />&nbsp; &nbsp;beq backtoit<br />&nbsp; &nbsp;inc score1<br />&nbsp; &nbsp;lda #$01<br />&nbsp; &nbsp;sta itncr<br />&nbsp; &nbsp;jmp lada<br /><br />lada:<br />&nbsp; &nbsp;lda #$20<br />&nbsp; &nbsp;sta $2006<br />&nbsp; &nbsp;lda #$24<br />&nbsp; &nbsp;sta $2006<br /><br />&nbsp; &nbsp;lda #$00<br />&nbsp; &nbsp;sta $2005<br />&nbsp; &nbsp;sta $2005<br />&nbsp; &nbsp;lda score1<br />&nbsp; &nbsp;sta $2007<br />&nbsp; &nbsp;rts<br /><br />backtoit:<br />&nbsp; &nbsp;lda score2<br />&nbsp; &nbsp;cmp #$39<br />&nbsp; &nbsp;beq increase2<br />&nbsp; &nbsp;inc score2<br /><br />ladad:<br />&nbsp; &nbsp;lda #$20<br />&nbsp; &nbsp;sta $2006<br />&nbsp; &nbsp;lda #$23<br />&nbsp; &nbsp;sta $2006<br /><br />&nbsp; &nbsp;lda #$00<br />&nbsp; &nbsp;sta $2005<br />&nbsp; &nbsp;sta $2005<br />&nbsp; &nbsp;lda score2<br />&nbsp; &nbsp;sta $2007<br />&nbsp; &nbsp;jmp strzero<br />&nbsp; &nbsp;rts<br /><br />increase2:<br />&nbsp; &nbsp;lda score3<br />&nbsp; &nbsp;cmp #$30<br />&nbsp; &nbsp;beq maxout<br />&nbsp; &nbsp;inc score3<br /><br />&nbsp; &nbsp;lda #$20<br />&nbsp; &nbsp;sta $2006<br />&nbsp; &nbsp;lda #$22<br />&nbsp; &nbsp;sta $2006<br /><br />&nbsp; &nbsp;lda #$00<br />&nbsp; &nbsp;sta $2005<br />&nbsp; &nbsp;sta $2005<br />&nbsp; &nbsp;lda score3<br />&nbsp; &nbsp;sta $2007<br />&nbsp; &nbsp;jmp strzero1<br />&nbsp; &nbsp;rts<br /><br />maxout:<br />&nbsp; &nbsp;rts<br />&nbsp; &nbsp;<br /><br />strzero:<br />&nbsp; &nbsp;lda #$30<br />&nbsp; &nbsp;sta score1<br />&nbsp; &nbsp;jmp lada<br />strzero1:<br />&nbsp; &nbsp;lda #$30<br />&nbsp; &nbsp;sta score2<br />&nbsp; &nbsp;jmp ladad<br /></div><br /><br />This is a code for a shooter game I made. rhit is a variable for "was hit". So when the bullet x and y is equal to the enemy x and y, #$01 is stored in rhit. score1 is the 1's digit score2 is the 10's digit etc. Well, I just thought I'd at least show that when I had somewhat of an oppertunity. Well, this is my NMI routine:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent"><br />nmi:<br />&nbsp; &nbsp;lda #3<br />&nbsp; &nbsp;sta $4014 ; sprite dma<br />&nbsp; &nbsp;jsr keys ; key routine<br />&nbsp; &nbsp;jsr itshot ; see if bullet was shot<br />&nbsp; &nbsp;jsr seehit ; see if bullet hit enemy<br />&nbsp; &nbsp;jsr scoring ;if bullet hit the enemy increase score<br />&nbsp; &nbsp;jsr ohhhh ;fire cannon at your character's x and y pos<br />&nbsp; &nbsp;jsr wasit ; see if cannon trying to shoot you down missed and reached the top of the screen<br />&nbsp; &nbsp;jsr thisroute ; move enemy at bottom of screen around<br />&nbsp; &nbsp;inc vbl_count ; increase vblank variable<br />&nbsp; &nbsp;rti<br /></div>
<br />
<br />I just realized that when I posted that code, I had a whole bunch of those routines in the wrong place. I realized I was jsring to wasit before ohhhh, and if you look, that is bad. Well that's my games engine. It's all about the NMI, I say. I tried doing stuff in my infinate loop, it never works. It always is glitchy. Most stuff you want to do in vblank. Unless... am i wrong? I don't think I am, but I could be...

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Memblers</b> [ Sun Nov 06, 2005 11:58 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: best game engine methods</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">WhoaMan wrote:</div><div class="quotecontent">NMI:<br />_if(timer) then do timer stuff<br />_get joypad input<br />_jump to state's NMI<br />_if(sprite update) update sprites<br />_if(scroll) set scroll<br />_rti</div>
<br />
<br />I do the joypad and timer code last (tho the timer first could be useful, if you want to check for and escape from a recursive NMI).
<br />
<br />Vblank time is short, so the rule I follow when I want to max out the PPU is to run all the video/sprite updates before anything that can take a variable amount of cpu cycles.  That includes checking for sprite updates, heheh, there's no harm in reuploading the same data every frame (actually it makes sense too, since it's DRAM and will die out if you leave it alone for too long).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Mon Nov 07, 2005 10:26 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Effectivly, setting, no, engine isn't the right word, designing rather how game data is structurated and rendered, but rather programming style, or programming stucture, witch one is better, and well, there is probably no real answer.
<br />
<br />Personally, what I ofen do is put some structured PPU updates in my VBlank (for Name and Attribute tables) after doing the standard sprite DMA. Putting some minor stuff in VBlank routine is needed, instead of direct returning to the main code, to avoid repeating some basic PPU updates a lot of times in the main code (like Final Fantasy does). However, input *everything* in VBlank routine and no main code at all (like Mario Bross, Contra, and all Konami games) is probably rather bad, what I'm not even able to try this. This disables you to have any game loop, every frame should have it's pure logic.
<br />Some games, such as Battletoads, or Nes Snake 2, does calculation permanantly. I really can't think how a such thing would be designed, because I really can't see what calculation you could do witout regard to the main timing. Ask Matrizx for more information, he certainly knows how he coded his own game, and, showing the result, the method isn't too bad. Well, using a "bad code structure" could still lead to a good game, but with more difficulties to actually programm it.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Matrixz</b> [ Tue Nov 08, 2005 2:39 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />In NeSnake 2 i only do VRAM updates and sprite updates in the NMI, then instead of doing other parts of the game engine in NMI, i increase a bunch of frame counters. The NMI quits, then the RESET loop notices the frame counters are &gt;= 1 and does further calculations (and sets up PPU buffers). I dont know, i got used to doing it like that. But i dont like the idea of another VBLANK ocurring while the previous NMI is still doing stuff. (which could happen in an all-NMI-based game). Other of those constant calculations Bregalad mentioned is the random number generator, and the joypad checking routine if i remember. I also do sound in RESET, which takes a deal of time.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Tue Nov 08, 2005 10:52 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />So the only difference between your coding style and my coding style is that you're not doing sound in VBlank routine, and that you're still doing random number generation/joypad reading or something between VBlank pass check, but I personally rather prefer do only VBlank check, and my random number generation routine is called once at the end of my VBlank routine (actually those are the only two non-PPU stuff I do in my VBlank routine, sound and random number, along with setting VBlank flags).

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>