<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - New File Format</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">New File Format</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=3&amp;t=2025">http://forums.nesdev.com/viewtopic.php?f=3&amp;t=2025</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>5</strong> of <strong>7</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>mattmatteh</b> [ Thu Sep 14, 2006 12:01 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />if its only once then a convert utility would probably work better anyway.  and use a script or util to change many roms in a folder.
<br />
<br />matt

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Thu Sep 14, 2006 12:04 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">WedNESday wrote:</div><div class="quotecontent">but then you have this higher nibble lower nibble rubbish</div><br />This just makes the value a bit more difficult to read. If a person is too lazy to to form a byte out of 2 nibbles this does not justify a new file format.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">followed by eight bytes or so of total and utter crap, namely someones name which would confuse an emulator if we implemented the unused bytes</div><br />A second identifier can prevent this. If this ID is not present (wich would be the case if crap was written in those 8 bytes), the emulator should just consider this an old format iNES file, and ignore those 8 bytes, just as it is today.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">What's wrong with my previous post which has a diagram of the new format. Not only is it very similar to iNES, it is also very easy to implement into ROMs.</div><br />It makes no sense to come up with a format that is so similar to iNES. The point here is not that iNES is good. The only reason we're trying to expand iNES (as opposed to comming up with something new) is compatibility. If we were to come up with something new (and kill compatibility altogether), I'm sure it could be better than iNES or the format you proposed.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">You don't need a convert utility, only a HEX editor, and you can do the whole thing by hand.</div>
<br />Again, laziness from the part of the programmer does not justify a new format.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Thu Sep 14, 2006 1:47 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Bregalad, your summary is a good idea. Helps get people on the same page of the debate.
<br />
<br /><div class="quotetitle">WedNESday wrote:</div><div class="quotecontent">Well, IMO the ROMs should be a digital copy of the cartridge itself, and having the SRAM inside of the file is a good idea.</div><br />I do agree that a .nes file is not just a ROM, rather a virtual NES cartridge. This isn't a technical reason for having SRAM inside the file, more a common-sense reason.<br /><br /><div class="quotetitle">WedNESday wrote:</div><div class="quotecontent">Someone said that people running ROMs off of CDs couldn't save their SRAM data. Well, you still couldn't save your SRAM data anyway, even if it wasn't in the file. It would have to be directed to the hard drive which would defeat the whole point of having the ROM on a CD.</div><br />What if a person wants to keep all umpteen-thousand games on a CD-ROM and their save states on the hard drive? Or keep the game files on a directory for which they have read-only access, in order to prevent rogue programs from wiping out their game collection? Or they want to avoid having their backup program re-copy entire game files every time they play, rather than just the smaller save state file?<br /><br /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">a lot of online communities encourage trading of SRAM files, save states, and movies but not the ROM files themselves due to copyright.</div><br />That ends the debate about save states in game files in my mind: due to this reason alone, it is just not viable.<br /><br /><div class="quotetitle">WedNESday wrote:</div><div class="quotecontent"><div class="codetitle"><b>Code:</b></div><div class="codecontent">4E 45 53 02 01 00 01 00 <br />|  |  |  |  |  |  |  | <br />|  |  |  |  |  |  |  +- &#40;to make it 8 bytes so debuggers look ok&#41; <br />|  |  |  |  |  |  +- Mirroring etc. <br />|  |  |  |  |  +- Mapper/Board <br />|  |  |  | +- CHR Banks <br />|  |  | +- PRG Banks <br />|  |  +- S <br />|  +- E <br />+- N</div></div><br />All I see is a mere rearrangement of bytes, with even less room for expandability. What the heck is the gain over iNES?<br /><br /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">I agree that crazy ideas won't help here. As I see it, we do not need a "revolution".</div>
<br />Would a Wii in November do?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Thu Sep 14, 2006 1:59 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">blargg wrote:</div><div class="quotecontent">All I see is a mere rearrangement of bytes, with even less room for expandability. What the heck is the gain over iNES?</div><br />Exactly. It's like he just doesn't like to mess with nibbles. Even though this is a thing that the emulator author has to do only once...<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Would a Wii in November do?</div>
<br />I don't need a revolution, nor a Wii. Or a PS3. Or an XBOX 360. The PS2 I have at home is already too much. 3D sucks (words from a guy who is trying to make a "3D" raycaster for the NES! O.o).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Zepper</b> [ Thu Sep 14, 2006 6:05 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Wii sucks. <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" /> Honestly, I enjoy the NES. ^_^;;..
<br />
<br />About the "new" format, well... 
<br />The iNES seems deprecated because of arcaic times of emulation, do you remember? Yes, lots of "l33t" offering iNES ROM images and "signing them" right in the header. The most (un)famous is DiskDude junk that makes a lot of ROMs to fail when loaded in an emulator.
<br />
<br />Now, you CANNOT suggest an "updated" iNES thing by cruching it. Plus, any format must need free space to be expanded somewhat. You should discuss what information is REALLY required to get the game EMULATED or RUNNING into a NES. This is the point, which UNIF seems to choose the 2nd option...

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Thu Sep 14, 2006 8:56 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">The most (un)famous is DiskDude junk that makes a lot of ROMs to fail when loaded in an emulator.</div>
<br />If emulator finds 16th byte of iNES header is non-zero, clear 8th through 16th bytes to zero before parsing. Problem solved?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Fri Sep 15, 2006 8:51 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />You mean 15th byte, right ?
<br />Anyway, the current iNES specification DOES SAY all bytes 8-15 must be zeros. All ROMs having something in there aren't valid iNES ROMs, so they won't be valid on a updated iNES either.
<br />However, a converting/fixing tool like good NES could fix all the ROMs with junk in their header. However, this shouldn't have anything to do with the FORMAT itself.
<br />
<br />EDIT : About recent console, I don't need any PS3/XBC360/Wii either. 3D sucks, except if it is <em>really</em> well done. The only 3D graphics I ever loved are in Final Fantasy X. (Dragon Quest VIII is also have fair landscapes and characters, but it still hurt eyes a bit).
<br />And I'm against 3D in the NES more than anything else. However, I'm very pro 2D (or 3D isometric) recent games, even if there is REALLY a few titles here.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Fri Sep 15, 2006 9:04 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">blargg wrote:</div><div class="quotecontent">If emulator finds 16th byte of iNES header is non-zero, clear 8th through 16th bytes to zero before parsing. Problem solved?</div><br /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">You mean 15th byte, right ?</div>
<br />Byte 15 is the 16th one, because 0 is the 1st. I think that blargg meant "clear 9th through 16th bytes" though, since the 8th byte is byte 7 and it is used by iNES.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>WedNESday</b> [ Fri Sep 15, 2006 10:59 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">blargg wrote:</div><div class="quotecontent"><div class="quotetitle">WedNESday wrote:</div><div class="quotecontent"><div class="codetitle"><b>Code:</b></div><div class="codecontent">4E 45 53 02 01 00 01 00 <br />|  |  |  |  |  |  |  | <br />|  |  |  |  |  |  |  +- &#40;to make it 8 bytes so debuggers look ok&#41; <br />|  |  |  |  |  |  +- Mirroring etc. <br />|  |  |  |  |  +- Mapper/Board <br />|  |  |  | +- CHR Banks <br />|  |  | +- PRG Banks <br />|  |  +- S <br />|  +- E <br />+- N</div></div><br />All I see is a mere rearrangement of bytes, with even less room for expandability. What the heck is the gain over iNES?</div><br /><br />Firstly, then information is better provided and easier to read. I know that someone has said that programmer laziness is no need for a new header, I disagree. I do agree that no extra information is needed other than to run the ROM (i.e. checksums, ROM name etc). As for there being no room for expansion, iNES has never needed those eight extra bytes, and they were just abused. With the given format, what more could we possibly need?<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">4E 45 53 02 01 00 01 00 <br />|&nbsp; |&nbsp; |&nbsp; |&nbsp; |&nbsp; |&nbsp; |&nbsp; | <br />|&nbsp; |&nbsp; |&nbsp; |&nbsp; |&nbsp; |&nbsp; |&nbsp; +- &#40;to make it 8 bytes so debuggers look ok&#41; <br />|&nbsp; |&nbsp; |&nbsp; |&nbsp; |&nbsp; |&nbsp; +- Mirroring etc. &#40;see below&#41;<br />|&nbsp; |&nbsp; |&nbsp; |&nbsp; |&nbsp; +- Mapper/Board <br />|&nbsp; |&nbsp; |&nbsp; | +- CHR Banks <br />|&nbsp; |&nbsp; | +- PRG Banks <br />|&nbsp; |&nbsp; +- S <br />|&nbsp; +- E <br />+- N<br /><br />Byte 7 &#40;06h&#41; &#40;maybe this order&#41;<br /><br />bit 0 - Horizontal/Vertical Mirroring<br />bit 1 - SRAM<br />bit 2 - 50/60hz<br />bit 3 - 4 Screen VRAM<br />bit 4 - Trainer<br />bit 5 - 1 Screen Mirroring &#40;overrides bit 0&#41;<br />bit 6 - 0 &#40;reserved&#41;<br />bit 7 - 0 &#40;reserved&#41;<br /></div>
<br />
<br />As far as the mapper/board number goes, can we stop talking about why this format will be no good and actually start brainstorming. We will stick with the mapper numbers or move on to boards instead?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>CaH4e3</b> [ Fri Sep 15, 2006 11:34 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />0..255 is not enough to some multigame carts with maximum capacity... Anyway, mostly maximum number is 256, so at least it needs to hold hi bit of each PRG and CHR banks number along with common flags or something... But easier way is to assign 2byte values to bank numbers...
<br />
<br />Mirroring is better to represent with two bits: 
<br />
<br />00 - one-page mirroring
<br />01 - Vertical mirroring
<br />10 - Horizontal mirroring
<br />11 - Four screen mirroring...
<br />
<br />But actually there is hardware mapper mirroring so all this bits is unnecessary... So probably there is need one another bit, if it 1, then hardware used and first two ignored, else selected as above...
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">As far as the mapper/board number goes, can we stop talking about why this format will be no good and actually start brainstorming. We will stick with the mapper numbers or move on to boards instead?<br /></div>
<br />
<br />One more thin you should do before brainstorming. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /> Rearraging mappers information... It needs collecting all mappers info such banking registers, irq handlers, mirrorings and memory ranges... Then you will probably find out that many mappers is duplicated or just have smal difference between each others, but many mappers contain two or three emulated hardware board in one... First should be merged, other ones should be splitted. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /> I'm trying to do something, but anyway I've made many dupes for mappers and boards. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Fri Sep 15, 2006 1:33 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I don't think more mirroring bits than iNES are needed. There is no problem with mirroring support now. The only mappers that use one-screen mirroring are mapper-controlled, there is NEVER hardwired one-screen mirroring, because the fact that you couldn't switch between both nametable banks for all 4 nametables mapped in PPU would loose all the interest of this mirroring mode.
<br />The H/V mirroring bit is only here for harwired mirroring mappers, and ignored for all other mappers. The four-screen bit is here for several MMC3 games that use 4-screen mirroring. I don't think there is more than a couple of game, tough.
<br />
<br />Again, the structure of iNES WON'T BE CHANGED for reasons that already have been mentionned : Noone (from "Joe Gamer" to myself) will care about any new format. Only a update of iNES would be of any pratical use. It is a simple of this.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>kevtris</b> [ Fri Sep 15, 2006 5:36 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I was waiting awhile before I brought this up, but I had an idea for a slightly modified .NES header format myself.  
<br />
<br />I have gone through over 4000 ROMs, doing various testing on my FPGA NES console now, and I believe I'm in a fairly good position to recommend some changes.
<br />
<br />The goals of my changes are thus:
<br />
<br />1) retain absolute backwards compatibility (for existing ROMs)
<br />
<br />2) this format must be "future proof"
<br />
<br />3) the changes I make must be carefully documented and must make sense.
<br />
<br />4) The changes must make "sense" from both a hardware and software standpoint.
<br />
<br />This thread has kind of made me post my ideas early before I've had a chance to fully revise and pull together exactly what I want to do, but you should be able to get a good idea for what I wanted to do.
<br />
<br />So, without further ado...
<br />
<br />As mentioned before, the format will be retained as it is.  For a recap, here is the existing format:
<br />
<br />byte 0-3: 'NES&lt;eof&gt;'
<br />byte 4: # of PRG pages
<br />byte 5: # of CHR pages
<br />byte 6: flags byte 0
<br />byte 7: flags byte 1
<br />byte 8-15: not used
<br />
<br />There are two free bits on flags byte 1.
<br />
<br />I propose the following:
<br />
<br />D3 set and D2 clear of flags byte 1 will indicate that this is an extended header.  DiskDude! in the header will have D2 set and D3 clear, so this will prevent interference with those old dirty ROMs.  (thanks to Q for this suggestion)
<br />
<br />If D3/D2 are not set and clear respectively, this is not a "Version 2" header.  This should be a pretty definitive way to prevent confusion.  Again, if the emulator does not support the extended header, the game loads like normal and the emulator is none the wiser.
<br />
<br />Now that we know this is an extended ROM, the following things were concidered as problem areas for .NES
<br />
<br />1) Vs. Unisystem.
<br />
<br />The Vs. Unisystem has no less than 11 different PPUs and various protection schemes on some of the Namco/Atari games (such as RBI baseball).  Some way has to be found to accomodate this.
<br />
<br />2) PRG ROM in excess of 2Mbytes, CHR ROM in excess of 1Mbyte.
<br />
<br />This has already occured, and has been causing trouble for some
<br />ROMs.  So far, the hack has been to set PRG ROM to 00h to indicate 4Mbytes of ROM (since FFh is 16K short of 4Mbytes), and in the case of
<br />exceeding the 2Mbyte-8K CHR barrier, ROMs have been allocating the CHR in the PRG space, and the emulator has to sort this out.  Very messy.
<br />
<br />3) "sub mappers".
<br />
<br />Some of the allocated mappers are actually multiple mappers with 1
<br />number.  The only way to sort this mess is to use CRC checks in the emulator.  This of course is messy, since when a new ROM comes along that isn't in the CRC table, things break. 
<br />
<br />4) mapper numbers.
<br />
<br />Face it, we're running out of mapper numbers.  256 was alot at the start (heck, 16 even was alot to begin with!) but we're filling the space up.
<br />
<br />5) WRAM.
<br />
<br />Not all carts that support WRAM support 8K of it.  Some support less, some support more, and some even have EEPROM!  
<br />
<br />So, after testing nearly every ROM in goodNES, those are the trouble areas I have found.
<br />
<br />The proposed solution is thus:
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">byte8: <br /><br />7&nbsp; &nbsp; &nbsp; &nbsp; 0<br />---------<br />SSSS xxxM<br /><br /><br />S: sub-mapper number <br /><br />This specifies the sub-mapper for this ROM. If the ROM has no<br />sub-mappers, this field shall be 0000b.<br /><br />M: mapper bits 8.<br /><br />This specifies 1 more mapper number bit, which extend the total<br />number of possible mappers to 512.&nbsp; The other three bits are<br />earmarked for more mappers- up to 4096 total if needed- but I wish to stress that we should NOT just willy-nilly allocate mapper numbers greater than 0ffh until it is absolutely required.&nbsp; See below for more on this.&nbsp; The &quot;x&quot; bits shall thusly be clear at all times.<br /><br /><br />byte9:<br /><br />7&nbsp; &nbsp; &nbsp; &nbsp;0<br />---------<br />CCCC PPPP<br /><br />C: 4 more CHR ROM size bits<br />P: 4 more PRG ROM size bits<br /><br />These combine with the existing 8 bits of each to form 12 bits total for the number of PRG and CHR banks... this is enough for 64Mbytes-16K of PRG data and 32Mbytes-8K of CHR data.&nbsp; <br /><br />byte10:<br />7&nbsp; &nbsp; &nbsp; &nbsp;0<br />---------<br />CCCC PPPP<br /><br />C: quantity of CHR RAM present which is not battery backed<br />P: quantity of WRAM present which is not battery backed<br /><br />each nybble:<br /><br />0 - no RAM of this type is present.<br />1 - 128 bytes of RAM<br />2 - 256 bytes of RAM<br />3 - 512 bytes of RAM<br />4 - 1K of RAM<br />5 - 2K of RAM<br />6 - 4K of RAM<br />7 - 8K of RAM<br />8 - 16K of RAM<br />9 - 32K of RAM<br />10 - 64K of RAM<br />11 - 128K of RAM<br />12 - 256K of RAM<br />13 - 512K of RAM<br />14 - 1M of RAM<br />15 - reserved, do not use<br /><br />byte11:<br />7&nbsp; &nbsp; &nbsp; &nbsp;0<br />---------<br />CCCC PPPP<br /><br />C: amount of battery backed CHR RAM &#40;yes, carts exist with this!!!&#41;<br />P: amount of battery backed WRAM or EEPROM.<br /><br />Certain Famicom cartridges use an EEPROM for storing their game data, instead of a static RAM. <br /><br />Like above, these values follow the size table listed.<br /><br /><br />byte12:<br />7&nbsp; &nbsp; &nbsp; &nbsp;0<br />---------<br />xxxx xxBP<br /><br />P: this is a PAL ROM.&nbsp; when set, indicates PAL mode.<br /><br />B: when set, indicates this ROM works on both PAL and NTSC machines &#40;some of the Codemasters games actually will adjust the game depending on if it detects you running on a PAL or NTSC machine.&nbsp; It adjusts the timing of the game, and fixes the music&#41;.&nbsp; &nbsp;<br /><br />Not many games would have this B flag set.&nbsp; <br /><br />x: this bit is not used yet.&nbsp; They shall be maintained clear.<br /><br />byte13:<br />7&nbsp; &nbsp; &nbsp; &nbsp;0<br />---------<br />UUUU PPPP<br /><br />This byte is reserved for the Vs. Unisystem only.&nbsp; If this is not a Vs. Unisystem ROM, then this byte shall be all 0's.<br /><br />P: PPU type.&nbsp; This specifies the type of PPU used for this game.&nbsp; &nbsp;I have a list of this, but I have not processed it yet.&nbsp; There's around 11 different PPU's that exist.<br /><br />U: various Unisystem flag bits.&nbsp; Again, I am working hard on this stuff so it's not fully complete.<br /><br />I am working on buying 1 of every Unisystem game so I can study the hardware and come up with a coherent methodology.&nbsp; If anyone has any Unisystem games that I don't have, I could REALLY use them.<br /><br />So far, for the Unisystem flags I can come up with, there's a special copy protection chip or chips that exist on games such as RBI Baseball.&nbsp; I totally RE'd RBI baseball's chip, but I know at least 2 other namco/atari games use similar but different chips... since running those games with my clone of the chip doesn't work.<br /></div>
<br />
<br />Well, that in a nutshell is my proposal.  It has been extensively thought out, future proofed, and carefully designed to fit in with existing emulators and ROMs.  In fact, these additions would probably only affect around 5% of the existing ROMs, but they would banish CRC and mapper hacks forever.  
<br />
<br />I propose making a "fixup" program for existing ROMs which need it, and CAREFULLY documenting all the updates needed in 1 central location so that the existing mapper issues cannot occur again.  
<br />
<br />Also on the mappers issue, I have made an absolutely comprehensive mapper guide vs. mapper number which I will be posting to my page at some point.  It lists every single implemented mapper number, where it can be found, and what it is composed of.    Everything on it has been tested and revised, since it was produced when I made the FPGA NES.
<br />
<br />And as such, the extra mapper bits should NOT be used until we run out of existing mapper numbers to prevent confusion and needless trouble.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>kevtris</b> [ Fri Sep 15, 2006 7:18 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Here's my Vs. byte proposal.  I still need to figure out what to do about the dual Vs. games such as Baseball... I will probably allocate a bit or two on the flags byte for those... anyways, here is what I have.
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Vs. Unisystem Byte Proposal<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;---------------------------<br /><br />09/15/06<br />K.Horton<br />----<br /><br /><br />This is my proposal for the Vs. Unisystem byte on my proposed<br />.NES header expansion.&nbsp; It takes into account all known aspects<br />of the Vs. Unisystem.<br /><br /><br />There are three different methods of making the Vs. Unisystem games<br />hard to copy for arcade operators.&nbsp; <br /><br />1&#41; Different PPU's.&nbsp; &nbsp;This was done to prevent operators from<br />&nbsp; &nbsp;buying 1 conversion kit and then burning 9 copies of the EPROMs<br />&nbsp; &nbsp;for other machines.&nbsp; <br /><br />2&#41; Different control layouts.&nbsp; Again, this was done to prevent<br />&nbsp; &nbsp;operators from just burning up N copies of the EPROMs for their<br />&nbsp; &nbsp;machines.&nbsp; Not many games use a munged layout... I suspect the<br />&nbsp; &nbsp;number is around 5 to 7, with maybe 4 or 5 different pinouts.<br /><br />3&#41; Custom chips.&nbsp; Only Namco/Atari appears to have done this.&nbsp; There<br />&nbsp; &nbsp;only seems to be four different games which use one of these things.<br />&nbsp; &nbsp;RBI Baseball, TKO Boxing, Super Xevious, and possibly 1 other<br />&nbsp; &nbsp;Japan-only game.&nbsp; This chip is designed of course to prevent an<br />&nbsp; &nbsp;operator from burning another set of ROMs for a different game.<br />&nbsp;<br /><br />The proposed byte:<br /><br />7&nbsp; &nbsp; &nbsp; &nbsp;0<br />---------<br />MMMM PPPP<br /><br /><br /><br />P: PPU type.<br /><br />&nbsp;0 - RP2C03B<br />&nbsp;1 - RP2C03G&nbsp; &nbsp;<br />&nbsp;2 - PR2C04-0001 <br />&nbsp;3 - RP2C04-0002<br />&nbsp;4 - RP2C04-0003<br />&nbsp;5 - RP2C04-0004<br />&nbsp;6 - RC2C03B<br />&nbsp;7 - RC2C03C<br />&nbsp;8 - RC2C05-01<br />&nbsp;9 - RC2C05-02<br />10 - RC2C05-03<br />11 - RC2C05-04<br />12 - RC2C05-05<br />13 - not defined<br />14 - not defined<br />15 - not defined<br /><br /><br />I have dumped the palettes from ALL of these PPUs, and have exact bit for<br />bit copies of them.&nbsp; The last 5 PPUs &#40;RC2C05&#41; have the standard NES <br />palette in them, however they return a specific word in the lower 5 bits<br />of 2002h, and registers 2000h and 2001h are flipped around.&nbsp; I'm fairly<br />certain that these are all the PPU's that exist.&nbsp; I have a good cross<br />section of games now.<br /><br />M: Vs. mode.<br /><br />&nbsp;0 - Normal- no special mode&#40;s&#41;<br />&nbsp;1 - RBI Baseball<br />&nbsp;2 - TKO Boxing<br />&nbsp;3 - Super Xevious<br />&nbsp;4 - ...<br /><br />The rest of the mode settings are undefined at this time- I am hard at work<br />coming up with a complete set of Vs. stuff.&nbsp; It's just taking awhile since I<br />have to buy the stuff on ebay when it comes through.&nbsp; If anyone has any<br />Vs. stuff they can let me borrow, let me know what you have and we will<br />go from there.&nbsp; I have around 15 games so far, and I have most of the<br />esoteric stuff which used the add-on boards.&nbsp; I'm in most interested in<br />Atari/Tengen/Namco games such as TKO boxing.<br /><br /><br /><br /><br /></div>
<br />
<br />(thanks Q for the corrections/additions)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Sat Sep 16, 2006 3:45 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Wow ! Your new format looks pretty decent.
<br />However, I've some minor problems with it :
<br />
<br />- What on earth are those PPU types ? I've never heard of that. Normally, a NES game should work with all PPU revisions, huh ?
<br />
<br />- Why CHR-RAM could be battery backed ? I don't see much interest with that. What game could have any use of this ? To save space, a game would write all its save to the CHRRAM ? That make no sense to me, while technically possible.
<br />
<br />- Why CHR-RAM/SRAM size could be less than 8kb (exept 0kb) ? I doubt any 128-byte RAM chips are used in any NES game. I think less bits would do for the RAM size.
<br />
<br />- More info on what exactly "submappers" would look like would be welcome.
<br />
<br />- Why don't put a bit that tells if the cartridge is american on japanese ? Both are NTSC and there isn't much difference in emulation issues, but I guess it would still be cool to have that.
<br />
<br />Something like 3 bits :
<br />000 -&gt; Japan, NTSC
<br />001 -&gt; America, NTSC
<br />010 -&gt; Europe, PAL
<br />011 -&gt; (Australia ?), PAL
<br />100 -&gt; Pirate/Homebrew/Unlicenced, NTSC
<br />110 -&gt; Pirate/Homebrew/Unlicenced, PAL
<br />111 -&gt; Pirate/Homebrew/Unlicenced, support both video standards
<br />
<br />Emulators could just look the middle bit to know if they must emulate PAL or NTSC, or have a more complex system to emulate all regions... ?
<br />
<br />Other than this, it looks great.
<br />
<br />EDIT : Totally outtopic, but I'm very curious to know wich games use EEPROM instead of RAM+Battery to hold saves. Wich mapper support that ? Are those licenced games or only pirate games ?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Marty</b> [ Sat Sep 16, 2006 6:05 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Excellent proposal. If everyone else agrees and once all the details are in place, I'd like to get started right away.
<br />
<br /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">- What on earth are those PPU types ? I've never heard of that. Normally, a NES game should work with all PPU revisions, huh ?</div><br />Probably, but there might differences we don't know yet. Besides, knowing the PPU type is a must if we want to display the VS games in correct colors.<br /><br /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">- Why CHR-RAM/SRAM size could be less than 8kb (exept 0kb) ? I doubt any 128-byte RAM chips are used in any NES game. I think less bits would do for the RAM size.</div><br />Then what about the Bandai mapper 16/157 EEPROMS? Mapper 16 may have a 24C01 (128x8 bits) or a 24C02 (256x8 bits). Mapper 157 (Datach Joint System) may have both a 24C01 and a 24C02 (384x8 bits). MMC6 has 1k RAM only and some unlicensed carts may also have less than 8k.<br /><br /><div class="quotetitle">Bregalad wrote:</div><div class="quotecontent">- More info on what exactly "submappers" would look like would be welcome.</div>
<br />A few examples on how it could be laid out:
<br />
<br />mapper 4 sub-mappers: MMC3A, MMC3B, MMC3C, MMC6, MIMIC-1, NAMCOT 108/109/119
<br />mapper 33 sub-mappers: TC0190, TC0350
<br />mapper 69 sub-mappers: FME-7, SUNSOFT5A, SUNSOFT5B

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>5</strong> of <strong>7</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>