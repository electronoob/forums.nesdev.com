<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=3&amp;t=7525" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2011-03-03T23:39:56-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=3&amp;t=7525</id>
<entry>
<author><name><![CDATA[6T4]]></name></author>
<updated>2011-03-03T23:39:56-07:00</updated>
<published>2011-03-03T23:39:56-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7525&amp;p=75084#p75084</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7525&amp;p=75084#p75084"/>
<title type="html"><![CDATA[Mapper Registers]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7525&amp;p=75084#p75084"><![CDATA[
<div class="quotetitle">6T4 wrote:</div><div class="quotecontent"><br /><div class="quotetitle">6T4 wrote:</div><div class="quotecontent">Shouldn't these be pointing to the areas of memory space on the NES and not the cartridge? Or are they and are the comments just wrong? Or are they in fact pointing to the cartridge and that's what's causing my error with the larger games?<br /></div></div><br />Okay, I may be on the verge of figuring this out. It seems to me that these are pointers to the memory on the cartridge and the pointers to 8000-FFFF on the NES itself are set up in the LoadRomToMem section of Nestreme.cpp. However, I would appreciate any more info about this from anyone who wants to help.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4768">6T4</a> — Thu Mar 03, 2011 11:39 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[6T4]]></name></author>
<updated>2011-03-03T23:26:38-07:00</updated>
<published>2011-03-03T23:26:38-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7525&amp;p=75082#p75082</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7525&amp;p=75082#p75082"/>
<title type="html"><![CDATA[Mapper Registers]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7525&amp;p=75082#p75082"><![CDATA[
<div class="quotetitle">6T4 wrote:</div><div class="quotecontent"><br />Mapper 3 using a 16K CHR ROM bank<br /></div><br />Just for the record, I want to correct myself and say that Mapper 3 actually uses 8K swappable CHR ROM banks.<br /><br />However, I also have another question. There's something I don't really understand in NEStreme. Look at the following in Cpu.h:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">BYTE* pbyPRGROMBank1; // Points to the first PRG-ROM bank on the NES cartridge.<br />BYTE* pbyPRGROMBank2; // Points to the second PRG-ROM bank on the NES cartridge.</div><br />Shouldn't these be pointing to the areas of memory space on the NES and not the cartridge? Or are they and are the comments just wrong? Or are they in fact pointing to the cartridge and that's what's causing my error with the larger games? To put this in perspective, here's the relevant code from Io.cpp:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">//------------------------------------------------------------------------------<br />// Name: GetMemoryByte&#40;&#41;<br />// Desc: Returns a byte from the Cpu's memory.<br />//------------------------------------------------------------------------------<br />BYTE __stdcall GetMemoryByte&#40;WORD wAddress&#41;<br />&#123;<br />   if &#40;wAddress &gt;= 0x8000 &amp;&amp; wAddress &lt; 0xA000&#41;<br />      return CPU.pbyPRGROMBank1&#91;wAddress-0x8000&#93;;<br />   else if &#40;wAddress &gt;= 0xA000 &amp;&amp; wAddress &lt; 0xC000&#41;<br />      return CPU.pbyPRGROMBank2&#91;wAddress-0xA000&#93;;<br />   else if &#40;wAddress &gt;= 0xC000 &amp;&amp; wAddress &lt; 0xE000&#41;<br />      return CPU.pbyPRGROMBank3&#91;wAddress-0xC000&#93;;<br />   else if &#40;wAddress &gt;= 0xE000 &amp;&amp; wAddress &lt;= 0xFFFF&#41;<br />      return CPU.pbyPRGROMBank4&#91;wAddress-0xE000&#93;;<br />   else<br />      return CPU.Memory&#91;wAddress&#93;;<br />&#125; // end GetMemoryByte&#40;&#41;<br /><br /><br />//------------------------------------------------------------------------------<br />// Name: GetMemoryPointer&#40;&#41;<br />// Desc: Returns a pointer to a byte from the Cpu's memory.<br />//------------------------------------------------------------------------------<br />BYTE* __stdcall GetMemoryPointer&#40;WORD wAddress&#41;<br />&#123;<br />   if &#40;wAddress &gt;= 0x8000 &amp;&amp; wAddress &lt; 0xA000&#41;<br />      return &#40;&amp;&#40;CPU.pbyPRGROMBank1&#91;wAddress-0x8000&#93;&#41;&#41;;<br />   else if &#40;wAddress &gt;= 0xA000 &amp;&amp; wAddress &lt; 0xC000&#41;<br />      return &#40;&amp;&#40;CPU.pbyPRGROMBank2&#91;wAddress-0xA000&#93;&#41;&#41;;<br />   else if &#40;wAddress &gt;= 0xC000 &amp;&amp; wAddress &lt; 0xE000&#41;<br />      return &#40;&amp;&#40;CPU.pbyPRGROMBank3&#91;wAddress-0xC000&#93;&#41;&#41;;<br />   else if &#40;wAddress &gt;= 0xE000 &amp;&amp; wAddress &lt;= 0xFFFF&#41;<br />      return &#40;&amp;&#40;CPU.pbyPRGROMBank4&#91;wAddress-0xE000&#93;&#41;&#41;;<br />   else<br />      return &#40;&amp;&#40;CPU.Memory&#91;wAddress&#93;&#41;&#41;;<br />&#125; // end GetMemoryPointer&#40;&#41;</div><br />And the relevent code for when a game is loaded:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">   // Some games only hold one &#40;1&#41; 16K bank of PRG-ROM, <br />   // which should be loaded into both $C000 and $8000.<br />   // Otherwise initialize the banks to the first 2 pages.<br />   if &#40;abyRomHeader&#91;4&#93; == 1&#41;<br />   &#123;<br />      CPU.pbyPRGROMBank1 = &amp;abyPRGROM&#91;0&#93;;<br />      CPU.pbyPRGROMBank2 = &amp;abyPRGROM&#91;0&#93;;<br />   &#125;<br />   else<br />   &#123;<br />      CPU.pbyPRGROMBank1 = &amp;abyPRGROM&#91;0&#93;;<br />      CPU.pbyPRGROMBank2 = &amp;abyPRGROM&#91;NES_PRGROM_PAGESIZE&#93;;<br />   &#125;</div><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4768">6T4</a> — Thu Mar 03, 2011 11:26 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[kyuusaku]]></name></author>
<updated>2011-03-02T06:25:57-07:00</updated>
<published>2011-03-02T06:25:57-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7525&amp;p=74931#p74931</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7525&amp;p=74931#p74931"/>
<title type="html"><![CDATA[Mapper Registers]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7525&amp;p=74931#p74931"><![CDATA[
<div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />When it comes to the NES, I'm just a programmer/developer, not an EE guy.  Spouting off random pin labels (e.g. /ROMSEL) doesn't tell me anything or help educate me.  :-)<br /></div>/ROMSEL is the signal which is typically configured to enable the PRG ROM. Its condition for being true is when the CPU is accessing $8000-FFFF and the CPU is in the part of the clock cycle where data is allowed into /driven from the 6502's internal data bus from/to external memory.<br /><br /><div class="quotetitle">koitsu wrote:</div><div class="quotecontent"><br />I'm not sure if I'm being dense (highly likely) or you misread what kyuusaku said, but:<br /><br /><div class="quotetitle">kyuusaku wrote:</div><div class="quotecontent">What if a game comes along with <strong><span style="text-decoration: underline">readable</span> mapper registers in $8000-FFFF</strong>? Pretty much every emulator would have to be significantly reworked.<br /></div></div>Pretend for a few minutes that the system didn't have $4018-7FFF unmapped, or that the PRG ROM was only mapped to a small amount of address space, let's say 16KiB of it. Also assume that the more significant address lines A14 and A15 were not routed to carts to save pins. In both of these cases readable registers like FDS status and data registers for example would have HAD to share the PRG ROM's memory space.<br /><br />Address decoding can be cascaded (take the ROM enable signal which itself is derived from typically the most significant address lines, then perform arithmetic on it and less significant address lines to further partition the memory). If the FDS status register bits and PRG ROM (and/or RAM in the FDS' case) had to share memory, the address decoder would turn the one ROM enable into one ROM enable and one status register enable which would be connected to a <a href="http://en.wikipedia.org/wiki/Three-state_logic" class="postlink">tri-state buffer</a> component. Hell, an address decoder could turn the signal into 16,384 enable signals for 1 byte ROMs (or tri-state buffers manually wired to 0s and 1s) and there would be no address lines to further decode. That of course would be ridiculous, but possible.<br /><br />Going back to the real memory map, it is not so ridiculous for a cartridge to map a register or registers to $8000-FFFF (or more likely $8000-BFFF) because it may simplify the address decoding logic by reusing the /ROMSEL signal which must be routed to the cartridge regardless. There's not much of a benefit to this over $6000-7FFF since it can be decoded easily enough with a single, common, small and inexpensive IC AND it would allow your code to grow over 16 KiB, but this is all theory.<br /><br />In the case of the Game Genie, it has cool programmable address decoders, one for each patch code. Instead of the binary decoders typically used on a couple address lines, it has comparators that decode the full address range like that 1 byte ROM idea, but instead of the data coming from a ROM or buffer, it comes from a register holding the patch data.<br /><br />With my emulator's memory system in place, if I wanted to I could low level emulate the Game Genie, or several cascaded, by cascading memory fetch functions from one Game Genie to the next and then to the game cartridge. Sure it'd be stupid and slow compared to hooking memory like a normal cheat system, but it can be done, just like on the real thing. The benefits extend beyond the theoretical though; most importantly all mapper logic, irrespective of how complex (woo PowerPak emulation, FPGA and all), can be encapsulated within a few functions and I don't need to come up with equally complex and cumbersome code to fix MMC2/3/4/5/6 raster effects because my PPU code fetches memory again like the hardware. As someone familiar with hardware, who's a bit OCD yet lazy and overall a pretty poor programmer, this approach suits me well.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=20">kyuusaku</a> — Wed Mar 02, 2011 6:25 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[6T4]]></name></author>
<updated>2011-03-02T00:32:41-07:00</updated>
<published>2011-03-02T00:32:41-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7525&amp;p=74921#p74921</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7525&amp;p=74921#p74921"/>
<title type="html"><![CDATA[Mapper Registers]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7525&amp;p=74921#p74921"><![CDATA[
<div class="quotetitle">Zepper wrote:</div><div class="quotecontent"><br />- PRG banks are 8k (0x2000), not 32k (0x8000) for bankswitching. That's the error. Before <strong>someone</strong> replies something else, let me explain:<br /><br />a) <strong>usual</strong> cases will use 8k banks. Non-standard configs are out of subject.<br />b) to switch a 32k bank, you would select a 32k page, then its 4x8k banks below...<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">bank_8 = &amp;PRG&#91; &#40;value &lt;&lt; 2&#41; * 0x2000 &#93;;<br />bank_A = &amp;bank_8&#91; 0x2000 &#93;;<br />bank_C = &amp;bank_A&#91; 0x2000 &#93;;<br />bank_E = &amp;bank_C&#91; 0x2000 &#93;;</div><br /></div><br />As some other users have said, this isn't quite right. Different mappers use different sizes of PRG and CHR banks; 8K PRG ROM and 1K CHR ROM are just the minimum recommend bank sizes because most bank sizes are multiples of those. Mapper 7 uses a 32K PRG ROM bank and no CHR ROM bank. Also, this can't be the error. If it was, Mapper 2, which uses a 16K swappable PRG bank wouldn't work... and it does work. Mapper 3 using a 16K CHR ROM bank wouldn't work either. Also, while this may relate to my error with many games larger than 128K, it doesn't solve my main problem with Mapper 7, the graphics and the mirroring. I will keep trying some things and let everyone here know my progress. Thank you for your responses; it has been interesting and insightful reading them.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4768">6T4</a> — Wed Mar 02, 2011 12:32 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[koitsu]]></name></author>
<updated>2011-03-01T20:21:56-07:00</updated>
<published>2011-03-01T20:21:56-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7525&amp;p=74915#p74915</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7525&amp;p=74915#p74915"/>
<title type="html"><![CDATA[Mapper Registers]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7525&amp;p=74915#p74915"><![CDATA[
<div class="quotetitle">kyuusaku wrote:</div><div class="quotecontent"><br />Again, "not for everyone". PRG ROM doesn't have to be solely decoded with /ROMSEL so how is it that absurd? The accuracy here isn't just to be trendy, it produces really concise code whereas most emulators are convoluted from a hardware perspective hence the need for kludges.<br /></div><br />When it comes to the NES, I'm just a programmer/developer, not an EE guy.  Spouting off random pin labels (e.g. /ROMSEL) doesn't tell me anything or help educate me.  :-)<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3">koitsu</a> — Tue Mar 01, 2011 8:21 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[koitsu]]></name></author>
<updated>2011-03-01T20:21:00-07:00</updated>
<published>2011-03-01T20:21:00-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7525&amp;p=74914#p74914</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7525&amp;p=74914#p74914"/>
<title type="html"><![CDATA[Mapper Registers]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7525&amp;p=74914#p74914"><![CDATA[
<div class="quotetitle">tepples wrote:</div><div class="quotecontent"><br />Mapper ports in $8000-$DFFF are fine as long as they can be bankswitched out. Fpr example see C64, which has a port in zero page to bankswitch $D000-$DFFF between RAM on the one hand and ROM and ports on the other.<br /><br />I seem to remember one board that overlays ports on the last three bytes of PRG RAM space ($7FFD-$7FFF). Writes to those addresses both go to RAM and cause a bankswitch, and these are readable because the PRG RAM behind them is readable. Was it NINA-001?<br /></div><br />I'm not sure if I'm being dense (highly likely) or you misread what kyuusaku said, but:<br /><br /><div class="quotetitle">kyuusaku wrote:</div><div class="quotecontent"><br />What if a game comes along with <strong><span style="text-decoration: underline">readable</span> mapper registers in $8000-FFFF</strong>? Pretty much every emulator would have to be significantly reworked.<br /></div><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3">koitsu</a> — Tue Mar 01, 2011 8:21 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[3gengames]]></name></author>
<updated>2011-03-01T18:29:31-07:00</updated>
<published>2011-03-01T18:29:31-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7525&amp;p=74910#p74910</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7525&amp;p=74910#p74910"/>
<title type="html"><![CDATA[Mapper Registers]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7525&amp;p=74910#p74910"><![CDATA[
You can always add registers to like... $FFE0 to $FFF0. Might take more hardware, but if you really need the space....<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4311">3gengames</a> — Tue Mar 01, 2011 6:29 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[kyuusaku]]></name></author>
<updated>2011-03-01T16:22:04-07:00</updated>
<published>2011-03-01T16:22:04-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7525&amp;p=74903#p74903</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7525&amp;p=74903#p74903"/>
<title type="html"><![CDATA[Mapper Registers]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7525&amp;p=74903#p74903"><![CDATA[
Again, "not for everyone". PRG ROM doesn't have to be solely decoded with /ROMSEL so how is it that absurd? The accuracy here isn't just to be trendy, it produces really concise code whereas most emulators are convoluted from a hardware perspective hence the need for kludges.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=20">kyuusaku</a> — Tue Mar 01, 2011 4:22 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Zepper]]></name></author>
<updated>2011-03-01T13:16:58-07:00</updated>
<published>2011-03-01T13:16:58-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7525&amp;p=74892#p74892</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7525&amp;p=74892#p74892"/>
<title type="html"><![CDATA[Mapper Registers]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7525&amp;p=74892#p74892"><![CDATA[
<div class="quotetitle">koitsu wrote:</div><div class="quotecontent"><br />I don't even know how this would effectively work; games would (effectively, not literally) be completely unable to read anything from PRG-ROM.  Oh, and let's not forget IRQ/BRK, NMI, and RESET vectors are also in that addressing space.<br /><br />I could see a mapper providing read access to $8000-BFFF for registers (there goes 16K of your 32K, oh well!), but really?  Come on.<br /></div><br /><br />- <strong>Agreed.</strong><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=39">Zepper</a> — Tue Mar 01, 2011 1:16 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2011-03-01T06:06:11-07:00</updated>
<published>2011-03-01T06:06:11-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7525&amp;p=74869#p74869</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7525&amp;p=74869#p74869"/>
<title type="html"><![CDATA[Mapper Registers]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7525&amp;p=74869#p74869"><![CDATA[
Mapper ports in $8000-$DFFF are fine as long as they can be bankswitched out. Fpr example see C64, which has a port in zero page to bankswitch $D000-$DFFF between RAM on the one hand and ROM and ports on the other.<br /><br />I seem to remember one board that overlays ports on the last three bytes of PRG RAM space ($7FFD-$7FFF). Writes to those addresses both go to RAM and cause a bankswitch, and these are readable because the PRG RAM behind them is readable. Was it NINA-001?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Tue Mar 01, 2011 6:06 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[kyuusaku]]></name></author>
<updated>2011-03-01T00:09:51-07:00</updated>
<published>2011-03-01T00:09:51-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7525&amp;p=74857#p74857</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7525&amp;p=74857#p74857"/>
<title type="html"><![CDATA[Mapper Registers]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7525&amp;p=74857#p74857"><![CDATA[
Game Genie maps registers to $8000-FFFF.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=20">kyuusaku</a> — Tue Mar 01, 2011 12:09 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[koitsu]]></name></author>
<updated>2011-02-28T22:49:33-07:00</updated>
<published>2011-02-28T22:49:33-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7525&amp;p=74852#p74852</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7525&amp;p=74852#p74852"/>
<title type="html"><![CDATA[Mapper Registers]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7525&amp;p=74852#p74852"><![CDATA[
<div class="quotetitle">kyuusaku wrote:</div><div class="quotecontent"><br />I don't even have generic bank pointers, instead memory decoding is up to the cartridge logic. What if a game comes along with readable mapper registers in $8000-FFFF? Pretty much every emulator would have to be significantly reworked.<br /></div><br /><br />I don't even know how this would effectively work; games would (effectively, not literally) be completely unable to read anything from PRG-ROM.  Oh, and let's not forget IRQ/BRK, NMI, and RESET vectors are also in that addressing space.<br /><br />I could see a mapper providing read access to $8000-BFFF for registers (there goes 16K of your 32K, oh well!), but really?  Come on.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3">koitsu</a> — Mon Feb 28, 2011 10:49 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[kyuusaku]]></name></author>
<updated>2011-02-28T22:01:16-07:00</updated>
<published>2011-02-28T22:01:16-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7525&amp;p=74850#p74850</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7525&amp;p=74850#p74850"/>
<title type="html"><![CDATA[Mapper Registers]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7525&amp;p=74850#p74850"><![CDATA[
You're right, though it just requires a hook to the mapper code since the registers aren't readable. Still most emulators probably don't have provisions for it.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=20">kyuusaku</a> — Mon Feb 28, 2011 10:01 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Zepper]]></name></author>
<updated>2011-02-28T19:01:51-07:00</updated>
<published>2011-02-28T19:01:51-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7525&amp;p=74845#p74845</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7525&amp;p=74845#p74845"/>
<title type="html"><![CDATA[Mapper Registers]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7525&amp;p=74845#p74845"><![CDATA[
<div class="quotetitle">kyuusaku wrote:</div><div class="quotecontent"><br />What if a game comes along with readable mapper registers in $8000-FFFF?<br /></div><br /><br />- That's because you barely know the <a href="http://www.consoledatabase.com/gameinfo/nes/maxi-15pack/" class="postlink">Maxi 15 cart</a>, emulated as mapper 234.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=39">Zepper</a> — Mon Feb 28, 2011 7:01 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tokumaru]]></name></author>
<updated>2011-02-28T17:46:01-07:00</updated>
<published>2011-02-28T17:46:01-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7525&amp;p=74834#p74834</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7525&amp;p=74834#p74834"/>
<title type="html"><![CDATA[Mapper Registers]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7525&amp;p=74834#p74834"><![CDATA[
That's pretty cool, kyuusaku. From your previous comment I imagined you were doing something like this, but I wasn't sure if it was the exact same thing I had in mind.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=95">tokumaru</a> — Mon Feb 28, 2011 5:46 pm</p><hr />
]]></content>
</entry>
</feed>