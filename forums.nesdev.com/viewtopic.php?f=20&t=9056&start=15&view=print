<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Help with some GB Z80 commands</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Help with some GB Z80 commands</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=20&amp;t=9056">http://forums.nesdev.com/viewtopic.php?f=20&amp;t=9056</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>2</strong> of <strong>2</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>mic_</b> [ Tue Jul 03, 2012 3:06 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Why not use one of the already available assemblers, like WLA-DX or RGBASM? Surely the time spent on hand-assembly could be better spent on writing more code or debugging.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Pennywise</b> [ Tue Jul 03, 2012 2:44 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I looked at WLA actually, but it looked like I had to compile the latest version myself and I am totally unfamiliar with that process.
<br />
<br />But I'm not that big of a GB hacker and the only other code at the moment I need to do is just some simple code to relocate some text at the end of bank to another bank. And at the moment, I have bunch of menu hacking to do which doesn't really require me to write any code of substance.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Drag</b> [ Tue Jul 03, 2012 3:27 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I've hand-assembled z80 dozens of times before. If it's just to assemble a small(ish) routine, then there's nothing wrong with it. <img src="./images/smilies/icon_razz.gif" alt=":P" title="Razz" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>strat</b> [ Tue Jul 03, 2012 9:01 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Compiling WLA is no more complicated than running the included makefile.  But I'm using the Windows version and WLA-GB refuses to assemble the code from WLAD-GB (The disassembler).  Reading someone else's C code seems like less fun to me than reading asm.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>strat</b> [ Sat Jul 07, 2012 8:25 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />So here's a story.  I tried building wla-gb for windows and it would always shout "out of 8bit range" when assembling a JR opcode with a negative value.  It won't assemble JR $FA but JR $-6 would work.  This is interesting because wlad outputs JR $FA.
<br />
<br />To fix the bug, I tinkered with wlad and added this code to the output_bank_opcodes routine in main.c (starts at line 198) so it would output JR $-6 instead of JR $FA:
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp;for &#40;t = strlen&#40;ot-&gt;op&#41;, x = 0, p = 0; x &lt; t; &#41; &#123;<br />&nbsp; &nbsp;&nbsp; if &#40;ot-&gt;op&#91;x&#93; == 'x'&#41; &#123;<br />&nbsp; &nbsp;&nbsp; &nbsp; bu&#91;p&#93; = 0;<br />&nbsp; &nbsp;&nbsp; &nbsp;<br />&nbsp; &nbsp;&nbsp; &nbsp;negval = in&#91;&#40;*i&#41;++&#93;;<br />&nbsp; &nbsp;&nbsp; &nbsp;if &#40;0x38 == ot-&gt;hex || 0x30 == ot-&gt;hex || 0x28 == ot-&gt;hex || 0x20 == ot-&gt;hex || 0x18 == ot-&gt;hex || 0xF8 == ot-&gt;hex || 0xE8 == ot-&gt;hex&#41; &#123;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;if &#40;negval &gt; 0x7F &amp;&amp; negval &lt;= 0xFF&#41; &#123;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;signed int nb,na;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;nb = negval;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;negval = &#40;negval - 0xFF&#41; - 1;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;na = negval * -1;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;negval = &#40;negval&#41; + &#40;na &lt;&lt; 1&#41;;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;if &#40;negval &gt; 0x0F&#41; &#123;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;sprintf&#40;tm, &quot;-$%.2x&quot;,negval&#41;;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;p += 4;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&#125;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;else &#123;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;sprintf&#40;tm, &quot;-$%.1x&quot;,negval&#41;;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;p += 3;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&#125;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&#125;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;else &#123;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;sprintf&#40;tm, &quot;$%.2x&quot;,negval&#41;;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;p += 3;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&#125;<br />&nbsp; &nbsp;&nbsp; &nbsp;&#125;<br />&nbsp; &nbsp;&nbsp; &nbsp;else &#123;&nbsp; &nbsp;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;sprintf&#40;tm, &quot;$%.2x&quot;,negval&#41;;<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;p += 3;<br />&nbsp; &nbsp;&nbsp; &nbsp;&#125;<br />&nbsp; &nbsp;&nbsp; &nbsp;<br />&nbsp; &nbsp;&nbsp; &nbsp; strcat&#40;bu, tm&#41;;<br />&nbsp; &nbsp;&nbsp; &nbsp; /*p += 3;*/<br />&nbsp; &nbsp;&nbsp; &nbsp; x++;<br />&nbsp; &nbsp;&nbsp; &nbsp; a++;<br />&nbsp; &nbsp;&nbsp; &#125;<br />&nbsp; &nbsp;&nbsp; else<br />&nbsp; &nbsp;&nbsp; &nbsp; bu&#91;p++&#93; = ot-&gt;op&#91;x++&#93;;<br />&nbsp; &nbsp;&#125;<br /></div><br /><br />That seemed to solve all the problems cropping up.  Only now I'm trying to assemble this file (with wla-gb) that was generated with the wlad I modified.  And now it's giving "unknown symbol JR" errors for no apparent reason at line 1325 ($08ef) even though there's no JR instruction at this line or the two lines before and after it.  And of course it would have processed  hundreds of JR opcodes at this point with no trouble.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">LD A,&#40;$FF00+$a0&#41;&nbsp; &nbsp;&nbsp; &nbsp;; $08e2<br />&nbsp; &nbsp;INC A&nbsp; &nbsp;&nbsp; &nbsp;; $08e4<br />&nbsp; &nbsp;CP $05&nbsp; &nbsp;&nbsp; &nbsp;; $08e5<br />&nbsp; &nbsp;JR NZ,$-28&nbsp; &nbsp;&nbsp; &nbsp;; $08e7<br />&nbsp; &nbsp;LD A,$04&nbsp; &nbsp;&nbsp; &nbsp;; $08e9<br />&nbsp; &nbsp;JR $-2c&nbsp; &nbsp;&nbsp; &nbsp;; $08eb<br />&nbsp; &nbsp;LD A,&#40;$FF00+$ac&#41;&nbsp; &nbsp;&nbsp; &nbsp;; $08ed<br />&nbsp; &nbsp;INC A&nbsp; &nbsp;&nbsp; &nbsp;; $08ef ; line 1325<br />&nbsp; &nbsp;CP $05&nbsp; &nbsp;&nbsp; &nbsp;; $08f0<br />&nbsp; &nbsp;JR NZ,$-27&nbsp; &nbsp;&nbsp; &nbsp;; $08f2<br />&nbsp; &nbsp;LD A,$04&nbsp; &nbsp;&nbsp; &nbsp;; $08f4<br />&nbsp; &nbsp;JR $-2b&nbsp; &nbsp;&nbsp; &nbsp;; $08f6<br /></div>
<br />
<br />There could be a bug in wla-gb for assembling pure hex numbers (It seems to work fine with labels).  But even after the effort I put into fixing the original problem, it's a very mysterious obstacle.
<br />
<br />Edit:  After playing around with the generated disassembly, a workaround would be to have the disassembler turn the negative jumps into labels.  That should fix everything for good.
<br />
<br />Edit:  Code changed to reflect working wlad.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Sat Jul 07, 2012 10:51 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">strat wrote:</div><div class="quotecontent">So here's a story.  I tried building wla-gb for windows and it would always shout "out of 8bit range" when assembling a JR opcode with a negative value.  It won't assemble JR $FA but JR $-6 would work.  This is interesting because wlad outputs JR $FA.</div>
<br />I think you're mistaken here. $ probably denotes the current program counter value so "$-6" is not "negative 6" but "PC minus 6". At least it would make much more sense for the negative hexadecimal value to be denoted with "-$6" instead.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>strat</b> [ Sun Jul 08, 2012 11:43 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Sweet, that was it.  I got wlad to output something that can be reassembled.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>2</strong> of <strong>2</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>