<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=3&amp;t=721" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2005-11-04T18:37:40-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=3&amp;t=721</id>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2005-11-04T18:37:40-07:00</updated>
<published>2005-11-04T18:37:40-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=721&amp;p=6256#p6256</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=721&amp;p=6256#p6256"/>
<title type="html"><![CDATA[lowpass with transition-based BL synth? (blargg?)]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=721&amp;p=6256#p6256"><![CDATA[
If you want its output, just run the demo and examine the wave sound file. If you set the high-pass to 0.0, you can see the raw first difference of the sampled steps. I'm not sure what help this would be, since it'll look pretty much like the output with no high-pass filtering.<br /><br />The main intermediate is the "master" band-limited step:<br /><br /><img src="http://www.slack.net/~ant/bl-synth/images/bl_step.gif" alt="Image" /><br /><br />This is just a square made from sines, with the angle from -pi/2 to pi/2 (one half of a full cycle). You'll sample it at the same interval as shown by the vertical lines, at several phases (shift the vertical lines to the right very slightly each time until you would get back to the original ones):<br /><br /><img src="http://www.slack.net/~ant/bl-synth/images/trans.gif" alt="Image" /><br /><br />Each time I've implemented this method I've had to write wave file of the intermediate waveforms in order to debug each one. It's tricky to get each one right.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Fri Nov 04, 2005 6:37 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Disch]]></name></author>
<updated>2005-11-04T17:49:17-07:00</updated>
<published>2005-11-04T17:49:17-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=721&amp;p=6253#p6253</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=721&amp;p=6253#p6253"/>
<title type="html"><![CDATA[lowpass with transition-based BL synth? (blargg?)]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=721&amp;p=6253#p6253"><![CDATA[
Would it be possible to get some recorded examples with that method?  I tried my own method but it didn't work out very well -- I was probably mucking something up.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=33">Disch</a> — Fri Nov 04, 2005 5:49 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2005-11-04T16:48:19-07:00</updated>
<published>2005-11-04T16:48:19-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=721&amp;p=6251#p6251</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=721&amp;p=6251#p6251"/>
<title type="html"><![CDATA[lowpass with transition-based BL synth? (blargg?)]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=721&amp;p=6251#p6251"><![CDATA[
And here's the super-simple version (with added high-pass filtering) rewritten for clarity, at only 53 lines of code.<br /><br /><a href="http://www.slack.net/~ant/misc/band_limited_step2.zip" class="postlink">band_limited_step2.zip</a><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Fri Nov 04, 2005 4:48 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2005-11-04T11:10:49-07:00</updated>
<published>2005-11-04T11:10:49-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=721&amp;p=6238#p6238</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=721&amp;p=6238#p6238"/>
<title type="html"><![CDATA[lowpass with transition-based BL synth? (blargg?)]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=721&amp;p=6238#p6238"><![CDATA[
I finished the demo code. It shows how to generate the master square wave using a sine table (for speed) and then sample each band-limited step at each phase, then add them into a buffer. I tried to make it fairly readable, but didn't go to great lengths for that.<br /><br /><a href="http://www.slack.net/~ant/misc/band_limited_step.zip" class="postlink">band_limited_step.zip</a><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Fri Nov 04, 2005 11:10 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2005-11-03T18:49:20-07:00</updated>
<published>2005-11-03T18:49:20-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=721&amp;p=6217#p6217</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=721&amp;p=6217#p6217"/>
<title type="html"><![CDATA[lowpass with transition-based BL synth? (blargg?)]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=721&amp;p=6217#p6217"><![CDATA[
Yeah, the rolloff is as simple as that. It needs to be fairly close to 1.0 or else it will really roll off (since it's multiplied by itself many times). Building the square wave from individual harmonics makes this really simple to understand, almost like a graphic equalizer. I've tried other schemes where none of the lower harmonics are affected at all and found that the simple rolloff sounds best.<br /><br />Seriously optimizing generation of the master transitions is quite complex and messy, so I definitely recommend sticking to building the square from sine waves. You can always make a sine lookup table that has the same number of entries as your base period is, times how ever many sub-sample offsets you're taking. All harmonics are at integer multiples of the base frequency, so you just step through this table at an increment of 1, then 3, then 5, then 7, etc. I'll probably go ahead and write the simple demo tomorrow, since I need a break from my emulator. <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" /><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Thu Nov 03, 2005 6:49 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Disch]]></name></author>
<updated>2005-11-03T18:35:37-07:00</updated>
<published>2005-11-03T18:35:37-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=721&amp;p=6216#p6216</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=721&amp;p=6216#p6216"/>
<title type="html"><![CDATA[lowpass with transition-based BL synth? (blargg?)]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=721&amp;p=6216#p6216"><![CDATA[
Excellent, that seems simple enough.  So then the 'rolloff' factor would be the "strength" of the lowpass filter?  The further down from 1.0 you get, the more the filter applies?<br /><br />Up until now I've been using a pre-calculated const transition lookup table -- but now it looks like I'd be better off building one at runtime.<br /><br />Many thanks, blargg -- I'll start implimenting this right away.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=33">Disch</a> — Thu Nov 03, 2005 6:35 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2005-11-03T18:16:59-07:00</updated>
<published>2005-11-03T18:16:59-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=721&amp;p=6214#p6214</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=721&amp;p=6214#p6214"/>
<title type="html"><![CDATA[lowpass with transition-based BL synth? (blargg?)]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=721&amp;p=6214#p6214"><![CDATA[
To recap, as I understand it Disch is essentially generating a master square wave and then sampling one of its band-limited transitions at several offsets, then reusing these to generate band-limited transitions. To implement low-pass with this scheme you just reduce the amplitude of the higher sine wave harmonics to whatever profile you want as you add them when generating the master square wave. A simple algorithm is to scale each harmonic by an exponential "rolloff" factor, where the first harmonic is at normal amplitude, the second at 0.98 the usual, the third at 0.98*0.98, the fourth at 0.98*0.98*0.98, etc. This is in addition to the normal scaling of square wave harmonics, of course, where the first is at 1.0, the second at 1/3, the third at 1/5, fourth at 1/7, etc.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">double period = 100;<br />double scale = 1.0;<br />double rolloff = 0.98;<br />for &#40; double harmonic = 1; harmonic &lt;= period / 2; harmonic = harmonic + 2 &#41;<br />&#123;<br />    add_sine&#40; period / harmonic, scale / harmonic &#41;;<br />    scale = scale * rolloff;<br />&#125;<br /></div><br /><br />Here are a few square waves with progressively lower rolloff factors:<br /><br /><img src="http://www.slack.net/~ant/bl-synth/images/rolled_off_squares.png" alt="Image" /><br /><br />If you still have trouble with this, I'll finish working on the demo code tutorial I've been wanting to complete for a while.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Thu Nov 03, 2005 6:16 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Disch]]></name></author>
<updated>2005-11-03T15:20:37-07:00</updated>
<published>2005-11-03T15:20:37-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=721&amp;p=6205#p6205</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=721&amp;p=6205#p6205"/>
<title type="html"><![CDATA[lowpass with transition-based BL synth? (blargg?)]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=721&amp;p=6205#p6205"><![CDATA[
Currently I have a big table with several 'sets', each consisting of 12 steps.  Each of the 12 steps is output everytime audio output changes (transition).  Those familiar with blargg's BL synth docs/methods might have the general idea of what I'm talking about.<br /><br />I vaguely recall blargg saying something about a simple lowpass filter being easily implimented with such a setup -- as you wouldn't have to do any additional code during sample generation -- you could just modify your lookup table so that the filter takes effect for every transition before any of them are output.<br /><br />However, I scanned blargg's site for info on the subject and didn't come up with a thing.  I tried fiddling around on my own but my general lack of audio filter knowledge just led to distorted/ugly sound (I even seemed to decrease the signal:noise ratio rather than increase =P)<br /><br />Anyway if anyone (*cough*blargg*cough*) can give me some info/advice on implimenting a lowpass filter with such a setup, I'd be very appreciative.<br /><br />Thanks<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=33">Disch</a> — Thu Nov 03, 2005 3:20 pm</p><hr />
]]></content>
</entry>
</feed>