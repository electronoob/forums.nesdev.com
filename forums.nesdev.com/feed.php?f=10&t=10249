<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=10&amp;t=10249" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2013-07-10T16:57:26-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=10&amp;t=10249</id>
<entry>
<author><name><![CDATA[3gengames]]></name></author>
<updated>2013-07-10T16:52:54-07:00</updated>
<published>2013-07-10T16:52:54-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10249&amp;p=114954#p114954</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10249&amp;p=114954#p114954"/>
<title type="html"><![CDATA[Re: Code not working, clues?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10249&amp;p=114954#p114954"><![CDATA[
Yeah, just keep working to understand 6502 more and eventually you'll get a good NMI routine and keep a RAM emphasis that has the current emphesis settings, and just write it every frame. And also, make sure in the future you put controller buttons to RAM. Reading them straight from $4016 is piss poor for any real game, this it can be done with &quot;just to easily get one button&quot; but in the future, not so much.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4311">3gengames</a> — Wed Jul 10, 2013 4:52 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[CrowleyBluegrass]]></name></author>
<updated>2013-07-10T16:57:26-07:00</updated>
<published>2013-07-10T15:09:29-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10249&amp;p=114944#p114944</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10249&amp;p=114944#p114944"/>
<title type="html"><![CDATA[Re: Code not working, clues?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10249&amp;p=114944#p114944"><![CDATA[
I done fixed it <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br />It appears that in the future, I must bear one important detail in mind. The 6502 can not read my mind to figure out where to go next! I added the JMP Loop you suggested but of course, it was still flashing incessantly. Mostly due to the fact that I was re-setting the emphasis every time the main code was executed without the A button pressed!<br /><br />I never though it could be so fulfilling to have a orangey screen pop up when you press a button, haha. Slowly but surely.<br /><br />Thank you my friend.<br /><br />Lest this topic become redundant (god forbid!) would anyone like to suggest a less convoluted method for switching through the emphasis bits?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6057">CrowleyBluegrass</a> — Wed Jul 10, 2013 3:09 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[qbradq]]></name></author>
<updated>2013-07-10T14:12:05-07:00</updated>
<published>2013-07-10T14:12:05-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10249&amp;p=114938#p114938</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10249&amp;p=114938#p114938"/>
<title type="html"><![CDATA[Re: Code not working, clues?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10249&amp;p=114938#p114938"><![CDATA[
You're still not clearing sprite memory. Also, this code is WAY more complex than it needs to be with the register sharing.<br /><br />To answer your question, your code is failing because you need to have a &quot;JMP Loop&quot; instruction at the end of your main block there.<br /><br />The way your code is now when you hold down the A button, you skip the branch, load the A register with the emphasis bits you want, then start executing the NMI routine, then RTI with no return address on the stack. That'll probably start executing whatever's in RAM at $0000, which appears to be all zero's thanks to your initialization, which forces a break instruction, which executes your IRQ vector, which is again set to $0000. So then you enter an infinite loop of IRQ's.<br /><br />Brain 'splosion!<br /><br />Don't give up! You're doing great! Assembly is freaking hard stuff. All of us here have went through something like this at one point or another. Just keep at it and you'll get better.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3706">qbradq</a> — Wed Jul 10, 2013 2:12 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[CrowleyBluegrass]]></name></author>
<updated>2013-07-10T13:10:15-07:00</updated>
<published>2013-07-10T13:10:15-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10249&amp;p=114936#p114936</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10249&amp;p=114936#p114936"/>
<title type="html"><![CDATA[Re: Code not working, clues?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10249&amp;p=114936#p114936"><![CDATA[
I've tried sorting it out a little bit, but still having some graphical problems.<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">; iNES header<br /><br />; iNES identifier<br />.byte &quot;NES&quot;,$1a <br /><br />; Number of PRG-ROM blocks<br />.byte $01<br /><br />; Number of CHR-ROM blocks<br />.byte $01<br /><br />; ROM control bytes: Horizontal mirroring, no SRAM<br />; or trainer, Mapper #0<br />.byte $00, $00<br /><br />; Filler<br />.byte $00,$00,$00,$00,$00,$00,$00,$00<br /><br />;;;;;;;;;;;;;;;<br />;Variables<br /><br />enum $0000<br /><br />FRAMECOUNTER .byte 0<br /><br />ende<br /><br />;;;;;;;;;;;;;;;;<br />;Init<br /><br />.org $C000<br />RESET:<br />  SEI          ; disable IRQs<br />  CLD          ; disable decimal mode<br />  LDX #$40<br />  STX $4017    ; disable APU frame IRQ<br />  LDX #$FF<br />  TXS          ; Set up stack<br />  INX          ; now X = 0<br />  STX $2000    ; disable NMI<br />  STX $2001    ; disable rendering<br />  STX $4010    ; disable DMC IRQs<br /><br />vblankwait1:       ; First wait for vblank to make sure PPU is ready<br />  BIT $2002<br />  BPL vblankwait1<br /><br />clrmem:<br />  LDA #$00<br />  STA $0000, x<br />  STA $0100, x<br />  STA $0200, x<br />  STA $0400, x<br />  STA $0500, x<br />  STA $0600, x<br />  STA $0700, x<br />  LDA #$FE<br />  STA $0300, x<br />  INX<br />  BNE clrmem<br /><br />vblankwait2:      ; Second wait for vblank, PPU is ready after this<br />  BIT $2002<br />  BPL vblankwait2<br /><br />;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;<br />;Main code setup<br /><br />LoadPalettes:<br />  LDA $2002    ; read PPU status to reset the high/low latch<br />  LDA #$3F<br />  STA $2006    ; write the high byte of $3F00 address<br />  LDA #$00<br />  STA $2006    ; write the low byte of $3F00 address<br />  LDX #$00<br />LoadPalettesLoop:<br />  LDA palette, x        ;load palette byte<br />  STA $2007             ;write to PPU<br />  INX                   ;set index to next byte<br />  CPX #$20<br />  BNE LoadPalettesLoop  ;if x = $20, 32 bytes copied, all done<br /><br />SetupScreen:<br />  LDA #%00001000   ; enable rendering<br />  STA $2001<br /><br />  LDA #%10000000   ; enable NMI, sprites from Pattern Table 0<br />  STA $2000<br />  <br />  LDA #$00<br />  LDY #$00<br /><br />;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;<br />;Main code<br />Loop:<br />  CPY FRAMECOUNTER<br />  BEQ Loop<br /><br />Main:<br />  LDA #$01            ;tell both the controllers to latch buttons<br />  STA $4016<br />  LDA #$00<br />  STA $4016<br />  LDA $4016           ;get A button status<br />  LSR                     ;shift A button status onto carry<br />  LDA #%00001000 ;set A to default no emphasis<br />  BCC Loop             ;if A is not pressed wait for vblank<br />  LDA #%00101000 ;if A is pressed, set emphasis to red<br /><br />NMI:<br />  INC FRAMECOUNTER<br />  STA $2001     ;update emphasis on screen<br />  RTI<br /><br />;;;;;;;;;;;;;;<br /><br />  .org $E000<br />palette:<br />  .db $20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20<br />  .db $20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20<br /><br /><br />  .org $FFFA     ;first of the three vectors starts here<br />  .dw NMI        ;when an NMI happens (once per frame if enabled) the<br />                   ;processor will jump to the label NMI:<br />  .dw RESET      ;when the processor first turns on or is reset, it will jump<br />                   ;to the label RESET:<br />  .dw 0          ;external interrupt IRQ is not used in this tutorial<br /><br />;;;;;;;;;;;;;;<br /><br /><br />  .incbin &quot;mario.chr&quot;   ;includes 8KB graphics file from SMB1</div><br />Produces unwanted (albeit mildly enjoyable) flashy effects, which I'm pretty sure is due to the layout of my code as everything seemed to work fine when it was all handled by the NMI. I'm trying to &quot;prepare&quot; the emphasis update in the main code, and use the NMI routine solely for updating the screen (storing A into PPUMASK). Clearly, I have no idea how to do this correctly and your help would be much appreciated. If you'd like to point out any problems in my init code too, that'd be fab.<br /><br />Thank you <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /><br /><span style="font-size: 80%; line-height: normal">P.S here's my yet untested (for very obvious reasons!) code for switching between the emphasis bits if you're particularly unoccupied. Parentheses indicate clock cycles for each line.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">           LDA #%00100000<br />           STA EMPHASIS<br />           MAIN:   <br />           LDA $4016     ;get A button status (4)<br />           BEQ LOOP      ;if A is not pressed wait for vblank (2)or(3)<br />           LDA #%00001000;set rendering bit in A (2)<br />           ORA #EMPHASIS ;set emphasis bit in A (4)<br />           BPL-          ;if emphasis is not set to blue, skip to shift left (2)or(3)<br />           LDY #%00010000;otherwise, set EMPHASIS to the bit right of red (2)<br />           STY EMPHASIS ;(3)<br />-          ASL #EMPHASIS ;shift emphasis bit left for next run (6)<br />           LDY FRAMECOUNTER;set up check for loop (4)</div></span><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6057">CrowleyBluegrass</a> — Wed Jul 10, 2013 1:10 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[unregistered]]></name></author>
<updated>2013-07-09T13:53:27-07:00</updated>
<published>2013-07-09T13:53:27-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10249&amp;p=114860#p114860</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10249&amp;p=114860#p114860"/>
<title type="html"><![CDATA[Re: Code not working, clues?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10249&amp;p=114860#p114860"><![CDATA[
<div class="quotetitle">qbradq wrote:</div><div class="quotecontent"><br />Movax12 found the bug. Your LDA EMPHASIS line is loading the RAM value at $20, not the literal value. Change it to LDA #EMPHASIS and it might start working again.<br /></div> In 6502 assembly a &quot;#&quot; is used for literal values. <br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">lda #20<br /></div> that code will set the accumulator up with  #$14.  <br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">lda $20</div> and that will load the accumulator with the value at memory location $0020.<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">lda #$20</div>and that will load the accumulator with #$20.  That's a literal(#) hexadecimal($) 20...  Looks like <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">00100000b</tt> in binary asm6.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3893">unregistered</a> — Tue Jul 09, 2013 1:53 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[qbradq]]></name></author>
<updated>2013-07-06T21:56:13-07:00</updated>
<published>2013-07-06T21:56:13-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10249&amp;p=114735#p114735</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10249&amp;p=114735#p114735"/>
<title type="html"><![CDATA[Re: Code not working, clues?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10249&amp;p=114735#p114735"><![CDATA[
Movax12 found the bug. Your LDA EMPHASIS line is loading the RAM value at $20, not the literal value. Change it to LDA #EMPHASIS and it might start working again.<br /><br />I agree that proper initialization is important. Even the most basic of experiment programs needs to have complete initialization or you'll start to have strange errors, especially if you test on the more accurate emulators.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3706">qbradq</a> — Sat Jul 06, 2013 9:56 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[3gengames]]></name></author>
<updated>2013-07-06T12:33:37-07:00</updated>
<published>2013-07-06T12:33:37-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10249&amp;p=114697#p114697</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10249&amp;p=114697#p114697"/>
<title type="html"><![CDATA[Re: Code not working, clues?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10249&amp;p=114697#p114697"><![CDATA[
Yep, basically if you want you can set $2007 to $3F00, and upload all 20's to make the screen white. Then the background *could* be left uninitiated. Just enable rendering, and then write it to the screen. Try to make it determine if A is pressed like:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">  LDA $4016 ;Load A button status.<br />  LSR A ;Put A on to carry.<br />  LDA #%00011110 ;Enable rendering.<br />  BCC .NoEmphesis<br />  ORA #%00100000 ;Turn on what we need to if it's changed.<br />.NoEmphesis:<br />  STA PPUMask ;Replace with right location, I don't remember the exact location, I call them by names.<br />;Done.<br /></div><br /><br />Basically load the common value, and change it based on the carry/another flag used elsewhere to minimize size of code and keep flow working as linearly as possible.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4311">3gengames</a> — Sat Jul 06, 2013 12:33 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Movax12]]></name></author>
<updated>2013-07-06T12:32:11-07:00</updated>
<published>2013-07-06T12:32:11-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10249&amp;p=114696#p114696</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10249&amp;p=114696#p114696"/>
<title type="html"><![CDATA[Re: Code not working, clues?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10249&amp;p=114696#p114696"><![CDATA[
if your code isn't working you should try to remember to always check if you forgot a # first. If you don't use it where you should, odd things tend to happen, and you have made that error here.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4680">Movax12</a> — Sat Jul 06, 2013 12:32 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[CrowleyBluegrass]]></name></author>
<updated>2013-07-06T12:29:07-07:00</updated>
<published>2013-07-06T12:29:07-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10249&amp;p=114694#p114694</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10249&amp;p=114694#p114694"/>
<title type="html"><![CDATA[Re: Code not working, clues?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10249&amp;p=114694#p114694"><![CDATA[
Thanks for the advice.<br /><br />As I said, everything was working fine (despite not uploading a palette etc.) until I added the input check. I wasn't aware the things you mentioned were necessary because they weren't in the NN code, which I'm merely adding controller input to as a way of getting my feet wet (without drowning)  <img src="http://forums.nesdev.com/images/smilies/icon_redface.gif" alt=":oops:" title="Embarassed" /> <br /><br />I'll go back to lurking the wiki for a while.<br /><br />Thanks again.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6057">CrowleyBluegrass</a> — Sat Jul 06, 2013 12:29 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[3gengames]]></name></author>
<updated>2013-07-06T12:12:12-07:00</updated>
<published>2013-07-06T12:12:12-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10249&amp;p=114690#p114690</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10249&amp;p=114690#p114690"/>
<title type="html"><![CDATA[Re: Code not working, clues?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10249&amp;p=114690#p114690"><![CDATA[
It's necessary everywhere in there...well, you could technically cut out the first and be okay, but it's not really that bad the first wait. I'd keep it in too.<br /><br />And it can work, but it shouldn't. You <strong><em><span style="text-decoration: underline">NEED</span></em></strong> all of those things I mentioned. Key word is <strong><em><span style="text-decoration: underline">NEED</span></em></strong>. Maybe stop jumping assembler ships and such, and start reading the Wiki so you understand the hardware better, with what you need to and don't need to do. Stick with NESASM3 until you can edit your stuff easier and understand why you need to edit some code/make it. You have a good grasp, just need to refine it so you're more confident about code. Not being sure how to code and use the assembler is a bad combination to have. Still, the things you need to do are:<br /><br />Upload a palette.<br /><br />Set up the screen.<br /><br />Enable rendering. (Disabled on start up on NES, so how would it ever work if you don't turn it on?) You touch it with the emphesis bit, but rendering then is disabled. You may technically change the output, but it's not reliable in any way because you have 0 clue on the state of the palette pointer, palette, screen tiles, anything.<br /><br />Then do your code stuffs.<br /><br /><!-- m --><a class="postlink" href="http://wiki.nesdev.com/w/index.php/PPU">http://wiki.nesdev.com/w/index.php/PPU</a><!-- m --><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4311">3gengames</a> — Sat Jul 06, 2013 12:12 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[CrowleyBluegrass]]></name></author>
<updated>2013-07-06T12:12:23-07:00</updated>
<published>2013-07-06T12:09:46-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10249&amp;p=114689#p114689</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10249&amp;p=114689#p114689"/>
<title type="html"><![CDATA[Re: Code not working, clues?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10249&amp;p=114689#p114689"><![CDATA[
I'm trying to get used to how programs usually flow/code layout, hence waiting for vblank even though it's not necessary. I assume my lack of knowledge in regards to program flow is the cause of the problem, but I just can't seem to figure it out.<br /><br />The reason a lot of things aren't set up, is because I'm using the Nerdy Nights tutorials as a base, just slotted into tokumaru's ASM6 template. It worked fine until I added the controller checks. Forgive my blasphemy, but I'm not concerned whether my code works on real hardware at this early stage.<br /><br />Thank you both <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" /><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6057">CrowleyBluegrass</a> — Sat Jul 06, 2013 12:09 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[3gengames]]></name></author>
<updated>2013-07-06T12:05:37-07:00</updated>
<published>2013-07-06T12:05:37-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10249&amp;p=114688#p114688</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10249&amp;p=114688#p114688"/>
<title type="html"><![CDATA[Re: Code not working, clues?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10249&amp;p=114688#p114688"><![CDATA[
<div class="quotetitle">zzo38 wrote:</div><div class="quotecontent"><br />I don't think that is a very good way to wait for vblank, although in what you are doing, I don't think you need to wait for vblank.<br /></div><br /><br />It's a perfect way to wait for vblank if you know what you're doing with it.<br /><br />And the code should work because you're missing 10000 other things. You need to set your palette, set up the screen, enable the PPUMask, and tons of other stuff. Always initiating stuff you use if a fairly obvious thing that needs to be done that wasn't done here. Better get used to it, or you won't program much that doesn't have glitches that make program not work on hardware.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4311">3gengames</a> — Sat Jul 06, 2013 12:05 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[zzo38]]></name></author>
<updated>2013-07-06T12:01:44-07:00</updated>
<published>2013-07-06T12:01:44-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10249&amp;p=114686#p114686</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10249&amp;p=114686#p114686"/>
<title type="html"><![CDATA[Re: Code not working, clues?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10249&amp;p=114686#p114686"><![CDATA[
I don't think that is a very good way to wait for vblank, although in what you are doing, I don't think you need to wait for vblank.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=4734">zzo38</a> — Sat Jul 06, 2013 12:01 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[CrowleyBluegrass]]></name></author>
<updated>2013-07-06T11:53:23-07:00</updated>
<published>2013-07-06T11:53:23-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=10249&amp;p=114685#p114685</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=10249&amp;p=114685#p114685"/>
<title type="html"><![CDATA[Code not working, clues?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=10249&amp;p=114685#p114685"><![CDATA[
Hey guys. After reading around for a while I've decided to start doing some assembling. I'm trying to write a simple program (based on Nerdy Nights) that sets the red emphasis bit when you press the A button. The problem is that, well, nothing happens. I've tried to correct it myself, but I can't seem to find out what is wrong. I'm sure it's something painfully obvious. I have emphasis set as a variable because I eventually want to scroll through the emphasis bits when you press the A button by using ASL. Thanks to tokumaru for his template <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">;----------------------------------------------------------------<br />; constants<br />;----------------------------------------------------------------<br /><br />PRG_COUNT = 2 ;1 = 16KB, 2 = 32KB<br />MIRRORING = %0001 ;%0000 = horizontal, %0001 = vertical, %1000 = four-screen<br />FRAMECOUNTER = 0<br />EMPHASIS = %00100000<br /><br />;----------------------------------------------------------------<br />; variables<br />;----------------------------------------------------------------<br /><br />   .enum $0000<br /><br />   ;NOTE: declare variables using the DSB and DSW directives, like this:<br /><br />   ;MyVariable .dsb 1<br />   ;MyVariable1 .dsb 3<br /><br />   .ende<br /><br />   ;NOTE: you can also split the variable declarations into individual pages, like this:<br /><br />   ;.enum $0100<br />   ;.ende<br /><br />   ;.enum $0200<br />   ;.ende<br /><br />;----------------------------------------------------------------<br />; iNES header<br />;----------------------------------------------------------------<br /><br />   .db &quot;NES&quot;, $1a ;identification of the iNES header<br />   .db PRG_COUNT ;number of 16KB PRG-ROM pages<br />   .db $01 ;number of 8KB CHR-ROM pages<br />   .db $00|MIRRORING ;mapper 0 and mirroring<br />   .dsb 9, $00 ;clear the remaining bytes<br /><br />;----------------------------------------------------------------<br />; Init<br />;----------------------------------------------------------------<br /><br />    .base $8000<br /><br />Reset:<br />  SEI          ; disable IRQs<br />  CLD          ; disable decimal mode<br />  LDX #$40<br />  STX $4017    ; disable APU frame IRQ<br />  LDX #$FF<br />  TXS          ; Set up stack<br />  INX          ; now X = 0<br />  STX $2000    ; disable NMI<br />  STX $2001    ; disable rendering<br />  STX $4010    ; disable DMC IRQs<br /><br />vblankwait1:       ; First wait for vblank to make sure PPU is ready<br />  BIT $2002<br />  BPL vblankwait1<br /><br />clrmem:<br />  LDA #$00<br />  STA $0000, x<br />  STA $0100, x<br />  STA $0200, x<br />  STA $0400, x<br />  STA $0500, x<br />  STA $0600, x<br />  STA $0700, x<br />  STA $0300, x<br />  INX<br />  BNE clrmem<br /><br />vblankwait2:      ; Second wait for vblank, PPU is ready after this<br />  BIT $2002<br />  BPL vblankwait2<br /><br />;----------------------------------------------------------------<br />; code<br />;----------------------------------------------------------------<br />  LDA #%10000000   ; enable NMI<br />  STA $2000<br /><br />Loop:<br />lda FRAMECOUNTER ;wait for vblank<br />cmp FRAMECOUNTER<br />beq Loop<br /><br />ReadController1:<br />  lda #$01<br />  sta $4016<br />  lda #$00<br />  sta $4016     ; tell both the controllers to latch buttons<br /><br />  lda $4016     ; player 1 - A button<br />  and #%00000001<br />  beq Loop ;if A is not pressed, wait for vblank<br /><br />  lda EMPHASIS ;if A is pressed<br />  sta $2001<br /><br />  JMP Loop     ;jump back to Loop, infinite loop<br /><br />  NMI:<br />  INC FRAMECOUNTER<br />  RTI<br /><br />;----------------------------------------------------------------<br />; interrupt vectors<br />;----------------------------------------------------------------<br /><br />  .org $fffa     ;first of the three vectors starts here<br />  .dw NMI        ;when an NMI happens (once per frame if enabled) the<br />                 ;processor will jump to the label NMI:<br />  .dw Reset      ;when the processor first turns on or is reset, it will jump<br />                 ;to the label RESET:<br />  .dw 0          ;external interrupt IRQ is not used in this tutorial<br /><br /><br />;;;;;;;;;;;;;;<br /><br />  .incbin mario.chr   ;includes 8KB graphics file from SMB1</div><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6057">CrowleyBluegrass</a> — Sat Jul 06, 2013 11:53 am</p><hr />
]]></content>
</entry>
</feed>