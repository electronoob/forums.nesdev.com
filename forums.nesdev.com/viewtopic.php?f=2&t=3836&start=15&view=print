<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Using a 2A03 by itself + programming</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Using a 2A03 by itself + programming</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=3836">http://forums.nesdev.com/viewtopic.php?f=2&amp;t=3836</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>2</strong> of <strong>3</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>skrasms</b> [ Tue Jan 22, 2008 10:47 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">blargg wrote:</div><div class="quotecontent">That "discrete ROM" approach is really simple. The '138 decodes the address into 8 individual enable lines, each of which "enable" that byte of the ROM. The two data values you provide are simple. The other values are gated by the remaining '245, and generated by a clever combination of gates (and choice of which opcodes to use).</div>
<br />
<br />Yes, I think I understand the process. The problem is that I am not able to code the logic into a microcontroller, which makes me think there is something I am missing. I was hoping to simulate the process, but whenever I connect the 2A03 to my microcontroller and reset it the results are always different. Sometimes the address pins do not change at all, other times they cycle but the read/write pin always stays high. Here is what my microcontroller code looks like, it's basically a truth table.
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">void data2bus&#40;unsigned data&#41;;<br />void codeout&#40;unsigned dat, unsigned add&#41;;<br /><br />void data2bus&#40;unsigned data&#41;&#123;<br />&nbsp; LATF = &#40;data &amp; 0xF0&#41;&gt;&gt;4;<br />&nbsp; LATD = data &amp; 0x0F;<br />&#125;<br /><br />void codeout&#40;unsigned dat, unsigned add&#41;&#123;<br />&nbsp; switch&#40;LATB&#41;<br />&nbsp; &#123;<br />&nbsp; &nbsp; case 0x0 : data2bus&#40;0xA0&#41;;<br />&nbsp; &nbsp; case 0x1 : data2bus&#40;dat&#41;; //data to write<br />&nbsp; &nbsp; case 0x2 : data2bus&#40;0x8C&#41;;<br />&nbsp; &nbsp; case 0x3 : data2bus&#40;add&#41;; //lower byte of address<br />&nbsp; &nbsp; case 0x4 : data2bus&#40;0x40&#41;;<br />&nbsp; &nbsp; case 0x5 : data2bus&#40;0x00&#41;;<br />&nbsp; &nbsp; case 0x6 : data2bus&#40;0x00&#41;;<br />&nbsp; &nbsp; case 0x7 : data2bus&#40;0x00&#41;;<br />&nbsp; &#125;<br />&#125;<br /><br />void main&#40;&#41; &#123;<br />&nbsp; ADPCFG = 0xFFFF; //--- turn off A/D inputs<br />&nbsp; TRISB = 0xF;&nbsp; //input 3 LSB of address data&nbsp; to port B<br />&nbsp; TRISC.F13 = 1;&nbsp; //RW pin connection<br />&nbsp; TRISD = 0xF; //PORT D for LSB of data, start as input<br />&nbsp; TRISF = 0xF; //PORT F for MSB of data, start as input<br /><br />&nbsp; while&#40;1&#41;&#123;<br />&nbsp; &nbsp; if &#40;LATC.F13&#41;&#123; //if read pin is high<br />&nbsp; &nbsp; &nbsp; TRISD = 0x0;&nbsp; //set data latches to output<br />&nbsp; &nbsp; &nbsp; TRISF = 0x0;<br />&nbsp; &nbsp; &nbsp; codeout&#40;0x10, 0x10&#41;;//write some data<br />&nbsp; &nbsp; &#125;<br />&nbsp; &nbsp; else&#123;<br />&nbsp; &nbsp; &nbsp; TRISD = 0xF; //set data latches as input<br />&nbsp; &nbsp; &nbsp; TRISF = 0xF;<br />&nbsp; &nbsp; &#125;<br />&nbsp; &#125;<br />&#125;//~!<br /><br /></div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Tue Jan 22, 2008 12:24 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />First off, your switch statement is missing breaks, so every one falls through. Second, is the microcontroller fast enough?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>skrasms</b> [ Tue Jan 22, 2008 1:13 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">blargg wrote:</div><div class="quotecontent">First off, your switch statement is missing breaks, so every one falls through. Second, is the microcontroller fast enough?</div>
<br />
<br />Not sure how I forget every break statement, thanks for pointing that out. The micro is running at 40 Mhz right now, do I need it faster than that?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>kyuusaku</b> [ Tue Jan 22, 2008 4:06 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Maybe. I would go about this project by programing a generic sound generator for 2A03 and interface it to the MCU via a few control registers that the 2A03 periodically services. Are you sure you even need a MCU? Thought of having the 2A03 in control and giving the MCU only the difficult tasks?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>kevtris</b> [ Wed Jan 23, 2008 10:41 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">skrasms wrote:</div><div class="quotecontent"><div class="quotetitle">blargg wrote:</div><div class="quotecontent">First off, your switch statement is missing breaks, so every one falls through. Second, is the microcontroller fast enough?</div><br /><br />Not sure how I forget every break statement, thanks for pointing that out. The micro is running at 40 Mhz right now, do I need it faster than that?</div>
<br />
<br />I highly doubt you'll get it to work this way.  You pretty much need the TTL circuit.  The micro isn't going to be fast enough.
<br />
<br />Even IF it was, the micro could never do anything but feed the 2A03.  It cannot do any kind of processing since it's going to be too busy.
<br />
<br />If you wanna try it still though, you're going to have to program your micro in asm, since C is a crap shoot when it comes to wringing every cycle out of the code.  
<br />
<br />It will be an absolute cycle timed mess to get it working I think.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Thu Jan 24, 2008 12:20 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I was thinking that <em>maybe</em> he could get it working if his micro's clock was some integer multiple of the 2A03's, <em>and</em> he could keep it occupied most of the time without having to feed it different bytes. Maybe some fixed byte value that gets it stuck in a loop, which he can then get it out of reliably. It would be neat to babysit the 2A03 with just the micro's built-in I/O ports.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>kevtris</b> [ Fri Jan 25, 2008 3:15 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">blargg wrote:</div><div class="quotecontent">I was thinking that <em>maybe</em> he could get it working if his micro's clock was some integer multiple of the 2A03's, <em>and</em> he could keep it occupied most of the time without having to feed it different bytes. Maybe some fixed byte value that gets it stuck in a loop, which he can then get it out of reliably. It would be neat to babysit the 2A03 with just the micro's built-in I/O ports.</div>
<br />
<br />True, true.  you could feed it 4ch which would get it stuck in a jump loop:
<br />
<br />4C4C:  4C 4C 4C
<br />
<br />though, getting it into and out of the loop reliably might be difficult to do.  You could watch the lower few address lines I guess.   In any event, it will never work programming it in C.  You do not get any kind of cycle by cycle control which is absolutely required.  
<br />
<br />And yah, you'd have to synch both of them pretty much to the same clock for any hope in hell of this working.  Running both off the same clock would work- or some multiple thereof.  The NES CPU isn't going to whine too much if he clocks it at 20MHz instead of 21.47727, so that could make it easier to lock it to the CPU (he said ran at 40MHz).  Just a little adjustment of the note tables is all that needs to be done.
<br />
<br />DPCM cannot be used though regardless of how he does it, but I dunno if that will be a problem or not.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Fri Jan 25, 2008 7:50 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />4C, perfect! OK, so here's the wiring:
<br />
<br />40 MHz micro clock goes to micro, divide-by-2 to get 20 MHz, which goes to 2A03.
<br />
<br />Micro's 8-bit out port goes to 2A03's data bus.
<br />2A03's A0 or A1 line goes to input bit on micro.
<br />
<br />So total usage on micro is 8 output pins and one input.
<br />
<br />Algorithm:
<br />
<br />- Keep $4C on the data bus at all times (might need to have 2A03's reset delayed slightly compared to micro's, easy with an R-C delay).
<br />
<br />- When you're ready to write to 2A03 sound register, wait until input goes high, then wait a little bit more. The 2A03 will be in a loop of JMP $4C4C, so the low two address bits will be cycling through a 00, 01, 10 sequence, making either suitable.
<br />
<br />- Send the following sequence: A0 xx 8C yy 40 xx 4C, where xx is the data and yy is the register. The writes should be timed so that each one occurs every 24 micro clocks (assuming it's running at 40 MHz). The last 4C byte should stay on the output bus indefinitely. Note that the byte just before the last is the data value repeated again. This is because the 2A03 will be writing to the sound hardware during that clock, and you'd rather not be competing with it. You might have to put resistors between the micro and the 2A03 data bus, since there will be some mis-synchronization during the next to last byte when it's writing.
<br />
<br />- Once done, 4C stays on the bus and your micro can go do other things and not worry about the 2A03.
<br />
<br />You'll have 24 micro clocks between each data byte, which should be plenty.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>skrasms</b> [ Sat Jan 26, 2008 7:14 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />DPCM can't be used no matter how it's done? Or is that only a problem if I use the microcontroller to tend the 2A03 directly? 
<br />
<br />Since the microcontroller already has other data to be concerned with, and I don't know any assembly, Kevtris' circuit seems perfect. I put it together this week, and it's getting the 2A03 to loop instructions. 
<br />
<br />I haven't made the MCU code to feed the 245's yet. I imagine it's a matter of having the MCU update the address and data values into the 245's on each low-&gt;high transition of the enable to the address 245. Would there be any reason not to add a latch in front of one of the 245's to free up pins on the MCU? That way I would only need 8 output pins + 1 for handling the latch, instead of 16 output pins. 
<br />
<br />My thought process so far is:
<br />1) Address 245 enable transition low to high triggers interrupt on MCU
<br />2) MCU already has in memory what the next address/data values to write are, and sets 8 pins to the next data byte
<br />3) Those 8 pins are connected to latch in front of the data 245, and another pin is used to latch the data
<br />4) The same 8 pins are also connected directly to the address 245, and once the data byte is latched they switch to the address byte and hold until the next interrupt
<br />5) Repeat
<br />
<br />Does that sound reasonable in terms of logic and timing?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dwedit</b> [ Sun Jan 27, 2008 4:07 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />If you want DMC, you'll need to put a ram chip in there, some way of sending data to the ram chip, then some way to tell the cpu to boot.  Then it's just NES programming from there.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Sun Jan 27, 2008 7:24 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Or, just feed your sample bytes to $4011 (register $11 with the interface). For DMC authenticity, each successive byte should be either +2 or -2 from the previous, within the range 0 to 126.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sun Jan 27, 2008 7:57 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />But don't these microcontrollers already tend to have a DAC on them, to which one could feed values from 0 to 63?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Sun Jan 27, 2008 9:10 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">But don't these microcontrollers already tend to have a DAC on them, to which one could feed values from 0 to 63?</div>
<br />Not that have non-linearity that affects the volume of the 2A03's triangle and noise channels. If one didn't care about the 2A03's quirks, one could do all the channels with a microcontroller alone.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>LocalH</b> [ Wed Jan 30, 2008 2:43 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Not to discourage anyone because this is a healthy technical obstacle, but why not just supply the 2A03 with some RAM and upload your native code to that? It would certainly be a hell of a lot easier than feeding the 2A03 on the cycle level. Plus, said device would be able to natively handle random NSFs as well as run custom code that would then watch the external interface for commands. Plus, if you wanted to, you could modify a random NSF to also watch for external input to modify the output, to create a sort of pseudo "circuit bent" effect (of course, it wouldn't really be circuit bending unless you designed it into the hardware but it'd nonetheless be interesting, hook into the NSF right before it writes to the audio registers and have it modify the data).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Wed Jan 30, 2008 4:42 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Not to discourage anyone because this is a healthy technical obstacle, but why not just supply the 2A03 with some RAM and upload your native code to that? It would certainly be a hell of a lot easier than feeding the 2A03 on the cycle level.</div>
<br />How do you get your code into the RAM? How does microcontroller communicate with 2A03? That's several chips: 2A03, RAM, ROM, address decoding, I/O chip, and having to write and debug the 2A03 software.
<br />
<br />As the <a href="http://nesdev.com/bbs/viewtopic.php?p=30304#30304" class="postlink">author stated</a>, the microcontroller is needed for its multi-channel A/D and ability to program in C. I still think the microcontroller-only approach is the best (and coolest), using no extra chips.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>2</strong> of <strong>3</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>