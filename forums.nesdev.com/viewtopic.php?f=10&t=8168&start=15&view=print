<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - MMC1 boot code questions...</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">MMC1 boot code questions...</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=10&amp;t=8168">http://forums.nesdev.com/viewtopic.php?f=10&amp;t=8168</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>2</strong> of <strong>2</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Thu Oct 06, 2011 9:51 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />STA [d],y does a read then an immediate write to the same address, and it takes up zero page space. Two accesses so fast might confuse the MMC1. We already know the MMC1 gets confused when the CPU tries to INC a ROM address (as seen in one of the Back to the Future games).
<br />
<br />If it's CHR RAM, you can ignore writes to $C000 entirely, and you can use $A000 just for controlling PRG RAM enable (SNROM) or extended PRG ROM/RAM bank switching (SOROM, SUROM, SXROM). If you're on SGROM (no PRG RAM), you probably don't even need to write to $A000. And if you never change the mirroring mode, and you use MMC1 just for the PRG RAM, you can setup $8000 and $A000 with unrolled code in your reset handler and leave $E000 as the only register that changes.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>3gengames</b> [ Thu Oct 06, 2011 10:10 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Hmm, why would the MMC1 be confused by a read to it then a write? Because doesn't recognize reads, right? And from what I am reading, INC is a RWM with two writes at the end when the first is garbage.
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">INC ABS:<br /><br />&nbsp; &nbsp; &nbsp;Read-Modify-Write instructions &#40;ASL, LSR, ROL, ROR, INC, DEC,<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;SLO, SRE, RLA, RRA, ISB, DCP&#41;<br /><br />&nbsp; &nbsp; &nbsp; &nbsp; #&nbsp; address R/W description<br />&nbsp; &nbsp; &nbsp; &nbsp;--- ------- --- ------------------------------------------<br />&nbsp; &nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; PC&nbsp; &nbsp; &nbsp;R&nbsp; fetch opcode, increment PC<br />&nbsp; &nbsp; &nbsp; &nbsp; 2&nbsp; &nbsp; PC&nbsp; &nbsp; &nbsp;R&nbsp; fetch address, increment PC<br />&nbsp; &nbsp; &nbsp; &nbsp; 3&nbsp; address&nbsp; R&nbsp; read from effective address<br />&nbsp; &nbsp; &nbsp; &nbsp; 4&nbsp; address&nbsp; W&nbsp; write the value back to effective address,<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;and do the operation on it<br />&nbsp; &nbsp; &nbsp; &nbsp; 5&nbsp; address&nbsp; W&nbsp; write the new value to effective address<br /></div><br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">STA &#91;ZP&#93;,Y:<br /><br />&nbsp; &nbsp;Indirect Indexed, thanks the fox!<br /><br />&nbsp; &nbsp; &nbsp;Write instructions &#40;STA, SHA&#41; <br /><br />&nbsp; &nbsp; &nbsp; &nbsp; #&nbsp; &nbsp; address&nbsp; &nbsp;R/W description <br />&nbsp; &nbsp; &nbsp; &nbsp;--- ----------- --- ------------------------------------------ <br />&nbsp; &nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; PC&nbsp; &nbsp; &nbsp; &nbsp;R&nbsp; fetch opcode, increment PC <br />&nbsp; &nbsp; &nbsp; &nbsp; 2&nbsp; &nbsp; &nbsp; PC&nbsp; &nbsp; &nbsp; &nbsp;R&nbsp; fetch pointer address, increment PC <br />&nbsp; &nbsp; &nbsp; &nbsp; 3&nbsp; &nbsp; pointer&nbsp; &nbsp; R&nbsp; fetch effective address low <br />&nbsp; &nbsp; &nbsp; &nbsp; 4&nbsp; &nbsp;pointer+1&nbsp; &nbsp;R&nbsp; fetch effective address high, <br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;add Y to low byte of effective address <br />&nbsp; &nbsp; &nbsp; &nbsp; 5&nbsp; &nbsp;address+Y*&nbsp; R&nbsp; read from effective address, <br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;fix high byte of effective address <br />&nbsp; &nbsp; &nbsp; &nbsp; 6&nbsp; &nbsp;address+Y&nbsp; &nbsp;W&nbsp; write to effective address <br /><br />&nbsp; &nbsp; &nbsp; &nbsp;Notes: The effective address is always fetched from zero page, <br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; i.e. the zero page boundary crossing is not handled. <br /><br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; * The high byte of the effective address may be invalid <br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; at this time, i.e. it may be smaller by $100. <br /></div>
<br />
<br />Or is this wrong?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Bregalad</b> [ Thu Oct 06, 2011 10:18 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The only thing the MMC1 does on reads is to transmit the enable signal to the PRG ROM, while on write it has to latch the value in the shift register, and if the write is the 5th to latch it in the actual pointed register. It's probably something in the shift register's decoding logic which prevent a write immediately after another to act... although we'd have to know the MMC1's blueprints to be sure.
<br />
<br />There is no reason to know if indirect writes woud success or fail without trying.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>3gengames</b> [ Thu Oct 06, 2011 10:33 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Well the demo worked perfectly on FCEUX and on real hardware, and we've run it many many times without problems. We've shorted a data line and reset it and then it reported all the right errors for the upper mapped address lines. I'd like to try to get my father to make an MMC1 with an original MMC1 to see if that'd be a problem, I doubt it, but maybe that's something that the original does? Not sure, I'll try to test more later and report back.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Thu Oct 06, 2011 10:38 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />About this "real hardware": Did you try it on an authentic MMC1, on a ReproPak MMC1, or on a PowerPak? If it works on FCEUX, and it works on a Nintendo MMC1 board (not retrousb.com products), then the other emulators have a defect.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>3gengames</b> [ Thu Oct 06, 2011 10:41 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />MMC1B2 from an Ultima Exodus and it's worked 100% no problems on real hardware. NES CPU revision 7, although that shouldn't matter. I'll try to get my dad to make another test cart since I still don't have enough knowledge to make them as quick [Really isn't even a test cart, we're using an NES with the MMC1 board soldered to it as a development station for an NES project] but still, shouldn't matter, I'll try to get an MMC1 original board and replace the MMC1 with it and test it. But yes, MMC1B2 plus that program=100% functional. No retropak or emulated CPLD boards of any type.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Thu Oct 06, 2011 1:14 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />It works fine for me in Nestopia, I don't see any problems. Looks exactly the same as in FCEUX. In Nintendulator it doesn't work for some reason.
<br />
<br />BTW 3GG you took the wrong part out of the doc (indexed indirect, should be indirect indexed), here's the correct one.
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp; &nbsp;Write instructions &#40;STA, SHA&#41;<br /><br />&nbsp; &nbsp; &nbsp; &nbsp; #&nbsp; &nbsp; address&nbsp; &nbsp;R/W description<br />&nbsp; &nbsp; &nbsp; &nbsp;--- ----------- --- ------------------------------------------<br />&nbsp; &nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; PC&nbsp; &nbsp; &nbsp; &nbsp;R&nbsp; fetch opcode, increment PC<br />&nbsp; &nbsp; &nbsp; &nbsp; 2&nbsp; &nbsp; &nbsp; PC&nbsp; &nbsp; &nbsp; &nbsp;R&nbsp; fetch pointer address, increment PC<br />&nbsp; &nbsp; &nbsp; &nbsp; 3&nbsp; &nbsp; pointer&nbsp; &nbsp; R&nbsp; fetch effective address low<br />&nbsp; &nbsp; &nbsp; &nbsp; 4&nbsp; &nbsp;pointer+1&nbsp; &nbsp;R&nbsp; fetch effective address high,<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;add Y to low byte of effective address<br />&nbsp; &nbsp; &nbsp; &nbsp; 5&nbsp; &nbsp;address+Y*&nbsp; R&nbsp; read from effective address,<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;fix high byte of effective address<br />&nbsp; &nbsp; &nbsp; &nbsp; 6&nbsp; &nbsp;address+Y&nbsp; &nbsp;W&nbsp; write to effective address<br /><br />&nbsp; &nbsp; &nbsp; &nbsp;Notes: The effective address is always fetched from zero page,<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; i.e. the zero page boundary crossing is not handled.<br /><br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; * The high byte of the effective address may be invalid<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; at this time, i.e. it may be smaller by $100.<br /></div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Thu Oct 06, 2011 1:34 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">thefox wrote:</div><div class="quotecontent">BTW 3GG you took the wrong part out of the doc (indexed indirect, should be indirect indexed)</div>
<br />It's kind of confusing to keep those i-words in order, which is why I usually just call these addressing modes "(d,x)" or "(d),y", as they are abbreviated in the opcode matrix on page 33 of the <a href="http://www.westerndesigncenter.com/wdc/documentation/w65c816s.pdf" class="postlink">65816 datasheet</a>.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Thu Oct 06, 2011 1:50 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The problem is definitely in Nintendulator, from its MMC1 implementation:
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp;// Ugly hack to get Bill &amp; Ted's Excellent Video Game Adventure to run<br />&nbsp; &nbsp;// since the mapper interface currently doesn't expose a CPU timestamp<br />&nbsp; &nbsp;if &#40;Reg != LastReg&#41;<br />&nbsp; &nbsp;&nbsp; &nbsp;Latch = LatchPos = 0;<br /></div>
<br />It seems like it doesn't support using a different register for the first four writes. That's a bit surprising, but I guess no commercial game did that.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>3gengames</b> [ Thu Oct 06, 2011 3:43 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Hmm, you'd think it'd be easier to just do it right, but still, whatever. Good to know it's not just me, also keep in mind NESICIDE does fail too which is what worried me more, I'll make sure he sees this though and he can be away of the bug.
<br />
<br />And yeah, Bill and Ted uses it.  <img src="./images/smilies/icon_razz.gif" alt=":P" title="Razz" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Thu Oct 06, 2011 4:06 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">3gengames wrote:</div><div class="quotecontent">Hmm, you'd think it'd be easier to just do it right, but still, whatever. Good to know it's not just me, also keep in mind NESICIDE does fail too which is what worried me more, I'll make sure he sees this though and he can be away of the bug.<br /><br />And yeah, Bill and Ted uses it.  <img src="./images/smilies/icon_razz.gif" alt=":P" title="Razz" /></div>
<br />The comment explains why it wasn't easier: the mappers are DLLs, and to ignore writes that are too close to each other it'd need to know how many CPU cycles have elapsed since the last write, which it can't do because of a limitation in the mapper interface.
<br />
<br />Also, Bill and Ted doesn't use the "use a different register for the first 4 writes than the 5th one" feature, but simply starts with an "INC foo" where foo points to $FF. So if the second write of the INC isn't ignored, a 0 is shifted in to the shift register right after the reset on the previous cycle, messing up the rest of the code which assumes the shift reg is empty.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>3gengames</b> [ Fri Nov 18, 2011 3:03 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Bump. New version created. New tons of stuff. Rewrote the check routines and stuff. I haven't had time to test on hardware, but I believe it should be fine. I've worked out all the bugs I injected via the emulator so there shouldn't be any problems with combinations of passes/fails. I hope this helps some people out. I'm going to test on an MMC1 cart I have soon to verify this is correct.
<br />
<br /><!-- m --><a class="postlink" href="http://www.mediafire.com/?u7ukffnf6q08e0t">http://www.mediafire.com/?u7ukffnf6q08e0t</a><!-- m -->

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>2</strong> of <strong>2</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>