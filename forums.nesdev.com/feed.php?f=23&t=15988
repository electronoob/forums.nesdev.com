<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=23&amp;t=15988" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2017-12-15T11:39:22-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=23&amp;t=15988</id>
<entry>
<author><name><![CDATA[mikejmoffitt]]></name></author>
<updated>2017-12-15T11:39:22-07:00</updated>
<published>2017-12-15T11:39:22-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=15988&amp;p=210166#p210166</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=15988&amp;p=210166#p210166"/>
<title type="html"><![CDATA[Re: N64 programming (libdragon)]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=15988&amp;p=210166#p210166"><![CDATA[
You should make a pull request against the master libdragon repo for your changes.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5314">mikejmoffitt</a> — Fri Dec 15, 2017 11:39 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[BMBx64]]></name></author>
<updated>2017-12-04T12:07:47-07:00</updated>
<published>2017-12-04T12:07:47-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=15988&amp;p=209420#p209420</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=15988&amp;p=209420#p209420"/>
<title type="html"><![CDATA[Re: N64 programming (libdragon)]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=15988&amp;p=209420#p209420"><![CDATA[
Yeah a bit of both things.<br /><br />Libdragon is a library for programming on N64, however is really limited, at the point sprite flip was not even possible, so ive started  improving it/adding new features.<br /><br />Then i made a tool for converting textures and a tile engine.<br /><br />Im moving soon to libn64, the lib of Marathon (author of CEN64), im working with Krom to port most of the RDP features to libn64, we have a rdp.c for all the internal RDP calls and rdp_functions.c for more user friendly functions (libdragon style).<br /><br />Krom is working on the 3D lib which will be pretty cool, right now all the math is done by the CPU and drawn by the RDP, once everything is ported and its stable will be moved to the RSP for more speed.<br /><img src="https://i.imgur.com/COjHC98.gif" alt="Image" /><br /><br />Libn64 is pretty fast and have thread support.<br /><br />Regarding libdragon ive done some fixes.<br /><br /><strong>PALETTE FIX</strong><br />A palette can be selected now from 0 to 15 on 4bit textures using:<br />rdp_select_palette( uint8_t pal );<br /><br /><strong>4BIT TEXTURE WORKAROUND</strong><br />Textures of 64x64x4bit can be used now (full 2KB), for some reason when the texture takes 2KB overwrittes the TLUT area, and the texture won't show, however if we set palette 2 or higher that data remains untouched.<br /><br />This makes the trick (edited..):<br />uint16_t palette_0[16] = { 0,16641,33553,42009,25369,16913,25097,8449,50465,34089,25633,17177,8721,769,513,265 };<br />rdp_select_palette(2);<br />rdp_load_palette(2,15,palette_0); // upload starting TMEM on palette 2, 16 colors upload (0-15), point to the palette struct<br /><br />This function can upload individual palettes.<br /><br />I did once again a Goldenaxe scroll test but this time with 64x64x4bit textures.<br />x= 0 - 232 fps<br />x= 194 - 212 fps<br />x= 974 - 204 fps<br />x= 1552 - 222 fps<br /><br />I think if all the textures shares the same palette this could be faster than a 64x32x16bit texture, both are very close in terms of performance.<br /><br />DOWNLOAD (64x64 test)<br /><a href="https://mega.nz/#!ZkhVRb7K!UejX0KrNIPeKMLgcjID8gIHFhhb1ClgsLu5heYgGLDU" class="postlink">https://mega.nz/#!ZkhVRb7K!UejX0KrNIPeKMLgcjID8gIHFhhb1ClgsLu5heYgGLDU</a><br /><br /><strong>FUNCTION RENAMES AND OTHER CHANGES</strong><br />Some functions has been renamed using the internal names of n64 or has been changed to match the work done on libn64 for easier code migration.<br /><br />As for example all these functions:<br />rdp_enable_1primitive(1); // enable<br />rdp_enable_tlut(1);<br />rdp_enable_texture_copy();<br />rdp_enable_1primitive(0); // disable<br />rdp_enable_tlut(0);<br /><br />Works like this:<br />rdp_texture_copy( ATOMIC_PRIM | EN_TLUT );<br /><br />Or if you dont want to enable anything else than copy mode, this overwrittes the previous command:<br />rdp_texture_copy(0);<br /><br />The define list for the 64bit commands comes on the examples of Fire &amp; Tlut on github, but i could provide a more detailed one if anyone is interested.<br /><br />Examples and lib has been updated on github:<br /><a href="https://github.com/conker64/libdragon" class="postlink">https://github.com/conker64/libdragon</a><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=8494">BMBx64</a> — Mon Dec 04, 2017 12:07 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Erockbrox]]></name></author>
<updated>2017-12-04T01:53:23-07:00</updated>
<published>2017-12-04T01:53:23-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=15988&amp;p=209369#p209369</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=15988&amp;p=209369#p209369"/>
<title type="html"><![CDATA[Re: N64 programming (libdragon)]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=15988&amp;p=209369#p209369"><![CDATA[
So I'm reading this thread and trying to understand what everything is here. <br /><br />Is this a game engine that you are making for the N-64? Or is there a programming library for the N-64 called libdragon and you are just developing code with it to create cool special effects that can be used by a homebrewer to make new N-64 games?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6785">Erockbrox</a> — Mon Dec 04, 2017 1:53 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Drew Sebastino]]></name></author>
<updated>2017-11-19T14:02:20-07:00</updated>
<published>2017-11-19T14:02:20-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=15988&amp;p=208370#p208370</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=15988&amp;p=208370#p208370"/>
<title type="html"><![CDATA[Re: N64 programming (libdragon)]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=15988&amp;p=208370#p208370"><![CDATA[
I'm really loving all the niche effects that you're adding. <img src="http://forums.nesdev.com/images/smilies/icon_lol.gif" alt=":lol:" title="Laughing" /> Honestly though, that second gif makes it look like it could be useful for water splashes or shattered glass or something of that nature.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6683">Drew Sebastino</a> — Sun Nov 19, 2017 2:02 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[BMBx64]]></name></author>
<updated>2017-11-19T10:16:11-07:00</updated>
<published>2017-11-19T10:16:11-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=15988&amp;p=208353#p208353</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=15988&amp;p=208353#p208353"/>
<title type="html"><![CDATA[Re: N64 programming (libdragon)]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=15988&amp;p=208353#p208353"><![CDATA[
<div class="quotetitle">calima wrote:</div><div class="quotecontent"><br />The latter has a vertical line on top of the island, looks like misaligned texcoords.<br /></div><br />Yeah you are right, im not sure if it was a mistake on the emulator, on real harware seems fine.<br /><br /><strong>ADDED RDP NOISE</strong><br />Another color combiner, provides some kind of TV noise, works on rectangles and triangles, added 2 options.<br /><br />1) Partial<br /><img src="https://i.imgur.com/SYlEZAR.gif" alt="Image" /><br /><br />2) Complete<br /><img src="https://i.imgur.com/uMRUafM.gif" alt="Image" /><br /><br />The last one is compatible with RGB scale and alpha, so you could replicate the interferences of the Goldeneye watch for example.<br /><br />I believe is pretty similar to some special effects of Sin &amp; Punishment, like on the evade move, some emulators wont replicate this effect.<br /><img src="https://i.imgur.com/EqIr8Br.gif" alt="Image" /><br /><br />Here can be seen better, however the dots are transparent instead of black, i will keep researching..<br /><img src="https://i.imgur.com/SvmfUoO.gif" alt="Image" /><br /><br />--<br /><br />I have changed the way some function works, now you can set 1CYCLE or 2CYCLE with:<br />- rdp_texture_cycle( num ); // 0 = 1cycle, 1 = 2cycle<br /><br />However 2cycle still doesnt works, but will be useful when 3D is added.<br /><br />Other functions such as:<br />- rdp_additive_blending<br />- rdp_intensify<br />- rdp_color<br />- rdp_noise<br /><br />Has been improved, previously you could call them without setting RDP to 1cycle, but they did a call to set other modes for that, in 3D i believe most of the time the RDP will be in 1cycle or 2cycle mode, so now they just do a color combiner set and must be called after setting the RDP into cycle mode.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=8494">BMBx64</a> — Sun Nov 19, 2017 10:16 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[calima]]></name></author>
<updated>2017-10-20T10:45:18-07:00</updated>
<published>2017-10-20T10:45:18-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=15988&amp;p=206359#p206359</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=15988&amp;p=206359#p206359"/>
<title type="html"><![CDATA[Re: N64 programming (libdragon)]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=15988&amp;p=206359#p206359"><![CDATA[
The latter has a vertical line on top of the island, looks like misaligned texcoords.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=7237">calima</a> — Fri Oct 20, 2017 10:45 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[BMBx64]]></name></author>
<updated>2017-10-20T03:45:02-07:00</updated>
<published>2017-10-20T03:45:02-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=15988&amp;p=206325#p206325</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=15988&amp;p=206325#p206325"/>
<title type="html"><![CDATA[Re: N64 programming (libdragon)]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=15988&amp;p=206325#p206325"><![CDATA[
<strong>ADDED DITHER</strong><br />Another in build RDP setting.<br /><br />- rdp_rgb_dither(num);<br />0 magic square<br />1 standard<br />2 random<br />3 disabled<br /><br />- rdp_alpha_dither(num);<br />0 pattern<br />1 ~pattern<br />2 random<br />3 disabled<br /><br />Random rgb dither applied on the sky surface, can be useful for film effect or Silent Hill filter.<br /><img src="https://i.imgur.com/0yzS9G8.gif" alt="Image" /><br /><br />Random rgb dither + rdp_rgba_scale test.<br /><img src="https://i.imgur.com/4KBJ4Ro.gif" alt="Image" /><br /><br />These new functions needs at least 1CYCLE mode since COPY bypasses most of the RDP.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=8494">BMBx64</a> — Fri Oct 20, 2017 3:45 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[BMBx64]]></name></author>
<updated>2017-09-17T10:50:17-07:00</updated>
<published>2017-09-17T10:50:17-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=15988&amp;p=204706#p204706</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=15988&amp;p=204706#p204706"/>
<title type="html"><![CDATA[Re: N64 programming (libdragon)]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=15988&amp;p=204706#p204706"><![CDATA[
<strong>ADDED FIRE EXAMPLE</strong><br /><img src="https://i.imgur.com/Y1y25dn.gif" alt="Image" /><br /><br />This example features few effects provided by the new libdragon functions.<br />- S deformation of concrete framebuffer area<br />- Blur using multiple alpha levels<br /><br />CONTROLS<br />Hold Z - To do blur effect<br />Press A - To generate fire (up to 99, fire variables are shared with blur and recycled when maxed)<br />Press Start - Delete fire<br /><br />DOWNLOAD (with source)<br /><a href="https://github.com/conker64/libdragon/tree/master/examples/fire" class="postlink">https://github.com/conker64/libdragon/tree/master/examples/fire</a><br /><br />--<br />Working on more framebuffer tricks, this one needs to be cleaned up before uploading, since framebuffer is sent as texture for manipulation other effects can be applied like reverse flip, resize or mask with invisible colors.<br /><img src="https://i.imgur.com/IPGhtuB.gif" alt="Image" /><br /><br />Other effects that im interested on replicate (such as expansive waves):<br /><img src="https://i.imgur.com/4mNwXPH.gif" alt="Image" /><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=8494">BMBx64</a> — Sun Sep 17, 2017 10:50 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[BMBx64]]></name></author>
<updated>2017-09-09T15:43:11-07:00</updated>
<published>2017-09-09T15:43:11-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=15988&amp;p=204264#p204264</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=15988&amp;p=204264#p204264"/>
<title type="html"><![CDATA[Re: N64 programming (libdragon)]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=15988&amp;p=204264#p204264"><![CDATA[
I made a github page, is not a clone / fork of the original libdragon github, im still learning how it works, so this is just a test but i did uploaded some files meanwhile.<br /><br />Github:<br /><a href="https://github.com/conker64/libdragon" class="postlink">https://github.com/conker64/libdragon</a><br /><br />The interesting ones are rdp.c &amp; rdp.h, there is one TLUT example as well, i will keep adding more examples.<br /><br />On tools you can find an update of Sprite 64.<br /><img src="https://i.imgur.com/uZPRWqU.png" alt="Image" /><br /><br />For 4 and 8 bit use PNG TO TILEMAP of a max of 64x32x4bit or 32x32x8bit textures, they are not fixed yet and PNG TO SPRITE will attempt to reach the maximum size for each sprite.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=8494">BMBx64</a> — Sat Sep 09, 2017 3:43 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[BMBx64]]></name></author>
<updated>2017-09-07T04:40:39-07:00</updated>
<published>2017-09-07T04:40:39-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=15988&amp;p=204096#p204096</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=15988&amp;p=204096#p204096"/>
<title type="html"><![CDATA[Re: N64 programming (libdragon)]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=15988&amp;p=204096#p204096"><![CDATA[
<strong>ADDED FRAMEBUFFER EFFECTS</strong><br />There are several games that uses different framebuffer effects, such as Mario Kart 64 for the background screen, i though it was a good idea have few functions to allow this:<br /><img src="https://i.imgur.com/j7m8za9.gif" alt="Image" /><br /><br /><strong>void rdp_buffer_screen( display_context_t disp, int texture_mode );</strong><br /><br />This function reads the buffer and generates 16bit textures on the fly, it reads only the necessary pixels to build it.<br /><br />Have 3 texture modes:<br />0 - Full Screen on 1 texture of 32x32 (respect ratio of any resolution)<br />1 - Upper half on maximum texture size (around 64x32)<br />2 - Bottom half <br /><br /><img src="https://i.imgur.com/fmX3LWm.gif" alt="Image" /><br /><br />Mario Kart example have a very slow refresh rate, i could improve the function to select a refresh rate to increase performance at the cost of saving the textures on memory, an option to select a concrete area could be great too.<br /><br /><strong>void rdp_buffer_copy( display_context_t disp, uint16_t x_buf, uint16_t y_buf, uint8_t width, uint8_t height );</strong><br /><br />This one is more flexible and allows a 1:1 buffer copy of any compatible texture size in any position of the screen.<br /><br />Once the texture is loaded on TMEM can be draw as normal, any effect can be applied, on this example a row of textures are reversed with blue scale to simulate ice or water reflection.<br /><br /><img src="https://i.imgur.com/p0vtYzw.gif" alt="Image" /><br /><br />Both functions are only 16bit mode compatible at the moment, few more are planned to provide different effects.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=8494">BMBx64</a> — Thu Sep 07, 2017 4:40 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[BMBx64]]></name></author>
<updated>2017-08-30T15:12:36-07:00</updated>
<published>2017-08-30T15:12:36-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=15988&amp;p=203554#p203554</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=15988&amp;p=203554#p203554"/>
<title type="html"><![CDATA[Re: N64 programming (libdragon)]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=15988&amp;p=203554#p203554"><![CDATA[
Thx Espozo  <img src="http://forums.nesdev.com/images/smilies/Mfr_icon_homebrew.png" alt=":beer:" title="Beer" /> <br /><br /><strong>32bit TMEM texture fix</strong><br />Now the 4KB of TMEM can be used for 32bit textures (32x32)<br /><br />It was a bug on the rdp_load_texture function of libdragon:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">(((((real_width / 8) + round_amount) * sprite-&gt;bitdepth) &amp; 0x1FF) &lt;&lt; 9)</div><br />The fix (tile line param is the same one for 16bit and 32bit textures):<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">(((((cache.real_width  &gt;&gt; 3) + round_amount) &lt;&lt; 1) &amp; 0x1FF) &lt;&lt; 9)</div><br /><br /><strong>TEST</strong><br /><img src="http://i.imgur.com/CpmSzsV.png" alt="Image" /><br /><br />Scroll of 32x32 tiles 32bit textures, 320x240x32bit, each tile have a different texture.<br /><br />Performance:<br />16x16 = 51-55fps<br />32x32 = 72-76fps<br /><br />No optimizations were possible besides disabling the framebuffer clear, repeating 32bit textures could be necessary to keep a good performance.<br /><br />The test uses 300 tiles instead of 1200, that reduced loading times to 3 or 4 sec.<br /><br /><strong>DOWNLOAD</strong><br /><a href="https://mega.nz/#!w1IFWD4A!k4F3BoVzp1vQ-69SQ4Tfti1E5MTEotgGTYDrw-acxPM" class="postlink">https://mega.nz/#!w1IFWD4A!k4F3BoVzp1vQ-69SQ4Tfti1E5MTEotgGTYDrw-acxPM</a><br /><br /><strong>rdp_set_blend_color fix</strong><br />The function its necessary to color triangles, RDP command requires RGBA components:<br /><br />Original function may provide wrong colors (specially on 16bit color mode), its called in combination with graphics_make_color :<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">void rdp_set_blend_color( uint32_t color )<br />{<br />    __rdp_ringbuffer_queue( 0xF9000000 );<br />    __rdp_ringbuffer_queue( color );<br />    __rdp_ringbuffer_send();<br />}</div><br />Fix (direct RGBA input):<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">void rdp_set_blend_color(uint8_t _r, uint8_t _g, uint8_t _b, uint8_t _alpha)<br />{<br />    __rdp_ringbuffer_queue( 0x39000000 );<br />    __rdp_ringbuffer_queue( _r &lt;&lt; 24 | _g &lt;&lt; 16 | _b &lt;&lt; 8 | _alpha );<br />    __rdp_ringbuffer_send();<br />}</div><br /><strong>Color combiner fix</strong><br />It seems textured rectangles and triangles have different color combinations, some works for rectangles while triangles looks like this:<br /><img src="http://i.imgur.com/X7TgFin.jpg" alt="Image" /><br /><br />I found a compatible combination for both rectangles and triangles for every effect, now triangles can do alpha blending, intensify, etc just like rectangles.<br /><br /><strong>Added rdp_enable_1primitive</strong><br />This function enables or disables atomic prim since there's some performance impact on the fillrate.<br /><br />Some glitches happens on concrete sizes / bitdepth textures, for example a 16x16 16bit texture is fine while 16x16 4bit may show a garbage line (or empty line) at the bottom, i think this function could be useful for tiles since you know all them will have the same size, but could be safe to keep enabled it for sprites because of them being variable.<br /><br />Performance tests (no glitches in any of them):<br /><br />Mario scroll<br />On - 333fps<br />Off - 342fps<br /><br />Goldenaxe scroll<br />On - 167fps<br />Off - 172fps<br /><br />Fillrate test<br />On - 1280 16x32 sprites at 50fps<br />Off - 1320 at 50fps<br /><br />5-6 fps improvement or close to 1Mp/s fillrate gain like the book suggests.<br /><br />--<br /><br />To fix TLUT it seems necessary to load 4 times the same palette (and it works that way on libdragon), however Krom's ASM examples loads only 16 colors instead of 64  <img src="http://forums.nesdev.com/images/smilies/icon_question.gif" alt=":?:" title="Question" /> <br /><img src="http://i.imgur.com/UGDJTJg.png" alt="Image" /><br /><br />Right now i can do a 64x32x4bit texture but 64x64 won't display, maybe the problem is related to the way the colors are loaded, my next goal is try to fix 4 and 8bit textures then release the current rdp.c.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=8494">BMBx64</a> — Wed Aug 30, 2017 3:12 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Drew Sebastino]]></name></author>
<updated>2017-08-24T22:00:48-07:00</updated>
<published>2017-08-24T22:00:48-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=15988&amp;p=203199#p203199</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=15988&amp;p=203199#p203199"/>
<title type="html"><![CDATA[Re: N64 programming (libdragon)]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=15988&amp;p=203199#p203199"><![CDATA[
Amazing work as usual! <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" />  <br /><br /><span style="font-size: 75%; line-height: normal">If only I were determined enough to make this much progress... <img src="http://forums.nesdev.com/images/smilies/icon_lol.gif" alt=":lol:" title="Laughing" /> </span><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=6683">Drew Sebastino</a> — Thu Aug 24, 2017 10:00 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[BMBx64]]></name></author>
<updated>2017-08-24T05:30:42-07:00</updated>
<published>2017-08-24T05:30:42-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=15988&amp;p=203149#p203149</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=15988&amp;p=203149#p203149"/>
<title type="html"><![CDATA[Re: N64 programming (libdragon)]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=15988&amp;p=203149#p203149"><![CDATA[
<div class="quotetitle">claws wrote:</div><div class="quotecontent"><br />Does libdragon support triangle rendering, shading, etc?<br /></div><br />On the default libdragon you can render 2D Non shaded triangles, using blend color, function rdp_draw_filled_triangle.<br /><img src="http://i.imgur.com/YMhinF4.gif" alt="Image" /><br /><br />On my side i have added a function to select any from this list called <strong>rdp_triangle_setup( num );</strong>, 0 = flat, 1 = goraud, 2 = textured, etc<br /><img src="https://i.imgur.com/Ay5A7JA.png" alt="Image" /><br /><br />Right now im trying to do textured triangles to rotate sprites, it will work when i update texture coefficients accordingly, im planning more effects with triangles.<br /><img src="http://i.imgur.com/9uux3Xy.gif" alt="Image" /><br /><br />--<br />I have fixed as well <strong>32bit mode</strong>, textures on this mode had to be set to 1cycle to be displayed with the RDP or system crashes (they worked on software render on libdragon examples, but thats pretty slow).<br /><br />32bit mode supports textures of 4,8,16 and 32bits.<br />16bit mode supports textures of 4,8,16 and 32bits too (they are converted on the fly)<br /><br />This is a screen build with 32bit textures of 16x16 32bit mode in cen64.<br /><img src="http://i.imgur.com/aGnkmiY.png" alt="Image" /><br /><br />16bit mode with 32bit textures, the colors are lowered as you can see banding on the sky.<br /><img src="http://i.imgur.com/fvTysMQ.png" alt="Image" /><br /><br /><strong>PERFORMANCE TEST</strong><br />This test is mario scroll again with 3 different settings:<br /><br />Same spot<br />16bit mode, 16x16 16bits copy texture = 333fps<br />16bit mode, 16x16 16bits 1cycle texture  = 266fps<br />32bit mode, 16x16 16bits 1cycle texture = 211fps<br /><br />1cycle texture slowdowns things a bit, 32bit mode is pretty slow as well, maybe for some special effects or intros, but i would stay at 16bit mode for 2D.<br /><br /><strong>DOWNLOAD</strong><br /><a href="https://mega.nz/#!5gIiAACS!V--UGTsV7FULDG0-E2OC_b2QO7HX02-ujwxZF7xzuDA" class="postlink">https://mega.nz/#!5gIiAACS!V--UGTsV7FULDG0-E2OC_b2QO7HX02-ujwxZF7xzuDA</a><br /><br />--<br /><br />Other things to fix:<br />- Triple buffer is not working, you get full speed instead of sync video<br />- AA disabled causes glitches at 60hz (PAL seems fine)<br />- Fix loading speed, load 1200 tiles/files of 512bytes = 47 seconds<br />- 4, 8 and 32bit textures only uses half of TMEM (this is top priority)<br />- Palette colors are sent in a different way, to upload 16 colors you have to send 64 instead (4 times more)<br /><br />* 16bit textures can use full 4KB of TMEM, surprisingly 16bit textures were the only ones supported on the RDP by libdragon.<br />* Both palette and texture problems are TMEM related.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=8494">BMBx64</a> — Thu Aug 24, 2017 5:30 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[claws]]></name></author>
<updated>2017-08-23T13:54:16-07:00</updated>
<published>2017-08-23T13:54:16-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=15988&amp;p=203115#p203115</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=15988&amp;p=203115#p203115"/>
<title type="html"><![CDATA[Re: N64 programming (libdragon)]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=15988&amp;p=203115#p203115"><![CDATA[
Does libdragon support triangle rendering, shading, etc?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=5770">claws</a> — Wed Aug 23, 2017 1:54 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[BMBx64]]></name></author>
<updated>2017-08-20T17:42:06-07:00</updated>
<published>2017-08-20T17:42:06-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=15988&amp;p=202879#p202879</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=15988&amp;p=202879#p202879"/>
<title type="html"><![CDATA[Re: N64 programming (libdragon)]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=15988&amp;p=202879#p202879"><![CDATA[
<strong>ADDED 4/8 BIT TEXTURES</strong><br />This took a while, i had to update Sprite64 tool as well which i will post on the next days.<br /><br />The implementation is not finished yet, i followed Krom's ASM examples to do it, for some reason working together with libdragon it fails at showing any texture above 1KB (2KB max, the next 2KB are for TLUT), so i can't do 64x64 4bit textures (2 pixels byte) or 64x32 8bit textures yet, but im working on fixing it.<br /><br />I did only the RDP side, these textures won't be compatible with the software rendering of libdragon (graphics.c).<br /><br /><strong>TEST 1: PALETTE EDITOR</strong><br />This test uses a 4bit sprite (1cycle, 2x scaled), you can pick a color and replace any palette color (A button).<br /><img src="http://i.imgur.com/QV1Pe3a.png" alt="Image" /><br /><br />By pressing L starts an automatic palette rotation, you can stop it at any time with R.<br /><img src="http://i.imgur.com/f7vCczU.gif" alt="Image" /><br /><br />Press Start to default palette.<br /><br />I had problems with invalidate cache on this concrete test (palette won't refresh), the problem was solved replacing -O2 with -Os on compiler options.<br /><br /><strong>DOWNLOAD</strong><br /><a href="https://mega.nz/#!l4JFxIiB!jTS5TAQl8-0b5008yk7QQ392qOlYw0cbAK0QbAGOKSw" class="postlink">https://mega.nz/#!l4JFxIiB!jTS5TAQl8-0b5008yk7QQ392qOlYw0cbAK0QbAGOKSw</a><br /><br /><strong>TEST 2: PERFORMANCE TEST</strong><br />Same Goldenaxe test of the previous page, 16x16 4bit textures, 1 unique palette, since the whole map uses only 1 of the 4 Mega Drive palettes.<br /><img src="http://i.imgur.com/3QyVOni.png" alt="Image" /><br /><br />4bit Mirrored (with the current optimization align)<br />x= 0 - 166fps<br />x= 194 - 161fps<br />x= 974 - 143fps<br />x= 1552 - 169fps<br /><br />16bit Mirrored (same align)<br />x= 0 - 161fps<br />x= 194 - 156fps<br />x= 974 - 138fps<br />x= 1552 - 163fps<br /><br />Overall seems to be an small improvement when all the tiles uses the same palette, could be quite interesting to check this map with 64x64 tiles.<br /><br /><strong>DOWNLOAD</strong><br /><a href="https://mega.nz/#!5x4zAYrT!6xAwSK76h8GaGyKfLo05vDUHjEU33MMmKpHDGAumUSc" class="postlink">https://mega.nz/#!5x4zAYrT!6xAwSK76h8GaGyKfLo05vDUHjEU33MMmKpHDGAumUSc</a><br /><br /><strong>NEW FUNCTIONS</strong><br />I have organized a bit better all the functions i did on the RDP, they have changed a bit since the last post:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">void rdp_send( void );<br />void rdp_command( uint32_t data );<br />void rdp_cp_sprite( int x, int y, int flags, int cp_x, int cp_y, int line );<br />void rdp_cp_sprite_scaled( int x, int y, float x_scale, float y_scale, int flags, int cp_x, int cp_y, int line );<br />void rdp_enable_filter( int type );<br />void rdp_enable_alpha( int type );<br />void rdp_enable_tlut( int type );<br />void rdp_texture_1cycle( void );<br />void rdp_additive_blending( void );<br />void rdp_intensify( void );<br />void rdp_color( void );<br />void rdp_rgba_scale(uint8_t _r, uint8_t _g, uint8_t _b, uint8_t _alpha);<br />void rdp_load_tlut(uint8_t _pal_bp, uint8_t _pal_num, uint16_t *_palette);</div><br /><br />All the following functions works combined with a call to rdp_enable_texture_copy or rdp_texture_1cycle:<br /><br />// 0 disable, 1 enable<br />void rdp_enable_filter( int type ); // point sampled or bilinear<br />void rdp_enable_alpha( int type );<br />void rdp_enable_tlut( int type );<br /><br />These functions works combined with rdp_rgba_scale, to control RGB values:<br /><br /><strong>void rdp_intensify( void );</strong>, RGB from 0 (normal) to 255 (white), can do this:<br /><img src="http://i.imgur.com/o9qs6Pn.gif" alt="Image" /><br /><br /><strong>void rdp_color( void );</strong> shows the sprite silouette in 1 RGB color, can do this kind of effects:<br /><img src="http://i.imgur.com/HhtzC1G.gif" alt="Image" /><br /><br />I will be adding more combiner options for different effects, i will update rdp.c and rdp.h soon, i wan't to fix the small bugs commented and few things more.<br /><br />As well im interested on disabling atomic_prim on libdragon, i already did it, but then sometimes the sprites may miss 1 vertical or horizontal line.<br /><img src="http://i.imgur.com/XGJqL52.png" alt="Image" /><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=8494">BMBx64</a> — Sun Aug 20, 2017 5:42 pm</p><hr />
]]></content>
</entry>
</feed>