<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Bevahior of NES/Famicom with no cartridge present</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="https://forums.nesdev.com/">https://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Bevahior of NES/Famicom with no cartridge present</span><br /><span class="gensmall"><a href="https://forums.nesdev.com/viewtopic.php?f=2&amp;t=14899">https://forums.nesdev.com/viewtopic.php?f=2&amp;t=14899</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Jarhmander</b> [ Sat Oct 01, 2016 8:19 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Bevahior of NES/Famicom with no cartridge present</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />It's a bit of a tricky question, but I was wondering if it can be guaranteed that the NES/Famicom would eventually execute one of the KIL instructions and stop upon starting up without a cartridge inserted. Specifically, I'm asking if it's impossible that the NES/Famicom runs continuously without executing a KIL and stop. (I do not consider the CIC in the NES case)<br /><br />I have a sense that it's an impossible question but I ask nevertheless, because sometimes people here have answers to impossible questions <img src="./images/smilies/icon_wink.gif" alt=";)" title="Wink" /><br /><br />As I see it:<br />- I do not quite know what power-on open bus looks like, but if the 2A03 reset is short enough, then I think the databus will get all 0s, but over time the bits will flip to 1s, and not simultaneously, which will complicate tremendously the study;<br />- let's suppose PC points to an area that is open bus and the databus is $FF, then it executes ISC $FFFF,X. I'm not sure of the operation of unofficial instructions, but I guess it ends on a write. With X = 0, it will fetch $FF and then final write is 0. This write will set the databus and if the next PC is still open bus the next opcode will be BRK. The last push on the stack is the status register; thus the next PC will depend upon the value of the pushed status register. If the address is still open bus, then there is an high chance that the same value (status register) will be interpreted as an opcode.<br />- Executing code in uninitialised RAM is unpredictable, but it would be next to impossible to encounter any JMP/branch instruction that jump back into an already executed instruction, and thus create a code loop.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dwedit</b> [ Sat Oct 01, 2016 8:29 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Bevahior of NES/Famicom with no cartridge present</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Think of an open bus read as returning the lowest byte of the address, which it usually does.<br />So it reads from the reset vector, FFFC and FFFD and jumps to FDFC. Then it executes instruction FC (NOP abs,x). Then PC = FDFF, and it executes FF (ISB abs, x). Then it's at FE02, and executes 02 (CPU jam).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Sat Oct 01, 2016 10:41 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Bevahior of NES/Famicom with no cartridge present</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />But the data bus isn't multiplexed, so it doesn't fetch the address bytes unless it's part of the encoding. (e.g. <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">LDA $4016</tt> finds $40 on the data bus because the ROM drove it there on the preceding cycle)<br /><br />The reset vector instead reads three bytes from the stack, so the specific address it'll jump to is a function of what memory is in the NES; most likely RAM powers up with either $00 or $FF in it, so it'll either jump to $FFFF or $0000.<br /><br />If it's RAM that usually powers up with zeroes, and it's jumped to $0000, it's likely that the next instruction is $00 = <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">BRK</tt>, so it'll push the return address ($0002) to the stack, and then the status value ... which it then fetches as the IRQ vector location. The status value on power-up is $34, so it'll jump to $3434 ... and then read some random byte from OAM, followed by reading up to two copies of it from the PPU's internal open bus. At this point, we can't really track it any further.<br /><br />If the RAM instead usually powers up with $FFs, the first instruction will be <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">ISC $FFFF,X</tt> ... X usually powers up holding 0, so it'll spend the entire 8 KiB of address space for the NES's internal RAM repeating that over and over, until it slides into executing from the PPU registers. Once again, I'm not certain how to track it beyond this point.<br /><br />And of course, the latter case assumes that RAM is uniform; since that's not a good assumption, it could do something else altogether.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Jarhmander</b> [ Sun Oct 02, 2016 9:15 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Bevahior of NES/Famicom with no cartridge present</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Oh yeah right, I somehow forgot the reset reads from stack, even though I thought of the inhibited writes, I just didn't think that there would be reads from RAM, so it drives the databus. Silly me.<br /><br />So the RAM contents at the end of page 1 would determine where PC lands, so the unpredictability comes from the power up contents of RAM, not analog effects on the databus. That mades me realize it's quite possible to control the behavior of a soft reset without a cartridge: fill the entire page 1 with a constant, &lt; $20, put your code at that address. For example: fill page 1 with $1F, put <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">jmp $71F</tt> at $71F, and the next soft reset with cartridge removed will  be predictable and will do an infinite loop. A cold boot done sufficiently shortly after power off should have the same effect. That exercise was not an attempt to do something useful with that &quot;feature&quot; but to show there can be interesting side effects a game can do with the RAM that can alter the no-cart code execution.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Sun Oct 02, 2016 10:32 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Bevahior of NES/Famicom with no cartridge present</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />You don't even need to fill the entire stack, as long as you can control the value of the stack pointer before the console is reset. Just make sure that the byte at $00FE,s contains your desired fake reset vector.<br /><br />It'd be hard to use the PPU like this, but if I had a little ditty to play it'd make a nice tiny demo.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Jarhmander</b> [ Mon Oct 03, 2016 5:46 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Bevahior of NES/Famicom with no cartridge present</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I suggested filling the stack because I don't know if the reset signal from the reset button is &quot;clean&quot; enough; you might be screwed by one extra reset.<br /><br />Slightly related, would putting a pull down on CIRAM /CE and a resistor between PPU A13 and CIRAM A10 have any undesirable side effects? I know that some games rely on the open bus values in the 2A03 addressing space, so I wouldn't put any pull-down/pull-up on the 2A03 databus, but for CIRAM A10 and CIRAM /CE... they're never, ever, left floating. Depending on the signal, they're either grounded, connected to a PPU signal or mapper-controlled. I don't think that can affect any game, and that would do something useful: use first 1k of CIRAM for pattern table, second 1k for nametable by default, if there is no cartridge (or a custom cart doesn't connect anything to these signals).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Mon Oct 03, 2016 10:07 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Bevahior of NES/Famicom with no cartridge present</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Jarhmander wrote:</div><div class="quotecontent">I suggested filling the stack because I don't know if the reset signal from the reset button is &quot;clean&quot; enough; you might be screwed by one extra reset.<br /></div>Well, in the Famicom there's the capacitor <a href="http://nesdev.com/Ntd_8bit.jpg" class="postlink">C1 (0.47µF)</a>, so that should be relatively clean. We don't have a schematic of the top-loader, but I'd assume it's similar? In a front-loader with a confused CIC, I previously measured the amount of time from &quot;5V stabilizes&quot; to &quot;/RESET released&quot;—it's about 1/10th of a second.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Slightly related, would putting a pull down on CIRAM /CE and a resistor between PPU A13 and CIRAM A10 have any undesirable side effects?<br /></div>As long as the resistor is large enough (≥5kΩ?) , the pulldown is definitely safe.<br /><br />There might be timing problems with the other resistor, though.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Jarhmander</b> [ Mon Oct 03, 2016 4:29 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Bevahior of NES/Famicom with no cartridge present</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />1/10th of a second? It's quite slow. The reset button won't cause any problems.<br /><br />As for the resistor between PPU A13 and CIRAM A10, yeah it bother me too. The thing is, what capacitance can I expect on the PPU  address bus? 20pF? 50pF? 100pF?!?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Thu Dec 08, 2016 1:47 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Bevahior of NES/Famicom with no cartridge present</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Here's a very simple noodly harmony example. I have tested it on my NES-001.<br /><br />It will only work correctly on a front-loader with a functioning CIC! On each warm boot it advances the song pointer, so it plays one chord until the next time the CIC reboots the 2A03. (On a famicom, toploader, or frontloader with a disabled CIC, you can advance it by hand by pressing the reset button)<br /><br />It completely ignores the PPU. It's ready to go (i.e. for you to pull the cartridge and watch what happens when there's no ROM attached) after it plays the high-low pair of tones.<br /><br />You have to pull the cartridge for it do anything. (You probably want to hold reset while you're doing so). Otherwise it'll just copy the same 2 KiB from ROM to RAM every time it boots.<br /><br />Source is included. Released to public domain/under WTFPL/CC0 as necessary.

		
			<br clear="all" /><br />

			<table class="tablebg" width="100%" cellspacing="1">
			<tr>
				<td><b class="genmed">Attachments: </b></td>
			</tr>
			
				<tr>
					<td>
			<span class="genmed">
				<img src="./styles/subsilver2/imageset/icon_topic_attach.gif" width="14" height="18" alt="" title="" /> 
				<a href="./download/file.php?id=7204">cartless-20161207.zip</a> [6.86 KiB]
			</span><br />
			<span class="gensmall">Downloaded 63 times</span>
		

		<br />
	</td>
				</tr>
			
			</table>
		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>