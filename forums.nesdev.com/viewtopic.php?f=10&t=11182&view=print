<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Register Reads and Writes</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Register Reads and Writes</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=10&amp;t=11182">http://forums.nesdev.com/viewtopic.php?f=10&amp;t=11182</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Limne</b> [ Tue Apr 22, 2014 6:27 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Register Reads and Writes</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I've heard that certain registers are read or write only, or that certain registers use different values depending on whether you read or write from  them. Does that only refer to store or load instructions? What happens if you perform arithmetic instructions on registers like bitwise OR it to flip just one bit?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Tue Apr 22, 2014 6:31 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Register Reads and Writes</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />An instruction like that is called a &quot;Read-Modify-Write&quot; instruction. The effects will be roughly equivalent to reading the address in memory, modifying the value according to the instruction, and then writing it back to memory.<br /><br />If a location in memory isn't readable, you'll get some kind of &quot;open bus&quot; behavior. For addresses in the NES from $4000 to $7FFF, the value that will be read is usually the LSB of the address that you're trying to read from. (e.g. reading from $5156 would return $56)<br /><br />If a location in memory isn't writable, the write is simply ignored.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Tue Apr 22, 2014 6:39 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Register Reads and Writes</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Limne wrote:</div><div class="quotecontent">Does that only refer to store or load instructions? What happens if you perform arithmetic instructions on registers like bitwise OR it to flip just one bit?</div><br />Memory-mapped registers work the same for all instructions, not just load and store. The hardware that maps registers to specific memory addresses has no idea what instruction is running inside the CPU, it simply detects ANY attempt it makes to access these special memory locations.<br /><br />Each instruction takes a number of cycles to execute, and during each of these cycles an operation is performed (there are documents that detail this for every instruction). Loading and storing from/to memory are two of the possible operations instructions can perform, so the same load operation performed by LDA $XXXX is performed by ADC $XXXX, and there's no way for external hardware to know the difference.<br /><br />EDIT: The same instruction might have both load and store operations (these are the read-modify-write instructions lidnariq mentioned), or might perform multiple reads and writes (for no reason other than to simplify the hardware), which doesn't make any difference when real memory is accessed, but makes all the difference for memory-mapped registers (the accesses count as multiple register reads/writes).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>rainwarrior</b> [ Tue Apr 22, 2014 7:14 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Register Reads and Writes</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I would advise against using STA (addr), Y for interacting with $2007, as it will doubly increment the VRAM address.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Tue Apr 22, 2014 11:52 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Register Reads and Writes</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The multiple memory accesses made by the same instruction may also have completely unrelated addresses (to what you want to do). For example, if <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">X = $AB</tt> and the instruction <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">LDA $4567,X</tt> is executed, the first read will happen at address <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">$4512</tt> and the second one at <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">$4612</tt>.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>koitsu</b> [ Wed Apr 23, 2014 12:05 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Register Reads and Writes</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">thefox wrote:</div><div class="quotecontent">The multiple memory accesses made by the same instruction may also have completely unrelated addresses (to what you want to do). For example, if <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">X = $AB</tt> and the instruction <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">LDA $4567,X</tt> is executed, the first read will happen at address <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">$4512</tt> and the second one at <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">$4612</tt>.</div><br /><s>This is the first I&#39;ve heard of this behaviour with absolute indexed-X addressing.  I was under the impression there was only one read done &#40;to the final calculated absolute 16-bit address, <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">$4612</tt> in this example&#41;, regardless if there was a page wrap or not.</s><br /><br />Edit: Because I can't make heads or tails of the stuff on visual6502.org (too low-level and not &quot;concise&quot; enough for me), I found <a href="http://users.telenet.be/kim1-6502/6502/hwman.html#AA" class="postlink">this</a>, subsection 2.5, the breakdown is listed (with some reformatting done by me, focusing solely on abs,x addressing):<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">Tn&nbsp; &nbsp; &nbsp;Address Bus&nbsp; &nbsp; &nbsp; &nbsp; Data Bus&nbsp; &nbsp; R/W&nbsp; &nbsp; &nbsp;Comments<br />T0&nbsp; &nbsp; &nbsp;PC&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;OP CODE&nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; Fetch OP CODE<br />T1&nbsp; &nbsp; &nbsp;PC + 1&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;BAL&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; Fetch low order byte of Base Address<br />T2&nbsp; &nbsp; &nbsp;PC + 2&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;BAH&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; Fetch high order byte of Base Address<br />T3&nbsp; &nbsp; &nbsp;ADL: BAL + X&nbsp; &nbsp; &nbsp; &nbsp;Data*&nbsp; &nbsp; &nbsp; &nbsp; 1&nbsp; &nbsp; &nbsp; Fetch data (no page crossing)<br />&nbsp; &nbsp; &nbsp; &nbsp;ADH: BAH + C&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Carry is 0 or 1 as required from previous add operation<br />T4*&nbsp; &nbsp; ADL: BAL + X&nbsp; &nbsp; &nbsp; &nbsp;Data&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;1&nbsp; &nbsp; &nbsp; Fetch data from next page<br />&nbsp; &nbsp; &nbsp; &nbsp;ADH: BAH + 1<br /><br />* If the page boundary is crossed in the indexing operation, the data fetched in T3 is ignored.<br />If page boundary is not crossed, the T4 cycle is bypassed.<br /></div><br />I've been sitting here for the past 15 minutes reading this explanation over and over and over and I could interpret it in multiple ways.  The part I'm having trouble understanding is why for T3 it says &quot;ADH: BAH + C&quot;, where C is the carry result (0 or 1) of the previous BAL+X addition (in other words, if BAL+X results in a page wrap, it would be BAH+1, otherwise it's BAH+0).  To me, that would indicate that truly only 1 data read operation would be required.<br /><br />If the text for T3 said &quot;ADH: BAH&quot; and not &quot;ADH: BAH + C&quot; then it'd be more clear to me why there were two reads (one from <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">$4512</tt> and then another from <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">$4612</tt>).<br /><br />But then again my own questioning is refuted because it's quite clear for a page-wrapped index operation (like in the example given, <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">lda $4567,x</tt> where <tt style="margin-left: 2px; margin-right: 2px; padding:3px; background-color: #3355aa; color: white;">X=$ab</tt>), there are in fact two data reads done by the CPU (in T3 and then again in T4).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Wed Apr 23, 2014 1:16 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Register Reads and Writes</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Look at it like this:<br /><br />During T1, it loads BAL<br />During T2, it adds X to BAL, and loads BAH<br />During T3, it loads from BAH:(BAL+X)&amp;255, and adds the carry to BAH<br />- then, depending on whether there was a carry during T<strong>2</strong>, either it goes straight to T0 of the next opcode, or<br />During T4, it loads from (BAH+1):(BAL+X).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>thefox</b> [ Wed Apr 23, 2014 7:16 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Register Reads and Writes</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />This is a fairly good doc for cycle-by-cycle operation of instructions, although I believe it has some errors: <!-- m --><a class="postlink" href="http://nesdev.com/6502_cpu.txt">http://nesdev.com/6502_cpu.txt</a><!-- m --> (see Absolute indexed addressing)<br /><br />Also note that 6502 is always reading or writing from memory on every cycle, this can't be turned off. It's usually safer to read from a semi-random address than write to it. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Movax12</b> [ Wed Apr 23, 2014 11:37 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Register Reads and Writes</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />This is true of the NES as well:<br /><br />The 6502's read-modify-write instructions perform one read and two write cycles. First the unmodified data that was read is written back, and then the modified data is written. This characteristic may cause issues by twice accessing hardware that acts on a write. This anomaly continued through the entire NMOS line, but was fixed in the CMOS derivatives, in which the processor will do two reads and one write cycle. Good programming practice will generally avoid this problem by not executing read/modify/write instructions on hardware registers.<br /><br /><!-- m --><a class="postlink" href="http://en.wikipedia.org/wiki/MOS_Technology_6502#Bugs_and_quirks">http://en.wikipedia.org/wiki/MOS_Techno ... and_quirks</a><!-- m -->

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>