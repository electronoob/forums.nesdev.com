<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - How to do multiple things at once?</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">How to do multiple things at once?</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=10&amp;t=9595">http://forums.nesdev.com/viewtopic.php?f=10&amp;t=9595</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>2</strong> of <strong>4</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sun Dec 09, 2012 7:22 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: How to do multiple things at once?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">FinalZero wrote:</div><div class="quotecontent">Do NTSC and PAL NES's have different hardware?</div><br />Yes. There are three major types of PPU in authentic consoles: NTSC PPU 2C02, used in the Famicom and NTSC NES; PAL PPU 2C07, used in the PAL NES (region A) and PAL NES (region B); and the RGB PPU 2C03, used in PlayChoice-10, Famicom Titler, and a few TVs with a built-in Famicom. The 2C03 has the same timing (in the NTSC vs. PAL sense) as the 2C02, but the signal is RGB component instead of composite so that it can be used with arcade monitors.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">The NES doesn't read something from the television, does it?</div><br />The only time the NES can read something from the television is when a Zapper is plugged in. The Zapper can see dark and light, and it can see up and down. It uses that to see which duck you shot by making each duck bright in sequence. Otherwise, the video output is <a href="https://en.wikipedia.org/wiki/Open-loop_controller" class="postlink">open-loop</a>: the TV sends nothing back to the NES.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">And in SMB3, where you can go backwards and forwards through the stage, it must also remember whether the enemy is dead (so don't spawn it again).</div><br />Super Mario Bros. 2 and 3 have expansion RAM at $6000-$7FFF. Destruction buffers for blocks, coins, enemies, and the like are stored in RAM.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">What's the difference between a vblank and a frame? I thought that both happened 60 or 50 times per second.</div><br />Active picture time (or &quot;draw&quot;) is 240 scanlines; <a href="https://en.wikipedia.org/wiki/Vertical_blanking_interval" class="postlink">vertical blanking time</a> (or &quot;vblank&quot;) is 22 scanlines on NTSC and RGB. I'm guessing in some terminologies, the &quot;frame&quot; refers only to draw; in others, it refers to both draw and the vblank after it, and in still others, it refers to vblank and the draw after it.<br /><br />The code that runs during draw prepares buffers that will be copied to the PPU during vblank. writePictureToTV() copies these buffers so that the PPU can start using them by the next draw.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Sun Dec 09, 2012 7:38 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: How to do multiple things at once?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The PPU is the master timebase for video; the TV locks on to its timing. This way the PPU can just output the signal and not need anything back from the TV.<br /><br />The game writes to PPU memory, and then the PPU reads this when it's generating the video frame signal output. Even if the game doesn't touch the PPU for a while, the PPU is still regularly generating video frames for the TV on its own.<br /><br />Games can't generally write to PPU memory while the PPU is reading, which is does for most of the frame. Since the TV needs time to move its electron gun back to the top of the screen, there is a blanking period (VBL). This is also a time the PPU isn't reading from any memory, so the game writes during this period. The NMI occurs when this blanking begins, so most games update sprites and background in NMI.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Sun Dec 09, 2012 7:51 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: How to do multiple things at once?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">FinalZero wrote:</div><div class="quotecontent">In theory then, if I ran SMB instruction by instruction, I should see each object move one at a time, right?</div><br />You will see that the object's coordinates have changed if you look at specific bytes in RAM, but you will not be able to see it on the screen because the picture will only be rendered after the states of all the objects have been updated.<br /><br /><div class="quotetitle">FinalZero wrote:</div><div class="quotecontent">So, the loop basically looks like this?:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">main() {<br />&nbsp; while(true) {<br />&nbsp; &nbsp; updateMario();<br />&nbsp; &nbsp; updateEnemy1();<br />&nbsp; &nbsp; updateEnemy2();<br />&nbsp; &nbsp; updateEnemy3();<br />&nbsp; &nbsp; updateMusic();<br />&nbsp; &nbsp; <br />&nbsp; &nbsp; waitForVBlank();<br />&nbsp; &nbsp; resetVBlankCounter();<br />&nbsp; &nbsp; writePictureToTV();<br />&nbsp; }<br />}</div></div><br />Yeah, kinda. There are some things missing, such as &quot;updateCamera&quot;, and enemies are hardly hardcoded like that, iterating over an array of enemies would make more sense. Also, it usually isn't <strong>while(true)</strong> (infinite loop), because the program must be able to run other loops. Games often have different loops for different parts (title screens, menus, cutscenes, main engine, etc.), because different tasks must be performed for each of them. A &quot;game over&quot; for example should break that main game loop.<br /><br />As for music, sound is usually updated after &quot;writePictureToTV&quot;, because execution time varies less in the VBlank handler than in the main loop, and you want the time between calls to &quot;updateMusic&quot; to be as constant as possible, otherwise there will be noticeable sound distortion.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">How does writePictureToTV() work though? Does the PPU do that automatically?</div><br />Kinda. The PPU renders images to the screen (60 or 50 of them per second) automatically, but you have to manually set some parameters to tell the PPU <strong>what</strong> to draw. During VBlank (meaning that the point when you called &quot;writePictureToTV&quot; is correct) is the only time the CPU can freely set these PPU parameters: things like the positions of the sprites and the tiles and palettes they use, the tiles that form the background, and so on. The PPU will render a picture whether you change these parameters or not (if you don't, it will just render the same picture again).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>FinalZero</b> [ Sun Dec 09, 2012 8:00 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: How to do multiple things at once?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">and it can see up and down</div><br />How?<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Active picture time (or &quot;draw&quot;) is 240 scanlines; vertical blanking time (or &quot;vblank&quot;) is 22 scanlines on NTSC and RGB.</div><br />You know, it throws me off when you measure time in scanlines.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">The code that runs during draw prepares buffers that will be copied to the PPU during vblank. writePictureToTV() copies these buffers so that the PPU can start using them by the next draw.</div><br />1) Where does it copy these buffers to and from?<br />2) When does the PPU actually start drawing? Does the PPU bypass the CPU and just draw automatically?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>FinalZero</b> [ Sun Dec 09, 2012 8:18 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: How to do multiple things at once?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">The PPU is the master timebase for video; the TV locks on to its timing. This way the PPU can just output the signal and not need anything back from the TV.<br /><br />The game writes to PPU memory, and then the PPU reads this when it's generating the video frame signal output. Even if the game doesn't touch the PPU for a while, the PPU is still regularly generating video frames for the TV on its own.<br /><br />Games can't generally write to PPU memory while the PPU is reading, which is does for most of the frame. Since the TV needs time to move its electron gun back to the top of the screen, there is a blanking period (VBL). This is also a time the PPU isn't reading from any memory, so the game writes during this period. The NMI occurs when this blanking begins, so most games update sprites and background in NMI.</div><br />This is a good explanation, so I think that i get it now.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">You will see that the object's coordinates have changed if you look at specific bytes in RAM, but you will not be able to see it on the screen because the picture will only be rendered after the states of all the objects have been updated.</div><br />Right, I understand that now.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">As for music, sound is usually updated after &quot;writePictureToTV&quot;, because execution time varies less in the VBlank handler than in the main loop, and you want the time between calls to &quot;updateMusic&quot; to be as constant as possible, otherwise there will be noticeable sound distortion.</div><br />Ah, that makes sense, to reduce distortion.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Yeah, kinda. There are some things missing, such as &quot;updateCamera&quot;, and enemies are hardly hardcoded like that, iterating over an array of enemies would make more sense. Also, it usually isn't while(true) (infinite loop), because the program must be able to run other loops. Games often have different loops for different parts (title screens, menus, cutscenes, main engine, etc.), because different tasks must be performed for each of them. A &quot;game over&quot; for example should break that main game loop.</div><br />Okay, so it'd be more like this:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">main() {<br />&nbsp; if(state == isTitleScreen) {<br />&nbsp; &nbsp; ...<br />&nbsp; } else if(state == isInStage) {<br />&nbsp; &nbsp; updateMario();<br />&nbsp; &nbsp; updateEnemies();<br />&nbsp; &nbsp; updateCamera();<br />&nbsp; &nbsp; <br />&nbsp; &nbsp; waitForVBlank();<br />&nbsp; &nbsp; resetVBlankCounter();<br />&nbsp; &nbsp; copyValuesToPPU();<br />&nbsp; &nbsp; <br />&nbsp; &nbsp; updateMusic();<br />&nbsp; } else if(state == isEndScreen) &#91;<br />&nbsp; &nbsp; ...<br />&nbsp; } else if(state == ...) {<br />&nbsp; &nbsp; ...<br />&nbsp; }<br />}</div><br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Kinda. The PPU renders images to the screen (60 or 50 of them per second) automatically, but you have to manually set some parameters to tell the PPU what to draw. During VBlank (meaning that the point when you called &quot;writePictureToTV&quot; is correct) is the only time the CPU can freely set these PPU parameters: things like the positions of the sprites and the tiles and palettes they use, the tiles that form the background, and so on. The PPU will render a picture whether you change these parameters or not (if you don't, it will just render the same picture again).</div><br />Okay, so the name that I gave to writePictureToTV() should actually be something like copyValuesToPPU(), because the PPU is not acually writing then, because the electron gun is scrolling back up. The PPU is actually writing to the screen when the CPU is computing updateMario(), updateEnemies(), updateCamera(), right?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Sun Dec 09, 2012 8:23 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: How to do multiple things at once?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The PPU is its own processor of sorts, constantly generating one frame after another based on what's in PPU memory. The CPU can merely write to PPU memory and some control registers to alter this. If the CPU doesn't do any writes to PPU memory for a while, the PPU just keeps displaying whatever is currently in PPU memory.<br /><br />There is limited time for the CPU to write to PPU memory each frame, so most programs set aside some CPU RAM to hold the data to write on the next VBL, then quickly write it when the time comes. The programs can then set up the data in this buffer at their leisure

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Sun Dec 09, 2012 8:28 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: How to do multiple things at once?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">FinalZero wrote:</div><div class="quotecontent"><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">and it can see up and down</div><br />How?</div><br />You can count the time it takes for the zapper to detect light from the start of VBlank. The longer it takes, the farther it is from the top.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">1) Where does it copy these buffers to and from?</div><br />OAM (i.e. sprite attributes) is copied from any page of memory ($XX00-$XXFF) to internal memory in the PPU with a sprite DMA. You tell the PPU which page to copy from and it does the whole thing. Alternatively, you can transfer one byte at a time from anywhere, but games don't usually do this because it's too slow (there wouldn't be time to update all sprites in a single VBlank).<br /><br />Everything else can be stored anywhere, and can be written to PPU memory anywhere, through registers $2006 and $2007. Palettes (visible at $3F00-$3FFF, everything past $3F1F being mirrors) are also inside the PPU, just like OAM. Pattern tables are visible at $0000-$1FFF, and are inside the cartridge (it can be ROM or RAM). Name/attribute tables are visible at $2000-$2FFF (mirroring varies), and are physically inside the NES, but it can also be inside the cartridge (so you can have more name tables than the NES alone can provide).<br /><br />During frame processing, games will buffer whatever they need to change in the PPU, and once Vblank starts, they transfer all the data. This is not done automatically, each game needs its own code to write data to the PPU.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">2) When does the PPU actually start drawing? Does the PPU bypass the CPU and just draw automatically?</div><br />It starts a frame automatically after VBlank, regardless of what the CPU is doing. This is why the screen glitches up if programs take too long to perform their video updates and leak into the visible frame. The PPU keeps going at a steady pace, it's the program running on the CPU that has to go through the trouble of keeping up.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Sun Dec 09, 2012 8:45 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: How to do multiple things at once?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">FinalZero wrote:</div><div class="quotecontent">Okay, so it'd be more like this:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">main() {<br />&nbsp; if(state == isTitleScreen) {<br />&nbsp; &nbsp; ...<br />&nbsp; } else if(state == isInStage) {<br />&nbsp; &nbsp; updateMario();<br />&nbsp; &nbsp; updateEnemies();<br />&nbsp; &nbsp; updateCamera();<br />&nbsp; &nbsp; <br />&nbsp; &nbsp; waitForVBlank();<br />&nbsp; &nbsp; resetVBlankCounter();<br />&nbsp; &nbsp; copyValuesToPPU();<br />&nbsp; &nbsp; <br />&nbsp; &nbsp; updateMusic();<br />&nbsp; } else if(state == isEndScreen) &#91;<br />&nbsp; &nbsp; ...<br />&nbsp; } else if(state == ...) {<br />&nbsp; &nbsp; ...<br />&nbsp; }<br />}</div></div><br />Personally, I wouldn't check for the game state every frame because that would be a waste of time and the code would look like spaghetti, specially if there are many states. I would do it more like this:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">main(){<br />&nbsp; &nbsp;state = isTitleScreen;<br />&nbsp; &nbsp;while(true){<br />&nbsp; &nbsp;&nbsp; &nbsp;switch(state){<br />&nbsp; &nbsp;&nbsp; &nbsp;case isTitleScreen: titleScreen();<br />&nbsp; &nbsp;&nbsp; &nbsp;case isGameStage: gameStage();<br />&nbsp; &nbsp;&nbsp; &nbsp;(...)<br />&nbsp; &nbsp;&nbsp; &nbsp;}<br />&nbsp; &nbsp;}<br />}<br /><br />titleScreen(){<br />&nbsp; &nbsp;;SETUP TITLE SCREEN<br />&nbsp; &nbsp;while(state == isTitleScreen){<br />&nbsp; &nbsp;&nbsp; &nbsp;;THINGS THAT HAPPEN EVERY FRAME<br />&nbsp; &nbsp;}<br />&nbsp; &nbsp;;TERMINATE TITLE SCREEN<br />}<br />gameStage(){<br />&nbsp; &nbsp;;SETUP GAME STAGE (decompress level map, clear items, etc.)<br />&nbsp; &nbsp;while(state == isGameStage){<br />&nbsp; &nbsp;&nbsp; &nbsp;;THINGS THAT HAPPEN EVERY FRAME (process player, enemies, camera, etc.)<br />&nbsp; &nbsp;}<br />&nbsp; &nbsp;;TERMINATE GAME STAGE<br />}<br />(...)</div><br />Changing states is then as easy as modifying the &quot;state&quot; variable, no matter where you are.<br /><br />If you can make your PPU buffering system generic enough, you can share it (along with the VBlank handler) among all (or at least many) game states. That way you don't have to worry about waiting for VBlank and updating music inside every freaking state loop, you could have a function handle that.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Okay, so the name that I gave to writePictureToTV() should actually be something like copyValuesToPPU(), because the PPU is not acually writing then, because the electron gun is scrolling back up. The PPU is actually writing to the screen when the CPU is computing updateMario(), updateEnemies(), updateCamera(), right?</div><br />Correct.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>FinalZero</b> [ Sun Dec 09, 2012 8:53 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: How to do multiple things at once?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Personally, I wouldn't check for the game state every frame because that would be a waste of time and the code would look like spaghetti, specially if there are many states. I would do it more like this:</div><br />1) I forgot to wrap a while loop around the if's and else's.<br />2) I see the inner while loop now, and get what you are saying about not checking all the possible states every frame.<br />3) Yes, your code is better formatted, and it'd end up formatting it the same way in the long run. Of course, if I was doing this in an OO language, I'd use inheritance/polymorphism. Also, you forgot break's in the switch/case statement.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Sun Dec 09, 2012 9:01 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: How to do multiple things at once?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">FinalZero wrote:</div><div class="quotecontent">If I was doing this in an OO language, I'd use inheritance/polymorphism of course.</div><br />Definitely, but on the NES it will probably be either ASM or C. The code I wrote above is pretty much what I do in ASM, but I tried to describe it in a C-like language as best as I could.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Btw, you forgot break's in the switch/case statement.</div><br />I thought about putting breaks, but I figured I wasn't writing actual working C code, it was more like pseudo code, so I left out this annoying aspect of the C language. =)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>FinalZero</b> [ Sun Dec 09, 2012 9:32 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: How to do multiple things at once?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />You mentioned menus before, and I want to know, what kind of loop would handle them. What about something like Dragon Warrior, where's there's lots of nested menus too? I suppose that you'd have to remember which menu is currently selected, and what index in the current menu is selected, and from these determine what hitting the d-pad up or down should do. Doing all that seems rather painful.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>3gengames</b> [ Sun Dec 09, 2012 9:50 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: How to do multiple things at once?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I'd save all the variables on a stack when each new one is called and keep track of how many are on the stack. Put a universal control value and universal output value and then when you escape, close them all. When you go 1 back, pull the vars you need a put the menu back on the screen. <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /> I've never programmed one, but that seems like a pretty logical way to go about it.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Mon Dec 10, 2012 2:59 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: How to do multiple things at once?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">FinalZero wrote:</div><div class="quotecontent">What about something like Dragon Warrior, where's there's lots of nested menus too?</div><br />I would do it with sub-states, states that run inside other states (you JSR to them, so they can return). Each level (not game level, menu level <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />) would be a sub-state, and after they are done (a selection is made or it's aborted) it returns to the parent state. A pause screen could also be implemented as a sub-state.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Mon Dec 10, 2012 8:13 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: How to do multiple things at once?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">FinalZero wrote:</div><div class="quotecontent"><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Active picture time (or &quot;draw&quot;) is 240 scanlines; vertical blanking time (or &quot;vblank&quot;) is 22 scanlines on NTSC and RGB.</div><br />You know, it throws me off when you measure time in scanlines.</div><br />The pixel clock of the NTSC PPU is defined as 945/176 MHz, which is about 5.37 MHz. One scanline equals 341 pixels, including the visible area (256 pixels), the border (24 pixels), and the horizontal blanking (61 pixels). At 5.37 MHz, 341 pixels are output in 63.5 microseconds.<br /><br />Time can also be measured in CPU cycles. On the PAL NES, the CPU runs one cycle for every 3.2 pixels, but on everything else (Famicom, PlayChoice, NTSC NES, and third-party Famicom clones designed for the PAL video system), the CPU runs one cycle for every 3 pixels, or 1.79 MHz. This makes each scanline 113.67 CPU cycles long. This makes draw 27280 cycles long and vblank 2500 cycles, although you won't be able to use all of vblank for a few reasons that you'll learn about later.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">The PPU is actually writing to the screen when the CPU is computing updateMario(), updateEnemies(), updateCamera(), right?</div><br />Yes, and this is what I meant by &quot;draw time&quot;.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Of course, if I was doing this in an OO language, I'd use inheritance/polymorphism.</div><br />A switch statement can be used to implement a form of polymorphism, just one without specific support from the language. It can be implemented in assembly language using a jump table.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>slobu</b> [ Mon Dec 10, 2012 3:17 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: How to do multiple things at once?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />This discussion reminds me of two things:<br /><br />How Andrew Davie handles tasks in Bolderdash for the 32600<br /><!-- m --><a class="postlink" href="http://www.atariage.com/forums/topic/198176-session-25-advanced-timeslicing/#entry2525563">http://www.atariage.com/forums/topic/19 ... try2525563</a><!-- m --><br /><br />and Proto-threads<br /><!-- m --><a class="postlink" href="http://dunkels.com/adam/pt/">http://dunkels.com/adam/pt/</a><!-- m --><br /><br />I think both approaches could make handling large amounts of objects easier for resource constrained systems.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>2</strong> of <strong>4</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>