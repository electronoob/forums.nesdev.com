<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=3&amp;t=2093" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2006-09-24T09:14:55-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=3&amp;t=2093</id>
<entry>
<author><name><![CDATA[Zepper]]></name></author>
<updated>2006-09-24T09:14:55-07:00</updated>
<published>2006-09-24T09:14:55-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=2093&amp;p=17961#p17961</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=2093&amp;p=17961#p17961"/>
<title type="html"><![CDATA[Top and bottom halves of 6502 clock cycle]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=2093&amp;p=17961#p17961"><![CDATA[
I'm not meaning "half" of anything, but something like...<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">LDA #00 &#91;3 cycles&#93;<br /><br />1. opcode fetch &#40;1 CPU cycle -&gt; 3 PPU clocks&#41;<br />2. immediate byte &#40;+1 CPU cycle -&gt; +3 PPU clocks&#41;<br />3. A = read from RAM&#91;00&#93; &#40;+1 CPU cycle -&gt; +3 PPU clocks&#41;<br /><br />What I see as &quot;correct&quot; follows:<br /><br />3.  A = read from RAM&#91;00&#93; &#40;+1 CPU cycle -&gt; +3 PPU clocks&#41;<br />- put 00 on databus &#40;ppu clock&#41; -- rising edge<br />- temp = read from RAM&#91;00&#93; &#40;ppu clock&#41;<br />- A = temp &#40;ppu clock&#41; -- falling edge</div><br /><br />Example: opcode $01 fails (ORA). If I take out the CPU cycle (or 3 PPU cycles), it passes ok. This is where my question relies.<br /><br />Another interesting issue (or "hack") is for fetching the bytes after the opcode (immediate=1 or absolute=2): when fetching the opcode, the PPU is clocked <strong>before</strong> checking the NMI condition (to trigger after completing the instruction); when fetching the immediate byte, the NMI is checked <strong>after</strong> checking the NMI condition. Bump.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=39">Zepper</a> — Sun Sep 24, 2006 9:14 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[mattmatteh]]></name></author>
<updated>2006-09-23T20:45:45-07:00</updated>
<published>2006-09-23T20:45:45-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=2093&amp;p=17956#p17956</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=2093&amp;p=17956#p17956"/>
<title type="html"><![CDATA[Top and bottom halves of 6502 clock cycle]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=2093&amp;p=17956#p17956"><![CDATA[
i dont think you need to do half ppu cycles.  i was thinking about this a while ago when getting those test to pass.  the only thing i changed was the catch up.   reads would catch up to the cycle, while writes would catch up to the cycle + 1 ppu cycle.  this would be because the read would set the read line and hold it for the cpu read.   the write would be held for the cpu write, and the ppu would get it after that.  but this is really a guess and i have nothing to  show that it is correct.<br /><br />matt<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=170">mattmatteh</a> — Sat Sep 23, 2006 8:45 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Zepper]]></name></author>
<updated>2006-09-23T16:29:10-07:00</updated>
<published>2006-09-23T16:29:10-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=2093&amp;p=17950#p17950</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=2093&amp;p=17950#p17950"/>
<title type="html"><![CDATA[Top and bottom halves of 6502 clock cycle]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=2093&amp;p=17950#p17950"><![CDATA[
OK, I was upset about this last test ROM. -_-;; Plus, I'm sorry for possible English faults below...<br /><br />Basically, <strong>all</strong> previous test ROMs have passed. I had made huge fixes into my pAPU/CPU core, plus a huge debug session in order to understand why a specific test ROM was failing. Each cycle or CPU event was matching, so I was happy.<br /><br />What my CPU instruction core does is something very "simple": the PPU runs 3 cycles for each memory access. What I meant was to "break" these 3 PPU cycles into single cycles, after the "new" info about low/high edges of a clock... -_-;; <br /><br />I couldn't debug this new test ROM yet due to the lack of motivation because of complexity level reached, so I'm not making any updates until I get proper help some day.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=39">Zepper</a> — Sat Sep 23, 2006 4:29 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2006-09-21T11:05:49-07:00</updated>
<published>2006-09-21T11:05:49-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=2093&amp;p=17847#p17847</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=2093&amp;p=17847#p17847"/>
<title type="html"><![CDATA[Top and bottom halves of 6502 clock cycle]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=2093&amp;p=17847#p17847"><![CDATA[
I don't think you need any finger granularity than one CPU cycle for 6502 emulation. Each 6502 cycle always accesses memory, either a read or write. I'd be very surprised if this access were done at a different time each cycle; I expect that they always occur at the same relative time. One difference I would not be surprised to find is that writes effectively occur earlier in a cycle than a read, since the written data appears immediately while the data read isn't latched until later, to give time for the device to respond. A device which responded quickly to writes and which did not latch data being read (i.e. during a read the data lines could change if the data being read changed) could cause such a situation of differing write/read times.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Thu Sep 21, 2006 11:05 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Zepper]]></name></author>
<updated>2006-09-21T10:25:43-07:00</updated>
<published>2006-09-21T10:25:43-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=2093&amp;p=17843#p17843</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=2093&amp;p=17843#p17843"/>
<title type="html"><![CDATA[Top and bottom halves of 6502 clock cycle]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=2093&amp;p=17843#p17843"><![CDATA[
In other words, I cannot admit 1 CPU cycle = 3 PPU cycles, but 1 CPU cycle has 2 phases, of rising/falling, and 3 PPU accesses, like: <br /><br />cpuclock -&gt; ppu-&gt; cpuclock_H -&gt; ppu-&gt; cpuclock_L -&gt; ppu<br /><br />Well, instead of a function that "renders" 3 ppu pixels, I need to rebuilt it in order to allow a single PPU cycle/access.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=39">Zepper</a> — Thu Sep 21, 2006 10:25 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2006-09-21T01:18:26-07:00</updated>
<published>2006-09-21T01:18:26-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=2093&amp;p=17835#p17835</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=2093&amp;p=17835#p17835"/>
<title type="html"><![CDATA[Top and bottom halves of 6502 clock cycle]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=2093&amp;p=17835#p17835"><![CDATA[
My CPU timing test has large margins for timing, since it uses NMI to time thousands of executions of the instruction, not just one. It further allows an error of up to +/- 6 iterations of the loop as compared to the reference values. For instructions which differ in execution by one clock, the iteration count in differs by at least by 200.<br /><br />In other timing tests which do timing down to 1 PPU clock accuracy, they first synchronize the CPU clock with the PPU clock such that the error is at most 3/4 PPU clock. The PPU clock is master / 4, the CPU master / 12, so there are four different possible fixed synchronizations at power-up, depending on the random state of the dividers (P = PPU, C = CPU, one character = one ~21.5 MHz master clock):<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">P---P---P---P---P---P---<br />C-----------C-----------<br />-C-----------C----------<br />--C-----------C---------<br />---C-----------C--------</div><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Thu Sep 21, 2006 1:18 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2006-09-20T15:41:55-07:00</updated>
<published>2006-09-20T15:41:55-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=2093&amp;p=17820#p17820</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=2093&amp;p=17820#p17820"/>
<title type="html"><![CDATA[Top and bottom halves of 6502 clock cycle]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=2093&amp;p=17820#p17820"><![CDATA[
<div class="quotetitle">blargg wrote:</div><div class="quotecontent"><br />I still don't see how this would help explain Fx3's problem with instruction timing.<br /></div><br />Any test ROM that measures the timing of an instruction by comparing it with the length of a PPU frame will have different behavior if the NMI comes a half-cycle early or late, especially if that triggers the bug where a PPUSTATUS read cancels NMI.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Wed Sep 20, 2006 3:41 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Zepper]]></name></author>
<updated>2006-09-20T14:53:03-07:00</updated>
<published>2006-09-20T14:53:03-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=2093&amp;p=17818#p17818</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=2093&amp;p=17818#p17818"/>
<title type="html"><![CDATA[Top and bottom halves of 6502 clock cycle]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=2093&amp;p=17818#p17818"><![CDATA[
<div class="quotetitle">blargg wrote:</div><div class="quotecontent"><br />I still don't see how this would help explain Fx3's problem with instruction timing.<br /></div><br /><br />Just forgive me. ^_^;; Ah yes, thanks for the test ROMs, it's awesome, no joke.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=39">Zepper</a> — Wed Sep 20, 2006 2:53 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2006-09-19T23:31:15-07:00</updated>
<published>2006-09-19T23:31:15-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=2093&amp;p=17782#p17782</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=2093&amp;p=17782#p17782"/>
<title type="html"><![CDATA[Top and bottom halves of 6502 clock cycle]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=2093&amp;p=17782#p17782"><![CDATA[
I thought the 6502 also used a two-phase clock like this, where actions occur on the rising edge of each of the phases:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">  ___     ___     ___   <br />_|   |___|   |___|   |___<br />    ___     ___     ___   <br />___|   |___|   |___|   |___</div><br />But perhaps this is just another way of describing a single clock at double the rate with actions occurring on the rising and falling edges.<br /><br />I still don't see how this would help explain Fx3's problem with instruction timing.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Tue Sep 19, 2006 11:31 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2006-09-19T19:34:44-07:00</updated>
<published>2006-09-19T19:34:44-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=2093&amp;p=17774#p17774</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=2093&amp;p=17774#p17774"/>
<title type="html"><![CDATA[Top and bottom halves of 6502 clock cycle]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=2093&amp;p=17774#p17774"><![CDATA[
<div class="quotetitle">Fx3 wrote:</div><div class="quotecontent"><br />By the way, as far as I know, there's no public docs that cover this rising/falling thing<br /></div><br />The timing diagrams of the 6502 data sheet should work nicely.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Tue Sep 19, 2006 7:34 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Zepper]]></name></author>
<updated>2006-09-19T19:05:19-07:00</updated>
<published>2006-09-19T19:05:19-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=2093&amp;p=17773#p17773</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=2093&amp;p=17773#p17773"/>
<title type="html"><![CDATA[Top and bottom halves of 6502 clock cycle]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=2093&amp;p=17773#p17773"><![CDATA[
<div class="quotetitle">tepples wrote:</div><div class="quotecontent"><br />LDA $00 has six edges, more or less like the following: <ul><li>a rise and fall for reading opcode LDA, </li><li>a rise and fall for reading address $00, </li><li>a rise while address $0000 is put on the address bus, and </li><li>a fall while the value is read from the data bus. </li></ul> Each rise or fall may affect other hardware connected to the CPU bus, such as the PPU registers.<br /></div><br /><br />Hmm... interesting. By the way, as far as I know, there's no public docs that cover this rising/falling thing, but only "numeric" CPU cycles as <strong>units</strong>. Plus, it's picky to emulate something like 1 cycle being broken into 2 steps (rise/fall). Anyway, it makes sense as I could detect unexpected errors in most of other blargg's tests.<br /><br />The LDA $xx  takes 1 cycle to fetch the opcode, 1 cycle to fetch the immediate byte and 1 cycle to read from RAM[$xx]. By the way, each cycle takes 2 'steps'. This way, I must create a SINGLE PPU access function to correct the problem. By default, mine takes 3 PPU cycles per CPU cycle, and it seems incorrect... -_-;; That's it. Thanks for the help.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=39">Zepper</a> — Tue Sep 19, 2006 7:05 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2006-09-19T18:03:03-07:00</updated>
<published>2006-09-19T18:03:03-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=2093&amp;p=17771#p17771</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=2093&amp;p=17771#p17771"/>
<title type="html"><![CDATA[Top and bottom halves of 6502 clock cycle]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=2093&amp;p=17771#p17771"><![CDATA[
LDA $00 has six edges, more or less like the following: <ul><li>a rise and fall for reading opcode LDA, </li><li>a rise and fall for reading address $00, </li><li>a rise while address $0000 is put on the address bus, and </li><li>a fall while the value is read from the data bus. </li></ul> Each rise or fall may affect other hardware connected to the CPU bus, such as the PPU registers.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Tue Sep 19, 2006 6:03 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Zepper]]></name></author>
<updated>2006-09-18T17:48:48-07:00</updated>
<published>2006-09-18T17:48:48-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=2093&amp;p=17714#p17714</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=2093&amp;p=17714#p17714"/>
<title type="html"><![CDATA[Top and bottom halves of 6502 clock cycle]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=2093&amp;p=17714#p17714"><![CDATA[
Awesome. ^_^;;<br />By the way, in terms of <strong>emulation of a certain instruction</strong> (like LDA $00), how a rising/falling edge would be detected?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=39">Zepper</a> — Mon Sep 18, 2006 5:48 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2006-09-18T17:02:36-07:00</updated>
<published>2006-09-18T17:02:36-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=2093&amp;p=17713#p17713</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=2093&amp;p=17713#p17713"/>
<title type="html"><![CDATA[Top and bottom halves of 6502 clock cycle]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=2093&amp;p=17713#p17713"><![CDATA[
The CPU clock signal is roughly a square wave:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent"> high clock state                   rising edge<br />      vvvvv                              v<br />      _____       _____       _____       _____<br />     |     |     |     |     |     |     |     |<br />_____|     |_____|     |_____|     |_____|     |_ ...<br /><br />            ^^^^^                  ^<br />       low clock state        falling edge<br /><br /></div><br />Each cycle consists of a rising edge, a high state, a falling edge, and a low state. Different things can be defined to happen on the rising or falling edge of the clock signal. For example, when performing a memory read, a CPU may put an address on the address bus on a rising edge and then read the data bus on the next falling edge.<br /><br />Now if you have two processors running at different speeds:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">CPU<br />      _____       _____       _____       _____<br />     |     |     |     |     |     |     |     |<br />_____|     |_____|     |_____|     |_____|     |_ ...<br /><br />PPU<br />  _   _   _   _   _   _   _   _   _   _   _   _ <br /> | | | | | | | | | | | | | | | | | | | | | | | |<br />_| |_| |_| |_| |_| |_| |_| |_| |_| |_| |_| |_| |_ ...<br /></div><br />Then the rising and falling edges of a single CPU cycle may occur a PPU cycle or two apart, which may cause a read or write to appear to be delayed by one or two PPU cycles (a fraction of a CPU cycle).<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Mon Sep 18, 2006 5:02 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Zepper]]></name></author>
<updated>2006-09-18T16:51:22-07:00</updated>
<published>2006-09-18T16:51:22-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=2093&amp;p=17712#p17712</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=2093&amp;p=17712#p17712"/>
<title type="html"><![CDATA[Top and bottom halves of 6502 clock cycle]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=2093&amp;p=17712#p17712"><![CDATA[
<strong>No++.</strong><br />I need an example. I don't understand the meaning of rising/falling edge of CPU cycles.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=39">Zepper</a> — Mon Sep 18, 2006 4:51 pm</p><hr />
]]></content>
</entry>
</feed>