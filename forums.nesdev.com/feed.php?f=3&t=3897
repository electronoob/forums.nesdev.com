<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=3&amp;t=3897" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2010-07-15T19:24:55-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=3&amp;t=3897</id>
<entry>
<author><name><![CDATA[Disch]]></name></author>
<updated>2008-02-17T19:55:44-07:00</updated>
<published>2008-02-17T19:55:44-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3897&amp;p=31039#p31039</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3897&amp;p=31039#p31039"/>
<title type="html"><![CDATA[frame IRQ / APU discussion]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3897&amp;p=31039#p31039"><![CDATA[
<div class="quotetitle">Fx3 wrote:</div><div class="quotecontent"><br />- Actually, you look confused. :) Anyway, the thing is quite simple: for each CPU clock, the PPU clocks 3 times; plus, for each CPU clock, the APU clocks.<br /><br />- Ok, I believe the method used by *ahem*Nintendulator requires fine tuning. <em>The IRQ/NMI requests are verified at every CPU read/write, no matter what's being read/written</em>. My emu uses the same "idea" as reference.<br /></div><br /><br />Well your approach doesn't matter as long as you have the desired resulting behavior.  :P<br /><br />Whether or not you examine the NMI every cycle really doesn't matter as long as you perform the NMI at the right time.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />- Here, when I mentioned "the immediate byte of a LDA", I mean "the byte that follows A9", or 01h for a "LDA #$01", right?<br /></div><br /><br />That's what I thought you meant -- just wasn't sure.<br /><br />So yeah... it's like I said.  If the NMI/IRQ is occuring on that cycle, it does <em>NOT</em> happen after the LDA -- instead it happens after the instruction <em>after</em> the LDA (after the CLC).<br /><br />Anyway -- I provided my tracelogs because they're what <em>should</em> be happening.  You can compare them to your emu's tracelogs to find out where you're going wrong.  Randomly guessing and moving around the NMI time likely won't solve your problem.<br /><br />Basically I think your problem is this:<br /><br />- you have an IRQ tripping on the 4th test (this is what it sounds like to me, anyway)<br />- IRQs should not trip at all until the 6th test (see my tracelog)<br />- on the first 5 tests, the NMI happens before IRQ, so IRQs get disabled before one occurs<br /><br />If the tracelog is too cryptic... here's it in plain English:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">test 1:    NMI after SEC<br />           no IRQ<br /><br />test 2,3:  NMI after LDA #1<br />           no IRQ<br /><br />test 4,5:  NMI after CLC<br />           no IRQ<br /><br />test 6,7:  IRQ after CLC, but it's interrupted by NMI<br /></div><br /><br /><br />EDIT:<br /><br />I just thought I'd mention again that <em>I don't think this is an NMI problem</em>.  Judging from your emu passing the first few tests, I'd wager your NMI timing is correct.  It's your <em>IRQ</em> timing that needs work.  IRQs are occuring too early, and the NMI is interrupting them so it <em>looks</em> like the NMI is occuring early when it really isn't.<br /><br />I'd bet you just need to push your IRQ back 1 CPU cycle and you'd pass everything.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=33">Disch</a> — Sun Feb 17, 2008 7:55 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Zepper]]></name></author>
<updated>2008-02-17T07:28:18-07:00</updated>
<published>2008-02-17T07:28:18-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3897&amp;p=31006#p31006</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3897&amp;p=31006#p31006"/>
<title type="html"><![CDATA[frame IRQ / APU discussion]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3897&amp;p=31006#p31006"><![CDATA[
<strong>EDIT:</strong> I used "7.nmi_timing.nes" and still error 7. With my new VBlank flag code (edge case), the NMI must trigger right when the instruction finishes. Next, I got error 8, it enables NMI (2000h write) when the VBlank flag is already set. So, I added a check in the 2000h write and the test has passed, including a private nmi testing sent by blargg. <strong>However</strong>, the nmi_during_irq.nes still fails. The last possibility is to check the APU frame IRQ timing, even if passes in the private test rom. <img src="http://forums.nesdev.com/images/smilies/icon_sad.gif" alt=":(" title="Sad" />:(:(<br />==========================<br /><br />- Actually, you look confused. <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" /> Anyway, the thing is quite simple: for each CPU clock, the PPU clocks 3 times; plus, for each CPU clock, the APU clocks.<br /><br />- Ok, I believe the method used by *ahem*Nintendulator requires fine tuning. <em>The IRQ/NMI requests are verified at every CPU read/write, no matter what's being read/written</em>. My emu uses the same "idea" as reference.<br /><br />- Here, when I mentioned "the immediate byte of a LDA", I mean "the byte that follows A9", or 01h for a "LDA #$01", right? The instruction (A9h) has an <em>immediate byte</em> addressing mode. So, I'm having problems right here. I'm sure you know how *ahem*Nintendulator does, so there's no need to explain. Nestopia passes through all the test, but its source code looks cryptic.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=39">Zepper</a> — Sun Feb 17, 2008 7:28 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Disch]]></name></author>
<updated>2008-02-16T22:26:52-07:00</updated>
<published>2008-02-16T22:26:52-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3897&amp;p=30995#p30995</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3897&amp;p=30995#p30995"/>
<title type="html"><![CDATA[frame IRQ / APU discussion]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3897&amp;p=30995#p30995"><![CDATA[
<div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />a) My emu gets 23 00, 21 00, 21 00, 20 00, but the next is 21 00 instead of 20 00 (the rest is irrelevant).<br /></div><br /><br />looks like the NMI (or IRQ) is occuring early.  From the looks of that, it's occuring before the CLC when it should be occuring after.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />- There's a frame IRQ being requested during the immediate byte of a LDA. It is triggered when LDA ends.<br /></div><br /><br />The immediate byte of LDA?  You mean the last cycle?<br /><br />If it happens during the last cycle, you need to push it back another instruction:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">LDA #1    &#40;cyc 0&#41;  &lt;--- NMI/IRQ here happens before CLC<br />          &#40;cyc 1&#41;  &lt;--- NMI/IRQ here happens *AFTER* CLC<br />CLC       &#40;cyc 0&#41;  &lt;--- NMI/IRQ here happens after CLC<br />          &#40;cyc 1&#41;  &lt;--- NMI/IRQ here happens after next instruction<br /></div><br /><br />Remember the CPU has to see the interrupt as pending <em>before</em> it starts the last cycle of an instruction.  So you could say that NMI/IRQs get pushed back 1 CPU cycle.<br /><br /><br />I made a tracelog of the behavior I get in my emu (which passes).  You can ignore most of the numbers:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">E4E8:B8   CLV                        00 00 00 &#91;...Z.&#93;  FA --   0, -7 -- &lt;0060,0862&gt;<br />E4E9:38   SEC                        00 00 00 &#91;...Z.&#93;  FA --   0, -1 -- &lt;0060,0862&gt;<br />*** NMI ***  &#40;1st&#41;<br />E4AD:85   STA  $11        &#91;0011=00&#93;  00 00 00 &#91;..IZC&#93;  F7 --   0, 26 -- &lt;0060,0862&gt;<br /><br />E4E8:B8   CLV                        00 00 00 &#91;...Z.&#93;  FA --   0,-10 -- &lt;0080,0000&gt;<br />E4E9:38   SEC                        00 00 00 &#91;...Z.&#93;  FA --   0, -4 -- &lt;0080,0000&gt;<br />E4EA:A9   LDA  #$01                  00 00 00 &#91;...ZC&#93;  FA --   0,  2 -- &lt;0080,0000&gt;<br />*** NMI ***  &#40;2nd&#41;<br />E4AD:85   STA  $11        &#91;0011=00&#93;  01 00 00 &#91;..I.C&#93;  F7 --   0, 29 -- &lt;0080,0000&gt;<br /><br />E4E8:B8   CLV                        00 00 00 &#91;...Z.&#93;  FA --   0,-13 -- &lt;00A0,0000&gt;<br />E4E9:38   SEC                        00 00 00 &#91;...Z.&#93;  FA --   0, -7 -- &lt;00A0,0000&gt;<br />E4EA:A9   LDA  #$01                  00 00 00 &#91;...ZC&#93;  FA --   0, -1 -- &lt;00A0,0000&gt;<br />*** NMI ***  &#40;3rd&#41;<br />E4AD:85   STA  $11        &#91;0011=00&#93;  01 00 00 &#91;..I.C&#93;  F7 --   0, 26 -- &lt;00A0,0000&gt;<br /><br />E4E8:B8   CLV                        00 00 00 &#91;...Z.&#93;  FA --   0,-16 -- &lt;00C0,0000&gt;<br />E4E9:38   SEC                        00 00 00 &#91;...Z.&#93;  FA --   0,-10 -- &lt;00C0,0000&gt;<br />E4EA:A9   LDA  #$01                  00 00 00 &#91;...ZC&#93;  FA --   0, -4 -- &lt;00C0,0000&gt;<br />E4EC:18   CLC                        01 00 00 &#91;....C&#93;  FA --   0,  2 -- &lt;00C0,0000&gt;<br />*** NMI ***  &#40;4th&#41;<br />E4AD:85   STA  $11        &#91;0011=00&#93;  01 00 00 &#91;..I..&#93;  F7 --   0, 29 -- &lt;00C0,0000&gt;<br /><br />E4E8:B8   CLV                        00 00 00 &#91;...Z.&#93;  FA --   0,-19 -- &lt;00E0,0000&gt;<br />E4E9:38   SEC                        00 00 00 &#91;...Z.&#93;  FA --   0,-13 -- &lt;00E0,0000&gt;<br />E4EA:A9   LDA  #$01                  00 00 00 &#91;...ZC&#93;  FA --   0, -7 -- &lt;00E0,0000&gt;<br />E4EC:18   CLC                        01 00 00 &#91;....C&#93;  FA --   0, -1 -- &lt;00E0,0000&gt;<br />*** NMI ***  &#40;5th&#41;<br />E4AD:85   STA  $11        &#91;0011=00&#93;  01 00 00 &#91;..I..&#93;  F7 --   0, 26 -- &lt;00E0,0000&gt;<br /><br />E4E8:B8   CLV                        00 00 00 &#91;...Z.&#93;  FA --   0,-22 -- &lt;0100,0000&gt;<br />E4E9:38   SEC                        00 00 00 &#91;...Z.&#93;  FA --   0,-16 -- &lt;0100,0000&gt;<br />E4EA:A9   LDA  #$01                  00 00 00 &#91;...ZC&#93;  FA --   0,-10 -- &lt;0100,0000&gt;<br />E4EC:18   CLC                        01 00 00 &#91;....C&#93;  FA --   0, -4 -- &lt;0100,0000&gt;<br />*** IRQ ***  &#40;6th&#41; -- interrupted by NMI<br />E4AD:85   STA  $11        &#91;0011=00&#93;  01 00 00 &#91;..I..&#93;  F7 --   0, 23 -- &lt;0100,0000&gt;<br /><br />E4E8:B8   CLV                        00 00 00 &#91;...Z.&#93;  FA --   0,-25 -- &lt;0120,0000&gt;<br />E4E9:38   SEC                        00 00 00 &#91;...Z.&#93;  FA --   0,-19 -- &lt;0120,0000&gt;<br />E4EA:A9   LDA  #$01                  00 00 00 &#91;...ZC&#93;  FA --   0,-13 -- &lt;0120,0000&gt;<br />E4EC:18   CLC                        01 00 00 &#91;....C&#93;  FA --   0, -7 -- &lt;0120,0000&gt;<br />*** IRQ ***  &#40;7th&#41; -- interrupted by NMI<br />E4AD:85   STA  $11        &#91;0011=00&#93;  01 00 00 &#91;..I..&#93;  F7 --   0, 20 -- &lt;0120,0000&gt;<br /></div><br /><br />Notice that IRQ doesn't happen <em>at all</em> until the 6th test.  Before that, NMI happens first.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=33">Disch</a> — Sat Feb 16, 2008 10:26 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Zepper]]></name></author>
<updated>2008-02-16T20:02:40-07:00</updated>
<published>2008-02-16T20:02:40-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3897&amp;p=30994#p30994</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3897&amp;p=30994#p30994"/>
<title type="html"><![CDATA[frame IRQ / APU discussion]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3897&amp;p=30994#p30994"><![CDATA[
- OK, I traced it but cannot think about a correct solution...<br /><br />1. PPU timing is correct, VBlank rising/down is okay.<br />2. NMI timing looks correct, but it isn't the problem.<br />3. IRQ timing looks correct when I run the test rom, no errors, but it's an IRQ that's causing errors.<br /><br />- Now, the trace result of "nmi_during_irq.nes" test ROM:<br /><br />a) My emu gets 23 00, 21 00, 21 00, 20 00, but the next is 21 00 instead of 20 00 (the rest is irrelevant).<br />- There's a frame IRQ being requested during the immediate byte of a LDA. It is triggered when LDA ends.<br />- Hack: do not verify the IRQ flag during the immediate byte fetching.<br /><br />b) <strong>With this hack</strong>, the two last lines are 20 00 and 25 00, instead of 25 00 and 25 00.<br />- During the 7 cycles sequence for IRQ, a NMI is being requested during the 5th cycle.<br />- Hack: verify the NMI flag during the cycles 6 and 7.<br /><br />- I'm stuck.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=39">Zepper</a> — Sat Feb 16, 2008 8:02 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Disch]]></name></author>
<updated>2008-02-13T08:49:21-07:00</updated>
<published>2008-02-13T08:49:21-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3897&amp;p=30846#p30846</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3897&amp;p=30846#p30846"/>
<title type="html"><![CDATA[frame IRQ / APU discussion]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3897&amp;p=30846#p30846"><![CDATA[
I'm going to back up and try to address your original problem.  If blargg's PPU test ROMs all pass, then the problem isn't going to be easily identified by using them.  Since the problem you're having is with NMI during IRQ, let's look at what that ROM is supposed to be doing.<br /><br /><br />From the source:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">   clv<br />   sec<br />   ; Z and C set, others clear<br />   <br />; NMI occurs here first,<br />   lda #1          ; clear Z flag<br />; then here for two clocks,<br />   clc             ; clear C flag<br />; then here.<br />   <br />; IRQ always occurs here.<br />   nop<br />   <br />   ; Read interrupt flags<br />   ldx nmi_flag<br />   ldy irq_flag<br /></div><br /><br />You get an error on the 4th sequence of numbers, which is when the NMI is supposed to happen *after* that CLC... but in your emu it's happening before it.  Here's a diagram (I hope these diagrams are helpful, heh):<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">CLV       &#40;cyc 0&#41;<br />          &#40;cyc 1&#41;<br /><br />SEC       &#40;cyc 0&#41;  &lt;---  1st NMI<br />          &#40;cyc 1&#41;  &lt;---  2nd NMI<br />     &#91;NMI 1 occurs here&#93;<br />LDA #1    &#40;cyc 0&#41;  &lt;---  3rd NMI<br />          &#40;cyc 1&#41;  &lt;---  4th NMI &#40;your problem&#41;<br />     &#91;NMI 2,3 occur here&#93;<br />CLC       &#40;cyc 0&#41;<br />          &#40;cyc 1&#41;<br />     &#91;NMI 4 occurs here&#93;<br /></div><br /><br />For whatever reason, the NMI is occuring early in your emulator.  If you can make a tracelog to find out exactly when those NMIs are occuring, that might give you some clue as to what's going on.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=33">Disch</a> — Wed Feb 13, 2008 8:49 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Zepper]]></name></author>
<updated>2008-02-13T07:13:22-07:00</updated>
<published>2008-02-13T07:13:22-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3897&amp;p=30840#p30840</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3897&amp;p=30840#p30840"/>
<title type="html"><![CDATA[Re: VBlank rising time?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3897&amp;p=30840#p30840"><![CDATA[
<div class="quotetitle">Disch wrote:</div><div class="quotecontent"><br />Nintendulator emulates things on a lower level.  It may check for pending NMI every CPU cycle because the NES does -- however it will not actually make the NMI happen until the CPU is between instructions -- so the only cycle where a pending NMI really matters is the 2nd-to-last cycle of an instruction.<br /></div><br /><br />- What a coincidence. RockNES does that too... ^_^;; Hehehe<br />- I will explain it a bit:<br /><br />1. verify the flags (nmi_trigger = cpu_nmi_request).<br />2. fetch a byte<br />- 2a: ppu runs for 3 cycles<br />- 2b: byte is read<br />3. Instruction is executed.<br /><br />- OK, if a NMI occurs during 2a (cpu_nmi_request = 1), it will not be triggered after that instruction. The nmi_trigger flag is verified right when an instruction is finished; if <em>true</em>, then a NMI is triggered.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=39">Zepper</a> — Wed Feb 13, 2008 7:13 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Disch]]></name></author>
<updated>2008-02-12T21:57:28-07:00</updated>
<published>2008-02-12T21:57:28-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3897&amp;p=30832#p30832</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3897&amp;p=30832#p30832"/>
<title type="html"><![CDATA[Re: VBlank rising time?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3897&amp;p=30832#p30832"><![CDATA[
<div class="quotetitle">Fx3 wrote:</div><div class="quotecontent"><br />- Hmm... Was this tested in the NES?<br /></div><br /><br />Yes.  Blargg's PPU test ROMs verify its timing right down to the PPU cycle.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />- Nintendulator verifies if a NMI is pending at every CPU read/write, including fetching the instruction opcode/operands. I don't know if this is correct. You wrote about the last cycle, I'll give a try.<br /></div><br /><br />Nintendulator emulates things on a lower level.  It may check for pending NMI every CPU cycle because the NES does -- however it will not actually make the NMI happen until the CPU is between instructions -- so the only cycle where a pending NMI really matters is the 2nd-to-last cycle of an instruction.<br /><br />I suddenly remembered that CLI latency problem...  here, this thread:<br /><!-- m --><a class="postlink" href="http://nesdev.com/bbs/viewtopic.php?p=19655#19655">http://nesdev.com/bbs/viewtopi ... 9655#19655</a><!-- m --><br /><br />NMIs are exactly the same.  They have that exact same delay for the exact same reason.  To recreate a similar example diagram:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">LDA $6000   &#40;cyc 0&#41;<br />            &#40;cyc 1&#41;<br />            &#40;cyc 2&#41;<br />                   ---&gt;  is NMI pending?  If so... NMI  -+<br />            &#40;cyc 3&#41;                                      |<br />                   &lt;------------- here &lt;-----------------+<br />STA $6001   &#40;cyc 0&#41;<br />            &#40;cyc 1&#41;<br />            &#40;cyc 2&#41;<br />                   ---&gt;  is NMI pending?  If so... NMI  -+<br />            &#40;cyc 3&#41;                                      |<br />                   &lt;------------- here &lt;-----------------+<br /></div><br /><br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />- Maybe. Well, I speak Portuguese. I'm sorry for my bad writting.<br />- I don't wish to drift the topic but I'm inside the NES emulation since 1998. Yes, I already was a pathetic newbie... but <strong>still</strong> an "all your base" man around? :(<br /></div><br /><br />Your English isn't that bad.  In fact... as far as general conversation goes, it's actually very good.  I can easily get the jist of what you're saying, but when it comes down to understanding the finer details, sometimes there are just little things here and there that are slightly off which can make it hard.  And when giving technical explanations of emulator workings and stuff like that, details are everything.<br /><br />Don't be hard on yourself.  I have a lot of respect for bilingual people.  I know how hard it is to learn another language (especially one as crazy as English).  I am actually very impressed with how well you speak  =)<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=33">Disch</a> — Tue Feb 12, 2008 9:57 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Zepper]]></name></author>
<updated>2008-02-12T21:20:47-07:00</updated>
<published>2008-02-12T21:20:47-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3897&amp;p=30831#p30831</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3897&amp;p=30831#p30831"/>
<title type="html"><![CDATA[Re: VBlank rising time?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3897&amp;p=30831#p30831"><![CDATA[
<div class="quotetitle">Disch wrote:</div><div class="quotecontent"><br />cycle 0 of the very first scanline of VBlank<br /></div><br />- Hmm... Was this tested in the NES?<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />I'm not sure if this is your problem... but it takes a full cycle for the CPU to see that there's an NMI, and the perform it... so if the NMI happens on the last cycle of an instruction... the NMI won't occur until <em>after the next</em> instruction.<br /></div><br /><br />- Nintendulator verifies if a NMI is pending at every CPU read/write, including fetching the instruction opcode/operands. I don't know if this is correct. You wrote about the last cycle, I'll give a try.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />I think it's largely a language problem  =(<br /></div><br /><br />- Heh, so you are c)...<br />- Maybe. Well, I speak Portuguese. I'm sorry for my bad writting.<br />- I don't wish to drift the topic but I'm inside the NES emulation since 1998. Yes, I already was a pathetic newbie... but <strong>still</strong> an "all your base" man around? <img src="http://forums.nesdev.com/images/smilies/icon_sad.gif" alt=":(" title="Sad" /><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=39">Zepper</a> — Tue Feb 12, 2008 9:20 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Disch]]></name></author>
<updated>2008-02-12T19:59:34-07:00</updated>
<published>2008-02-12T19:59:34-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3897&amp;p=30828#p30828</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3897&amp;p=30828#p30828"/>
<title type="html"><![CDATA[Re: VBlank rising time?]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3897&amp;p=30828#p30828"><![CDATA[
<div class="quotetitle">Fx3 wrote:</div><div class="quotecontent"><br />- Short question: What PPU cycle does the VBlank flag rise (NTSC NES)?<br /></div><br /><br />cycle 0 of the very first scanline of VBlank<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />- My problem: during the 4th sequence, an NMI is requested during a LDA #$imm instruction. Depending of the time this flag is checked, a test ROM passes (nmi_during_irq) and another fails. It's happening during a LDX #$imm too in another test ROM (nmi_timing).<br /></div><br /><br />I'm not sure if this is your problem... but it takes a full cycle for the CPU to see that there's an NMI, and the perform it... so if the NMI happens on the last cycle of an instruction... the NMI won't occur until <em>after the next</em> instruction.  Example:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">if you have the following:<br /><br />LDA $6000<br />STA $6001<br /><br /><br />you have 8 cycles:<br /><br />cyc - rd/wr<br />0     &#40;LDA opcode&#41;        - NMI here happens before STA<br />1     &#40;low addr:  $00&#41;    - NMI here happens before STA<br />2     &#40;high addr:  $60&#41;   - NMI here happens before STA<br />3     &#40;$6000&#41;             - NMI here happens *AFTER* STA<br />                                 &lt;---  NMI here if happened before cyc 3<br />4     &#40;STA opcode&#41;        - NMI here happens after STA<br />5     &#40;low addr: $01&#41;     - NMI here happens after STA<br />6     &#40;high addr: $60&#41;    - NMI here happens after STA<br />7     &#40;$6001&#41;             - NMI here happens after *next instruction*<br />                                 &lt;---  NMI here if happened before cyc 7<br /></div><br /><br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />- I'd like some help. Perhaps it's me, but the "emulation support" is almost null here... why?<br /></div><br /><br />I think it's largely a language problem  =(<br /><br />Sometimes I have a hard time understanding what you're asking because of the language barrier.  I realize you're not a native English speaker, so I try my best to understand your questions, but sometimes it can be hard to.  I'm guessing others on the board are the same way  =(<br /><br />Sorry<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=33">Disch</a> — Tue Feb 12, 2008 7:59 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Zepper]]></name></author>
<updated>2010-07-15T19:24:55-07:00</updated>
<published>2008-02-12T18:44:48-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=3897&amp;p=30825#p30825</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=3897&amp;p=30825#p30825"/>
<title type="html"><![CDATA[frame IRQ / APU discussion]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=3897&amp;p=30825#p30825"><![CDATA[
- Short question: What PPU cycle does the VBlank flag rise (NTSC NES)?<br /><br />- Long question: I am doing an insane trace of CPU/PPU because all the previous test ROMs were OK, but the recent "NMI under IRQ/BRK" is giving me an early NMI triggering on its 4th sequence of numbers (21 00, should be 20 00). Anyway, I read an old topic regarding the exact time the CPU checks the NMI/IRQ flags (request). If an instruction is 4 bytes long, the flags should be checked during the 3rd/4th byte fetching, or during the last byte fetching. Nintendulator checks every time the CPU reads/writes, but it fails in most of those test ROMs. Nestopia passes, but it uses a cycle counter to define the time when a flag should be set/clear, as far as I understood it.<br /><br />- My problem: during the 4th sequence, an NMI is requested during a LDA #$imm instruction. Depending of the time this flag is checked, a test ROM passes (nmi_during_irq) and another fails. It's happening during a LDX #$imm too in another test ROM (nmi_timing).<br /><br />- I'd like some help.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=39">Zepper</a> — Tue Feb 12, 2008 6:44 pm</p><hr />
]]></content>
</entry>
</feed>