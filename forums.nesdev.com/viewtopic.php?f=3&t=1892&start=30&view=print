<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Some help with VBL..</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Some help with VBL..</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=3&amp;t=1892">http://forums.nesdev.com/viewtopic.php?f=3&amp;t=1892</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>3</strong> of <strong>3</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Thu Sep 21, 2006 1:07 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Sounds like it may be an off-by-one error, perhaps due to a &lt;/&gt; needing to be a &lt;=/&gt;=, or vice-versa. If everything passes when you add 5 PPU cycles, then your emulator may be working accurately and your other code simply giving this delay a different meaning (i.e. the number 5 has the meaning of "6 PPU clocks between NMI assertion and NMI occurring"). I kind of like tracking down things like this, so you could send me the source and I could take a look.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Muchaserres</b> [ Fri Sep 22, 2006 6:34 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Uhm.. I've been thinking about that, but everything seems to be OK. Here's the exact code I use in my CPU core,
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">while&#40; Nes-&gt;CPUCycles &lt; Nes-&gt;FRMCycles &#41;<br />&#123;<br />&nbsp; &nbsp;if&#40; Nes-&gt;CPUCycles &gt;= &#40; Nes-&gt;NextNMI + 30 &#41; &#41; // 2 * 15 CPU master cycles, 6 * 5 PPU master cycles<br />&nbsp; &nbsp;&#123;<br />&nbsp; &nbsp;&nbsp; &nbsp;Nes-&gt;NextNMI = 0x7FFFFFFF;<br />&nbsp; &nbsp;&nbsp; &nbsp;if&#40; Nes-&gt;Ppu-&gt;Regs&#91; 0 &#93; &amp; 0x80 &#41; &#123; _NMI&#40;&#41;; &#125;<br />&nbsp; &nbsp;&nbsp; &nbsp;if&#40; Nes-&gt;CPUCycles &gt;= Nes-&gt;FRMCycles &#41; break;<br />&nbsp; &nbsp;&#125;<br />&nbsp; &nbsp;opcode = READMEM&#40; PC++, 0 &#41;;<br />&nbsp; &nbsp;switch&#40; opcode &#41;<br />&nbsp; &nbsp;&#123;<br />&nbsp; &nbsp;&nbsp; &nbsp;case 0x00: &#123; BRK&#40;&#41;; break; &#125;<br />&nbsp; &nbsp;&nbsp; &nbsp;// &#40;...&#41;<br />&nbsp; &nbsp;&#125;<br />&nbsp; &nbsp;ADD_CYCLES&#40; cycleTable&#91; opcode &#93; &#41;;<br />&#125;</div><br /><br />while the time for the NMI is set like this,<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">NextNMI = &#40; 1 * 341 * 5 &#41;; // Rest scanline first, then 20 VBL scanlines</div>
<br />
<br />As I said in my previous post, using a 25 instead of the actual 30 makes everything work fine. The same happens setting "NextNMI" to 340 PPU cycles instead of the actual 341. When is the exact time at which /NMI is triggered? I mean, I actually do that at the end of PPU cycle 341 in the rest scanline. I've debugged the process step by step and everything looks right to me. If there's no obvious error in the code above, my next try will be an even deeper CPU cycle-per-cycle revision, but I doubt I'll find anything as my emu actually passes your last CPU timing test.
<br />
<br />On your debug offer, thank you very much! Just let me try a few more things first. <img src="./images/smilies/icon_wink.gif" alt=";)" title="Wink" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Muchaserres</b> [ Sat Sep 23, 2006 6:39 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Meh.. I cannot come with a clean implementation for tests #6 and #7. I'm putting my emu apart. I'm completely tired, as it's been about two weeks of absolutely 0 progress.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Muchaserres</b> [ Sun Sep 24, 2006 2:39 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Today I felt inspired, so I finally came to a clean implementation for those tests. Now my emu's passing all PPU/CPU tests! There's only one issue I still need to investigate: the reason why I need a 25 instead of 30.
<br />
<br />Just one question, to close the topic: when enabling NMI's (through a write to 0x2000) inside VBL, is it necessary for the NMI flag to be disabled? I mean, what would happen if NMI's were enabled (although the flag already being set) during VBL?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Mon Sep 25, 2006 5:06 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I don't follow your question. What do you mean by disabling the NMI? $2002 bit 7 is the only control you have. The CPU registers an NMI request when the /NMI line transitions from high to low (edge sensitive). Once this occurs, the NMI will occur. If you write $00 then $80 to $2000 during blanking, you'll get another NMI since this will cause the /NMI line to go high then low again.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Muchaserres</b> [ Mon Sep 25, 2006 7:04 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />That's what I was looking for.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>raidtab</b> [ Thu Oct 26, 2006 4:44 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I've got the same problem as the OP, and i've been trying to implement the "mini-cycles" idea into my processor code. I've had a look at the 6502_cpu.txt document but i'm a little confused with parts of it.
<br />
<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Zero page indexed addressing<br /><br />     Read instructions (LDA, LDX, LDY, EOR, AND, ORA, ADC, SBC, CMP, BIT,<br />                        LAX, NOP)<br /><br />        #   address  R/W description<br />       --- --------- --- ------------------------------------------<br />        1     PC      R  fetch opcode, increment PC<br />        2     PC      R  fetch address, increment PC<br />        3   address   R  read from address, add index register to it<br />        4  address+I* R  read from effective address<br /><br />       Notes: I denotes either index register (X or Y).<br /><br />              * The high byte of the effective address is always zero,<br />                i.e. page boundary crossings are not handled.<br /></div><br /><br />Am i right in understanding that the CPU makes 2 reads in the one instruction, one to the address argument and another to the address argument + register? e.g.<br /><br />LDA $01, X    (where X = 10)<br /><br />will make a read to 01 (and presumably throw away the result), and then on the next cycle will read from 11?<br /><br />Also:<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">     Write instructions (STA, SHA)<br /><br />        #    address   R/W description<br />       --- ----------- --- ------------------------------------------<br />        1      PC       R  fetch opcode, increment PC<br />        2      PC       R  fetch pointer address, increment PC<br />        3    pointer    R  fetch effective address low<br />        4   pointer+1   R  fetch effective address high,<br />                           add Y to low byte of effective address<br />        5   address+Y*  R  read from effective address,<br />                           fix high byte of effective address<br />        6   address+Y   W  write to effective address<br /><br />       Notes: The effective address is always fetched from zero page,<br />              i.e. the zero page boundary crossing is not handled.<br /><br />              * The high byte of the effective address may be invalid<br />                at this time, i.e. it may be smaller by $100.<br /></div>
<br />
<br />So if the high byte of the effective address is invalid on cycle 5, should the read still happen regardless?
<br />
<br />Thanks

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Thu Oct 26, 2006 6:43 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Yes, reads from half-computed addresses still happen.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>3</strong> of <strong>3</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>