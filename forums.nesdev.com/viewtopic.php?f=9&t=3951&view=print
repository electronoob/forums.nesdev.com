<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - APU clarifications</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">APU clarifications</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=9&amp;t=3951">http://forums.nesdev.com/viewtopic.php?f=9&amp;t=3951</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>kyuusaku</b> [ Mon Mar 03, 2008 10:21 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>APU clarifications</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Is there any way to reset a channel's "timer" (the counter clocked at 1.79 MHz) or does it always keep counting until it's zero and reloads?
<br />
<br />The wiki says: "The timer's period is the 12-bit value (%HHHL.LLLLLLL0) formed by timer high and timer low, plus two."
<br />
<br />It is plus two or times two? The diagram looks shifted left once.
<br />
<br />-----------------------------------------------------------------
<br />
<br />This page <!-- m --><a class="postlink" href="http://nesdevwiki.org/index.php/APU_Length_Counter">http://nesdevwiki.org/index.php/APU_Length_Counter</a><!-- m --> regarding the length counter, shows 5 load bits and gives a 4 bit lookup table. Which bits are used to load the counter and what, if anything, does the other bit do?
<br />
<br />------------------------------------------------------------------
<br />
<br />If the triangle's timer period is formed by timer_high and timer_low, plus one, is the timer really 12-bit or 11-bit and will it overflow? Or is it that it outputs a clock on underflow instead of zero?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Mon Mar 03, 2008 11:01 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: APU clarifications</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">kyuusaku wrote:</div><div class="quotecontent">The wiki says: "The timer's period is the 12-bit value (%HHHL.LLLLLLL0) formed by timer high and timer low, plus two."<br /><br />It is plus two or times two? The diagram looks shifted left once.</div><br />It's both: times two and then plus two, or plus one and then times two.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">This page <!-- m --><a class="postlink" href="http://nesdevwiki.org/index.php/APU_Length_Counter">http://nesdevwiki.org/index.php/APU_Length_Counter</a><!-- m --> regarding the length counter, shows 5 load bits and gives a 4 bit lookup table. Which bits are used to load the counter and what, if anything, does the other bit do?</div>
<br />It's a 32-entry lookup table. The first four entries are 10, 254, 20,  2, and the last four entries are 16, 28, 32, 30.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>kyuusaku</b> [ Mon Mar 03, 2008 12:17 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: APU clarifications</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">It's both: times two and then plus two, or plus one and then times two.</div><br />Thanks, any idea about it overflowing?<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">It's a 32-entry lookup table. The first four entries are 10, 254, 20,  2, and the last four entries are 16, 28, 32, 30.</div>
<br />Ah, I missed the bottom row.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>dvdmth</b> [ Mon Mar 03, 2008 2:07 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: APU clarifications</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">kyuusaku wrote:</div><div class="quotecontent"><div class="quotetitle">tepples wrote:</div><div class="quotecontent">It's both: times two and then plus two, or plus one and then times two.</div><br />Thanks, any idea about it overflowing?</div>
<br />It doesn't "overflow."  If the timer is programmed with the value 4, the count goes something like 4-3-2-1-0-4-3-2-1-0-4-3-2-1-0 and so on, thus taking 5 steps per cycle.  On the square and noise channels, the period is doubled, though I'm not sure how.  Perhaps the timer runs at 1/2 the CPU speed?  Perhaps it runs at normal speed but only every other tick is acknowledged?  Maybe the timer is 12 bits, with the LSB set to 1 at reload time?  Whatever the reason, you have to double the priod to get the correct result.  The doubling does NOT, however, occur on the triangle channel.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>kyuusaku</b> [ Mon Mar 03, 2008 3:15 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I meant if you set the reload value to %111111111110, would the "add 2" correction make it overflow or are there really 13 bits?
<br />
<br />Also if it did overflow, would it output a clock or not?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Mon Mar 03, 2008 3:37 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />You can emulate it using 13 bits, or 16 (a "half word" on 32-bit machines) for that matter. But what I think actually happens in the hardware is more like this:
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">if &#40;apuChannels&#91;ch&#93;.timer == 0&#41; &#123;<br />&nbsp; &nbsp; apuChannels&#91;ch&#93;.timer = &#40;apuChannels&#91;ch&#93;.period &lt;&lt; 1&#41; | 0x001;<br />&nbsp; &nbsp; apuChannels&#91;ch&#93;.sequencer = &#40;apuChannels&#91;ch&#93;.sequencer + 1&#41; &amp; 0x07;<br />&#125; else &#123;<br />&nbsp; &nbsp; apuChannels&#91;ch&#93;.timer -= 1;<br />&#125;</div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>kyuusaku</b> [ Mon Mar 03, 2008 4:23 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Now you've lost me on the "| 0x001", what happened to "(period &lt;&lt; 1) + 2" or "(period + 1) &lt;&lt; 1"?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Mon Mar 03, 2008 10:51 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />In software, ((period &lt;&lt; 1) | 0x001) is identical in effect to ((period &lt;&lt; 1) + 0x001). It just takes fewer gates in hardware to OR rather than add.
<br />
<br />The key hypothesis that I'm making is that it doesn't count down and reset the counter on the same cycle. So (x * 2 + 1) cycles of counting down followed by 1 cycle of resetting (and not counting down) equals the observed (x * 2 + 2) cycles.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>kyuusaku</b> [ Tue Mar 04, 2008 12:18 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />But remember the adding of one has to be done before the shift or else you have to add two, and you can't do either with an OR gate. If you could you could also simplify it out by tying the input high and using no hardware at all :)
<br />
<br />I get how the counter synchronously loads, I just wasn't sure when the timer clocked the next stage-whether it was asynchronous after the counter became 0 or if it was synchronized to the timer's clock input at the transition to 0/-1/-2 (this is the underflow I was talking about). I originally thought that was why the +2 compensation was needed, but I guess now it's asynchronous after the arrival of 0/it doesn't matter.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Tue Mar 04, 2008 8:55 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">kyuusaku wrote:</div><div class="quotecontent">But remember the adding of one has to be done before the shift or else you have to add two</div><br />Let me explain it again, this time using a concrete example:<br /><br />Assume that the NES program writes a period of 10, this should result in an effective period of 22. But under my conjecture, what gets copied into the countdown register is (period &lt;&lt; 1) | 1 = 21.<br /><br />t=0 -- counter=21 -- action=decrement<br />t=1 -- counter=20 -- action=decrement<br />t=2 -- counter=19 -- action=decrement<br />t=3 -- counter=18 -- action=decrement<br />t=4 -- counter=17 -- action=decrement<br />t=5 -- counter=16 -- action=decrement<br />t=6 -- counter=15 -- action=decrement<br />t=7 -- counter=14 -- action=decrement<br />t=8 -- counter=13 -- action=decrement<br />t=9 -- counter=12 -- action=decrement<br />t=10 -- counter=11 -- action=decrement<br />t=11 -- counter=10 -- action=decrement<br />t=12 -- counter=9 -- action=decrement<br />t=13 -- counter=8 -- action=decrement<br />t=14 -- counter=7 -- action=decrement<br />t=15 -- counter=6 -- action=decrement<br />t=16 -- counter=5 -- action=decrement<br />t=17 -- counter=4 -- action=decrement<br />t=18 -- counter=3 -- action=decrement<br />t=19 -- counter=2 -- action=decrement<br />t=20 -- counter=1 -- action=decrement<br />t=21 -- counter=0 -- action=load 21 into counter and clock sequencer<br />t=22 -- counter=21 -- action=decrement<br />t=23 -- counter=20 -- action=decrement<br />t=24 -- counter=19 -- action=decrement<br />t=25 -- counter=18 -- action=decrement<br />t=26 -- counter=17 -- action=decrement<br />t=27 -- counter=16 -- action=decrement<br />t=28 -- counter=15 -- action=decrement<br />t=29 -- counter=14 -- action=decrement<br />t=30 -- counter=13 -- action=decrement<br />t=31 -- counter=12 -- action=decrement<br />t=32 -- counter=11 -- action=decrement<br />t=33 -- counter=10 -- action=decrement<br />t=34 -- counter=9 -- action=decrement<br />t=35 -- counter=8 -- action=decrement<br />t=36 -- counter=7 -- action=decrement<br />t=37 -- counter=6 -- action=decrement<br />t=38 -- counter=5 -- action=decrement<br />t=39 -- counter=4 -- action=decrement<br />t=40 -- counter=3 -- action=decrement<br />t=41 -- counter=2 -- action=decrement<br />t=42 -- counter=1 -- action=decrement<br />t=43 -- counter=0 -- action=load 21 into counter and clock sequencer<br />t=44 -- counter=21 -- action=decrement<br />t=45 -- counter=20 -- action=decrement<br />t=46 -- counter=19 -- action=decrement<br />etc.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">, and you can't do either with an OR gate. If you could you could also simplify it out by tying the input high and using no hardware at all <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /></div>
<br />That was my idea, but I was thinking more in terms of emulation on commodity PC hardware, where a program can't specify functions a bit at a time without using word-wide AND, OR, XOR, shifts, and the like.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>kyuusaku</b> [ Tue Mar 04, 2008 11:12 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Alright I get it, I never differentiated between the period and the load value, which aren't the same in this case. The triangle's period and load value are though right?

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>