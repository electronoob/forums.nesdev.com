<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - SMB1 + SMB2J SRAM Plus (FDS hack)</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">SMB1 + SMB2J SRAM Plus (FDS hack)</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=22&amp;t=11576">http://forums.nesdev.com/viewtopic.php?f=22&amp;t=11576</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>7</strong> of <strong>12</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Tue Jan 06, 2015 11:41 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: SMB1 + SMB2J SRAM Plus (FDS hack)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />&quot;I'm all about that BA55, 'bout that BA55, no treble&quot;<br /><br />That should work at first glance. Is there anything substantial in this patch that <em>doesn't</em> move, so that it can be assured not to work if patched on top of some random FDS side?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>ShaneM</b> [ Tue Jan 06, 2015 11:47 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: SMB1 + SMB2J SRAM Plus (FDS hack)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">&quot;I'm all about that BA55, 'bout that BA55, no treble&quot;<br /><br />That should work at first glance. Is there anything substantial in this patch that <em>doesn't</em> move, so that it can be assured not to work if patched on top of some random FDS side?</div><br /><br /><br />Everything in ROM should be different as I assembled with ASM6 and just about every routine is different since I fixed all the glitches. So I would assume so. If anything comes up let me know and we can work on a different type of patch.  --ShaneM

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>ShaneM</b> [ Thu Jan 08, 2015 2:50 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: SMB1 + SMB2J SRAM Plus (FDS hack)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I want to hear your all's thoughts on this:<br /><br /><a href="http://www.mariowiki.com/List_of_Super_Mario_Bros._glitches#Hit_the_Axe_and_Keep_It_There" class="postlink">Hit the Axe and Keep It There</a><br /><br />Do you all think that's a glitch or not? Would you all like it fixed? I seem to have overlooked this one when fixing glitches as it still occurs. The routine is found in &quot;ChkFootMTile:&quot; in doppleganer's disassembly and has to do with the CMP check with RAM $03 (what's loaded into A; block buffer) against the CMP #$C6 (axe BG tile ID). <br /><br />So, who would like to see this fixed? Is it really a glitch? Thoughts or opinions?  --ShaneM, the Master of ASM

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Thu Jan 08, 2015 5:23 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: SMB1 + SMB2J SRAM Plus (FDS hack)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />From a game designer's point of view: I think if Mario already burned Bowser to death, the axe should stay visible no matter the angle at which Mario touches it. This makes the rule consistent: hide the axe if and only if the bridge is collapsing.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>ShaneM</b> [ Fri Jan 09, 2015 11:58 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: SMB1 + SMB2J SRAM Plus (FDS hack)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">From a game designer's point of view: I think if Mario already burned Bowser to death, the axe should stay visible no matter the angle at which Mario touches it. This makes the rule consistent: hide the axe if and only if the bridge is collapsing.</div><br /><br /><br />Thank you for your input. I've interpreted your post as &quot;this is an oversight on the developer's part&quot;. So, I will sum it up to &quot;this is a glitch&quot;.<br /><br />This has now been fixed. But slightly different from tepple's suggested fix. I've made it to always disappear because the code that jumps to it either loads RAM $03 (left foot metatile) or $00 (right foot metatile) to the CMP #$C6 for the axe tile. Going too far right caused the current ID to get cleared from the block buffer. Since either $00 or $03 is used and this is the main routine for all collision in the game (a stupid place to put axe tile code) I couldn't push A onto the stack to be loaded after this since PHA only stores immediate values (even found at RAM addresses). I couldn't use register X for a CPX routine after the CMP #$C6 if the Z flag was set (hence it didn't branch) and Y is also being used too. What I did was a data fix for this. I changed all scroll stops from $5D for castle levels to $4D. Surprisingly, it is absolutely not noticeable but rather it fixes this glitch from occurring. I've fixed it in SMB2J so far and will change it in SMB1, soon. I am also still working on the manual to improve it, too. So for now, here's SMB The Lost Levels RC4.  --ShaneM, the Master of ASM<br /><br />Fixed:<br /><a href="http://www.mariowiki.com/List_of_Super_Mario_Bros._glitches#Hit_the_Axe_and_Keep_It_There" class="postlink">Hit the Axe and Keep It There</a>

		
			<br clear="all" /><br />

			<table class="tablebg" width="100%" cellspacing="1">
			<tr>
				<td><b class="genmed">Attachments: </b></td>
			</tr>
			
				<tr>
					<td>
			<img src="./download/file.php?id=2409" alt="Super Mario Bros. 2 - The Lost Levels with SRAM (Japan)_002.png" /><br />
			<span class="gensmall">Super Mario Bros. 2 - The Lost Levels with SRAM (Japan)_002.png [ 3.33 KiB | Viewed 1871 times ]</span>
		

		<br />
	</td>
				</tr>
			
			</table>
		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>ShaneM</b> [ Sat Jan 10, 2015 12:58 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: SMB1 + SMB2J SRAM Plus (FDS hack)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />You know what I just realized? The SNES version of <em><strong>Super Mario Bros.: The Lost Levels</strong></em> actually fixes the Axe by doing EXACTLY what I did by shorting the scroll stops! o_0

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>ShaneM</b> [ Sun Jan 11, 2015 2:44 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: SMB1 + SMB2J SRAM Plus (FDS hack)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I'm getting ready to release the new SMB1 build fix. I want some opinions: How many of you would like to see the original SMB1 GFX for the SMB1 portion? How many prefer the Lost Levels tiles?  --ShaneM

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>ShaneM</b> [ Fri Jan 16, 2015 1:09 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: SMB1 + SMB2J SRAM Plus (FDS hack)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Still haven't heard what people want me to do with SMB1. But, I've corrected all 'Engrish' found on SMB2J and will release it soon. Text fixed includes the World 9 intro screen, as well as Game Over screen for World 9. Another text corrected is the poem on 8-4 to make it slightly more poetic and logical, as well as make use of another beta tile that I discovered. The beta tile is from ANNSMB (All Night Nippon) and can be found in the FCEUX PPU viewer as tiles $FB-$FE. One is a heart, two are Japanese and one is an exclamation point. I've added the heart from ANNSMB into the SMB2J Princess poem as sort of a border. I will release this soon; work on improving the manual has begun!  --ShaneM, the Master of ASM<br /><br />EDIT: For those wondering how I got the 'heart' beta tile to fit from ANNSMB into SMB2J, I've replaced the &quot;J&quot; tile with it since &quot;J&quot; is never used.

		
			<br clear="all" /><br />

			<table class="tablebg" width="100%" cellspacing="1">
			<tr>
				<td><b class="genmed">Attachments: </b></td>
			</tr>
			
				<tr>
					<td>
			<img src="./download/file.php?id=2450" alt="Super Mario Bros. 2 - The Lost Levels with SRAM (Japan)_003.png" /><br />
			<span class="gensmall">Super Mario Bros. 2 - The Lost Levels with SRAM (Japan)_003.png [ 4.25 KiB | Viewed 1744 times ]</span>
		

		<br />
	</td>
				</tr>
			
			</table>
		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Hamtaro126</b> [ Fri Jan 16, 2015 11:21 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: SMB1 + SMB2J SRAM Plus (FDS hack)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />In your current script, as well from the original version:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">HURRAH TO (two spaces) &#91;Player Name&#93;<br /></div><br /><br />The two spaces needs to be changed to only one space, essential if correcting errors!<br /><br />EDIT: I agree, SMB1 can still use most of it's original graphics, and it will still be fun,<br /><br />- move the title screen to the PRG instead of CHR (of which you already did that),<br />- remove off the sprite graphic associated with sprite 0 (as IRQ is used instead),<br />- Remove one of the duplicate tiles for the stem of the Piranha Plants,<br />- Remove the semi-duplicate tiles for the top of bricks, as SMAS SMB1 uses the same character as the bottom,<br />- OPTIONAL: If score sprites does not matter, remove the sprites only (Scoring can still be used if you need it!)<br />- PROTIP: The second coin sprite can be flipped like in SMB3 by adding a bit of code to flip the second frame, using 3 CHR tiles instead of 4.<br /><br /> and now you got a bit more CHR to use<br /><br />A SUGGESTION: Maybe making Princess Peach and the Ending Door different colors for use in your SMB2J and SMB1, Just replace Peach's Attribute to the one used in-game as Green, but make it so that the door is not green and uses a colorset of $08,$28,$18 (Wood-like colors) and when Peach appears, the palette turns to the following colors: $25,$36,$08 (pink, skin, brown)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sat Jan 17, 2015 10:48 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: SMB1 + SMB2J SRAM Plus (FDS hack)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Hamtaro126 wrote:</div><div class="quotecontent">- Remove the semi-duplicate tiles for the top of bricks, as SMAS SMB1 uses the same character as the bottom,</div><br />But then there'd be no contrast for the brick in front of the &quot;castle wall&quot; repeating tiles near the end of 8-3. SMAS doesn't need it because it removes the repeating tiles in favor of a parallax background.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>ShaneM</b> [ Sat Jan 17, 2015 2:01 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: SMB1 + SMB2J SRAM Plus (FDS hack)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Hamtaro126 wrote:</div><div class="quotecontent">In your current script, as well from the original version:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">HURRAH TO (two spaces) &#91;Player Name&#93;<br /></div><br /><br />The two spaces needs to be changed to only one space, essential if correcting errors!<br /><br />EDIT: I agree, SMB1 can still use most of it's original graphics, and it will still be fun,<br /><br />- move the title screen to the PRG instead of CHR (of which you already did that),<br />- remove off the sprite graphic associated with sprite 0 (as IRQ is used instead),<br />- Remove one of the duplicate tiles for the stem of the Piranha Plants,<br />- Remove the semi-duplicate tiles for the top of bricks, as SMAS SMB1 uses the same character as the bottom,<br />- OPTIONAL: If score sprites does not matter, remove the sprites only (Scoring can still be used if you need it!)<br />- PROTIP: The second coin sprite can be flipped like in SMB3 by adding a bit of code to flip the second frame, using 3 CHR tiles instead of 4.<br /><br /> and now you got a bit more CHR to use<br /><br />A SUGGESTION: Maybe making Princess Peach and the Ending Door different colors for use in your SMB2J and SMB1, Just replace Peach's Attribute to the one used in-game as Green, but make it so that the door is not green and uses a colorset of $08,$28,$18 (Wood-like colors) and when Peach appears, the palette turns to the following colors: $25,$36,$08 (pink, skin, brown)</div><br /><br />I'll try to go in order, here.<br /><br />1) The two spaces within the poem on 8-4/D-4 for player's name was intentional on Nintendo's part for symmetry. Look at the end of the sentence lines, see how they match and go in pattern? Removing that space would break symmetry. (ie &quot;saved&quot; on line 2 and &quot;Luigi&quot; on line 3)<br /><br />2) Thanks for the SMB1 opinion; it will be weighed in.<br /><br />3) &quot;remove off the sprite graphic associated with sprite 0 (as IRQ is used instead)&quot; - SMB2J does not use Sprite 0 for the undercoin anymore. Since SMB1 is a hack of that, it's not used anyway.<br /><br />4) &quot;Remove one of the duplicate tiles for the stem of the Piranha Plants&quot; - Why? Then the Piranha Plant will look odd...<br /><br />5) &quot;Remove the semi-duplicate tiles for the top of bricks, as SMAS SMB1 uses the same character as the bottom&quot; - What tepples said.<br /><br />6) &quot;The second coin sprite can be flipped like in SMB3 by adding a bit of code to flip the second frame, using 3 CHR tiles instead of 4.&quot; - I would need more CHR RAM to create animated sprites. Now, if you've ever hacked SMB2J on the FDS, you'd know that this is next to impossible to do.<br /><br />7) &quot;A SUGGESTION...&quot; - We'll see.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>ShaneM</b> [ Sat Jan 17, 2015 7:27 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: SMB1 + SMB2J SRAM Plus (FDS hack)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Right now I'm trying to rip some code from the EU version of SMB1 to improve TLL. The SNES version actually make the same changes to the EU TLL. Turns out not all their changes were necessary. So far, I've ripped the vertical collision fix for underwater blocks from that version, except it I coded myself a little differently. New build coming soon. I will make more comparisons and some to the SMAS EU, too. For now, here is the Nintendo-original EU fix for minusing vertical gravity when bumping underwater blocks vs. my fix from scratch.<br /><br />Really, this is not a glitch that they fixed more or less a customization. Commentary notes are mine and so is the &quot;watertype&quot; label. If you borrow my method, credit me.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">;original NTSC/Japan<br />NYSpd:<br />&nbsp; &nbsp; &nbsp; &nbsp;lda #$01&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;;set player's vertical speed to nullify<br />&nbsp; &nbsp; &nbsp; &nbsp;sta Player_Y_Speed&nbsp; &nbsp; &nbsp;;jump or swim<br /></div><br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">;original Nintendo EU SMB1<br />NYSpd:<br />&nbsp; &nbsp; &nbsp; &nbsp;ldy #$01&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ;set player's vertical speed to nullify (one by default)<br />&nbsp; &nbsp; &nbsp; &nbsp;lda AreaType&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;;are we in a water type level?<br />&nbsp; &nbsp; &nbsp; &nbsp;bne watertype&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;;if not, then branch<br />&nbsp; &nbsp; &nbsp; &nbsp;dey&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ;otherwise set Y as #$00 to impose gravity<br />watertype:&nbsp; &nbsp; &nbsp; <br />&nbsp; &nbsp; &nbsp; &nbsp;sty Player_Y_Speed&nbsp; &nbsp;;store either #$01 or #$00 depending on terrain type<br /><br /></div><br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">;the ShaneM way<br />NYSpd:<br />&nbsp; &nbsp; &nbsp; &nbsp;ldy #$00&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ;set player's vertical speed to nullify (zero by default)<br />&nbsp; &nbsp; &nbsp; &nbsp;lda AreaType&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;;are we in a water type level?<br />&nbsp; &nbsp; &nbsp; &nbsp;beq watertype&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;;if so, then branch<br />&nbsp; &nbsp; &nbsp; &nbsp;iny&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ;otherwise set Y as #$01 to set gravity<br />watertype:&nbsp; &nbsp; &nbsp; <br />&nbsp; &nbsp; &nbsp; &nbsp;sty Player_Y_Speed&nbsp; &nbsp;;store either #$01 or #$00 depending on terrain type<br /></div><br /><br />I plan on releasing the next RC on Tuesday as well as an updated manual.  --ShaneM, the Master of ASM

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>ShaneM</b> [ Sun Jan 18, 2015 3:36 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: SMB1 + SMB2J SRAM Plus (FDS hack)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Okay, I'm puzzled. Thoughts?<br /><br />I'm a little confused about this EU's change, though I understand what the code is doing. Below is the code and I was hoping to get your all's weigh in on what you think. After it, I give my info on what the code does (I give the routine &quot;ChkForPlayerInjury&quot; that branches right before it as well):<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">ChkForPlayerInjury:<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; lda Player_Y_Speed&nbsp; &nbsp; &nbsp;;check player's vertical speed<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; bmi ChkInj&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;;perform procedure below if player moving upwards<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; bne EnemyStomped&nbsp; &nbsp; &nbsp; &nbsp;;or not at all, and branch elsewhere if moving downwards<br />ChkInj:<br />.ifdef Japan<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; lda Enemy_ID,x&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;;branch if enemy object &lt; $07<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cmp #Bloober&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;;(Goomba, Buzzy Beetle, Green/Red Koopa and Hammer Bro will branch)<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; bcc ChkETmrs&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;;to check stomp/invincible timers and enemy facing direction<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; lda Player_Y_Position&nbsp; ;otherwise load player's vertical position<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; clc&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; adc #$0c&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;;and add 12 pixels to player's vertical position<br />.else<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; lda #FlyCheepCheepFrenzy&nbsp; &nbsp;;#$14 gets loaded into A<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ldy Enemy_ID,x&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;;branch if enemy object is not FlyCheepCheepFrenzy<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cpy #$14&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; bne +&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ;branch to Player_Y_Position<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; lda #Bloober&nbsp; &nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;;load #$07 into A<br />+&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;adc Player_Y_Position&nbsp; ;RAM $ce, add carry player's vertical position to A<br />.endif&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; cmp Enemy_Y_Position,x ;compare modified player's position to enemy's position<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; bcc EnemyStomped&nbsp; &nbsp; &nbsp; &nbsp;;branch if player's position above (less than) enemy's<br />ChkETmrs: lda StompTimer&nbsp; &nbsp; &nbsp; ;check stomp timer<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; bne EnemyStomped&nbsp; &nbsp; &nbsp; &nbsp;;branch if set<br /></div><br /><br /><span style="text-decoration: underline"><strong>My thoughts</strong></span>: I think this code is only branched to if the player is vertically moving upward or standing still; moving downward vertically causes the BNE to branch in &quot;ChkForPlayerInjury&quot;. &quot;Player_Y_Speed&quot; (RAM $9F) will be a signed value if the player is going up and unsigned if going down (so MSB or d7 <strong>WILL</strong> be set if this branch occurs). Now, if the player is indeed going up, we branch to &quot;ChkInj&quot;, the routine in question. What the NTSC seems to do is branch to check various timers if dealing with enemies such as Goombas etc. or anything less than Blooper (#$07) as I labeled above. If the enemy in A plus X offset is #$07 or greater it will thus not branch because the Carry is set. Next, we load A with what's loaded at RAM $CE, or Player_Y_Position. (The player's Y is stored as #$B0 when on the ground at the lowest playable part of the level, decrementing from that value as the player is vertically inclined/stomps on an enemy.) $CF plus X offset is where the Enemy_Y_Position is stored and is #$08 greater than the player's when on flat ground. So, for example, a Goomba (RAM $16,x will load an #$06 in Memory) on flat ground will have a #$B8 loaded into RAM $CF plus X whereas the protagonist will have #$B0 in that occurrence stored at RAM $CE.<br /><br />So anyway, if the enemy object in Memory plus X is #$07 or greater, Carry will be set so we will clear Carry and add #$0C to A (which is loading the player's current Y position). So A will thus have whatever that value is plus #$0c added to it for the upcoming comparison with RAM $CF plus X register (in layman's terms, the enemy which is loaded for the comparison since 6 enemies can be loaded at once). At the end of the .endif conditional statement above, we now move onto comparing the current value in A with the enemy offset. If the player's Y is at all above (being less than) the enemy's, we thus branch to the enemy being stomped &quot;EnemyStomped&quot; (and the timer flag at RAM $0791 will be set to branch; from there it checks for certain enemies such Spinys or other 'untouchable' enemies and branches accordingly to injure player or else award player certain pts.). If Carry is set, then we move on to check various timers and branch accordingly to injure player/turn enemies around etc. For enemies that are not Lakitu, Cheeps or the likes, we skip all of this. That makes sense, logically. <br /><br />What the EU does: It appears to use the Y register for the check, but loads A with #$14 by default. Y register is loaded with the value stored at RAM $1E plus X register. The next thing we do is compare register Y with #$14 (or Cheep-Cheep frenzy enemy) and any other enemy which is NOT Cheep-Cheep frenzy will thus branch and we clear the Z flag. If it is the Cheep-Cheep, d6 will be set and thus skip the branch. If it is Cheep, then we now load A with #$07 rather than the previously loaded #$14. (So A will either be loaded with #$14 or #$07 depending on the current enemy plus X register and whether we previously branched or not we will end up with at the &quot;adc Player_Y_Position&quot;) Next, we are at &quot;adc Player_Y_Position&quot;, instead of A being loaded with this value we ADC with it instead, but Carry will be cleared here so we need not CLC. Neither will Carry be set with what's at RAM $CE. From there we move onto the linear code with the CMP,X. If the player's Y is at all above (being less than) the enemy's, we thus branch to the enemy being stomped &quot;EnemyStomped&quot; (and the timer flag at RAM $0791 will be set to branch; from there it checks for certain enemies such Spinys or other 'untouchable' enemies and branches accordingly to injure player or else award player certain pts.).<br /><br />So my question is, what's the point of changing this in the EU? Obviously all enemies are now checked instead of those that are #$07 or greater. And we add either load A with #$07 or #$14 rather than the ADC #$0C like NTSC does. It singles out flying Cheep-Cheep and gives them #$07, but why? What kind of fix is this?<br /><br />EDIT: Oh, forgot to mention, I had to comment on everything on the code myself since doppleganger didn't really go into detail. I will submit a better commented version to RHDN when I'm done. Really want to hear thoughts on this code, though, as I'm perplexed. --ShaneM, the Master of ASM

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>ShaneM</b> [ Sun Jan 18, 2015 11:13 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: SMB1 + SMB2J SRAM Plus (FDS hack)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I think I have an idea of what this fix is for. It's some sort of fix for if the player collides with the Cheep-Cheep at a weird angle. It corrects collision to &quot;stomp&quot; on the enemy rather than taking damage when collision is made while the player is jumping. (This fix implies that the player is jumping thereby having a signed integer at RAM $9F to do this check.) I'm going to try and figure out why the check was made to add #$14 for other enemies (though it's inverted in the EU and we ADC Player_Y_Position instead of loading A with the value). Point is, I want to see why that was done differently in EU to include enemies that are #$06 or less into the comparison (thereby making the label &quot;ChkETmrs:&quot; completely useless in the EU build).

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>ShaneM</b> [ Mon Jan 19, 2015 1:49 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: SMB1 + SMB2J SRAM Plus (FDS hack)</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">ShaneM wrote:</div><div class="quotecontent">I think I have an idea of what this fix is for. It's some sort of fix for if the player collides with the Cheep-Cheep at a weird angle. It corrects collision to &quot;stomp&quot; on the enemy rather than taking damage when collision is made while the player is jumping. (This fix implies that the player is jumping thereby having a signed integer at RAM $9F to do this check.) I'm going to try and figure out why the check was made to add #$14 for other enemies (though it's inverted in the EU and we ADC Player_Y_Position instead of loading A with the value). Point is, I want to see why that was done differently in EU to include enemies that are #$06 or less into the comparison (thereby making the label &quot;ChkETmrs:&quot; completely useless in the EU build).</div><br /><br /><br />Okay. I now have a <em>perfect</em> understanding of what this EU difference does. I will get into more detail tomorrow when I get up and after I get some free time. In a nutshell, this really doesn't fix any glitch. Rather, if corrects an oversight on the NTSC programmer's part. It is customization, as well as optimization. It has to do with a very specific jump slightly over an enemy, so close to the head that it should be counted as a &quot;stomp&quot; in the NTSC but counts as a player injury if the enemy is #$06 or less. I tried changing the code and specifically testing with an enemy that sets Carry (Lakitu) to verify. The EU separates Cheep-Cheep frenzies from this because on the account of diagonal enemy jumping on their part since their bounding box data is different. I will incorporate this into my SMB2J build; it only takes 1 additional byte and I found an opportunity to optimize code in &quot;KillPlayer&quot; to earn two free bytes.  --ShaneM, the Master of ASM

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>7</strong> of <strong>12</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>