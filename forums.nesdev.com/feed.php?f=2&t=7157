<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=2&amp;t=7157" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2010-11-15T10:27:22-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=2&amp;t=7157</id>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2010-11-15T10:27:22-07:00</updated>
<published>2010-11-15T10:27:22-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7157&amp;p=70027#p70027</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7157&amp;p=70027#p70027"/>
<title type="html"><![CDATA[Fast LFO]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7157&amp;p=70027#p70027"><![CDATA[
Yes, when enabling the LFO, you calculate the 16-bit value, then add it to freq:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">pitchLFO:<br />        lda freqLo<br />        clc<br />        adc lfoAddLo<br />        sta freqLo<br />        <br />        lda freqHi<br />        adc lfoAddHi<br />        sta freqHi<br />        <br />        dec lfoCounter<br />        bne :+<br />        <br />        ; Negate lfoAdd<br />        <br />        lda #0<br />        sec<br />        sbc lfoAddLo<br />        sta lfoAddLo<br />        <br />        lda #0<br />        sbc lfoAddHi<br />        sta lfoAddHi<br />        <br />        lda lfoSpeed<br />        sta lfoCounter<br />        <br />:       rts</div><br />Hmmm, this might be worse, if worst-case performance is all that matters. If you can keep lfoDepth a positive value, my original code is probably fastest.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Mon Nov 15, 2010 10:27 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[neilbaldwin]]></name></author>
<updated>2010-11-15T02:09:14-07:00</updated>
<published>2010-11-15T02:09:14-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7157&amp;p=70014#p70014</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7157&amp;p=70014#p70014"/>
<title type="html"><![CDATA[Fast LFO]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7157&amp;p=70014#p70014"><![CDATA[
<div class="quotetitle">blargg wrote:</div><div class="quotecontent"><br />I see; I figured you might just initialize lfoCounter to lfoSpeed/2 when starting the LFO.<br /></div><br /><br />That's quite a nice idea actually. It only falls down if the speed is an odd number as you'll end up with the median pitch moving away from the original slightly. I guess you could look at it the other way and set the speed to *2 after the initial cycle but that's adding complication back in.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br />Anyway, to optimize this, you need to figure out the essence of what it's doing, and strip away complications like this. Most of the time, it's adding/subtracting a value from pitch. Maybe you can get it down to a counter and 16-bit value that's added to the frequency, without any branches except when the counter reaches zero.<br /></div><br /><br />Not sure I follow you there. Surely some logic is needed to figure out the direction/sign of the 16-bit value?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3896">neilbaldwin</a> — Mon Nov 15, 2010 2:09 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2010-11-14T20:12:46-07:00</updated>
<published>2010-11-14T20:12:46-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7157&amp;p=70006#p70006</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7157&amp;p=70006#p70006"/>
<title type="html"><![CDATA[Fast LFO]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7157&amp;p=70006#p70006"><![CDATA[
I see; I figured you might just initialize lfoCounter to lfoSpeed/2 when starting the LFO. Anyway, to optimize this, you need to figure out the essence of what it's doing, and strip away complications like this. Most of the time, it's adding/subtracting a value from pitch. Maybe you can get it down to a counter and 16-bit value that's added to the frequency, without any branches except when the counter reaches zero.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Sun Nov 14, 2010 8:12 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[neilbaldwin]]></name></author>
<updated>2010-11-14T19:18:36-07:00</updated>
<published>2010-11-14T19:18:36-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7157&amp;p=70004#p70004</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7157&amp;p=70004#p70004"/>
<title type="html"><![CDATA[Fast LFO]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7157&amp;p=70004#p70004"><![CDATA[
<div class="quotetitle">blargg wrote:</div><div class="quotecontent"><br />Well, that costs you quite a few cycles. I was also wondering why you used bit 1 of lfoPhase rather than bit 0. It seems that this merely halves the speed.<br /></div><br /><br />Because the phase has four states: %00 = up, %11 = down, %10 = down, %01 = up to give you the necessary cycle shape:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">/\<br />----------- center frequency<br />  \/<br /></div><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3896">neilbaldwin</a> — Sun Nov 14, 2010 7:18 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2010-11-14T19:09:01-07:00</updated>
<published>2010-11-14T19:09:01-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7157&amp;p=70003#p70003</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7157&amp;p=70003#p70003"/>
<title type="html"><![CDATA[Fast LFO]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7157&amp;p=70003#p70003"><![CDATA[
Well, that costs you quite a few cycles. I was also wondering why you used bit 1 of lfoPhase rather than bit 0. It seems that this merely halves the speed.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Sun Nov 14, 2010 7:09 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[neilbaldwin]]></name></author>
<updated>2010-11-14T18:33:53-07:00</updated>
<published>2010-11-14T18:33:53-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7157&amp;p=70002#p70002</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7157&amp;p=70002#p70002"/>
<title type="html"><![CDATA[Fast LFO]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7157&amp;p=70002#p70002"><![CDATA[
Thanks blargg.<br /><br />Yes, my code allows the 'depth' variable to be positive or negative, thus I can use the LFO to do pitch sweeping by setting 'lfoSpeed' to zero and using 'lfoDepth' as a signed offset to be added each frame.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3896">neilbaldwin</a> — Sun Nov 14, 2010 6:33 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[blargg]]></name></author>
<updated>2010-11-14T19:07:07-07:00</updated>
<published>2010-11-14T18:09:36-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7157&amp;p=70000#p70000</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7157&amp;p=70000#p70000"/>
<title type="html"><![CDATA[Fast LFO]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7157&amp;p=70000#p70000"><![CDATA[
Describing the basic algorithm would have made this easier. I believe it's basically this:<br />* Add lfoPhase to freqLo/freqHi if bit 1 of lfoPhase is set, subtract otherwise.<br />* Decrement lfoCounter. If zero, decrement lfoPhase and copy lfoCounter to lfoSpeed.<br /><br />For your negate code, this is faster, as it avoids the ADC since you can just use INX:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">; Negate X<br />txa<br />eor #$FF<br />tax<br />inx</div><br /><br />Then, since you have separate code for addition and subtraction, you might as well do that rather than negate lfoDepth. By interpreting bit 1 of lfoPhase as a subtract flag rather than add, you can get carry set properly before the add/subtract. I calculate the worst-case performance of this to be 58 cycles, assuming variables are in zero-page and no page crosses. This also doesn't use X anymore. But I'm not sure of lfoDepth; it seems the original code allowed this to be both negative and positive, which this doesn't handle. It seems the depth should be a magnitude only, so I only handle a positive depth here.<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">pitchLFO:<br />        lda lfoPhase    ; carry = subtract flag<br />        lsr a<br />        lsr a<br />        lda freqLo      ; preload<br />        bcs @sub<br /><br />@add:   adc lfoDepth    ; freq += lfoDepth<br />        bcc :+<br />        inc freqHi<br />:       jmp @final<br /><br />@sub:   sbc lfoDepth    ; freq -= lfoDepth<br />        bcs :+<br />        dec freqHi<br />:       <br />@final: sta freqLo<br />        dec lfoCounter<br />        beq :+<br />        dec lfoPhase    ;yes, go backwards %00, %11, %10, %01<br />        lda lfoSpeed    ;reset counter<br />        sta lfoCounter<br />:       rts</div><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=17">blargg</a> — Sun Nov 14, 2010 6:09 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Kasumi]]></name></author>
<updated>2010-11-14T15:25:30-07:00</updated>
<published>2010-11-14T15:25:30-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7157&amp;p=69991#p69991</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7157&amp;p=69991#p69991"/>
<title type="html"><![CDATA[Re: Fast LFO]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7157&amp;p=69991#p69991"><![CDATA[
I know nothing about LFOs, but you can save two cycles by not loading #$00 a second time in the int phase.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">initLFO:   <br />   lda #$00<br />   sta lfoPhase<br />   sta lfoSpeed<br />   sta lfoCounter   <br />   lda #$F0<br />   sta lfoDepth   <br />   <br />   rts<br /><br /></div><br /><br /> *shrug*<br /><br />And if your code that calls the functions looks like this at any time:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">   jsr initLFO<br />   jsr pitchLFO<br /></div><br /><br />You can save 12 cycles each time you need to init an LFO by avoiding a jsr rts pair by removing the rts. If you need to use initLFO without running pitch LFO immediately afterward, you could have the same function with an RTS duplicated someplace else in code.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">initLFO:   <br />   lda #$00<br />   sta lfoPhase<br />   sta lfoSpeed<br />   sta lfoCounter   <br />   lda #$F0<br />   sta lfoDepth   <br />   <br />   ;rts;Removing. When you need to init and run a pitch lfo, you jsr to initLFO<br />;When you need to just run the pitch LFO, jsr to pitchLFO<br /><br />pitchLFO:<br />;pitchLFO code here<br /><br /></div><br /><br />Sorry, if that's not helpful. Just wanted to try.<br /><br />edit: Are we allowed to use y? I'm not sure I could make it do the exact same thing, faster with y, but it'd be good to know.<br /><br />Edit 2: Provided the above helps, you could further save cycles like this: <br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">initLFO:   <br />   lda #$00<br />   sta lfoPhase<br />   sta lfoSpeed<br />   sta lfoCounter   <br />   ldx #$F0<br />   stx lfoDepth<br />   jmp pitchLFO2;or bne;adds 3 cycles<br /><br />;<br />;Phase: %00 / %01 = positve, %10 / %11 = negative<br />;<br />pitchLFO:<br />   ldx lfoDepth;But saves at least 3, depending on if these<br />   lda lfoPhase ;are zero page or absolute<br />pitchLFO2:<br /></div><br /><br />But I'm rambling now, sorry. Apologies also if I'm incorrect in my assumptions of the order of how these subroutines will be used. I only saved 17 cycles anyway, and probably only once, instead of 36 times, assuming my assumptions are even correct in the first place.  <img src="http://forums.nesdev.com/images/smilies/icon_lol.gif" alt=":lol:" title="Laughing" /><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3504">Kasumi</a> — Sun Nov 14, 2010 3:25 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[neilbaldwin]]></name></author>
<updated>2010-11-14T14:35:04-07:00</updated>
<published>2010-11-14T14:35:04-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=7157&amp;p=69990#p69990</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=7157&amp;p=69990#p69990"/>
<title type="html"><![CDATA[Fast LFO]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=7157&amp;p=69990#p69990"><![CDATA[
Been playing around attempting to make the fastest pitch LFO possible. This is my latest version which takes about 4/5th of a scan line. I also need it to be able to handle positive and negative "depth" so that I can use it for pitch sweeping too (set sweep direction in "depth" and a LFO speed of 0).<br /><br />Can anyone improve on it? It's not a pointless challenge, I'm investigating a new project that needs 36 LFOs so they need to be FAST! <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">initLFO:   <br />   lda #$00<br />   sta lfoPhase   <br />   lda #$F0<br />   sta lfoDepth   <br />   lda #$00<br />   sta lfoSpeed<br />   sta lfoCounter<br />   rts<br />   <br /><br />;<br />;Phase: %00 / %01 = positve, %10 / %11 = negative<br />;<br />pitchLFO:<br />   ldx lfoDepth<br />   lda lfoPhase<br />   and #%00000010<br />   bne @down<br />   <br />   txa      ;if phase is negative, invert the depth<br />   eor #$FF<br />   clc<br />   adc #$01<br />   tax<br /><br />@down:   txa<br />   bmi @a<br />   clc<br />   adc freqLo<br />   sta freqLo<br />   bcc @b<br />   inc freqHi<br />@b:   dec lfoCounter<br />   beq @c<br />   rts<br /><br />@a:   clc<br />   adc freqLo<br />   sta freqLo<br />   bcs @b<br />   dec freqHi<br />   <br />   dec lfoCounter   ;time to change phase?<br />   bne @d   <br />@c:   dec lfoPhase   ;yes, go backwards %00, %11, %10, %01<br />   lda lfoSpeed   ;reset counter<br />   sta lfoCounter<br />@d:   rts<br /></div><p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=3896">neilbaldwin</a> — Sun Nov 14, 2010 2:35 pm</p><hr />
]]></content>
</entry>
</feed>