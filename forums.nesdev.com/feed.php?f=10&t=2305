<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-gb">
<link rel="self" type="application/atom+xml" href="http://forums.nesdev.com/feed.php?f=10&amp;t=2305" />

<title>nesdev.com</title>
<subtitle>NES Development and Strangulation Records message boards</subtitle>
<link href="http://forums.nesdev.com/index.php" />
<updated>2006-11-04T07:51:47-07:00</updated>

<author><name><![CDATA[nesdev.com]]></name></author>
<id>http://forums.nesdev.com/feed.php?f=10&amp;t=2305</id>
<entry>
<author><name><![CDATA[tepples]]></name></author>
<updated>2006-11-03T22:12:51-07:00</updated>
<published>2006-11-03T22:12:51-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=2305&amp;p=19115#p19115</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=2305&amp;p=19115#p19115"/>
<title type="html"><![CDATA[speeding up and slowing down]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=2305&amp;p=19115#p19115"><![CDATA[
Multiplying 16 bits by 16 bits should be straightforward. The classic algorithm does four calls to the 8x8 multiply followed by several adds:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">    $aabb<br />  * $ccdd<br />    -----<br />     bdbd<br />   bcbc00<br />   adad00<br />+acac0000<br />---------<br />    value<br /><br /></div><br />I don't see where nibble-wise operation ever comes into play.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=9">tepples</a> — Fri Nov 03, 2006 10:12 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[VanOccupanther]]></name></author>
<updated>2006-11-04T07:51:47-07:00</updated>
<published>2006-11-03T21:28:18-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=2305&amp;p=19113#p19113</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=2305&amp;p=19113#p19113"/>
<title type="html"><![CDATA[speeding up and slowing down]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=2305&amp;p=19113#p19113"><![CDATA[
Multiplying two two byte numbers is hard.  Here is my attempt (A,B,C,and D are variables.)<br /><br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">  A.B<br />x C.D<br />-----<br /><br />step1 = D * B<br />step2 = carry_from_step3 + C * A<br />step3 = C * B<br />step4 = carry_from_step1 + D * A<br /><br />step1 x 1 =   val1<br />step2 x 100 = val2<br />step3 x 10 =  val3<br />step4 x 10 =  val4<br /><br />val1 + val2 + val3 + val4 = answer<br /><br /><br />lda answer<br />tay<br />asl<br />asl<br />asl<br />asl<br />sta y_portion_decimal<br />tya<br />lsr<br />lsr<br />lsr<br />lsr<br />sta y_portion</div><br /><br />But there's a problem with the answer.  For example:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">  00.FC<br />x 01.00<br />-------<br />  0C.00</div><br /><br />When calculating val3, it moves the bits 4 to the left, that's why we lost the F.  Also, the answer should look like 00.FC00 so the whole number part is lost too.  How can you do this?  How would you do this?  Please help me fix this.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=905">VanOccupanther</a> — Fri Nov 03, 2006 9:28 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[VanOccupanther]]></name></author>
<updated>2006-10-30T17:50:56-07:00</updated>
<published>2006-10-30T17:50:56-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=2305&amp;p=18985#p18985</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=2305&amp;p=18985#p18985"/>
<title type="html"><![CDATA[speeding up and slowing down]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=2305&amp;p=18985#p18985"><![CDATA[
Having problems.  Here's the code:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">      ;**************<br />      ;   movement_speed start<br />      ;**************<br />      <br />      lda #$10<br />      sta speed<br /><br />      lda y_portion_decimal<br />      ;sta look2<br />      sta multiplicand      <br />      lda speed<br />      asl <br />      asl<br />      asl<br />      asl<br />      ;sta look4<br />      jsr multiply<br />      lda product<br />      ;sta look6<br />      sta bullettable+1   ;y_portion_decimal<br />      lda y_portion<br />      ;sta look   <br />      sta multiplicand<br />      lda speed<br />      lsr<br />      lsr<br />      lsr<br />      lsr<br />      ;sta look3<br />      jsr multiply<br />      lda product<br />      ;sta look5<br />      sta bullettable      ;y_portion<br /><br /><br />      lda x_portion_decimal<br />      ;sta look8<br />      sta multiplicand      <br />      lda speed<br />      asl <br />      asl<br />      asl<br />      asl<br />      ;sta lookA<br />      jsr multiply<br />      lda product<br />      ;sta lookC<br />      sta bullettable+3      ;x_portion_decimal<br />      lda x_portion   <br />      ;sta look7<br />      sta multiplicand<br />      lda speed<br />      lsr<br />      lsr<br />      lsr<br />      lsr<br />      ;sta look9<br />      jsr multiply<br />      lda product<br />      ;sta lookB<br />      sta bullettable+2      ;x_portion<br /><br /><br /><br />      ;**************<br />      ;   movement_speed end<br />      ;**************<br /></div><br /><br />here is multiply's header:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">multiply:   ;******<br />      ;must give multiplicand a value<br />      ;multiplier value should be stored in accumulator<br />      ;<br />      ;answer will be stored in product<br />      ;******<br />      <br /></div><br /><br />Multiply works multiplying a byte with a byte.<br /><br />The problem.. for example when shooting toward the southwest<br /><br />y_portion = 00<br />y_portion_decimal = D6<br /><br />speed = 10 (one pixel per frame)<br /><br />so speed_high = 01<br />and speed_low = 00<br /><br />so y_portion * speed_high = 00<br />and y_portion_decimal * speed_low == 00<br /><br /><br />It takes 00D6 and changes it to 0000.  <img src="http://forums.nesdev.com/images/smilies/icon_sad.gif" alt=":(" title="Sad" />  It should take 00D6 and give back 00D6.  Since this is multiplication maybe each 00 should be changed to a 01, but i don't know.  The x_portion and x_portion decimal is FF72.  But, it gives FF72 [-.72] * 0100 [1.0] = FF00 [-1.0].<br /><br />Please help me to figure out what's wrong with the multiplication here?<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=905">VanOccupanther</a> — Mon Oct 30, 2006 5:50 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2006-10-28T12:38:48-07:00</updated>
<published>2006-10-28T12:38:48-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=2305&amp;p=18916#p18916</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=2305&amp;p=18916#p18916"/>
<title type="html"><![CDATA[speeding up and slowing down]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=2305&amp;p=18916#p18916"><![CDATA[
Wait, you got the thing, but now you don't have to use two bytes. I'll just show you some example :<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">lda Speed<br />asl A<br />asl A<br />asl A<br />asl A<br />clc<br />adc PositionL<br />sta PositionL<br />lda Speed<br />lsr A<br />lsr A<br />lsr A<br />lsr A<br />adc PositionH<br />sta PositionH</div><br />Note that only the 4 high bits of Position L are used, and the low bits aren't affected at all so they can be used for anything else.<br />To do it signed, just test the sign of the original Speed variable, and then do the whole thing using one routine that add, and one routine that substract in function of the original sign (but the negative bit must be masked when substractuing after the 4 "LSR A"s).[/code]<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Sat Oct 28, 2006 12:38 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[VanOccupanther]]></name></author>
<updated>2006-10-28T10:45:33-07:00</updated>
<published>2006-10-28T10:45:33-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=2305&amp;p=18906#p18906</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=2305&amp;p=18906#p18906"/>
<title type="html"><![CDATA[speeding up and slowing down]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=2305&amp;p=18906#p18906"><![CDATA[
<div class="quotetitle">Celius wrote:</div><div class="quotecontent"><br />www.freewebs.com/the_bott/ScrollSpeedTest.nes<br /></div><br /><br />That was useful to me for figuring out how fast and slow the one byte speed method could go. (7+15/16th and 1/16th)<br />----------<br /><br />Well, i tried the one byte method and it ended up using two bytes.  Here's what's there: <br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">      lda $18<br />      sta speed<br /><br />      lda speed<br />      and #%00001111<br />      sta speed_low<br />      <br />      lda speed<br />      and #%11110000<br />      lsr<br />      lsr<br />      lsr<br />      lsr<br />      sta speed_high<br /></div><br /><br />Is that the only way to do it?  You said use one byte, but really, it ended up using two.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=905">VanOccupanther</a> — Sat Oct 28, 2006 10:45 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2006-10-28T05:28:51-07:00</updated>
<published>2006-10-28T05:28:51-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=2305&amp;p=18905#p18905</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=2305&amp;p=18905#p18905"/>
<title type="html"><![CDATA[speeding up and slowing down]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=2305&amp;p=18905#p18905"><![CDATA[
No, I mean RAM, because the speed of projectiles is kept in RAM.<br />Only the speed of ennemies is kept in ROM, but they act just the same (they just are consant) in my game. But that all depdends of the game. But anyway I think it is easier to work with one single byte in most cases.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Sat Oct 28, 2006 5:28 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Memblers]]></name></author>
<updated>2006-10-28T03:52:30-07:00</updated>
<published>2006-10-28T03:52:30-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=2305&amp;p=18904#p18904</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=2305&amp;p=18904#p18904"/>
<title type="html"><![CDATA[speeding up and slowing down]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=2305&amp;p=18904#p18904"><![CDATA[
<div class="quotetitle">Bregalad wrote:</div><div class="quotecontent"><br />This will make you write a programm a little bit more complex, dealing with shifts and all, but save significant size of RAM arrays.<br /></div><br /><br />Do you mean ROM?  Because using a full 8-bits for the sub-pixel resolution still only requires one byte of RAM (unless you want the adjustable speeds in RAM. then you'll want a wider ranger of speeds anyways and it'll require 2 bytes, but I seriously doubt anyone would do that for much more than their main sprites).  I guess it depends on the type of game.  If you have a lot of individual objects, the extra processing for the shifts and stuff will really add up.  If you have fewer objects made up of several sprites that move together, it won't matter as much.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=10">Memblers</a> — Sat Oct 28, 2006 3:52 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2006-10-28T02:15:14-07:00</updated>
<published>2006-10-28T02:15:14-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=2305&amp;p=18899#p18899</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=2305&amp;p=18899#p18899"/>
<title type="html"><![CDATA[speeding up and slowing down]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=2305&amp;p=18899#p18899"><![CDATA[
Again, I prefer myself use only one byte for speed, and the high nyble is the integer part and the low nybble the fraction part.<br />You will never want to have something move less than 1/16th pixel per frame nor anything moving faster than 7+15/16th pixel per frame.<br />So :<br />$10 is move one pixel per frame forward<br />$18 is move one pixel and a half per frame forward<br />$e8 is the same speed as above, but backwards<br />etc...<br />You can also use the whole full 8-bits to allow to move up to 15+15/16th pixel per frame, and have a sign bit in a separate variable, I do that in my current game. (because when a monster is knocked back, I "cheat" and make it moving 15+15/16th pixel per frame for one frame, making them go back arround 16 pixels).<br />This will make you write a programm a little bit more complex, dealing with shifts and all, but save significant size of RAM arrays. Plus if you're new to the dev scene that will make you a good exercice, and it's nothing near impossible to deal with shifts.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Sat Oct 28, 2006 2:15 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Celius]]></name></author>
<updated>2006-10-27T19:11:56-07:00</updated>
<published>2006-10-27T19:11:56-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=2305&amp;p=18884#p18884</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=2305&amp;p=18884#p18884"/>
<title type="html"><![CDATA[speeding up and slowing down]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=2305&amp;p=18884#p18884"><![CDATA[
For anybody who's interested, I made a small, almost-user-friendly test ROM that allows you to change scrolling speed to a more adjustable one. I mean, you can make it scroll like 1.5 pixels per second if you want, or even something like $01.F1 if you really wanted to. It's just a demo that allows you to see how free you are in terms of scrolling speeds. You can get it here:<br /><br /><!-- w --><a class="postlink" href="http://www.freewebs.com/the_bott/ScrollSpeedTest.nes">www.freewebs.com/the_bott/ScrollSpeedTest.nes</a><!-- w --><br /><br />It's not quite complete as it should be. What you do is you are just adjusting each digit by pressing up and down, and to switch digits, press right or left. You start out being able to edit the last digit. So if you press up, you'll change the speed from 00.00 to 00.01. It's really easy to understand, the only problem is you don't want to press too far over on direction, because you'll start editing other sprite tile values instead of the ones on screen. I should have put a cursor in there to show you which digit you are editing, but I didn't, and if someone really wants me to do it (I highly doubt anyone cares that much), I will, I guess. Just fiddle around with values to see exactly how much freedom you are given with scroll speeds / sprite movement speeds.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=138">Celius</a> — Fri Oct 27, 2006 7:11 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[VanOccupanther]]></name></author>
<updated>2006-10-25T17:37:29-07:00</updated>
<published>2006-10-25T17:37:29-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=2305&amp;p=18838#p18838</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=2305&amp;p=18838#p18838"/>
<title type="html"><![CDATA[speeding up and slowing down]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=2305&amp;p=18838#p18838"><![CDATA[
That is interesting! Here is some code:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">Although machines often have efficient built-in instructions for performing arithmetic and logical operations, in fact all these operations can be performed just by combining the bitwise operators and zero-testing in various ways. For example, here is a pseudocode example showing how to multiply two arbitrary integers, a and b, using bit shift and addition:<br /><br /><br />c := 0<br />while b ≠ 0<br />    if &#40;b and 1&#41; ≠ 0<br />        c := c + a<br />    shift a left by one<br />    shift b right by one<br />return c<br /></div><br /><br />it's from the bottom of this page:<br /><!-- m --><a class="postlink" href="http://en.wikipedia.org/wiki/Bitwise_operation">http://en.wikipedia.org/wiki/Bitwise_operation</a><!-- m --><br /><br />It works great.  Now that the multiplication routine is working, can focus on the multiplying a word with a word in 8bit.   im going to try my best at it. (im pretty lost right now though)<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=905">VanOccupanther</a> — Wed Oct 25, 2006 5:37 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Bregalad]]></name></author>
<updated>2006-10-25T09:06:36-07:00</updated>
<published>2006-10-25T09:06:36-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=2305&amp;p=18829#p18829</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=2305&amp;p=18829#p18829"/>
<title type="html"><![CDATA[speeding up and slowing down]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=2305&amp;p=18829#p18829"><![CDATA[
You totally forget to add the carry to the high result AND to clear it before <em>each</em> low byte addition (you're clearing just before the first one, wich is wrong), wich will totally screw the whole thing.<br />Also, sucessive additions aren't the best way to multiply two variables.<br />Use bit shifts to do it faster, even if this is a bit confusing to do at first.<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">  lda #$00<br />  ldx #$08<br />- lsr num_0<br />  lsr A<br />  ror ProductL<br />  bcc +<br />  clc<br />  adc num_1<br />+ lsr num_1<br />  dex<br />  bne -<br />  sta ProductH</div><br />This will add the fraction of num_1 each time a bit in num_0 is set. Then the result (the accumulator) and the num_1 variable are shifted cause the next bit is more significant. This happens 8 times because this is a 8-bit multiply. If you'd stick with less bits, you could simplify this. Also I'm not 100% sure to have done it right, because it is a bit confusing, but such a thing (or something close to it) works perfectly and accurately, with constant execution time, and is considered better by most programmers.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=38">Bregalad</a> — Wed Oct 25, 2006 9:06 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[never-obsolete]]></name></author>
<updated>2006-10-24T19:10:03-07:00</updated>
<published>2006-10-24T19:10:03-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=2305&amp;p=18822#p18822</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=2305&amp;p=18822#p18822"/>
<title type="html"><![CDATA[speeding up and slowing down]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=2305&amp;p=18822#p18822"><![CDATA[
you should only add num_0 if the bit you are testing in num_1 is set.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">      ldx num_1<br />      lda num_0<br /><br />multiply_again:   dex<br />      beq multiply_end     ; this branch only succeds when X  == 0<br />      <br />      adc num_0          ; so num_0 will just keep being added to itself<br />      jmp multiply_again<br />      <br />multiply_end:   sta product<br /><br />      rts<br /></div><br /></div><br /><br />and also the carry is not being added to the high byte of the product.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=187">never-obsolete</a> — Tue Oct 24, 2006 7:10 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[VanOccupanther]]></name></author>
<updated>2006-10-24T16:03:59-07:00</updated>
<published>2006-10-24T16:03:59-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=2305&amp;p=18816#p18816</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=2305&amp;p=18816#p18816"/>
<title type="html"><![CDATA[speeding up and slowing down]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=2305&amp;p=18816#p18816"><![CDATA[
ok i am using it  <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" />  and it has bugs.  please help me.<br /><br />In my game the field is setup like a grid so that instead of adding the extra speed, you have to multiply it. <br />Here is my multiply code:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">multiply:   ;******<br />      ;must give num_0<br />      ;must give num_1<br />      ;<br />      ;answer will be stored in product and productd<br />      ;******<br /><br /><br />      ldx num_1<br />      lda num_0<br /><br />multiply_again:   dex<br />      beq multiply_end<br />      <br />      adc num_0<br />      jmp multiply_again<br />      <br />multiply_end:   sta product<br /><br />      rts</div><br /><br />It works fine multiplying small numbers.<br />and here is my speed up code:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">      ;**************<br />      ;   movement_speed start<br />      ;**************<br /><br />      <br />      lda y_portion_decimal<br />      sta num_0<br />      lda #&lt;m_s_bullet0<br />      sta num_1<br /><br />      clc<br />      jsr multiply<br /><br />      lda product<br />      sta bullettable+1   ;y_portion_decimal<br /><br />      lda y_portion<br />      sta num_0<br />      lda #&gt;m_s_bullet0<br />      sta num_1<br /><br />      jsr multiply<br /><br />      lda product<br />      sta look2<br />      sta bullettable      ;y_portion<br /><br />      lda x_portion_decimal<br />      sta num_0<br />      lda #&lt;m_s_bullet0<br />      sta num_1<br /><br />      clc<br />      jsr multiply<br /><br />      lda product<br />      sta bullettable+3   ;x_portion_decimal<br /><br />      lda x_portion<br />      sta num_0<br />      lda #&gt;m_s_bullet0<br />      sta num_1<br /><br />      jsr multiply<br /><br />      lda product<br />      <br />      sta bullettable+2   ;x_portion<br /><br /><br />      ;**************<br />      ;   movement_speed end<br />      ;**************<br /></div><br /><br />Now, the way i've multiplied the decimal number part and the whole number part, i think that's wrong because i worked out 2.3 times 4.5 on paper and it had lots of carries.  Big carries that increased the digit range by two.. (2.3 x 4.5 = 103.5)  So im not sure about multiplying, if it's correct or horribly wrong.  <br /><br />i still sometimes think the multiplying is correct because, when firing to the north west, the bullet goes really fast like normal.  But, firing to the south east makes the bullet go as fast as the ship (as fast as it was before the speeding up code).<br /><br />If the multiplying is wrong, im not sure what to do.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=905">VanOccupanther</a> — Tue Oct 24, 2006 4:03 pm</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[Memblers]]></name></author>
<updated>2006-10-23T05:25:25-07:00</updated>
<published>2006-10-23T05:25:25-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=2305&amp;p=18775#p18775</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=2305&amp;p=18775#p18775"/>
<title type="html"><![CDATA[speeding up and slowing down]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=2305&amp;p=18775#p18775"><![CDATA[
<div class="quotetitle">VanOccupanther wrote:</div><div class="quotecontent"><br />Can you please explain more about what x_position_lo and x_position_hi are? i may not use this, but i want to understand it.  <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /></div><br /><br />Use it!  A shooting (or any kind of) game with frame-based movement is limiting to design and horrible to play.  I know because I wrote one a long time ago, heheh.  You get 3 speeds, stopped, too fast (2 pixels/frame), or too slow (one pixel/frame).  Even doing the "wait X frames before moving X pixels" is pretty bad, and a major pain to code.<br /><br />Using this simple 16-bit fixed-point movement you get 256 usable speeds between each of those 3.  It's like Celius said, the sprite position itself can be a 16-bit number, but only the upper 8-bits are used on-screen.  And the movement speed too should be a 16-bit number, the lower 8-bits just accumulate and only affect the sprites on-screen position when it wraps-around and carries over.  No delays, you calculate the movement+position on every frame.<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=10">Memblers</a> — Mon Oct 23, 2006 5:25 am</p><hr />
]]></content>
</entry>
<entry>
<author><name><![CDATA[VanOccupanther]]></name></author>
<updated>2006-10-23T05:21:34-07:00</updated>
<published>2006-10-23T05:21:34-07:00</published>
<id>http://forums.nesdev.com/viewtopic.php?t=2305&amp;p=18774#p18774</id>
<link href="http://forums.nesdev.com/viewtopic.php?t=2305&amp;p=18774#p18774"/>
<title type="html"><![CDATA[speeding up and slowing down]]></title>

<content type="html" xml:base="http://forums.nesdev.com/viewtopic.php?t=2305&amp;p=18774#p18774"><![CDATA[
Yes, i understand now.  <img src="http://forums.nesdev.com/images/smilies/icon_smile.gif" alt=":)" title="Smile" />  Thank You very much!<p>Statistics: Posted by <a href="http://forums.nesdev.com/memberlist.php?mode=viewprofile&amp;u=905">VanOccupanther</a> — Mon Oct 23, 2006 5:21 am</p><hr />
]]></content>
</entry>
</feed>