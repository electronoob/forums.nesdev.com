<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - CPU/PPU timing</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">CPU/PPU timing</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=3&amp;t=10029">http://forums.nesdev.com/viewtopic.php?f=3&amp;t=10029</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>ulfalizer</b> [ Wed Apr 17, 2013 4:31 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>CPU/PPU timing</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Given that the exact master clock timing of stuff like reading and setting PPU flags isn't know, what model have other people here used in their emulators, and what has worked best in practice?<br /><br />One model would be to run three PPU ticks before every CPU tick and pretend that those PPU ticks took place during the CPU tick, i.e.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&#91;PPU TICK&#93;&#91;PPU TICK&#93;&#91;PPU TICK&#93; &lt;- Run these first<br />&#91;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; CPU TICK&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#93; &lt;- Then run this<br /></div><br /><br />One assumption you'd be making there is that a flag setting at e.g. the last PPU tick would be seen by the CPU tick (which could be e.g. a read).<br /><br />Lots of other models are possible too of course. Any input?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>James</b> [ Wed Apr 17, 2013 5:29 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: CPU/PPU timing</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">ulfalizer wrote:</div><div class="quotecontent"><div class="codetitle"><b>Code:</b></div><div class="codecontent">&#91;PPU TICK&#93;&#91;PPU TICK&#93;&#91;PPU TICK&#93; &lt;- Run these first<br />&#91;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; CPU TICK&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#93; &lt;- Then run this<br /></div></div><br />That's how I do it and it works well.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>beannaich</b> [ Wed Apr 17, 2013 5:34 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: CPU/PPU timing</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="codetitle"><b>Code:</b></div><div class="codecontent">ppu.Update(6); // run for 6 master cycles<br />byte data = Read(address); // read from address, possibly a PPU register<br />ppu.Update(6); // run for another 6 master cycles<br /></div><br /><br />Technically this shouldn't matter, you have a periodic execution, in which x dots are run before the cpu, and 3-x dots are run after. I have found that using the above allowed me to pass some tests I didn't before.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>WedNESday</b> [ Wed Apr 17, 2013 1:14 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: CPU/PPU timing</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />1 CPU cycle then 3 PPU cycles for me. Never had any problems.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>x0000</b> [ Fri Apr 19, 2013 4:13 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: CPU/PPU timing</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I have something like this:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&#91;ppu&#93;&#91;ppu&#93;&#91;ppu&#93;<br />-----++++++++++<br />&#91;&nbsp; &nbsp; &nbsp;cpu&nbsp; &nbsp; &nbsp;&#93;<br /></div><br />(&quot;+&quot; is where write/read is effective)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>ulfalizer</b> [ Sat Apr 20, 2013 3:16 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: CPU/PPU timing</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Would be really nice if someone with a logic analyzer could do some timing. As it stands right now there's a lot of guesswork and fudging involved.  <img src="./images/smilies/icon_neutral.gif" alt=":|" title="Neutral" /><br /><br />By looking at the PPU VRAM accesses you could figure out where you are (e.g. in ppu.svg). The CPU/PPU master clock alignment (0-3) could be figured out by looking at M2 (goes low when CPU tick starts) and ALE (goes high at the beginning of a PPU VRAM fetch). You could then see what happens when you read different flags (VBL stuff/sprite zero stuff/etc.) at different offsets.<br /><br />By trying out different alignments you could nail down the behavior down to starting the read at master clock n, which would cover everything you'd ever need to know.<br /><br />For reference (for anyone joining from <!-- l --><a class="postlink-local" href="http://forums.nesdev.com/viewtopic.php?f=9&amp;t=10037">viewtopic.php?f=9&amp;t=10037</a><!-- l -->), see e.g. <!-- m --><a class="postlink" href="http://wiki.nesdev.com/w/index.php/PPU_frame_timing#VBL_Flag_Timing">http://wiki.nesdev.com/w/index.php/PPU_ ... lag_Timing</a><!-- m --> . A PPU timing diagram can be found in <!-- m --><a class="postlink" href="http://wiki.nesdev.com/w/images/d/d1/Ntsc_timing.png">http://wiki.nesdev.com/w/images/d/d1/Ntsc_timing.png</a><!-- m -->. Please ask if you have questions, since I realize what needs to be done might be a bit vague.  <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /><br />Edit: ALE correction.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Sat Apr 20, 2013 6:54 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: CPU/PPU timing</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I've got a saleae logic (8 channel, 24MS/s); what do you want measured?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>HardWareMan</b> [ Sun Apr 21, 2013 1:33 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: CPU/PPU timing</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />8 channel not enough. Look here:<br /><a href="http://savepic.ru/3223654.png" class="postlink"><img src="http://savepic.ru/3223654m.png" alt="Image" /></a><br /><a href="http://savepic.ru/3224678.png" class="postlink"><img src="http://savepic.ru/3224678m.png" alt="Image" /></a><br /><a href="http://savepic.ru/3213414.png" class="postlink"><img src="http://savepic.ru/3213414m.png" alt="Image" /></a><br />Need more channels.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>ulfalizer</b> [ Sun Apr 21, 2013 5:36 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: CPU/PPU timing</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">HardWareMan wrote:</div><div class="quotecontent">Need more channels.</div><br /><br />Looking at A12/A13 like some mappers do might be sufficient. That lets you tell nametable and tile fetches apart.<br /><br />The basic idea would be to run some test program like the following:<br /><br /><ol style="list-style-type: decimal"><li>Do whatever simple setup stuff is needed (e.g. <!-- m --><a class="postlink" href="http://wiki.nesdev.com/w/index.php/PPU_power_up_state">http://wiki.nesdev.com/w/index.php/PPU_power_up_state</a><!-- m -->, Best Practice section).</li><li>Wait an adjustable amount of time using e.g. some time-wasting loops.</li><li>Read the register under investigation and see what happens (what value you get back, and what special behavior triggers for e.g. VBL).</li></ol><br />By looking at the PPU and CPU trace in the logic analyzer, you could then figure out where the read started relative to the PPU (e.g. &quot;n master clock ticks after &lt;some convenient PPU event that's easy to track down&gt;&quot;). At this point you would know exactly where the read started and what behavior that triggered, which is what you want to know.<br /><br />Would the above approach be feasible? Can you think of any simplifications? A good first target would be to nail down where the VBL flag ($2002:7) starts reading as true. (NMI behavior could be tracked down later.)<br /><br /><em>BTW, just to clarify:</em><br /><br />Since the PPU divides the master clock by 4 while the CPU uses it divided by 12, there's four different relative master clock alignments possible, where you get one at random during reset:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">* * * * * * * * * * * * * &lt;- Master clock<br />-----------CPU----------- &lt;- CPU cycle<br />---PPU---&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;- Alignment 1<br />&nbsp; ---PPU---&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;- Alignment 2<br />&nbsp; &nbsp; ---PPU---&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;- Alignment 3<br />&nbsp; &nbsp; &nbsp; ---PPU---&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&lt;- Alignment 4</div><br /><br />Hence by adjusting the wait time and resetting a few times you could nail the behavior down to the master clock.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Sun Apr 21, 2013 8:41 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: CPU/PPU timing</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />It's possible in software to detect which of these four alignments the NES powered/reset into. So we just need to figure out the alignments in terms of CPU cycles and PPU dots. The problem I ran into was that neither clock is directly available, hence me using the CPU's M2 and the PPU's ALE.<br /><br />Once that is figured out, then we can figure out where the /NMI occurs relative to my methods of synchronizing the CPU to it, which will then tell us all the timings of my tests at the hardware level. From there, it can all be done in software. We would have enough information to make tests that prompt the user to press reset possibly multiple times until it detects the proper alignment, then runs whatever test. So in code we could software test PPU events down to the master clock.<br /><br /><br /><strong>[Edited for <a href="http://forums.nesdev.com/viewtopic.php?p=69003#p69003" class="postlink">clock/dot/cycle precision</a> --Layne's Fairy]</strong>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>ulfalizer</b> [ Sun Apr 21, 2013 9:38 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: CPU/PPU timing</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">blargg wrote:</div><div class="quotecontent">It's possible in software to detect which of these four alignments the NES powered/reset into. So we just need to figure out the alignments in terms of CPU and PPU clocks. The problem I ran into was that neither clock is directly available, hence me using the CPU's M2 and the PPU's ALE.</div><br /><br />Out of curiosity, how do you do this? Do you just mean in the sense that you get four different behaviors that can be detected but don't know the precise alignments they correspond to?<br /><br /><div class="quotetitle">blargg wrote:</div><div class="quotecontent">Once that is figured out, then we can figure out where the /NMI occurs relative to my methods of synchronizing the CPU to it, which will then tell us all the timings of my tests at the hardware level. From there, it can all be done in software. We would have enough information to make tests that prompt the user to press reset possibly multiple times until it detects the proper alignment, then runs whatever test. So in code we could software test PPU events down to the PPU cycle (actually, down to the master cycle).</div><br /><br />Not sure if I'm getting this. Do you mean something like the following?<br /><br /><ol style="list-style-type: decimal"><li>Figure out the precise CPU/PPU alignments the four possibilities correspond to with a logic analyzer.</li><li>Make a test that detects which alignment it's in and then times where different things happen.</li><li>Combine (1) and (2) to figure out the behavior at the master clock level.</li></ol><br />Are you sure it's just four alignments by the way? Maybe the PPU can start n ticks before/after the CPU as well, and the tests still pass if they use relative timings. <img src="./images/smilies/icon_confused.gif" alt=":?" title="Confused" /><br />But maybe it won't matter...

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Sun Apr 21, 2013 11:52 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: CPU/PPU timing</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">ulfalizer wrote:</div><div class="quotecontent"><div class="quotetitle">blargg wrote:</div><div class="quotecontent">It's possible in software to detect which of these four alignments the NES powered/reset into. [...]</div><br />Out of curiosity, how do you do this? Do you just mean in the sense that you get four different behaviors that can be detected but don't know the precise alignments they correspond to?</div><br />Right. Before I tested with a scope recently, I knew the signatures of the four, and had them in what turns out correct order, based on the way more events would occur earlier in one direction, and more later in the other.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"><div class="quotetitle">blargg wrote:</div><div class="quotecontent">Once that is figured out, then we can figure out where the /NMI occurs relative to my methods of synchronizing the CPU to it, which will then tell us all the timings of my tests at the hardware level. From there, it can all be done in software. We would have enough information to make tests that prompt the user to press reset possibly multiple times until it detects the proper alignment, then runs whatever test. So in code we could software test PPU events down to the PPU cycle (actually, down to the master cycle).</div><br /><br />Not sure if I'm getting this. Do you mean something like the following?<br /><br /><ol style="list-style-type: decimal"><li>Figure out the precise CPU/PPU alignments the four possibilities correspond to with a logic analyzer.</li><li>Make a test that detects which alignment it's in and then times where different things happen.</li><li>Combine (1) and (2) to figure out the behavior at the master clock level.</li></ol></div><br />Yeah. By prompting the user to press reset until the correct alignment is reached, the test program can, under its own control, initiate a CPU read or write at any point in the PPU frame, to <em>master clock</em> accuracy.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Are you sure it's just four alignments by the way? Maybe the PPU can start n ticks before/after the CPU as well, and the tests still pass if they use relative timings. <img src="./images/smilies/icon_confused.gif" alt=":?" title="Confused" /><br />But maybe it won't matter...</div><br />It can't be more. The CPU and PPU run off (AFAIK) the same edge of the master clock (PPU's color uses both edges, but that's separate). The CPU divides by 12, the PPU 4. Using previous terminology, cycle = CPU, dot = PPU. So you get three whole dots per cycle. There are only four different alignments of this, based on the PPU's divide-by-4.<br /><br />Going to the entire frame, the PPU's frame is never a multiple of 3 dots, so every frame the alignment of the frame itself to a cycle shifts. This ensures that it doesn't matter what alignment a cycle to a frame has at power. If every frame were a multiple of 3 dots, then yes, you'd have 12 different alignments, corresponding to the CPU's divide-by-12.<br /><br />And of course this is NTSC. According to the Wiki, PAL frame length's fraction is half a CPU cycle, and CPU divider is 16, so there are potentially 8 different CPU-frame alignments at power/reset.<br /><br />To clarify about alignments, we have two different kinds. One, a cycle relative to a dot (not any particular one in the frame). The other, a cycle relative to the first dot of the frame. And of alignment, there are (obviously) various ones for each dot, since the CPU and PPU run at different rates. Of all the different possible alignments, for a given length of operation after power/reset, only a subset can ever be encountered. I take the topic to be talking about the number of distinct subsets. For an NTSC, there are four of these, both for cycle-dot alignment and cycle-frame alignment. For PAL, my calculation above suggests one cycle-dot alignment and 8 cycle-frame alignments.<br /><br />Yet another way of putting the concept is that the relative synchronization of the CPU, PPU, and frame dividers reliably generates a random value at power/reset and preserves it during operation, regardless of what the CPU does (enable/disable rendering, whatever). On NTSC, this value has four states, and on PAL, eight states.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>HardWareMan</b> [ Sun Apr 21, 2013 7:40 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: CPU/PPU timing</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />In famiclone PPU reset are tied to VCC. So, reset button did not affect to PPU. But what if PPU reset will be connected to CPU reset? Will it do some sort of syncronization (PPU render are off when PPU reset is active)?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>ulfalizer</b> [ Mon Apr 22, 2013 1:28 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: CPU/PPU timing</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">blargg wrote:</div><div class="quotecontent">It can't be more. The CPU and PPU run off (AFAIK) the same edge of the master clock (PPU's color uses both edges, but that's separate). The CPU divides by 12, the PPU 4. Using previous terminology, cycle = CPU, dot = PPU. So you get three whole dots per cycle. There are only four different alignments of this, based on the PPU's divide-by-4.</div><br /><br />I was thinking in the sense that the time between the CPU and PPU running their first tick might be longer than a PPU tick, e.g.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">* * * * * * * * * * * * * * *... (Master)<br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ---------CPU-----... (First CPU tick)<br />---PPU---...&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;(First PPU tick)&nbsp; </div><br /><br />Edit: I realize this wouldn't affect the possible alignments, but it would affect your knowledge if where you are relative to the frame.<br /><br />But maybe that's a stupid idea. Were the behaviors for the different alignments derived by waiting a variable amount after power-on before doing the read? What causes the alignment at power-on to be nondeterministic anyway?<br /><br />If I'm thinking straight, you'd need to at least have some point where you can say with confidence that a particular CPU tick starts at a particular master clock offset within the frame. Once you have that you could do the rest in SW.<br /><br />Edit: I guess you could do the wait-29781-CPU-ticks-to-advance-frame-alignment-by-one-PPU-tick trick, and see how frames (PPU ticks) it takes before stuff happens. Was that what you did?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>ulfalizer</b> [ Mon Apr 22, 2013 1:43 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: CPU/PPU timing</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />@blargg: <br />Since you've obviously thought this through more than me, what information would you need from a logic analyzer btw?

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>