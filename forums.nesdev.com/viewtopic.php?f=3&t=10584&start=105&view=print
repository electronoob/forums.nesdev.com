<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Original Mario Bros bug on my emulator?</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Original Mario Bros bug on my emulator?</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=3&amp;t=10584">http://forums.nesdev.com/viewtopic.php?f=3&amp;t=10584</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>8</strong> of <strong>10</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>ulfalizer</b> [ Mon Oct 21, 2013 9:00 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Original Mario Bros bug on my emulator?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Yeah, you need to keep your target system in mind. At least the case of running several instances is embarrassingly parallel though, so if your emulator is single-threaded you can scale it up to at least the number of available cores (just experimented with 10 or so instances, and they ran fine until X11 decided to crash <img src="./images/smilies/icon_razz.gif" alt=":P" title="Razz" />).<br /><br />Guess issues like memory contention might come in too, but seemed to work fine in practice in this case. Prolly shouldn't have a huge cache footprint...

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Mon Oct 21, 2013 11:25 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Original Mario Bros bug on my emulator?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">ArsonIzer wrote:</div><div class="quotecontent">As a separate query: Let's take the ADC instruction using Zero page which is supposed to take 3 cycles. The 3 cycles do: Fetch opcode, fetch address and then fetch data from the address and doing the actual addition. On every one of these actions, I'm supposed to let the PPU cycle 3 times to achieve good accuracy (leaving out the APU for now)?</div><br />It's not a question of accuracy, but of implementation difficulty and efficiency. If you run the PPU three dots every CPU cycle, you don't have to worry about what the CPU or PPU is doing; they stay in sync and the program structure is trivial.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>ArsonIzer</b> [ Mon Oct 21, 2013 12:32 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Original Mario Bros bug on my emulator?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I do want to eventually port my emulator to my Android phone (which is a 3+ year old HTC Legend with a 600mhz ARM 11 processor), and I want to be able to make it work full speed, but that is still a distant goal. For now, I just want a working, accurate emulator which runs decently on my core i7 laptop. I suppose I'll go implement the cycle-accurate CPU/PPU for now, and if that fixes the Mario Bros problem and the graphical glitches I'm having with a lot of games right now, I'll be happy for a long time (the time it takes to implement the APU, which I'm barely looking forward to <img src="./images/smilies/icon_sad.gif" alt=":(" title="Sad" />) <br /><br />Anyway, thanks a lot for the help and input guys. I can't imagine not being able to ask these questions and still move forward <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>WedNESday</b> [ Mon Oct 21, 2013 2:57 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Original Mario Bros bug on my emulator?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />When I first started to write WedNESday back in late 2003 performance was a really big issue back then. Hardly anyone could run Nintendulator and it is only until this year that I actually rewrote the 6502 core for readability and size instead of performance.<br /><br />To be honest its such a huge waste of time to base any emulator on performance as in 3-4 years even the most demanding of emulators suddenly becomes normal.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>ArsonIzer</b> [ Mon Oct 21, 2013 3:16 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Original Mario Bros bug on my emulator?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">WedNESday wrote:</div><div class="quotecontent">When I first started to write WedNESday back in late 2003 performance was a really big issue back then. Hardly anyone could run Nintendulator and it is only until this year that I actually rewrote the 6502 core for readability and size instead of performance.<br /><br />To be honest its such a huge waste of time to base any emulator on performance as in 3-4 years even the most demanding of emulators suddenly becomes normal.</div><br /><br />Yup, for now it's indeed not an issue, since I'm at least running it on a 2 Ghz core i7, but like I said before, eventually it's going to be my intention to make it run on a 500 Mhz ARM 11, which will probably require some optimization. This, however, is still in the future, and I don't think any optimizations will be necessary for at least another 6 months (if I'm really fast with the APU and mappers). Other than that, I have to ask, freaking 2003? Damn, that's a long time. Back then I was still a careless, annoying kid (might still be that <img src="./images/smilies/icon_biggrin.gif" alt=":D" title="Very Happy" />). The NES is just a gateway for me though. I probably won't be keeping myself busy with the NES for more than 2 years or so for progression purposes. Do you guys have other, more advanced emulators you work on (SNES, GB(A), X86, PS1, etc) or are you really just stuck in the NES scene?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>lidnariq</b> [ Mon Oct 21, 2013 3:18 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Original Mario Bros bug on my emulator?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The ability to apply Moore's law to raw cpu speed has long since disappeared. Transistors density and count has continued to rise, and even get more efficient, but algorithmic improvements are far more effective at saving power than just waiting for Intel to fix it for you. Don't throw away an optimized version unless it's getting in the way of correctness.<br /><br />TL;DR: Targeting a device with a battery? You darn well better optimize.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>ulfalizer</b> [ Sat Nov 30, 2013 3:15 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Original Mario Bros bug on my emulator?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Hadn't actually tried running the emulator as fast as possible in a while, and it seems to manage 7-8x speed on one core despite ~37% CPU usage being reported for 1x.<br /><br />So yeah, complicated prediction and catch-up might have gotten pretty moot for modern desktop systems. <img src="./images/smilies/icon_neutral.gif" alt=":|" title="Neutral" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>ArsonIzer</b> [ Sun Dec 01, 2013 5:19 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Original Mario Bros bug on my emulator?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">ulfalizer wrote:</div><div class="quotecontent">Hadn't actually tried running the emulator as fast as possible in a while, and it seems to manage 7-8x speed on one core despite ~37% CPU usage being reported for 1x.<br /><br />So yeah, complicated prediction and catch-up might have gotten pretty moot for modern desktop systems. <img src="./images/smilies/icon_neutral.gif" alt=":|" title="Neutral" /></div><br /><br />Currently I've implemented semi-cycle-accurate background drawing (does most things cycle accurate, but draws a tile sliver every 8 cycles rather than 1 pixel every single cycle), and I'm implementing the sprites as we speak, but even with unfinished rendering, no audio, no controllers and no complicated modern emulator functions, it requires ~145 - 165 ms to draw 60 frames in SMB, i.e. I can at most run it 6 - 7x the normal speed, even though it's less than half finished. Does the APU use a lot of resources compared to the CPU/PPU (in general that is)? I fear that it's going to slow down much more when I've &quot;fully&quot; implemented all the components, in which case optimization will definitely be required.<br /><br />I'm running it on a laptop with 2.00 Ghz i7, GeForce GT540M (if the GPU is of any relevance). No fancy threading. Using Java 1.7.<br /><br />What kind of optimizations have you implemented, and on what processor are you running it?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>ulfalizer</b> [ Sun Dec 01, 2013 6:58 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Original Mario Bros bug on my emulator?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">ArsonIzer wrote:</div><div class="quotecontent"><div class="quotetitle">ulfalizer wrote:</div><div class="quotecontent">Hadn't actually tried running the emulator as fast as possible in a while, and it seems to manage 7-8x speed on one core despite ~37% CPU usage being reported for 1x.<br /><br />So yeah, complicated prediction and catch-up might have gotten pretty moot for modern desktop systems. <img src="./images/smilies/icon_neutral.gif" alt=":|" title="Neutral" /></div><br /><br />Currently I've implemented semi-cycle-accurate background drawing (does most things cycle accurate, but draws a tile sliver every 8 cycles rather than 1 pixel every single cycle), and I'm implementing the sprites as we speak, but even with unfinished rendering, no audio, no controllers and no complicated modern emulator functions, it requires ~145 - 165 ms to draw 60 frames in SMB, i.e. I can at most run it 6 - 7x the normal speed, even though it's less than half finished. Does the APU use a lot of resources compared to the CPU/PPU (in general that is)? I fear that it's going to slow down much more when I've &quot;fully&quot; implemented all the components, in which case optimization will definitely be required.<br /><br />I'm running it on a laptop with 2.00 Ghz i7, GeForce GT540M (if the GPU is of any relevance). No fancy threading. Using Java 1.7.<br /><br />What kind of optimizations have you implemented, and on what processor are you running it?</div><br /><br />I'm using a 2600K Core i7 @ 3.4 Ghz.<br /><br />APU should be much cheaper than PPU. You'll mostly have a few down counters for the different channels that tick the channel and get reloaded with the period when they reach zero. The frame counter could also use a down counter, though it's still a switch in my code (downcounterification seems to be a good optimization strategy in many instances <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />). The most important optimization for me was using a <strong>channel_updated</strong> flag and only doing mixing when the output level on one of the channels changes (could be viewed as caching the output level). That brought the APU's share of the runtime down to about 5% from 15% (with both cases using a LUT for non-linear mixing). I suspect the frame counter accounts for a sizeable chunk of what remains.<br /><br />Here's three random optimizations for the PPU off the top of my head. Not sure how much they help, but it's something concrete at least. You should profile and check where time is being spent first.<br /><br /><ol style="list-style-type: decimal"><li>Store $2001:0 (grayscale) directly as a mask that you AND the color by instead of using a conditional. 0x30 means grayscale on, 0x3F grayscale off.</li><li>When the leftmost 8 BG pixels are hidden, set a variable <strong>bg_clip_comp</strong> to 8. When the background is disabled, set it to 256. Otherwise, set it to 0. That way you can check whether the current BG pixel is hidden with a single <em>if (pixel &lt; bg_clip_comp)</em> conditional. A similar optimization is possible for sprite pixels.</li><li>For palette writes, do mirroring by actually writing the mirrored values. The palette is read way more often than it's written, so not having to do mirroring when reading it helps a bit.</li></ol><br />In general, try to move stuff off the hot path (tick_ppu()) where possible, and micro-optimize it a bit otherwise.<br /><br />Should say that I assumed C/C++ when talking about performance btw. Not sure if you can get away with the lazy approach as easily in higher-level languages like Java. 6-7x doesn't seem too bad for a first stab though.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>ulfalizer</b> [ Sun Dec 01, 2013 7:43 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Original Mario Bros bug on my emulator?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The overhead of the non-emulation parts seems negligible in comparison by the way. Rewinding is just copying a few megs worth of data per second at most - most of it in contiguous chunks - which is nothing on a modern system. Should be very cheap even if some compression is added.<br /><br />Stuff like hardware scaling is nice to have though. Would want 3D-accelerated rendering and shaders for fancy effects anyway.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>ArsonIzer</b> [ Mon Dec 09, 2013 4:56 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Original Mario Bros bug on my emulator?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />6 - 7x at the 4th CPU stab, and 2nd PPU stab, although this might be the first time I get them working this decently. I've got most of the rendering working right now, but many games still show rendering defects, like Skate or Die which has (what I assume are) random tiles just drawn as black instead of their original colors, or Battletoads which is completely messed up to say the least. I guess I need absolute cycle-precision. Anyway, I mainly need optimizations to be able to run it on a 600 Mhz ARM in the end. I wonder how far I'll get it working on such a slow processor with cycle-precise rendering. I don't think micro-optimizations will have a major impact on that.<br /><br />PS: After a complete rewrite, the Mario Bros bug still remains <img src="./images/smilies/icon_sad.gif" alt=":(" title="Sad" /> Does Mario Bros use any non-basic PPU functionality like sprite 0 hit?<br /><br />PPS: Does anyone know why the Wiki says that Marble Madness is a tricky game to emulate because it switches <strong>CHR</strong> banks mid-scanline? As far as I know, AxROM doesn't switch CHR banks but rather PRG banks.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Mon Dec 09, 2013 9:03 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Original Mario Bros bug on my emulator?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">ArsonIzer wrote:</div><div class="quotecontent">Anyway, I mainly need optimizations to be able to run it on a 600 Mhz ARM in the end.</div><br />PocketNES, which offloads tile and sprite rendering to the Game Boy Advance PPU, runs on a 16.8 MHz ARM.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Does anyone know why the Wiki says that Marble Madness is a tricky game to emulate because it switches <strong>CHR</strong> banks mid-scanline? As far as I know, AxROM doesn't switch CHR banks but rather PRG banks.</div><br />Even without mapper control of the CHR address, it's still possible to use PPU port $2000 to switch the background between $0000-$0FFF and $1000-$1FFF.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>WedNESday</b> [ Mon Dec 09, 2013 9:40 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Original Mario Bros bug on my emulator?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">ArsonIzer wrote:</div><div class="quotecontent">PS: After a complete rewrite, the Mario Bros bug still remains <img src="./images/smilies/icon_sad.gif" alt=":(" title="Sad" /> Does Mario Bros use any non-basic PPU functionality like sprite 0 hit?</div><br /><br />Could you just give us an update of what is different from the 1st post of this thread? (so that we know what changes you have made so that we can have a better idea of what the problem is)<br /><br />Incorrect SBC for Mario Bros. removes all collision detection. Is sprite RAM being effected by your controller input somehow?<br /><br />There is no Sprite 0 hit detection on Mario Bros.. This is a blatant CPU problem IMO. Could you post the CPU source?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>ArsonIzer</b> [ Mon Dec 09, 2013 11:21 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Original Mario Bros bug on my emulator?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent"> PocketNES, which offloads tile and sprite rendering to the Game Boy Advance PPU, runs on a 16.8 MHz ARM. </div><br /><br />Oh... that is quite efficient then, but that also makes many of the optimizations to emulators almost unnecessary for target CPUs of 100+ Mhz, unless it's just for the sake of creating optimizations. Then again, I have an NES emulator on my Playstation Portable which typically runs on a 222 Mhz MIPS CPU, so I don't know why I was worrying in the first place.<br /><br /><div class="quotetitle">tepples wrote:</div><div class="quotecontent"> Even without mapper control of the CHR address, it's still possible to use PPU port $2000 to switch the background between $0000-$0FFF and $1000-$1FFF.</div><br /><br />Ah, that kind of CHR bank switching. I thought the kind which, for instance, the UxROM mappers do when a value is written to the cartridge board, where they actually switch between active PRG ROM banks.<br /><br /><div class="quotetitle">WedNESday wrote:</div><div class="quotecontent"> Could you just give us an update of what is different from the 1st post of this thread? (so that we know what changes you have made so that we can have a better idea of what the problem is)<br /><br />Incorrect SBC for Mario Bros. removes all collision detection. Is sprite RAM being effected by your controller input somehow?<br /><br />There is no Sprite 0 hit detection on Mario Bros.. This is a blatant CPU problem IMO. Could you post the CPU source? </div><br /><br />1. Not much. I just rewrote the code so that it used less objects and just basically looked at the documentation, wrote as I saw fit, and checked with some other (working) emulator sources whether my implementation looked correct.<br /><br />2. My controller input doesn't touch anything but memory address $4016, so I no, it doesn't. I don't get why this is the one game not functioning control-wise.<br /><br />3. I'm messing around with the source code right now (implemented some things a bit dirty with how I'm handling reads/writes which invoke the PPU), but I'll post it as soon as I'm done refactoring some messy code.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>ArsonIzer</b> [ Mon Dec 09, 2013 1:00 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Original Mario Bros bug on my emulator?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Okay, so here's my CPU source (<!-- m --><a class="postlink" href="http://codepad.org/42q4YS5s">http://codepad.org/42q4YS5s</a><!-- m -->). Couple of things you might want to know: <br /><br />1. I know, excessive commenting, but that's simply so I can remember stuff more easily.<br /><br />2. <strong>static final</strong> variables are basically the constants of Java.<br /><br />3. Methods with an underscore at the start (i.e. _read _write _push _pull) invoke the PPU's cycle method 3x, implying 1 CPU cycle has passed. Methods with the same name but with no underscore (i.e. read write push pull) don't invoke the PPU.<br /><br />4. The code is in Java, not C++, although the paste site does say C++.<br /><br />5. I have no cycle counter yet, I just invoke the PPU's cycle method 3 times every cycle, so I don't actually need to count cycles (yet).<br /><br />6. I have no IRQ implementation yet.<br /><br />7. The code looks a lot like that of HalfNES (another Java NES emulator), mainly because I took the layout from there after having written 3 crappy and (IMO) badly structured CPU cores. Also whenever I was doubting a certain implementation aspect, HalfNES would be one of the emulators I'd look at immediately.<br /><br />I'll hear it if anything else needs to be said. Thanks in advance guys.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>8</strong> of <strong>10</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>