<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Converting programs into machine code: some pointers please</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Converting programs into machine code: some pointers please</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=10&amp;t=3883">http://forums.nesdev.com/viewtopic.php?f=10&amp;t=3883</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Laserbeak43</b> [ Fri Feb 08, 2008 8:15 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Converting programs into machine code: some pointers please</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Hi there,
<br />taking the 6502 simulator tutorials, and after ex02 it tells me to convert the program into machine code myself and then compare it to what 6502 simulator outputs, but i'm not sure how to see what it does output.
<br />
<br />anywhay, here's the code:
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">; Program to add two 16 bit numbers<br />; The numbers being added are $0194 and $01BA<br />; Add1601.65s<br /><br />&nbsp; &nbsp;.ORG $0200 &nbsp; &nbsp;; store machine code starting here<br />&nbsp; &nbsp;<br />&nbsp; &nbsp;LDA #$94&nbsp; &nbsp;; Store least significant end of number 1 in first<br />&nbsp; &nbsp;STA no1+0&nbsp; &nbsp;; byte labelled no1<br />&nbsp; &nbsp;LDA #$01&nbsp; &nbsp;; Store MSB end of number 1 in next byte<br />&nbsp; &nbsp;STA no1+1&nbsp; &nbsp;; after the one labeled no1<br />&nbsp; &nbsp;<br />&nbsp; &nbsp;LDA #$BA&nbsp; &nbsp;; Store littel end of number 2 in first<br />&nbsp; &nbsp;STA no2+0&nbsp; &nbsp;; byte labelled no2<br />&nbsp; &nbsp;LDA #$01&nbsp; &nbsp;; Store MSB of number 2 in the next byte after<br />&nbsp; &nbsp;STA no2+1&nbsp; &nbsp;; the one labeled no2<br />&nbsp; &nbsp;<br />&nbsp; &nbsp;CLC&nbsp; &nbsp;&nbsp; &nbsp;; Clear the carry flag<br />&nbsp; &nbsp;LDA no1+0&nbsp; &nbsp;; load LSB of number 1 into accumulator register<br />&nbsp; &nbsp;ADC no2+0&nbsp; &nbsp;; Add with carry the little end of number 2<br />&nbsp; &nbsp;STA res+0&nbsp; &nbsp;; Store the LSB of the result in a byte labelled res<br />&nbsp; &nbsp;LDA no1+1&nbsp; &nbsp;; Load big end of number 1 into accumulator<br />&nbsp; &nbsp;ADC no2+1&nbsp; &nbsp;; Add with carry the big end of number 2<br />&nbsp; &nbsp;STA res+1&nbsp; &nbsp;; Store the MSB of the result into the byte<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;; following the one labeled res<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;<br />&nbsp; &nbsp;BRK&nbsp; &nbsp;&nbsp; &nbsp;; stop running the program<br />&nbsp; &nbsp;<br />no1:&nbsp; &nbsp;.DW $0000&nbsp; &nbsp;; The .DW directive instructs the assembler to<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;; &nbsp; &nbsp;reserver one word&#40;16 bits&#41;<br />no2:&nbsp; &nbsp;.DW $0000&nbsp; &nbsp;;&nbsp; &nbsp;of memory, and allows the programmer to<br />&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;;&nbsp; &nbsp;refer to it by using a label<br />res:&nbsp; &nbsp;.DW $0000&nbsp; &nbsp;; This is how you declare variables</div>
<br />
<br />i can find the opcodes with the help of <a href="http://www.6502.org/tutorials/6502opcodes.html" class="postlink">this text</a> (thanks B00daw), but other than that, i'm not too sure i can make sense of most of it besides the addresses. well not enough to convert it to machine code.
<br />what do i do? and how do i check it on 6502 simulator?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Disch</b> [ Sat Feb 09, 2008 7:34 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Machine code has 1 byte for the opcode, followed by 0-2 bytes for the operand (exactly how many depends on the addressing mode of the instruction).  2-byte addresses are stored low-byte first.
<br />
<br />Variable names and labels all get converted to raw addresses.  Since your variable definitions follow your code, code is 40 bytes long, and is .org'd at $0200 --- 'no1' would be $0228, 'no2' would be $022A, and 'res' would be $022C.
<br />
<br />That said... here's some machine code as an example.  Compare to that opcode list to see how it works:
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">A9 94&nbsp; &nbsp; &#40;LDA #$94&#41;<br />8D 28 02 &#40;STA no1+0&#41;<br />A9 01&nbsp; &nbsp; &#40;LDA #$01&#41;<br />8D 29 02 &#40;STA no1+1&#41;<br />A9 BA&nbsp; &nbsp; &#40;LDA #BA&#41;<br />8D 2A 02 &#40;STA no2+0&#41;<br />... etc<br /></div><br /><br />of course it's all mashed together in a binary, and not seperated by neat newlines... so it'd really look like:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">A9 94 8D 28 02 A9 01 8D 29 02 A9 BA 8D 2A 02<br /></div>
<br />
<br />I should also point out that this code would not work as you'd expect on an NES because $0200 is RAM on the NES -- and you can't assemble directly to RAM.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Sat Feb 09, 2008 7:40 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Best way to learn machine code is to run a disassembler on some code, perhaps something you wrote and assembled. Be sure it prints the raw hex to the left of the disassembly.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sat Feb 09, 2008 10:35 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Disch wrote:</div><div class="quotecontent">you can't assemble directly to RAM.</div><br />Tell that to anyone who ever programmed an FDS game, a multicart menu, or anything that runs on an Apple II, C=64, or Atari computer. Running code from RAM is as easy as 1-2-3:<br /><ol style="list-style-type: decimal"><li>Tell the linker to put a code segment in RAM. </li><li>In the init code (running in ROM or in the operating system), copy the segment to RAM. </li><li>Jump there. </li></ol>The source code of the <a href="http://nesdev.com/bbs/viewtopic.php?t=3087" class="postlink">"Forbidden Four" multicart's menu</a> demonstrates one way to set this up on the NES with CA65 and LD65.<br /><br /><div class="quotetitle">blargg wrote:</div><div class="quotecontent">Best way to learn machine code is to run a disassembler on some code, perhaps something you wrote and assembled.</div>
<br />Such as the machine-level debugger in Nintendulator or one of the FCE Ultra variants.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Laserbeak43</b> [ Sat Feb 09, 2008 1:02 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />oh so that's what a disassmebler's for!! thanks guys <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />
<br />
<br />thanks for those tips Disch, that will surely come in handy

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Disch</b> [ Sat Feb 09, 2008 3:33 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">Tell that to anyone who ever programmed an FDS game, a multicart menu, or anything that runs on an Apple II, C=64, or Atari computer. Running code from RAM is as easy as 1-2-3:</div>
<br />
<br />Blah.  You know what I meant.
<br />
<br />If you going to get overly technical and nitpick on me:
<br />
<br />- floppy disks are not RAM
<br />- I didn't say you couldn't relocate code to RAM
<br />- I said "NES", not FDS, Atari, Apple, or what have you
<br />
<br />To my knowledge, in every example you gave (FDS, multicarts, and probably the others) the code starts on a floppy or some other non-RAM medium and subsequently gets copied to RAM before it's executed.  So I was <em>still</em> right.
<br />
<br />
<br />=P

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>griever</b> [ Mon Feb 11, 2008 6:17 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Hm, but code CAN be relocated in RAM NES, right?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Mon Feb 11, 2008 6:42 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />For completeness:
<br />
<br /><div class="quotetitle">Disch wrote:</div><div class="quotecontent">- I didn't say you couldn't relocate code to RAM</div>
<br />If it wasn't perfectly clear to me that you weren't ruling out relocating code, then it surely wasn't clear to a beginner.
<br />
<br />griever: Yes. Dwedit, one of the authors of an NES emulator for the Game Boy Advance, <a href="http://nesdev.com/bbs/viewtopic.php?p=26413#26413" class="postlink">seems to think The Legend of Zelda copies code to RAM and calls it</a>.
<br />
<br />But as a beginner, you probably don't need to think too hard about making your programs copy code to RAM until they start using a mapper and a PRG bigger than 32 KiB.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Mon Feb 11, 2008 8:38 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Hm, but code CAN be relocated in RAM NES, right?</div>
<br />I do all my NES development via code in RAM. Even when I turn on my NES it starts running code from RAM (battery RAM, that is).

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>