<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Why is NESASM bad?</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Why is NESASM bad?</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=2&amp;t=3726">http://forums.nesdev.com/viewtopic.php?f=2&amp;t=3726</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>bunnyboy</b> [ Wed Nov 21, 2007 2:22 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Why is NESASM bad?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />NESASM is considered to be a bad tool around here, but what are the technical reasons?  The problems I know about are:
<br />
<br />1. Addressing mode syntax () vs [].  I don't know which is supposed to be standard now, couldn't the assembler just allow both?
<br />
<br />2. Recently found line length problem
<br />
<br />3. No temp labels like - and +?  Not sure about this one, I don't use them.
<br />
<br />4. Allows instructions like inc a (changed in my vers now)
<br />
<br />Are there any instruction problems or things it fails to assemble?  I am specifically looking at nesasm 2.51 avail at <a href="http://bobrost.com/nes/resources.php" class="postlink">http://bobrost.com/nes/resources.php</a>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>albailey</b> [ Wed Nov 21, 2007 2:46 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I remember hearing something about this:
<br />
<br />LDA ($1B),Y 
<br />is compiled to be this:
<br />LDA ($001B),Y
<br />
<br />So I think you need to define it like:
<br />LDA (&lt;$1B),Y 
<br />
<br />(My syntax is likely wrong since I never use nesasm)
<br />
<br />Al

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>never-obsolete</b> [ Wed Nov 21, 2007 3:19 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />i thought the zero page bug was only when absolute can be used as well. hence:
<br />
<br /><strong>lda $00</strong> assembles as <strong>lda $0000</strong>
<br />
<br />and not for <strong>lda ($nn, X)</strong> or <strong>lda ($nn), Y</strong>. i don't remember though, haven't used nesasm since '04.
<br />
<br />i also could never figure out how the banking system worked.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>bunnyboy</b> [ Wed Nov 21, 2007 4:01 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Yup looks like it assembles lda $00 to lda $0000.  The zero page syntax is lda &lt;$00 or lda &lt;label.  Hopefully should be easy to fix.  Other than being annoying, is there a significant difference besides being one cycle slower and one byte larger?  lda ($00),y works correctly so looks like its just not automatically checking for zero page when the option is there.
<br />
<br />The simple banking with no config files is one of the reasons I started with NESASM.  <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" />  It is just split into 8KB data blocks exactly how it will be laid out in the final .nes file.  Doesn't matter what bank switching you are using, it only cares about file layout.  So a 16KB NROM game would be:
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; .ines headers<br /><br />&nbsp; .bank 0<br />&nbsp; .org $C000 <br />&nbsp; &#40;code&#41;<br />&nbsp; <br />&nbsp; .bank 1<br />&nbsp; .org $E000<br />&nbsp; &#40;code&#41;<br />&nbsp; .org $FFFA<br />&nbsp; &#40;vectors&#41;<br /><br />&nbsp; .bank 2<br />&nbsp; &#40;graphics&#41;</div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>never-obsolete</b> [ Wed Nov 21, 2007 5:44 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />i meant beyond 16k nrom. when i designed my assembler i borrowed from nesasm's style:
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent"><br />&nbsp; &nbsp;.rambank&nbsp; &nbsp;; not assembled<br />&nbsp; &nbsp;.org $0000&nbsp; &nbsp;; CPU RAM<br />somevar:&nbsp; &nbsp;.db 0<br />somevar2:&nbsp; &nbsp;.db 0<br /><br /><br />&nbsp; &nbsp;.org $6000&nbsp; &nbsp;; SRAM<br />somevar3:&nbsp; &nbsp;.db 0<br /><br />&nbsp; &nbsp;.org $6000&nbsp; &nbsp;; SRAM &#40;mmc5 w/ 2+ banks or whatever&#41;<br />somevar4:&nbsp; &nbsp;.db 0<br /><br />&nbsp; &nbsp;; ...etc...<br /><br /><br />&nbsp; &nbsp;.prgbank 0&nbsp; &nbsp;; split 16K<br />&nbsp; &nbsp;.low<br />&nbsp; &nbsp;.org $8000<br /><br />&nbsp; &nbsp;.high<br />&nbsp; &nbsp;.org $8000<br /><br /><br />&nbsp; &nbsp;.prgbank 1&nbsp; &nbsp;; full 16K<br />&nbsp; &nbsp;.org $8000<br /><br /><br />&nbsp; &nbsp;.prgbank 2&nbsp; &nbsp;; full 32k<br />&nbsp; &nbsp;.org $8000<br /><br />&nbsp; &nbsp;.prgbank 3<br />&nbsp; &nbsp;.org $C000<br /><br /><br />&nbsp; &nbsp;.chrbank 0&nbsp; &nbsp;; and some chr<br />&nbsp; &nbsp;.org $0000<br />&nbsp; &nbsp;; ...<br /><br /><br />&nbsp; &nbsp;.chrbank 1<br />&nbsp; &nbsp;.org $0000<br />&nbsp; &nbsp;; ...<br /></div>
<br />
<br />the header directives are exactly the same.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>bunnyboy</b> [ Wed Nov 21, 2007 6:21 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />My current game is UNROM, 64KB prg.  Divided into the NESASM 8KB bank size thats 8 banks. Divided into UNROM banks thats 3x 16KB swappable banks and 1x 16KB fixed banks.  Header info is:
<br />
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; .bank 0&nbsp; &nbsp; &nbsp; &nbsp; ;unrom bank 0<br />&nbsp; .org $8000<br />&nbsp; .bank 1<br />&nbsp; .org $A000<br /><br />&nbsp; .bank 2&nbsp; &nbsp; &nbsp; &nbsp; ;unrom bank 1<br />&nbsp; .org $8000<br />&nbsp; .bank 3<br />&nbsp; .org $A000<br /><br />&nbsp; .bank 4&nbsp; &nbsp; &nbsp; &nbsp; ;unrom bank 2<br />&nbsp; .org $8000<br />&nbsp; .bank 5<br />&nbsp; .org $A000<br /><br />&nbsp; .bank 6&nbsp; &nbsp; &nbsp; &nbsp; ;unrom fixed bank<br />&nbsp; .org $C000<br />&nbsp; .bank 7<br />&nbsp; .org $E000<br />&nbsp; .org $FFFA<br />&nbsp; vectors<br /></div>
<br />
<br />If it had CHRROM that would just be added in a bank 8 at the end.  Unlike your code, things in ram/sram don't use the .db because its not actually data in the .nes file.  Instead you can reserve space with .rs or just set it manually.  
<br />
<br />So far these just seem like annoyances of you are used to another system, any big problems?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Wed Nov 21, 2007 7:02 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />In my opinion, the fact that it forces you to divide everything in 8KB chunks is already bad enough. If you happen to write code that assembles to more than 8KB, will it automatically use the next 8KB bank?
<br />
<br />I really like ASM6 approach to banking... it's much more flexible and you don't have to type much either. It has temporary labels too. I haven't found anything about ASM6 I don't like yet.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Celius</b> [ Wed Nov 21, 2007 9:04 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The whole nameless lables thing is terrible. I use a "-" for almost every loop. I seem to remember also not being able to do anything but 32k NROM games...

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>mic_</b> [ Thu Nov 22, 2007 3:51 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I seem to remember also not being able to do anything but 32k NROM games...</div>
<br />
<br />You can use any mapper you'd like afaik. I've used MMC1 and MMC3. The problems for me started when I needed more than 8 banks (64k). I got a bunch of address conflicts when assembling. But you can get around this by assembling each 16k or 32k separately and then merge all the binaries.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>blargg</b> [ Thu Nov 22, 2007 5:58 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">bunnyboy wrote:</div><div class="quotecontent">Yup looks like it assembles lda $00 to lda $0000. The zero page syntax is lda &lt;$00 or lda &lt;label. Hopefully should be easy to fix.</div>
<br />It makes sense that it does this. A normal constant is always 16 bits. When used in an 8-bit-only context, you get an error if the high 8 bits are non-zero. When used in a context where it can be 8 bits or 16 bits (like lda addr), it's 16 bits. To force 8 bits, you must use an 8-bit constant (one prefixed with '&lt;'). If you "fix" this to automatically use zero-page when the upper 8 bits are clear, how does one force it to use absolute addressing (useful for self-modifying code)?
<br />
<br />Considering its features, the proper way to use zero page would be with the .zp directive. Fix this so it uses zero-page addressing, then there's little reason to mess with the above behavior (using NESASM 2.51 compiled from the source):
<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">&nbsp; &nbsp; &nbsp; &nbsp; .zp<br />var1:&nbsp; &nbsp;.ds 1<br />;var1 = next available zero-page byte<br />&nbsp; &nbsp;&nbsp; &nbsp;.org $10<br />var2:&nbsp; &nbsp;.ds 1<br />;var2 = $10<br />&nbsp; &nbsp; &nbsp; &nbsp; .code<br />&nbsp; &nbsp; <br />&nbsp; &nbsp; &nbsp; &nbsp; .bank 0<br />&nbsp; &nbsp; &nbsp; &nbsp; .org $8000<br />&nbsp; &nbsp; &nbsp; &nbsp; lda var1&nbsp; &nbsp; &nbsp; &nbsp; ; should use zero-page, but uses absolute<br />&nbsp; &nbsp; &nbsp; &nbsp; lda var2&nbsp; &nbsp; &nbsp; &nbsp; ; ditto<br /></div>
<br />
<br />Celius and tokumaru, for once can you participate in a thread without littering it with your opinion, rather than technical analysis (as the original poster requested)? (there are others guilty of this too, just not in this thread... yet)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Dwedit</b> [ Thu Nov 22, 2007 7:18 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I'd think that if you wanted 16 bit addresses for Self-modifying code, you should use a symbol to indicate that.  Non self-modifying code using the zero page is far more common.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>beneficii</b> [ Thu Nov 22, 2007 7:19 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />tokumaru,
<br />
<br />My only problem with ASM6 is that there doesn't seem to be a way to force 8-bit addresses to be compiled as 16-bit (maybe I should tell loopy about this?), but other than that it is the perfect program.  And my in-progress disassembly of SMB2j (info about which can be found at sm2.beneficii.net, smb2.beneficii.net, sm2dis.beneficii.net, smb2dis.beneficii.net, or beneficii.net/smb2) has the assembleable disassembly be assembleable for ASM6.  I like it very much.  Either you have a system too restrictive and not powerful enough, like NESASM, or a system that is way too complicated and makes you do all these complicated definition files like CC65 or WLA-DX.
<br />
<br />In ASM6, I really like the way you can pad something to the end of, like, a bank.  In fact, that was what got me sold on it. ^_^

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>loopy</b> [ Fri Nov 23, 2007 2:41 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>albailey</b> [ Fri Nov 23, 2007 8:25 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I would like to propose a page on the wiki that talks about the pros and cons of each of the different NES assemblers.   
<br />
<br />Al

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>dvdmth</b> [ Fri Nov 23, 2007 8:45 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Back when I looked at 65816 assembly (for SNES), the doc I read had guidelines for assemblers in terms of syntax.  As I recall, all constants less than 256 default to 8 bits, with constants between 256 and 65535 being 16 bits and constants larger than 65535 being 24 bits (the 65816 has 24-bit addressing modes).  To force a quantity to be 8 bits, it is to be preceded with '&lt;'.  To force 16-bit quantities, one was supposed to use either '!' or '|', and to force 24-bit values you were to use '&gt;'.  For immediate operands, you used '&lt;' for bits 0-7, '&gt;' for bits 8-15, and '^' for bits 16-23.  Of course, with the 65816 it's more important to have explicit control over addressing modes since the effective address of 8-bit and 16-bit addressing modes can change depending on the contents of the direct-page or data bank registers.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>