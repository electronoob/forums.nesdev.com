<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Confusion about scanlines</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Confusion about scanlines</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=10&amp;t=6038">http://forums.nesdev.com/viewtopic.php?f=10&amp;t=6038</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>bigjt_2</b> [ Wed Feb 10, 2010 5:35 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Confusion about scanlines</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Hello,
<br />
<br />I'm confused on the very principle of what's meant by "scanlines."  I think part of my problem is I come from a video background rather than a computer science background, so when I read "scanline" I've been envisioning something similar to a "scan line" on a CRT screen.  In other words, for the NES I'm envisioning a horizontal scanline being a line of pixels 1 pixel high by 256 pixels wide, and there would be 240 of these sequentially layered top to bottom of the screen.
<br />
<br />However, the more I read the more I'm starting to think it's something a bit different.  Mostly, it's the "8 sprites per scanline at one time" rule that's really throwing me.  I understand that each sprite is 8x8 pixels (or, rarely, might be 8x16).  But as I look at screenshots of various NES games, it seems there are way more than 8 different sprites on the same line, even counting the many that get repeated.
<br />
<br />Again, my first conclusion is that I do not properly understand what a scanline is taken in the context of the NES display output.  But if I do, could someone please tell me what I'm missing with the "8 sprites per scanline rule"?  Perhaps there's some trick I'm not aware of?  Or perhaps extra hardware on the cartridges allows there to be more?  Perhaps I'm not looking at the my these screenshots correctly?
<br />
<br />I'm reading Patrick Deskin's NES System Doc and these forums and just barely getting my feel wet (as everyone can tell).  I haven't found a thread discussing a basic definition of scanlines yet but if there is one 1. I apologize and 2. please point me to it.
<br />
<br />And thanks folks for what you do on this site.  It's all really fascinating.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Wed Feb 10, 2010 6:07 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Confusion about scanlines</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">bigjt_2 wrote:</div><div class="quotecontent">for the NES I'm envisioning a horizontal scanline being a line of pixels 1 pixel high by 256 pixels wide</div><br />That, plus 24 side border pixels that have the background color. Emulators ignore these; they mainly figure into the calculation of pixel aspect ratio, which turns out to be exactly 8:7 on NTSC.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">and there would be 240 of these sequentially layered top to bottom of the screen.</div><br />That is correct.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">However, the more I read the more I'm starting to think it's something a bit different.  Mostly, it's the "8 sprites per scanline at one time" rule that's really throwing me.  I understand that each sprite is 8x8 pixels (or, rarely, might be 8x16).</div><br />And each sprite spans 8 lines or 16 lines. For example, a sprite whose Y coordinate is 25 will span the 8 lines below 25: lines 26 to 33.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">But as I look at screenshots of various NES games, it seems there are way more than 8 different sprites on the same line, even counting the many that get repeated.</div><br />Not all graphics on the screen are sprites. A lot are background tiles.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">But if I do, could someone please tell me what I'm missing with the "8 sprites per scanline rule"?</div>
<br />There is a display list of 64 sprites. On every scanline y, the PPU reads through this list and looks for the 8 frontmost sprites that are on this scanline. (Any further sprites on this line are ignored.) At the end of a scanline, in the horizontal blanking interval, the PPU copies information about these sprites to a buffer that the PPU uses on line y+1 to draw these sprites.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Wed Feb 10, 2010 6:12 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Confusion about scanlines</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">bigjt_2 wrote:</div><div class="quotecontent">I'm envisioning a horizontal scanline being a line of pixels 1 pixel high by 256 pixels wide, and there would be 240 of these sequentially layered top to bottom of the screen.</div><br />That's correct.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Mostly, it's the "8 sprites per scanline at one time" rule that's really throwing me.  I understand that each sprite is 8x8 pixels (or, rarely, might be 8x16).  But as I look at screenshots of various NES games, it seems there are way more than 8 different sprites on the same line, even counting the many that get repeated.</div><br />There are never more than 8 sprites in the same scanline. Unless you are mistaking background tiles for sprites. Some games draw items using background tiles (such as the coins in SMB), so they have nothing to do with the sprite limit.<br /><br />Also, some emulators are configured to ignore the sprite limit (since it's easy for a PC to draw tons of sprites), so that there isn't so much flickering. Make sure you are not looking at screenshots made using this feature.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Again, my first conclusion is that I do not properly understand what a scanline is taken in the context of the NES display output.  But if I do, could someone please tell me what I'm missing with the "8 sprites per scanline rule"?</div><br />The NES processes the picture one scanline at a time. This is a complex process, that involves checking all background tiles that are supposed to be displayed and what palette they should use, reading the graphics of said tiles and coloring them... and also calculating which sprites have visible parts in that scanline.<br /><br />Every scanline the NES checks the Y coordinate of all 64 sprites looking for the ones that are visible in the current scanline. When it finds them, their graphics have to be fetched and colored. This takes time, and the video processor in the NES only has time to do this for 8 sprites. This is why after it finds 8, it stops looking, as there is no time to draw more than that.<br /><br />The programmer can place more than 8 of them in the same scanline, but the ones with lower priority will just not show up, because the NES favors the ones with high priority.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Perhaps there's some trick I'm not aware of?</div><br />The only "trick" used is called sprite cycling. Since the sprites with lower priority are dropped, games usually randomize the priorities of the individual sprites every frame, so that a sprite that was dropped in one frame is displayed on the next. This causes sprites to flicker (sometimes they may look transparent) when there are more than 8 sharing the same scanlines, but the player can still recognize the objects and know where they are.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Or perhaps extra hardware on the cartridges allows there to be more?</div><br />This limitation can't be bent with cartridge hardware, since all the sprite logic is internal to the PPU.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Perhaps I'm not looking at the my these screenshots correctly?</div>
<br />Maybe you are mistaking background tiles for sprites or you are looking at screenshots from emulators that disabled the sprite limit, like I said above.
<br />
<br />If you have more questions, keep them coming. =)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Memblers</b> [ Wed Feb 10, 2010 6:12 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Your understanding of a scanline is fine.
<br />
<br />It sounds like you may have the background confused with the sprites.  With a still screenshot it's not always obvious which tiles are background and which are sprites.  Sometimes they can use the same set of tiles.  Like a tetris block hitting the ground, changes from a sprite to background.  There are 64 sprites that can be put anywhere, but the PPU doesn't have enough memory to display them all at once (on the current line).  The background of course is a separate layer and covers the whole screen.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>bigjt_2</b> [ Thu Feb 11, 2010 10:44 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />tepples
<br />“Not all graphics on the screen are sprites. A lot are background tiles.”
<br />Tokumaru
<br />“Maybe you are mistaking background tiles for sprites or you are looking at screenshots from emulators that disabled the sprite limit, like I said above.”
<br />Memblers 
<br />“It sounds like you may have the background confused with the sprites. With a still screenshot it's not always obvious which tiles are background and which are sprites.”
<br />
<br />Yep, this is exactly what I wasn't understanding.  It's now a lot more clear to me how the "8 sprites per scanline" rule works.  For whatever reason, I was actually thinking ALL graphics were generically classified as sprites.
<br />
<br />Folks, you have no idea how satisfying it was reading your responses.  You didn't just answer my question, but a whole slew of questions I'd had in the back of my mind playing the NES over the last 25 years.  Most notably, the "flicker" effect.  It's really cool to now know what exactly causes that.  I know for you guys that's probably pretty basic knowledge, <img src="./images/smilies/icon_smile.gif" alt=":-)" title="Smile" /> but seriously this is the first time I've found out.
<br />
<br />So "sprites," as in other video game programming, are basically graphics (in this case 8x8 or 8x16 tiles) that animate, move, or may require some collision detection.  And background tiles would basically be everything else.  Am I correct in my understanding of that?
<br />
<br />Also, I'm assuming "8 sprites" means no more than eight completely different sprites per scanline.  In otherwords, if the same sprite is repeated on one scanline but at a different x position, the PPU could handle it.  Is that correct?  For instance, in Galaga you have all the little spaceships moving around at the top of the screen, but they're also the same tiles repeated over and over again on the same horizontal line.
<br />
<br />Or, as Memblers mentioned, are those enemy ships at top really background tiles that become sprites when they move toward the player's ship?
<br />
<br />And does that mean (though I think I know the answer to this) that background tiles on the NES can be animated?  Ex. the waterfall in the Bubbleman stage in Mega Man 2?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Thu Feb 11, 2010 11:13 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">bigjt_2 wrote:</div><div class="quotecontent">I was actually thinking ALL graphics were generically classified as sprites. </div><br />They are on PC or Neo-Geo or Nintendo DS's 3D mode, but not on NES.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Also, I'm assuming "8 sprites" means no more than eight completely different sprites per scanline.</div><br />False. Even if they have the same pattern, you only get 8.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">For instance, in Galaga you have all the little spaceships moving around at the top of the screen, but they're also the same tiles repeated over and over again on the same horizontal line.<br /><br />Or, as Memblers mentioned, are those enemy ships at top really background tiles that become sprites when they move toward the player's ship?</div><br />At least some of them are probably background, at least on the NES port of Galaga. Some emulators, such as PocketNES when run inside VisualBoyAdvance, have a display option to hide all sprites, so you can easily see what's a sprite and what's a background tile. The arcade version of Galaga used a vertical monitor, which measured scanlines vertically, and its PPU was probably engineered with more sprite slots per line.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">And does that mean (though I think I know the answer to this) that background tiles on the NES can be animated?  Ex. the waterfall in the Bubbleman stage in Mega Man 2?</div>
<br />Background tiles are numbered 0 through 255. There are two major ways to change the image associated with a tile: give "bankswitching" commands to hardware on the cartridge, or store the tiles in RAM and rewrite the tile pattern data during vertical blanking.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Jaffe</b> [ Thu Feb 11, 2010 11:13 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">bigjt_2 wrote:</div><div class="quotecontent">tepples<br />So "sprites," as in other video game programming, are basically graphics (in this case 8x8 or 8x16 tiles) that animate, move, or may require some collision detection.  And background tiles would basically be everything else.  Am I correct in my understanding of that?<br /></div><br /><br />Yep, that's right <img src="./images/smilies/icon_smile.gif" alt=":)" title="Smile" /><br /><br /><div class="quotetitle">bigjt_2 wrote:</div><div class="quotecontent">Also, I'm assuming "8 sprites" means no more than eight completely different sprites per scanline.  In otherwords, if the same sprite is repeated on one scanline but at a different x position, the PPU could handle it.  Is that correct?  For instance, in Galaga you have all the little spaceships moving around at the top of the screen, but they're also the same tiles repeated over and over again on the same horizontal line.<br /></div><br /><br />I think you're confusing sprites with their graphical representation. There is no such thing as "completely different" sprites. Several sprites can use the same tile as graphics, but they're still independent objects that the PPU can't handle if they're too many on the same line. <br /><br /><div class="quotetitle">bigjt_2 wrote:</div><div class="quotecontent">And does that mean (though I think I know the answer to this) that background tiles on the NES can be animated?  Ex. the waterfall in the Bubbleman stage in Mega Man 2?</div>
<br />
<br />Yeah. The tiles themselves can't easily be animated, but one can however change what tile is displayed at a certain position each frame. Thus one can cycle through a set of tiles with different frames of the animation.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Thu Feb 11, 2010 11:19 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">bigjt_2 wrote:</div><div class="quotecontent">I was actually thinking ALL graphics were generically classified as sprites.</div><br />It's understandable, since many people around the web use the term to talk about any graphic used in 2D games.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Most notably, the "flicker" effect.  It's really cool to now know what exactly causes that.  I know for you guys that's probably pretty basic knowledge, <img src="./images/smilies/icon_smile.gif" alt=":-)" title="Smile" /></div><br />We all started somewhere... =)<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">So "sprites," as in other video game programming, are basically graphics (in this case 8x8 or 8x16 tiles) that animate, move, or may require some collision detection.  And background tiles would basically be everything else.</div><br />Yeah, kinda. Strictly speaking, the background is a grid of tiles of a fixed size, while sprites are movable entities that can be placed anywhere on the screen. Typically, sprites are used to represent characters, because they can move around freely, but some game objects might be represented with background tiles if there is a good reason for it (this is true for the NES, but almost never happens on systems that can display more sprites per scanline, like the SNES or the Mega Drive/Genesis).<br /><br />Sprites can also be used to fake background elements, like when you need more colors than the background alone can provide or when these elements need some sort animation that's hard to pull off with background tiles.<br /><br />It's all about creative use of the few resources you have.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">In otherwords, if the same sprite is repeated on one scanline but at a different x position, the PPU could handle it.  Is that correct?</div><br />No, it's 8 sprites, period. It doesn't matter if they use the same graphics.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">For instance, in Galaga you have all the little spaceships moving around at the top of the screen, but they're also the same tiles repeated over and over again on the same horizontal line.</div><br />Galaga is a good example of creative use of sprites and background. Note that the "background" is all black, and that there are only a few starts going by. What happens is that the game is using sprites to simulate a background. The stars are sprites, while the background itself is fully black. When the enemy ships move in, they do it in a circular pattern in order to avoid hitting the sprite limit. When they finally line up, the game stops using sprites and starts using the background to draw them. The player can't tell the difference, and that's the beauty of it.<br /><br />I recommend you grab a copy of the FCEUXD emulator, and use it's debugging features to understand a bit of how the games do their magic. Open Galaga in it and select Tools -&gt; Name Table Viewer. The name table is the background, and whatever you see in it is drawn with background tiles, and whatever isn't there is drawn with sprites. Play around with different games and different debugging features and you'll learn a lot.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">And does that mean (though I think I know the answer to this) that background tiles on the NES can be animated?  Ex. the waterfall in the Bubbleman stage in Mega Man 2?</div>
<br />There are 3 ways to achieve a waterfall effect, I don't know which one this game uses, but it's surely on of them:
<br />
<br />The easiest is to rotate the palette that contains the water colors. This will make the waterfall seem to be moving, but in fact the graphics don't change, just the colors change. The disadvantage is that nothing else can use the same palette, or the colors would change there too.
<br />
<br />Another method is to modify the name table, overwriting the old tiles with the new tiles. This isn't done often, because overwriting tiles can be a very slow process since waterfalls can occupy very large areas of the screen.
<br />
<br />Another common method is overwriting the graphics of the tiles. When you modify a certain tile, all instances of it on the whole screen will automatically show the changes. This is often used in games that can bankswitch CHR-ROM, because it takes very little time to switch graphics in that case. Some games with CHR-RAM also use this method, but they have to change the graphics of the tiles byte by byte, which is much slower.
<br />
<br />Again, i recommend you look at some games using FCEUXD. Go to Tools -&gt; PPU viewer and you can see how the palettes and tiles change in real time. Look at the Mega Man waterfall you mentioned and I'm sure you're gonna figure out the trick they used.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>bigjt_2</b> [ Thu Feb 11, 2010 1:11 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Awesome!  Thanks again for your generous help tokumaru, tepples, memblers, and jaffe.  This site is awesome!
<br />
<br />Also tokumaru, I'm downloading fceuxd from zophar right now.  FCE Ultra has long been one of my favorite NES emulators, but I haven't had a reason to check out this debugger version until now.  The more I learn from the Diskin's NES doc and from the forum here, the more I finally understand what's meant by pattern tables and all the other elusive stuff I see on the emulators' debug screens.  Woo-hoo!

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>WJYkK</b> [ Thu Feb 11, 2010 11:13 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Sorry for hijacking this thread, but:<div class="quotetitle">bigjt_2 wrote:</div><div class="quotecontent">So "sprites," as in other video game programming, are basically graphics (in this case 8x8 or 8x16 tiles) that <strong><span style="text-decoration: underline">animate</span></strong>, move, or may require some collision detection.  And background tiles would basically be everything else.  Am I correct in my understanding of that?</div>If a tile is animated yet it is stationary with the scrolling, it could also be in the background instead of being a sprite, right?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Fri Feb 12, 2010 5:42 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">WJYkK wrote:</div><div class="quotecontent">If a tile is animated yet it is stationary with the scrolling, it could also be in the background instead of being a sprite, right?</div>
<br />Yes, but how easy it is to animate background tiles depends on the mapper. 
<br />
<br />CHR-RAM games have to rewrite the tile graphics in the pattern table, which takes a good amount of time, so they probably keep this kind of animation to a minimum.
<br />
<br />NROM games simply can't animate patterns, they have to replace tiles in the name table, not very simple to implement in a game engine either, and again, time is a constraint.
<br />
<br />CHR-ROM games that switch large chunks of tiles (such as CNROM or MMC1) can animate the pattern tables, but it's not practical because of all the tiles that are not animated but must be repeated across the different banks, which is a big waste of space.
<br />
<br />The ideal way is to use a mapper that bankswitches ROM in small chunks (1KB or 2KB), like the MMC3, because it takes nearly no processing time to load the new graphics and not many static tiles have to be repeated.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>bigjt_2</b> [ Fri Feb 12, 2010 3:49 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">The easiest is to rotate the palette that contains the water colors. This will make the waterfall seem to be moving, but in fact the graphics don't change, just the colors change. The disadvantage is that nothing else can use the same palette, or the colors would change there too. </div>
<br />
<br />By the by, I looked into the Megaman 2 Bubbleman stage question and yes, it seems they handled it with a palette swap.  Please don't hold me to that though.  <img src="./images/smilies/icon_smile.gif" alt=":-)" title="Smile" />  Interestingly, it looks like the "READY" that always appears at the beginning is borrowing from the same effect as the waterfall, as it's on the same Pattern Table and the fourth color it cycles through is the blue that seems to be used for transparency on that part of the stage.
<br />
<br />But the waterfall is definitely background as it shows up on the nametable, and it's not animated because it appears there as one solid non-animating group of repeating tiles.  There are, like I said a group of blues that keep swapping on palette.  I also noticed that happening with the brown on the "?" blocks in Super Mario Bros. 1.
<br />
<br />Very cool stuff.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>WJYkK</b> [ Fri Feb 12, 2010 4:37 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">The ideal way is to use a mapper that bankswitches ROM in small chunks (1KB or 2KB), like the MMC3, because it takes nearly no processing time to load the new graphics and not many static tiles have to be repeated.</div>So this could most likely be the way how in SMB3 the question marks were moving inside the question blocks. Heh, I thought any mapper could do it easily; looks like I learned something new.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Fri Feb 12, 2010 6:47 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b></b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">WJYkK wrote:</div><div class="quotecontent">So this could most likely be the way how in SMB3 the question marks were moving inside the question blocks.</div><br />Yup. It uses an MMC3, the most common mapper during the later years of the NES, when several games had that kind of background animation.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Heh, I thought any mapper could do it easily;</div>
<br />Well, if you use CHR-RAM the mapper doesn't matter, but the amount of tile animation you can do with CHR-RAM is significantly less than what can be done with an MMC3.

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>1</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>