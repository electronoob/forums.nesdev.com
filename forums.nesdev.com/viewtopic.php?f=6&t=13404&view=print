<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Converting Simple PCM Samples to Pulse / Triangle / Noise?</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Converting Simple PCM Samples to Pulse / Triangle / Noise?</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=6&amp;t=13404">http://forums.nesdev.com/viewtopic.php?f=6&amp;t=13404</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Drew Sebastino</b> [ Sun Oct 25, 2015 9:52 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Converting Simple PCM Samples to Pulse / Triangle / Noise?</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Well, I thought it would be fun to look at using FamiTracker, not because I want to work on the NES, but because I just think it would be interesting, and I saw that the options that you have when creating an instrument are Volume, (except Triangle, which apparently doesn't have volume control) Arpeggio, (Not even sure what that does or means...) Pitch, (same thing as the keyboard?) High Pitch (Just a more extreme version of pitch?) and Duty / Noise (I'm not sure what this does, other than make the sound different somehow). Now, I'm no sound expert, (I'm not even sure as to what PCM, Pulse, Triangle, Noise, Square, Sawtooth, or FM even mean or work) but since you can make pretty much any sound into PCM, can you somehow reverse this process, even if it will obviously be &quot;lossy&quot;? Or will this just sound completely terrible and unreasonable to do for a machine, like trying to convert assembly code to C? I'm just trying to make an electric guitar type noise, if that's possible.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sun Oct 25, 2015 10:02 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Converting Simple PCM Samples to Pulse / Triangle / Nois</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />It's lossy. Very lossy. A few years ago, <a href="http://forums.nesdev.com/viewtopic.php?p=48205#p48205" class="postlink">lidnariq experimented</a> with converting drums to noise by estimating the frequency and volume of each 1/60 second segment.<br /><br />For electric guitar, you'll probably want to create a duty envelope that starts on 2, goes to 0 for one or two frames, stays on 1 for a few more frames, and ends on 2.<br /><br />The Arpeggio envelope changes the pitch of a pulse or triangle channel down or up each frame by a number of notes. I use it to create more interesting drums (arpeggio + note), tom-toms, and &quot;plinky&quot; attacks. Others might use the Pitch envelope for things like that, but I prefer the Arpeggio envelope because it more closely matches the data model of my own music engine.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Drew Sebastino</b> [ Sun Oct 25, 2015 10:09 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Converting Simple PCM Samples to Pulse / Triangle / Nois</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Oh yeah, I hadn't even thought of the fact that you could put multiple channels together to make a sound effect. That adds a whole other layer of complexity...<br /><br />Anyway though, is there a way to make it to where the sound will repeat for the frame instead of just ending on the last note, or would you just have to keep copying it over and over again?<br /><br />Oh yeah though, one thing I'm curious about though is is this actually exactly how the NES sound hardware works, or is it &quot;simplified&quot; (like Mario Paint or something)?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>dougeff</b> [ Mon Oct 26, 2015 6:23 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Converting Simple PCM Samples to Pulse / Triangle / Nois</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent"> not even sure as to what Pulse, Triangle, Noise, Square, Sawtooth, etc mean</div><br /><br />Its the shape of the sound wave...<br /><br />Square _|``|_|``|_|``|_<br />Triangle /\/\/\/\<br />Sawtooth |\|\|\|\|\<br />Noise - pseudorandom wave<br /><br />FM is short for frequency modulation, and is a style of music synthesis circuit. (not used by the NES, I'm not sure how this came up)<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Pitch/High Pitch</div><br /><br />Each note using this instrument will pitch shift (relative to the base note). High pitch is faster. I think for nearly everything you will NOT want to use these... but we had a conversation recently about drums that used slight pitch down, could be set here.<br /><br />Arpeggio - rapidly alternates notes (to simulate chords, I suppose).<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">like Mario Paint</div><br /><br />Not sure what you mean. The NES is a simple waveform generator. Not at all like any more modern system. The DPCM channel is closer to what newer systems do (play samples)

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Mon Oct 26, 2015 7:44 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Converting Simple PCM Samples to Pulse / Triangle / Nois</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />The way the audio hardware actually works is described on the page <a href="http://wiki.nesdev.com/w/index.php/APU" class="postlink">&quot;APU&quot; on NESdev Wiki</a>.<br /><br />As for sound effects using multiple channels, that's common. In fact, drums in a lot of games use both the triangle channel and the noise channel. You can experiment with multichannel sound effects using my <a href="https://pineight.com/nes/#sfxed" class="postlink">sound effects editor</a>. It's actually an NES program, which you can run in an emulator or even on your NES if you have a PowerPak, EverDrive N8, or the like.<br /><br /><br />To get started with making drums, here's the drum kit I usually use in FamiTracker:<br /><br /><strong>Kick/Snare</strong><br />Play at 0-# for kick or A-# for snare<br />Volume: 12 10 9 8 7 6 5 4 3 2 1 1 0<br />Arpeggio: 10 0<br /><br /><strong>Closed hat</strong><br />Play at C-#<br />Volume: 5 4 3 2 1 1 0<br />Duty: | 0 1<br /><br /><strong>Open hat</strong><br />Play at C-#<br />Volume: 5 5 4 4 3 3 3 2 2 2 2 1<br />Duty: Same as closed hat

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Drew Sebastino</b> [ Tue Oct 27, 2015 5:22 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Converting Simple PCM Samples to Pulse / Triangle / Nois</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Oh, screw it. I can't use this tool if my life depended on it, I've gotten frustrated trying to replicate sounds that probably just can't be replicated, (I simply can't stay in track of volume and archipelago and pitch and whatever duty/noise is at the same time) and running out of sound channels in like 5 seconds. It's no wonder VRC6 songs seem to be more common than stand alone 2A03, just like how Mario Composer songs seem to be more common than Mario Paint songs, although I think when you stack a bunch of crap onto it, the point is kind of lost. (Although it is harder to make, (Just like 2b) so I'm not trying to take credit away from the people who have made awesome expansion chip songs.) It's like songs from Genesis games using the VRC7. Isn't that in conjunction with the 2A03 practically the Genesis's sound hardware? I'd be like if someone made the &quot;VRC8&quot; that had 8 PCM channels and you recreated the entire DKC soundtrack. You still have to admit that this is awesome though: <!-- m --><a class="postlink" href="https://www.youtube.com/watch?v=WlaDLLdvGhc">https://www.youtube.com/watch?v=WlaDLLdvGhc</a><!-- m --><br /><br />and speaking of the Kirby Super Star and the SA-1, I found this by the same guy: <!-- m --><a class="postlink" href="https://www.youtube.com/watch?v=2Alq81a_wV0">https://www.youtube.com/watch?v=2Alq81a_wV0</a><!-- m --> Wow...<br /><br />You know, isn't there supposed to be a &quot;SuperFamiTracker&quot; for the SNES being made? That way, you could have any instrument sound exactly like you want it to, as long as it fits in audio ram. I really hope there is an option to swap out data during the song, as I plan to do. The biggest problem with the SNES's audio is that because of the small space for audio, it's often fairly low quality and muffled sounding as a result, which I plan to try and avoid. Some audio samples also seem to hold up better than others, or maybe it's just that they have more space dedicated toward them. I mean, hear this: The beginning sounds like it came right of a CD, while the symbol/drum sounds things in the background latter in the song sound muffled in comparison, and considering the instrument at the beginning isn't even found in the rest of the song, they could have just swapped it out.<br /><br />Anyway, one last thing about the NES's audio, I thought of a potentially stupid but potentially good idea: Instead of just using one audio channel to try to replicate one instrument, why not just try using all the audio channels in conjunction to try to replicate the whole song? Easily the largest problem with this would be that it would take up a ton of memory considering just about every second of the song would have to be a unique instrument, and each channel would have to be a unique instrument. The other problem would be that some &quot;instruments&quot; in the song could make other &quot;instruments&quot; sound different, kind of like when I suggested creating the best 256 color palette out of what would be a 16bpp imagine in an 3D SNES game vs. having the same 256 color palette like Doom. At this point, it seems like it would just be best to use the DPCM channel, and speaking of which, I forgot, what besides memory is restricting you from just recording a whole song and playing it in DPCM like an MP3 file or something vs. a MIDI? I just remember hearing that there's almost no CPU time for anything if you do this approach for some reason, and I don't think it had to do with compression.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Tue Oct 27, 2015 5:46 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Converting Simple PCM Samples to Pulse / Triangle / Nois</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Espozo wrote:</div><div class="quotecontent">Oh, screw it. I can't use this tool if my life depended on it, I've gotten frustrated trying to replicate sounds that probably just can't be replicated, (I simply can't stay in track of volume and archipelago and pitch and whatever duty/noise is at the same time) and running out of sound channels in like 5 seconds.</div><br />Sometimes there are hard decisions to make when arranging music for 2A03. If you can prototype your music in ModPlug Tracker, perhaps I can try arranging it.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">You know, isn't there supposed to be a &quot;SuperFamiTracker&quot; for the SNES being made?</div><br />One approach is to convert XM music composed in FastTracker or ModPlug Tracker.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">That way, you could have any instrument sound exactly like you want it to, as long as it fits in audio ram. I really hope there is an option to swap out data during the song, as I plan to do.</div><br />Very few Super NES music engines supported that, as far as I can tell. Streaming in samples needs attention from the CPU, which causes slowdown if not done very carefully. <em>Tales of Phantasia</em> does, I think <em>The Lord of the Rings</em> (which uses ARDI) does, and I think some fighting game engines support streaming in vocal sound effects. In any case, games that dynamically load samples would be listed as &quot;undumpable&quot; on snesmusic.org, as an SPC700 save state is insufficient.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Anyway, one last thing about the NES's audio, I thought of a potentially stupid but potentially good idea: Instead of just using one audio channel to try to replicate one instrument, why not just try using all the audio channels in conjunction to try to replicate the whole song?</div><br />That's possible if you are willing to take memory use to the max (<a href="http://pics.pineight.com/nes/max-300.nes.zip" class="postlink">300 that is</a>). But the (NES) PowerPak supports only up to 512K of PRG ROM, and only 248K in NSF mode.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Tue Oct 27, 2015 5:54 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Converting Simple PCM Samples to Pulse / Triangle / Nois</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Espozo wrote:</div><div class="quotecontent">what besides memory is restricting you from just recording a whole song and playing it in DPCM like an MP3 file or something vs. a MIDI?</div><br />DPCM isn't good for complex sounds because at the rate of 1 bit per sample the quality is really bad.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I just remember hearing that there's almost no CPU time for anything if you do this approach for some reason, and I don't think it had to do with compression.</div><br />It's PCM that consumes all of the CPU time, not DPCM. The CPU can fetch 1-bit DPCM samples from ROM automatically, but you can achieve much better quality if you manually feed 7-bit samples to the APU. Doing that at a steady rate will consume most of your CPU time.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Drew Sebastino</b> [ Tue Oct 27, 2015 6:57 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Converting Simple PCM Samples to Pulse / Triangle / Nois</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">Very few Super NES music engines supported that, as far as I can tell. Streaming in samples needs attention from the CPU, which causes slowdown if not done very carefully.</div><br />Don't you need to stream some information to the SPC700 anyway in order to play sound effects at certain times? Wait, it's like transferring one byte vs. a thousand...<br /><br /><div class="quotetitle">tepples wrote:</div><div class="quotecontent">which uses ARDI</div><br />What's that?<br /><br /><div class="quotetitle">tokumaru wrote:</div><div class="quotecontent">It's PCM that consumes all of the CPU time, not DPCM.</div><br />Doesn't the NES not support PCM samples though? And I'm assuming the reason PCM samples are processor intensive is the same reason as swapping PCM samples on the SNES?

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>dougeff</b> [ Tue Oct 27, 2015 7:20 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Converting Simple PCM Samples to Pulse / Triangle / Nois</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />Yes you can do PCM, but like tokumaru said...<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">PCM consumes all of the CPU time</div><br /><br />And, DPCM consumes almost none, and at the highest sample rate, is not so bad. You can have understandable speech (&quot;fight&quot;) and decent drum samples.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>ccovell</b> [ Tue Oct 27, 2015 8:58 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Converting Simple PCM Samples to Pulse / Triangle / Nois</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Espozo wrote:</div><div class="quotecontent">...using the VRC7. Isn't that in conjunction with the 2A03 practically the Genesis's sound hardware?</div><br />The VRC7 is a cut-down version of the FM chip used in the Japanese Master System.  Compare JP SMS FM music (on YouTube, 'natch) to the usual great Genesis stuff, and you should be able to hear the relative timbral simplicity of the SMS' FM.<br /><br />For the technical reason as to why they're different, look up OPLL versus OPN2 FM.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Tue Oct 27, 2015 9:38 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Converting Simple PCM Samples to Pulse / Triangle / Nois</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Espozo wrote:</div><div class="quotecontent"><div class="quotetitle">tepples wrote:</div><div class="quotecontent">which uses ARDI</div><br />What's that?</div><br />A MIDI-based Super NES sound engine developed by Interplay.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Doesn't the NES not support PCM samples though?</div><br />It does, just not in the background. <em>Big Bird's Hide and Speak</em> uses it, as does the <a href="http://forums.nesdev.com/viewtopic.php?t=4965" class="postlink">Rickroll demo</a>.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>dougeff</b> [ Wed Oct 28, 2015 5:35 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Converting Simple PCM Samples to Pulse / Triangle / Nois</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />I said earlier that NES doesn't use FM. But, now that I looked up VRC7 i see that exactly 1 Japanese game used an FM chip...Lagrange Point.<br /><br /><!-- m --><a class="postlink" href="https://youtu.be/drwX7MbB_IE">https://youtu.be/drwX7MbB_IE</a><!-- m --><br /><br />Weird, it has such an un-NES quality. Especially those bass lines.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tokumaru</b> [ Wed Oct 28, 2015 6:56 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Converting Simple PCM Samples to Pulse / Triangle / Nois</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Espozo wrote:</div><div class="quotecontent">Doesn't the NES not support PCM samples though?</div><br />Yes, but like I said, there's no automatic mechanism to stream the data from memory, like there is for DPCM. You must make a program that will read the samples from ROM/RAM and write them to the appropriate APU register in a timely fashion, and while the program is doing that it can't possibly run a game engine at the same time.<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">And I'm assuming the reason PCM samples are processor intensive is the same reason as swapping PCM samples on the SNES?</div><br />Not really... If my understanding of how SNES audio works is correct, sending the samples to the audio RAM is the slow part, but once that's done, the samples can be played back at no cost. And even if you need to change the data over time, you at least have a buffer to make it easier. On the NES, you can never stop sending bytes to the APU, otherwise the gaps would cause audible glitches. Even the sprite DMA, which consumes around 514 consecutive CPU cycles, is troublesome.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Drew Sebastino</b> [ Wed Oct 28, 2015 7:56 pm ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Converting Simple PCM Samples to Pulse / Triangle / Nois</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />So really though, switching instruments mid song on the SNES shouldn't be that hard, that is, if these instruments aren't played right after each other. There are 60 frames in a second, so if you where to about 32 bytes over in a frame, you'd send over 1920 bytes a second, so about 2KB, which should be about perfect. (When changing an instrument, it's always all right to start the instrument before actually finishing writing it to audio ram, just as long as you finish writing it in time.) I don't think sending 32 bytes over a frame should be difficult. You know, at 32000hz, how many KB of instrument data would you go through in one second?

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>1</strong> of <strong>2</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>