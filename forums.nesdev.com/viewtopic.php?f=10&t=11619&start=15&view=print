<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html dir="ltr" lang="en-gb">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Language" content="en-gb">
<title>nesdev.com :: View topic - Need some help and advice with my collision detection</title>

<style type="text/css">
<!--

body {
	font-family: Verdana,serif;
	font-size: 10pt;
}

img {
	border: 0;
}

td {
	font-family: Verdana,serif;
	font-size: 10pt;
	line-height: 150%;
}

.code, .codecontent, 
.quote, .quotecontent {
	margin: 0 5px 0 5px;
	padding: 5px;
	font-size: smaller;
	border: black solid 1px;
}

.quotetitle {
	color: black;
	display : block;
	font-weight: bold;
}

.forum {
	font-family: Arial,Helvetica,sans-serif;
	font-weight: bold;
	font-size: 18pt;
}

.topic {
	font-family: Arial,Helvetica,sans-serif;
	font-size: 14pt;
	font-weight: bold;
}

.gensmall {
	font-size: 8pt;
}

hr {
	color: #888;
	height: 3px;
	border-style: solid;
}

hr.sep {
	color: #aaa;
	height: 1px;
	border-style: dashed;
}
//-->
</style>

</head>
<body>

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td colspan="2" align="center"><span class="Forum">nesdev.com</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/">http://forums.nesdev.com/</a></span></td>
</tr>
<tr>
	<td colspan="2"><br /></td>
</tr>
<tr>
	<td><span class="topic">Need some help and advice with my collision detection</span><br /><span class="gensmall"><a href="http://forums.nesdev.com/viewtopic.php?f=10&amp;t=11619">http://forums.nesdev.com/viewtopic.php?f=10&amp;t=11619</a></span></td>
	<td align="right" valign="bottom"><span class="gensmall">Page <strong>2</strong> of <strong>2</strong></span></td>
</tr>
</table>



	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>tepples</b> [ Sat Sep 13, 2014 6:43 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Need some help and advice with my collision detection</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Sik wrote:</div><div class="quotecontent"><div class="quotetitle">Kasumi wrote:</div><div class="quotecontent">Does $2005/$2000 really have to be written every frame?</div><br />Yes, because the address completely changes after it rendered the entire screen (the address keeps changing as it fetches the pixels for the background).</div><br />How so? If you change <em>t</em> (top of screen) through $2005, and you don't modify the background through $2005-$2007, then the PPU will keep the scroll in the same position. (In &quot;skinny&quot; terms, this is the <em>v := t</em>, or set video memory pointer to top of screen, that occurs in the vsync after the pre-render line.) But if you're planning to scroll, you should plan on setting $2005 every frame for two reasons: 1. you'll be loading new map data at the edge of the screen, and 2. the camera will be moving.

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>SNgamer</b> [ Sat Sep 13, 2014 7:40 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Need some help and advice with my collision detection</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Kasumi wrote:</div><div class="quotecontent">Okay, figured it out. Here's a ROM (Let me know if you want it removed, it's here to prove I'm not nuts), as well as the changes. If the changes I listed don't give you this result, tell me and I will find out what I forgot.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">main:;checks for collision<br />bit $2002<br />bpl main<br />lda $0204;vert pos of metasprite<br />clc<br />adc #$09<br />lsr a<br />lsr a<br />lsr a<br />sta ypos<br />lda $0207;hor pos of metasprite<br />lsr a<br />lsr a<br />lsr a<br />sta xpos<br /></div><br />I made your main loop actually wait for the vblank to start (bit $2002, bpl). There are better ways to do this which I hope I'll remember to list in another post, but I have something to do like right now.<br /><br />I changed your CLC, RORs to LSR A. LSR ignores the carry, so no need to CLC. LSR is identical to CLC, then ROR basically. (Both of these may not have had much to do with the problem, but when I didn't list everything and tried it, it didn't work.)<br /></div><br />I also remembered some opcode that would act like clc+ror combo (so carry is not shifted into the accumulator), but i could not remember what that was, so i sticked with clc+ror<br />thanks for this one<br /><br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">I added this to the end of your NMI:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">lda #$80<br />sta $2000<br /><br />lda #$00 <br />sta $2005<br />sta $2005</div><br />This sets the scroll every frame. It's good practice to do it every frame, even if it doesn't change. A bit $2002 before those $2005 writes would be the most safe, but you cannot do this because of it messes up the frame wait stuff I mentioned above. (Which is part of why there are other ways to do it that I can't cover right this minute)<br /></div><br />is it really necessary to enable NMI at the end of every frame? or is this in order to reset scroll position? i am a bit confused on this one, maybe you can find some time to explain later.<br /><div class="quotetitle"><b>Quote:</b></div><div class="quotecontent">Finally, I did this:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">lda $0204;vert pos of metasprite<br />clc<br />adc #$09<br />lsr a<br />lsr a<br />lsr a<br />sta ypos</div><br />The PPU draws sprites one pixel lower than the position you give it. (A y position of 0 will be drawn on scanline 1, etc.) So I added 1 here to compensate.<br /></div><br />this is something i did not know, this is very useful info

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>Kasumi</b> [ Sat Sep 13, 2014 8:10 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Need some help and advice with my collision detection</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" /><div class="quotetitle">Kasumi wrote:</div><div class="quotecontent">There are better ways to do this which I hope I'll remember to list in another post, but I have something to do like right now.</div><br />That errand is now complete, so back to this. An easy to wait for vblank is this:<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">main:;checks for collision<br />lda vblankoccurred;A new variable you must define<br />mainvblankwait:<br />cmp vblankoccurred<br />beq mainvblankwait<br /></div><br />It loads the value of vblankoccurred in A before the loop, then compares that value to vblankoccurred. It counts on the NMI to change vblankoccurred during the loop. So in your NMI, you just need this somewhere to break that loop:<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">inc vblankoccurred;whatever it was, it's now different so the loop will break<br /></div><br /><a href="http://wiki.nesdev.com/w/index.php/NMI#Race_condition" class="postlink">It's also good to do this because using bit $2002, bpl can occasionally miss frames.</a><br /><br />With your main loop now running once per frame instead of constantly, you can move the code that animates your character to the main loop instead of the NMI. It doesn't matter much in this case, but it's good practice to have nothing in the NMI that doesn't absolutely need to be there. (Sprite DMA, tile updates that need to be done during gameplay need to be there. Music engine doesn't need to be but is cool to put there after the required stuff is done, just so music won't slow down if your main loop is running too many things.)<br /><br />Already covered lsr/clc, ror. One other tiny note is that you occasionally compare with 0 when it isn't required.<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">lda yadd<br />cmp #$00<br />beq rts_le<br /></div><br />In that case you can remove the cmp and the program will work exactly the same, because lda will set the zero flag if what was loaded is equal to zero.<br /><br />The last thing to mention is (indexed),y addressing which may help you avoid large cmp, branch trees when your game gets larger. It allows you to load from an address you can change, rather than one specified at compile time the way a label's is.<br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">lda #&lt;level0;Low byte of this label's address<br />sta addr;Addr pointing to the first of two bytes of zero page RAM<br /><br />lda #&gt;level0;high byte of this label's address<br />sta addr+1;Addr+1 is the second of two bytes of zero page RAM<br /><br />;With the label's address now in contiguous zero page RAM, the following statements will get the same value in A<br />lda level0,y<br />lda (addr),y<br /></div><br /><br />This is useful. Right now, you have your one screen broken up into 4 labels to access more than 256 bytes. Instead, you could use (indexed),y and change the location of the pointer to go further than 256 bytes under the label. (But you have to use y instead of x like you're doing now since indexed,x does something different.)<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">lda ypos<br />lsr<br />lsr<br />lsr<br />tax<br />beq skipaddressfix<br />addressfixloop:<br />inc addr+1;(this adds 256 bytes to the pointer, so each time the ypos divided goes up one, the pointer will access the next 256 bytes of data)<br />dex<br />bne addressfixloop<br />skipaddressfix:<br /></div><br />Doing this and using (indexed),y allows you avoid all the quadrupled up code underneath le1, le2, and le3. With le0 using indexed, it's all you'd need. And again, it doesn't matter much in this case, but once your game has more data having to evenly space labels would get tedious, so that's a good thing to learn about. <br /><br /><div class="quotetitle">SNgamer wrote:</div><div class="quotecontent">is it really necessary to enable NMI at the end of every frame? or is this in order to reset scroll position?</div><br />Solely to set the scrolling nametable again, heh. It's a bit sloppy. A nicer way to do it is to keep the last value in $2000 in a mirror in RAM. Then you can perform bitwise logic to it.<br /><br /><div class="codetitle"><b>Code:</b></div><div class="codecontent">lda mirror2000<br />and #%11111100;The first nametable is ensured, nothing else is changed<br />sta $2000<br />sta mirror2000<br /></div>

		

		</td>
	</tr>
	</table>


	<hr width="85%" />

	<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
	<tr>
		<td width="10%" nowrap="nowrap">Author:&nbsp;</td>
		<td><b>SNgamer</b> [ Sat Sep 13, 2014 9:20 am ]</td>
	</tr>
	<tr>
		<td width="10%" nowrap="nowrap">Post subject:&nbsp;</td>
		<td><b>Re: Need some help and advice with my collision detection</b></td>
	</tr>
	<tr>
		<td colspan="2"><hr class="sep" />thank you for your tips, i very appreciate them. these will improve my programs heavily (as i now see that i have them coded in very untidy and inefficent way  <img src="./images/smilies/icon_redface.gif" alt=":oops:" title="Embarassed" /> )

		

		</td>
	</tr>
	</table>


<hr width="85%" />

<table width="85%" cellspacing="3" cellpadding="0" border="0" align="center">
<tr>
	<td><span class="gensmall">Page <strong>2</strong> of <strong>2</strong></span></td>
	<td align="right"><span class="gensmall">All times are UTC - 7 hours </span></td>
</tr>
<tr>
	<td colspan="2" align="center"><span class="gensmall">Powered by phpBB&reg; Forum Software &copy; phpBB Group<br />http://www.phpbb.com/</span></td>
</tr>
</table>

</body>
</html>